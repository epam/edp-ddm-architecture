openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
paths:
  /internal-api/v2/documents/{rootProcessInstanceId}:
    post:
      tags:
        - internal-api-document-controller-v-2
      summary: Upload MultiPart document
      description: Returns uploaded document metadata
      operationId: upload
      parameters:
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: filename
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalApiDocumentMetadataDto'
  /internal-api/documents/{rootProcessInstanceId}:
    post:
      tags:
        - internal-api-document-controller
      summary: Upload document
      description: Returns uploaded document metadata
      operationId: upload_1
      parameters:
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteDocumentDto'
        required: true
      responses:
        '201':
          description: Returns uploaded document metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RemoteDocumentMetadataDto'
  /documents/{rootProcessInstanceId}/{taskId}/{fieldName}:
    post:
      tags:
        - document-controller
      summary: Upload document
      description: Returns uploaded document metadata
      operationId: upload_2
      parameters:
        - name: x-forwarded-host
          in: header
          required: true
          schema:
            type: string
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          required: true
          schema:
            type: string
        - name: filename
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Returns uploaded document metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDto'
  /documents/{rootProcessInstanceId}/{taskId}/search:
    post:
      tags:
        - document-controller
      summary: Search documents metadata
      description: Returns list of documents metadata
      operationId: searchMetadata
      parameters:
        - name: x-forwarded-host
          in: header
          required: true
          schema:
            type: string
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMetadataSearchRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentMetadataDto'
  /internal-api/documents/{rootProcessInstanceId}/{id}:
    get:
      tags:
        - internal-api-document-controller
      summary: Download document by id
      description: Returns document by id
      operationId: download
      parameters:
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /internal-api/documents/{rootProcessInstanceId}/{id}/metadata:
    get:
      tags:
        - internal-api-document-controller
      summary: Get document metadata by id
      description: Returns document metadata by document id
      operationId: getMetadata
      parameters:
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalApiDocumentMetadataDto'
  /documents/{rootProcessInstanceId}/{taskId}/{fieldName}/{id}:
    get:
      tags:
        - document-controller
      summary: Download document by id
      description: Returns document by id
      operationId: download_1
      parameters:
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /documents/{rootProcessInstanceId}:
    delete:
      tags:
        - document-controller
      operationId: delete
      parameters:
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /documents/{rootProcessInstanceId}/{taskId}/{fieldName}/{fileId}:
    delete:
      tags:
        - document-controller
      summary: Delete document by id
      operationId: deleteByFileId
      parameters:
        - name: rootProcessInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          required: true
          schema:
            type: string
        - name: fieldName
          in: path
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
components:
  schemas:
    InternalApiDocumentMetadataDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        checksum:
          type: string
        size:
          type: integer
          format: int64
    RemoteDocumentDto:
      type: object
      properties:
        remoteFileLocation:
          type: string
          format: url
        filename:
          type: string
    RemoteDocumentMetadataDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        checksum:
          type: string
        size:
          type: integer
          format: int64
    DocumentMetadataDto:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        name:
          type: string
        type:
          type: string
        checksum:
          type: string
        size:
          type: integer
          format: int64
    DocumentIdDto:
      required:
        - fieldName
        - id
      type: object
      properties:
        id:
          type: string
        fieldName:
          type: string
    DocumentMetadataSearchRequestDto:
      required:
        - documents
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentIdDto'
