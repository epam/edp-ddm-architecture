openapi: 3.0.1
info:
  title: 'v1-alpha: User process management API'
  version: 'v1-alpha'
  description: All user process management operations
paths:
  /api/process-definition/{key}/start:
    post:
      tags:
        - process-definition-controller
      summary: Start process instance
      description: Returns started process instance
      operationId: startProcessInstance
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns started process instance
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StartProcessInstanceResponse'
        '404':
          description: Business process definition hasn't found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
  /api/process-definition/{key}/start-with-form:
    post:
      tags:
        - process-definition-controller
      summary: Start process instance with form
      description: Returns started process instance
      operationId: startProcessInstanceWithForm
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDataDto'
        required: true
      responses:
        '200':
          description: Returns started process instance
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StartProcessInstanceResponse'
        '404':
          description: Business process definition hasn't found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        '500':
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
  /api/process-instance/count:
    get:
      tags:
        - process-instance-controller
      summary: Retrieve count of all unfinished process instances with root process instance
      description: Returns business process instances count
      operationId: countProcessInstances
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CountResponse'
  /api/process-definition:
    get:
      tags:
        - process-definition-controller
      summary: Retrieve all process definitions
      description: Returns business process definitions list
      operationId: getProcessDefinitions
      parameters:
        - name: params
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GetProcessDefinitionsParams'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessDefinitionResponse'
  /api/process-definition/{key}:
    get:
      tags:
        - process-definition-controller
      summary: Retrieve process definition by key
      description: Returns business process definition entity
      operationId: getProcessDefinitionByKey
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessDefinitionResponse'
  /api/process-definition/count:
    get:
      tags:
        - process-definition-controller
      summary: Retrieve count of all process definitions
      description: Returns business process definitions count
      operationId: countProcessDefinitions
      parameters:
        - name: params
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GetProcessDefinitionsParams'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CountResponse'
  /api/officer/process-instance:
    get:
      tags:
        - process-instance-controller
      summary: Retrieve all process instances for the officer role
      description: Returns business process instances list
      operationId: getOfficerProcessInstances
      parameters:
        - name: firstResult
          in: query
          description: Pagination of results. Specifies the index of the first result to return.
          schema:
            type: integer
        - name: maxResult
          in: query
          description: Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Sort the results lexicographically by a given criterion. Valid values are instanceId, caseInstanceId, dueDate, executionId, caseExecutionId,assignee, created, description, id, name, nameCaseInsensitive and priority. Must be used in conjunction with the sortOrder parameter.
          schema:
            type: string
        - name: sortOrder
          in: query
          description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.
          schema:
            type: string
      responses:
        '200':
          description: Business process instances list
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/GetProcessInstanceResponse'
              example:
                - id: 4ce5cc26-33ab-11eb-adc1-0242ac120002
                  processDefinitionId: processDefinitionId
                  processDefinitionName: processDefinition
                  startTime: '2020-12-01T12:00:00'
                  status:
                    code: in_progress
                    title: У виконанні
  /api/grouped-process-definition:
    get:
      tags:
        - grouped-process-definition-controller
      summary: Retrieve all process definitions with groups
      description: Returns grouped and ungrouped business process definitions ordered lists
      operationId: getProcessDefinitions_1
      parameters:
        - name: params
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GetProcessDefinitionsParams'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupedProcessDefinitionResponse'
  /api/citizen/process-instance:
    get:
      tags:
        - process-instance-controller
      summary: Retrieve all process instances for the citizen role
      description: Returns business process instances list
      operationId: getCitizenProcessInstances
      parameters:
        - name: firstResult
          in: query
          description: Pagination of results. Specifies the index of the first result to return.
          schema:
            type: integer
        - name: maxResult
          in: query
          description: Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Sort the results lexicographically by a given criterion. Valid values are instanceId, caseInstanceId, dueDate, executionId, caseExecutionId,assignee, created, description, id, name, nameCaseInsensitive and priority. Must be used in conjunction with the sortOrder parameter.
          schema:
            type: string
        - name: sortOrder
          in: query
          description: Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.
          schema:
            type: string
      responses:
        '200':
          description: Business process instances list
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/GetProcessInstanceResponse'
              example:
                - id: 4ce5cc26-33ab-11eb-adc1-0242ac120002
                  processDefinitionId: processDefinitionId
                  processDefinitionName: processDefinition
                  startTime: '2020-12-01T12:00:00'
                  status:
                    code: citizen_in_progress
                    title: Прийнято в обробку
components:
  schemas:
    SystemErrorDto:
      type: object
      properties:
        traceId:
          type: string
        code:
          type: string
        message:
          type: string
        localizedMessage:
          type: string
    StartProcessInstanceResponse:
      type: object
      properties:
        id:
          type: string
        processDefinitionId:
          type: string
        ended:
          type: boolean
    FormDataDto:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: object
        signature:
          type: string
        x-access-token:
          type: string
    CountResponse:
      type: object
      properties:
        count:
          type: integer
          format: int64
    GetProcessDefinitionsParams:
      type: object
      properties:
        active:
          type: boolean
        suspended:
          type: boolean
    ProcessDefinitionResponse:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        suspended:
          type: boolean
        formKey:
          type: string
    GetProcessInstanceResponse:
      type: object
      properties:
        id:
          type: string
        processDefinitionId:
          type: string
        processDefinitionName:
          type: string
        startTime:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusModel'
    StatusModel:
      type: object
      properties:
        code:
          type: string
          enum:
            - ACTIVE
            - PENDING
            - SUSPENDED
            - COMPLETED
            - EXTERNALLY_TERMINATED
            - INTERNALLY_TERMINATED
        title:
          type: string
    GroupedProcessDefinitionResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/ProcessDefinitionGroup'
        ungrouped:
          type: array
          items:
            $ref: '#/components/schemas/ProcessDefinitionResponse'
    ProcessDefinitionGroup:
      type: object
      properties:
        name:
          type: string
        processDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/ProcessDefinitionResponse'
