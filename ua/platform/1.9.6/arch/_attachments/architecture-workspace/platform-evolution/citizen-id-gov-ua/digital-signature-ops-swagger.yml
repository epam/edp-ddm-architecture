openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
paths:
  /api/key/decrypt:
    post:
      tags:
        - digital-key-controller
      summary: Returns decrypted user info data
      description: Decrypts user info data
      operationId: decryptUserInfo
      parameters:
        - in: query
          name: keyName
          schema:
            type: string
          required: false
          description: Name of the key to use for the operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecryptUserInfoRequest'
        required: true
      responses:
        '200':
          description: Request processed successfully and user info data is returned in body
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
  /api/file/sign:
    post:
      tags:
        - digital-signature-file-controller
      summary: Signs file in specified Ceph bucket
      description: Applies system signature to file in Ceph and updates it in storage
      operationId: sign
      parameters:
        - in: query
          name: keyName
          schema:
            type: string
          required: false
          description: Name of the key to use for the operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignFileRequestDto'
        required: true
      responses:
        '200':
          description: File signed and updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignFileResponseDto'
        '404':
          description: File not found in storage
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignFileResponseDto'
        '500':
          description: Internal server error in case of error at any processing steps
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignFileResponseDto'
  /api/eseal/sign:
    post:
      tags:
        - digital-seal-controller
      summary: Signs data passed in request
      description: Applies digital signature by system key for requested data
      operationId: sign_1
      parameters:
        - in: query
          name: keyName
          schema:
            type: string
          required: false
          description: Name of the key to use for the operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignRequestDto'
        required: true
      responses:
        '200':
          description: Request processed successfully signature returned in body
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignResponseDto'
        '400':
          description: Passed headers or request body has invalid syntax
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignResponseDto'
        '500':
          description: Internal server error in case of error at any processing steps
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignResponseDto'
  /api/key/certificate:
    get:
      tags:
        - digital-key-controller
      summary: Returns private key certificate initialized in application
      description: Certificate is Base64 cert file encoded to url representation
      operationId: certificate
      parameters:
        - in: query
          name: keyName
          schema:
            type: string
          required: false
          description: Name of the key to use for the operation
      responses:
        '200':
          description: Request processed successfully and certificate is returned in body
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CertificateResponse'
components:
  schemas:
    DecryptUserInfoRequest:
      type: object
      properties:
        encryptedUserInfo:
          type: string
    UserInfoResponse:
      type: object
      properties:
        issuer:
          type: string
        issuercn:
          type: string
        serial:
          type: string
        subject:
          type: string
        subjectcn:
          type: string
        locality:
          type: string
        state:
          type: string
        o:
          type: string
        ou:
          type: string
        title:
          type: string
        lastname:
          type: string
        middlename:
          type: string
        givenname:
          type: string
        email:
          type: string
        address:
          type: string
        phone:
          type: string
        dns:
          type: string
        edrpoucode:
          type: string
        drfocode:
          type: string
    SignFileRequestDto:
      required:
        - cephKey
      type: object
      properties:
        cephKey:
          type: string
    SignFileResponseDto:
      type: object
      properties:
        signed:
          type: boolean
    VerificationRequestDto:
      required:
        - data
        - signature
      type: object
      properties:
        signature:
          type: string
        data:
          type: string
    ErrorDto:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        localizedMessage:
          type: string
    VerificationResponseDto:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorDto'
        valid:
          type: boolean
    VerifySubjectRequestDto:
      required:
        - allowedSubjects
        - data
        - signature
      type: object
      properties:
        allowedSubjects:
          type: array
          items:
            type: string
            enum:
              - INDIVIDUAL
              - ENTREPRENEUR
              - LEGAL
        signature:
          type: string
        data:
          type: string
    VerifySubjectResponseDto:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorDto'
        valid:
          type: boolean
    SignRequestDto:
      required:
        - data
      type: object
      properties:
        data:
          type: string
    SignResponseDto:
      type: object
      properties:
        signature:
          type: string
    CertificateResponse:
      type: object
      properties:
        certificate:
          type: string
