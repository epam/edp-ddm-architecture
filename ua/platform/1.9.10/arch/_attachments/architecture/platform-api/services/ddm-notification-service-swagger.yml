openapi: 3.0.3
info:
  title: User notifications service
  description: This document describes REST API of 'User notifications service'
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: notification-template-api
  description: User notification template management Rest API
- name: notification-inbox-api
  description: User inbox notification management Rest API
paths:
  /api/notifications/templates/{channel}:{name}:
    put:
      tags:
      - notification-template-api
      summary: Model notification templates separately for each of the communication
        channels
      description: "### Endpoint purpose: \n This endpoint provides an opportunity\
        \ to model notification templates separately for each of the communication\
        \ channels. \n ### Authorization:\n This endpoint requires valid user authentication.\
        \ To access this endpoint, the request must include a valid access token in\
        \ the _X-Access-Token_ header, otherwise, the API will return a _401 Unauthorized_\
        \ status code"
      operationId: saveTemplate
      parameters:
      - name: X-Access-Token
        in: header
        description: User access token
        schema:
          type: string
      - name: channel
        in: path
        description: |-
          Communication channel for using the message template. Unique in combination with name

          inbox - Citizen portal

          email - email

          diia - Diia application (Ukrainian citizen-facing solution, UA-specific)
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Template message internal name. Unique in combination with channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveNotificationTemplateInputDto'
            example:
              title: New notification
              content: Hello world
              attributes:
              - name: attribute1
                value: value1
              - name: attribute2
                value: value2
        required: true
      responses:
        "200":
          description: OK. Notification templates successfully saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveNotificationTemplateOutputDto'
              example:
                name: Notification Template 1
                channel: email
                title: New notification
                content: Hello world
                checksum: "1234567890"
                attributes:
                - name: attribute1
                  value: value1
                - name: attribute2
                  value: value2
                createdAt: 2022-01-01T12:00:00.000Z
                updatedAt: 2022-01-02T12:00:00.000Z
                externalTemplateId: abcd1234
                externallyPublishedAt: 2022-01-03T12:00:00.000Z
        "400":
          description: Bad Request.
          content:
            application/json: {}
        "401":
          description: Unauthorized. Missing or invalid access token or digital signature.
          content:
            application/json: {}
        "500":
          description: Internal Server Error. Server error while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /api/notifications/inbox/{id}/ack:
    post:
      tags:
      - notification-inbox-api
      summary: Confirmation of in-app message
      description: "### Endpoint purpose: \n This endpoint is used for confirming\
        \ notification about the status or result of the business process, receiving\
        \ official messages.\n ### Authorization:\n This endpoint requires valid user\
        \ authentication. To access this endpoint, the request must include a valid\
        \ access token in the _X-Access-Token_ header, otherwise, the API will return\
        \ a _401 Unauthorized_ status code. If the user's ID provided in the JWT token\
        \ does not match the recipient ID of the message, a 403 Forbidden error will\
        \ be returned. Only the recipient of the notification can update its state"
      operationId: acknowledgeNotification
      parameters:
      - name: X-Access-Token
        in: header
        description: User access token
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Notification id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK. Inbox notification successfully acknowledged.
        "400":
          description: Bad Request.
          content:
            application/json: {}
        "401":
          description: Unauthorized. Missing or invalid access token or digital signature.
          content:
            application/json: {}
        "403":
          description: Forbidden. Insufficient permissions to perform the operation.
          content:
            application/json: {}
        "500":
          description: Internal Server Error. Server error while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /api/notifications/templates:
    get:
      tags:
      - notification-template-api
      summary: Retrieve all notification templates
      description: |-
        ### Endpoint purpose:
         This endpoint allows users to retrieve notification template list
      operationId: getAllTemplates
      parameters:
      - name: X-Access-Token
        in: header
        description: User access token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of notification templates
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTemplateShortInfoResponseDto'
              example:
              - id: 7fd7ebeb-dbc4-4384-afec-878c17b23728
                name: Notification Template 1
                channel: email
              - id: 9593bf66-7717-4c56-bdb9-d1660198e402
                name: Notification Template 2
                channel: email
        "401":
          description: Unauthorized. Missing or invalid access token.
          content:
            application/json: {}
        "500":
          description: Internal Server Error. Server error while processing the request.
          content:
            application/json: {}
  /api/notifications/inbox:
    get:
      tags:
      - notification-inbox-api
      summary: Viewing the list of in-app messages
      description: "### Endpoint purpose: \n This endpoint is used for viewing notifications\
        \ about the status or result of the business process, receiving official messages.\n\
        \ ### Authorization:\n This endpoint requires valid user authentication. To\
        \ access this endpoint, the request must include a valid access token in the\
        \ _X-Access-Token_ header, otherwise, the API will return a _401 Unauthorized_\
        \ status code"
      operationId: getInboxNotifications
      parameters:
      - name: X-Access-Token
        in: header
        description: User access token
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: Record offset
        required: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Maximum number of records to return
        required: true
        schema:
          type: integer
          default: 10
      - name: sort
        in: query
        description: "Field and order for sorting the records. Example: asc(<field>)\
          \ / desc(<field>)"
        required: true
        schema:
          type: string
          default: desc(endTime)
      - name: request
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InboxOffsetBasedPageRequest'
      responses:
        "200":
          description: OK. List of inbox notifications successfully retrieved.
          content:
            application/json:
              example:
              - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                subject: Some subject
                message: Some message
                isAcknowledged: true
                createdAt: 2021-08-10T10:30:00.000Z
        "400":
          description: Bad Request.
          content:
            application/json: {}
        "401":
          description: Unauthorized. Missing or invalid access token or digital signature.
          content:
            application/json: {}
        "500":
          description: Internal Server Error. Server error while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /api/notifications/templates/{id}:
    delete:
      tags:
      - notification-template-api
      summary: Deletes a notification template
      description: |-
        ### Endpoint purpose:
         This endpoint allows users to remove notification template based on its unique identifier.
      operationId: deleteTemplate
      parameters:
      - name: X-Access-Token
        in: header
        description: User access token
        schema:
          type: string
      - name: id
        in: path
        description: Unique identifier of the notification template
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted the notification template
          content:
            application/json: {}
        "401":
          description: Unauthorized. Missing or invalid access token.
          content:
            application/json: {}
        "500":
          description: Internal Server Error. Server error while processing the request.
          content:
            application/json: {}
components:
  schemas:
    NotificationTemplateAttributeDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    SaveNotificationTemplateInputDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplateAttributeDto'
    SaveNotificationTemplateOutputDto:
      type: object
      properties:
        name:
          type: string
        channel:
          type: string
        title:
          type: string
        content:
          type: string
        checksum:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplateAttributeDto'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        externalTemplateId:
          type: string
        externallyPublishedAt:
          type: string
          format: date-time
    DetailedErrorResponse:
      type: object
      properties:
        traceId:
          type: string
        code:
          type: string
        details:
          type: object
    NotificationTemplateShortInfoResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        channel:
          type: string
    InboxOffsetBasedPageRequest:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
