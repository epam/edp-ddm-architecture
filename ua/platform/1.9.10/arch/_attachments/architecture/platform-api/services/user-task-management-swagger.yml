openapi: 3.0.3
info:
  title: User task management API
  description: All user task management operations
  version: "1.0"
servers:
- url: http://localhost:7070/user-task-management
  description: Generated server url
tags:
- name: user-task-management-api
  description: User task management Rest API
paths:
  /api/task/{id}/save:
    post:
      tags:
      - user-task-management-api
      summary: Save form data
      description: |-
        ### Endpoint purpose:
        This endpoint allows to save form data to temporary storage without task completion.
        ### Authorization:
        If user assigned to task does not match user retrieved from _X-Access-Token_ then _403 Forbidden_ status code returned.
        ### Form validation:
        This endpoint requires valid form, if form provided in request body does not match form structure assigned to task, then _422_ status code returned.
      operationId: saveFormData
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: User preferred language
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDataDto'
            example:
              data:
                formFieldName1: field value 1
                formFieldName2: field value 2
        required: true
      responses:
        "200":
          description: Form data successfully saved
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "404":
          description: Task hasn't found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "422":
          description: Form data validation error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidationErrorDto'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
  /api/task/{id}/complete:
    post:
      tags:
      - user-task-management-api
      summary: Complete task by id
      description: |-
        ### Endpoint purpose:
         This endpoint allows users to complete a specific task by providing its unique identifier. Users must include the necessary data in the request body using a FormDataDto. Upon successful completion, information about the completed task is returned.
        ### Authorization:
         If user assigned to task does not match user retrieved from _X-Access-Token_ then _403 Forbidden_ status code returned.
        ### Form validation:
         This endpoint requires valid form, if form provided in request body does not match form structure assigned to task, then _422_ status code returned.
      operationId: completeTaskById
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: User preferred language
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDataDto'
            example:
              data:
                formFieldName1: field value 1
                formFieldName2: field value 2
        required: true
      responses:
        "200":
          description: Task successfully completed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompletedTaskResponse'
              example:
                id: d5a4eddf-6360-11ee-88e8-0a580a81041b
                processInstanceId: d5a40376-6360-11ee-88e8-0a580a81041b
                rootProcessInstanceId: d5a40376-6360-11ee-88e8-0a580a81041b
                rootProcessInstanceEnded: false
                variables: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "402":
          description: Occurred if try to complete payment task without completing
            the payment itself.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
              example:
                traceId: df5f480c5cd3ba52
                code: RestException
                message: "Cannot complete task fa1fdc6e-361a-4236-8d9e-a7ce126a03a5:\
                  \ ENGINE-03051 There was an exception while invoking the TaskListener.\
                  \ Message: 'Current task payment is not completed'"
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "404":
          description: Task hasn't found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "422":
          description: Form data is not valid
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
  /api/task/{id}/claim:
    post:
      tags:
      - user-task-management-api
      summary: Claim task by id
      description: |-
        ### Endpoint purpose:
        This endpoint allows users to claim a task by its unique identifier. Once a task is claimed, it becomes the responsibility of the user who claimed it and is no longer available for other users to claim.
      operationId: claimTaskById
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Task successfully claimed
        "404":
          description: Task hasn't found or already completed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "409":
          description: Task already assigned on another person
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
  /api/officer/task/{id}/sign-form:
    post:
      tags:
      - user-task-management-api
      summary: Sign and complete officer task by id
      description: |-
        ### Endpoint purpose:
        This endpoint allows officer to sign form data for a specific task. Users must provide the task's unique identifier and the required form data with signature in the request body. Upon successful signing, information about the task is returned.
        ### Authorization:
        If user assigned to task does not match user retrieved from _X-Access-Token_ then _403 Forbidden_ status code returned.
        ### Form and signature validation:
        This endpoint requires valid form, if form provided in request body does not match form structure assigned to task or verification of provided signature is failed, then _422_ status code returned.
      operationId: singOfficerForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: User preferred language
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDataDto'
            example:
              data:
                formFieldName1: field value 1
                formFieldName2: field value 2
              signature: Key-6.dat
        required: true
      responses:
        "200":
          description: Task successfully signed and completed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompletedTaskResponse'
              example:
                id: fed535d9-6360-11ee-88e8-0a580a81041b
                processInstanceId: d5a40376-6360-11ee-88e8-0a580a81041b
                rootProcessInstanceId: d5a40376-6360-11ee-88e8-0a580a81041b
                rootProcessInstanceEnded: true
                variables: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "404":
          description: Task hasn't found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "422":
          description: Task hasn't verified
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidationErrorDto'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
  /api/citizen/task/{id}/sign-form:
    post:
      tags:
      - user-task-management-api
      summary: Sign and complete citizen task by id
      description: |-
        ### Endpoint purpose:
        This endpoint allows citizen to sign form data for a specific task. Users must provide the task's unique identifier and the required form data with signature in the request body. Upon successful signing, information about the task is returned.
        ### Authorization:
        If user assigned to task does not match user retrieved from _X-Access-Token_ then _403 Forbidden_ status code returned.
        ### Form and signature validation:
        This endpoint requires valid form, if form provided in request body does not match form structure assigned to task or verification of provided signature is failed, then _422_ status code returned.
      operationId: signCitizenForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: User preferred language
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDataDto'
            example:
              data:
                formFieldName1: field value 1
                formFieldName2: field value 2
              signature: Key-6.dat
        required: true
      responses:
        "200":
          description: Task successfully signed and completed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompletedTaskResponse'
              example:
                id: fed535d9-6360-11ee-88e8-0a580a81041b
                processInstanceId: d5a40376-6360-11ee-88e8-0a580a81041b
                rootProcessInstanceId: d5a40376-6360-11ee-88e8-0a580a81041b
                rootProcessInstanceEnded: true
                variables: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "404":
          description: Task hasn't found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "422":
          description: Task hasn't verified
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidationErrorDto'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
  /api/task:
    get:
      tags:
      - user-task-management-api
      summary: Retrieve all tasks
      description: |-
        ### Endpoint purpose:
        This endpoint allows users to retrieve a list of tasks associated with a specified process instance or user. Users can optionally filter tasks by providing a process instance ID. Pagination is supported via the pageable parameter. The endpoint returns a list of UserTaskResponse objects, each representing a retrieved task.
      operationId: getTasks
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: processInstanceId
        in: query
        required: false
        schema:
          type: string
      - name: firstResult
        in: query
        description: Pagination of results. Specifies the index of the first result
          to return.
        schema:
          type: integer
      - name: maxResult
        in: query
        description: Pagination of results. Specifies the maximum number of results
          to return. Will return less results if there are no more results left.
        schema:
          type: integer
      - name: sortBy
        in: query
        description: "Sort the results lexicographically by a given criterion. Valid\
          \ values are instanceId, caseInstanceId, dueDate, executionId, caseExecutionId,assignee,\
          \ created, description, id, name, nameCaseInsensitive and priority. Must\
          \ be used in conjunction with the sortOrder parameter."
        schema:
          type: string
      - name: sortOrder
        in: query
        description: Sort the results in a given order. Values may be asc for ascending
          order or desc for descending order. Must be used in conjunction with the
          sortBy parameter.
        schema:
          type: string
      responses:
        "200":
          description: List of user tasks
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserTaskResponse'
              example:
              - id: 0b52527c-62ae-11ee-be57-0a580a810416
                taskDefinitionKey: UserTask_AddStatus
                name: my task name
                assignee: user
                created: 2023-10-04T12:03:34.884Z
                description: some description
                processDefinitionName: my process name
                processInstanceId: fd3187f5-62ad-11ee-be57-0a580a810415
                processDefinitionId: Process_160gicr:14:b8fa558e-62aa-11ee-be57-0a580a810416
                formKey: null
                suspended: false
                businessKey: null
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /api/task/{id}:
    get:
      tags:
      - user-task-management-api
      summary: Get task by id
      description: |-
        ### Endpoint purpose:
        This endpoint allows users to retrieve detailed information about a specific task by providing its unique identifier (ID). The task details include information such as task status, assignee, due date, and other relevant data.
      operationId: getTaskById
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns detailed task information
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserTaskWithDataResponse'
              example:
                id: 97839db1-62b2-11ee-be57-0a580a810415
                taskDefinitionKey: UserTask_SignSuccessfulStatusActivity
                name: Sign data
                assignee: user
                created: 2023-10-04T12:36:08.075Z
                description: null
                processInstanceId: 81ae5334-62b2-11ee-be57-0a580a810415
                rootProcessInstanceId: 81ae5334-62b2-11ee-be57-0a580a810415
                processDefinitionId: Process_160gicr:15:4ef94837-62b0-11ee-be57-0a580a810415
                processDefinitionName: my-process
                formKey: my-user-task-form
                suspended: false
                formVariables: {}
                signatureValidationPack: []
                data:
                  myField: myValue
                  submit: true
                esign: true
                payment: false
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemErrorDto'
        "500":
          description: Internal server error
          content:
            application/json: {}
  /api/task/lightweight:
    get:
      tags:
      - user-task-management-api
      summary: Retrieve all tasks
      description: |-
        ### Endpoint purpose:
        This endpoint allows users to retrieve a lightweight list of tasks associated with a specified process instance or user. Users can optionally filter tasks by providing a root process instance ID. The endpoint returns a list of lightweight user tasks. This lightweight version of the task list provides essential task details for efficient display purposes.
      operationId: getLightweightTasks
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: query
        required: false
        schema:
          type: string
      - name: firstResult
        in: query
        description: Pagination of results. Specifies the index of the first result
          to return.
        schema:
          type: integer
      - name: maxResult
        in: query
        description: Pagination of results. Specifies the maximum number of results
          to return. Will return less results if there are no more results left.
        schema:
          type: integer
      - name: sortBy
        in: query
        description: "Sort the results lexicographically by a given criterion. Valid\
          \ values are instanceId, caseInstanceId, dueDate, executionId, caseExecutionId,assignee,\
          \ created, description, id, name, nameCaseInsensitive and priority. Must\
          \ be used in conjunction with the sortOrder parameter."
        schema:
          type: string
      - name: sortOrder
        in: query
        description: Sort the results in a given order. Values may be asc for ascending
          order or desc for descending order. Must be used in conjunction with the
          sortBy parameter.
        schema:
          type: string
      responses:
        "200":
          description: List of user lightweight tasks
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserTaskLightweightResponse'
              example: |-
                [
                    {
                        "id": "0b52527c-62ae-11ee-be57-0a580a810416",
                        "assignee": "user",
                    },
                    {
                        "id": "0b52527c-62ae-11ee-be57-0a580a2132312",
                        "assignee": "user",
                    }
                ]
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /api/task/count:
    get:
      tags:
      - user-task-management-api
      summary: Retrieve count of all tasks
      description: |-
        ### Endpoint purpose:
        This endpoint allows to retrieve the total count of all available tasks for user.
      operationId: countTasks
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns detailed task information
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CountResponse'
              example: |-
                {
                    "count": 10,
                }
        "401":
          description: Unauthorized
          content:
            application/json: {}
components:
  schemas:
    FormDataDto:
      type: object
      properties:
        signature:
          type: string
        language:
          type: string
        x-access-token:
          type: string
    SystemErrorDto:
      type: object
      properties:
        traceId:
          type: string
        code:
          type: string
        message:
          type: string
        messageKey:
          type: string
    ErrorDetailDto:
      type: object
      properties:
        message:
          type: string
        messageKey:
          type: string
        field:
          type: string
        value:
          type: string
    ErrorsListDto:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetailDto'
    ValidationErrorDto:
      type: object
      properties:
        traceId:
          type: string
        code:
          type: string
        message:
          type: string
        messageKey:
          type: string
        details:
          $ref: '#/components/schemas/ErrorsListDto'
    CompletedTaskResponse:
      type: object
      properties:
        id:
          type: string
        processInstanceId:
          type: string
        rootProcessInstanceId:
          type: string
        rootProcessInstanceEnded:
          type: boolean
    UserTaskResponse:
      type: object
      properties:
        id:
          type: string
        taskDefinitionKey:
          type: string
        name:
          type: string
        assignee:
          type: string
        created:
          type: string
          format: date-time
        description:
          type: string
        processDefinitionName:
          type: string
        processInstanceId:
          type: string
        processDefinitionId:
          type: string
        formKey:
          type: string
        suspended:
          type: boolean
        businessKey:
          type: string
    UserTaskWithDataResponse:
      type: object
      properties:
        id:
          type: string
        taskDefinitionKey:
          type: string
        name:
          type: string
        assignee:
          type: string
        created:
          type: string
          format: date-time
        description:
          type: string
        processInstanceId:
          type: string
        rootProcessInstanceId:
          type: string
        processDefinitionId:
          type: string
        processDefinitionName:
          type: string
        formKey:
          type: string
        payment:
          type: boolean
        suspended:
          type: boolean
        signatureValidationPack:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - INDIVIDUAL
            - ENTREPRENEUR
            - LEGAL
        esign:
          type: boolean
    UserTaskLightweightResponse:
      type: object
      properties:
        id:
          type: string
        assignee:
          type: string
    CountResponse:
      type: object
      properties:
        count:
          type: integer
          format: int64
