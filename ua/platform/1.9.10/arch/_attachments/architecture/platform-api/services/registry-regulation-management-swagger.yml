openapi: 3.0.3
info:
  title: Registry regulations management
  description: This document describes REST API of 'Registry regulations admin-portal'
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: candidate-version-i18n-api
  description: Registry regulations version-candidate I18n management Rest API
- name: candidate-version-business-processes-api
  description: Registry regulations version-candidate Business processes management
    Rest API
- name: candidate-version-tables-api
  description: Registry regulations version-candidate tables management Rest API
- name: candidate-version-api
  description: Registry regulations version-candidate management Rest API
- name: master-version-api
  description: Registry regulations master version management Rest API
- name: master-version-data-model-tables-api
  description: Registry regulations master version data-model tables file management
    Rest API
- name: master-version-tables-api
  description: Registry regulations master version tables management Rest API
- name: candidate-version-business-process-groups-api
  description: Registry regulations candidate version Groups management Rest API
- name: candidate-version-settings-api
  description: Registry regulations version candidates settings Rest API
- name: master-version-i18n-api
  description: Registry regulations Master version I18n management Rest API
- name: candidate-version-data-model-tables-api
  description: Registry regulations version-candidate data-model tables file management
    Rest API
- name: master-version-settings-api
  description: Registry regulations Master version settings Rest API
- name: users-batch-loads-api
  description: Users bulk upload RestAPI
- name: master-version-forms-api
  description: Registry regulations Master version Forms management Rest API
- name: candidate-version-forms-api
  description: Registry regulations version-candidate Forms management Rest API
- name: master-version-business-process-groups-api
  description: Registry regulations Master version Groups management Rest API
- name: master-version-business-processes-api
  description: Registry regulations master Business processes management Rest API
- name: Redash Admin Reports Downloading
  description: redash-admin-dashboard-load-api
paths:
  /versions/master/i18n/{name}:
    get:
      tags:
      - master-version-i18n-api
      summary: Get specific i18n bundle full details
      description: |-
        ### Endpoint purpose:
        This endpoint is used for retrieving a JSON representation of a __i18n bundle__ directly from the __master__ version. This operation retrieves a single _i18n bundle_ based on the specified __name__. If you need to retrieve list of _i18n bundles_, you can use the [GET](#master-version-i18n-api/getI18nListFromMaster) endpoint.
      operationId: getI18n
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: I18n bundle name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: I18n bundle successfully retrieved.
          content:
            application/json:
              example:
                English translate: Some other language translate
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - master-version-i18n-api
      summary: Update existing i18n bundle within master version.
      description: |-
        ### Endpoint purpose:
        This endpoint is used for updating a json representation of a __i18n bundle__ directly in __master__ version. Just as if _version-candidate_ was created, the _i18n bundle_ was updated in that _version-candidate_ and then the _version-candidate_ was submitted. It can be used if there is needed to update __a single i18n bundle__. If you need to make some changes in several entities at one time, it's still preferred to make this changes through a _version-candidate_.
        ### Conflict resolving:
        In this endpoint [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, that can be previously obtained in [GET](#master-version-i18n-api/getI18n) request, as a value for __If-Match__ header so you can be sure that you're updating the last version of an _i18n bundle_. But if your __If-Match__ value is differs from the servers you will receive a _409 Conflict_ instead of _412 Precondition Failed_. For _registry-regulation-management_ service this situation's considered as a conflict. If __If-Match__ is not present then conflict checking won't be performed.
        ### I18n bundle validation:
        Before saving the content to the storage, the __validation__ of a _i18n bundle_ is executed. The _i18n bundle_ must be a __json__ document
         ### Missing i18n bundle handling:
         If the updated _i18n bundle_ is missing and the _If-Match_ header is not present (or equal to __"*"__) then the _i18n bundle_ will be __created__ instead.
      operationId: updateI18n
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: name
        in: path
        description: Name of the i18n bundle to be updated
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              English translate: Some other language translate
        required: true
      responses:
        "200":
          description: I18n bundle successfully updated.
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                English translate: Some other language translate
        "400":
          description: Request body is not a valid json
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that i18n bundle already has been updated/deleted after
            user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. I18n bundle is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - master-version-i18n-api
      summary: Create new i18n bundle within master
      description: |-
        ### Endpoint purpose:
        This endpoint is used for creating a JSON representation of a __i18n bundle__ directly in the __master__ version. It is intended for situations that require the creation of a new _i18n bundle_. This operation creates a single _i18n bundle_ and should be used when multiple resources do not need to be created or modified simultaneously. If you need to create or modify several resources at once, it is still recommended to use a _version-candidate_.
        ### I18n bundle validation:
        Before saving the new _i18n bundle_ to the storage, the server validates the _i18n bundle_. The _i18n bundle_ must be a valid __json__ document
        ### Missing i18n bundle handling:
        If the specified _i18n bundle_ does not already exist, the server will create a new _i18n bundle_ with the provided data. If the _i18n bundle_ does exists, the server will return a _409 Conflict_ error indicating that the _i18n bundle_ already exists.
      operationId: i18nCreate
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of the new i18n bundle to be created
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              English translate: Some other language translate
        required: true
      responses:
        "201":
          description: I18n bundle successfully created
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                English translate: Some other language translate
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. It means that i18n bundle already has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. I18n bundle is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
      - master-version-i18n-api
      summary: Delete existing i18n bundle within master
      description: |-
        ### Endpoint purpose:
        This endpoint is used for deleting a JSON representation of a __i18n bundle__ directly from the __master__ version.
        ### Conflict resolving:
        In this endpoint, [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, which can be previously obtained in a [GET](#master-version-i18n-api/getI18n) request, as a value for the __If-Match__ header. This ensures that you're deleting the latest version of the _i18n bundle_. However, if your __If-Match__ value differs from the server's value, you will receive _409 Conflict_ instead of _412 Precondition Failed_. For the _registry-regulation-management_ service, this situation is considered a conflict. If the __If-Match__ header is not present, conflict checking will not be performed.
        ### Missing i18n bundle handling:
        If the specified _i18n bundle_ is missing and the _If-Match_ header is not present (or equal to __"*"__), the server will return a 404 Not Found error indicating that the specified _i18n bundle_ does not exist.
      operationId: deleteI18n
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: name
        in: path
        description: Name of the i18n bundle to be deleted
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content. I18n bundle successfully deleted.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that i18n bundle already has been updated/deleted after
            user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/forms/{formName}:
    get:
      tags:
      - master-version-forms-api
      summary: Get specific form full details
      description: |
        ### Endpoint purpose:
         This endpoint is used for retrieving a JSON representation of a user __form__ directly from the __master__ version. This operation retrieves a single _form_ based on the specified __formName__. If you need to retrieve list of _forms_, you can use the [GET](#master-version-forms-api/getFormsFromMaster) endpoint.
      operationId: getForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: formName
        in: path
        description: Form name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Form successfully retrieved.
          content:
            application/json:
              example: |-
                {
                  "display": "form",
                  "components": [],
                  "path": "my-awesome-form",
                  "name": "my-awesome-form",
                  "title": "Form human-readable title",
                }
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - master-version-forms-api
      summary: Update existing form within master version.
      description: "### Endpoint purpose: \n This endpoint is used for updating a\
        \ json representation of a user __form__ directly in __master__ version. Just\
        \ as if _version-candidate_ was created, the _form_ was updated in that _version-candidate_\
        \ and then the _version-candidate_ was submitted. It can be used if there\
        \ is needed to update __a single form__. If you need to make some changes\
        \ in several _forms_ and/or _business-processes_ at one time, it's still preferred\
        \ to make this changes through a _version-candidate_. \n ### Conflict resolving:\n\
        \ In this endpoint [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests)\
        \ are supported. You can use an __ETag__ header value, that can be previously\
        \ obtained in [GET](#master-version-forms-api/getForm) request, as a value\
        \ for __If-Match__ header so you can be sure that you're updating the last\
        \ version of a _form_. But if your __If-Match__ value is differs from the\
        \ servers you will receive a _409 Conflict_ instead of _412 Precondition Failed_.\
        \ For _registry-regulation-management_ service this situation's considered\
        \ as a conflict. If __If-Match__ is not present then conflict checking won't\
        \ be performed.\n### Form validation: \nBefore saving the content to the storage,\
        \ the __validation__ of a _form_ is executed. The _form_ must be a __json__\
        \ document and must have a non-empty __\"title\"__ field. Also the field __\"\
        name\"__ must be present and equal to __\"path\"__ field, that must be present\
        \ too. Also _both_ this values must be equal to __\"formName\"__ pathVariable.\
        \ In other case the _form_ won't be working as expected. Changing __\"name\"\
        __ or __\"path\"__ is not supported. If you need to change these fields then\
        \ you need to copy the _form_ with new name and delete the previous _form_.\
        \ \n ### Missing form handling: \n If the updated _form_ is missing and the\
        \ _If-Match_ header is not present (or equal to __\"*\"__) then the _form_\
        \ will be __created__ instead.\n ### Created and modified dates handling:\n\
        \ If there any of __\"created\"__ or __\"modified\"__ fields present in the\
        \ request body they will be ignored. Value for the __\"created\"__ field is\
        \ automatically getting from the previous _form_ content (if present, in other\
        \ case it's getting from the git log). And for the __\"updated\"__ value the\
        \ current servers datetime in UTC is set."
      operationId: updateForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: formName
        in: path
        description: Name of the form to be updated
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              display: form
              components: []
              path: my-awesome-form
              name: my-awesome-form
              title: Form human-readable title
        required: true
      responses:
        "200":
          description: Form successfully updated.
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                display: form
                components: []
                path: my-awesome-form
                name: my-awesome-form
                title: Form human-readable title
                created: 2023-03-28T09:18:41.941Z
                modified: 2023-03-29T09:58:44.100Z
        "400":
          description: Request body is not a valid json
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that form already has been updated/deleted after user
            obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User form is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - master-version-forms-api
      summary: Create new form within master
      description: "### Endpoint purpose: \n This endpoint is used for creating a\
        \ JSON representation of a user __form__ directly in the __master__ version.\
        \ It is intended for situations that require the creation of a new _form_.\
        \ This operation creates a single _form_ and should be used when multiple\
        \ _forms_ and/or _business-processes_ do not need to be created or modified\
        \ simultaneously. If you need to create or modify several _forms_ and/or _business-processes_\
        \ at once, it is still recommended to use a _version-candidate_. \n ### Form\
        \ validation: \nBefore saving the new _form_ to the storage, the server validates\
        \ the _form_. The _form_ must be a __json__ document and must have a non-empty\
        \ __\"title\"__ field. Also the field __\"name\"__ must be present and equal\
        \ to __\"path\"__ field, that must be present too. Also _both_ this values\
        \ must be equal to __\"formName\"__ pathVariable. In other case the _form_\
        \ won't be working as expected. \n ### Missing form handling: \n If the specified\
        \ _form_ does not already exist, the server will create a new _form_ with\
        \ the provided data. If the _form_ does exists, the server will return a _409\
        \ Conflict_ error indicating that the _form_ already exists.\n ### Created\
        \ and modified dates handling:\n If there any of __\"created\"__ or __\"modified\"\
        __ fields present in the request body they will be ignored. The __\"created\"\
        __ and __\"updated\"__ fields are automatically set to the current server\
        \ time in UTC."
      operationId: formCreate
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: formName
        in: path
        description: Name of the new form to be created
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              display: form
              components: []
              path: my-awesome-form
              name: my-awesome-form
              title: Form human-readable title
        required: true
      responses:
        "201":
          description: Form successfully created
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                display: form
                components: []
                path: my-awesome-form
                name: my-awesome-form
                title: Form human-readable title
                created: 2023-03-28T09:18:41.941Z
                modified: 2023-03-28T09:18:41.941Z
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. It means that form already has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User form is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
      - master-version-forms-api
      summary: Delete existing form within master
      description: |-
        ### Endpoint purpose:
         This endpoint is used for deleting a JSON representation of a user __form__ directly from the __master__ version.
        ### Conflict resolving:
         In this endpoint, [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, which can be previously obtained in a [GET](#master-version-forms-api/getForm) request, as a value for the __If-Match__ header. This ensures that you're deleting the latest version of the _form_. However, if your __If-Match__ value differs from the server's value, you will receive _409 Conflict_ instead of _412 Precondition Failed_. For the _registry-regulation-management_ service, this situation is considered a conflict. If the __If-Match__ header is not present, conflict checking will not be performed.
         ### Missing form handling:
         If the specified _form_ is missing and the _If-Match_ header is not present (or equal to __"*"__), the server will return a 404 Not Found error indicating that the specified _form_ does not exist.
      operationId: deleteForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: formName
        in: path
        description: Name of the form to be deleted
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content. Form successfully deleted.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that form already has been updated/deleted after user
            obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/business-processes/{businessProcessName}:
    get:
      tags:
      - master-version-business-processes-api
      summary: Get specific business process full details
      description: |
        ### Endpoint purpose:
         This endpoint is used for retrieving a XML representation of a user __business-process__ directly from the __master__ version. This operation retrieves a single _business-process_ based on the specified __businessProcessName__ with full details in _XML_ format. If you need to retrieve list of _business-processes_ with brief information and in _json_ format, you can use the [GET](#master-version-business-processes-api/getBusinessProcessesFromMaster).
      operationId: getBusinessProcess
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Process name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Business process successfully retrieved.
          content:
            text/plain:
              example: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                  targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                  modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0">
                  <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                    <bpmn:startEvent id="StartEvent_1"/>
                  </bpmn:process>
                  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                        <dc:Bounds x="179" y="79" width="36" height="36"/>
                      </bpmndi:BPMNShape>
                    </bpmndi:BPMNPlane>
                  </bpmndi:BPMNDiagram>
                </bpmn:definitions>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - master-version-business-processes-api
      summary: Update business process within master version.
      description: "### Endpoint purpose: \n This endpoint is used for updating a\
        \ xml representation of a user __business process__ directly in __master__\
        \ version. Just as if _version-candidate_ was created, the _business process_\
        \ was updated in that _version-candidate_ and then the _version-candidate_\
        \ was submitted. It can be used if there is needed to update __a single business\
        \ process__. If you need to make some changes in several _business processes_\
        \ at one time, it's still preferred to make this changes through a _version-candidate_.\
        \ \n ### Conflict resolving:\n In this endpoint [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests)\
        \ are supported. You can use an __ETag__ header value, that can be previously\
        \ obtained in [GET](#master-version-business-processes-api/getBusinessProcess)\
        \ request, as a value for __If-Match__ header so you can be sure that you're\
        \ updating the last version of a _business-process_. But if your __If-Match__\
        \ value is differs from the servers you will receive a _409 Conflict_ instead\
        \ of _412 Precondition Failed_. For _registry-regulation-management_ service\
        \ this situation's considered as a conflict. If __If-Match__ is not present\
        \ then conflict checking won't be performed.\n### Business process validation:\
        \ \nBefore saving the content to the storage, the __validation__ of a _business-process_\
        \ is executed. The _business-process_ must be a __xml__ document, must conform\
        \ to the BPMN20.xsd schema (available at https://github.com/bpmn-io/bpmn-moddle/blob/master/resources/bpmn/xsd/BPMN20.xsd)\
        \ and must have a non-empty __\"name\"__ field (attribute as part of tCallableElement).\
        \ Also _name_ values must be equal to __\"businessProcessName\"__ pathVariable.\
        \ In other case the _business-process_ won't be working as expected. Changing\
        \ __\"name\"__ is not supported. If you need to change this field then you\
        \ need to copy the _business-process_ with new name and delete the previous\
        \ _business-process_. \n ### Missing business process handling: \n If the\
        \ updated _business-process_ is missing and the _If-Match_ header is not present\
        \ (or equal to __\"*\"__) then the _business-process_ will be __created__\
        \ instead."
      operationId: updateBusinessProcess
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Process name
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              <?xml version="1.0" encoding="UTF-8"?>
              <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0">
                <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                  <bpmn:startEvent id="StartEvent_1"/>
                </bpmn:process>
                <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                  <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                    <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                      <dc:Bounds x="179" y="79" width="36" height="36"/>
                    </bpmndi:BPMNShape>
                  </bpmndi:BPMNPlane>
                </bpmndi:BPMNDiagram>
              </bpmn:definitions>
        required: true
      responses:
        "200":
          description: OK. Business process successfully updated.
          content:
            text/plain:
              example: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:rrm="http://registry-regulation-management"
                  xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                  targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                  modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0"
                  rrm:created="2022-10-28T06:16:26.123Z" rrm:modified="2022-10-28T20:26:26.123Z">

                  <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                    <bpmn:startEvent id="StartEvent_1"/>
                  </bpmn:process>
                  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                        <dc:Bounds x="179" y="79" width="36" height="36"/>
                      </bpmndi:BPMNShape>
                    </bpmndi:BPMNPlane>
                  </bpmndi:BPMNDiagram>
                </bpmn:definitions>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that business process already has been updated/deleted
            after user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User business process is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - master-version-business-processes-api
      summary: Create new business process
      description: "### Endpoint purpose: \n This endpoint is used for creating a\
        \ xml representation of a user __business process__ directly in __master__\
        \ version. Just as if _version-candidate_ was created, the _business process_\
        \ was created in that _version-candidate_ and then the _version-candidate_\
        \ was submitted. It can be used if there is needed to create __a single business\
        \ process__. If you need to create several _business processes_ at one time,\
        \ it's still preferred to make this changes through a _version-candidate_.\
        \ \n ### Business process validation: \nBefore saving the content to the storage,\
        \ the __validation__ of a _business-process_ is executed. The _business-process_\
        \ must be a __xml__ document, must conform to the BPMN20.xsd schema (available\
        \ at https://github.com/bpmn-io/bpmn-moddle/blob/master/resources/bpmn/xsd/BPMN20.xsd)\
        \ and must have a non-empty __\"name\"__ field (attribute as part of tCallableElement).\
        \ Also _name_ values must be equal to __\"businessProcessName\"__ pathVariable.\
        \ In other case the _business-process_ won't be working as expected. \n###\
        \ Missing business process handling: \n If the specified _business-process_\
        \ does not already exist, the server will create a new _business-process_\
        \ with the provided data. Otherwise, the server will return a _409 Conflict_\
        \ error indicating that the _business-process_ already exists."
      operationId: createBusinessProcess
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Name of the new process to be created
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              <?xml version="1.0" encoding="UTF-8"?>
              <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0">
                <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                  <bpmn:startEvent id="StartEvent_1"/>
                </bpmn:process>
                <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                  <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                    <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                      <dc:Bounds x="179" y="79" width="36" height="36"/>
                    </bpmndi:BPMNShape>
                  </bpmndi:BPMNPlane>
                </bpmndi:BPMNDiagram>
              </bpmn:definitions>
        required: true
      responses:
        "201":
          description: Business process successfully created.
          content:
            text/plain:
              example: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:rrm="http://registry-regulation-management"
                  xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                  targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                  modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0"
                  rrm:created="2022-10-28T06:16:26.123Z" rrm:modified="2022-10-28T20:26:26.123Z">

                  <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                    <bpmn:startEvent id="StartEvent_1"/>
                  </bpmn:process>
                  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                        <dc:Bounds x="179" y="79" width="36" height="36"/>
                      </bpmndi:BPMNShape>
                    </bpmndi:BPMNPlane>
                  </bpmndi:BPMNDiagram>
                </bpmn:definitions>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. It means that business process already has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User business process is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
      - master-version-business-processes-api
      summary: Delete existing business process
      description: |-
        ### Endpoint purpose:
         This endpoint is used for deleting a user __business-process__ directly from the __master__ version.
        ### Conflict resolving:
         In this endpoint, [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, which can be previously obtained in a [GET](#master-version-business-processes-api/getBusinessProcess) request, as a value for the __If-Match__ header. This ensures that you're deleting the latest version of the _business process_. However, if your __If-Match__ value differs from the server's value, you will receive _409 Conflict_ instead of _412 Precondition Failed_. For the _registry-regulation-management_ service, this situation is considered a conflict. If the __If-Match__ header is not present, conflict checking will not be performed.
         ### Missing business process handling:
         If the specified _business process_ is missing and the _If-Match_ header is not present (or equal to __"*"__), the server will return a 404 Not Found error indicating that the specified _business process_ does not exist.
      operationId: deleteBusinessProcess
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Process name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content. Business process successfully deleted.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that business process already has been updated/deleted
            after user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/settings:
    get:
      tags:
      - candidate-version-settings-api
      summary: Get settings for version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a JSON representations of existing _settings_ for version candidate
      operationId: getSettings_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Settings information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsInfoDto'
              example:
                themeFile: white-theme.js
                title: mdtuddm
                titleFull: <Назва реєстру>
                supportEmail: support@registry.gov.ua
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - candidate-version-settings-api
      summary: Update settings for version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used to update/create a _settings_ for the version candidate. A conflict can arise when two or more commits have made changes to the same part of a file. This can happen when two developers are working on the same branch at the same time, and both make changes to the same piece of code without being aware of each other's changes.
      operationId: updateSettings
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsInfoDto'
            example:
              themeFile: white-theme.js
              title: mdtuddm
              titleFull: <Назва реєстру>
              supportEmail: support@registry.gov.ua
        required: true
      responses:
        "200":
          description: OK. Settings information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsInfoDto'
              example:
                themeFile: white-theme.js
                title: mdtuddm
                titleFull: <Назва реєстру>
                supportEmail: support@registry.gov.ua
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. It means that settings file content already has been
            updated/deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/rebase:
    put:
      tags:
      - candidate-version-api
      summary: Rebase changes from master version
      description: This operation applies the changes made to the _master_ version
        onto a __version-candidate__. The purpose is to ensure that the __version
        candidate__  has all the latest changes from the _master_ version before merging
        it.
      operationId: rebase
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Rebase was successful
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/i18n/{name}:
    get:
      tags:
      - candidate-version-i18n-api
      summary: Get full details of the specific I18n bundle within version-candidate
      description: |-
        ### Endpoint purpose:
        This endpoint is used for retrieving a JSON representation of a __i18n bundle__ from the __version-candidate__. This operation retrieves a single _I18n bundle_ based on the specified __name__. If you need to retrieve list of _i18n bundles_, you can use the [GET](#candidate-version-i18n-api/getI18nListByVersionId) endpoint.
      operationId: getI18n_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: I18n name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: I18n bundle successfully retrieved.
          content:
            application/json:
              example:
                English translate: Some other language translate
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - candidate-version-i18n-api
      summary: Update existing i18n bundle within version-candidate
      description: |-
        ### Endpoint purpose:
        This endpoint is used for updating a json representation of a __i18n bundle__ in __version-candidate__.
        ### Conflict resolving:
        In this endpoint [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, that can be previously obtained in [GET](#candidate-version-i18n-api/getI18n) request, as a value for __If-Match__ header so you can be sure that you're updating the last version of a _i18n bundle_. But if your __If-Match__ value is differs from the servers you will receive a _409 Conflict_ instead of _412 Precondition Failed_. For _registry-regulation-management_ service this situation's considered as a conflict. If __If-Match__ is not present then conflict checking won't be performed.
        ### I18n bundle validation:
        Before saving the content to the storage, the __validation__ of a _i18n bundle_ is executed. The _i18n bundle_ must be a __json__ document.
        ### Missing i18n bundle handling:
        If the updated _i18n bundle_ is missing and the _If-Match_ header is not present (or equal to __"*"__) then the _i18n bundle_ will be __created__ instead.
      operationId: updateI18n_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of the i18n bundle to be updated
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              English translate: Some other language translate
        required: true
      responses:
        "200":
          description: I18n bundle successfully updated.
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                English translate: Some other language translate
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that i18n bundle already has been updated/deleted after
            user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. I18n bundle is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - candidate-version-i18n-api
      summary: Create new i18n bundle within specific version-candidate
      description: |-
        ### Endpoint purpose:
        This endpoint is used for creating a JSON representation of a __i18n bundle__ in the __version-candidate__.
        ### I18n bundle validation:
        Before saving the new _i18n bundle_ to the storage, the server validates the _i18n bundle_. The _i18n bundle_ must be a valid __json__ document
        ### Missing i18n bundle handling:
        If the specified _i18n bundle_ does not already exist, the server will create a new _i18n bundle_ with the provided data. Otherwise, the server will return a _409 Conflict_ error indicating that the _i18n bundle_ already exists.
      operationId: i18nCreate_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of the new i18n bundle to be created
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              English translate: Some other language translate
        required: true
      responses:
        "201":
          description: I18n bundle successfully created
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                English translate: Some other language translate
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. It means that i18n bundle already has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. I18n bundle is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
      - candidate-version-i18n-api
      summary: Delete existing i18n bundle within version-candidate
      description: |-
        ### Endpoint purpose:
        This endpoint is used for deleting a JSON representation of a __i18n bundle__ from the __version-candidate__.
        ### Conflict resolving:
        In this endpoint, [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, which can be previously obtained in a [GET](#candidate-version-i18n-api/getI18n) request, as a value for the __If-Match__ header. This ensures that you're deleting the latest version of the _i18n bundle_. However, if your __If-Match__ value differs from the server's value, you will receive _409 Conflict_ instead of _412 Precondition Failed_. For the _registry-regulation-management_ service, this situation is considered a conflict. If the __If-Match__ header is not present, conflict checking will not be performed.
        ### Missing i18n bundle handling:
        If the specified _i18n bundle_ is missing and the _If-Match_ header is not present (or equal to __"*"__), the server will return a 404 Not Found error indicating that the specified _i18n bundle_ does not exist.
      operationId: deleteI18n_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of the i18n bundle to be deleted
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content. I18n bundle successfully deleted.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that i18n bundle already has been updated/deleted after
            user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/forms/{formName}:
    get:
      tags:
      - candidate-version-forms-api
      summary: Get full details of the specific form within version-candidate
      description: |
        ### Endpoint purpose:
         This endpoint is used for retrieving a JSON representation of a user __form__ from the __version-candidate__. This operation retrieves a single _form_ based on the specified __formName__. If you need to retrieve list of _forms_, you can use the [GET](#candidate-version-forms-api/getFormsByVersionId) endpoint.
      operationId: getForm_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: formName
        in: path
        description: Form name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Form successfully retrieved.
          content:
            application/json:
              example: |-
                {
                  "display": "form",
                  "components": [],
                  "path": "my-awesome-form",
                  "name": "my-awesome-form",
                  "title": "Form human-readable title",
                }
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - candidate-version-forms-api
      summary: Update existing form within version-candidate
      description: "### Endpoint purpose: \n This endpoint is used for updating a\
        \ json representation of a user __form__ in __version-candidate__.\n### Conflict\
        \ resolving:\n In this endpoint [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests)\
        \ are supported. You can use an __ETag__ header value, that can be previously\
        \ obtained in [GET](#candidate-version-forms-api/getForm) request, as a value\
        \ for __If-Match__ header so you can be sure that you're updating the last\
        \ version of a _form_. But if your __If-Match__ value is differs from the\
        \ servers you will receive a _409 Conflict_ instead of _412 Precondition Failed_.\
        \ For _registry-regulation-management_ service this situation's considered\
        \ as a conflict. If __If-Match__ is not present then conflict checking won't\
        \ be performed.\n### Form validation: \nBefore saving the content to the storage,\
        \ the __validation__ of a _form_ is executed. The _form_ must be a __json__\
        \ document and must have a non-empty __\"title\"__ field. Also the field __\"\
        name\"__ must be present and equal to __\"path\"__ field, that must be present\
        \ too. Also _both_ this values must be equal to __\"formName\"__ pathVariable.\
        \ In other case the _form_ won't be working as expected. Changing __\"name\"\
        __ or __\"path\"__ is not supported. If you need to change these fields then\
        \ you need to copy the _form_ with new name and delete the previous _form_.\n\
        ### Missing form handling: \nIf the updated _form_ is missing and the _If-Match_\
        \ header is not present (or equal to __\"*\"__) then the _form_ will be __created__\
        \ instead.\n### Created and modified dates handling:\nIf there any of __\"\
        created\"__ or __\"modified\"__ fields present in the request body they will\
        \ be ignored. Value for the __\"created\"__ field is automatically getting\
        \ from the previous _form_ content (if present, in other case it's getting\
        \ from the git log). And for the __\"updated\"__ value the current servers\
        \ datetime in UTC is set."
      operationId: updateForm_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: formName
        in: path
        description: Name of the form to be updated
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              display: form
              components: []
              path: my-awesome-form
              name: my-awesome-form
              title: Form human-readable title
        required: true
      responses:
        "200":
          description: Form successfully updated.
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                display: form
                components: []
                path: my-awesome-form
                name: my-awesome-form
                title: Form human-readable title
                created: 2023-03-28T09:18:41.941Z
                modified: 2023-03-29T09:58:44.100Z
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that form already has been updated/deleted after user
            obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User form is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - candidate-version-forms-api
      summary: Create new form within specific version-candidate
      description: "### Endpoint purpose: \n This endpoint is used for creating a\
        \ JSON representation of a user __form__ in the __version-candidate__.\n###\
        \ Form validation: \nBefore saving the new _form_ to the storage, the server\
        \ validates the _form_. The _form_ must be a __json__ document and must have\
        \ a non-empty __\"title\"__ field. Also the field __\"name\"__ must be present\
        \ and equal to __\"path\"__ field, that must be present too. Also _both_ this\
        \ values must be equal to __\"formName\"__ pathVariable. In other case the\
        \ _form_ won't be working as expected. \n ### Missing form handling: \n If\
        \ the specified _form_ does not already exist, the server will create a new\
        \ _form_ with the provided data. Otherwise, the server will return a _409\
        \ Conflict_ error indicating that the _form_ already exists.\n ### Created\
        \ and modified dates handling:\n If there any of __\"created\"__ or __\"modified\"\
        __ fields present in the request body they will be ignored. The __\"created\"\
        __ and __\"updated\"__ fields are automatically set to the current server\
        \ time in UTC."
      operationId: formCreate_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: formName
        in: path
        description: Name of the new form to be created
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              display: form
              components: []
              path: my-awesome-form
              name: my-awesome-form
              title: Form human-readable title
        required: true
      responses:
        "201":
          description: Form successfully created
          headers:
            ETag:
              description: New ETag value for conflict verification
              style: simple
              schema:
                type: string
          content:
            application/json:
              example:
                display: form
                components: []
                path: my-awesome-form
                name: my-awesome-form
                title: Form human-readable title
                created: 2023-03-28T09:18:41.941Z
                modified: 2023-03-28T09:18:41.941Z
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. It means that form already has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User form is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
      - candidate-version-forms-api
      summary: Delete existing form within version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for deleting a JSON representation of a user __form__ from the __version-candidate__.
        ### Conflict resolving:
         In this endpoint, [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, which can be previously obtained in a [GET](#candidate-version-forms-api/getForm) request, as a value for the __If-Match__ header. This ensures that you're deleting the latest version of the _form_. However, if your __If-Match__ value differs from the server's value, you will receive _409 Conflict_ instead of _412 Precondition Failed_. For the _registry-regulation-management_ service, this situation is considered a conflict. If the __If-Match__ header is not present, conflict checking will not be performed.
        ### Missing form handling:
        If the specified _form_ is missing and the _If-Match_ header is not present (or equal to __"*"__), the server will return a 404 Not Found error indicating that the specified _form_ does not exist.
      operationId: deleteForm_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: formName
        in: path
        description: Name of the form to be deleted
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content. Form successfully deleted.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that form already has been updated/deleted after user
            obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/data-model/tables:
    get:
      tags:
      - candidate-version-data-model-tables-api
      summary: Get data-model tables file content from requested version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a XML representation of the _content of the data-model tables_ file from the _version-candidate_.
      operationId: getTablesFileContent_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK. Tables file content retrieved successfully
          content:
            text/plain:
              example: |-
                <?xml version="1.1" encoding="UTF-8" standalone="no"?>
                <databaseChangeLog
                  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.5.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext https://nexus-public-mdtu-ddm-edp-cicd.apps.cicd2.mdtu-ddm.projects.epam.com/repository/extensions/com/epam/digital/data/platform/liquibase-ext-schema/latest/liquibase-ext-schema-latest.xsd">

                  <changeSet author="registry owner" id="table first_registry_table">
                    <createTable tableName="first_registry_table" ext:historyFlag="true"
                      remarks="Найперша таблиця реєстру">
                      <column name="first_registry_table_id" type="UUID" defaultValueComputed="uuid_generate_v4()">
                        <constraints nullable="false" primaryKey="true" primaryKeyName="pk_first_registry_table_id"/>
                      </column>
                      <column name="code" type="TEXT" remarks="Код запису">
                        <constraints nullable="false" unique="true"/>
                      </column>
                      <column name="name" type="TEXT" remarks="Назва запису">
                        <constraints nullable="false"/>
                      </column>
                    </createTable>
                  </changeSet>
                </databaseChangeLog>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Version-candidate doesn't exist or tables file doesn't exists
            in requested version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - candidate-version-data-model-tables-api
      summary: Put data-model tables file content to specified version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for updating a XML representation of the _content of the data-model tables_ file from the _version-candidate_. A conflict can arise when two or more commits have made changes to the same part of a file. This can happen when two developers are working on the same branch at the same time, and both make changes to the same piece of code without being aware of each other's changes. In this situation, the system cannot automatically determine which change is the correct one, and will require human intervention to resolve the conflict.
      operationId: putTablesFileContent
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              <?xml version="1.1" encoding="UTF-8" standalone="no"?>
              <databaseChangeLog
                xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.5.xsd
                      http://www.liquibase.org/xml/ns/dbchangelog-ext https://nexus-public-mdtu-ddm-edp-cicd.apps.cicd2.mdtu-ddm.projects.epam.com/repository/extensions/com/epam/digital/data/platform/liquibase-ext-schema/latest/liquibase-ext-schema-latest.xsd">

                <changeSet author="registry owner" id="table first_registry_table">
                  <createTable tableName="first_registry_table" ext:historyFlag="true"
                    remarks="The very first registry table">
                    <column name="first_registry_table_id" type="UUID" defaultValueComputed="uuid_generate_v4()">
                      <constraints nullable="false" primaryKey="true" primaryKeyName="pk_first_registry_table_id"/>
                    </column>
                    <column name="code" type="TEXT" remarks="Row code">
                      <constraints nullable="false" unique="true"/>
                    </column>
                    <column name="name" type="TEXT" remarks="Row name">
                      <constraints nullable="false"/>
                    </column>
                  </createTable>
                </changeSet>
              </databaseChangeLog>
        required: true
      responses:
        "200":
          description: OK. Tables file content updated successfully
          content:
            text/plain:
              example: |-
                <?xml version="1.1" encoding="UTF-8" standalone="no"?>
                <databaseChangeLog
                  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.5.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext https://nexus-public-mdtu-ddm-edp-cicd.apps.cicd2.mdtu-ddm.projects.epam.com/repository/extensions/com/epam/digital/data/platform/liquibase-ext-schema/latest/liquibase-ext-schema-latest.xsd">

                  <changeSet author="registry owner" id="table first_registry_table">
                    <createTable tableName="first_registry_table" ext:historyFlag="true"
                      remarks="Найперша таблиця реєстру">
                      <column name="first_registry_table_id" type="UUID" defaultValueComputed="uuid_generate_v4()">
                        <constraints nullable="false" primaryKey="true" primaryKeyName="pk_first_registry_table_id"/>
                      </column>
                      <column name="code" type="TEXT" remarks="Код запису">
                        <constraints nullable="false" unique="true"/>
                      </column>
                      <column name="name" type="TEXT" remarks="Назва запису">
                        <constraints nullable="false"/>
                      </column>
                    </createTable>
                  </changeSet>
                </databaseChangeLog>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Version-candidate doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. It means that tables file content already has been
            updated/deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. Tables file content is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-processes/{businessProcessName}:
    get:
      tags:
      - candidate-version-business-processes-api
      summary: Get specific business process full details
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a XML representation of a user __business-process__ from the __version-candidate__. This operation retrieves a single _business-process_ based on the specified __businessProcessName__ with full details in _XML_ format. If you need to retrieve list of _business-processes_ with brief information and in _json_ format, you can use the [GET](#candidate-version-business-processes-api/getBusinessProcessesByVersionId) endpoint.
      operationId: getBusinessProcess_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Process name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Business process successfully retrieved.
          content:
            text/plain:
              example: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                  targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                  modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0">
                  <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                    <bpmn:startEvent id="StartEvent_1"/>
                  </bpmn:process>
                  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                        <dc:Bounds x="179" y="79" width="36" height="36"/>
                      </bpmndi:BPMNShape>
                    </bpmndi:BPMNPlane>
                  </bpmndi:BPMNDiagram>
                </bpmn:definitions>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
      - candidate-version-business-processes-api
      summary: Update business process within version-candidate.
      description: "### Endpoint purpose: \n This endpoint is used for updating a\
        \ xml representation of a user __business process__ in __version-candidate__.\n\
        ### Conflict resolving:\n In this endpoint [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests)\
        \ are supported. You can use an __ETag__ header value, that can be previously\
        \ obtained in [GET](#candidate-version-business-processes-api/getBusinessProcess)\
        \ request, as a value for __If-Match__ header so you can be sure that you're\
        \ updating the last version of a _business-process_. But if your __If-Match__\
        \ value is differs from the servers you will receive a _409 Conflict_ instead\
        \ of _412 Precondition Failed_. For _registry-regulation-management_ service\
        \ this situation's considered as a conflict. If __If-Match__ is not present\
        \ then conflict checking won't be performed.\n### Business process validation:\
        \ \nBefore saving the content to the storage, the __validation__ of a _business-process_\
        \ is executed. The _business-process_ must be a __xml__ document, must conform\
        \ to the BPMN20.xsd schema (available at https://github.com/bpmn-io/bpmn-moddle/blob/master/resources/bpmn/xsd/BPMN20.xsd)\
        \ and must have a non-empty __\"name\"__ field (attribute as part of tCallableElement).\
        \ Also _name_ values must be equal to __\"businessProcessName\"__ pathVariable.\
        \ In other case the _business-process_ won't be working as expected. Changing\
        \ __\"name\"__ is not supported. If you need to change this field then you\
        \ need to copy the _business process_ with new name and delete the previous\
        \ _business process_.\n### Missing business process handling: \n If the updated\
        \ _business-process_ is missing and the _If-Match_ header is not present (or\
        \ equal to __\"*\"__) then the _business process_ will be __created__ instead."
      operationId: updateBusinessProcess_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Process name
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              <?xml version="1.0" encoding="UTF-8"?>
              <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0">
                <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                  <bpmn:startEvent id="StartEvent_1"/>
                </bpmn:process>
                <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                  <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                    <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                      <dc:Bounds x="179" y="79" width="36" height="36"/>
                    </bpmndi:BPMNShape>
                  </bpmndi:BPMNPlane>
                </bpmndi:BPMNDiagram>
              </bpmn:definitions>
        required: true
      responses:
        "200":
          description: OK. Business process successfully updated.
          content:
            text/plain:
              example: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:rrm="http://registry-regulation-management"
                  xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                  targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                  modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0"
                  rrm:created="2022-10-28T06:16:26.123Z" rrm:modified="2022-10-28T20:26:26.123Z">

                  <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                    <bpmn:startEvent id="StartEvent_1"/>
                  </bpmn:process>
                  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                        <dc:Bounds x="179" y="79" width="36" height="36"/>
                      </bpmndi:BPMNShape>
                    </bpmndi:BPMNPlane>
                  </bpmndi:BPMNDiagram>
                </bpmn:definitions>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that business process already has been updated/deleted
            after user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User business process is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - candidate-version-business-processes-api
      summary: Create new business process
      description: "### Endpoint purpose: \n This endpoint is used for creating a\
        \ xml representation of a user __business process__ in __version-candidate__\
        \ version. \n ### Business process validation: \nBefore saving the content\
        \ to the storage, the __validation__ of a _business-process_ is executed.\
        \ The _business-process_ must be a __xml__ document, must conform to the BPMN20.xsd\
        \ schema (available at https://github.com/bpmn-io/bpmn-moddle/blob/master/resources/bpmn/xsd/BPMN20.xsd)\
        \ and must have a non-empty __\"name\"__ field (attribute as part of tCallableElement).\
        \ Also _name_ values must be equal to __\"businessProcessName\"__ pathVariable.\
        \ In other case the _business-process_ won't be working as expected. \n###\
        \ Missing business process handling: \n If the specified _business-process_\
        \ does not already exist, the server will create a new _business-process_\
        \ with the provided data. Otherwise, the server will return a _409 Conflict_\
        \ error indicating that the _business-process_ already exists."
      operationId: createBusinessProcess_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Name of the new process to be created
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              <?xml version="1.0" encoding="UTF-8"?>
              <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0">
                <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                  <bpmn:startEvent id="StartEvent_1"/>
                </bpmn:process>
                <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                  <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                    <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                      <dc:Bounds x="179" y="79" width="36" height="36"/>
                    </bpmndi:BPMNShape>
                  </bpmndi:BPMNPlane>
                </bpmndi:BPMNDiagram>
              </bpmn:definitions>
        required: true
      responses:
        "201":
          description: Business process successfully created.
          content:
            text/plain:
              example: |-
                <?xml version="1.0" encoding="UTF-8"?>
                <bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:rrm="http://registry-regulation-management"
                  xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1poh5q3"
                  targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.1.0"
                  modeler:executionPlatform="Camunda Cloud" modeler:executionPlatformVersion="8.0.0"
                  rrm:created="2022-10-28T20:26:26.123Z" rrm:modified="2022-10-28T20:26:26.123Z">

                  <bpmn:process id="john-does-bp" name="John Doe's BP" isExecutable="true">
                    <bpmn:startEvent id="StartEvent_1"/>
                  </bpmn:process>
                  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
                    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="name">
                      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
                        <dc:Bounds x="179" y="79" width="36" height="36"/>
                      </bpmndi:BPMNShape>
                    </bpmndi:BPMNPlane>
                  </bpmndi:BPMNDiagram>
                </bpmn:definitions>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "409":
          description: Conflict. It means that business process already has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity. User business process is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
      - candidate-version-business-processes-api
      summary: Delete existing business process
      description: |-
        ### Endpoint purpose:
         This endpoint is used for deleting a user __business-process__ from the __version-candidate__.
        ### Conflict resolving:
         In this endpoint, [Conditional requests](https://datatracker.ietf.org/doc/html/rfc9110#name-conditional-requests) are supported. You can use an __ETag__ header value, which can be previously obtained in a [GET](#candidate-version-business-processes-api/getBusinessProcess) request, as a value for the __If-Match__ header. This ensures that you're deleting the latest version of the _business process_. However, if your __If-Match__ value differs from the server's value, you will receive _409 Conflict_ instead of _412 Precondition Failed_. For the _registry-regulation-management_ service, this situation is considered a conflict. If the __If-Match__ header is not present, conflict checking will not be performed.
         ### Missing business process handling:
         If the specified _business process_ is missing and the _If-Match_ header is not present (or equal to __"*"__), the server will return a 404 Not Found error indicating that the specified _business process_ does not exist.
      operationId: deleteBusinessProcess_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: ETag to verify whether user has latest data
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Process name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content. Business process successfully deleted.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. __If-Match__ input value doesn't equal to servers
            value. It means that business process already has been updated/deleted
            after user obtained __ETag__.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates:
    get:
      tags:
      - candidate-version-api
      summary: Get list of existing opened version-candidates
      description: |-
        ### Endpoint purpose:
        This endpoint is used for retrieving a list of JSON representations of __version information__ from the __version-candidate__, containing only brief information about each __version information__. If you need to retrieve full details of a single __version information__ based on its __versionCandidateId__, you can use the [GET](#candidate-version-api/getVersionDetails) endpoint.
      operationId: getVersionsList
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Version details successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionInfo'
              example:
              - id: "1"
                name: JohnDoe's version candidate
                description: Version candidate to change form
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - candidate-version-api
      summary: Create new version-candidate from current state of master version.
      description: |-
        ### Endpoint purpose:
          This endpoint is used to create a new __version-candidate__ from the current state of the _master_ version. The purpose is to allow making changes to the data elements without affecting the stability of the _master_ version. The endpoint requires the `X-Access-Token` header for security. Once the new __version-candidate__ is created, it can be developed independently from other __version-candidates__ or the _master_ version. When the changes are ready, the __version-candidate__ can be merged back into the _master_ version. If the operation is _successful_, the resulting `VersionInfoDetailed` object is returned along with a _`201 Created`_ status code. If the request _fails_ due to invalid input or server issues, a _`4xx` or `5xx`_ HTTP response code may be returned along with a detailed error message.
      operationId: createNewVersion
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionRequest'
            example:
              name: JohnDoe's version candidate
              description: Version candidate to change form
        required: true
      responses:
        "201":
          description: OK. Version candidate successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfoDetailed'
              example:
                id: "1"
                name: JohnDoe's version candidate
                description: Version candidate to change form
                author: JohnDoe@epam.com
                creationDate: 2022-08-10T11:30:00
                latestUpdate: 2022-08-10T11:40:00
                hasConflicts: false
                inspections: null
                validations:
                - name: Validation 1
                  result: SUCCESS
                  message: Validation passed
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "422":
          description: Unprocessable Entity. Version request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/submit:
    post:
      tags:
      - candidate-version-api
      summary: Integrate version-candidate changes into master version of registry
        regulation
      description: |-
        ### Endpoint purpose:
         This endpoint is used to merge an available open __version-candidate__, identified by the _versionCandidateId_ parameter, into master version of the registry regulation after the changes have been reviewed. Once the merge operation is completed, the __version-candidate__ will no longer accept any new changes. Successful completion of the merge operation is indicated by a _204 No Content_ response. In case of any conflicts between the __version-candidate__ and the _master version_, such as duplicate names for data elements or changes made to data elements already changed in the _master version_, this API returns a __409 Conflict__ HTTP response. In such cases, the resulting _conflict_ must be resolved before attempting the merge operation again.
      operationId: submitVersionCandidate
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier to be merged into master version
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content. Version candidate successfully merged into master
            version.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. The same data has been updated or deleted in the
            master version by another merge commit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/i18n/{name}/rollback:
    post:
      tags:
      - candidate-version-i18n-api
      summary: Rollback existing i18n bundle within version-candidate
      description: |-
        ### Endpoint purpose:
        This endpoint is used for rolling back a __i18n bundle__ from the __version-candidate__. It is intended for situations where a __i18n bundle__ needs to be reverted to a prior version, such as to mitigate data corruption or to restore a previous state.
      operationId: rollbackI18n
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of the i18n bundle to be rolled back
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. I18n bundle successfully rolled back.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/forms/{formName}/rollback:
    post:
      tags:
      - candidate-version-forms-api
      summary: Rollback existing form within version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for rolling back a user __form__ from the __version-candidate__. It is intended for situations where a __form__ needs to be reverted to a prior version, such as to mitigate data corruption or to restore a previous state.
      operationId: rollbackForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: formName
        in: path
        description: Name of the form to be rolled back
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Form successfully rolled back.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/decline:
    post:
      tags:
      - candidate-version-api
      summary: Abandon the existing opened version-candidate.
      description: |-
        ### Endpoint purpose:
        This endpoint is used to decline an available open __version-candidate__. It is intended for situations where the __candidate version__ is no longer needed. After this operation the __version-candidate__ won't take any changes anymore.
      operationId: declineVersionCandidate
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier to abandon
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Version candidate successfully abandoned
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/data-model/tables/rollback:
    post:
      tags:
      - candidate-version-data-model-tables-api
      summary: Rollback data-model tables file content to specified version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for rolling back a __tables file content__ from the __version-candidate__. It is intended for situations where a __tables file content__ needs to be reverted to a prior version, such as to mitigate data corruption or to restore a previous state.
      operationId: rollbackTables
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Tables file content successfully rolled back.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Version-candidate doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-processes/{businessProcessName}/rollback:
    post:
      tags:
      - candidate-version-business-processes-api
      summary: Rollback business process
      description: |-
        ### Endpoint purpose:
         This endpoint is used for rolling back a user __business-process__ from the __version-candidate__. It is intended for situations where a __business process__ needs to be reverted to a prior version, such as to mitigate data corruption or to restore a previous state.
      operationId: rollbackProcess
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      - name: businessProcessName
        in: path
        description: Process name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Business process successfully rolled back.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-process-groups:
    get:
      tags:
      - candidate-version-business-process-groups-api
      summary: Get business process groups for candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used to retrieve a list of JSON representations of _business process groups_ for the version candidate.
      operationId: getBusinessProcessGroups_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Successful retrieval of business process groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProcessGroupsResponse'
              example:
                groups:
                - name: Перша група
                  processDefinitions: []
                - name: Друга група
                  processDefinitions: []
                - name: Третя група
                  processDefinitions: []
                ungrouped:
                - id: bp-4-process_definition_id
                  name: John Doe added new component
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - candidate-version-business-process-groups-api
      summary: Save business process groups for version-candidate
      description: "### Endpoint purpose:\n This endpoint is used to create/update\
        \ a _business process groups_ for the version candidate. A conflict can arise\
        \ when two or more commits have made changes to the same part of a file. This\
        \ can happen when two developers are working on the same branch at the same\
        \ time, and both make changes to the same piece of code without being aware\
        \ of each other's changes. ### Group validation: \nBefore saving the new _bp\
        \ groups_, the server validates it. The _groups_ must be a __yaml__ document\
        \ and must have a __\"groups\"__ field. Also the field __\"groups.name\"__\
        \ must be present, unique and valid (name is match with regex). Also _groups.processDefinitions_\
        \  field cannot be empty."
      operationId: saveBusinessProcessGroups
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example:
              groups:
              - name: Перша група
                processDefinitions:
                - bp-1-process_definition_id
              - name: Четверта група
                processDefinitions:
                - bp-3-process_definition_id
              - name: Третя група
              ungrouped:
              - bp-4-process_definition_id
              - bp-5-process_definition_id
        required: true
      responses:
        "200":
          description: OK. Business process groups successfully created/updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProcessGroupsResponse'
              example:
                groups:
                - name: Перша група
                  processDefinitions: []
                - name: Друга група
                  processDefinitions: []
                - name: Третя група
                  processDefinitions: []
                ungrouped:
                - id: bp-4-process_definition_id
                  name: John Doe added new component
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "409":
          description: Conflict. It means that bp group file content already has been
            updated/deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-process-groups/rollback:
    post:
      tags:
      - candidate-version-business-process-groups-api
      summary: Rollback business process groups for version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for rolling back a __bp groups__ from the __version-candidate__. It is intended for situations where a __bp groups__ needs to be reverted to a prior version, such as to mitigate data corruption or to restore a previous state.
      operationId: rollbackBusinessProcessGroups
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Business process groups successfully rolled back.
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /batch-loads/users:
    get:
      tags:
      - users-batch-loads-api
      summary: Get file information
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a JSON representation of a __file__ metadata. Since the file is mapped to a username, the file information of the user who executed the given endpoint is returned.
      operationId: getFileInfo
      parameters:
      - name: securityContext
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CephFileInfoDto'
              example:
                id: "123456789"
                name: example_file.txt
                size: 1024
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
      - users-batch-loads-api
      summary: Store file endpoint
      description: "### Endpoint purpose: \n This endpoint is used for downloading\
        \ a file with registry user data. \n ### File validation: \nBefore saving\
        \ the new _file_ to the storage, the server validates the _file_. The _file_\
        \ must be a __csv__ document and must have a non-empty __\"name\"__. Also\
        \ the __\"file\"__ must not be null and empty. Also _file_ encoding must be\
        \ UTF-8.\n ### Existing file handling: \n The _file_ in the ceph is tied to\
        \ the user who uploads it, so when you try to upload a second _file_, the\
        \ first _file_ in the ceph is overwritten."
      operationId: handleFileUpload
      parameters:
      - name: securityContext
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
                securityContext:
                  $ref: '#/components/schemas/SecurityContext'
      responses:
        "201":
          description: Created. Returns uploaded file metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CephFileInfoDto'
              example:
                id: "123456789"
                name: example_file.txt
                size: 1024
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /batch-loads/users/imports:
    post:
      tags:
      - users-batch-loads-api
      summary: Start import endpoint
      description: |-
        ### Endpoint purpose:
         This endpoint is used for starting the process of importing the downloaded file with registry user data.
      operationId: imports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityContext'
      responses:
        "202":
          description: Accepted
          content:
            '*/*': {}
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master:
    get:
      tags:
      - master-version-api
      summary: Acquire master version full details
      description: "This endpoint retrieves a JSON representation containing detailed\
        \ information about the last master version, if it exists. Otherwise, an empty\
        \ object will be returned."
      operationId: getMasterVersionInfo
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Version details successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterVersionInfoDetailed'
              example:
                id: "123"
                name: Example Master Release
                description: This is an example master release.
                author: John Doe
                latestUpdate: 2022-11-01T13:30:00
                published: true
                inspector: Jane Smith
                validations:
                - name: Example Validation 1
                  status: PASSED
                - name: Example Validation 2
                  status: PASSED
                status: APPROVED
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/tables:
    get:
      tags:
      - master-version-tables-api
      summary: '"Get a list of tables with brief details for the master version'
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a list of JSON representations of __tables__ directly from the __master__ version, containing only brief information about each _table_. If you need to retrieve full details of a single _table_ based on its __tableName__, you can use the [GET](#master-version-tables-api/getTable) endpoint.
      operationId: getTables
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Tables successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TableInfoShort'
              example:
              - name: John Doe's table
                description: John Doe get table
                objectReference: true
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/tables/{tableName}:
    get:
      tags:
      - master-version-tables-api
      summary: Get specific table full details
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a JSON representation of a __table__ directly from the __master__ version. This operation retrieves a single _table_ based on the specified __tableName__. If you need to retrieve list of _tables_, you can use the [GET](#master-version-tables-api/getTables) endpoint.
      operationId: getTable
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: tableName
        in: path
        description: Table name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Table successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableInfo'
              example:
                name: ExampleTable
                description: Example description
                objectReference: true
                columns:
                  id:
                    name: id
                    description: Table column id
                    type: INTEGER
                    defaultValue: "0"
                    notNullFlag: true
                  name:
                    name: name
                    description: Table column name
                    type: VARCHAR
                    defaultValue: null
                    notNullFlag: true
                foreignKeys:
                  fk_example:
                    name: fk_example
                    targetTable: AnotherTable
                    columnPairs:
                    - sourceColumnName: id
                      targetColumnName: example_id
                primaryKey:
                  name: pk_example
                  columns:
                  - name: id
                    sorting: ASC
                uniqueConstraints:
                  uk_example:
                    name: uk_example
                    columns:
                    - name: name
                      sorting: ASC
                indices:
                  idx_example:
                    name: idx_example
                    columns:
                    - name: id
                      sorting: ASC
                    - name: name
                      sorting: DESC
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/settings:
    get:
      tags:
      - master-version-settings-api
      summary: Get settings for master version
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a JSON representations of existing _settings_ for master version
      operationId: getSettings
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Settings information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsInfoDto'
              example:
                themeFile: white-theme.js
                title: mdtuddm
                titleFull: <Назва реєстру>
                supportEmail: support@registry.gov.ua
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/i18n:
    get:
      tags:
      - master-version-i18n-api
      summary: Get a list of i18n bundles with brief details for the master version
      description: |-
        ### Endpoint purpose:
        This endpoint is used for retrieving a list of JSON representations of __i18n bundles__ directly from the __master__ version, containing only brief information about each _i18n bundle_. If you need to retrieve full details of a single _i18n bundle_ based on its __name__, you can use the [GET](#master-version-i18n-api/getI18n) endpoint.
      operationId: getI18nListFromMaster
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. I18n bundles successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/I18nDetailsShort'
              example:
              - name: en
              - name: uk
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/forms:
    get:
      tags:
      - master-version-forms-api
      summary: Get a list of forms with brief details for the master version
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a list of JSON representations of user __forms__ directly from the __master__ version, containing only brief information about each _form_. If you need to retrieve full details of a single _form_ based on its __formName__, you can use the [GET](#master-version-forms-api/getForm) endpoint.
      operationId: getFormsFromMaster
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Forms successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormDetailsShort'
              example:
              - name: ExampleFormService
                title: Example Form
                created: 2022-10-01T10:00:00
                updated: 2022-11-15T13:30:00
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/data-model/tables:
    get:
      tags:
      - master-version-data-model-tables-api
      summary: Get data-model tables file content from master version
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a XML representation of the _content of the data-model tables_ file from the master version.
      operationId: getTablesFileContent
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Tables file content retrieved successfully
          content:
            text/plain:
              example: |-
                <?xml version="1.1" encoding="UTF-8" standalone="no"?>
                <databaseChangeLog
                  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.5.xsd
                        http://www.liquibase.org/xml/ns/dbchangelog-ext https://nexus-public-mdtu-ddm-edp-cicd.apps.cicd2.mdtu-ddm.projects.epam.com/repository/extensions/com/epam/digital/data/platform/liquibase-ext-schema/latest/liquibase-ext-schema-latest.xsd">

                  <changeSet author="registry owner" id="table first_registry_table">
                    <createTable tableName="first_registry_table" ext:historyFlag="true"
                      remarks="Найперша таблиця реєстру">
                      <column name="first_registry_table_id" type="UUID" defaultValueComputed="uuid_generate_v4()">
                        <constraints nullable="false" primaryKey="true" primaryKeyName="pk_first_registry_table_id"/>
                      </column>
                      <column name="code" type="TEXT" remarks="Код запису">
                        <constraints nullable="false" unique="true"/>
                      </column>
                      <column name="name" type="TEXT" remarks="Назва запису">
                        <constraints nullable="false"/>
                      </column>
                    </createTable>
                  </changeSet>
                </databaseChangeLog>
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Tables file doesn't exists in master version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/business-processes:
    get:
      tags:
      - master-version-business-processes-api
      summary: Get a list of business processes with brief details for the master
        version
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a list of JSON representations of user __business processes__ directly from the __master__ version, containing only brief information about each _business process_. If you need to retrieve full details of a single _business process_ based on its __businessProcessName__, you can use the [GET](#master-version-business-processes-api/getBusinessProcess) endpoint.
      operationId: getBusinessProcessesFromMaster
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Business processes successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessDetailsShort'
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/business-process-groups:
    get:
      tags:
      - master-version-business-process-groups-api
      summary: Get business process groups for master version
      description: |-
        ### Endpoint purpose:
         This endpoint is used to retrieve a list of JSON representations of _business process groups_ for the master version.
      operationId: getBusinessProcessGroups
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Successful retrieval of business process groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProcessGroupsResponse'
              example:
                groups:
                - name: Перша група
                  processDefinitions: []
                - name: Друга група
                  processDefinitions: []
                - name: Третя група
                  processDefinitions: []
                ungrouped:
                - id: bp-4-process_definition_id
                  name: John Doe added new component
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}:
    get:
      tags:
      - candidate-version-api
      summary: Acquire version-candidate full details
      description: |-
        ### Endpoint purpose:
        This endpoint is used for retrieving a JSON representations of _version information_ from the __version-candidate__. This operation retrieves a single __version information__ based on the specified __versionCandidateId__ with full details. If you need to retrieve a list of __version information__ with brief details, you can use the [GET](#candidate-version-api/getVersionsList) endpoint.
      operationId: getVersionDetails
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version-candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Version details successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfoDetailed'
              example:
                id: "1"
                name: JohnDoe's version candidate
                description: Version candidate to change form
                author: JohnDoe@epam.com
                creationDate: 2022-08-10T11:30:00.000Z
                latestUpdate: 2022-08-10T11:40:00.000Z
                hasConflicts: false
                inspections: null
                validations:
                - result: SUCCESS
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/tables:
    get:
      tags:
      - candidate-version-tables-api
      summary: Get a list of tables with brief details for the version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a list of JSON representations of __tables__ from the __version-candidate__, containing only brief information about each _table_. If you need to retrieve full details of a single _table_ based on its __tableName__, you can use the [GET](#candidate-version-tables-api/getTable) endpoint.
      operationId: getTables_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK. Tables successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TableInfoShort'
              example:
              - name: John Doe's table
                description: John Doe get table
                objectReference: true
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Version-candidate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/tables/{tableName}:
    get:
      tags:
      - candidate-version-tables-api
      summary: Get specific table full details from version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a JSON representation of a __table__ directly from version-candidate. This operation retrieves a single _table_ based on the specified __tableName__. If you need to retrieve list of _tables_, you can use the [GET](#candidate-version-tables-api/getTables) endpoint.
      operationId: getTable_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: integer
          format: int32
      - name: tableName
        in: path
        description: Table name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Table successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableInfo'
              example:
                name: ExampleTable
                description: Example description
                objectReference: true
                columns:
                  id:
                    name: id
                    description: Table column id
                    type: INTEGER
                    defaultValue: "0"
                    notNullFlag: true
                  name:
                    name: name
                    description: Table column name
                    type: VARCHAR
                    defaultValue: null
                    notNullFlag: true
                foreignKeys:
                  fk_example:
                    name: fk_example
                    targetTable: AnotherTable
                    columnPairs:
                    - sourceColumnName: id
                      targetColumnName: example_id
                primaryKey:
                  name: pk_example
                  columns:
                  - name: id
                    sorting: ASC
                uniqueConstraints:
                  uk_example:
                    name: uk_example
                    columns:
                    - name: name
                      sorting: ASC
                indices:
                  idx_example:
                    name: idx_example
                    columns:
                    - name: id
                      sorting: ASC
                    - name: name
                      sorting: DESC
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Version candidate or table not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/i18n:
    get:
      tags:
      - candidate-version-i18n-api
      summary: Acquire list of i18n bundles with brief details for specific version-candidate
      description: |-
        ### Endpoint purpose:
        This endpoint is used for retrieving a list of JSON representations of __i18n bundles__ from the __version-candidate__, containing only brief information about each _i18n bundle_. If you need to retrieve full details of a single _i18n bundle_ based on its __name__, you can use the [GET](#candidate-version-i18n-api/getI18n) endpoint.
      operationId: getI18nListByVersionId
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. I18n bundles successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/I18nDetailsShort'
              example:
              - name: en
              - name: uk
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/forms:
    get:
      tags:
      - candidate-version-forms-api
      summary: Acquire list of forms with brief details for specific version-candidate
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a list of JSON representations of user __forms__ from the __version-candidate__, containing only brief information about each _form_. If you need to retrieve full details of a single _form_ based on its __formName__, you can use the [GET](#candidate-version-forms-api/getForm) endpoint.
      operationId: getFormsByVersionId
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Forms successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormDetailsShort'
              example:
              - name: john-does-form
                title: John Doe added new component
                created: 2022-07-29T18:55:00.000Z
                updated: 2022-07-29T18:56:00.000Z
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/changes:
    get:
      tags:
      - candidate-version-api
      summary: Get version changes by version-candidate id
      description: |-
        ### Endpoint purpose:
        This operation retrieves _changes_ made to the data elements in a __version-candidate__ compared to the _master_ version. The endpoint allows you to review the changes made in a candidate version before merging with the main version.
      operationId: getVersionChanges
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Version changes successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionChangesInfo'
              example:
                changedForms:
                - name: formToBeUpdated
                  title: JohnDoe's form
                  status: CHANGED
                changedBusinessProcesses:
                - name: newProcess
                  title: JohnDoe's process
                  status: NEW
                changedGroups:
                - title: JohnDoe's group
                  status: NEW
                changedI18nFiles:
                - name: en
                  status: DELETED
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-processes:
    get:
      tags:
      - candidate-version-business-processes-api
      summary: Get a list of business processes with brief details for the candidate
        version
      description: |-
        ### Endpoint purpose:
         This endpoint is used for retrieving a list of JSON representations of user __business processes__ from the __version-candidate__, containing only brief information about each _business process_. If you need to retrieve full details of a single _business process_ based on its __businessProcessName__, you can use the [GET](#candidate-version-business-processes-api/getBusinessProcess) endpoint.
      operationId: getBusinessProcessesByVersionId
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: versionCandidateId
        in: path
        description: Version candidate identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. Business processes successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessDetailsShort'
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /reports:
    get:
      tags:
      - Redash Admin Reports Downloading
      summary: Get all redash dashboards for registry admin
      description: '### This endpoint is used as a proxy to Redash API to get all
        redash dashboards for registry admin.'
      operationId: getAllDashboards
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK. List of dashboards returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dashboard'
              example:
                id: 1
                name: Dashboard 1
                slug: dashboard-1
                createdAt: 2021-08-01T12:00:00
                updatedAt: 2021-08-01T12:00:00
                tags:
                - tag1
                - tag2
                widgets:
                - id: 1
                  width: 1
                  options:
                    text: Widget 1
                is_draft: false
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /reports/{id}:
    get:
      tags:
      - Redash Admin Reports Downloading
      summary: Download a single Redash dashboard by id
      description: '### This endpoint is used to get a single Redash dashboard and
        load it as an archive'
      operationId: getDashboardArchive
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK. Dashboard is downloaded
          content:
            application/octet-stream: {}
  /batch-loads/users/{id}:
    delete:
      tags:
      - users-batch-loads-api
      summary: Delete file endpoint
      description: |-
        ### Endpoint purpose:
         This endpoint is used for deleting a __file__ from storage by id.
      operationId: deleteFile
      parameters:
      - name: id
        in: path
        description: Resource identifier
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CephFileInfoDto'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
components:
  schemas:
    DetailedErrorResponse:
      required:
      - code
      - details
      - traceId
      type: object
      properties:
        traceId:
          type: string
          description: Request identifier
        code:
          type: string
          description: Error code
        details:
          type: string
          description: Error details
        messageKey:
          type: string
          description: Message key for client localization
    SettingsInfoDto:
      type: object
      properties:
        titleFull:
          type: string
        title:
          type: string
        themeFile:
          type: string
        supportEmail:
          type: string
    CreateVersionRequest:
      required:
      - description
      - name
      type: object
      properties:
        name:
          type: string
          description: Name from request
        description:
          type: string
          description: Description from request
    Inspection:
      required:
      - inspector
      - name
      - result
      - resultDetails
      type: object
      properties:
        name:
          type: string
          description: Name of inspection
        inspector:
          type: string
          description: Person who performed inspection
        result:
          type: string
          description: Inspection result
          enum:
          - PENDING
          - SUCCESS
          - FAILED
        resultDetails:
          type: string
          description: Inspection result detailsN
      description: Version candidate inspections
    Validation:
      required:
      - name
      - result
      - resultDetails
      - type
      type: object
      properties:
        name:
          type: string
          description: Validation name
        type:
          type: string
          description: Validation type
          enum:
          - REGULATION_INTEGRITY
          - TEST
          - DEPLOYMENT_STATUS
        result:
          type: string
          description: Validation result
          enum:
          - PENDING
          - SUCCESS
          - FAILED
        resultDetails:
          type: string
          description: Validation result details
      description: Version candidate validations
    VersionInfoDetailed:
      required:
      - author
      - creationDate
      - hasConflicts
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: Version candidate identifier
        name:
          type: string
          description: Version candidate name
        description:
          type: string
          description: Version candidate description
        author:
          type: string
          description: Version candidate author
        creationDate:
          type: string
          description: Version candidate creation time
          format: date-time
        latestUpdate:
          type: string
          description: Version candidate update time
          format: date-time
        latestRebase:
          type: string
          description: Version candidate last rebase time
          format: date-time
        hasConflicts:
          type: boolean
          description: Version candidate conflicts flag
        inspections:
          type: array
          description: Version candidate inspections
          items:
            $ref: '#/components/schemas/Inspection'
        validations:
          type: array
          description: Version candidate validations
          items:
            $ref: '#/components/schemas/Validation'
    BusinessProcessDefinition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    BusinessProcessGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDetailsResponse'
        ungrouped:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessDefinition'
    GroupDetailsResponse:
      type: object
      properties:
        name:
          type: string
        processDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessDefinition'
    CephFileInfoDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        size:
          type: integer
          format: int64
    SecurityContext:
      type: object
      properties:
        accessToken:
          type: string
    MasterVersionInfoDetailed:
      type: object
      properties:
        id:
          type: string
          description: Last version candidate identifier
        name:
          type: string
          description: Last version candidate name
        description:
          type: string
          description: Last version candidate description
        author:
          type: string
          description: Last version candidate author
        latestUpdate:
          type: string
          description: Last version candidate update time
          format: date-time
        published:
          type: boolean
          description: Last version candidate publication flag
        inspector:
          type: string
          description: Last version candidate inspector
        validations:
          type: array
          description: Last version candidate validations
          items:
            $ref: '#/components/schemas/Validation'
        status:
          type: string
          description: Last version candidate status
    TableInfoShort:
      required:
      - name
      - objectReference
      type: object
      properties:
        name:
          type: string
          description: Table name
        objectReference:
          type: boolean
          description: Flag that indicates that the entity is an object in the subject
            data-model
        description:
          type: string
          description: Table description
          nullable: true
    Column:
      required:
      - name
      - sorting
      type: object
      properties:
        name:
          type: string
          description: Name of the column from current table
        sorting:
          type: string
          description: Column index sorting
          enum:
          - ASC
          - DESC
          - NONE
      description: Array of index columns
    PrimaryKeyConstraintShortInfo:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Table index name
        columns:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Column'
      description: Current table primary key index
    TableInfo:
      required:
      - name
      - objectReference
      type: object
      properties:
        name:
          type: string
          description: Table name
        objectReference:
          type: boolean
          description: Flag that indicates that the entity is an object in the subject
            data-model
        description:
          type: string
          description: Table description
          nullable: true
        primaryKey:
          $ref: '#/components/schemas/PrimaryKeyConstraintShortInfo'
    I18nDetailsShort:
      required:
      - eTag
      - name
      type: object
      properties:
        name:
          type: string
          description: I18n bundle name
        eTag:
          type: string
          description: I18n eTag used for optimistic locking
    FormDetailsShort:
      required:
      - created
      - name
      - title
      type: object
      properties:
        name:
          type: string
          description: Form service name
        title:
          type: string
          description: Form name
        created:
          type: string
          description: Form creation date
          format: date-time
        updated:
          type: string
          description: Form updated date
          format: date-time
    BusinessProcessDetailsShort:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    VersionInfo:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: Version candidate identifier
        name:
          type: string
          description: Version candidate name
        description:
          type: string
          description: Version candidate description
    DataModelChangesInfo:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Data model file name
        fileType:
          type: string
          description: Data model file type.
          enum:
          - TABLES_FILE
        status:
          type: string
          description: Data model file status. It's NEW or CHANGED
          enum:
          - NEW
          - CHANGED
        conflicted:
          type: boolean
          description: Is data model has conflicts
          nullable: true
      description: List of changed data-model files
    EntityChangesInfo:
      required:
      - name
      - status
      - title
      type: object
      properties:
        name:
          type: string
          description: Changed entity name
        title:
          type: string
          description: Changed entity title
        status:
          type: string
          description: "Entity status. It's NEW, CHANGED or DELETED"
          enum:
          - NEW
          - CHANGED
          - DELETED
        conflicted:
          type: boolean
          description: Is entity has conflicts
          nullable: true
      description: List of changed i18n bundles
    VersionChangesInfo:
      required:
      - changedBusinessProcesses
      - changedDataModelFiles
      - changedForms
      - changedGroups
      - changedI18nFiles
      type: object
      properties:
        changedForms:
          type: array
          description: List of changed forms
          items:
            $ref: '#/components/schemas/EntityChangesInfo'
        changedBusinessProcesses:
          type: array
          description: List of changed business processes
          items:
            $ref: '#/components/schemas/EntityChangesInfo'
        changedDataModelFiles:
          type: array
          description: List of changed data-model files
          items:
            $ref: '#/components/schemas/DataModelChangesInfo'
        changedGroups:
          type: array
          description: List of changed groups
          items:
            $ref: '#/components/schemas/EntityChangesInfo'
        changedI18nFiles:
          type: array
          description: List of changed i18n bundles
          items:
            $ref: '#/components/schemas/EntityChangesInfo'
    Dashboard:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        slug:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        widgets:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Widget'
        options:
          type: object
        is_draft:
          type: boolean
    Query:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSourceId:
          type: integer
          format: int32
        name:
          type: string
        query:
          type: string
        description:
          type: string
        visualizations:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/Visualization'
        draft:
          type: boolean
    Visualization:
      type: object
      properties:
        id:
          type: integer
          format: int32
          writeOnly: true
        queryId:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        description:
          type: string
        options:
          type: object
        query:
          $ref: '#/components/schemas/Query'
    Widget:
      type: object
      properties:
        text:
          type: string
        options:
          type: object
        width:
          type: integer
          format: int32
        dashboardId:
          type: integer
          format: int32
        visualizationId:
          type: integer
          format: int32
        visualization:
          $ref: '#/components/schemas/Visualization'
