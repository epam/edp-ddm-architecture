{{- define "federation-secret-value" }}
  {{- $secretName := .secretName }}
  {{- $namespace := .namespace }}
  {{- $secret := (lookup "v1" "Secret" $namespace $secretName) }}
  {{- if $secret }}
  {{- $secret.data.clientSecret }}
  {{- else }}
  {{- uuidv4 | b64enc }}
  {{- end }}
  {{- end }}

{{- $root := .Values }}
{{- $release := .Release }}
{{- range $registry := $root.registryFederation.registries }}
---
{{- $secretName := (printf "%s-federation-client-secret" $registry.name) }}
{{- $secretValue := include "federation-secret-value" (dict "secretName" $secretName "namespace" "user-management") }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  clientSecret: {{ $secretValue | squote }}
---
apiVersion: v1.edp.epam.com/v1alpha1
kind: KeycloakClient
metadata:
  name: {{ $registry.name }}-federation-client
  annotations:
    "helm.sh/resource-policy": keep
spec:
  clientId: {{ $registry.name }}-client
  public: false
  directAccess: false
  audRequired: false
  serviceAccount:
    enabled: true
  secret: {{ $secretName }}
  targetRealm: registry-federation-{{ $root.registryFederation.name }}
  protocolMappers:
    - config:
        jsonType.label: String
        name: drfo
        multivalued: 'false'
        userinfo.token.claim: 'true'
        aggregate.attrs: 'false'
        id.token.claim: 'true'
        user.attribute: drfo
        claim.name: drfo
        access.token.claim: 'true'
      name: drfo
      protocol: openid-connect
      protocolMapper: oidc-usermodel-attribute-mapper
    - config:
        jsonType.label: String
        name: fullName
        multivalued: 'false'
        userinfo.token.claim: 'true'
        aggregate.attrs: 'false'
        id.token.claim: 'true'
        user.attribute: fullName
        claim.name: fullName
        access.token.claim: 'true'
      name: fullName
      protocol: openid-connect
      protocolMapper: oidc-usermodel-attribute-mapper
    - config:
        jsonType.label: String
        name: edrpou
        multivalued: 'false'
        userinfo.token.claim: 'true'
        aggregate.attrs: 'false'
        id.token.claim: 'true'
        user.attribute: edrpou
        claim.name: edrpou
        access.token.claim: 'true'
      name: edrpou
      protocol: openid-connect
      protocolMapper: oidc-usermodel-attribute-mapper
---
apiVersion: v1.edp.epam.com/v1alpha1
kind: KeycloakRealmIdentityProvider
metadata:
  name: federation-idp
  annotations:
    "helm.sh/resource-policy": keep
  namespace: {{ $registry.name }}
spec:
  realm: officer-portal
  alias: federation-idp
  authenticateByDefault: true
  enabled: true
  firstBrokerLoginFlowAlias: "registry-federation-authenticator"
  providerId: "keycloak-oidc"
  config:
    clientId: {{ $registry.name }}-client
    backchannelSupported: "true"
    clientSecret: {{ $secretValue | b64dec }}
    clientAuthMethod: "client_secret_post"
    authorizationUrl: https://{{ $root.keycloak.host }}/auth/realms/registry-federation-{{ $root.registryFederation.name }}/protocol/openid-connect/auth
    userInfoUrl: https://{{ $root.keycloak.host }}/auth/realms/registry-federation-{{ $root.registryFederation.name }}/protocol/openid-connect/userinfo
    tokenUrl: https://{{ $root.keycloak.host }}/auth/realms/registry-federation-{{ $root.registryFederation.name }}/protocol/openid-connect/token
    logoutUrl: https://{{ $root.keycloak.host }}/auth/realms/registry-federation-{{ $root.registryFederation.name }}/protocol/openid-connect/logout
    issuer: https://{{ $root.keycloak.host }}/auth/realms/registry-federation-{{ $root.registryFederation.name }}
  mappers:
    - identityProviderMapper: "oidc-user-attribute-idp-mapper"
      name: "drfo"
      config:
        claim: "drfo"
        "user.attribute": "drfo"
        syncMode: "INHERIT"
    - identityProviderMapper: "oidc-user-attribute-idp-mapper"
      name: "edrpou"
      config:
        claim: "edrpou"
        "user.attribute": "edrpou"
        syncMode: "INHERIT"
    - identityProviderMapper: "oidc-user-attribute-idp-mapper"
      name: "fullName"
      config:
        claim: "fullName"
        "user.attribute": "fullName"
        syncMode: "INHERIT"
    - identityProviderMapper: "oidc-user-attribute-idp-mapper"
      name: "realm"
      config:
        claim: "realm"
        "user.attribute": "oidc-realm"
        syncMode: "INHERIT"
{{- end }}