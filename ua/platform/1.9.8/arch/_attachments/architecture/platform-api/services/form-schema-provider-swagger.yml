openapi: 3.0.3
info:
  title: UI form schemes providing service
  description: This document describes REST API of 'UI form schemes providing service'
  version: "1.0"
servers:
- url: http://localhost:7070
  description: Generated server url
tags:
- name: card-schemas-providing-api
  description: UI card schemas providing service
- name: form-schemes-providing-api
  description: UI form schemes providing service
paths:
  /api/forms/{key}:
    get:
      tags:
      - form-schemes-providing-api
      summary: Download form by key
      description: |-
        ### Endpoint purpose:
         This endpoint allows to download a form. The form is returned as a JSON object.
      operationId: getForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Form key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns uploaded form metadata
          content:
            application/json:
              schema:
                type: string
              example: |-
                {
                  "title": "Test Form",
                  "path": "test-form",
                  "name": "test-form",
                  "display": "form",
                  "components": [
                    {
                      "type": "button",
                      "label": "Submit",
                      "key": "submit",
                      "size": "md",
                      "..."
                    }
                  ],
                }
        "401":
          description: You are not authorized to get the form
          content:
            application/json: {}
        "404":
          description: Form Not Found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
    put:
      tags:
      - form-schemes-providing-api
      summary: Update form for business process
      description: |-
        ### Endpoint purpose:
         This endpoint allows to update a form that being used by process instance for get user input data. Input form being validated for DuplicateNames, and required properties fillment, and validation of form schema structure
      operationId: updateForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Form key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example: |-
              {
                "title": "Test Form",
                "path": "test-form",
                "name": "test-form",
                "display": "form",
                "components": [
                  {
                    "type": "button",
                    "label": "Submit",
                    "key": "submit",
                    "size": "md",
                    "..."
                  }
                ],
              }
        required: true
      responses:
        "200":
          description: Form updated successfully
        "400":
          description: Bad Request.
          content:
            application/json: {}
        "401":
          description: You are not authorized to update the form
          content:
            application/json: {}
        "422":
          description: Form scheme is not valid
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
    delete:
      tags:
      - form-schemes-providing-api
      summary: Delete form by key
      description: |-
        ### Endpoint purpose:
         This endpoint allows the deletion of a specific form.
      operationId: deleteFormByKey
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Form key
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Form deleted successfully
        "401":
          description: You are not authorized to delete the form
          content:
            application/json: {}
        "403":
          description: Forbidden
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /api/forms:
    post:
      tags:
      - form-schemes-providing-api
      summary: Upload form for business process
      description: "### Endpoint purpose:\n This endpoint allows to upload a form\
        \ that being used by process instance for get user input data. Input form\
        \ being validated for duplicate names, validation of form schema structure\
        \ and required properties fillment. Example : property `name` is required\
        \ and should be unique for registry "
      operationId: saveForm
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              {
                "title": "Test Form",
                "path": "test-form",
                "name": "test-form",
                "display": "form",
                "components": [
                  {
                    "type": "button",
                    "label": "Submit",
                    "key": "submit",
                    "size": "md",
                    "..."
                  }
                ],
              }
        required: true
      responses:
        "201":
          description: Form saved successfully
        "400":
          description: Bad Request.
          content:
            application/json: {}
        "401":
          description: You are not authorized to add the form
          content:
            application/json: {}
        "422":
          description: Form scheme is not valid
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /api/cards/{key}:
    get:
      tags:
      - card-schemas-providing-api
      summary: Download card by key
      description: |-
        ### Endpoint purpose:
         This endpoint allows to download a card. The card is returned as a JSON object. Difference from /api/forms/{key} is in additional checks on fields, specific for cards
      operationId: getCard
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: Card key
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns uploaded card metadata
          content:
            application/json:
              schema:
                type: string
              example: |-
                {
                  "title": "Test Card",
                  "path": "test-card",
                  "name": "test-card",
                  "type": "card",
                  "display": "form",
                  "components": [
                    {
                      "type": "button",
                      "label": "Submit",
                      "key": "submit",
                      "size": "md",
                      "..."
                    }
                  ],
                }
        "401":
          description: User is not authorized to get the card
          content:
            application/json: {}
        "403":
          description: User does not have enough privileges to get a card
          content:
            application/json: {}
        "404":
          description: Card Not Found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /api/cards/meta:
    get:
      tags:
      - card-schemas-providing-api
      summary: Load short metadata of all cards
      description: |-
        ### Endpoint purpose:
         This endpoint allows to download a list of cards with their short metadata. Response is returned as a JSON list.
      operationId: getCardsMetadata
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns list of cards short metadata
          content:
            application/json:
              schema:
                type: string
              example: |-
                [
                  {
                    "id": "card-id-1",
                    "name": "Card Id 1"
                  }
                  {
                    "id": "card-id-2",
                    "name": "Card Id 2"
                  }
                ]
        "401":
          description: User is not authorized to perform the operation
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
components: {}
