@startuml
skinparam monochrome true

actor "Користувач" as user
participant "Клієнтський додаток\n кабінету користувача" as cabinet
participant "Kong \nAPI Management" as kong
participant "Сервіс управління \n задачами користувача" as user_task_mngmnt
participant "Сервіс виконання бізнес-процесів" as bpms
participant "Дата Фабрика" as data_factory
participant "Об'єктне сховище Ceph" as ceph
participant "Сервіс постачання UI-форм" as form_provider

skinparam responseMessageBelowArrow false
title Вивантаження та перегляд файлів в рамках виконання задач користувачів

autonumber
activate bpms
  note over bpms: Бізнес-процес у виконанні
  bpms -> bpms: Підготовка даних для \nформування запиту до Дата Фабрики
  bpms -> data_factory: Отримання сутності з файловими вкладеннями
  activate data_factory
    data_factory -> data_factory: Підготовка сутності з посиланнями на Ceph-документи
    data_factory -> ceph: Збереження файлових вкладень в Ceph бакет \nдля подальшого використання в Low-code платформі
  return JSON-документ з посиланнями на Ceph-документи
  bpms -> bpms: Підготовка документу з даними для передзаповнення форми
  bpms -> ceph: Збереження даних для UI-форми задачі з файловими вкладеннями \nу вигляді посилань на Ceph-документи
  ceph --> bpms
  bpms -> bpms: Перехід до очікування виконання задачі
  bpms --> user: Повернення управління користувачу
deactivate bpms

user -> cabinet: Перехід до виконання задачі \nперегляду файлових вкладень
activate cabinet
  cabinet -> kong: Запит на отримання даних задачі: GET "/task/{id}" \nПараметри: \nІдентифікатор сесії Kong
  activate kong
    kong -> user_task_mngmnt: Запит на отримання даних задачі: GET "/task/{id}" \nПараметри: \nX-Access-Token
    activate user_task_mngmnt
      user_task_mngmnt -> bpms: Отримання метаданих задачі
      bpms --> user_task_mngmnt
      user_task_mngmnt -> user_task_mngmnt: Перевірка відповідності Assignee задачі\n поточному користувачу
      user_task_mngmnt -> user_task_mngmnt: Генерація ідентифікатора Ceph-документа \nдля отримання підготовлених даних \n(processInstanceId, taskDefinitionKey)
      user_task_mngmnt -> ceph: Читання JSON-документа даних форми за UUID
      ceph --> user_task_mngmnt: Підготовлений JSON-документ UI-форми з Ceph посиланнями файлових вкладень
      user_task_mngmnt -> form_provider: Отримання схеми UI-форми за значенням "formKey"
      form_provider --> user_task_mngmnt: JSON-схема UI-форми

      user_task_mngmnt -> user_task_mngmnt: Перевірка на наявність полів типу "File" \nзі значеннями у документі даних UI-форми
      alt Форма має поля типу "File" зі значеннями (>0 елемента в масиві)
        loop Для всіх вкладених структур - значень полів типу "File"
          user_task_mngmnt -> user_task_mngmnt: Отримання UUID посилання на Ceph документ з поля "id"
          user_task_mngmnt -> ceph: Читання Ceph-документу файлового вкладення за UUID
          ceph --> user_task_mngmnt: контент та метадані файлу ("name", "type", "size", "content")
          user_task_mngmnt -> user_task_mngmnt: Енкодинг контенту файлу в Base64 ("content)
          user_task_mngmnt -> user_task_mngmnt: Формування об'єкта файлового вкладення ("name", "type", "size", "content")
          user_task_mngmnt -> user_task_mngmnt: Заміщення елемента масива файлового вкладення новоствореним об'єктом
        end
      end
      user_task_mngmnt -> user_task_mngmnt: Формування агрегованих даних задачі \nз підготовленими даними для відображення UI-форми
      user_task_mngmnt --> cabinet: Повернення даних задачі
    deactivate
  deactivate
  cabinet -> cabinet: Приведення значень полів типу "File" до канонічного вигляду \nдля використання у клієнтському додатку
  cabinet -> cabinet: Попереднє заповнення полів UI-форми з використанням метаданих \nта Base64 контенту файлових вкладень
return

user -> cabinet: Вивантажити / Переглянути файлове вкладення на UI-формі задачі
cabinet -> cabinet: Формування файлу для вивантаження
cabinet --> user: Файл

@enduml