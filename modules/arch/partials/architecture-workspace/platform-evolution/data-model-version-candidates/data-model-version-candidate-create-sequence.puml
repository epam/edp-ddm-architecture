@startuml

autoactivate on

skinparam shadowing false
skinparam DatabaseBackgroundColor white
skinparam DatabaseBorderColor #2688d4
skinparam QueueBackgroundColor white
skinparam QueueBorderColor #2688d4
skinparam NoteBackgroundColor white
skinparam NoteBorderColor #2688d4
skinparam sequence {
    ArrowColor #2688d4
    ActorBorderColor #2688d4
    LifeLineBorderColor #2688d4
    ParticipantBorderColor #2688d4
    ParticipantBackgroundColor white
    BoxBorderColor #2688d4
    BoxBackgroundColor white
}

skinparam responseMessageBelowArrow true

actor "Розробник\n регламенту" as Dev
'participant "Registry Regulations\nManagement" as RRM


box "Registry Regulations Management"
  participant "Version Candidate\nManager" as VCM
  participant "DataModel\nManager" as TablesManager
  participant "DataModelSnapshot\nManager" as SnapshotManager
  participant "DBSchema\nManager" as DBSchemaManager
end box


box "PostgreSQL"
  participant "Template\nDB Schema" as TemplateDB
  participant "Registry dev VC\nDB Schema" as VCTemplateDB
end box


box "OKD Job's"
  participant "run-db-scripts" as OkdJob
end box

OkdJob -> TemplateDB ** : Створює та розгортає

'Create version candidate flow
Dev -> VCM: Створює версію-кандидат
  VCM -> TablesManager: Створює тимчасову БД
    TablesManager -> DBSchemaManager: Створює тимчасову БД
      DBSchemaManager -> TemplateDB: отримує еталонну БДc
      DBSchemaManager <-- TemplateDB: result
      DBSchemaManager -> VCTemplateDB ** : Створює тимчасову схему БД
      DBSchemaManager <-- VCTemplateDB: result
    DBSchemaManager --> TablesManager : result


    TablesManager -> DBSchemaManager: Розгортання тимчасової БД моделлю даних регламенту реєстру
      DBSchemaManager -> VCTemplateDB: Розгортання моделі даних по liquibase changelog's майстер версії
      DBSchemaManager <-- VCTemplateDB: result
      DBSchemaManager -> VCTemplateDB: Розгортання моделі даних по liquibase changelog's версії-кандидату
      DBSchemaManager <-- VCTemplateDB: result
    DBSchemaManager --> TablesManager: result

    TablesManager -> SnapshotManager: Зчитування структури БД
      SnapshotManager -> TemplateDB: Зчитування структури\nтимчасової БД
      TemplateDB --> SnapshotManager: result
      SnapshotManager -> SnapshotManager: Створення та збереження\nDataModelSnapshot файлів
    SnapshotManager --> TablesManager: result

  TablesManager --> VCM: result

VCM --> Dev: result

Dev -> TablesManager: Отримує перелік таблиць моделі даних
  TablesManager -> SnapshotManager: Зчитування переліку файлів DataModelSnapshot tables
  SnapshotManager --> TablesManager: result
TablesManager --> Dev: Перелік таблиць версії-кандидату

@enduml