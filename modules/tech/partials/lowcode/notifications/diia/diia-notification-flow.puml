@startuml
skinparam shadowing false
skinparam DatabaseBackgroundColor white
skinparam DatabaseBorderColor #2688d4
skinparam QueueBackgroundColor white
skinparam QueueBorderColor #2688d4
skinparam NoteBackgroundColor white
skinparam NoteBorderColor #2688d4
skinparam sequence {
    ArrowColor #2688d4
    ActorBorderColor #2688d4
    LifeLineBorderColor #2688d4
    ParticipantBorderColor #2688d4
    ParticipantBackgroundColor white
    BoxBorderColor #2688d4
    BoxBackgroundColor white
}

queue "'diia-channel-notifications'\n Kafka Topic" as diia_notifications_kafka_topic
box "Сервіс нотифікацій користувачів"
  participant "Diia Channel \nNotification Subscriber" as diia_channel_notification_subscriber
  participant "Diia \nNotification Service" as diia_remote_notification_service
  participant "Audit Service" as audit_service
end box
participant "Шлюз відправки \npush-нотифікацій в Дію" as diia_notification_service
queue "'audit-events'\n Kafka Topic" as audit_events_kafka_topic
queue "'diia-channel-notifications.DLT'\n Kafka Topic" as diia_notifications_dlt_kafka_topic

alt Відправка повідомлення
  loop Виконання N спроб на відправку згідно налаштувань у разі помилки обробки повідомлення
  diia_channel_notification_subscriber -> diia_notifications_kafka_topic
  note left
    {
      "context": {
        "system": "Low-code Platform",
        "application": "<bpms.app.name>",
        "businessProcess": "<optional>",
        "businessProcessDefinitionId": "<optional>",
        "businessProcessInstanceId": "<optional>",
        "businessActivity": "<optional>",
        "businessActivityInstanceId": "<optional>"
      },
      "notification": {
        "externalTemplateId": "<external template id>"
      },
      "recipient": {
        "id": "<Ідентифікатор користувача - optional>",
        "rnokpp": "<ІПН користувача>",
        "parameters": [
          {
            "key": "<key>",
            "value": "<value>"
          }
        ]
      }
    }
  end note

  activate diia_channel_notification_subscriber
    diia_channel_notification_subscriber -> diia_remote_notification_service: Аутентифікація партнера з {Partner Token}
    diia_remote_notification_service -> diia_notification_service: Аутентифікація партнера: \n**GET /api/v1/auth/partner/{partnerToken}**
    diia_notification_service --> diia_remote_notification_service: Токен доступу
    note right
      {
        "token": "<authorization token>"
      }
    end note
    diia_notification_service --> diia_channel_notification_subscriber: Токен доступу
    diia_channel_notification_subscriber -> diia_channel_notification_subscriber: Обробка результату запиту
    alt У разі помилки виконання запиту
      diia_channel_notification_subscriber --> diia_notifications_kafka_topic
    end

    diia_channel_notification_subscriber -> diia_channel_notification_subscriber: Побудова об'єкту повідомлення \nз даних запиту на відправку

    diia_channel_notification_subscriber -> diia_remote_notification_service: Відправка повідомлення з {Bearer Token}
    note left
    {
        "templateId": "6132008a2db328003c5d1d43",
        "recipients": [
            {
                "rnokpp": "314...",
                "id": "string",
                "parameters": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ]
            }
        ]
    }
    end note

    diia_remote_notification_service -> diia_notification_service: **Реєстрація розсилки push-нотифікацій за заданим шаблоном** \nPOST /api/v1/notification/distribution/push \n*Authorization: "Bearer <authorization token>"
    diia_notification_service --> diia_remote_notification_service: **201** - Ідентифікатор розсилки
    note right
    {
      "distributionId": "12345678901"
    }
    end note

    diia_remote_notification_service --> diia_channel_notification_subscriber: OK

    diia_channel_notification_subscriber -> diia_channel_notification_subscriber: Обробка результату запиту
    alt У разі помилки виконання запиту
      diia_channel_notification_subscriber --> diia_notifications_kafka_topic
    end
    diia_channel_notification_subscriber -> diia_channel_notification_subscriber: Формування події аудиту
    diia_channel_notification_subscriber -> audit_service: Фіксація події аудиту **SEND_USER_NOTIFICATION** (success)
    note left
      {
        "notification": {
          "channel:": "diia",
          "externalTemplateId": "<Ідентифікатор шаблону>",
          "recipient": {
            "id": "<Ідентифікатор користувача>",
            "rnokpp": "<ІПН користувача>",
            "parameters": [
              {
                "key": "<key>",
                "value": "<value>"
              }
            ]
          }
        }
      }
    end note
    audit_service -> audit_events_kafka_topic: Публікація події аудиту
    audit_events_kafka_topic --> audit_service
    audit_service --> diia_channel_notification_subscriber: OK
    diia_channel_notification_subscriber --> diia_notifications_kafka_topic: Подію опрацьовано: ACK
  end
else Повідомлення не відправлено
    diia_channel_notification_subscriber -> diia_notifications_dlt_kafka_topic: Публікації події в Dead Letter Topic
    diia_notifications_dlt_kafka_topic --> diia_channel_notification_subscriber
    diia_channel_notification_subscriber --> diia_notifications_kafka_topic: Подію опрацьовано: ACK
end
deactivate diia_channel_notification_subscriber
@enduml