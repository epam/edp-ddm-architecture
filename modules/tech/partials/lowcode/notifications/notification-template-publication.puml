@startuml
skinparam shadowing false
skinparam DatabaseBackgroundColor white
skinparam DatabaseBorderColor #2688d4
skinparam QueueBackgroundColor white
skinparam QueueBorderColor #2688d4
skinparam NoteBackgroundColor white
skinparam NoteBorderColor #2688d4
skinparam ActorBackgroundColor white
skinparam ControlBackgroundColor white
skinparam ControlBorderColor #2688d4
skinparam sequence {
    ArrowColor #2688d4
    ActorBorderColor #2688d4
    LifeLineBorderColor #2688d4
    ParticipantBorderColor #2688d4
    ParticipantBackgroundColor white
    BoxBorderColor #2688d4
    BoxBackgroundColor white
}

actor "Адміністратор \nрегламенту" as registry_admin
participant "Сервіс перегляду \nта інспекції змін \nрегламенту \n(**gerrit**)" as gerrit
database "Репозиторій \nрегламенту \n(**git**)" as regulation_repository
box Registry Jenkins
control "Пайплайн \nпублікації змін регламенту" as publication_pipeline
end box
participant "Утиліта \nпублікації шаблонів \n(**notification-template-publisher**)" as template_publisher
database "Сховище шаблонів \n(**citus-master**)" as template_db

registry_admin -> gerrit: Формування запиту \nна внесення змін до шаблонів
activate gerrit
  gerrit -> gerrit: Інспекція змін
  gerrit -> regulation_repository: Інтеграція змін до основної гілки
  regulation_repository --> gerrit
  gerrit --> registry_admin
deactivate gerrit

publication_pipeline -> regulation_repository: Відслідковування змін \n в '**<registry-regulation>/notifications/templates**'
activate publication_pipeline
  publication_pipeline -> publication_pipeline: Формування переліку змінених шаблонів
  publication_pipeline -> template_publisher: Публікація змінених шаблонів
  == Публікація шаблонів поштових повідомлень (channel=email) ==
  activate template_publisher
    loop Для кожного зміненого шаблону
      template_publisher -> template_publisher: Завантаження шаблону та пов'язаних ресурсів \nз директорії шаблону \n("notification.ftlh", "images/*.*", "style/*.css")
      template_publisher -> template_publisher: Побудова об'єктної моделі HTML-документу шаблону \nна базі "ftlh"-файлу
      template_publisher -> template_publisher: Інтеграція зовнішніх ресурсів зображень \nяк частини єдиного HTML-документу шаблону \n(data:image/jpeg;base64)
      template_publisher -> template_publisher: Інтеграція зовнішнього ресурса стилів (css/style.css) \nяк частини єдиного HTML-документу шаблону
      template_publisher -> template_publisher: Формування результуючого HTML-документу шаблону
      template_publisher -> template_publisher: Калькуляція SHA-256 чек-суми \nна результуючий HTML-документ шаблону
      template_publisher -> template_db: Отримання запису про шаблон \nза ім'ям директорії шаблону \nу якості назви та типом каналу зв'язку
      template_db --> template_publisher: Запис шаблону
    note right
      {
          "ID": "{UUID}",
          "NAME": "{template_name}",
          "CHANNEL:": "email",
          "CONTENT:": "{content}",
          "CHECKSUM": "{sha256-hash}",
          "CREATED_AT": "{timestamp}",
          "UPDATED_AT": "{timestamp}"
      }
    end note
      alt Новий шаблон
        template_publisher -> template_db: Збереження нового шаблону \nз ім'ям директорії шаблону \nу якості назви та типом каналу зв'язку
        template_db --> template_publisher
      else Зміна існуючого шаблону
        template_publisher -> template_publisher: Перевірка чек-сум документів \nзформованого шаблону та існуючого
        alt Чек-суми не співпадають - Шаблон змінено
          template_publisher -> template_db: Оновлення шаблону \nз ім'ям директорії шаблону \nу якості назви та типом каналу зв'язку
          template_db --> template_publisher
        end
      end
    end
    template_publisher --> publication_pipeline: Шаблони опубліковано
  deactivate template_publisher

deactivate publication_pipeline
@enduml