antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,20.659,1,16.842]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[2,19.324,3,49.063,4,59.288]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[5,31.159,6,29.915,7,35.43,8,15.816]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[1,10.37,3,33.979,8,12.169,9,24.854,10,38.914,11,19.057,12,41.06]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[13,22.44,14,46.12,15,31.386]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1",[1,14.973,8,17.571,16,37.492]],["name/1",[17,2.753]],["text/1",[0,1.062,1,1.98,2,0.656,3,2.838,4,2.013,5,1.176,6,2.511,7,1.337,8,2.602,9,1.219,10,1.908,11,2.455,12,2.013,13,0.762,14,1.566,15,1.066,16,3.344,18,0.829,19,1.04,20,0.891,21,1.827,22,3.786,23,3.677,24,1.319,25,2.832,26,1.125,27,1.7,28,1.291,29,2.396,30,1.317,31,2.266,32,4.479,33,1.542,34,2.721,35,3.069,36,1.851,37,1.267,38,2.676,39,3.076,40,1.694,41,2.223,42,3.304,43,2.013,44,1.62,45,1.457,46,1.579,47,1.304,48,2.721,49,1.758,50,2.721,51,2.721,52,1.059,53,2.159,54,1.351,55,1.317,56,1.592,57,0.893,58,2.3,59,2.721,60,2.811,61,1.304,62,3.917,63,2.301,64,2.99,65,2.759,66,1.171,67,2.721,68,1.351,69,2.721,70,1.94,71,2.159,72,1.975,73,2.223,74,1.049,75,1.908,76,2.994,77,3.181,78,1.94,79,2.721,80,1.908,81,2.104,82,1.234,83,3.25,84,1.365,85,3.069,86,2.721,87,2.625,88,4.301,89,1.487,90,3.11,91,2.886,92,3.03,93,1.833,94,1.879,95,3.404,96,1.718,97,1.635,98,3.502,99,1.683,100,1.995,101,1.24,102,3.584,103,2.525,104,1.477,105,5.618,106,4.634,107,1.154,108,1.273,109,2.179,110,1.273,111,3.069,112,2.104,113,1.718,114,1.477,115,1.467,116,2.525,117,2.223,118,3.677,119,2.076,120,1.738,121,1.718,122,1.323,123,2.159,124,1.826,125,2.223,126,2.811,127,2.159,128,1.162,129,1.826,130,1.975,131,1.851,132,1.826,133,1.189,134,1.683,135,2.721,136,2.525,137,2.525,138,2.364,139,2.533,140,2.3,141,1.718,142,1.975,143,1.826,144,1.94,145,2.721,146,2.525,147,1.421,148,3.25,149,1.908,150,2.326,151,1.291,152,2.525,153,1.826,154,0.864,155,2.721,156,2.104,157,1.03,158,0.893,159,1.25,160,0.954,161,1.542,162,1.839,163,1.53,164,4.127,165,2.721,166,0.92,167,2.223,168,0.786,169,2.467,170,2.605,171,2.056,172,0.965,173,1.467,174,1.337,175,1.88,176,1.633,177,1.194,178,0.925,179,1.396,180,2.223,181,1.758,182,1.273,183,1.477,184,1.908,185,2.525,186,2.721,187,1.317,188,1.487,189,2.223,190,2.159,191,2.013,192,0.949,193,1.25,194,2.223,195,0.918,196,2.721,197,1.65,198,1.975,199,2.013,200,1.117,201,1.256,202,1.24,203,0.937,204,1.373,205,1.995,206,2.525,207,2.525,208,2.721,209,1.579,210,1.975,211,2.396]],["component/1",[1,0.4]],["title/2",[212,81.708]],["name/2",[1,0.511,212,2.167]],["text/2",[1,1.637,6,1.064,8,2.579,10,0.513,11,1.767,16,2.849,19,2.716,20,2.657,21,0.791,22,0.598,23,1.592,24,2.75,25,3.43,26,0.578,27,0.457,28,2.092,31,1.334,33,3.45,37,0.935,38,2.571,39,2.215,40,1.126,42,0.997,44,1.195,46,0.425,49,0.473,53,0.581,54,1.53,55,2.133,56,1.601,57,1.689,61,2.466,64,0.521,66,2.062,68,0.363,72,0.531,74,0.539,77,1.053,81,0.566,83,0.513,87,0.606,89,2.185,90,0.938,91,0.667,92,1.312,93,1.743,98,1.056,99,1.906,100,1.104,101,1.62,107,0.851,108,0.654,109,0.657,110,0.342,111,0.485,114,0.397,115,1.661,119,2.727,122,0.356,126,1.217,128,2.046,133,0.877,134,0.865,138,2.424,139,1.402,141,2.247,148,0.513,150,0.702,151,0.952,153,0.938,154,1.84,157,0.529,158,0.24,159,0.336,163,0.412,164,0.295,166,1.62,167,0.598,168,2.117,170,0.864,172,0.496,173,1.918,174,1.514,175,2.223,176,2.256,177,1.755,178,1.969,179,0.717,180,0.598,182,0.342,188,0.4,192,2.48,193,0.922,195,0.866,199,0.541,200,2.25,201,3.174,202,2.217,203,1.518,204,0.705,205,1.721,213,0.965,214,2.175,215,0.403,216,2.355,217,0.598,218,1.818,219,2.639,220,2.007,221,0.732,222,0.732,223,0.732,224,0.732,225,0.618,226,0.679,227,3.095,228,1.45,229,0.444,230,0.764,231,0.952,232,1.769,233,0.522,234,0.732,235,0.616,236,0.331,237,1.822,238,1.505,239,1.113,240,1.155,241,1.934,242,0.618,243,0.654,244,1.034,245,1.223,246,0.952,247,1.331,248,0.361,249,0.553,250,1.772,251,1.068,252,0.999,253,0.64,254,2.893,255,0.363,256,0.618,257,0.856,258,0.907,259,1.876,260,0.676,261,0.541,262,0.732,263,0.566,264,0.462,265,1.109,266,0.732,267,0.558,268,0.44,269,0.444,270,0.408,271,0.682,272,0.732,273,1.297,274,1.604,275,1.847,276,1.738,277,0.392,278,0.854,279,0.598,280,1.075,281,0.316,282,0.412,283,0.905,284,1.457,285,0.566,286,0.856,287,2.036,288,0.654,289,0.732,290,1.129,291,2.111,292,0.531,293,0.59,294,0.288,295,0.874,296,0.857,297,0.448,298,1.146,299,0.296,300,0.498,301,0.618,302,0.981,303,0.931,304,0.573,305,0.775,306,2.049,307,0.618,308,1.412,309,0.581,310,1.358,311,0.775,312,0.299,313,1.785,314,0.786,315,0.553,316,0.759,317,0.624,318,0.679,319,0.436,320,0.679,321,0.811,322,1.155,323,2.156,324,2.362,325,0.581,326,1.122,327,1.048,328,0.744,329,0.478,330,1.312,331,2.713,332,1.297,333,1.179,334,1.347,335,0.485,336,1.398,337,0.462,338,0.598,339,0.44,340,0.553,341,0.732,342,0.866,343,1.552,344,0.531,345,1.203,346,1.489,347,1.6,348,0.732,349,0.644,350,0.732,351,1.297,352,0.732,353,0.598,354,0.448,355,0.732,356,0.644,357,1.658,358,2.015,359,1.699,360,0.69,361,0.832,362,0.432,363,0.799,364,0.679,365,0.732,366,0.732,367,0.644,368,0.581,369,1.139,370,0.513,371,0.732,372,0.598,373,0.581,374,0.505,375,1.142,376,0.566,377,0.425,378,0.581,379,0.309,380,1.393,381,0.339,382,0.598,383,0.444,384,1.455,385,0.732,386,1.219,387,0.385,388,0.553,389,1.836,390,0.457,391,0.679,392,0.732,393,0.436,394,0.618,395,0.369,396,0.769,397,0.644,398,0.371,399,0.618,400,0.618,401,0.403,402,0.462,403,0.478,404,1.552,405,0.498,406,0.457,407,1.696,408,0.651,409,0.479,410,0.78,411,0.505,412,0.4,413,1.43,414,0.914,415,1.075,416,0.811,417,1.082,418,1.034,419,0.382,420,0.726,421,0.525,422,1.155,423,1.174,424,0.491,425,0.679,426,2.851,427,1.398,428,0.914,429,1.398,430,1.129,431,0.598,432,0.387,433,0.598,434,0.618,435,0.732,436,0.444,437,0.448,438,0.842,439,0.387,440,0.566,441,0.473,442,0.361,443,1.517,444,2.26,445,1.177,446,1.918,447,1.231,448,1.142,449,0.893,450,0.739,451,0.349,452,0.732,453,0.598,454,0.702,455,0.397,456,0.338,457,0.485,458,0.732,459,0.38,460,0.523,461,1.528,462,0.361,463,0.825,464,0.32,465,1.431,466,0.369,467,0.412,468,0.732,469,0.581,470,0.786,471,0.44,472,1.068,473,0.531,474,0.341,475,0.732,476,0.679,477,0.618,478,0.618,479,0.376,480,0.598,481,0.321,482,0.541,483,0.68,484,0.513,485,0.566,486,0.462,487,0.599,488,0.378,489,0.354,490,0.541,491,0.485,492,0.581,493,0.478,494,0.769,495,0.448,496,1.075,497,1.347,498,0.644,499,0.618,500,0.542,501,0.38,502,0.848,503,0.856,504,0.644,505,0.467,506,0.478,507,0.432,508,0.553,509,0.403,510,0.415,511,0.329,512,0.365,513,0.553,514,0.467,515,0.802,516,0.926,517,0.581,518,0.644,519,0.531,520,0.84,521,0.581,522,0.644,523,0.428,524,0.418,525,0.679,526,0.679,527,0.462,528,0.541,529,0.611,530,0.478,531,0.683,532,0.848,533,0.581,534,0.354,535,0.491,536,0.679,537,0.432,538,0.444,539,0.354,540,0.418,541,0.611,542,0.478,543,0.425,544,1.081,545,0.44,546,0.326,547,0.513,548,0.553,549,0.347,550,0.566,551,0.732,552,0.444,553,0.415,554,0.473,555,0.566,556,0.581,557,0.732,558,0.732,559,1.081,560,1.604,561,1.142,562,1.142,563,0.444,564,0.644,565,0.287,566,0.294,567,0.865,568,0.418,569,0.581,570,0.732,571,0.644,572,0.478,573,0.491,574,0.644,575,0.541,576,0.301,577,0.32,578,0.644,579,0.644,580,0.618,581,0.732,582,0.467,583,0.421,584,0.581,585,0.513]],["component/2",[1,0.4]],["title/3",[1,16.842,77,30.792]],["name/3",[235,1.204,586,0.867]],["text/3",[]],["component/3",[1,0.4]],["title/4-1",[0,20.659,587,79.368]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[2,19.324,588,43.788,589,48.593]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[8,15.816,13,20.198,589,43.739,590,39.146]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4-4",[326,35.794,328,29.533,398,28.155,589,33.653,591,18.35,592,41.06]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["title/4-5",[326,28.663,590,35.591,592,48.518,593,24.823,594,38.051]],["name/4-5",[]],["text/4-5",[]],["component/4-5",[]],["title/4-6",[8,14.38,326,28.663,592,48.518,594,38.051,595,28.22]],["name/4-6",[]],["text/4-6",[]],["component/4-6",[]],["title/4-7",[8,17.571,511,36.039,596,39.567]],["name/4-7",[]],["text/4-7",[]],["component/4-7",[]],["title/4-8",[8,15.816,247,18.647,589,43.739,597,38.632]],["name/4-8",[]],["text/4-8",[]],["component/4-8",[]],["title/4",[8,19.765,589,54.659]],["name/4",[8,0.599,589,1.657]],["text/4",[0,0.94,1,0.658,2,0.696,6,0.573,8,2.535,11,1.103,13,0.387,15,0.701,18,0.149,19,0.187,24,0.27,30,0.237,31,0.231,38,0.52,40,0.179,52,1.123,55,0.459,56,1.564,57,0.714,74,0.189,77,1.097,80,1.255,82,0.431,84,0.694,87,0.599,90,1.201,93,0.86,96,0.6,99,0.303,104,1.181,107,0.208,109,1.51,110,0.229,120,0.313,122,0.238,124,0.329,128,0.765,138,0.84,144,0.349,154,0.691,157,0.359,158,2.391,160,0.485,162,1.275,164,1.965,166,1.477,168,1.407,169,0.387,172,0.337,173,1.173,175,0.129,176,0.734,177,0.607,182,1.018,183,0.266,184,0.343,187,0.459,192,0.624,200,0.39,202,0.943,203,0.327,205,0.211,209,0.284,214,1.835,227,0.213,231,0.849,232,0.612,235,0.609,236,3.643,237,0.202,238,2.569,239,3.095,241,0.237,243,1.787,245,1.008,247,1.486,248,0.683,252,1.798,253,1.876,271,4.43,275,0.254,276,0.239,278,0.404,280,1.165,281,0.41,283,2.097,293,1.953,296,1.751,299,0.56,302,0.239,303,1.489,304,0.621,306,2.032,308,1.768,310,1.807,312,0.565,317,2.973,321,2.044,322,0.547,323,0.512,324,0.561,326,4.736,328,3.547,330,0.32,342,1.797,345,0.371,347,0.493,353,0.776,357,0.316,369,0.181,379,0.401,380,0.541,381,0.227,384,3.224,386,0.194,387,0.257,388,0.37,390,0.593,395,0.697,396,1.587,398,3.695,403,0.32,409,0.168,410,0.273,413,0.197,415,0.262,420,0.254,422,0.547,428,0.433,431,0.776,436,0.297,438,2.188,439,1.526,441,1.641,442,1.425,445,0.684,446,0.264,451,0.233,456,0.226,460,1.428,463,0.56,464,1.404,470,0.534,474,1.013,483,0.238,488,0.49,495,0.3,500,1.591,501,0.254,506,0.621,511,0.427,512,1.44,514,0.313,515,0.715,528,0.362,529,1.11,532,1.749,534,2.238,535,2.155,538,0.576,539,1.984,541,0.415,545,0.294,546,1.829,563,0.297,565,0.541,566,0.197,572,0.621,576,1.573,577,0.214,584,0.388,587,0.431,588,0.519,589,4.743,590,0.515,591,0.162,592,6.054,593,0.185,594,2.044,595,0.211,596,0.242,597,0.262,598,0.316,599,0.459,600,0.656,601,0.451,602,0.677,603,1.119,604,1.516,605,0.414,606,1.829,607,0.362,608,0.999,609,1.158,610,0.414,611,0.49,612,0.949,613,0.49,614,0.4,615,0.454,616,0.49,617,0.49,618,1.945,619,3.54,620,0.49,621,0.949,622,0.329,623,0.992,624,0.371,625,0.324,626,1.007,627,0.607,628,2.235,629,1.781,630,4.364,631,2.29,632,2.18,633,0.49,634,2.044,635,0.454,636,0.4,637,0.454,638,0.454,639,0.297,640,0.289,641,0.454,642,1.382,643,0.316,644,0.303,645,1.661,646,1.382,647,0.431,648,0.49,649,0.69,650,0.184,651,0.343,652,0.745,653,1.143,654,1.661,655,0.751,656,0.431,657,1.076,658,1.42,659,0.448,660,1.3,661,0.268,662,2.154,663,1.273,664,1.359,665,3.801,666,0.703,667,2.181,668,0.949,669,4.122,670,1.42,671,1.223,672,0.282,673,0.37,674,0.753,675,0.949,676,0.289,677,0.349,678,0.243,679,2.719,680,0.49,681,0.37,682,1.799,683,0.803,684,2.592,685,0.761,686,1.384,687,0.969,688,1.022,689,1.725,690,0.338,691,0.49,692,0.613,693,2.274,694,0.333,695,0.49,696,0.49,697,0.49,698,3.158,699,0.526,700,0.783,701,1.115,702,0.56,703,0.427,704,0.324,705,1.185,706,0.83,707,2.175,708,1.726,709,1.661,710,1.576,711,1.513,712,1.462,713,1.79,714,1.299,715,1.236,716,0.379,717,0.261,718,0.306,719,1.057,720,0.919,721,0.355,722,1.382,723,0.388,724,0.343,725,1.768,726,0.593,727,1.987,728,0.6,729,1.905,730,1.557,731,3.193,732,0.303,733,0.282,734,0.512,735,0.246,736,0.459,737,0.32,738,1.092,739,0.93,740,0.855,741,3.625,742,0.49,743,1.811,744,0.872,745,1.555,746,0.776,747,0.776,748,0.849,749,0.49,750,0.49,751,0.726,752,0.49,753,0.333,754,0.213,755,0.49,756,0.431,757,0.621,758,0.703,759,0.893,760,2.562,761,1.661,762,0.49,763,0.32,764,0.241,765,0.49,766,0.949,767,0.32,768,0.431,769,0.776,770,0.836,771,0.454,772,0.949,773,1.044,774,0.893,775,0.49,776,0.703,777,0.37,778,0.883,779,0.251,780,0.256,781,0.474,782,0.753,783,0.753,784,0.753,785,0.753,786,1.129,787,0.49,788,0.547,789,0.986,790,0.49,791,0.881,792,0.776,793,0.349,794,0.355,795,0.355,796,0.49,797,1.864,798,2.981,799,0.313,800,0.431,801,0.49,802,0.6,803,0.949,804,0.576,805,0.718,806,0.49,807,0.457,808,0.949,809,0.49,810,0.49,811,0.909,812,0.484,813,0.656,814,0.49,815,0.388,816,0.753,817,0.49,818,0.556,819,0.338,820,0.242,821,0.329,822,2.529,823,0.606,824,0.734,825,1.384,826,0.881,827,0.49,828,0.414,829,0.49,830,0.49,831,1.131,832,0.717,833,0.49,834,0.836,835,0.836,836,0.414,837,0.49,838,0.542,839,0.846,840,1.057,841,0.949,842,0.836,843,0.949,844,0.949,845,0.949,846,0.949,847,0.949,848,1.066,849,0.949,850,0.629,851,0.949,852,0.949,853,0.949,854,0.776,855,0.949,856,0.949,857,0.49,858,0.49,859,0.949,860,0.836,861,0.547,862,0.949,863,0.49,864,0.454,865,0.454,866,1.44,867,1.42,868,0.949,869,1.822,870,0.949,871,0.49,872,0.49,873,0.434,874,0.49,875,0.83,876,0.717,877,0.338,878,0.949,879,0.949,880,0.454,881,0.362,882,0.343,883,0.388,884,1.283,885,0.949,886,0.32,887,0.883,888,1.069,889,0.259,890,0.969,891,0.454,892,0.414,893,0.454,894,0.338,895,0.197,896,0.257,897,0.999,898,0.949,899,0.949,900,0.49,901,0.49,902,0.49,903,0.4,904,0.4,905,0.677,906,0.881,907,0.454,908,0.49,909,0.37,910,0.949,911,0.35,912,0.49,913,0.379,914,0.49,915,0.49,916,0.881,917,0.362,918,0.454,919,0.49,920,0.414,921,0.292,922,0.49,923,0.49,924,0.49,925,0.49,926,0.637,927,0.414,928,0.49,929,0.587,930,0.49,931,0.306,932,0.379,933,0.431,934,0.6,935,0.454,936,0.329,937,0.454,938,0.297]],["component/4",[1,0.4]],["title/5-1",[939,45.333,940,55.49,941,46.902,942,51.497,943,51.497,944,51.497,945,48.866]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[819,41.503,939,49.107,946,55.784,947,37.965,948,47.692,949,49.107]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5",[211,90.689]],["name/5",[211,3.92]],["text/5",[1,1.123,7,2.953,8,1.904,177,2.638,202,1.608,210,4.363,271,2.95,671,2.548,682,2.638,698,4.221,730,2.45,819,5.993,886,3.93,939,4.91,941,5.08,942,5.578,944,5.578,945,5.293,946,5.578,947,7.788,948,4.769,949,8.323,950,3.46,951,3.517,952,5.578,953,5.578,954,5.08,955,6.011,956,6.011,957,8.055,958,6.011,959,6.011,960,5.578,961,5.578,962,5.578,963,6.011,964,6.011,965,6.011,966,6.011,967,6.011,968,6.011,969,6.011,970,4.648,971,6.011,972,6.011,973,6.011,974,6.011,975,6.011,976,6.011,977,5.578,978,6.011,979,6.011,980,6.011,981,3.033,982,6.011,983,8.68,984,6.011,985,6.011,986,10.188,987,7.644,988,8.68,989,8.68,990,8.68,991,8.68,992,8.68,993,6.011,994,5.578,995,6.011,996,6.011,997,6.011,998,6.011,999,5.578,1000,6.011,1001,6.011,1002,6.011,1003,6.011,1004,6.011,1005,6.011,1006,6.011]],["component/5",[1,0.4]],["title/6-1",[0,13.778,64,22.42,126,36.455,139,32.85,288,28.127,1007,45.42]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[64,26.9,139,39.414,1007,54.495,1008,41.852]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[288,37.492,445,30.611,1009,51.764]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[21,28.433,288,33.747,1010,66.93,1011,39.97]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6-5",[288,28.127,445,33.163,1012,55.784,1013,67.122]],["name/6-5",[]],["text/6-5",[]],["component/6-5",[]],["title/6-6",[288,33.747,321,41.852,1014,66.93,1015,60.957]],["name/6-6",[]],["text/6-6",[]],["component/6-6",[]],["title/6-7",[31,13.503,40,20.282,169,22.618,423,25.39,665,32.471,1016,51.497,1017,51.497]],["name/6-7",[]],["text/6-7",[]],["component/6-7",[]],["title/6-8",[288,33.747,511,32.439,1018,66.93,1019,66.93]],["name/6-8",[]],["text/6-8",[]],["component/6-8",[]],["title/6-9",[40,26.361,445,27.553,1020,66.93,1021,57.221]],["name/6-9",[]],["text/6-9",[]],["component/6-9",[]],["title/6-10",[57,16.915,168,14.884,269,31.251,1022,47.821,1023,47.821,1024,21.528,1025,47.821,1026,35.059]],["name/6-10",[]],["text/6-10",[]],["component/6-10",[]],["title/6-11",[2,17.393,64,26.9,126,43.739,1007,54.495]],["name/6-11",[]],["text/6-11",[]],["component/6-11",[]],["title/6-12",[5,31.159,20,23.617,170,31.039,338,58.918]],["name/6-12",[]],["text/6-12",[]],["component/6-12",[]],["title/6-13",[57,23.675,64,26.9,90,48.391,1027,50.576]],["name/6-13",[]],["text/6-13",[]],["component/6-13",[]],["title/6-14",[1007,54.495,1028,52.348,1029,63.511,1030,66.93]],["name/6-14",[]],["text/6-14",[]],["component/6-14",[]],["title/6-15",[90,43.996,150,32.903,1031,49.546,1032,45.983,1033,55.421]],["name/6-15",[]],["text/6-15",[]],["component/6-15",[]],["title/6-16",[114,39.146,1034,60.957,1035,66.93,1036,47.755]],["name/6-16",[]],["text/6-16",[]],["component/6-16",[]],["title/6-17",[1036,43.418,1037,60.851,1038,40.973,1039,43.418,1040,60.851]],["name/6-17",[]],["text/6-17",[]],["component/6-17",[]],["title/6-18",[706,39.397,1036,43.418,1038,40.973,1041,60.851,1042,60.851]],["name/6-18",[]],["text/6-18",[]],["component/6-18",[]],["title/6-19",[19,22.965,20,19.684,57,19.732,139,32.85,1043,50.807,1044,44.479]],["name/6-19",[]],["text/6-19",[]],["component/6-19",[]],["title/6-20",[193,33.144,1044,53.365,1045,66.93,1046,66.93]],["name/6-20",[]],["text/6-20",[]],["component/6-20",[]],["title/6-21",[13,20.198,238,27.14,445,27.553,510,40.868]],["name/6-21",[]],["text/6-21",[]],["component/6-21",[]],["title/6-22",[445,27.553,1047,34.723,1048,53.365,1049,44.162]],["name/6-22",[]],["text/6-22",[]],["component/6-22",[]],["title/6-23",[445,27.553,511,32.439,1050,35.07,1051,63.511]],["name/6-23",[]],["text/6-23",[]],["component/6-23",[]],["title/6-24",[511,36.039,1052,42.644,1053,52.391]],["name/6-24",[]],["text/6-24",[]],["component/6-24",[]],["title/6-25",[502,43.739,511,32.439,1051,63.511,1054,42.565]],["name/6-25",[]],["text/6-25",[]],["component/6-25",[]],["title/6-26",[1,13.477,150,36.19,511,32.439,1055,66.93]],["name/6-26",[]],["text/6-26",[]],["component/6-26",[]],["title/6-27",[445,33.163,501,31.213,805,45.074,1056,37.561]],["name/6-27",[]],["text/6-27",[]],["component/6-27",[]],["title/6-28",[19,19.686,20,16.874,46,29.903,64,19.22,176,11.771,445,19.686,805,26.757,1057,47.821]],["name/6-28",[]],["text/6-28",[]],["component/6-28",[]],["title/6-29",[445,30.611,1058,74.358,1059,74.358]],["name/6-29",[]],["text/6-29",[]],["component/6-29",[]],["title/6-30",[40,21.971,409,20.59,591,19.877,1060,30.499,1061,34.882,1062,39.305]],["name/6-30",[]],["text/6-30",[]],["component/6-30",[]],["title/6",[60,39.766,64,24.456,126,39.766,238,24.675,510,37.156]],["name/6",[288,1.278,445,1.044]],["text/6",[0,0.381,1,1.134,2,0.144,5,0.258,6,0.248,7,0.817,10,0.419,11,0.571,13,0.167,15,0.234,16,0.279,18,0.507,19,1.927,20,2.265,21,1.485,24,0.327,26,0.247,27,0.373,28,0.283,31,0.63,35,1.714,38,0.813,39,1.771,40,1.843,44,0.685,46,0.346,55,0.289,56,1.168,57,2.138,60,0.697,61,0.551,62,0.505,63,0.826,64,3.765,66,0.495,68,0.296,70,0.426,71,0.474,74,0.23,76,1.673,78,0.426,82,0.972,87,1.634,89,1.171,90,5.116,91,0.285,93,0.236,95,0.647,100,1.912,101,0.524,107,0.488,108,0.779,109,0.541,113,0.377,114,0.624,121,0.377,126,3.819,129,0.772,130,0.433,131,1.132,133,0.727,134,0.369,137,0.554,139,3.318,143,0.772,147,0.312,148,0.419,150,3.906,151,1.017,153,0.401,154,1.41,156,1.287,157,0.98,158,1.656,159,0.274,160,0.403,162,1.027,163,0.336,164,0.464,166,0.563,167,0.94,168,2.559,169,1.055,170,0.257,171,0.869,172,1.066,174,0.293,175,0.157,176,1.152,178,0.203,188,1.415,192,1.049,193,0.985,195,1.388,197,0.697,202,1.743,204,1.517,205,1.114,206,0.554,210,0.835,214,0.237,216,0.395,218,0.982,228,1.226,231,0.79,235,0.263,236,0.27,238,0.806,240,0.662,241,0.805,243,0.538,244,0.442,245,0.85,246,0.546,247,0.297,248,0.568,250,1.788,251,1.601,252,1.441,253,0.761,259,0.708,260,0.289,265,1.469,267,0.459,268,0.359,269,0.697,271,2.698,275,1.112,276,0.292,278,0.489,280,0.891,281,0.926,283,0.406,284,0.433,288,2.223,291,0.507,293,1.436,295,0.724,296,1.106,299,0.242,302,0.562,304,0.17,306,1.5,308,2.073,310,1.325,311,1.187,314,0.647,317,0.956,318,0.554,319,0.991,321,1.973,322,1.957,324,1.18,327,0.601,329,0.39,332,0.554,333,1.19,338,0.94,339,1,340,0.451,342,0.873,345,0.837,353,0.94,360,0.295,363,0.662,364,0.554,367,0.526,369,0.615,375,0.94,377,0.346,379,0.703,380,0.652,386,0.236,387,0.604,393,0.991,401,1.425,402,0.377,408,0.278,409,1.998,410,0.333,413,0.24,414,0.39,415,0.616,423,1.376,424,0.401,430,1.691,432,1.133,437,0.366,438,0.987,442,0.295,445,4.319,446,0.897,455,1.163,456,0.989,457,1.102,464,0.261,465,0.82,466,0.58,467,0.936,469,2.989,470,0.647,471,0.359,472,0.318,481,0.262,485,0.462,486,0.377,489,1.455,492,0.474,500,1.005,501,1.765,502,2.285,503,1.019,506,0.752,509,0.916,510,3.015,511,4.641,512,0.83,513,0.451,515,0.665,516,0.395,520,0.359,523,0.673,531,0.292,537,0.679,538,1.299,539,0.556,540,0.95,541,1.799,543,1.502,550,0.462,560,0.373,563,1.009,565,1.476,566,0.462,567,0.711,576,1.239,577,0.261,590,0.324,591,0.197,593,0.226,601,0.546,602,0.426,604,1.114,609,0.886,614,0.94,618,1.034,622,0.772,623,0.922,624,0.233,627,0.262,630,0.373,643,0.386,644,0.711,649,0.298,650,0.431,656,1.465,660,0.242,665,1.515,669,0.271,684,1.14,685,0.329,689,0.484,698,0.559,699,0.331,701,0.505,703,0.964,706,1,717,0.886,720,0.252,727,0.223,744,0.667,748,0.283,754,0.26,757,0.752,763,0.752,764,0.293,774,0.386,776,0.442,777,0.451,778,0.381,780,0.601,789,0.426,805,2.137,811,1.719,812,0.587,820,0.295,824,0.462,836,0.505,873,0.273,887,0.381,889,0.608,890,1.816,903,0.94,909,0.451,911,0.424,920,0.505,926,0.401,931,0.373,951,0.349,952,0.554,1007,4.219,1008,0.346,1009,0.386,1010,0.554,1011,1.187,1012,0.554,1013,0.889,1014,0.554,1015,0.505,1016,0.554,1017,0.554,1018,0.554,1019,1.067,1020,0.554,1021,1.32,1022,0.554,1023,1.544,1024,1.42,1025,2.403,1026,1.132,1027,0.419,1028,0.433,1029,0.526,1030,1.988,1031,0.451,1032,0.807,1033,1.406,1034,0.505,1035,3.819,1036,1.102,1037,0.554,1038,1.339,1039,1.714,1040,1.544,1041,0.554,1042,1.067,1043,0.505,1044,3.045,1045,0.554,1046,2.403,1047,0.287,1048,3.515,1049,3.258,1050,0.29,1051,3.318,1052,0.318,1053,2.69,1054,0.352,1055,0.554,1056,0.373,1057,0.554,1058,0.554,1059,2.403,1060,1.526,1061,1.745,1062,0.39,1063,1.013,1064,0.386,1065,0.597,1066,0.462,1067,1.816,1068,0.433,1069,1.465,1070,0.597,1071,0.554,1072,0.597,1073,0.597,1074,3.182,1075,0.597,1076,0.597,1077,0.597,1078,0.362,1079,1.013,1080,0.597,1081,0.401,1082,0.597,1083,0.597,1084,0.505,1085,0.433,1086,0.505,1087,0.554,1088,1.359,1089,0.597,1090,0.597,1091,0.597,1092,1.067,1093,0.451,1094,0.597,1095,0.597,1096,0.526,1097,0.597,1098,0.554,1099,0.597,1100,0.94,1101,0.597,1102,0.597,1103,0.597,1104,0.597,1105,0.752,1106,0.597,1107,0.972,1108,0.433,1109,0.554,1110,1.544,1111,0.597,1112,0.597,1113,0.377,1114,0.401,1115,0.406,1116,0.526,1117,0.488,1118,0.526,1119,0.886,1120,0.597,1121,1.788,1122,0.488,1123,0.377,1124,0.554,1125,0.597,1126,0.554,1127,0.972,1128,0.974,1129,0.597,1130,0.597,1131,0.597,1132,0.381,1133,0.554,1134,1.186,1135,0.369,1136,2.589,1137,0.554,1138,0.597,1139,0.597,1140,0.597,1141,0.462,1142,3.768,1143,0.835,1144,0.597,1145,0.526,1146,0.597,1147,0.442,1148,0.597,1149,0.386,1150,0.381,1151,0.412,1152,0.554,1153,1.186,1154,0.329,1155,0.526,1156,0.597,1157,0.597,1158,0.401,1159,0.505,1160,0.366,1161,0.462,1162,0.597,1163,1.067,1164,0.474,1165,0.39,1166,0.597,1167,0.869,1168,1.231,1169,0.794,1170,0.597,1171,0.597,1172,0.597,1173,0.597,1174,0.597,1175,0.401,1176,1.013,1177,1.167,1178,0.772,1179,1.465,1180,0.381,1181,0.835,1182,0.426,1183,0.554,1184,0.554,1185,0.426,1186,0.526,1187,0.554,1188,0.526,1189,0.597,1190,0.386,1191,0.597,1192,0.526,1193,0.597,1194,0.597,1195,0.597,1196,0.597,1197,0.597,1198,0.412,1199,0.488,1200,0.451,1201,0.554,1202,0.442,1203,0.685,1204,0.597,1205,0.807,1206,0.889,1207,1.067,1208,0.889,1209,0.322,1210,0.386,1211,0.94,1212,0.94,1213,0.474,1214,1.544,1215,2.589,1216,0.381,1217,0.505,1218,1.15,1219,0.474,1220,0.869,1221,2.629,1222,0.433,1223,0.807,1224,0.597,1225,0.597,1226,0.597,1227,0.597,1228,0.554,1229,0.597,1230,0.554,1231,0.312,1232,0.597,1233,0.554,1234,1.15,1235,0.406,1236,2.464,1237,0.474,1238,0.673,1239,0.554,1240,0.426,1241,0.395,1242,5.32,1243,0.474,1244,0.338,1245,1.208,1246,0.597,1247,1.063,1248,0.597,1249,0.505,1250,0.711,1251,0.597,1252,0.462,1253,0.835,1254,0.526,1255,0.597,1256,0.442,1257,0.474,1258,2.142,1259,0.426,1260,0.597,1261,0.474,1262,0.597,1263,0.554,1264,0.597,1265,0.889,1266,0.39,1267,0.474,1268,0.597,1269,0.597,1270,0.462,1271,0.377,1272,0.442,1273,0.554,1274,0.597,1275,0.377,1276,0.597,1277,0.462,1278,0.338,1279,0.412,1280,1.013,1281,0.355,1282,0.673,1283,1.359,1284,1.664,1285,0.505,1286,1.067,1287,0.554,1288,1.067,1289,1.664,1290,0.916,1291,0.851,1292,0.451,1293,0.39,1294,1.544,1295,2.687,1296,0.306,1297,0.597,1298,1.067,1299,0.505,1300,0.972,1301,0.474,1302,0.597,1303,0.597,1304,0.282,1305,0.395,1306,2.115,1307,2.188,1308,1.149,1309,0.505,1310,0.554,1311,0.474,1312,1.15,1313,1.75,1314,0.526,1315,1.067,1316,1.067,1317,0.39,1318,1.15,1319,0.597,1320,1.15,1321,1.067,1322,0.395,1323,1.067,1324,0.912,1325,0.412,1326,1.067,1327,0.395,1328,0.594,1329,0.597,1330,0.597,1331,0.412,1332,0.505,1333,0.462,1334,0.597,1335,0.597,1336,0.554,1337,0.597,1338,0.554,1339,0.597,1340,1.013,1341,0.597,1342,0.505,1343,0.488,1344,0.869,1345,0.426,1346,0.554,1347,0.597,1348,0.762,1349,0.637,1350,0.276,1351,0.597,1352,0.597,1353,1.208,1354,1.15,1355,0.597,1356,0.488,1357,0.377,1358,0.597,1359,0.597,1360,0.554,1361,0.597,1362,0.554,1363,0.554,1364,0.597,1365,0.526,1366,0.32,1367,0.597,1368,0.451,1369,0.298,1370,0.597,1371,1.013,1372,0.554,1373,0.597,1374,0.597,1375,0.554,1376,0.597,1377,0.442,1378,0.426,1379,0.597,1380,0.597,1381,0.597,1382,0.554,1383,0.386,1384,0.426,1385,0.474,1386,0.386,1387,0.474,1388,0.505,1389,0.412,1390,0.338,1391,0.554,1392,0.377,1393,0.285,1394,0.505,1395,0.462,1396,0.329,1397,0.433,1398,0.352,1399,0.597]],["component/6",[1,0.4]],["title/7-1",[410,57.49]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7",[510,45.403,511,36.039,1400,33.968]],["name/7",[511,1.229,586,0.867]],["text/7",[18,3.487,39,4.924,64,4.267,511,5.146,1278,6.483]],["component/7",[1,0.4]],["title/8",[20,18.171,202,14.849,203,19.106,483,26.984,678,27.547,735,27.845,1401,38.914]],["name/8",[1402,2.732,1403,2.535]],["text/8",[0,1.65,2,1.128,6,1.941,18,2.675,19,1.787,20,3.227,24,1.332,28,2.22,31,1.138,38,2.543,45,3.857,104,2.539,112,3.618,119,3.225,138,1.547,157,1.771,158,2.881,162,1.856,178,3.35,188,2.557,195,1.578,200,4.367,201,4.051,202,3.007,203,4.161,237,2.976,247,1.21,248,2.31,312,1.914,324,2.255,342,1.578,345,1.827,363,1.863,369,1.73,379,1.976,402,2.955,409,3.006,428,2.131,462,2.31,483,5.464,549,3.416,554,3.022,650,1.755,672,4.144,678,5.282,703,2.104,719,2.761,720,3.707,724,3.281,726,4.499,729,1.927,730,3.577,735,6.22,778,2.988,807,5.123,812,2.387,883,3.712,895,3.529,950,2.693,954,3.954,1105,3.059,1121,3.23,1293,3.059,1401,6.911,1404,5.712,1405,4.111,1406,4.678,1407,7.17,1408,3.954,1409,5.18,1410,4.678,1411,3.281,1412,4.678,1413,3.712,1414,4.12,1415,4.342,1416,6.34,1417,3.712]],["component/8",[1,0.4]],["title/9-1",[0,18.366,304,22.856,586,25.44]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[2,17.393,202,19.299,232,31.907,260,34.895]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[13,18.364,33,37.156,219,31.569,232,29.009,527,41.413]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[588,49.254,1047,43.392]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[232,35.448,509,44.093,1050,38.963]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9-6",[18,24.421,302,39.161,591,26.496]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["title/9",[8,17.571,202,21.441,232,35.448]],["name/9",[200,0.633,201,0.711,203,0.531,934,0.973]],["text/9",[0,0.876,1,1.257,2,0.922,6,0.632,8,1.347,11,0.523,13,1.071,18,1.436,19,1.06,20,2.371,24,2.816,25,0.712,33,5.606,37,0.709,38,2.18,39,1.194,40,0.557,52,0.593,53,1.208,54,0.756,56,0.4,57,0.911,61,0.729,66,0.655,74,1.07,77,0.948,85,1.008,89,2.575,91,0.726,93,1.097,97,1.667,100,0.655,104,1.506,107,0.645,108,0.712,110,1.789,115,0.821,118,1.208,119,2.111,133,0.666,134,4.159,139,0.832,141,2.976,151,2.236,154,0.881,157,1.05,158,1.547,162,1.101,163,0.856,164,1.119,166,2.868,168,2.449,169,1.131,175,0.4,176,1.403,178,0.518,187,1.342,188,1.516,192,1.911,198,1.105,200,2.971,201,3.914,202,2.647,203,3.141,210,1.105,213,1.916,214,4.012,215,1.527,216,1.837,217,1.244,218,0.899,219,4.526,227,0.663,228,1.558,231,1.317,232,5.095,237,0.629,238,0.573,240,0.876,241,1.342,243,0.712,247,0.394,248,0.752,251,0.81,252,0.9,254,0.641,255,0.756,259,0.648,260,1.342,265,1.199,271,2.286,276,0.744,277,0.816,278,0.648,283,0.537,288,0.712,291,1.223,296,0.65,299,2.217,302,0.744,304,0.434,311,1.538,313,1.392,314,0.856,324,0.477,330,1.814,331,2.443,333,0.7,334,1.022,342,0.936,347,0.791,363,0.606,380,1.087,386,0.602,389,0.786,395,1.929,402,0.962,403,0.996,405,1.036,406,0.951,409,0.95,415,0.816,418,2.053,425,1.413,426,1.978,430,0.856,434,2.345,436,0.923,438,1.255,440,2.145,442,1.37,462,0.752,464,0.666,483,0.74,487,0.653,493,0.996,494,0.583,496,0.816,500,1.483,506,0.996,509,1.527,512,1.385,514,0.972,515,0.608,520,4.04,524,2.183,527,6.099,529,2.685,534,2.65,541,1.671,565,1.846,576,1.574,577,0.666,579,2.443,583,2.712,586,0.483,588,0.832,591,0.918,598,0.984,599,0.737,601,1.317,609,0.81,623,1.538,624,0.595,626,0.856,628,0.891,639,0.923,653,0.972,655,0.638,660,2.931,661,1.516,682,0.668,688,0.869,693,2.276,701,2.404,717,0.81,720,0.643,727,2.043,729,2.77,730,0.621,731,3.781,744,1.112,748,0.723,753,1.036,754,0.663,776,3.487,778,0.972,781,0.76,811,1.159,812,1.416,887,0.972,894,1.051,895,2.202,909,1.15,911,1.737,931,0.951,951,0.891,1047,0.733,1050,0.74,1060,0.773,1061,0.884,1113,0.962,1128,1.624,1132,0.972,1135,1.716,1154,0.838,1165,0.996,1169,1.916,1209,0.821,1223,1.068,1241,1.008,1282,1.624,1293,0.996,1306,1.244,1345,1.086,1385,1.208,1400,1.62,1418,1.523,1419,1.177,1420,2.014,1421,1.413,1422,1.624,1423,1.244,1424,2.443,1425,1.888,1426,0.764,1427,1.523,1428,1.127,1429,1.341,1430,1.523,1431,1.341,1432,0.726,1433,2.575,1434,2.775,1435,3.56,1436,4.235,1437,0.832,1438,0.826,1439,1.523,1440,1.523,1441,1.105,1442,1.287,1443,1.244,1444,1.523,1445,3.128,1446,2.267,1447,1.523,1448,2.775,1449,1.523,1450,1.086,1451,1.523,1452,1.008,1453,2.201,1454,1.287,1455,1.208,1456,0.891,1457,1.793,1458,1.916,1459,1.978,1460,1.716,1461,1.638,1462,1.413,1463,1.177,1464,1.287,1465,1.341,1466,1.523,1467,1.127,1468,2.345,1469,1.341,1470,2.053,1471,1.341,1472,1.413,1473,1.413,1474,1.523,1475,1.413,1476,2.681,1477,1.523,1478,1.523,1479,1.022,1480,1.734,1481,2.345,1482,1.177,1483,1.523,1484,0.891,1485,1.341,1486,2.097,1487,0.915,1488,1.287,1489,1.523,1490,0.951]],["component/9",[1,0.4]],["title/10",[82,29.744,393,39.041,653,41.875,655,27.493,811,27.394]],["name/10",[655,0.826,811,0.823,896,1.036]],["text/10",[3,4.924,18,2.924,19,2.069,20,1.773,24,3.022,31,1.318,52,2.108,107,2.296,121,5.079,154,3.046,160,1.899,168,2.323,175,2.115,176,1.837,197,3.284,202,2.152,203,1.865,228,2.207,240,3.117,247,1.4,265,3.474,271,1.841,278,2.304,293,2.287,302,2.647,324,1.696,337,5.079,342,1.827,386,2.142,387,2.846,393,3.224,451,2.582,459,2.812,494,2.075,500,2.101,541,2.367,546,2.416,627,4.659,644,3.349,653,5.136,655,4.451,657,3.254,688,3.093,703,2.436,720,3.397,729,3.312,735,4.035,754,2.358,807,2.607,811,4.739,880,5.026,894,3.739,896,5.962,929,3.349,950,5.522,1061,3.143,1228,5.026,1259,3.861,1281,3.224,1282,3.169,1331,3.739,1333,4.187,1460,3.349,1480,3.648,1491,5.415,1492,3.384,1493,4.769,1494,4.007,1495,5.415,1496,4.092,1497,6.077,1498,3.861,1499,5.415,1500,2.763,1501,4.187,1502,8.042,1503,6.57,1504,4.769,1505,4.187,1506,3.861,1507,5.026,1508,5.026,1509,4.577]],["component/10",[1,0.4]],["title/11",[202,24.117,205,38.789]],["name/11",[586,1.413]],["text/11",[]],["component/11",[1,0.4]],["title/12-1",[0,18.366,304,22.856,586,25.44]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[2,12.428,26,21.299,175,13.552,176,11.771,283,18.169,419,26.918,1510,38.937,1511,38.937]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12",[26,22.936,202,14.849,203,19.106,283,19.566,419,28.987,1510,41.929,1511,41.929]],["name/12",[283,0.446,419,0.661,1209,0.682,1510,0.956,1511,0.956]],["text/12",[0,0.605,1,0.843,2,0.636,6,1.094,8,0.99,18,0.804,24,0.751,25,1.234,26,4.577,31,1.439,33,4.862,38,2.192,40,0.964,52,1.027,55,2.183,56,0.694,66,1.135,74,1.017,78,5.612,82,1.196,89,1.441,93,1.043,107,1.118,108,2.112,109,1.24,133,1.153,147,1.378,158,2.298,160,0.925,164,1.821,166,0.892,168,2.022,175,2.256,176,2.465,177,1.98,178,3.117,192,0.92,195,2.655,200,1.083,201,1.217,202,2.702,203,1.554,205,1.135,214,1.047,218,1.557,219,4.131,232,1.167,251,1.404,254,1.899,255,1.309,258,3.163,259,1.122,271,2.01,276,2.206,278,2.517,282,2.538,283,4.657,286,1.615,296,3.664,304,1.287,312,1.846,314,1.483,324,0.826,333,2.074,342,1.522,346,1.531,363,1.797,379,1.114,386,1.043,407,2.483,409,0.903,410,1.472,417,1.422,419,6.406,433,2.155,438,1.481,474,1.228,481,1.157,520,3.554,527,5.419,529,4.575,537,2.663,563,1.6,565,2.317,566,2.378,576,1.086,577,2.585,586,0.837,609,2.402,618,2.362,623,2.501,624,1.762,626,1.483,649,1.316,650,0.99,655,2.48,661,1.441,669,1.196,674,2.093,679,1.472,699,3.278,721,3.275,727,1.683,729,2.436,732,3.658,733,3.404,741,1.794,779,1.354,811,1.885,950,1.518,1026,3.07,1209,1.422,1235,1.794,1244,1.495,1282,1.543,1369,2.252,1389,1.821,1390,2.557,1460,1.631,1470,1.952,1486,1.993,1487,2.711,1492,1.648,1496,1.993,1510,6.483,1511,6.483,1512,4.33,1513,3.116,1514,2.323,1515,2.229,1516,2.637,1517,1.914,1518,2.82,1519,3.974,1520,2.448,1521,2.763,1522,2.637,1523,1.725,1524,1.993,1525,2.448,1526,1.6,1527,1.881,1528,3.071,1529,4.693,1530,1.77,1531,2.637]],["component/12",[1,0.4]],["title/13",[195,20.277,202,16.085,203,20.697,296,25.675,609,31.992,1532,40.333]],["name/13",[195,0.52,202,0.412,609,0.82,1528,0.8]],["text/13",[8,1.161,18,2.885,19,2.023,25,2.478,33,3.001,38,2.51,66,2.279,74,2.042,134,3.276,158,2.596,160,1.857,168,1.53,175,1.393,176,1.21,178,1.8,195,4.236,200,3.246,201,2.445,202,2.81,203,3.26,214,3.757,219,5.056,232,2.343,243,2.478,246,3.753,252,1.718,255,2.629,258,2.392,276,2.589,278,2.254,293,3.999,296,4.799,342,1.787,354,3.243,363,2.109,379,2.237,500,2.055,520,4.752,527,4.996,529,3.458,554,3.422,566,2.13,597,2.837,599,2.563,609,4.21,623,4.384,627,2.324,650,1.987,660,2.144,672,3.049,682,2.324,693,3.153,699,4.384,701,2.324,703,2.382,715,3.657,727,1.975,729,3.258,733,3.049,735,2.658,804,3.212,895,3.807,1092,4.915,1113,3.345,1128,3.099,1135,3.276,1293,3.463,1322,3.507,1350,2.445,1390,3.001,1398,3.126,1405,3.024,1457,3.422,1528,5.452,1533,5.296,1534,4.202,1535,4.664,1536,3.507,1537,4.202,1538,3.024,1539,5.296,1540,4.476,1541,3.657,1542,4.476]],["component/13",[1,0.4]],["title/14-1",[0,11.812,1,9.629,40,18.835,77,17.605,149,36.137,172,18.268,947,32.545,1024,21.528]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[2,19.324,18,24.421,302,39.161]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14",[1,12.253,77,22.402,91,31.264,569,52.024,1024,27.394]],["name/14",[235,1.204,361,1.627]],["text/14",[0,0.658,1,2.079,2,0.692,8,1.063,11,3.448,18,1.478,19,1.097,20,3.129,24,1.38,35,1.901,38,1.505,39,2.087,40,1.772,57,4.112,60,2.941,61,1.375,63,3.126,65,1.709,66,1.235,68,2.407,77,2.151,85,3.211,91,1.369,93,2.49,95,1.614,99,1.775,100,2.087,107,1.217,109,2.96,114,1.558,128,2.689,149,3.401,154,0.911,156,2.219,157,2.384,158,0.942,166,2.503,168,3.424,169,3.371,172,1.018,176,1.108,192,1.001,199,2.124,202,0.768,205,1.235,218,1.694,227,1.25,228,1.977,230,1.569,231,2.301,232,2.145,238,1.825,245,1.139,247,2.796,254,2.65,261,2.124,265,3.197,269,2.941,276,3.077,283,1.71,291,1.265,298,2.769,302,1.403,305,1.591,306,1.143,321,1.666,324,2.317,326,2.752,370,2.013,380,1.124,384,2.29,398,3.195,402,1.813,423,1.313,438,1.592,445,1.097,460,1.074,467,1.614,489,1.389,493,3.171,497,1.926,502,1.741,515,1.146,524,2.769,531,1.403,534,2.346,542,3.171,618,1.146,619,1.369,632,2.169,634,1.666,640,1.694,645,1.877,681,2.169,684,3.351,693,1.709,698,1.396,701,2.128,703,1.291,720,1.212,759,1.854,763,1.877,805,2.518,811,1.199,825,2.219,831,1.813,861,3.624,866,4.169,905,2.047,913,2.219,947,1.813,950,1.652,1011,1.591,1024,2.63,1032,2.013,1036,1.901,1049,3.855,1060,4.553,1149,1.854,1198,1.982,1240,2.047,1247,5.731,1281,1.709,1291,2.124,1313,2.345,1331,1.982,1348,1.901,1377,3.588,1378,3.458,1387,2.277,1422,1.68,1461,1.694,1506,2.047,1543,3.749,1544,2.169,1545,2.664,1546,2.528,1547,4.5,1548,2.047,1549,1.926,1550,3.588,1551,2.664,1552,2.426,1553,5.277,1554,2.528,1555,2.426,1556,2.664,1557,1.901,1558,2.124,1559,2.219,1560,1.982,1561,2.664,1562,2.528,1563,2.277,1564,2.277,1565,2.748,1566,2.664,1567,2.664,1568,2.664,1569,3.75,1570,2.87,1571,1.813,1572,2.124,1573,1.901,1574,1.741]],["component/14",[1,0.4]],["title/15-1",[0,18.366,172,28.405,304,22.856]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[2,17.393,154,22.899,720,30.462,938,43.739]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[13,20.198,56,18.967,398,36.593,604,31.039]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15",[154,19.086,323,32.41,324,18.823,398,30.499,720,25.389,938,36.455]],["name/15",[326,0.674,398,0.782,625,1.021,938,0.935]],["text/15",[0,0.381,1,1.424,2,0.724,6,1.705,8,0.659,13,0.841,16,0.777,18,0.915,20,0.544,26,1.241,30,1.453,38,0.397,39,0.715,40,0.607,56,2.124,57,2.651,66,0.715,74,1.942,77,1.404,83,1.165,108,2.357,115,0.896,124,6.163,128,0.71,150,0.834,154,2.419,157,0.629,158,2.501,160,1.767,162,1.631,164,0.67,166,0.562,168,2.05,172,0.589,187,1.453,188,0.908,193,0.764,202,1.741,236,1.357,237,1.241,238,2.867,239,2.822,243,0.777,247,2.453,252,2.11,253,1.374,259,1.278,260,0.804,265,1.297,271,3.01,278,0.707,281,5.19,283,1.059,291,3.128,293,1.268,296,0.71,299,3.27,304,1.172,306,1.196,310,1.323,312,0.68,317,4.097,323,4.953,324,3.493,326,2.844,328,1.598,342,2.57,345,1.173,347,1.559,354,1.017,369,1.863,379,0.702,380,1.176,384,0.785,395,0.838,398,6.315,416,1.743,417,4.107,421,0.623,430,0.934,438,0.545,445,0.635,456,1.386,460,1.123,479,2.109,481,2.557,483,2.45,488,0.858,500,1.165,515,1.2,534,0.804,539,1.453,546,0.741,565,1.61,576,3.138,583,0.956,593,1.556,595,1.769,596,2.488,597,1.609,604,2.168,624,0.649,625,3.336,628,0.972,630,1.877,631,2.141,632,2.269,636,1.357,645,1.086,650,1.542,662,0.774,663,0.972,664,1.038,669,1.362,682,0.729,698,1.46,701,1.804,719,0.981,720,1.736,725,2.062,726,1.038,729,3.138,730,1.224,731,3.478,735,1.507,738,2.528,740,1.027,743,1.185,744,1.204,779,0.853,781,1.499,795,1.206,797,1.94,804,1.008,821,2.015,831,3.182,839,1.017,873,0.76,886,1.086,895,3.248,938,6.339,1036,1.989,1060,3.301,1074,1.285,1078,1.008,1132,3.217,1150,2.625,1180,1.061,1238,0.972,1247,1.061,1249,1.404,1266,6.696,1350,0.767,1390,0.941,1405,0.949,1426,0.834,1435,1.255,1487,0.998,1500,0.848,1536,1.1,1575,1.008,1576,2.453,1577,3.178,1578,1.061,1579,1.404,1580,1.542,1581,5.5,1582,2.538,1583,2.787,1584,1.542,1585,1.463,1586,1.542,1587,1.542,1588,3.182,1589,4.258,1590,4.436,1591,4.258,1592,4.436,1593,1.661,1594,1.661,1595,4.925,1596,1.661,1597,1.661,1598,3.003,1599,3.003,1600,1.165,1601,1.165,1602,2.106,1603,1.229,1604,1.061,1605,1.661,1606,1.661,1607,1.115,1608,1.073,1609,0.949,1610,1.1,1611,1.229]],["component/15",[1,0.4]],["title/16-1",[0,18.366,172,28.405,304,22.856]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[2,17.393,154,22.899,720,30.462,938,43.739]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[13,20.198,56,18.967,398,36.593,604,31.039]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16",[8,12.169,30,26.849,57,18.216,124,37.233,281,23.974,398,28.155,938,33.653]],["name/16",[8,0.338,324,0.483,398,0.782,938,0.935]],["text/16",[0,1.577,1,0.699,2,0.902,6,0.881,8,2.493,11,1.285,13,1.403,16,0.994,18,1.527,19,0.812,20,0.696,26,1.546,30,2.425,37,0.99,38,0.508,39,0.915,40,0.777,56,2.886,57,0.698,66,0.915,74,1.442,77,1.278,100,0.915,108,0.994,115,1.146,124,5.091,128,0.908,133,0.929,149,1.49,150,1.066,154,2.907,157,0.804,158,1.645,160,2.413,162,2.395,164,0.857,168,1.447,172,0.753,187,1.028,188,1.161,192,0.741,193,1.719,236,2.726,237,1.546,238,1.408,239,1.622,243,1.75,247,2.367,252,2.461,253,2.293,259,0.904,260,1.028,270,1.186,271,2.052,278,1.592,281,4.278,283,1.319,291,2.66,293,0.898,296,2.14,299,2.444,304,1.429,306,1.489,312,0.869,317,2.692,324,1.569,326,0.929,328,5.084,333,0.977,342,1.69,345,0.83,354,2.291,369,2.232,398,6.539,413,0.854,416,2.171,417,2.017,421,1.404,438,0.698,445,0.812,456,1.727,460,1.399,479,1.091,481,2.649,483,2.935,487,1.604,489,1.81,494,1.434,500,1.944,515,2.002,539,3.329,565,2.364,576,1.541,583,1.223,593,1.897,604,2.157,606,1.103,609,2.667,618,0.849,624,1.461,628,2.189,632,2.827,636,1.736,645,1.389,649,1.061,662,0.99,663,1.243,664,1.328,669,3.121,672,1.223,682,0.933,698,2.935,700,2.84,701,1.642,705,1.407,706,1.277,708,1.686,709,1.972,719,1.254,720,2.117,725,2.515,726,1.328,727,1.395,729,2.834,730,0.866,732,1.314,733,1.223,735,1.877,740,1.314,744,1.499,751,1.966,764,1.044,779,1.091,781,1.867,795,1.542,797,1.373,804,2.269,807,1.023,818,1.243,821,2.51,822,1.407,873,1.712,895,2.427,938,6.194,1011,1.178,1024,0.888,1053,1.389,1074,1.643,1078,1.289,1128,1.243,1132,1.357,1150,3.855,1180,2.389,1208,1.643,1247,1.357,1266,3.947,1309,1.796,1390,1.204,1405,1.214,1435,1.606,1480,1.697,1487,1.277,1500,1.084,1536,2.477,1537,1.686,1575,1.289,1576,3.056,1577,3.875,1578,1.357,1579,1.796,1582,1.796,1583,1.972,1584,1.972,1585,1.871,1586,1.972,1587,1.972,1588,1.342,1589,1.796,1590,1.871,1591,1.796,1592,1.871,1595,3.162,1600,1.49,1601,1.49,1602,2.623,1603,1.572,1604,1.357,1609,1.214,1610,1.407,1611,1.572,1612,1.169,1613,1.972,1614,2.51,1615,1.301,1616,2.715,1617,3.294,1618,1.972,1619,1.467,1620,2.125,1621,1.796,1622,1.186,1623,1.871,1624,2.893,1625,2.125,1626,2.125]],["component/16",[1,0.4]],["title/17-1",[0,16.531,8,15.816,719,42.565,720,30.462]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[2,19.324,8,17.571,594,46.496]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17",[8,15.816,594,41.852,719,42.565,720,30.462]],["name/17",[238,0.58,239,0.668,398,0.782,594,0.894]],["text/17",[0,0.964,1,0.786,2,1.014,8,2.976,11,2.275,18,1.281,19,1.606,39,1.809,52,1.636,56,2.828,77,1.436,138,2.191,158,1.38,160,3.55,164,3.308,168,1.913,236,2.992,238,2.493,239,2.873,247,1.713,291,1.853,293,2.798,306,3.264,317,2.955,342,1.418,369,1.554,379,2.798,398,6.774,419,2.196,438,1.38,479,2.158,486,4.184,500,3.61,511,4.552,566,1.691,594,6.53,604,1.809,609,2.238,618,2.646,624,1.642,645,2.749,649,2.098,650,1.577,657,3.98,660,2.682,669,4.591,679,2.347,682,2.907,693,3.945,698,3.222,699,3.672,700,3.754,701,1.845,719,3.91,720,2.798,721,3.052,725,4.668,727,3.775,729,4.802,731,5.66,736,3.967,744,3.286,779,2.158,886,4.332,947,7.364,951,3.877,1119,3.526,1278,3.754,1405,3.783,1627,4.445]],["component/17",[1,0.4]],["title/18-1",[0,16.531,323,38.886,324,22.584,398,36.593]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[109,37.666,398,40.654,662,37.321]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[2,17.393,323,38.886,324,22.584,594,41.852]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18",[323,38.886,324,22.584,398,36.593,594,41.852]],["name/18",[238,0.476,239,0.549,324,0.396,398,0.642,594,0.734]],["text/18",[0,0.768,1,0.626,2,0.808,15,1.312,18,1.681,30,2.669,39,1.442,56,2.696,77,1.144,84,1.681,109,2.593,124,2.248,158,3.183,162,2.79,166,1.133,176,0.765,192,1.169,202,0.896,231,1.59,238,4.301,239,4.957,245,2.189,253,3.218,265,1.447,271,4.266,281,1.447,291,3.099,293,3.807,296,1.431,317,3.137,321,1.944,323,5.776,324,3.476,326,3.074,328,4.339,342,1.13,361,1.994,369,1.238,379,1.415,384,2.605,398,7.153,416,1.944,438,3.365,471,2.013,500,1.3,512,1.672,514,2.139,553,5.495,591,2.696,594,5.627,604,1.442,607,2.479,623,1.856,630,6.06,631,2.388,632,6.811,645,2.19,660,1.356,661,1.831,662,3.797,699,1.856,701,1.47,729,1.38,731,4.855,738,4.091,743,2.388,774,2.164,781,1.672,807,1.613,818,3.228,831,7.219,895,1.347,1278,1.898,1350,2.546,1411,2.349,1612,1.843,1628,3.35,1629,2.313,1630,2.531,1631,3.35,1632,3.35,1633,3.35,1634,3.109,1635,8.152,1636,8.152,1637,4.506,1638,5.516,1639,2.658,1640,3.35,1641,4.265]],["component/18",[1,0.4]],["title/19-1",[0,18.366,3,49.063,172,28.405]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[2,19.324,101,36.503,172,28.405]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[13,16.835,40,21.971,150,30.164,166,20.329,1259,42.861,1282,35.175]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19-4",[310,28.892,540,37.445,591,21.683,1550,48.518,1642,42.875]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["title/19-5",[543,46.496,601,38.021,1643,44.729]],["name/19-5",[]],["text/19-5",[]],["component/19-5",[]],["title/19-6",[543,46.496,1398,47.289,1644,46.12]],["name/19-6",[]],["text/19-6",[]],["component/19-6",[]],["title/19",[252,17.997,310,24.451,326,24.257,441,35.849,442,27.403,594,32.201,1642,36.284]],["name/19",[1645,4.451]],["text/19",[0,1.032,2,0.635,3,1.611,6,1.092,12,1.947,15,1.764,16,1.231,20,1.475,24,0.749,40,0.962,56,0.692,66,1.133,80,1.846,102,2.035,110,1.231,122,2.19,154,0.836,158,2.813,162,1.044,166,1.523,167,4.824,168,2.019,169,1.836,205,1.939,227,1.146,231,1.249,237,2.89,245,2.343,251,1.401,252,2.549,253,1.204,258,2.035,265,1.137,271,3.113,283,0.928,293,1.902,303,1.22,306,1.048,310,5.783,324,1.41,326,3.746,328,1.401,345,1.028,380,1.031,384,3.712,386,1.041,389,1.358,393,1.567,395,4.622,396,4.325,398,1.335,409,2.395,438,0.864,441,7.313,442,5.803,446,2.429,456,2.079,462,1.3,466,1.328,470,1.48,496,1.41,540,2.572,541,1.15,543,4.057,546,2.009,554,1.7,565,1.031,594,2.614,601,2.802,604,1.133,606,1.367,623,4.749,626,1.48,630,6.035,631,1.876,647,5.2,649,2.248,660,2.83,661,1.438,682,1.155,701,1.977,794,3.269,822,1.743,873,1.204,875,1.581,877,1.817,887,4.465,1039,4.63,1048,5.816,1061,1.527,1115,1.791,1165,1.721,1203,2.682,1259,1.876,1279,1.817,1282,1.54,1304,1.243,1343,2.15,1390,2.552,1398,2.658,1441,3.269,1454,3.807,1479,1.766,1622,1.469,1642,8.34,1646,1.876,1647,9.659,1648,1.791,1649,4.824,1650,7.294,1651,6.992,1652,2.632,1653,1.947,1654,4.18,1655,4.504,1656,2.632,1657,2.15,1658,1.662,1659,5.905,1660,2.632,1661,5.905,1662,6.992,1663,6.157,1664,4.504,1665,2.15,1666,2.632,1667,2.442,1668,2.632,1669,2.15,1670,4.504,1671,2.632,1672,2.632,1673,2.442,1674,1.91,1675,1.947,1676,1.721,1677,2.224,1678,2.224,1679,5.48,1680,5.905,1681,5.905,1682,5.905,1683,5.905]],["component/19",[1,0.4]],["title/20-1",[160,31.609,586,28.616]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20",[594,46.496,719,47.289,720,33.842]],["name/20",[586,1.413]],["text/20",[8,2.865,30,4.244,57,2.879,124,5.885,154,2.785,252,2.845,254,3.691,281,3.79,310,3.865,323,6.682,324,4.092,326,3.834,398,6.288,441,5.667,442,4.332,594,7.583,719,6.63,720,5.234,938,6.812,1642,5.735]],["component/20",[1,0.4]],["title/21-1",[0,18.366,247,20.716,398,40.654]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[57,23.675,398,36.593,938,43.739,1008,41.852]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[57,21.524,65,39.041,124,43.996,398,33.269,1009,42.361]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[56,17.245,281,28.329,398,33.269,565,25.685,1684,50.702]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[2,21.736,594,52.301]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[5,22.263,281,22.263,328,27.425,398,26.145,455,27.97,594,29.903,1550,38.129,1685,47.821]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21-7",[9,35.888,398,40.654,888,61.956]],["name/21-7",[]],["text/21-7",[]],["component/21-7",[]],["title/21-8",[38,15.674,173,35.354,326,28.663,1686,35.354,1687,43.418]],["name/21-8",[]],["text/21-8",[]],["component/21-8",[]],["title/21-9",[13,18.364,326,28.663,467,36.876,594,38.051,1688,55.421]],["name/21-9",[]],["text/21-9",[]],["component/21-9",[]],["title/21-10",[56,18.967,326,31.526,1047,34.723,1688,60.957]],["name/21-10",[]],["text/21-10",[]],["component/21-10",[]],["title/21-11",[326,31.526,1050,35.07,1688,60.957,1689,60.957]],["name/21-11",[]],["text/21-11",[]],["component/21-11",[]],["title/21",[8,14.38,254,27.594,594,38.051,719,38.699,720,27.695]],["name/21",[398,1,594,1.144,825,1.524]],["text/21",[0,1.314,2,0.255,8,0.434,11,0.363,15,0.414,16,0.926,19,0.403,20,0.914,26,0.437,28,2.247,37,1.3,38,1.657,40,0.723,49,0.682,52,2.95,54,0.524,56,1.993,57,0.649,65,3.131,82,0.897,87,0.458,93,3.411,99,0.653,100,0.851,101,0.481,104,1.074,109,2.899,110,0.494,118,0.838,122,0.514,124,6.072,128,0.845,132,1.873,133,1.535,154,1.821,157,0.4,158,1.882,160,2.302,162,1.394,166,0.357,168,1.014,173,3.737,176,0.452,187,0.511,192,0.974,193,2.176,195,0.667,216,0.699,231,0.501,236,0.477,243,0.926,245,2.605,247,1.959,249,0.798,251,0.562,252,0.642,253,0.483,254,3.721,259,0.449,260,0.511,261,1.464,265,1.206,267,0.79,271,2.097,280,0.566,281,3.516,283,0.698,286,0.647,291,0.465,292,1.436,293,1.483,295,1.81,296,0.845,298,0.603,299,1.422,303,1.628,311,0.585,317,1.566,323,0.569,326,4.121,328,0.562,333,1.91,334,0.709,342,1.774,345,0.412,346,0.613,349,0.93,354,0.647,381,1.294,386,0.783,398,6.72,401,0.581,416,0.613,421,0.396,423,0.905,428,0.481,438,1.554,454,1.4,455,2.256,456,0.913,460,0.74,466,1.408,467,0.594,474,0.922,481,0.464,484,4.021,486,0.667,487,0.848,488,1.813,494,0.405,497,1.873,500,0.41,501,0.548,512,1.393,541,0.462,552,1.693,556,0.838,565,2.416,566,0.796,580,0.893,585,0.741,594,4.868,595,0.455,599,0.511,601,0.501,622,0.709,623,0.585,627,2.078,628,0.618,630,1.744,640,0.623,645,0.691,649,0.527,650,0.396,655,0.443,660,0.428,661,1.525,662,0.922,684,0.562,685,1.089,687,4.021,689,2.413,690,0.729,694,2.389,701,1.824,702,1.168,704,1.848,705,0.699,710,2.458,714,2.026,718,1.236,719,0.623,720,1.179,726,0.66,727,0.394,728,2.218,730,0.43,737,0.691,744,1.666,776,0.781,778,1.263,780,0.552,781,0.527,789,4.398,793,0.753,802,1.763,804,0.641,825,5.619,828,0.893,840,2.073,850,1.31,873,0.483,875,1.677,877,0.729,881,2.599,882,0.741,888,1.53,897,1.104,911,2.42,938,3.189,951,1.158,1013,0.817,1021,1.57,1085,0.767,1105,0.691,1113,0.667,1117,0.863,1127,0.893,1132,1.263,1150,1.782,1165,0.691,1198,0.729,1203,0.629,1205,3.321,1209,1.505,1211,0.863,1220,0.552,1231,0.552,1240,0.753,1245,0.767,1266,3.749,1271,0.667,1290,0.581,1295,0.753,1322,0.699,1324,0.838,1393,0.504,1431,0.93,1437,5.42,1445,0.603,1479,0.709,1480,0.897,1490,0.66,1496,0.798,1527,1.411,1550,3.075,1551,0.98,1552,7.474,1560,0.729,1577,0.817,1578,0.674,1610,1.848,1612,0.581,1613,0.98,1676,1.294,1678,0.893,1685,2.59,1687,3.482,1688,4.847,1689,2.968,1690,0.98,1691,4.395,1692,0.838,1693,0.838,1694,0.98,1695,0.98,1696,1.056,1697,1.662,1698,1.056,1699,5.321,1700,1.056,1701,0.613,1702,1.056,1703,1.056,1704,0.98,1705,3.214,1706,4.172,1707,1.056,1708,1.978,1709,4.398,1710,5.734,1711,8.388,1712,1.056,1713,0.838,1714,1.803,1715,4.631,1716,1.978,1717,1.056,1718,2.549,1719,1.366,1720,0.838,1721,0.93,1722,0.863,1723,1.978,1724,1.978,1725,1.056,1726,3.512,1727,1.056,1728,0.893,1729,4.156,1730,0.838,1731,0.66,1732,2.791,1733,2.59,1734,1.978,1735,0.893,1736,0.817,1737,0.753,1738,0.817,1739,2.158,1740,0.893,1741,1.978,1742,1.978,1743,1.978,1744,2.791,1745,2.59,1746,2.791,1747,0.817,1748,1.978,1749,1.978,1750,1.978,1751,1.978,1752,1.056,1753,1.056,1754,1.056,1755,1.742,1756,1.056,1757,1.056,1758,1.056,1759,1.056,1760,0.817,1761,1.056,1762,1.056,1763,1.366,1764,0.93,1765,1.056,1766,0.691,1767,0.699,1768,4.631,1769,2.791,1770,1.978,1771,1.056,1772,1.056,1773,1.056,1774,1.056,1775,1.056,1776,1.056,1777,1.056,1778,1.056,1779,1.056,1780,1.056,1781,1.056,1782,1.056,1783,1.056,1784,0.98,1785,1.056,1786,1.056,1787,1.056,1788,0.817,1789,0.893,1790,1.056,1791,1.056,1792,0.741,1793,0.98,1794,0.682,1795,1.056,1796,1.056]],["component/21",[1,0.4]],["title/22-1",[0,20.659,588,49.254]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[2,21.736,540,51.468]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22",[109,37.666,383,48.593,861,46.12]],["name/22",[861,1.572,1132,1.745]],["text/22",[0,1.854,1,1.218,2,1.572,13,1.153,18,1.255,38,1.933,46,2.39,52,1.603,57,1.352,75,4.57,77,1.407,99,2.547,107,2.763,109,5.009,128,3.455,154,1.307,158,2.139,160,1.444,164,1.661,166,1.393,168,2.336,169,2.656,184,2.888,192,1.437,204,2.078,205,2.805,227,1.793,235,1.814,236,1.86,237,1.702,241,1.992,245,2.586,246,1.954,247,1.065,252,2.114,283,1.452,295,1.793,298,2.352,299,2.638,303,3.022,326,4.38,342,1.389,381,3.022,382,3.364,383,2.497,384,4.732,413,1.656,436,2.497,470,2.316,481,2.86,487,1.766,490,3.047,497,2.763,500,1.598,538,2.497,540,4.619,588,2.25,618,2.603,627,1.807,630,2.573,631,7.145,639,3.952,640,2.43,660,3.274,669,2.956,682,2.86,706,2.474,717,2.192,727,1.536,734,2.22,744,1.65,773,3.112,774,5.225,794,2.989,813,4.5,815,3.267,820,2.034,822,6.089,832,3.112,860,3.626,861,5.768,867,7.296,869,4.116,875,5.525,876,3.112,938,2.497,1038,2.573,1132,5.873,1198,6.918,1203,2.452,1301,3.267,1494,3.047,1498,2.936,1543,5.476,1797,2.989,1798,3.626,1799,4.118,1800,5.252,1801,3.481,1802,4.118,1803,8.088,1804,7.506,1805,8.088,1806,4.118,1807,4.118,1808,5.985,1809,4.118,1810,3.364]],["component/22",[1,0.4]],["title/23-1",[0,15.03,3,40.151,4,48.518,60,39.766,304,18.705]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[2,14.497,20,19.684,169,24.502,283,21.195,503,36.808,861,34.6]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[5,25.97,6,24.934,428,27.385,867,47.692,1064,38.834,1811,37.965]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23-4",[9,24.854,162,22.02,428,25.28,861,31.941,1064,35.849,1810,45.333,1811,35.047]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["title/23-5",[13,18.364,169,26.727,503,40.151,694,44.612,861,37.743]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["title/23-6",[252,21.266,261,48.518,591,21.683,1257,52.024,1812,60.851]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["title/23",[20,23.617,283,25.43,503,44.162,861,41.513]],["name/23",[1813,4.451]],["text/23",[0,0.964,1,1.238,2,0.586,3,1.488,4,1.798,5,1.05,6,2.748,8,0.533,9,1.088,11,0.834,13,1.178,14,1.399,16,2.601,18,0.741,20,2.452,28,1.153,38,0.581,40,1.537,56,1.462,57,1.38,60,1.474,61,1.164,63,1.206,64,0.906,75,1.704,87,1.054,91,1.158,93,3.68,109,3.52,126,1.474,128,2.374,139,1.328,157,0.92,158,2.458,160,0.852,162,3.49,164,0.98,168,1.914,169,1.714,172,1.491,176,0.555,204,1.226,231,1.153,236,3.382,238,0.914,241,3.623,245,2.629,247,1.087,251,1.293,252,2.659,253,2.544,255,1.206,259,1.034,261,5.541,264,1.535,271,2.99,283,3.281,296,1.038,298,1.388,303,1.127,304,0.693,312,0.994,324,0.761,326,2.896,342,1.419,349,3.703,363,0.967,381,1.127,383,2.55,384,1.148,386,1.663,396,1.337,423,1.112,428,3.735,436,1.474,456,1.122,466,1.226,474,1.132,481,1.066,497,2.822,500,1.632,502,1.474,503,4.585,515,0.971,529,1.838,546,1.084,565,0.952,566,0.977,576,1.001,586,0.771,591,0.803,604,2.393,606,2.184,618,0.971,630,2.628,631,1.732,637,3.902,644,1.503,655,1.019,660,3.031,663,3.253,664,3.474,669,1.908,678,2.088,682,1.066,689,3.702,694,2.861,715,1.678,717,1.293,724,1.704,727,1.568,729,1.732,730,0.99,734,2.267,735,1.219,802,1.535,822,2.784,832,3.177,840,1.434,860,3.703,861,7.07,867,6.979,869,2.656,876,6.195,877,2.903,931,1.518,1011,2.331,1064,6.011,1085,1.764,1114,1.63,1118,2.14,1126,2.255,1132,1.552,1209,1.31,1220,1.269,1244,1.377,1257,4.411,1293,1.589,1304,1.148,1324,1.928,1437,1.328,1494,1.798,1543,5.8,1653,1.798,1697,1.447,1709,1.732,1794,2.717,1800,3.175,1810,5.413,1811,6.393,1812,2.255,1814,2.43,1815,2.75,1816,2.43,1817,2.43,1818,2.43,1819,8.199,1820,1.764,1821,2.75,1822,1.704,1823,2.43,1824,2.255,1825,2.255,1826,2.43,1827,2.482,1828,2.14,1829,4.205,1830,4.205,1831,4.205,1832,2.43,1833,1.764,1834,1.798,1835,1.732,1836,1.879,1837,2.43,1838,2.43,1839,1.764,1840,4.205,1841,5.559,1842,2.43,1843,1.985,1844,2.43,1845,2.43,1846,2.43,1847,2.43,1848,2.43,1849,2.43]],["component/23",[1,0.4]],["title/24",[192,20.97,252,19.496,326,26.276,396,33.079,1543,35.791,1797,43.631]],["name/24",[192,0.687,252,0.639,396,1.084]],["text/24",[107,3.949,158,3.058,192,4.445,205,4.009,298,5.319,384,5.511,386,3.684,396,7.012,436,5.649,497,8.55,589,8.1,599,4.507,627,4.088,1543,5.546,1850,9.315,1851,11.669,1852,11.669]],["component/24",[1,0.4]],["title/25-1",[0,20.659,1853,56.923]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25-2",[2,17.393,57,23.675,360,35.615,439,38.142]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["title/25-3",[5,31.159,304,20.573,360,35.615,439,38.142]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["title/25-4",[9,32.303,360,35.615,439,38.142,604,31.039]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["title/25-5",[13,16.835,347,31.213,459,31.213,640,35.477,896,31.593,1492,37.561]],["name/25-5",[]],["text/25-5",[]],["component/25-5",[]],["title/25-6",[168,18.939,591,21.683,604,28.22,896,34.463,1854,60.851]],["name/25-6",[]],["text/25-6",[]],["component/25-6",[]],["title/25",[247,18.647,395,36.389,1281,42.941,1855,52.348]],["name/25",[395,0.778,936,1.034,1281,0.918,1855,1.119]],["text/25",[0,1.378,1,0.933,2,0.898,5,0.913,9,0.947,11,2.065,13,1.398,18,1.521,22,1.727,24,1.712,28,1.003,39,0.91,40,0.773,45,4.051,52,2.669,54,2.477,56,1.312,57,0.694,74,1.436,77,1.705,82,2.264,91,1.008,99,1.307,107,0.896,120,1.35,122,1.028,148,1.482,154,1.182,157,0.8,158,1.974,166,1.259,168,2.185,172,0.749,176,0.483,192,0.737,202,1.335,204,1.879,214,1.478,232,0.935,235,0.931,237,2.834,240,1.217,241,3.317,247,0.547,258,1.682,259,0.899,271,2.331,278,0.899,281,0.913,299,1.507,303,0.98,304,1.956,324,0.662,326,2.181,337,1.335,342,1.683,347,1.098,360,5.171,363,0.842,369,2.535,381,0.98,384,1.759,386,1.473,389,1.091,395,4.381,409,0.724,417,1.14,428,0.963,437,4.198,438,1.974,439,5.225,441,4.43,442,4.288,446,1.14,459,4.948,460,0.791,494,0.81,495,2.28,496,4.051,500,2.333,509,1.163,511,3.084,516,1.4,529,1.628,531,2.439,535,2.498,541,0.924,546,1.661,565,0.828,576,2.477,583,1.217,584,1.677,585,1.482,591,1.231,593,0.8,595,0.91,604,2.951,618,1.993,627,1.634,640,4.819,641,1.962,644,3.086,649,1.858,650,0.793,652,2.008,655,1.561,660,0.856,661,3.286,663,1.237,665,2.179,669,1.689,678,1.049,682,0.928,684,1.125,688,2.126,689,2.531,690,3.446,692,1.366,702,2.945,720,0.893,727,0.788,728,1.335,729,2.824,732,1.307,733,1.217,734,2.008,739,1.098,745,1.294,746,3.042,747,3.042,778,1.35,779,1.085,807,1.018,811,1.556,812,1.079,821,1.418,864,1.962,895,1.497,896,6.221,929,2.303,936,1.418,950,1.217,1011,1.172,1107,1.787,1108,1.534,1109,1.962,1132,1.35,1160,1.294,1203,2.217,1216,1.35,1250,1.307,1278,1.198,1281,1.259,1390,1.198,1398,1.248,1452,1.4,1453,1.677,1460,2.303,1492,1.321,1500,1.079,1503,1.727,1524,2.814,1528,2.591,1541,1.459,1603,1.564,1609,1.207,1641,2.879,1642,1.382,1657,1.727,1658,1.335,1836,1.634,1839,1.534,1853,1.335,1854,5.58,1855,5.926,1856,1.962,1857,1.962,1858,1.962,1859,3.724,1860,2.114,1861,1.962,1862,1.104,1863,2.114,1864,1.564,1865,4.99,1866,4.631,1867,1.727,1868,2.114,1869,3.456,1870,6.013,1871,3.724,1872,3.724,1873,3.724,1874,2.114,1875,2.114,1876,2.114,1877,1.507,1878,2.114,1879,2.114,1880,1.962,1881,2.114,1882,2.114,1883,2.114,1884,3.724,1885,3.724,1886,2.114,1887,2.114,1888,2.114,1889,3.724,1890,2.114,1891,1.727,1892,3.147,1893,1.335,1894,2.114,1895,2.114,1896,1.564,1897,2.114,1898,3.724,1899,1.787,1900,2.114,1901,1.727,1902,1.861,1903,2.114]],["component/25",[1,0.4]],["title/26",[1,11.233,8,13.182,16,28.127,40,21.971,326,26.276,1543,35.791]],["name/26",[40,0.999,1543,1.627]],["text/26",[0,1.565,1,2.321,8,2.084,11,3.263,16,4.447,24,2.705,35,4.522,40,3.995,52,2.658,95,6.146,99,4.224,125,5.579,158,2.242,168,1.973,176,1.56,205,2.939,231,3.241,241,3.304,247,1.766,265,2.951,267,2.728,306,4.351,326,4.777,333,3.139,387,3.59,389,4.905,409,2.339,463,4.031,488,3.525,489,3.304,492,5.419,568,5.427,622,4.582,640,4.031,644,4.224,655,3.985,681,5.161,716,5.281,951,3.996,1064,4.412,1210,4.412,1344,5.161,1465,6.014,1543,6.507,1901,5.579,1904,6.338,1905,5.419,1906,5.772,1907,10.405,1908,6.338,1909,6.83,1910,6.014]],["component/26",[1,0.4]],["title/27-1",[586,32.698]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27",[247,23.302,389,46.523]],["name/27",[586,1.413]],["text/27",[1,2.415,8,2.108,11,4.087,16,4.498,40,3.513,192,3.353,247,2.485,252,3.118,326,5.202,395,4.85,396,5.29,488,4.962,489,5.758,640,5.673,1281,5.723,1543,7.085,1797,6.977,1855,6.977,1911,7.433]],["component/27",[1,0.4]],["title/28-1",[0,20.659,586,28.616]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[2,19.324,77,27.375,428,36.503]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28-3",[13,18.364,57,21.524,77,22.402,166,22.175,203,22.577]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["title/28-4",[18,24.421,302,39.161,591,26.496]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["title/28",[1,14.973,56,21.073,77,27.375]],["name/28",[1,0.236,235,0.558,238,0.476,239,0.549,446,0.682]],["text/28",[0,0.396,1,2.208,2,0.751,8,2.176,11,2.057,13,0.484,14,0.995,15,1.663,18,1.294,20,1.39,24,1.705,25,0.809,27,1.08,37,0.805,38,0.413,40,0.632,52,1.211,56,2.277,57,2.191,66,0.744,74,0.666,77,4.361,82,0.784,87,1.35,90,2.848,91,2.474,92,1.13,95,2.387,108,0.809,115,2.798,128,0.738,138,0.571,158,0.567,160,2.341,162,1.235,164,1.256,166,2.79,168,2.25,176,0.711,192,1.481,202,2.208,203,1.462,227,3.392,231,0.82,235,2.941,236,3.015,237,0.714,238,2.736,239,3.153,241,1.506,243,0.809,245,2.059,246,2.014,247,1.098,252,2.358,253,1.424,265,0.747,271,3.976,277,1.667,278,2.208,283,0.609,296,0.738,302,0.845,304,0.493,306,0.688,308,1.713,310,2.639,312,1.273,317,1.388,319,3.566,322,0.995,324,1.876,326,3.606,327,0.903,328,0.92,345,0.675,347,2.204,363,0.688,369,2.688,379,1.793,384,3.153,386,0.684,387,0.908,389,0.892,394,1.461,396,1.713,402,1.091,409,1.066,421,1.947,428,0.787,438,1.393,442,1.537,445,1.189,446,1.678,456,0.798,460,3.086,466,0.872,472,0.92,474,1.45,483,2.064,487,1.334,488,0.892,489,0.836,500,3.023,515,1.243,529,3.606,532,1.887,534,3.769,535,4.019,546,1.388,565,0.677,566,0.695,569,2.469,572,1.13,583,0.995,586,0.549,591,0.571,601,2.014,602,1.232,618,2.392,619,2.474,623,0.958,624,1.215,625,5.158,627,0.758,628,1.011,639,1.048,644,3.21,649,0.863,650,1.168,653,1.987,655,1.305,660,2.425,661,1.701,662,0.805,665,2.484,667,0.987,669,2.354,673,1.306,682,1.366,684,2.762,686,1.336,689,3.644,692,2.01,693,1.853,698,2.524,701,0.758,718,1.08,725,4.14,727,1.583,729,3.566,730,0.704,732,1.069,733,0.995,735,0.867,736,0.836,754,0.752,780,0.903,804,1.048,805,0.897,807,0.832,838,0.987,875,1.038,886,1.13,895,0.695,896,1.636,1024,1.3,1026,1.176,1033,1.461,1060,1.579,1105,2.035,1278,0.979,1390,0.979,1437,0.944,1450,1.232,1452,1.144,1476,1.212,1487,1.038,1500,2.166,1600,1.212,1601,1.212,1604,1.104,1614,1.16,1616,1.254,1674,1.254,1862,0.903,1912,1.461,1913,1.522,1914,1.336,1915,1.522,1916,7.27,1917,1.104,1918,1.412,1919,1.011,1920,1.279,1921,1.461,1922,1.412,1923,1.336,1924,1.461,1925,1.254,1926,1.604,1927,2.117,1928,1.16,1929,1.728]],["component/28",[1,0.4]],["title/29-1",[0,20.659,586,28.616]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[2,15.814,8,14.38,166,22.175,324,20.533,652,35.354]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[5,28.329,8,14.38,56,17.245,428,29.872,651,45.983]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[8,13.182,9,26.924,312,24.586,428,27.385,651,42.154,661,32.85]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29-5",[1,11.233,13,16.835,95,33.806,166,20.329,324,18.823,652,32.41]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["title/29",[8,14.38,77,22.402,166,22.175,324,20.533,652,35.354]],["name/29",[166,0.428,238,0.476,239,0.549,454,0.635,651,0.887]],["text/29",[0,1.092,1,1.659,2,1.149,5,0.667,6,0.64,8,2.584,9,0.692,11,1.328,13,1.083,18,1.179,19,0.59,20,1.56,25,1.315,26,1.969,27,0.965,30,0.747,36,1.051,37,1.309,38,0.924,39,0.665,40,1.027,45,3.321,54,0.767,56,2.041,57,1.564,61,0.74,74,1.084,77,2.651,84,0.775,87,1.219,93,0.611,95,2.175,96,0.975,100,0.665,107,0.655,108,0.723,132,1.036,154,0.49,157,1.464,158,1.564,159,0.71,160,2.995,161,1.592,162,1.89,164,1.922,166,2.888,168,1.117,169,0.629,187,1.36,192,0.539,193,1.292,200,0.634,201,1.297,202,1.035,203,1.905,231,0.733,235,2.099,236,2.152,237,1.599,238,1.792,239,2.399,243,1.81,246,0.733,247,2.295,252,1.545,258,0.697,259,0.657,271,3.215,278,0.657,283,2.186,296,1.2,298,0.882,304,0.802,306,1.119,310,1.704,312,2.536,317,0.689,319,3.294,324,2.875,326,2.082,327,0.807,339,0.928,342,2.288,345,2.85,360,0.763,369,3.833,384,1.327,395,0.779,413,0.621,415,0.827,417,0.833,421,2.545,428,4.182,430,0.868,437,0.946,441,6.93,442,5.523,446,0.833,456,1.297,460,3.056,466,0.779,474,0.719,481,2.428,483,3.55,487,0.662,494,0.592,500,2.632,515,1.123,529,1.228,534,0.747,539,0.747,543,0.896,566,1.555,576,1.157,583,1.618,586,0.49,591,0.511,593,0.585,595,0.665,604,0.665,618,2.21,624,1.51,625,1.861,627,0.678,628,1.644,649,1.403,650,1.451,651,7.637,652,3.936,660,1.138,661,2.114,662,1.309,663,1.644,664,1.756,667,3.874,669,0.7,678,0.767,682,0.678,688,0.882,689,3.265,698,1.367,706,0.928,725,2.776,727,0.576,729,3.781,732,0.955,733,0.889,735,2.39,737,1.01,751,1.477,794,1.121,797,4.005,802,0.975,807,1.862,811,0.645,812,1.434,836,5.734,875,1.689,895,2.493,897,1.569,911,0.569,1024,0.645,1032,1.083,1067,1.083,1150,1.795,1250,0.955,1369,0.771,1390,1.592,1476,1.083,1487,1.689,1500,1.973,1517,1.121,1600,1.971,1601,1.971,1603,2.079,1604,1.795,1609,0.882,1614,1.886,1616,1.121,1657,1.261,1797,1.121,1827,1.659,1919,1.644,1930,1.544,1931,1.544,1932,2.81,1933,1.036,1934,7.195,1935,1.083,1936,1.544,1937,1.305,1938,1.544,1939,1.544,1940,1.544,1941,1.433,1942,2.862,1943,2.475,1944,2.81,1945,1.544,1946,1.066,1947,2.475,1948,2.475,1949,2.475,1950,2.475,1951,1.194,1952,1.36,1953,1.225,1954,1.261,1955,1.305,1956,1.544,1957,1.143,1958,1.167,1959,1.121,1960,1.194,1961,2.81]],["component/29",[1,0.4]],["title/30-1",[0,18.366,154,25.44,304,22.856]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[2,17.393,8,15.816,56,18.967,77,24.64]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30-3",[8,15.816,11,24.768,13,20.198,464,31.526]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["title/30-4",[154,22.899,395,36.389,591,23.849,929,44.604]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["title/30-5",[214,31.795,593,30.333,705,53.055]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["title/30-6",[8,17.571,128,34.223,595,34.484]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["title/30-7",[154,25.44,439,42.375,596,39.567]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["title/30-8",[166,27.097,597,42.919,652,43.201]],["name/30-8",[]],["text/30-8",[]],["component/30-8",[]],["title/30-9",[24,20.531,192,25.16,232,31.907,1919,42.202]],["name/30-9",[]],["text/30-9",[]],["component/30-9",[]],["title/30-10",[24,20.531,232,31.907,357,46.593,553,40.868]],["name/30-10",[]],["text/30-10",[]],["component/30-10",[]],["title/30-11",[154,25.44,398,40.654,1588,50.605]],["name/30-11",[]],["text/30-11",[]],["component/30-11",[]],["title/30-12",[11,27.516,483,38.963,1676,52.391]],["name/30-12",[]],["text/30-12",[]],["component/30-12",[]],["title/30",[8,19.765,11,30.951]],["name/30",[8,0.338,56,0.405,238,0.58,239,0.668]],["text/30",[0,0.237,1,1.504,2,0.249,8,2.764,11,2.763,13,0.289,15,0.759,16,0.907,18,0.591,19,0.741,20,2.121,24,2.132,25,1.614,26,0.801,27,0.646,28,0.92,30,0.5,33,1.099,35,0.684,37,0.481,38,1.351,39,1.178,40,1.703,43,1.434,44,0.615,52,0.755,54,0.962,55,0.938,56,1.969,57,1.132,66,0.834,74,0.747,77,2.749,82,0.469,87,1.187,90,0.693,93,0.767,95,0.581,96,0.653,107,0.438,108,0.484,109,0.486,115,0.557,119,0.463,122,0.503,124,1.301,128,2.597,133,0.847,150,0.519,154,2.172,157,2.139,158,0.339,160,1.816,161,1.099,162,0.769,164,2.896,166,1.382,168,2.698,172,0.366,175,0.72,176,0.625,183,0.561,187,0.5,192,1.806,193,0.891,197,1.176,200,1.416,202,1.386,203,0.667,204,0.521,213,0.714,214,3.84,215,2.564,216,0.684,217,4.23,219,2.243,227,0.844,231,0.49,232,2.061,235,2.49,236,1.845,237,1.132,238,2.288,239,2.809,245,1.086,247,2.685,248,0.51,251,0.55,252,0.335,253,0.473,255,0.513,260,0.5,261,2.026,265,0.838,271,2.643,274,0.646,275,0.537,280,0.554,281,0.838,283,1.992,288,0.484,290,0.581,291,0.854,295,0.45,296,0.441,298,0.59,299,1.396,303,0.899,304,0.553,306,0.772,308,1.507,310,0.455,312,1.12,317,0.865,324,1.769,326,1.197,327,0.54,328,1.032,330,2.671,333,0.891,342,0.654,345,1.595,346,0.6,354,0.633,357,0.668,358,1.79,359,0.684,360,0.51,363,0.772,369,0.382,376,0.799,377,0.6,379,1.156,381,1.27,384,0.916,386,0.409,387,0.543,395,3.068,396,0.569,398,3.641,402,0.653,418,0.765,419,2.134,420,1.007,422,1.576,426,1.382,431,0.844,432,0.547,438,2.458,439,1.824,442,0.957,446,0.557,450,0.547,459,0.537,460,0.387,461,0.615,464,2.47,470,0.581,472,0.55,481,1.202,483,1.677,487,1.479,488,0.533,489,1.325,494,0.743,500,1.062,515,1.094,523,0.605,527,0.653,529,1.786,531,0.505,532,1.176,534,0.938,539,0.5,540,0.59,553,0.586,565,0.405,566,0.416,568,0.59,576,3.084,577,2.037,583,1.576,591,0.342,593,0.391,594,1.125,595,0.445,596,0.51,597,0.554,601,0.49,604,1.178,606,0.537,618,2.991,619,0.493,622,1.301,624,0.404,625,1.284,627,2.48,632,0.781,644,0.639,645,0.676,649,4.748,650,2.282,651,0.725,652,1.476,655,0.433,657,0.621,658,0.82,660,4.387,661,1.059,667,0.59,669,3.528,670,0.82,671,0.822,672,1.116,678,0.513,682,0.454,686,0.799,687,1.359,689,1.451,693,1.63,694,1.319,698,0.943,699,1.074,703,0.465,705,1.813,717,0.55,718,0.646,719,1.144,720,0.819,723,0.82,725,0.519,727,2.416,728,1.729,729,3.691,736,0.5,744,1.097,746,0.844,751,1.439,764,0.508,780,0.54,783,0.82,784,0.82,785,0.82,793,0.737,802,1.224,804,1.176,807,1.318,812,0.527,873,0.473,875,0.621,886,0.676,895,0.416,896,1.439,911,1.272,929,3.761,931,2.155,932,0.799,933,0.91,934,1.224,935,0.959,936,0.693,937,0.959,938,2.092,1011,1.074,1024,0.432,1060,0.524,1128,1.134,1135,0.639,1150,0.66,1219,0.82,1231,0.54,1279,0.714,1282,0.605,1290,0.569,1328,1.001,1349,0.573,1350,0.895,1384,0.737,1394,0.873,1395,0.799,1422,0.605,1426,0.519,1437,0.565,1446,0.844,1450,1.382,1452,1.284,1457,0.668,1458,1.338,1461,0.61,1473,0.959,1476,0.725,1480,1.565,1485,0.91,1492,0.646,1494,0.765,1500,0.527,1524,1.465,1530,0.693,1536,0.684,1537,0.82,1575,1.176,1576,0.844,1577,0.799,1588,0.653,1615,0.633,1642,0.676,1648,0.703,1674,0.75,1676,1.268,1718,1.407,1767,0.684,1810,0.844,1834,0.765,1862,1.43,1917,0.66,1918,0.844,1919,1.134,1920,1.434,1921,0.873,1922,0.844,1923,1.499,1924,0.873,1925,0.75,1927,1.863,1962,1.033,1963,0.959,1964,0.844,1965,0.725,1966,0.714,1967,1.407,1968,0.82,1969,0.82,1970,0.959,1971,0.799,1972,1.639,1973,0.91,1974,0.91,1975,0.91,1976,1.033,1977,1.939,1978,0.91,1979,0.765,1980,0.844,1981,0.91,1982,0.75,1983,0.82,1984,2.738,1985,0.82]],["component/30",[1,0.4]],["title/31-1",[0,16.531,154,22.899,304,20.573,312,29.498]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[2,12.428,8,11.301,154,16.361,166,17.427,228,21.004,421,19.334,494,19.747,618,20.583]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[11,24.768,13,20.198,252,23.391,1060,36.593]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31",[8,15.816,247,18.647,312,29.498,421,27.059]],["name/31",[8,0.338,238,0.58,239,0.668,312,0.63]],["text/31",[0,0.801,1,0.881,2,0.843,8,2.967,11,3.399,13,0.551,15,1.37,18,2.208,19,2.183,20,2.889,24,2.818,28,2.238,31,0.479,38,0.471,52,0.766,56,1.721,57,1.548,60,1.194,64,0.734,66,1.505,74,0.759,77,1.952,87,0.854,93,0.779,109,1.644,119,2.559,126,2.12,128,0.841,138,1.56,139,1.076,150,0.988,154,3.041,157,2.163,158,1.876,159,2.168,160,2.752,162,0.781,164,2.305,166,2.45,168,1.362,172,0.698,175,0.518,176,2.386,182,0.921,187,0.952,192,1.22,193,0.905,202,0.527,203,0.678,204,0.993,205,0.847,228,2.953,232,1.547,235,1.541,236,1.579,237,0.814,238,2.15,239,2.838,241,1.692,245,1.387,247,2.7,248,0.972,250,1.359,251,1.048,252,2.35,254,0.828,265,2.468,271,1.603,275,1.022,278,0.838,281,0.85,304,1.345,306,1.878,308,1.924,310,2.517,312,3.772,317,1.56,319,2.082,321,2.029,323,1.061,324,1.789,328,1.048,346,2.737,351,1.827,354,1.205,357,1.272,369,1.744,379,2.764,381,0.913,387,1.035,388,1.487,395,0.993,398,2.899,407,1.083,409,1.198,421,2.455,423,0.901,428,0.897,438,1.876,439,1.041,445,2.5,456,1.614,460,2.71,465,1.404,467,1.107,470,1.107,474,0.917,487,1.499,494,2.776,500,2.217,501,1.022,502,1.194,510,1.115,529,1.528,539,2.764,546,2.548,560,2.185,561,1.608,562,1.608,590,1.069,594,2.029,606,1.022,618,3.134,619,2.249,624,0.769,645,1.287,650,0.739,652,1.061,659,1.651,660,0.797,661,1.076,662,1.629,665,2.046,669,2.139,682,0.864,698,2.778,699,1.091,704,1.303,720,2.413,725,3.635,729,1.943,732,1.217,733,1.133,736,2.282,739,1.022,751,1.035,780,1.826,783,1.562,784,1.562,785,1.562,805,2.967,807,0.948,820,1.727,823,1.257,886,3.084,888,1.522,926,1.321,929,1.217,932,1.522,947,1.243,953,1.827,981,0.993,1033,1.664,1044,2.587,1053,1.287,1060,1.774,1078,1.194,1160,1.205,1205,1.38,1209,1.061,1219,1.562,1259,1.404,1282,1.152,1291,1.457,1357,2.208,1387,2.774,1389,1.359,1432,0.939,1476,1.38,1480,0.893,1500,2.407,1524,1.487,1536,1.303,1549,1.321,1602,2.452,1627,1.321,1862,1.028,1986,1.827,1987,1.827,1988,2.233,1989,1.827,1990,1.969,1991,1.969,1992,1.969,1993,1.969,1994,2.315,1995,1.608,1996,1.734,1997,1.028,1998,1.38,1999,1.969,2000,1.969,2001,1.487]],["component/31",[1,0.4]],["title/32-1",[0,20.659,586,28.616]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32-2",[2,19.324,24,22.809,472,42.644]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["title/32-3",[5,31.159,8,15.816,77,24.64,1609,41.185]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["title/32-4",[77,22.402,138,21.683,203,31.8,235,28.892]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["title/32-5",[24,17.112,109,28.257,138,19.877,252,19.496,619,28.661,805,31.213]],["name/32-5",[]],["text/32-5",[]],["component/32-5",[]],["title/32-6",[11,24.768,24,20.531,138,23.849,698,35.07]],["name/32-6",[]],["text/32-6",[]],["component/32-6",[]],["title/32-7",[8,12.169,24,15.797,38,13.264,57,18.216,205,23.882,380,21.737,2002,42.908]],["name/32-7",[]],["text/32-7",[]],["component/32-7",[]],["title/32-8",[24,18.666,31,15.956,174,32.212,235,28.892,257,40.151]],["name/32-8",[]],["text/32-8",[]],["component/32-8",[]],["title/32-9",[77,24.64,175,18.967,176,16.474,203,24.832]],["name/32-9",[]],["text/32-9",[]],["component/32-9",[]],["title/32-10",[8,14.38,24,18.666,38,15.674,421,24.601,2003,49.546]],["name/32-10",[]],["text/32-10",[]],["component/32-10",[]],["title/32-11",[24,18.666,57,21.524,177,28.777,1966,45.272,2004,50.702]],["name/32-11",[]],["text/32-11",[]],["component/32-11",[]],["title/32-12",[8,15.816,317,32.169,831,45.55,1036,47.755]],["name/32-12",[]],["text/32-12",[]],["component/32-12",[]],["title/32-13",[8,15.816,9,32.303,93,28.525,1609,41.185]],["name/32-13",[]],["text/32-13",[]],["component/32-13",[]],["title/32-14",[24,18.666,201,30.268,203,31.8,357,42.361]],["name/32-14",[]],["text/32-14",[]],["component/32-14",[]],["title/32-15",[24,18.666,192,22.875,200,26.913,203,31.8]],["name/32-15",[]],["text/32-15",[]],["component/32-15",[]],["title/32-16",[1,13.477,77,24.64,1609,41.185,1686,38.886]],["name/32-16",[]],["text/32-16",[]],["component/32-16",[]],["title/32-17",[57,23.675,236,32.576,326,31.526,384,34.062]],["name/32-17",[]],["text/32-17",[]],["component/32-17",[]],["title/32-18",[24,17.112,109,28.257,247,15.542,252,19.496,619,28.661,805,31.213]],["name/32-18",[]],["text/32-18",[]],["component/32-18",[]],["title/32-19",[11,24.768,24,20.531,247,18.647,698,35.07]],["name/32-19",[]],["text/32-19",[]],["component/32-19",[]],["title/32-20",[1,13.477,93,28.525,1609,41.185,2005,44.604]],["name/32-20",[]],["text/32-20",[]],["component/32-20",[]],["title/32-21",[24,18.666,57,21.524,202,17.546,227,28.55,534,31.726]],["name/32-21",[]],["text/32-21",[]],["component/32-21",[]],["title/32-22",[1,12.253,294,25.767,701,28.777,1557,43.418,2006,49.546]],["name/32-22",[]],["text/32-22",[]],["component/32-22",[]],["title/32-23",[1,13.477,24,20.531,1060,36.593,1378,51.424]],["name/32-23",[]],["text/32-23",[]],["component/32-23",[]],["title/32-24",[24,18.666,57,21.524,1060,33.269,1558,48.518,2007,45.983]],["name/32-24",[]],["text/32-24",[]],["component/32-24",[]],["title/32-25",[24,18.666,369,24.243,1060,33.269,1506,46.753,1559,50.702]],["name/32-25",[]],["text/32-25",[]],["component/32-25",[]],["title/32-26",[13,20.198,24,20.531,166,24.39,652,38.886]],["name/32-26",[]],["text/32-26",[]],["component/32-26",[]],["title/32-27",[24,22.809,591,26.496,728,50.605]],["name/32-27",[]],["text/32-27",[]],["component/32-27",[]],["title/32",[8,15.816,24,20.531,379,30.462,1994,47.755]],["name/32",[238,0.58,239,0.668,379,0.651,1994,1.021]],["text/32",[0,0.397,1,2.018,2,0.417,5,0.748,6,0.718,8,2.509,9,0.775,11,2.677,13,0.485,18,0.527,19,1.19,20,1.963,24,3.635,27,1.081,28,1.479,31,0.758,35,1.146,37,1.451,38,1.739,39,0.745,49,1.118,56,0.455,57,2.844,61,2.036,66,0.745,76,2.013,77,3.197,85,1.146,87,1.351,93,2.055,95,0.973,100,0.745,108,1.458,109,1.465,119,1.396,126,1.89,128,0.739,138,1.983,139,0.946,150,4.143,159,0.795,160,0.607,161,1.766,163,0.973,164,0.698,166,2.028,168,1.93,169,1.732,172,0.614,173,0.933,174,1.531,175,1.118,176,0.971,177,0.76,192,1.483,195,0.584,197,1.05,199,1.281,200,1.279,201,1.438,202,1.39,203,2.983,205,1.829,209,1.004,227,0.754,228,1.27,229,1.05,230,0.946,232,0.766,235,2.642,236,1.92,237,3.732,238,2.256,239,1.351,241,5.032,245,1.236,247,2.24,248,0.855,249,1.308,250,1.195,252,1.378,253,0.792,257,1.06,258,0.782,259,1.326,268,1.04,271,2.806,276,0.846,286,1.06,288,0.81,291,0.763,294,1.225,298,2.427,304,0.494,306,1.692,317,0.772,319,1.03,321,1.004,324,1.627,326,2.271,334,1.161,342,1.434,345,0.676,346,1.004,357,1.118,361,1.03,363,0.689,369,0.64,377,1.004,379,3.293,380,1.665,384,3.682,386,0.685,390,1.081,395,0.873,408,0.806,410,0.966,416,1.004,421,2.507,422,0.996,430,0.973,432,1.648,438,1.023,439,0.915,445,0.661,454,1.564,460,0.647,466,0.873,472,2.765,474,0.806,489,1.508,491,1.146,495,1.908,500,0.672,502,2.577,511,0.778,534,1.508,547,1.214,565,0.678,566,1.709,586,0.55,591,0.572,604,0.745,619,2.477,628,1.013,652,0.933,659,0.817,665,1.823,669,0.785,671,0.734,682,0.76,683,1.463,688,0.988,689,1.311,698,2.067,701,2.631,720,0.731,725,0.868,728,2.684,736,0.837,745,1.06,748,1.479,753,1.177,805,2.207,831,1.968,887,1.99,920,1.463,1036,2.063,1049,1.908,1060,4.581,1127,1.463,1216,1.105,1296,0.888,1308,1.195,1328,5.667,1350,1.438,1378,3.03,1384,2.222,1396,0.952,1456,1.013,1459,2.222,1475,1.606,1505,1.338,1506,1.234,1517,1.256,1557,1.146,1558,1.281,1559,2.409,1565,0.981,1567,1.606,1573,2.063,1602,1.214,1608,1.118,1609,4.452,1686,0.933,1692,2.472,1933,1.161,1966,2.934,1994,1.146,1995,1.414,2002,2.409,2003,1.308,2004,2.409,2005,1.07,2006,1.308,2007,4.204,2008,1.463,2009,1.731,2010,4.275,2011,1.146,2012,1.606,2013,3.116,2014,1.731,2015,1.463,2016,1.06,2017,1.524,2018,2.546,2019,1.606,2020,1.731,2021,1.731,2022,1.606,2023,1.731,2024,1.414,2025,1.524,2026,1.606,2027,1.731,2028,1.731,2029,1.731,2030,1.606,2031,1.731,2032,1.524,2033,1.731,2034,1.731,2035,3.472,2036,1.524,2037,1.731,2038,1.414,2039,1.731,2040,1.731]],["component/32",[1,0.4]],["title/33-1",[0,20.659,1853,56.923]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[2,15.814,8,14.38,56,17.245,166,22.175,369,24.243]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33-3",[8,14.38,13,18.364,166,22.175,319,39.041,369,24.243]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["title/33-4",[176,14.978,591,21.683,698,31.885,725,32.903,1060,33.269]],["name/33-4",[]],["text/33-4",[]],["component/33-4",[]],["title/33-5",[8,14.38,166,22.175,252,21.266,593,24.823,693,39.041]],["name/33-5",[]],["text/33-5",[]],["component/33-5",[]],["title/33",[8,17.571,166,27.097,247,20.716]],["name/33",[8,0.278,166,0.428,238,0.476,239,0.549,277,0.678]],["text/33",[0,0.408,1,1.481,2,0.43,6,0.739,8,2.844,11,1.824,13,0.499,15,2.08,18,0.543,20,3.105,24,0.507,25,0.834,31,0.434,37,2.027,38,1.04,52,1.245,56,2.494,57,1.05,66,0.767,77,1.093,108,0.834,109,0.838,110,0.834,138,0.589,142,1.293,147,1.671,154,1.016,158,1.429,160,2.597,162,2.701,164,2.468,166,4.423,168,1.534,176,1.555,187,1.548,192,1.116,193,0.819,202,0.477,232,0.788,235,2.34,236,2.763,237,1.799,238,3.155,239,3.636,240,1.026,243,1.497,245,1.269,247,1.373,252,3.258,253,1.992,259,1.852,271,1.805,276,0.871,277,3.966,278,0.758,283,0.628,296,1.859,304,1.515,306,1.274,308,2.395,310,3.694,317,2.368,319,4.719,321,1.856,322,3.056,326,1.903,328,0.948,342,1.468,369,4.362,379,1.351,380,1.253,413,0.717,416,1.034,421,1.992,422,3.056,430,1.799,438,2.008,445,2.029,456,2.009,460,1.197,466,0.899,483,2.582,487,2.623,488,0.92,494,3.037,500,3.075,515,0.712,520,1.071,523,1.043,529,1.903,534,0.862,539,0.862,540,1.018,546,1.427,552,1.94,565,2.667,566,0.717,572,2.092,576,0.734,577,1.398,583,1.026,591,0.589,593,0.675,599,2.106,603,1.999,604,0.767,609,0.948,618,2.121,619,3.246,623,0.988,624,0.696,627,1.404,628,1.872,634,1.856,639,1.081,644,1.978,649,0.889,650,1.2,659,0.842,660,1.762,663,1.043,664,1.113,669,1.974,672,1.841,684,1.702,693,5.234,698,3.6,699,2.412,706,1.071,715,1.23,720,0.753,725,4.207,727,1.623,729,3.05,730,1.304,735,1.605,748,0.846,754,0.776,779,0.914,802,1.125,804,1.081,805,2.757,820,0.88,835,1.569,875,1.071,886,1.165,895,1.286,911,0.657,926,2.146,1060,2.208,1231,0.931,1250,2.692,1281,1.061,1327,1.18,1390,1.01,1400,0.755,1409,3.61,1422,1.043,1435,1.346,1446,1.456,1450,2.281,1452,2.118,1461,1.052,1484,1.043,1487,1.071,1500,2.221,1541,1.23,1575,1.081,1600,1.25,1601,1.25,1604,1.138,1614,1.196,1701,1.034,1718,1.293,1719,1.23,1815,1.165,1853,1.125,1862,0.931,1919,1.043,1920,1.319,1923,1.378,1935,1.25,2041,1.782,2042,1.782,2043,1.091,2044,4.352,2045,1.346,2046,1.654]],["component/33",[1,0.4]],["title/34",[8,17.571,57,26.302,128,34.223]],["name/34",[8,0.338,128,0.658,238,0.58,239,0.668]],["text/34",[0,1.044,1,1.114,8,2.224,11,3.166,18,0.813,20,0.873,24,2.008,27,1.666,28,2.162,35,3.949,38,0.637,40,1.665,57,1.958,61,2.183,77,0.911,82,1.21,85,1.766,87,1.976,89,1.457,96,1.684,104,1.447,118,3.614,128,4.952,139,1.457,150,1.338,154,1.893,157,4.708,159,3.641,160,0.935,162,1.808,168,2.93,192,2.08,231,2.162,238,1.714,239,1.157,243,1.248,245,1.058,247,2.718,248,1.317,250,1.841,252,1.934,253,1.22,256,2.254,270,1.489,271,2.397,283,0.94,288,1.248,291,1.175,298,1.523,299,2.414,300,1.814,303,1.236,304,1.299,306,1.062,312,1.091,333,1.226,342,2.379,345,2.328,346,1.547,354,1.633,363,1.062,369,3.886,381,1.236,384,4.354,386,2.79,396,1.467,399,2.254,438,0.875,456,1.231,460,2.638,470,1.5,479,1.369,481,2.617,483,2.9,489,3.833,500,1.035,504,2.348,515,1.82,531,4.506,541,2.607,566,2.836,567,4.362,606,1.385,624,1.041,649,1.331,650,1.709,660,1.08,661,2.49,669,1.21,682,1.17,689,1.122,719,1.574,729,3.263,735,1.338,744,4.065,754,1.161,764,3.892,794,3.306,807,1.284,822,3.949,869,1.684,895,1.072,1064,1.723,1108,1.936,1135,1.649,1206,2.062,1219,3.614,1231,1.393,1243,3.614,1317,1.744,1327,1.766,1390,1.511,1395,5.454,1480,1.21,1487,1.602,1500,1.361,1521,1.633,1536,1.766,1573,5.715,1600,1.87,1601,1.87,1614,1.789,1639,3.614,1642,2.979,1653,1.973,1767,1.766,1792,3.195,1811,1.684,1815,5.18,1822,1.87,1918,3.722,1965,4.182,2047,1.789,2048,8.119,2049,2.475,2050,2.015,2051,4.555,2052,4.555,2053,6.126,2054,4.555,2055,4.555,2056,4.555,2057,2.475,2058,4.228,2059,2.667,2060,2.667,2061,2.667,2062,2.667,2063,1.973]],["component/34",[1,0.4]],["title/35",[8,19.765,662,41.98]],["name/35",[8,0.338,238,0.58,239,0.668,661,0.842]],["text/35",[1,1.783,8,2.897,11,2.359,15,2.691,24,2.716,38,1.642,77,3.26,160,2.409,162,2.726,176,2.179,187,3.323,235,3.026,236,3.102,238,2.585,239,2.979,245,2.726,246,3.259,247,1.776,253,3.143,271,4.026,281,2.967,379,2.901,438,3.132,483,3.34,487,2.945,500,2.665,529,3.002,539,3.323,603,4.292,660,2.781,662,6.275,669,3.116,678,3.41,682,4.187,698,5.331,729,2.829,735,3.447,818,4.019,911,2.532,1044,7.059,1060,4.841,1121,4.742,1404,5.45,1476,6.691,1500,3.505,1609,3.922,1789,5.805,1994,4.548]],["component/35",[1,0.4]],["title/36",[8,14.38,247,16.953,319,39.041,369,24.243,460,24.529]],["name/36",[238,0.58,239,0.668,572,1.008,1388,1.303]],["text/36",[1,1.62,6,1.904,8,2.761,11,1.576,20,1.503,28,2.178,37,3.304,38,1.097,56,1.207,74,2.735,77,3.333,110,2.147,160,3.421,161,2.6,162,4.185,163,2.581,164,1.852,168,1.326,192,1.601,198,3.331,235,4.647,236,3.917,237,1.897,238,3.263,239,4.574,243,3.319,245,1.821,247,2.522,252,3.616,253,3.246,271,2.411,278,3.018,283,1.618,304,1.309,306,2.824,312,2.901,317,2.047,319,5.163,321,2.663,322,2.642,342,1.548,354,2.81,369,3.9,416,2.663,421,1.722,428,3.232,446,2.474,456,3.274,460,3.244,466,2.316,483,4.216,500,3.785,515,2.833,529,2.006,546,2.047,566,1.845,628,2.685,669,2.082,689,1.931,719,2.708,727,1.712,729,4.344,730,1.871,732,2.838,733,2.642,735,4.351,779,2.355,782,5.628,805,2.383,807,2.209,895,1.845,1390,2.6,1435,5.36,1476,3.218,1487,2.757,1500,2.342,1517,3.331,1536,3.039,1600,3.218,1601,3.218,1602,4.975,1614,3.079,1622,2.562,1927,3.122,1955,5.996,2064,4.589,2065,4.589]],["component/36",[1,0.4]],["title/37-1",[0,20.659,586,28.616]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37-2",[2,19.324,160,28.101,410,44.729]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["title/37",[1,12.253,8,14.38,57,21.524,238,24.675,239,28.439]],["name/37",[586,1.413]],["text/37",[0,0.91,1,1.96,2,0.957,8,3.089,11,2.711,18,1.929,19,1.516,24,2.564,25,3.694,56,1.044,57,2.591,77,3.759,108,1.857,128,2.703,159,1.824,160,3.451,161,3.586,166,3.864,168,1.146,169,1.618,188,2.169,192,2.208,202,2.41,203,2.718,214,3.132,215,4.344,219,3.8,227,1.728,235,1.749,236,1.793,237,1.64,238,1.493,239,3.906,247,3.377,277,3.39,278,2.693,312,1.623,319,4.7,324,2.472,369,2.918,379,3.334,381,4.563,410,2.215,421,2.374,439,5.204,446,3.412,460,3.681,534,3.819,546,2.823,547,4.438,586,1.26,598,4.089,618,2.528,651,4.438,652,4.256,662,3.677,682,2.777,717,2.112,751,2.086,782,3.149,783,5.021,784,5.021,785,5.021,1011,2.199,1325,2.74,1328,3.267,1384,2.83,1986,3.683,1987,3.683,1994,5.227,2066,3.354,2067,2.936]],["component/37",[1,0.4]],["title/38-1",[160,31.609,586,28.616]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38",[503,63.061]],["name/38",[586,1.413]],["text/38",[310,4.947,503,6.875,640,6.626,681,8.483,1543,6.685,1642,7.341,2068,8.149]],["component/38",[1,0.4]],["title/39",[310,24.451,503,33.979,640,32.75,681,41.929,1543,33.04,1642,36.284,2068,40.277]],["name/39",[310,0.679,503,0.944,1642,1.008,2068,1.119]],["text/39",[6,2.681,24,1.84,40,2.362,66,2.781,84,3.243,87,2.803,98,4.883,108,3.024,128,4.531,158,2.121,160,2.267,187,3.127,236,5.209,245,2.565,247,2.982,252,3.74,271,2.197,303,4.919,310,5.846,342,2.18,421,2.425,460,2.418,474,3.01,503,3.957,515,3.652,604,2.781,606,3.356,640,6.806,660,2.616,676,3.814,681,8.714,706,3.883,723,5.128,727,2.41,794,4.691,911,3.37,1064,5.906,1543,5.443,1604,4.127,1642,8.261,1713,5.128,1719,4.462,1811,4.082,1834,4.782,1902,9.341,2068,4.691,2069,5.998,2070,6.463,2071,4.883]],["component/39",[1,0.4]],["title/40-1",[0,20.659,588,49.254]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["title/40-2",[2,19.324,215,44.093,460,29.973]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["title/40",[215,39.688,326,31.526,384,34.062,460,26.979]],["name/40",[215,1.503,460,1.022]],["text/40",[0,1.276,2,1.343,13,0.949,15,1.327,18,2.16,20,1.109,24,0.964,33,1.92,40,1.238,45,3.796,56,2.385,84,2.794,93,1.34,96,2.139,107,2.36,110,1.585,157,2.108,158,3.2,161,1.92,162,1.344,168,1.608,192,1.182,202,0.906,205,2.396,214,2.812,215,6.314,227,1.475,235,1.493,236,2.515,243,2.605,245,2.209,246,1.607,271,1.892,283,1.194,312,1.386,325,2.688,326,3.588,342,2.391,360,4.053,369,1.252,380,2.776,384,4.866,389,4.237,395,1.709,437,5.026,438,2.694,439,1.792,442,1.673,460,2.651,474,1.578,481,1.487,512,2.779,544,2.619,588,1.851,598,5.859,600,3.844,601,1.607,606,5.35,623,1.877,624,1.323,627,3.11,628,3.258,630,5.667,631,6.952,660,1.371,662,4.224,684,5.189,685,1.864,699,3.085,703,2.504,720,1.431,727,3.061,730,1.381,735,1.7,760,3.735,773,4.207,781,1.691,822,3.686,848,2.017,881,6.71,887,2.163,894,2.339,895,2.239,896,2.926,921,2.017,1113,2.139,1135,2.095,1185,2.415,1282,1.982,1290,1.864,1293,2.215,1421,3.144,1461,1.999,1476,2.376,1524,2.56,1609,3.179,1657,2.767,1718,2.459,1760,4.305,1797,2.459,1825,3.144,1858,5.167,1866,3.144,1960,8.32,2072,2.767,2073,10.76,2074,3.144,2075,3.144,2076,3.387,2077,3.387,2078,3.387,2079,3.387,2080,2.688,2081,3.387,2082,3.144,2083,2.983,2084,3.387,2085,3.387,2086,3.387,2087,2.863,2088,8.241,2089,5.48]],["component/40",[1,0.4]],["title/41-1",[160,36.118]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41",[460,38.524]],["name/41",[586,1.413]],["text/41",[1,2.115,8,2.273,11,2.128,15,2.427,19,2.367,95,3.485,110,2.899,114,3.363,130,4.498,151,2.94,160,2.173,176,2.367,184,4.345,188,3.386,204,3.126,215,3.41,233,4.418,246,2.94,265,2.677,284,4.498,288,2.899,293,2.617,303,2.873,306,2.467,324,2.778,326,2.709,333,4.077,334,4.158,372,5.062,384,2.927,393,3.689,394,5.237,460,5.23,463,3.657,490,6.565,539,2.998,540,3.539,541,3.878,660,4.196,678,3.076,725,3.109,751,3.257,811,2.589,1079,5.457,1176,5.457,1247,3.957,1252,4.791,1290,3.41,1327,4.103,1521,3.794,1722,5.062,1864,4.585,1905,4.916,2067,4.585,2090,6.196,2091,5.75,2092,5.457,2093,6.196,2094,6.036,2095,5.457,2096,6.196,2097,6.196,2098,8.872,2099,8.872,2100,8.872]],["component/41",[1,0.4]],["title/42-1",[0,20.659,586,28.616]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[2,15.814,238,24.675,239,28.439,460,24.529,627,28.777]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[13,15.541,20,18.171,252,17.997,445,21.199,619,26.458,805,42.518]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[176,14.978,591,21.683,698,31.885,725,32.903,1060,33.269]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42",[8,17.571,324,25.09,460,29.973]],["name/42",[8,0.432,324,0.617,460,0.737]],["text/42",[0,0.724,1,0.59,2,0.761,6,1.309,8,2.779,13,0.884,15,2.057,18,0.962,20,1.72,52,2.625,56,0.83,57,1.724,74,1.217,87,1.369,108,1.477,139,1.725,147,1.649,154,1.002,158,1.036,160,3.06,162,1.253,168,0.912,176,1.993,235,2.314,236,2.372,237,1.305,238,3.757,239,4.331,243,2.457,245,2.676,247,1.743,252,3.631,259,2.869,271,1.785,278,1.343,296,2.243,304,0.9,306,3.75,308,4.325,310,3.845,312,2.148,316,1.713,317,3.892,319,1.879,321,4.561,322,4.524,324,3.274,342,1.065,354,3.216,369,2.906,379,1.333,386,1.248,417,1.702,421,1.184,438,1.724,445,3.334,460,4.741,465,2.251,470,1.775,471,1.896,483,2.554,487,1.353,500,2.616,512,1.575,529,2.948,539,1.527,540,1.802,546,3.008,577,1.38,586,1.002,591,1.044,603,3.281,609,1.68,619,4.986,627,3.449,628,3.073,649,1.575,660,2.73,663,1.847,664,1.972,669,3.059,682,1.385,698,4.855,699,3.737,725,5.447,727,2.515,729,3.594,730,2.14,732,1.952,733,1.817,735,1.584,805,4.531,807,3.247,820,1.559,886,2.064,926,3.523,1060,3.421,1123,1.994,1216,2.016,1500,2.68,1536,3.477,1862,1.649,2088,4.439,2101,2.929,2102,2.504,2103,3.886]],["component/42",[1,0.4]],["title/43-1",[0,20.659,586,28.616]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[2,15.814,238,24.675,239,28.439,460,24.529,627,28.777]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[13,15.541,20,18.171,252,17.997,445,21.199,619,26.458,805,42.518]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[176,14.978,591,21.683,698,31.885,725,32.903,1060,33.269]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43",[1,13.477,95,40.56,324,22.584,460,26.979]],["name/43",[625,1.809,2104,2.732]],["text/43",[0,0.681,1,2.047,2,0.716,6,1.232,8,0.651,13,0.832,15,1.955,18,1.521,20,1.634,24,0.845,52,1.942,56,0.781,57,3.479,74,1.145,87,1.288,95,4.742,108,1.389,109,1.396,133,1.298,139,3.527,147,1.551,158,0.975,160,3.203,168,1.864,176,1.728,202,0.795,235,2.199,236,2.254,237,1.227,238,3.835,239,4.42,243,1.389,245,1.178,247,1.669,252,3.438,259,2.746,278,1.264,291,1.308,296,2.131,304,0.847,306,3.636,308,4.162,310,3.333,312,1.215,316,1.612,317,4.074,319,1.768,321,4.389,322,4.353,324,3.809,326,4.633,333,1.365,354,3.056,369,2.796,379,1.254,384,1.402,386,1.974,417,1.601,421,1.114,445,3.222,460,4.55,465,4.602,470,1.67,471,1.784,483,1.444,487,2.139,500,2.935,501,1.542,529,2.821,539,1.437,540,1.696,546,2.226,577,1.298,586,0.943,591,0.982,603,1.856,609,1.58,619,4.859,624,1.159,625,4.273,627,2.832,628,1.738,632,2.244,649,1.482,650,1.872,660,2.02,663,1.738,664,1.856,669,2.928,682,1.303,698,4.441,699,3.577,701,1.303,725,4.872,727,2.407,729,3.115,730,1.21,732,1.836,733,1.709,751,1.561,788,1.709,805,4.379,807,2.402,820,1.466,831,1.875,886,1.942,926,3.348,1060,3.275,1123,1.875,1216,1.896,1476,2.082,1484,1.738,1500,2.546,1536,3.304,1794,1.918,1862,1.551,2007,2.082,2102,2.356,2105,2.244,2106,1.818]],["component/43",[1,0.4]],["title/44-1",[0,18.366,304,22.856,586,25.44]],["name/44-1",[]],["text/44-1",[]],["component/44-1",[]],["title/44-2",[2,19.324,159,36.823,1328,41.359]],["name/44-2",[]],["text/44-2",[]],["component/44-2",[]],["title/44-3",[13,22.44,175,21.073,2107,65.457]],["name/44-3",[]],["text/44-3",[]],["component/44-3",[]],["title/44-4",[175,21.073,423,36.662,591,26.496]],["name/44-4",[]],["text/44-4",[]],["component/44-4",[]],["title/44-5",[409,24.704,593,27.303,1061,41.852,1244,40.868]],["name/44-5",[]],["text/44-5",[]],["component/44-5",[]],["title/44-6",[409,27.445,595,34.484,1244,45.403]],["name/44-6",[]],["text/44-6",[]],["component/44-6",[]],["title/44-7",[160,25.294,205,31.039,209,41.852,596,35.615]],["name/44-7",[]],["text/44-7",[]],["component/44-7",[]],["title/44",[205,38.789,209,52.301]],["name/44",[586,1.413]],["text/44",[0,0.518,1,2.131,2,0.545,3,1.384,6,0.938,8,3.002,11,2.702,13,0.633,16,4.754,18,0.689,19,2.735,20,2.344,21,2.073,22,1.847,23,6.243,24,2.411,25,3.35,26,1.633,27,2.468,28,1.073,29,1.991,30,1.911,31,1.534,32,1.673,33,1.281,35,1.497,36,1.538,38,2.566,39,2.713,40,2.616,41,1.847,42,2.816,43,5.297,47,1.083,49,1.461,54,1.961,56,0.595,57,1.726,60,1.371,64,2.935,68,1.961,71,1.794,76,1.461,77,1.349,87,1.713,89,1.236,92,2.583,93,0.894,95,1.271,99,1.398,100,2.264,101,3.261,105,2.098,108,1.058,109,1.063,110,1.058,119,2.824,134,1.398,138,0.748,139,3.912,142,1.641,146,2.098,151,1.073,154,0.718,158,0.742,159,1.815,160,1.385,166,1.336,168,1.519,170,1.7,172,2.235,173,1.219,174,1.111,175,1.658,176,1.201,192,1.835,201,1.044,202,1.057,205,2.264,209,4.566,214,2.087,219,1.088,228,2.144,229,1.371,231,2.496,237,0.934,241,1.094,243,1.058,251,1.203,252,1.281,260,1.094,265,1.706,271,3.053,278,0.962,284,2.867,288,1.058,292,1.641,294,0.888,298,1.291,303,1.831,304,1.127,306,0.9,313,1.134,314,1.271,323,2.13,324,1.237,327,1.181,334,1.517,359,1.497,369,0.836,373,1.794,380,0.886,386,0.894,393,1.346,398,1.147,401,3.939,402,1.428,403,1.478,404,3.054,408,1.84,409,2.16,413,2.115,423,1.807,442,1.95,445,0.864,460,1.478,489,1.094,494,2.015,505,1.444,510,2.98,525,2.098,530,1.478,531,1.105,542,1.478,565,0.886,566,2.115,586,0.718,591,0.748,593,0.856,595,0.973,596,1.116,643,1.461,644,1.398,655,2.205,678,1.122,701,0.992,717,2.102,724,1.585,725,3.164,748,1.073,767,1.478,780,1.181,905,1.612,1024,1.65,1026,1.538,1032,2.77,1038,1.413,1060,1.147,1061,1.312,1062,1.478,1066,1.748,1079,1.991,1132,1.444,1137,2.098,1209,2.13,1210,1.461,1223,1.585,1238,1.323,1244,2.238,1328,1.167,1348,1.497,1384,1.612,1400,0.958,1461,1.334,1482,1.748,1550,1.673,1571,1.428,1574,1.371,1609,2.256,1611,1.673,1705,1.748,1967,1.641,1994,1.497,2038,1.847,2092,1.991,2107,1.847,2108,1.991,2109,3.227,2110,1.991,2111,2.261,2112,2.098,2113,1.991,2114,1.561,2115,1.847,2116,2.261,2117,2.261,2118,1.561,2119,1.847,2120,4.445,2121,3.95,2122,1.911,2123,2.261]],["component/44",[1,0.4]],["title/45",[40,29.286,209,46.496,292,58.158]],["name/45",[1,0.511,2124,2.732]],["text/45",[1,2.341,8,2.468,11,2.275,19,1.606,20,2.685,24,1.197,25,1.967,31,1.023,37,1.958,38,2.936,39,1.809,40,1.537,63,3.289,64,1.568,72,4.809,77,1.436,87,1.823,89,2.298,93,1.663,95,2.364,99,2.6,100,2.851,119,1.883,131,2.86,134,6.26,138,2.191,140,3.554,166,2.24,171,3.177,172,1.49,175,2.156,176,1.873,178,1.429,179,2.158,192,3.245,202,1.125,209,2.44,214,1.668,218,2.481,219,2.024,229,4.972,232,1.86,245,2.629,248,3.272,252,3.649,254,3.915,264,5.178,276,2.055,278,3.489,290,2.364,298,3.783,303,1.949,306,1.674,310,1.853,314,2.364,324,2.075,326,1.838,342,1.418,345,2.587,363,1.674,369,1.554,380,2.595,381,1.949,384,1.986,387,2.21,393,2.503,398,2.133,402,5.178,430,2.364,445,1.606,460,1.573,466,2.121,483,2.044,505,2.685,523,3.877,529,1.838,542,2.749,545,2.526,565,1.647,643,2.716,655,2.778,659,1.986,662,1.958,678,4.07,701,1.845,724,2.948,730,1.714,737,2.749,780,2.196,873,1.924,1178,2.821,1235,2.86,1344,3.177,1404,3.336,1420,3.052,1432,3.159,1543,2.503,1550,3.111,1575,2.55,1615,2.574,1642,2.749,2035,3.435,2038,3.435,2119,3.435,2125,4.204,2126,4.204,2127,4.204,2128,3.902,2129,3.902,2130,4.204,2131,4.204,2132,2.784,2133,4.204,2134,4.204]],["component/45",[1,0.4]],["title/46-1",[0,20.659,362,53.192]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["title/46-2",[1,14.973,2,19.324,202,21.441]],["name/46-2",[]],["text/46-2",[]],["component/46-2",[]],["title/46-3",[13,20.198,20,23.617,119,32.303,494,27.637]],["name/46-3",[]],["text/46-3",[]],["component/46-3",[]],["title/46-4",[213,41.503,214,23.853,215,33.079,216,39.803,217,49.107,1047,28.941]],["name/46-4",[]],["text/46-4",[]],["component/46-4",[]],["title/46-5",[24,18.666,25,30.682,141,41.413,418,48.518,1050,31.885]],["name/46-5",[]],["text/46-5",[]],["component/46-5",[]],["title/46-6",[560,45.066,561,58.918,562,58.918,1052,38.384]],["name/46-6",[]],["text/46-6",[]],["component/46-6",[]],["title/46-7",[24,20.531,344,52.348,1054,42.565,2135,66.93]],["name/46-7",[]],["text/46-7",[]],["component/46-7",[]],["title/46-8",[24,20.531,494,27.637,838,41.185,1056,45.066]],["name/46-8",[]],["text/46-8",[]],["component/46-8",[]],["title/46-9",[20,26.238,494,30.705,2136,54.514]],["name/46-9",[]],["text/46-9",[]],["component/46-9",[]],["title/46",[1,14.973,209,46.496,2120,67.723]],["name/46",[1,0.511,2120,2.309]],["text/46",[0,0.555,1,2.14,2,0.584,8,2.554,11,0.831,13,0.678,16,5.359,18,1.277,19,2.524,20,3.516,21,3.461,23,1.92,24,3.056,25,2.593,32,1.791,33,3.744,38,1.785,39,1.041,40,1.532,44,3.934,47,1.159,54,2.751,55,4.493,64,1.563,71,3.325,77,1.432,84,1.214,89,2.29,91,3.561,92,1.582,95,1.361,100,1.041,104,1.314,119,3.664,122,1.177,128,1.034,134,1.497,138,1.386,141,2.647,154,0.768,158,0.794,159,1.926,160,2.869,161,4.974,166,1.874,168,1.601,178,0.823,192,1.933,200,1.72,201,1.934,202,2.944,209,1.404,213,2.893,214,1.663,215,3.636,216,2.775,217,1.977,228,4.581,231,1.988,232,2.452,237,1,247,1.083,253,1.107,258,1.893,260,1.171,269,1.468,271,1.424,278,1.03,281,1.046,303,1.943,313,2.103,314,1.361,330,1.582,335,2.775,337,1.528,339,1.454,344,3.042,345,0.945,347,1.257,362,1.428,376,1.871,387,1.272,389,1.249,408,3.81,413,0.973,418,1.791,420,1.257,426,1.725,432,2.216,456,1.117,477,2.045,488,1.249,494,3.364,509,1.332,516,1.602,520,1.454,546,1.079,559,1.871,560,4.667,561,4.528,562,4.528,566,3.734,567,1.497,568,2.393,569,1.92,571,2.131,604,1.041,627,1.062,650,0.908,654,2.246,655,2.324,659,1.143,671,1.026,682,1.062,720,1.022,748,1.148,838,1.382,873,1.107,895,0.973,931,1.512,1024,1.751,1047,1.165,1050,1.177,1052,1.288,1054,1.428,1056,1.512,1060,1.228,1216,1.545,1222,1.756,1278,2.375,1311,1.92,1328,2.163,1348,4.946,1350,1.117,1357,1.528,1393,1.154,1420,1.756,1428,1.791,1553,1.725,1612,1.332,1622,1.351,1658,5.167,1912,5.585,1913,2.131,1914,1.871,1915,2.131,1988,1.545,2087,2.045,2135,2.246,2136,1.646,2137,2.42,2138,3.889,2139,2.045,2140,2.42,2141,2.045,2142,2.045,2143,1.977,2144,1.829,2145,2.246,2146,2.42,2147,2.42,2148,5.542,2149,2.42,2150,4.19,2151,4.19,2152,4.19,2153,2.42,2154,2.246,2155,2.42,2156,2.42,2157,1.92,2158,2.045,2159,2.42]],["component/46",[1,0.4]],["title/47",[1,16.842,1154,49.597]],["name/47",[1,0.511,1154,1.503]],["text/47",[1,0.946,8,2.201,11,2.784,20,0.99,24,1.442,25,1.934,31,2.162,38,2.274,39,0.72,54,1.5,56,0.44,61,3.884,93,2.003,94,1.155,100,1.301,109,4.004,119,2.928,122,3.942,138,2.681,154,0.531,157,2.699,168,1.691,175,2.24,176,2.029,177,1.326,178,1.721,181,3.272,200,1.24,201,1.395,202,1.567,205,2.179,219,1.99,228,2.387,230,0.914,232,2.24,237,1.249,240,5.634,247,1.69,254,1.739,259,0.712,269,1.015,276,1.477,283,0.59,290,0.941,293,0.707,297,3.101,304,2.033,306,0.666,311,0.927,314,1.7,324,0.946,380,1.984,381,1.916,383,1.833,405,1.138,406,1.045,407,1.663,408,0.779,409,3.353,412,2.767,416,0.971,423,1.383,437,3.101,438,0.549,445,0.639,451,1.441,454,0.839,459,0.869,461,1.799,464,1.807,487,0.717,494,0.641,505,1.068,507,2.439,511,0.752,512,0.835,528,3.058,534,3.7,538,1.015,539,3.163,541,2.857,546,2.259,549,0.794,560,1.888,561,1.367,562,1.367,573,1.122,577,3.116,604,1.301,622,2.028,630,1.045,659,2.392,665,0.979,687,2.898,698,0.813,701,1.326,703,1.359,738,0.839,741,1.138,754,0.728,773,5.779,789,1.193,811,2.446,819,1.155,820,2.501,848,0.996,861,1.74,866,2.001,889,1.598,895,0.673,934,1.057,1021,1.327,1060,0.849,1134,2.947,1151,2.087,1154,6.675,1304,3.367,1305,2.001,1317,8.615,1366,1.619,1368,2.284,1400,1.752,1423,1.367,1433,2.805,1528,3.04,1563,1.327,1565,0.948,1571,1.909,1966,2.087,2002,2.337,2046,2.805,2160,1.214,2161,7.029,2162,10.508,2163,1.553,2164,9.515,2165,1.673,2166,5.512,2167,1.473,2168,1.673,2169,1.673,2170,1.024,2171,1.214,2172,1.024,2173,1.673,2174,3.022,2175,1.414,2176,1.138,2177,1.673,2178,1.155,2179,1.673,2180,1.888,2181,0.934,2182,2.737,2183,1.673,2184,1.327,2185,2.554,2186,2.337,2187,1.673,2188,3.836,2189,1.553,2190,1.673,2191,1.367,2192,1.673,2193,1.673,2194,1.673,2195,1.553,2196,1.673,2197,2.661,2198,1.238,2199,1.673,2200,1.673,2201,1.238,2202,1.673,2203,2.194,2204,1.005]],["component/47",[1,0.4]],["title/48-1",[586,32.698]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48-2",[63,44.742,209,52.301]],["name/48-2",[]],["text/48-2",[]],["component/48-2",[]],["title/48-3",[170,34.484,401,44.093,413,32.219]],["name/48-3",[]],["text/48-3",[]],["component/48-3",[]],["title/48-4",[95,57.917]],["name/48-4",[]],["text/48-4",[]],["component/48-4",[]],["title/48-5",[1,14.973,157,30.333,519,58.158]],["name/48-5",[]],["text/48-5",[]],["component/48-5",[]],["title/48-6",[1,14.973,323,43.201,324,25.09]],["name/48-6",[]],["text/48-6",[]],["component/48-6",[]],["title/48-7",[8,22.584]],["name/48-7",[]],["text/48-7",[]],["component/48-7",[]],["title/48-8",[1,12.253,16,30.682,57,21.524,128,28.007,324,20.533]],["name/48-8",[]],["text/48-8",[]],["component/48-8",[]],["title/48-9",[39,31.039,44,42.941,496,38.632,560,45.066]],["name/48-9",[]],["text/48-9",[]],["component/48-9",[]],["title/48-10",[98,54.495,126,43.739,2205,63.511,2206,63.511]],["name/48-10",[]],["text/48-10",[]],["component/48-10",[]],["title/48",[1,14.973,209,46.496,260,38.768]],["name/48",[1,0.511,260,1.322]],["text/48",[1,2.439,8,2.882,11,3.259,16,2.916,20,3.108,21,1.116,24,2.536,25,2.242,38,2.129,39,3.156,40,1.751,44,2.853,47,1.356,54,1.405,57,1.573,63,1.405,64,1.787,68,1.405,77,2.129,87,2.702,91,1.349,93,1.119,95,3.504,98,2.138,99,1.75,100,3.53,108,2.242,114,2.601,119,2.791,126,1.716,128,2.046,133,1.237,134,1.75,138,1.584,139,2.618,157,2.359,158,0.929,161,4.155,164,1.142,166,0.957,168,2.118,170,1.218,175,1.26,192,2.862,202,1.282,209,2.78,228,1.153,229,1.716,231,2.274,232,2.12,247,0.732,260,1.369,264,1.787,265,1.223,269,1.716,276,2.342,288,2.916,291,2.111,294,1.883,298,2.736,303,3.4,304,1.367,323,2.583,324,3.255,360,1.397,380,1.108,384,1.336,393,2.853,402,1.787,403,1.85,408,4.42,409,3.418,413,2.949,442,1.397,456,2.876,460,1.059,463,1.67,465,2.018,469,2.245,472,1.506,489,1.369,494,1.084,495,2.934,496,2.566,500,1.859,501,1.469,502,1.716,516,3.173,519,3.478,546,1.262,560,1.768,565,1.108,566,2.949,655,1.186,678,1.405,701,2.103,741,1.925,751,3.854,792,2.312,873,1.295,882,1.984,981,1.428,1032,3.36,1060,1.436,1061,1.642,1062,1.85,1066,2.188,1161,2.188,1185,2.018,1250,1.75,1256,2.094,1392,1.787,1393,1.349,1461,2.828,1503,2.312,1506,2.018,1541,1.954,1571,1.787,1579,2.392,1609,4.684,1615,4.49,1738,2.188,1856,4.446,1972,2.392,1988,1.807,2035,3.914,2038,2.312,2053,2.188,2118,3.308,2119,2.312,2141,2.392,2154,2.626,2205,2.492,2206,2.492,2207,2.626,2208,4.791,2209,4.791,2210,2.83,2211,2.312,2212,2.83,2213,2.392,2214,2.392,2215,2.392,2216,2.312,2217,2.83,2218,2.83,2219,2.83,2220,2.83,2221,2.83,2222,2.83]],["component/48",[1,0.4]],["title/49-1",[0,18.366,250,55.321,2160,58.158]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49-2",[2,17.393,61,34.554,240,41.513,1235,49.068]],["name/49-2",[]],["text/49-2",[]],["component/49-2",[]],["title/49-3",[13,20.198,61,34.554,395,36.389,1235,49.068]],["name/49-3",[]],["text/49-3",[]],["component/49-3",[]],["title/49-4",[150,40.207,182,37.492,591,26.496]],["name/49-4",[]],["text/49-4",[]],["component/49-4",[]],["title/49-5",[38,19.153,291,35.305,593,30.333]],["name/49-5",[]],["text/49-5",[]],["component/49-5",[]],["title/49-6",[68,44.742,2223,51.878]],["name/49-6",[]],["text/49-6",[]],["component/49-6",[]],["title/49-7",[1304,42.566,2224,56.923]],["name/49-7",[]],["text/49-7",[]],["component/49-7",[]],["title/49-8",[93,35.647,2225,68.101]],["name/49-8",[]],["text/49-8",[]],["component/49-8",[]],["title/49-9",[93,35.647,2226,71.508]],["name/49-9",[]],["text/49-9",[]],["component/49-9",[]],["title/49-10",[57,26.302,95,45.061,595,34.484]],["name/49-10",[]],["text/49-10",[]],["component/49-10",[]],["title/49-11",[68,44.742,2227,49.95]],["name/49-11",[]],["text/49-11",[]],["component/49-11",[]],["title/49-12",[57,26.302,157,30.333,596,39.567]],["name/49-12",[]],["text/49-12",[]],["component/49-12",[]],["title/49-13",[68,44.742,2228,58.932]],["name/49-13",[]],["text/49-13",[]],["component/49-13",[]],["title/49-14",[1,11.233,8,13.182,11,20.643,138,19.877,502,36.455,597,32.199]],["name/49-14",[]],["text/49-14",[]],["component/49-14",[]],["title/49-15",[68,44.742,2229,57.558]],["name/49-15",[]],["text/49-15",[]],["component/49-15",[]],["title/49-16",[93,35.647,2230,57.558]],["name/49-16",[]],["text/49-16",[]],["component/49-16",[]],["title/49-17",[57,23.675,166,24.39,202,19.299,1919,42.202]],["name/49-17",[]],["text/49-17",[]],["component/49-17",[]],["title/49-18",[68,44.742,2231,71.508]],["name/49-18",[]],["text/49-18",[]],["component/49-18",[]],["title/49-19",[93,35.647,2232,71.508]],["name/49-19",[]],["text/49-19",[]],["component/49-19",[]],["title/49-20",[57,23.675,494,27.637,495,44.162,553,40.868]],["name/49-20",[]],["text/49-20",[]],["component/49-20",[]],["title/49-21",[68,44.742,2233,68.101]],["name/49-21",[]],["text/49-21",[]],["component/49-21",[]],["title/49-22",[93,35.647,2234,71.508]],["name/49-22",[]],["text/49-22",[]],["component/49-22",[]],["title/49-23",[241,38.768,395,40.428,1588,50.605]],["name/49-23",[]],["text/49-23",[]],["component/49-23",[]],["title/49-24",[68,44.742,2235,76.177]],["name/49-24",[]],["text/49-24",[]],["component/49-24",[]],["title/49-25",[24,20.531,57,23.675,1676,47.158,2007,50.576]],["name/49-25",[]],["text/49-25",[]],["component/49-25",[]],["title/49-26",[68,44.742,2236,83.64]],["name/49-26",[]],["text/49-26",[]],["component/49-26",[]],["title/49-27",[93,35.647,2237,83.64]],["name/49-27",[]],["text/49-27",[]],["component/49-27",[]],["title/49-28",[703,36.039,1563,63.571,2238,61.956]],["name/49-28",[]],["text/49-28",[]],["component/49-28",[]],["title/49-29",[68,44.742,2239,83.64]],["name/49-29",[]],["text/49-29",[]],["component/49-29",[]],["title/49-30",[93,35.647,2240,83.64]],["name/49-30",[]],["text/49-30",[]],["component/49-30",[]],["title/49-31",[109,37.666,684,42.644,714,58.158]],["name/49-31",[]],["text/49-31",[]],["component/49-31",[]],["title/49-32",[68,44.742,2241,83.64]],["name/49-32",[]],["text/49-32",[]],["component/49-32",[]],["title/49-33",[93,35.647,2242,79.368]],["name/49-33",[]],["text/49-33",[]],["component/49-33",[]],["title/49-34",[57,23.675,175,18.967,176,16.474,1719,49.794]],["name/49-34",[]],["text/49-34",[]],["component/49-34",[]],["title/49-35",[68,44.742,2243,83.64]],["name/49-35",[]],["text/49-35",[]],["component/49-35",[]],["title/49-36",[1154,49.597,2244,83.64]],["name/49-36",[]],["text/49-36",[]],["component/49-36",[]],["title/49-37",[57,23.675,177,31.652,178,24.514,2245,60.957]],["name/49-37",[]],["text/49-37",[]],["component/49-37",[]],["title/49-38",[1154,49.597,2246,83.64]],["name/49-38",[]],["text/49-38",[]],["component/49-38",[]],["title/49-39",[38,17.239,57,23.675,1624,55.767,2157,57.221]],["name/49-39",[]],["text/49-39",[]],["component/49-39",[]],["title/49-40",[68,44.742,2247,83.64]],["name/49-40",[]],["text/49-40",[]],["component/49-40",[]],["title/49-41",[1304,42.566,2248,83.64]],["name/49-41",[]],["text/49-41",[]],["component/49-41",[]],["title/49-42",[1154,49.597,2249,83.64]],["name/49-42",[]],["text/49-42",[]],["component/49-42",[]],["title/49-43",[38,17.239,174,35.43,268,43.332,711,60.957]],["name/49-43",[]],["text/49-43",[]],["component/49-43",[]],["title/49-44",[68,44.742,2250,83.64]],["name/49-44",[]],["text/49-44",[]],["component/49-44",[]],["title/49-45",[33,37.156,219,31.569,228,26.727,712,53.567,1368,49.546]],["name/49-45",[]],["text/49-45",[]],["component/49-45",[]],["title/49-46",[1154,49.597,2251,83.64]],["name/49-46",[]],["text/49-46",[]],["component/49-46",[]],["title/49-47",[2252,76.177,2253,83.64]],["name/49-47",[]],["text/49-47",[]],["component/49-47",[]],["title/49-48",[1154,49.597,2254,83.64]],["name/49-48",[]],["text/49-48",[]],["component/49-48",[]],["title/49-49",[57,23.675,254,30.35,2113,63.511,2255,63.511]],["name/49-49",[]],["text/49-49",[]],["component/49-49",[]],["title/49-50",[68,44.742,2256,83.64]],["name/49-50",[]],["text/49-50",[]],["component/49-50",[]],["title/49-51",[44,47.707,896,42.112,2257,67.723]],["name/49-51",[]],["text/49-51",[]],["component/49-51",[]],["title/49-52",[68,44.742,2258,83.64]],["name/49-52",[]],["text/49-52",[]],["component/49-52",[]],["title/49-53",[138,23.849,238,27.14,510,40.868,2259,60.957]],["name/49-53",[]],["text/49-53",[]],["component/49-53",[]],["title/49-54",[68,44.742,2260,83.64]],["name/49-54",[]],["text/49-54",[]],["component/49-54",[]],["title/49-55",[1154,49.597,2261,83.64]],["name/49-55",[]],["text/49-55",[]],["component/49-55",[]],["title/49-56",[294,31.487,1060,40.654,1669,65.457]],["name/49-56",[]],["text/49-56",[]],["component/49-56",[]],["title/49-57",[68,44.742,2262,83.64]],["name/49-57",[]],["text/49-57",[]],["component/49-57",[]],["title/49-58",[1304,42.566,2263,83.64]],["name/49-58",[]],["text/49-58",[]],["component/49-58",[]],["title/49-59",[93,35.647,2264,83.64]],["name/49-59",[]],["text/49-59",[]],["component/49-59",[]],["title/49-60",[294,31.487,701,35.164,1641,61.956]],["name/49-60",[]],["text/49-60",[]],["component/49-60",[]],["title/49-61",[68,44.742,2265,83.64]],["name/49-61",[]],["text/49-61",[]],["component/49-61",[]],["title/49-62",[93,35.647,2266,83.64]],["name/49-62",[]],["text/49-62",[]],["component/49-62",[]],["title/49-63",[594,41.852,719,42.565,720,30.462,2267,57.221]],["name/49-63",[]],["text/49-63",[]],["component/49-63",[]],["title/49-64",[68,44.742,2268,83.64]],["name/49-64",[]],["text/49-64",[]],["component/49-64",[]],["title/49-65",[205,38.789,2269,79.368]],["name/49-65",[]],["text/49-65",[]],["component/49-65",[]],["title/49-66",[68,44.742,2270,83.64]],["name/49-66",[]],["text/49-66",[]],["component/49-66",[]],["title/49",[1,14.973,68,39.777,1574,48.593]],["name/49",[1,0.511,68,1.356]],["text/49",[0,0.169,1,0.967,2,0.863,5,0.319,8,0.567,11,1.523,12,0.546,13,1.003,16,0.345,18,0.788,20,1.578,21,0.555,24,1.371,31,0.492,33,0.418,36,0.958,37,0.656,38,1.463,44,0.439,54,2.201,56,0.68,57,2.731,61,2.932,64,1.797,68,5.196,78,0.526,85,0.488,91,1.479,93,4.45,95,0.792,99,0.456,100,2.073,101,2.02,109,1.683,113,0.466,119,0.631,122,0.359,126,1.881,128,0.602,133,0.322,138,0.466,139,0.403,149,0.517,150,2.597,151,0.959,153,0.495,154,0.234,157,1.174,158,0.242,159,0.339,166,0.684,168,1.162,169,0.301,170,0.606,172,3.768,174,0.692,175,0.68,176,0.59,177,1.946,178,0.479,179,0.723,180,0.603,181,0.477,182,0.345,183,0.765,192,1.403,193,0.339,202,1.076,205,0.87,214,0.293,218,0.831,219,1.244,228,1.459,230,0.403,231,0.35,232,0.623,237,0.836,238,0.53,240,1.164,241,2.146,245,0.559,247,1.786,250,2.778,252,0.239,254,1.693,257,0.452,258,0.333,259,0.314,261,0.546,268,1.553,269,1.567,271,2.427,276,0.36,278,0.314,283,0.497,284,0.535,287,1.118,291,1.954,293,0.595,294,0.554,298,2.297,299,0.299,302,0.988,303,0.342,304,0.885,306,4.479,317,0.628,321,0.428,324,0.809,326,1.356,327,0.736,333,0.339,345,1.009,363,0.294,369,0.273,374,0.973,377,1.173,380,0.552,381,0.937,383,0.447,386,1.022,395,2.611,396,0.406,398,0.374,401,1.97,402,0.89,406,0.461,408,0.942,409,0.253,410,0.786,412,0.403,413,0.297,415,0.395,421,0.277,423,1.182,428,0.336,441,0.477,442,0.364,445,0.282,457,0.488,459,0.383,460,0.527,463,0.435,467,0.792,472,0.75,481,0.324,487,0.316,489,0.682,493,1.322,494,0.775,495,0.452,497,2.081,500,0.286,501,0.383,502,2.44,510,0.418,511,1.162,518,0.65,519,1.022,528,0.546,530,0.482,531,0.688,534,1.25,538,0.447,553,0.418,577,0.322,585,0.517,591,0.466,593,0.279,594,0.817,595,0.317,596,0.364,597,0.395,607,0.546,619,0.964,622,0.495,630,0.461,631,0.526,632,0.557,634,0.817,645,0.482,655,0.309,659,0.665,669,1.172,671,1.096,676,0.435,684,1.651,687,0.517,698,0.983,701,1.571,703,0.909,710,0.65,711,0.623,712,0.603,714,0.535,717,0.75,719,0.435,720,0.312,725,2.019,739,0.383,754,0.321,758,0.546,759,0.91,786,0.603,805,0.383,822,0.488,823,0.471,825,0.57,831,1.277,838,0.421,848,0.439,861,0.811,866,1.711,873,0.337,896,1.063,905,1.004,907,0.684,913,0.57,929,0.871,1036,0.488,1048,0.546,1053,0.482,1060,1.026,1061,0.428,1063,1.24,1068,0.535,1071,0.684,1119,0.393,1133,0.684,1153,0.526,1154,4.669,1163,0.684,1177,0.517,1198,0.509,1203,0.839,1208,0.57,1209,0.398,1235,3.017,1244,0.798,1256,0.546,1281,0.439,1282,0.432,1291,0.546,1295,1.004,1304,2.444,1305,2.054,1308,0.509,1317,2.028,1340,0.65,1342,3.026,1343,1.151,1360,0.684,1362,0.684,1366,0.755,1368,0.557,1369,0.703,1377,2.295,1378,0.526,1396,0.406,1422,0.432,1426,0.37,1437,0.403,1457,0.477,1498,0.526,1506,0.526,1528,0.383,1543,1.847,1544,0.557,1545,0.684,1548,0.526,1552,0.623,1555,1.709,1556,0.684,1557,0.488,1558,1.496,1559,1.563,1560,2.778,1561,0.684,1562,0.65,1563,0.585,1564,0.585,1565,1.758,1566,0.684,1573,1.711,1588,0.89,1624,0.57,1641,0.57,1644,0.425,1649,0.603,1653,0.546,1669,0.603,1676,0.482,1687,0.488,1693,0.585,1697,0.439,1706,0.585,1719,0.973,1821,0.482,1822,0.988,1827,0.435,1861,0.684,1907,1.24,1919,0.432,1933,0.495,1958,0.557,1966,0.509,2003,0.557,2007,0.988,2053,0.57,2063,0.546,2089,0.57,2107,0.603,2113,0.65,2115,0.603,2141,0.623,2157,1.118,2160,3.497,2162,0.65,2186,1.563,2223,0.425,2224,0.466,2225,0.557,2226,0.585,2227,0.409,2228,0.482,2229,0.471,2230,0.471,2231,0.585,2232,0.585,2233,0.557,2234,0.585,2235,0.623,2236,0.684,2237,0.684,2238,0.57,2239,0.684,2240,0.684,2241,0.684,2242,0.65,2243,0.684,2244,0.684,2245,0.623,2246,0.684,2247,0.684,2248,0.684,2249,0.684,2250,0.684,2251,0.684,2252,1.191,2253,1.307,2254,0.684,2255,0.65,2256,0.684,2257,0.623,2258,0.684,2259,0.623,2260,0.684,2261,0.684,2262,0.684,2263,0.684,2264,0.684,2265,0.684,2266,0.684,2267,0.585,2268,0.684,2269,0.65,2270,0.684,2271,10.203,2272,0.738,2273,1.409,2274,2.184,2275,0.738,2276,9.293,2277,10.855,2278,0.738,2279,0.738,2280,1.409,2281,1.24,2282,0.738,2283,0.738,2284,0.738,2285,4.621,2286,0.738,2287,0.738,2288,0.65,2289,0.738,2290,0.603,2291,0.738,2292,0.684,2293,0.65,2294,0.684,2295,0.738,2296,6.12,2297,0.684,2298,0.738,2299,0.535,2300,0.65,2301,0.585,2302,0.684,2303,0.738,2304,1.064,2305,0.738,2306,0.738,2307,0.65,2308,0.738,2309,0.738,2310,0.684,2311,0.738,2312,0.738,2313,0.738,2314,3.102,2315,0.623,2316,0.738,2317,0.738,2318,0.738,2319,1.409,2320,2.649,2321,0.738,2322,3.58,2323,3.58,2324,0.738,2325,0.738,2326,1.409,2327,2.184,2328,1.409,2329,2.584,2330,0.738,2331,0.738,2332,1.307,2333,0.738,2334,0.738,2335,0.623,2336,0.738,2337,0.738,2338,1.24,2339,0.738,2340,0.738,2341,0.738,2342,0.738,2343,0.738,2344,0.738,2345,1.409,2346,0.738,2347,0.738,2348,0.738,2349,1.409,2350,0.738,2351,0.557,2352,2.534,2353,0.738,2354,0.623,2355,0.738,2356,0.738,2357,0.738,2358,0.91,2359,0.738,2360,0.738,2361,0.684,2362,0.738,2363,0.738,2364,0.738,2365,1.409,2366,0.738,2367,0.65,2368,0.738,2369,0.738,2370,0.738,2371,0.738,2372,0.738,2373,0.738,2374,1.409,2375,0.738,2376,0.684,2377,0.738,2378,0.509,2379,0.738,2380,0.738,2381,1.307,2382,0.738,2383,0.738,2384,0.738,2385,0.623,2386,0.738,2387,0.738,2388,0.738,2389,0.482,2390,0.65,2391,0.684,2392,0.738,2393,0.738,2394,0.65,2395,0.738,2396,0.738,2397,0.738,2398,1.409,2399,1.409,2400,0.738,2401,0.738,2402,0.684,2403,0.738,2404,0.738,2405,0.477,2406,0.738,2407,0.684,2408,0.738,2409,0.65,2410,0.738,2411,1.409,2412,0.738,2413,0.738,2414,0.738,2415,0.738,2416,0.738,2417,0.738,2418,0.738,2419,0.65,2420,0.738,2421,0.738,2422,0.738,2423,0.738,2424,0.738,2425,0.684,2426,0.684,2427,0.738,2428,0.738,2429,0.738,2430,0.65,2431,0.738,2432,1.409,2433,0.738,2434,0.738,2435,0.738,2436,0.65,2437,0.65,2438,0.738,2439,1.307,2440,0.738,2441,2.022,2442,0.738,2443,0.738,2444,0.738,2445,0.738,2446,0.738,2447,0.738,2448,0.684,2449,0.738,2450,0.738,2451,0.738,2452,0.738,2453,0.546,2454,0.738,2455,0.738,2456,0.738]],["component/49",[1,0.4]],["title/50-1",[0,18.366,247,20.716,288,37.492]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[2,19.324,43,59.288,1967,58.158]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[5,38.938,74,34.752]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50-4",[9,35.888,744,32.111,1119,42.644]],["name/50-4",[]],["text/50-4",[]],["component/50-4",[]],["title/50-5",[744,32.111,1549,53.761,2457,60.543]],["name/50-5",[]],["text/50-5",[]],["component/50-5",[]],["title/50-6",[8,17.571,869,50.605,2458,60.543]],["name/50-6",[]],["text/50-6",[]],["component/50-6",[]],["title/50-7",[8,17.571,744,32.111,2459,63.571]],["name/50-7",[]],["text/50-7",[]],["component/50-7",[]],["title/50",[8,17.571,43,59.288,1967,58.158]],["name/50",[8,0.599,43,2.021]],["text/50",[0,0.598,1,1.096,2,1.078,5,1.127,8,2.792,9,1.169,11,1.535,18,0.795,20,1.464,24,3.213,31,1.428,38,1.402,39,1.123,40,2.858,43,9.153,44,1.553,55,1.262,57,1.468,61,1.25,74,1.724,93,3.373,99,2.765,100,1.924,107,1.106,108,1.221,109,2.758,128,1.91,130,1.894,154,1.42,157,1.693,158,2.282,164,1.053,168,2.008,169,1.822,174,2.196,175,1.543,176,0.596,192,2.047,193,5.799,195,2.345,200,1.835,201,1.204,202,2.44,241,2.163,246,1.238,247,1.156,265,2.534,267,2.343,281,1.127,283,0.92,288,2.092,294,1.025,295,1.136,298,3.35,303,2.073,310,1.15,313,2.243,323,1.407,324,0.817,325,6.204,328,1.388,333,1.199,346,1.514,384,1.232,386,1.032,398,1.324,401,1.436,408,2.732,420,1.355,457,1.727,461,2.662,464,1.954,481,1.145,487,1.917,495,1.597,496,1.397,502,1.582,503,2.738,506,1.706,512,1.302,530,1.706,541,1.954,553,1.478,565,1.022,566,1.049,593,0.988,618,1.042,634,1.514,644,2.765,645,1.706,684,1.388,701,1.145,744,3.418,748,1.238,754,1.136,763,1.706,821,1.75,861,1.502,867,2.07,869,2.824,876,1.971,911,1.648,1011,1.446,1064,2.888,1114,1.75,1119,3.122,1178,3,1198,3.087,1200,1.971,1203,1.553,1210,1.685,1211,2.131,1214,6.451,1266,1.706,1348,1.727,1369,2.231,1397,5.046,1549,1.75,1649,2.131,1676,1.706,1704,2.421,1747,2.017,1811,2.824,1815,1.706,1820,1.894,1827,1.54,1833,5.675,1834,3.308,1901,3.652,1967,6.19,1968,2.07,1998,1.83,2043,3.592,2178,1.801,2457,1.971,2458,1.971,2459,2.07,2460,2.609,2461,2.131,2462,6.951,2463,9.12,2464,2.609,2465,2.609,2466,5.866,2467,5.866,2468,2.609,2469,2.609,2470,2.609,2471,2.609,2472,2.609,2473,2.609,2474,2.609,2475,2.609,2476,2.609,2477,2.609,2478,4.471,2479,2.421,2480,4.471,2481,4.149,2482,2.609,2483,1.93,2484,1.582,2485,2.421,2486,5.875,2487,3.779]],["component/50",[1,0.4]],["title/51-1",[0,18.366,304,22.856,586,25.44]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["title/51-2",[2,19.324,107,33.968,342,27.028]],["name/51-2",[]],["text/51-2",[]],["component/51-2",[]],["title/51-3",[5,25.97,176,13.731,324,18.823,586,19.086,1328,31.029,1995,49.107]],["name/51-3",[]],["text/51-3",[]],["component/51-3",[]],["title/51-4",[9,40.368,31,21.931]],["name/51-4",[]],["text/51-4",[]],["component/51-4",[]],["title/51-5",[13,18.364,168,18.939,202,17.546,203,22.577,363,26.105]],["name/51-5",[]],["text/51-5",[]],["component/51-5",[]],["title/51",[175,18.967,176,16.474,938,43.739,1627,48.391]],["name/51",[1627,1.322,2488,0.944,2489,1.405]],["text/51",[0,0.459,2,0.483,5,0.865,8,0.439,9,0.896,13,0.56,15,3.306,18,1.081,19,0.765,20,2.764,24,0.57,26,2.39,30,0.968,31,1.61,38,2.126,46,1.161,56,1.521,64,0.746,77,0.684,82,0.908,91,0.954,100,0.861,107,2.804,109,0.941,128,0.855,132,1.343,133,0.875,138,1.173,142,1.453,147,1.045,150,1.004,151,0.95,154,2.324,158,1.165,160,1.676,162,0.794,166,0.677,168,2.114,175,2.621,176,2.87,179,1.027,182,3.095,195,1.95,197,1.214,202,0.949,203,1.222,214,0.794,231,0.95,232,0.885,233,1.427,238,0.753,245,1.896,247,0.917,253,0.916,254,1.493,258,1.603,268,2.132,270,1.981,271,4.377,275,1.039,280,1.9,281,2.858,288,0.936,291,0.882,293,2.018,294,3.495,295,4.856,296,0.855,297,1.225,299,2.341,304,0.571,312,0.819,313,1.004,324,0.627,333,1.63,342,2.847,345,0.781,363,0.797,379,0.845,386,0.792,413,0.805,417,1.913,423,0.916,438,1.165,445,1.826,481,2.538,487,2.049,494,1.831,500,1.377,520,2.871,529,0.875,553,1.134,566,1.427,576,1.461,582,1.278,586,1.126,593,0.758,597,2.56,599,0.968,609,1.065,618,0.799,627,0.878,678,0.994,682,0.878,688,1.143,701,0.878,720,0.845,726,2.986,740,2.956,748,1.684,757,1.309,781,0.999,820,0.988,821,2.381,823,2.266,873,2.187,875,4.397,895,0.805,911,2.132,938,4.012,1038,1.251,1074,1.547,1180,3.052,1185,1.427,1211,1.635,1231,1.045,1247,1.278,1266,3.781,1278,1.134,1292,1.512,1327,1.325,1328,1.033,1363,1.857,1366,1.9,1389,1.382,1392,1.264,1398,1.181,1445,2.026,1479,1.343,1530,1.343,1577,4.471,1581,1.692,1589,4.887,1590,5.092,1591,4.887,1592,5.092,1604,2.266,1607,3.88,1624,2.743,1627,2.381,1674,1.453,1713,2.815,1721,3.124,1827,1.181,1919,2.076,1995,1.635,2010,1.427,2011,1.325,2050,1.512,2080,1.588,2176,1.362,2487,4.887,2489,6.017,2490,1.857,2491,2.575,2492,1.692,2493,4.779,2494,2.001,2495,2.001,2496,1.762,2497,3.904,2498,1.857,2499,2.815,2500,1.857,2501,1.762,2502,2.001,2503,1.857,2504,2.001,2505,2.999,2506,2.001,2507,3.293,2508,1.362,2509,3.293,2510,3.293,2511,1.857,2512,2.001,2513,2.001,2514,3.548,2515,2.001,2516,1.481,2517,2.001,2518,1.857,2519,1.857,2520,2.001,2521,2.001,2522,2.001,2523,2.001,2524,2.001,2525,1.857,2526,1.762,2527,2.001,2528,2.001,2529,2.001,2530,2.001,2531,2.001,2532,2.001,2533,2.001,2534,2.001,2535,2.001,2536,2.001,2537,2.001,2538,3.904,2539,2.001,2540,2.001,2541,4.123,2542,1.857,2543,2.001,2544,3.548,2545,2.001,2546,2.001,2547,2.001,2548,2.001,2549,2.001,2550,2.001,2551,2.001]],["component/51",[1,0.4]],["title/52-1",[0,16.531,31,17.55,38,17.239,170,31.039]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["title/52-2",[2,17.393,107,30.575,175,18.967,176,16.474]],["name/52-2",[]],["text/52-2",[]],["component/52-2",[]],["title/52-3",[5,31.159,56,18.967,176,16.474,1827,42.565]],["name/52-3",[]],["text/52-3",[]],["component/52-3",[]],["title/52-4",[7,25.315,9,23.08,168,14.884,254,21.685,276,25.185,671,21.846,727,19.22,2271,39.845]],["name/52-4",[]],["text/52-4",[]],["component/52-4",[]],["title/52-5",[38,13.264,178,18.862,182,25.965,590,30.12,1350,25.615,1686,29.919,2552,51.497]],["name/52-5",[]],["text/52-5",[]],["component/52-5",[]],["title/52-6",[38,13.264,245,22.02,267,22.165,327,28.987,678,27.547,2005,34.319,2043,33.979]],["name/52-6",[]],["text/52-6",[]],["component/52-6",[]],["title/52-7",[7,23.628,31,11.704,259,20.466,260,23.272,428,21.912,496,25.763,1180,30.716,2553,33.729,2554,37.191]],["name/52-7",[]],["text/52-7",[]],["component/52-7",[]],["title/52-8",[1231,31.401,1409,35.477,1426,30.164,2271,46.48,2555,43.631,2556,34.062]],["name/52-8",[]],["text/52-8",[]],["component/52-8",[]],["title/52-9",[195,22.119,202,17.546,1409,38.699,2271,50.702,2557,55.421]],["name/52-9",[]],["text/52-9",[]],["component/52-9",[]],["title/52-10",[38,14.369,360,29.684,590,32.627,2558,50.807,2559,42.154,2560,39.803]],["name/52-10",[]],["text/52-10",[]],["component/52-10",[]],["title/52-11",[20,16.874,25,24.112,38,12.318,219,37.308,527,32.545,529,22.525,2561,43.554]],["name/52-11",[]],["text/52-11",[]],["component/52-11",[]],["title/52-12",[38,11.497,178,16.349,254,20.24,267,19.212,460,17.992,727,17.939,730,19.605,2043,29.452,2352,39.293]],["name/52-12",[]],["text/52-12",[]],["component/52-12",[]],["title/52-13",[176,12.676,178,18.862,202,14.849,295,24.161,296,23.701,812,28.314,2562,46.902]],["name/52-13",[]],["text/52-13",[]],["component/52-13",[]],["title/52-14",[13,16.835,31,14.627,175,15.809,176,13.731,177,26.381,178,20.432]],["name/52-14",[]],["text/52-14",[]],["component/52-14",[]],["title/52-15",[114,39.146,202,19.299,203,24.832,591,23.849]],["name/52-15",[]],["text/52-15",[]],["component/52-15",[]],["title/52",[38,11.497,245,19.086,267,19.212,360,23.751,565,18.84,678,23.877,727,17.939,1209,25.933,2043,29.452]],["name/52",[312,0.63,678,0.765,2043,0.944,2563,1.034]],["text/52",[0,0.346,2,0.251,5,0.232,6,0.626,7,2.298,8,0.603,9,0.241,13,0.291,15,0.407,18,0.164,19,0.576,20,1.134,24,0.986,25,1.105,26,0.805,27,0.336,28,0.255,31,2.233,38,2.595,45,0.808,46,2.869,47,0.257,52,0.758,55,0.26,56,1.709,57,0.341,61,0.257,64,0.2,66,0.838,74,1.061,76,0.347,77,0.184,82,2.122,84,0.27,87,1.502,89,0.568,91,0.929,93,0.596,97,0.323,100,1.766,107,1.608,108,0.912,110,0.486,111,0.688,113,1.23,114,0.292,122,0.505,128,1.48,132,0.697,133,1.658,138,0.644,144,0.741,147,0.543,150,0.521,154,0.99,157,1.041,158,1.934,159,2.272,160,0.965,162,0.937,163,1.328,164,0.786,166,0.799,168,2.678,170,0.447,175,1.23,176,2.138,177,1.664,178,3.269,179,0.533,181,0.671,182,1.621,183,1.057,187,0.503,192,0.526,193,1.264,195,2.533,200,0.426,202,2.049,203,0.671,214,1.745,218,0.317,219,1.826,227,0.452,231,0.255,233,0.383,238,0.391,245,2.421,246,0.255,247,0.711,248,0.745,252,0.766,253,1.735,254,2.386,255,0.749,258,0.469,259,1.005,260,1.676,264,0.339,265,0.449,267,3.547,270,0.58,271,2.332,275,1.226,276,1.154,280,1.67,281,0.232,282,2.133,283,1.743,291,1.374,293,2.297,294,0.593,295,1.357,296,1.175,298,0.307,299,1.78,300,0.366,302,0.508,303,1.758,304,0.296,305,0.298,308,0.296,309,0.426,310,0.237,311,0.298,312,2.658,313,0.978,316,0.292,324,1.776,327,1.234,333,1.592,335,0.356,342,1.835,345,1.353,347,1.012,360,2.686,369,0.384,379,0.997,380,0.407,381,0.482,386,1.233,389,0.536,407,1.072,409,1.299,410,0.3,412,0.294,417,2.212,421,0.566,423,1.081,428,0.245,430,0.302,432,0.284,438,2.309,445,1.567,446,0.56,450,0.549,451,0.929,454,0.521,455,0.292,456,1.27,460,1.535,462,0.265,464,0.852,466,0.271,467,2.307,471,0.906,474,0.484,481,2.488,487,0.23,488,0.536,494,0.206,496,0.556,501,1.226,509,2.087,512,1.179,514,0.963,515,1.099,520,0.624,524,0.593,527,0.656,529,0.852,537,0.317,540,0.307,541,0.659,543,0.312,546,0.24,549,1.799,552,0.63,563,0.915,565,1.221,566,1.65,572,0.351,576,2.426,577,0.235,590,1.282,591,0.178,593,0.203,601,0.255,602,0.383,606,0.539,618,0.415,624,1.353,627,0.855,629,1.058,639,0.326,649,1.373,650,0.731,660,0.421,664,0.336,669,0.471,671,2.982,676,0.317,678,3.94,679,0.3,682,0.236,685,0.572,689,0.82,700,0.855,702,0.317,704,0.356,706,0.624,717,0.553,719,0.317,726,0.942,727,2.623,730,0.794,734,2.212,736,0.503,738,1.185,739,1.428,744,1.102,745,0.329,751,0.282,753,0.366,754,0.452,757,0.986,764,3.371,767,0.351,779,0.276,781,2.334,799,0.663,805,0.279,807,2.502,812,0.994,823,0.963,838,0.593,839,0.636,873,0.246,882,0.377,895,1.254,896,0.282,911,1.398,917,0.398,931,0.336,950,0.309,951,0.314,1015,0.454,1108,0.39,1113,0.339,1114,0.361,1117,0.439,1119,1.257,1121,0.371,1128,0.314,1134,0.383,1135,0.642,1143,0.39,1150,0.343,1160,0.636,1180,1.244,1190,0.347,1200,0.406,1203,2.258,1209,2.371,1231,4.584,1238,0.882,1241,0.356,1244,0.304,1250,0.642,1265,0.415,1275,1.23,1278,1.559,1292,0.406,1317,0.351,1350,1.09,1366,0.808,1369,1.373,1383,0.347,1389,0.371,1391,0.964,1396,1.072,1408,0.454,1409,4.248,1422,0.314,1426,4.113,1432,1.126,1437,0.824,1438,0.292,1456,0.314,1479,0.361,1490,0.336,1498,0.383,1512,0.332,1521,0.923,1530,0.361,1532,0.361,1541,0.717,1549,1.012,1565,0.589,1578,0.343,1607,1.584,1608,0.347,1612,0.296,1619,0.371,1627,1.846,1629,0.371,1675,0.398,1686,0.29,1701,1.13,1714,0.347,1731,0.336,1766,3.233,1801,0.454,1827,0.317,1862,1.234,1893,0.339,1917,0.663,1924,3.205,1935,0.377,1971,0.415,1998,0.377,2005,0.332,2010,0.741,2011,0.999,2016,0.329,2043,4.94,2047,1.012,2050,0.406,2068,0.39,2082,0.499,2171,0.39,2176,2.357,2181,1.318,2201,0.398,2271,8.939,2352,0.439,2484,0.326,2488,1.131,2491,1.414,2492,0.878,2516,0.398,2541,1.075,2552,0.499,2553,0.377,2554,0.803,2555,0.39,2556,3.986,2557,0.454,2558,0.454,2559,1.366,2560,0.356,2561,0.454,2562,0.454,2563,3.805,2564,0.304,2565,0.537,2566,0.537,2567,0.537,2568,2.361,2569,1.948,2570,1.039,2571,0.717,2572,1.948,2573,1.948,2574,1.647,2575,2.361,2576,0.537,2577,1.328,2578,0.537,2579,0.537,2580,0.537,2581,1.039,2582,1.546,2583,0.439,2584,0.499,2585,0.537,2586,0.537,2587,0.537,2588,0.454,2589,0.499,2590,0.454,2591,1.039,2592,0.537,2593,0.537,2594,0.537,2595,1.039,2596,0.415,2597,0.537,2598,0.426,2599,0.473,2600,0.383,2601,1.508,2602,0.707,2603,1.871,2604,3.009,2605,0.915,2606,1.039,2607,0.537,2608,0.537,2609,0.537,2610,0.915,2611,0.915,2612,0.915,2613,0.499,2614,1.039,2615,0.537,2616,0.964,2617,0.454,2618,0.679,2619,0.537,2620,0.537,2621,0.499,2622,1.039,2623,3.464,2624,1.039,2625,1.039,2626,1.039,2627,0.499,2628,0.499,2629,0.537,2630,0.537,2631,0.537,2632,0.537,2633,0.537,2634,0.537,2635,0.537,2636,0.473,2637,0.537,2638,0.537,2639,0.537,2640,0.366,2641,0.964,2642,0.537,2643,0.406]],["component/52",[1,0.4]],["title/53",[31,17.55,175,18.967,176,16.474,184,50.576]],["name/53",[17,2.753]],["text/53",[]],["component/53",[1,0.4]],["title/54-1",[160,31.609,586,28.616]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54",[31,21.931,38,21.544]],["name/54",[17,2.753]],["text/54",[31,3.286,38,3.228,56,3.327,97,6.388,174,5.223,260,5.144,295,4.629,1369,5.306]],["component/54",[1,0.4]],["title/55-1",[0,20.659,586,28.616]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[2,12.428,63,25.581,93,20.381,202,13.789,232,22.798,530,33.694,531,25.185,1061,29.903]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55-3",[13,15.541,63,27.547,93,21.948,202,14.849,232,24.55,530,36.284,531,27.121]],["name/55-3",[]],["text/55-3",[]],["component/55-3",[]],["title/55-4",[154,20.819,202,17.546,232,29.009,720,27.695,2358,42.361]],["name/55-4",[]],["text/55-4",[]],["component/55-4",[]],["title/55-5",[247,18.647,530,47.158,531,35.249,591,23.849]],["name/55-5",[]],["text/55-5",[]],["component/55-5",[]],["title/55-6",[247,16.953,524,37.445,530,42.875,531,32.047,1643,36.604]],["name/55-6",[]],["text/55-6",[]],["component/55-6",[]],["title/55-7",[176,14.978,247,16.953,531,32.047,797,42.361,1644,37.743]],["name/55-7",[]],["text/55-7",[]],["component/55-7",[]],["title/55-8",[24,13.692,178,16.349,203,16.56,369,17.783,531,23.507,593,18.208,811,20.094,1350,22.202,2644,40.652]],["name/55-8",[]],["text/55-8",[]],["component/55-8",[]],["title/55",[193,22.104,281,20.78,369,17.783,380,18.84,530,31.449,531,35.943,1053,31.449,1397,34.911]],["name/55",[380,0.772,530,1.289,531,0.963]],["text/55",[0,0.534,1,0.435,2,0.562,8,1.887,11,2.365,13,0.652,14,0.724,18,0.991,24,1.96,38,0.301,39,0.542,47,0.603,52,0.49,56,0.331,63,1.614,66,1.002,74,0.485,76,0.813,77,1.111,82,1.056,87,0.546,89,0.688,91,1.11,93,1.882,94,0.869,100,2.048,128,0.995,129,1.563,133,0.55,138,0.416,147,0.657,154,2.186,157,1.801,158,0.764,164,0.94,166,1.82,168,1.859,176,1.356,177,0.552,178,0.428,193,1.07,200,1.334,201,1.501,202,3.269,203,2.639,204,0.635,218,1.374,227,1.014,232,3.924,235,0.554,238,0.876,239,1.01,240,0.724,245,0.499,247,2.471,252,1.054,258,1.052,265,0.544,271,2.018,274,2.031,276,0.615,278,0.535,281,1.404,283,1.678,285,4.161,286,0.77,291,0.554,293,0.531,299,2.788,303,1.507,304,0.359,312,0.515,314,1.31,317,2.122,323,1.256,324,0.394,342,2.323,345,0.491,363,0.927,369,3.859,380,3.37,386,0.498,396,0.692,401,0.692,409,0.798,413,1.63,415,1.247,417,0.678,428,1.061,430,0.708,441,3.477,442,2.35,451,2.831,455,0.683,456,0.581,459,1.209,463,0.743,464,2.595,472,2.157,489,0.609,493,6.379,494,0.482,496,3.907,500,0.904,506,1.523,515,0.503,524,2.717,530,7.944,531,6.477,534,0.609,546,1.039,553,1.32,565,1.273,566,0.506,573,0.844,586,0.4,591,0.77,593,0.476,604,1.002,618,0.93,619,2.269,624,2.513,650,0.472,667,1.33,689,2.265,698,0.612,699,0.697,702,1.919,704,0.833,705,0.833,706,0.756,717,0.67,720,0.984,730,0.513,738,4.689,744,1.303,751,0.661,760,2.72,776,0.931,788,0.724,792,2.656,797,1.505,811,2.877,813,0.869,821,0.844,832,0.951,840,1.919,848,2.833,850,2.153,881,1.723,889,1.719,890,0.882,1053,0.823,1061,1.886,1113,0.795,1150,0.804,1153,7.738,1231,1.217,1243,1.848,1244,0.713,1250,0.778,1256,1.723,1265,1.801,1345,0.897,1350,1.501,1397,2.36,1398,1.374,1400,2.728,1422,0.736,1437,0.688,1480,1.475,1505,0.973,1608,0.813,1614,0.844,1616,1.69,1619,0.869,1622,0.702,1629,0.869,1643,0.702,1644,0.724,1792,0.882,1801,7.272,1835,1.661,1877,0.897,1965,0.882,1967,4.31,1988,0.804,2072,1.028,2102,0.998,2106,0.77,2166,0.973,2170,2.482,2186,5.927,2188,1.168,2358,6.537,2644,5.018,2645,1.258,2646,4.053,2647,1.063,2648,1.258,2649,1.258,2650,3.216,2651,1.903,2652,2.329,2653,1.968,2654,3.017,2655,1.063,2656,1.258,2657,1.168,2658,1.258,2659,0.882,2660,1.168,2661,1.168,2662,1.258,2663,1.848,2664,1.258,2665,1.258,2666,1.258,2667,2.329,2668,1.258,2669,1.258,2670,2.329,2671,2.329,2672,2.329,2673,1.258,2674,1.258,2675,1.258,2676,1.258,2677,2.329,2678,2.329,2679,1.258,2680,1.258,2681,1.258,2682,1.258,2683,2.051,2684,1.258,2685,1.258,2686,1.258,2687,1.258,2688,1.168]],["component/55",[1,0.4]],["title/56-1",[0,18.366,172,28.405,304,22.856]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56-2",[2,15.814,8,14.38,11,22.518,252,21.266,2484,39.766]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["title/56",[8,15.816,11,24.768,252,23.391,2484,43.739]],["name/56",[252,0.5,2484,0.935,2663,1.223,2689,1.303]],["text/56",[0,0.897,1,0.418,2,0.539,8,2.57,11,4.255,18,0.681,24,1.781,31,0.544,35,2.59,37,1.041,39,0.962,40,3.808,52,2.029,54,1.942,56,0.588,57,1.712,64,4.163,87,0.97,93,0.884,138,2.069,150,1.122,154,2.257,158,2.763,160,0.784,168,1.13,172,0.793,176,1.429,177,0.981,178,0.76,182,1.83,192,0.78,201,2.888,202,1.047,203,2.692,228,0.911,235,4.712,236,1.01,238,1.962,239,2.261,245,0.887,246,1.061,247,2.021,248,1.104,251,3.783,252,2.897,254,1.646,257,6.38,265,0.966,267,1.562,270,2.183,271,3.036,283,0.788,293,0.944,295,2.27,299,1.583,304,0.638,306,2.076,308,2.152,310,0.985,317,0.997,321,1.297,323,1.205,324,2.937,326,0.977,333,1.027,342,0.754,345,0.873,379,0.944,380,1.532,384,1.056,386,4.415,389,3.669,416,1.297,430,1.257,438,0.734,454,2.616,456,1.032,460,1.463,464,0.977,488,1.154,489,2.523,494,0.857,500,1.518,515,0.893,539,1.082,541,0.977,603,1.397,604,0.962,606,1.161,607,1.654,619,2.486,627,1.717,634,1.297,655,0.937,659,1.056,660,2.111,665,1.308,666,1.654,672,1.287,682,1.717,685,1.23,689,0.941,699,1.239,741,1.521,744,0.896,754,1.703,764,1.921,774,2.527,797,1.444,798,2.075,804,1.356,805,1.161,822,1.48,840,1.319,854,5.11,866,1.48,873,1.023,890,2.743,892,1.89,897,2.911,911,0.824,1011,1.239,1044,1.654,1115,1.521,1167,1.689,1210,6.059,1279,1.544,1282,1.308,1290,1.23,1305,1.48,1386,1.444,1401,1.568,1405,1.277,1441,3.784,1480,1.014,1493,1.969,1496,1.689,1498,1.594,1528,1.161,1572,2.894,1608,1.444,1614,4.197,1615,1.369,1701,2.27,1731,1.397,1794,1.444,1808,1.654,1815,1.462,1820,1.623,1822,1.568,2003,5.371,2030,2.075,2094,1.521,2161,2.372,2484,6.485,2690,1.969,2691,1.89,2692,1.689,2693,1.969,2694,1.969,2695,2.075,2696,1.969,2697,6.259,2698,4.839,2699,2.236,2700,2.236,2701,2.236,2702,1.412,2703,4.256,2704,2.236,2705,2.236,2706,2.236,2707,2.236,2708,2.236,2709,2.075,2710,2.075,2711,2.236,2712,2.236,2713,2.236,2714,3.911,2715,3.911,2716,2.236,2717,2.236,2718,2.236,2719,2.236,2720,2.236,2721,2.236]],["component/56",[1,0.4]],["title/57-1",[0,15.03,8,14.38,11,22.518,138,21.683,2011,43.418]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["title/57-2",[2,14.497,8,13.182,138,19.877,172,21.31,410,33.556,2011,39.803]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["title/57-3",[13,22.44,107,33.968,342,27.028]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["title/57-4",[168,23.143,379,33.842,591,26.496]],["name/57-4",[]],["text/57-4",[]],["component/57-4",[]],["title/57",[8,14.38,11,22.518,107,27.798,342,22.119,2011,43.418]],["name/57",[11,0.529,38,0.368,1927,1.049,2491,1.119]],["text/57",[0,0.208,1,0.457,6,0.377,8,2.548,11,2.284,17,1.063,18,0.944,19,0.347,20,1.014,24,0.696,25,0.425,31,1.028,38,1.796,52,1.645,54,0.451,56,1.111,57,2.183,60,1.042,61,0.436,64,0.641,66,0.391,74,0.663,77,0.835,81,0.703,82,0.78,84,0.456,87,0.394,90,0.61,91,0.434,107,3.74,110,1.449,115,0.927,119,0.407,122,0.442,132,1.153,133,0.751,138,3.593,139,0.497,147,0.898,150,0.862,157,0.651,158,2.466,160,1.482,162,2.215,163,2.653,164,0.693,166,2.138,168,1.826,170,1.333,172,3.25,173,1.669,175,1.569,176,2.015,177,0.399,178,1.052,179,0.882,182,0.804,183,0.933,187,0.44,188,0.939,190,0.721,191,0.673,195,0.58,200,4.164,201,2.177,202,1.262,203,2.29,205,0.391,214,0.682,227,4.128,235,1.077,236,1.399,238,1.165,239,1.06,247,0.632,248,1.207,252,2.595,253,0.416,260,0.44,265,1.338,271,3.223,276,1.194,277,1.309,278,2.199,280,1.309,283,2.453,293,1.557,294,0.675,296,0.734,304,0.883,306,0.684,308,0.5,310,1.077,312,0.703,313,0.862,316,0.494,317,3.851,321,4.506,322,0.523,323,0.49,324,0.765,328,3.175,329,1.124,330,0.595,333,0.418,342,2.62,344,1.247,345,1.209,369,0.336,379,1.992,384,1.154,386,2.36,390,0.568,396,0.946,409,0.589,410,1.728,419,0.475,420,0.892,421,1.585,428,1.925,430,0.511,436,0.551,438,3.062,445,0.933,450,0.909,451,1.476,459,0.892,460,0.914,462,1.821,466,0.867,467,0.511,474,1.138,483,0.442,487,1.581,489,0.831,491,1.138,494,0.348,500,1.639,511,2.122,512,0.858,515,0.363,519,0.66,532,1.042,533,0.721,534,1.182,535,1.153,539,0.831,542,2.025,546,0.767,549,0.815,565,1.213,566,0.691,572,0.595,573,2.077,576,0.708,577,1.068,585,0.638,590,0.933,598,0.587,601,0.815,602,0.648,603,0.568,604,2.03,607,1.808,609,0.915,619,4.022,623,0.504,624,1.842,627,1.072,628,0.532,629,1.205,630,3.95,650,0.645,655,0.381,657,0.546,660,0.696,662,0.8,663,1.43,664,1.527,665,2.158,667,0.981,670,1.363,672,0.523,673,1.298,676,1.014,679,1.728,682,2.07,685,0.946,689,1.303,693,1.843,703,0.773,717,0.915,725,0.456,727,0.641,729,0.708,736,1.498,743,1.742,757,1.124,770,1.513,805,0.472,807,0.438,820,0.449,848,3.077,873,0.786,887,0.581,888,6.36,889,1.95,890,6.429,891,6.172,892,6.952,893,1.595,895,0.691,911,0.634,926,1.153,927,1.452,933,0.801,1039,0.602,1044,0.673,1060,0.872,1108,0.66,1115,0.619,1147,0.673,1160,0.557,1168,3.49,1207,0.844,1277,1.329,1279,0.628,1290,0.5,1296,0.882,1389,0.628,1392,1.085,1393,0.434,1398,1.014,1401,0.638,1405,2.951,1411,1.205,1438,0.933,1480,0.78,1505,0.703,1530,2.835,1549,0.61,1553,0.648,1630,1.298,1794,2,1811,1.543,1864,0.673,1928,1.153,1971,3.996,2010,1.225,2011,5.446,2106,0.557,2144,1.846,2180,0.568,2181,0.508,2204,1.468,2488,1.767,2491,4.052,2564,0.974,2621,2.267,2647,1.452,2722,0.909,2723,0.844,2724,0.909,2725,0.909,2726,1.513,2727,1.718,2728,0.801,2729,0.909,2730,2.267,2731,0.909,2732,0.909,2733,0.909,2734,0.909,2735,0.909,2736,5.343,2737,0.909,2738,1.363,2739,0.801,2740,0.909,2741,2.873,2742,0.909,2743,0.909,2744,0.769,2745,1.272,2746,1.595,2747,0.909,2748,1.298,2749,0.769,2750,0.801,2751,0.801,2752,0.673,2753,1.742,2754,0.909,2755,1.808,2756,1.808,2757,0.909,2758,0.909,2759,0.909]],["component/57",[1,0.4]],["title/58-1",[0,18.366,172,28.405,304,22.856]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["title/58-2",[82,32.715,168,20.831,1008,41.852,1966,49.794]],["name/58-2",[]],["text/58-2",[]],["component/58-2",[]],["title/58-3",[8,15.816,311,39.97,1009,46.593,1966,49.794]],["name/58-3",[]],["text/58-3",[]],["component/58-3",[]],["title/58-4",[2,19.324,11,27.516,1966,55.321]],["name/58-4",[]],["text/58-4",[]],["component/58-4",[]],["title/58-5",[13,14.432,31,12.539,38,12.318,138,17.04,168,14.884,175,13.552,176,11.771,2157,40.884]],["name/58-5",[]],["text/58-5",[]],["component/58-5",[]],["title/58-6",[8,14.38,31,15.956,38,15.674,56,17.245,1047,31.569]],["name/58-6",[]],["text/58-6",[]],["component/58-6",[]],["title/58-7",[31,14.627,175,15.809,176,13.731,178,20.432,1050,29.23,1393,28.661]],["name/58-7",[]],["text/58-7",[]],["component/58-7",[]],["title/58-8",[254,27.594,895,26.366,1290,36.084,2389,42.875,2760,52.024]],["name/58-8",[]],["text/58-8",[]],["component/58-8",[]],["title/58-9",[31,17.55,175,18.967,176,16.474,2761,66.93]],["name/58-9",[]],["text/58-9",[]],["component/58-9",[]],["title/58-10",[31,14.627,38,14.369,177,26.381,178,20.432,1119,31.992,2762,55.784]],["name/58-10",[]],["text/58-10",[]],["component/58-10",[]],["title/58-11",[254,25.296,727,22.42,730,24.502,838,34.327,2760,47.692,2763,39.803]],["name/58-11",[]],["text/58-11",[]],["component/58-11",[]],["title/58-12",[31,17.55,175,18.967,176,16.474,2764,60.957]],["name/58-12",[]],["text/58-12",[]],["component/58-12",[]],["title/58-13",[31,14.627,38,14.369,177,26.381,178,20.432,1119,31.992,2765,50.807]],["name/58-13",[]],["text/58-13",[]],["component/58-13",[]],["title/58-14",[19,27.553,252,23.391,2760,57.221,2766,49.068]],["name/58-14",[]],["text/58-14",[]],["component/58-14",[]],["title/58-15",[31,17.55,175,18.967,176,16.474,2767,66.93]],["name/58-15",[]],["text/58-15",[]],["component/58-15",[]],["title/58-16",[31,15.956,38,15.674,178,22.288,1119,34.898,2768,60.851]],["name/58-16",[]],["text/58-16",[]],["component/58-16",[]],["title/58-17",[409,19.007,423,25.39,671,23.525,838,31.689,2024,45.333,2158,46.902,2769,41.929]],["name/58-17",[]],["text/58-17",[]],["component/58-17",[]],["title/58-18",[31,17.55,175,18.967,176,16.474,2770,66.93]],["name/58-18",[]],["text/58-18",[]],["component/58-18",[]],["title/58-19",[31,15.956,178,22.288,423,30.002,671,27.798,2771,60.851]],["name/58-19",[]],["text/58-19",[]],["component/58-19",[]],["title/58-20",[169,26.727,202,17.546,390,40.973,1052,34.898,2004,50.702]],["name/58-20",[]],["text/58-20",[]],["component/58-20",[]],["title/58-21",[169,32.659,591,26.496,1966,55.321]],["name/58-21",[]],["text/58-21",[]],["component/58-21",[]],["title/58-22",[421,30.062,1428,59.288,1966,55.321]],["name/58-22",[]],["text/58-22",[]],["component/58-22",[]],["title/58-23",[8,14.38,169,26.727,254,27.594,267,26.191,593,24.823]],["name/58-23",[]],["text/58-23",[]],["component/58-23",[]],["title/58-24",[169,32.659,380,31.386,595,34.484]],["name/58-24",[]],["text/58-24",[]],["component/58-24",[]],["title/58-25",[18,24.421,302,39.161,596,39.567]],["name/58-25",[]],["text/58-25",[]],["component/58-25",[]],["title/58",[8,17.571,169,32.659,2004,61.956]],["name/58",[1966,3.073]],["text/58",[0,0.395,1,0.088,2,0.415,7,1.202,8,1.829,11,1.453,13,0.255,15,0.52,18,0.405,19,1.893,20,1.547,24,0.969,25,1.857,26,0.712,28,0.63,31,2.344,33,0.266,37,0.219,38,3.049,44,0.791,45,0.488,46,0.272,52,0.815,54,0.452,56,1.943,57,0.154,64,0.175,66,1.198,74,0.808,77,0.454,82,0.413,87,0.576,89,0.256,91,0.999,94,0.324,100,0.571,101,0.214,104,0.255,107,0.386,108,0.22,109,0.221,110,0.426,113,0.575,121,0.296,122,0.443,126,0.285,128,0.2,132,0.891,133,2.166,138,1.126,147,0.899,151,0.432,154,1.081,157,1.502,158,1.018,159,0.419,160,0.466,162,1.966,163,1.376,164,1.601,166,0.708,168,2.762,169,2.019,170,0.392,172,0.166,175,1.792,176,1.83,177,2.622,178,3.599,181,0.589,182,2.961,183,0.934,188,0.498,192,0.601,195,2.246,202,1.782,203,0.457,205,0.392,214,1.966,219,2.691,228,0.371,237,0.377,238,0.343,239,0.395,241,0.227,243,0.426,245,0.362,246,0.223,247,1.159,252,0.903,254,3.052,255,0.233,258,0.6,259,1.041,265,0.394,267,1.979,268,0.798,270,0.262,271,3.119,275,1.271,285,0.363,288,0.426,291,2.183,295,0.204,299,2.006,300,0.319,302,0.445,304,0.491,308,0.258,310,0.759,311,0.736,313,2.903,314,0.747,317,0.209,324,1.812,327,0.245,333,0.962,335,0.311,342,1.339,345,0.518,346,0.529,347,0.894,354,0.287,357,0.303,360,0.656,363,0.529,379,0.885,380,1.85,383,0.285,386,0.525,389,0.47,390,1.076,395,0.67,405,0.319,406,0.293,407,1.873,409,1.449,412,0.256,413,0.189,421,1.044,422,0.27,423,4.672,436,0.285,438,2.426,440,1.331,442,2.555,446,0.928,451,1.327,454,0.666,455,2.564,460,0.916,463,0.277,464,1.614,470,0.264,471,1.258,474,0.219,479,0.241,481,1.221,483,0.228,486,0.296,487,0.391,489,0.441,500,0.515,501,0.689,503,0.287,507,0.277,509,2.964,511,0.211,512,0.455,514,0.582,515,0.688,520,0.282,527,1.959,529,2.767,533,0.372,537,2.009,538,2.065,541,0.58,543,0.529,545,0.798,549,0.63,554,0.303,564,0.413,565,0.82,566,1.369,567,0.563,568,0.268,572,0.868,575,1.274,576,2.383,591,0.155,593,0.178,595,0.202,596,0.232,599,0.227,601,0.432,618,0.978,623,0.505,624,2.72,628,0.275,649,0.663,650,0.176,655,0.382,657,0.282,659,0.43,660,0.697,669,0.781,671,1.901,678,0.659,682,0.206,689,0.383,698,0.646,701,0.206,702,0.277,704,0.311,705,0.311,718,1.309,725,1.051,726,0.293,727,1.762,730,2.358,736,1.501,738,1.051,739,1.271,744,1.696,748,0.223,751,0.247,753,0.319,754,0.578,763,0.307,764,3.695,767,0.307,788,0.27,791,0.435,792,0.383,799,0.3,804,0.805,838,5.376,861,0.524,873,0.608,895,1.485,911,2.133,917,1.55,939,0.383,943,0.435,945,0.413,1008,0.272,1009,0.303,1011,0.505,1047,0.226,1049,0.287,1050,0.228,1052,0.25,1078,0.285,1081,0.315,1105,0.307,1119,2.252,1122,0.383,1127,0.397,1128,0.275,1135,1.065,1154,0.501,1160,1.054,1161,0.363,1169,0.917,1192,0.413,1203,0.542,1209,0.253,1220,0.245,1231,0.245,1235,0.319,1244,0.266,1267,1.662,1281,0.791,1290,0.731,1349,0.505,1350,1.572,1384,0.335,1393,0.434,1400,1.443,1422,0.275,1425,0.319,1426,0.864,1428,4.281,1432,0.224,1437,0.256,1445,0.758,1456,0.533,1505,0.363,1521,1.282,1527,0.335,1535,0.413,1549,0.315,1607,3.324,1608,0.303,1612,0.947,1622,0.262,1627,0.315,1697,0.279,1701,0.999,1731,1.309,1737,0.65,1739,0.363,1767,0.311,1862,1.454,1899,0.397,1917,1.337,1933,0.315,1966,5.008,1998,0.329,2002,0.363,2004,3.467,2016,0.287,2017,0.413,2018,0.744,2019,0.435,2024,3.662,2025,0.413,2047,2.081,2063,0.674,2106,0.813,2157,2.93,2158,2.069,2176,3.214,2180,1.076,2181,1.366,2191,0.383,2201,0.982,2204,1.672,2389,0.307,2390,2.155,2488,0.225,2496,0.413,2497,0.383,2499,0.372,2541,3.017,2582,0.372,2589,0.845,2596,2.856,2598,1.942,2599,1.516,2610,0.413,2611,0.413,2612,0.413,2618,1.82,2760,6.699,2761,0.435,2762,0.435,2763,0.311,2764,0.397,2765,0.397,2766,0.319,2767,0.435,2768,0.435,2769,0.355,2770,0.435,2771,0.435,2772,0.469,2773,0.469,2774,0.469,2775,2.094,2776,0.413,2777,0.911,2778,4.232,2779,0.469,2780,0.435,2781,0.383,2782,3.693,2783,0.372,2784,0.469,2785,0.911,2786,0.435,2787,0.435,2788,0.469,2789,0.911,2790,0.469,2791,0.435,2792,0.469,2793,0.469,2794,2.094,2795,0.469,2796,1.944,2797,1.944,2798,0.469,2799,0.845,2800,2.582,2801,0.469,2802,5.873,2803,0.469,2804,0.469,2805,0.469,2806,0.469,2807,0.469,2808,0.469,2809,0.469,2810,0.469,2811,0.469,2812,0.296,2813,0.397,2814,0.469,2815,0.911,2816,1.328,2817,2.094,2818,0.845,2819,0.469,2820,0.911,2821,5.786,2822,0.911,2823,0.911,2824,2.094,2825,1.328,2826,2.094,2827,1.328,2828,1.328,2829,0.469,2830,2.271,2831,1.844,2832,0.911,2833,0.911,2834,0.469,2835,0.469,2836,0.469,2837,0.435,2838,2.447,2839,0.911,2840,0.469,2841,1.328,2842,0.911,2843,0.911,2844,0.911,2845,0.469,2846,0.911,2847,0.845,2848,0.469,2849,0.469,2850,0.469,2851,0.469,2852,0.469,2853,0.469,2854,0.469,2855,0.435,2856,0.469,2857,0.469,2858,0.435,2859,0.469,2860,0.469,2861,0.469,2862,0.413,2863,0.469,2864,0.383,2865,0.469,2866,0.469,2867,0.469,2868,0.469,2869,0.469,2870,0.469,2871,0.469,2872,0.413,2873,0.469,2874,0.469,2875,0.469,2876,1.328,2877,0.469,2878,0.469,2879,0.413,2880,0.911,2881,0.469,2882,0.469,2883,0.435,2884,0.469,2885,0.413,2886,0.469,2887,0.469,2888,0.469,2889,0.435,2890,0.372,2891,0.372]],["component/58",[1,0.4]],["title/59-1",[0,20.659,586,28.616]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[2,13.383,8,12.169,31,13.503,168,16.028,678,27.547,1220,28.987,2892,42.908]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[13,20.198,170,31.039,725,36.19,2736,60.957]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59-4",[31,17.55,38,17.239,591,23.849,725,36.19]],["name/59-4",[]],["text/59-4",[]],["component/59-4",[]],["title/59-5",[38,14.369,56,15.809,166,20.329,415,32.199,593,22.756,2893,52.935]],["name/59-5",[]],["text/59-5",[]],["component/59-5",[]],["title/59-6",[38,17.239,267,28.808,595,31.039,1369,35.995]],["name/59-6",[]],["text/59-6",[]],["component/59-6",[]],["title/59-7",[56,21.073,202,21.441,596,39.567]],["name/59-7",[]],["text/59-7",[]],["component/59-7",[]],["title/59-8",[31,17.55,175,18.967,176,16.474,597,38.632]],["name/59-8",[]],["text/59-8",[]],["component/59-8",[]],["title/59",[31,21.931,2892,69.69]],["name/59",[31,0.665,2892,2.112]],["text/59",[0,0.552,1,0.244,2,0.315,7,2.562,8,2.212,11,1.297,13,0.365,14,0.751,15,0.736,16,2.584,18,0.208,19,1.107,20,1.098,24,1.572,25,0.611,27,0.815,28,0.891,31,2.225,38,2.367,39,0.293,45,0.365,47,0.326,54,1.196,55,0.909,56,2.266,57,2.78,61,0.625,63,0.338,64,1.945,65,0.777,66,0.293,74,0.263,77,0.446,83,5.083,87,1.455,91,1.599,95,2.347,96,0.43,97,0.784,100,2.244,107,2.89,110,0.611,119,0.584,120,0.435,128,1.029,131,0.888,132,0.457,133,0.298,138,1.38,139,0.372,141,0.43,149,0.477,152,2.235,153,0.875,154,0.596,157,0.711,158,0.791,159,0.313,161,0.386,162,0.745,164,1.684,166,2.759,168,1.969,169,0.766,170,3.826,172,1.189,175,1.097,176,1.261,177,0.573,178,0.639,183,0.37,192,0.238,195,0.44,197,0.413,200,4.139,202,2.226,204,0.658,205,1.443,214,1.656,216,0.864,218,0.402,227,3.48,228,0.278,230,0.713,231,0.323,235,1.277,236,0.308,237,0.281,238,1.57,239,0.295,241,0.329,243,0.319,245,0.745,246,0.323,247,0.486,254,1.013,255,1.439,259,0.29,260,1.165,265,0.564,267,3.876,271,0.985,274,2.839,275,0.354,276,1.177,277,1.006,278,0.555,280,1.006,282,1.63,283,1.602,295,1.049,299,2.463,302,0.918,304,0.194,312,0.985,319,0.777,328,0.362,329,1.575,330,3.197,331,0.6,333,2.088,342,2.445,344,0.494,345,0.734,347,0.354,363,1.661,369,0.482,373,0.54,380,0.511,386,0.516,391,1.211,401,0.718,405,0.463,407,1.595,409,0.447,413,2.097,414,0.445,415,4.281,419,0.682,421,1.258,423,1.728,428,0.594,432,0.36,438,1.907,443,0.514,445,1.868,446,1.298,449,0.833,450,2.207,451,1.99,453,1.066,454,0.342,457,0.451,460,0.488,462,0.336,466,0.948,472,0.362,473,1.364,474,0.317,477,0.575,487,0.559,491,0.864,511,0.306,515,0.962,520,0.409,523,0.398,531,0.333,532,0.413,534,1.402,537,0.402,540,0.745,545,0.409,546,0.582,548,0.514,552,0.413,565,0.267,566,0.274,576,0.774,586,0.216,589,0.791,590,0.37,591,0.431,593,0.494,594,0.757,595,0.293,596,0.336,597,0.365,601,0.323,604,1.247,618,0.521,624,1.475,626,1.886,650,0.255,652,1.013,659,0.616,661,0.713,662,0.608,671,2.463,678,0.338,682,0.824,689,0.791,717,0.362,720,0.551,725,1.208,727,0.254,730,0.532,738,0.655,739,2.359,741,0.888,751,0.358,754,0.568,780,0.981,781,0.651,813,1.663,818,0.398,873,1.326,877,0.47,911,2.672,931,1.505,970,0.526,1053,5.538,1113,1.186,1117,1.066,1128,0.398,1151,0.901,1168,0.504,1178,0.457,1179,0.6,1220,0.981,1236,1.575,1238,0.763,1281,0.777,1290,0.718,1296,0.349,1306,0.556,1327,0.451,1345,0.485,1349,0.377,1369,1.202,1400,2.792,1409,0.402,1426,0.655,1437,0.372,1438,1.02,1456,1.409,1464,1.103,1469,1.149,1480,0.309,1492,0.815,1509,1.103,1601,0.477,1607,0.457,1608,1.556,1615,0.417,1642,2.47,1649,0.556,1697,0.777,1862,2.724,1917,1.538,2011,2.221,2016,0.417,2043,0.799,2141,2.035,2170,2.313,2181,0.38,2204,0.409,2304,0.986,2488,0.9,2571,2.001,2574,0.575,2583,1.066,2627,1.211,2628,0.632,2730,5.124,2736,8.286,2738,1.035,2745,3.618,2748,0.986,2752,0.504,2753,1.339,2755,1.39,2756,1.39,2892,7.422,2893,4.593,2894,5.215,2895,4.173,2896,8.317,2897,1.149,2898,0.681,2899,0.681,2900,1.743,2901,1.879,2902,0.632,2903,0.93,2904,0.6,2905,0.6,2906,0.93,2907,1.305,2908,1.305,2909,2.953,2910,1.305,2911,1.103,2912,0.681,2913,0.681,2914,0.6,2915,0.681,2916,0.681,2917,1.654,2918,0.681,2919,0.681,2920,0.681,2921,0.681,2922,0.681,2923,0.681,2924,0.681,2925,1.305,2926,0.681,2927,0.681,2928,0.681,2929,0.681,2930,1.305,2931,1.305,2932,1.305,2933,0.681,2934,0.681,2935,1.211,2936,1.305,2937,0.681,2938,0.681,2939,0.681,2940,0.681,2941,2.408,2942,0.526,2943,0.681,2944,0.681,2945,0.681,2946,0.681,2947,0.681,2948,1.211,2949,0.681,2950,0.681,2951,1.009,2952,1.305,2953,3.354,2954,1.305,2955,0.681,2956,0.681,2957,2.408,2958,0.681,2959,0.681,2960,1.305,2961,0.681,2962,0.681,2963,1.305,2964,1.305,2965,1.305,2966,1.211,2967,0.681,2968,0.681,2969,0.632,2970,0.681,2971,0.681,2972,1.305,2973,0.681,2974,0.681,2975,0.681,2976,0.681,2977,0.681,2978,0.681,2979,0.6,2980,0.681,2981,0.632,2982,0.681,2983,0.681,2984,0.681,2985,0.681,2986,1.879,2987,0.681,2988,0.681,2989,0.575,2990,1.879,2991,2.408,2992,0.6,2993,0.632,2994,0.494,2995,2.899,2996,2.408,2997,0.575,2998,0.681,2999,0.681,3000,0.514,3001,0.681,3002,0.632,3003,1.879,3004,0.681,3005,0.6,3006,0.681,3007,0.681,3008,0.681,3009,0.681,3010,0.681,3011,0.681,3012,0.681,3013,0.681,3014,0.681,3015,0.681,3016,0.681,3017,0.681,3018,0.681,3019,0.681,3020,0.681,3021,0.681,3022,0.681,3023,0.681,3024,0.681,3025,0.681,3026,0.681,3027,0.681,3028,0.681,3029,0.681,3030,0.681,3031,0.681,3032,0.681,3033,0.681,3034,0.681,3035,0.681,3036,0.681,3037,0.681,3038,0.681,3039,0.681,3040,0.681,3041,0.681,3042,0.681,3043,0.681,3044,0.681,3045,0.681,3046,0.681,3047,0.681,3048,0.681,3049,0.681,3050,0.681,3051,0.681,3052,0.681,3053,0.681,3054,0.681,3055,0.681,3056,0.681,3057,0.681,3058,0.681,3059,0.681,3060,0.681,3061,0.681,3062,0.681,3063,0.681,3064,0.681,3065,0.681]],["component/59",[1,0.4]],["title/60-1",[0,16.531,24,20.531,166,24.39,278,30.689]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60-2",[2,19.324,20,26.238,276,39.161]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["title/60-3",[13,22.44,18,24.421,159,36.823]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["title/60-4",[57,19.732,175,15.809,176,13.731,591,19.877,1366,32.199,3066,46.48]],["name/60-4",[]],["text/60-4",[]],["component/60-4",[]],["title/60-5",[390,45.066,1366,38.632,1643,40.261,3066,55.767]],["name/60-5",[]],["text/60-5",[]],["component/60-5",[]],["title/60-6",[175,18.967,176,16.474,606,37.449,1644,41.513]],["name/60-6",[]],["text/60-6",[]],["component/60-6",[]],["title/60-7",[175,15.809,176,13.731,303,27.872,421,22.553,618,24.01,3067,55.784]],["name/60-7",[]],["text/60-7",[]],["component/60-7",[]],["title/60-8",[169,29.397,811,30.13,2143,58.918,3068,66.93]],["name/60-8",[]],["text/60-8",[]],["component/60-8",[]],["title/60-9",[175,17.245,176,14.978,303,30.404,3069,60.851,3070,49.546]],["name/60-9",[]],["text/60-9",[]],["component/60-9",[]],["title/60-10",[175,15.809,176,13.731,293,25.389,303,27.872,1231,31.401,3071,55.784]],["name/60-10",[]],["text/60-10",[]],["component/60-10",[]],["title/60-11",[175,17.245,176,14.978,303,30.404,662,30.542,3072,60.851]],["name/60-11",[]],["text/60-11",[]],["component/60-11",[]],["title/60-12",[312,32.772,744,32.111,3073,74.358]],["name/60-12",[]],["text/60-12",[]],["component/60-12",[]],["title/60-13",[671,30.575,676,42.565,744,28.903,3074,66.93]],["name/60-13",[]],["text/60-13",[]],["component/60-13",[]],["title/60-14",[107,30.575,414,47.158,415,38.632,2405,46.593]],["name/60-14",[]],["text/60-14",[]],["component/60-14",[]],["title/60-15",[195,31.155,446,35.354,3075,46.753,3076,53.567]],["name/60-15",[]],["text/60-15",[]],["component/60-15",[]],["title/60-16",[11,29.811,175,15.809,176,13.731,421,22.553,3077,43.631]],["name/60-16",[]],["text/60-16",[]],["component/60-16",[]],["title/60",[175,17.245,176,14.978,242,55.421,1366,35.123,3066,50.702]],["name/60",[8,0.278,57,0.415,235,0.558,2488,0.606,3066,0.978]],["text/60",[0,0.33,2,0.347,3,1.613,6,2.18,8,0.989,11,3.051,12,1.065,13,0.403,15,1.428,16,1.233,18,1.602,19,1.723,20,1.194,24,1.992,31,1.097,37,0.67,40,0.526,52,1.026,56,0.693,57,0.865,77,1.54,82,1.195,87,0.624,107,1.117,121,0.909,122,0.7,128,0.615,138,0.871,154,0.457,157,0.997,158,2.297,159,1.675,160,2.073,162,0.571,164,1.471,166,1.525,168,1.053,169,1.074,172,0.934,175,3.369,176,3.097,182,0.673,187,1.764,193,3.426,195,2.188,197,0.873,200,1.081,201,1.216,202,2.105,203,1.81,216,2.413,227,1.147,235,1.987,236,0.65,237,0.595,238,1.372,239,1.581,241,0.696,242,1.216,247,0.372,252,0.855,253,1.206,267,1.052,271,2.534,276,2.204,277,1.952,278,2.978,281,2.271,283,1.285,293,2.496,296,1.125,299,0.582,303,5.133,304,1.286,306,2.093,312,1.491,316,0.781,342,0.889,363,0.573,379,3.479,384,1.721,386,0.569,390,2.278,396,0.792,410,0.803,414,1.723,415,1.952,420,1.368,421,1.972,428,0.655,438,1.726,446,1.965,451,1.256,460,0.538,466,0.726,472,1.402,474,0.67,479,1.352,483,1.281,500,2.715,514,1.683,532,0.873,534,0.696,538,0.873,541,0.629,546,2.011,549,1.25,563,0.873,565,1.032,566,0.579,568,0.822,573,0.965,576,2.165,591,0.476,604,0.619,606,3.633,609,0.766,618,1.456,624,1.761,650,1.972,660,1.067,662,1.698,663,1.542,665,0.842,667,1.505,671,1.117,676,1.555,678,0.714,682,2.847,693,0.857,699,0.797,703,0.647,705,0.953,727,1.961,729,4.235,731,0.993,733,0.828,734,1.421,735,1.829,736,2.86,737,0.941,744,1.461,754,1.147,757,0.941,764,1.791,779,2.314,780,1.376,781,0.718,792,2.153,793,1.026,799,0.919,804,0.873,811,2.71,839,3.619,894,1.819,895,0.579,947,0.909,960,1.335,1024,0.601,1038,3.285,1060,1.337,1105,0.941,1115,1.793,1116,1.267,1141,2.037,1190,0.93,1202,1.95,1203,0.857,1231,2.746,1259,1.879,1308,0.993,1366,4.213,1405,3.704,1411,1.009,1484,0.842,1500,2.301,1528,0.747,1529,1.142,1530,0.965,1532,0.965,1538,1.505,1622,4.161,1643,0.803,1644,0.828,1706,1.142,1808,4.373,1835,1.026,1862,3.655,1877,2.599,1928,0.965,2143,5.299,2204,0.864,2267,1.142,2405,0.93,2643,1.991,2703,1.793,3066,5.411,3067,1.335,3068,1.335,3069,1.335,3070,5.943,3071,1.335,3072,1.335,3073,1.335,3074,1.335,3075,1.026,3076,2.978,3077,1.044,3078,1.439,3079,1.439,3080,0.941,3081,1.267,3082,1.439,3083,1.335,3084,1.335,3085,2.227,3086,1.335,3087,1.439,3088,1.439,3089,3.382,3090,2.892,3091,1.335,3092,1.087,3093,1.439,3094,1.439,3095,1.216,3096,1.113,3097,1.439,3098,1.439]],["component/60",[1,0.4]],["title/61-1",[0,18.366,172,28.405,304,22.856]],["name/61-1",[]],["text/61-1",[]],["component/61-1",[]],["title/61-2",[2,14.497,8,13.182,138,19.877,154,19.086,247,15.542,741,40.897]],["name/61-2",[]],["text/61-2",[]],["component/61-2",[]],["title/61-3",[5,28.329,26,27.102,174,32.212,304,18.705,1513,45.272]],["name/61-3",[]],["text/61-3",[]],["component/61-3",[]],["title/61-4",[9,29.369,26,27.102,174,32.212,304,18.705,1523,42.875]],["name/61-4",[]],["text/61-4",[]],["component/61-4",[]],["title/61-5",[26,27.102,174,32.212,282,36.876,304,18.705,1686,35.354]],["name/61-5",[]],["text/61-5",[]],["component/61-5",[]],["title/61",[26,21.299,138,17.04,174,25.315,282,28.98,304,14.699,461,30.682,1513,35.578,1523,33.694]],["name/61",[8,0.235,174,0.527,235,0.473,282,0.604,1513,0.741,1523,0.702]],["text/61",[0,0.388,2,0.409,5,0.732,8,2.098,9,0.759,11,2.263,18,2.009,19,2.744,26,4.858,31,1.244,38,0.405,40,0.619,52,1.19,55,2.021,56,1.554,66,2.2,77,0.579,87,1.326,93,0.67,100,0.729,110,0.793,128,1.784,138,3.336,154,1.623,158,2.529,161,0.96,164,2.383,166,1.412,168,2.075,169,1.702,172,0.601,174,6.336,175,2.351,176,1.958,178,0.576,183,0.92,188,0.926,201,0.782,202,1.368,203,1.052,205,0.729,245,1.213,247,1.857,252,1.658,271,3.705,278,0.721,282,5.381,283,3.47,295,1.818,304,3.058,317,2.939,342,3.127,345,0.661,374,1.17,379,1.764,410,0.946,419,0.885,420,2.168,428,0.772,430,0.953,438,2.934,450,2.704,461,7.398,462,0.837,464,4.838,471,3.549,481,3.381,486,1.931,487,0.726,515,1.668,566,2.056,597,0.907,601,0.804,618,2.042,619,3.892,624,1.996,678,1.517,679,5.341,682,2.244,689,2.151,730,2.408,741,1.153,744,1.674,764,0.832,767,1.999,779,0.869,811,0.708,869,1.931,887,1.952,889,2.209,941,1.432,1013,3.229,1063,1.492,1123,1.07,1209,0.913,1223,1.188,1386,2.698,1398,1,1400,0.718,1417,1.344,1432,0.808,1438,0.92,1456,3.457,1480,0.768,1513,4.959,1515,1.432,1521,1.037,1523,6.256,1538,0.967,1612,0.932,1615,1.872,1686,0.913,1862,2.671,1928,1.137,2276,2.584,2358,1.975,2483,1.254,2776,1.492,2783,1.344,3099,5.112,3100,3.057,3101,3.057,3102,4.176,3103,3.057,3104,3.876,3105,3.057,3106,3.057,3107,1.572,3108,2.584,3109,1.31,3110,1.572,3111,1.492,3112,3.057,3113,1.694,3114,1.492,3115,4.745,3116,2.692,3117,3.057,3118,1.432,3119,1.23,3120,1.384,3121,3.057,3122,3.057,3123,5.482,3124,3.057,3125,3.057,3126,1.572,3127,1.492,3128,3.057,3129,1.694,3130,3.057,3131,1.31,3132,1.572,3133,1.694,3134,1.572,3135,1.694,3136,1.572,3137,1.694,3138,1.492,3139,1.694,3140,1.694,3141,1.694,3142,1.694,3143,1.694,3144,1.572,3145,1.694]],["component/61",[1,0.4]],["title/62",[8,15.816,57,23.675,154,22.899,904,58.918]],["name/62",[138,0.903,154,0.867]],["text/62",[0,2.29,8,2.883,11,2.908,13,2.371,38,1.388,45,3.111,54,2.883,55,2.81,56,1.527,65,5.949,77,1.984,124,3.897,138,3.304,140,4.909,154,1.844,168,2.445,170,2.499,172,3.001,193,3.891,204,2.93,245,2.305,247,2.189,254,2.444,255,4.203,267,2.32,271,2.878,283,2.048,304,2.415,306,4.371,310,2.559,342,1.959,380,2.275,438,2.779,445,2.219,539,2.81,541,3.701,604,3.644,703,3.808,725,2.914,744,4.004,866,6.616,905,6.037,906,5.39,1024,2.426,1158,3.897,1266,6.533,1480,3.84,1697,5.041,1715,7.456,1718,4.215,3146,8.466,3147,3.797,3148,5.808,3149,5.808,3150,5.808,3151,5.808,3152,8.466,3153,5.808,3154,5.808,3155,8.466,3156,5.808,3157,7.156,3158,5.808]],["component/62",[1,0.4]],["title/63",[24,22.809,122,38.963,1386,51.764]],["name/63",[3159,4.451]],["text/63",[11,1.324,15,1.51,18,1.884,20,2.025,24,2.947,52,1.5,57,2.029,74,1.486,93,1.524,122,3.764,150,1.934,154,1.224,158,2.029,162,2.453,168,1.113,195,2.085,202,1.654,210,2.797,232,2.735,236,1.741,237,1.593,246,1.829,247,2.29,271,2.631,275,2.001,276,1.884,278,2.631,283,2.18,293,3.741,299,2.503,311,2.136,312,1.576,328,4.12,342,2.085,347,3.21,361,2.295,369,1.425,384,3.656,420,4.02,438,2.908,469,3.058,481,1.691,500,1.495,523,2.255,537,2.275,538,3.749,565,1.51,576,1.587,606,2.001,623,2.136,630,7.287,631,6.316,649,3.086,650,1.446,660,1.56,665,5.674,669,3.511,671,1.634,676,2.275,686,2.98,689,3.258,690,4.268,701,1.691,727,3.617,729,3.994,731,4.268,732,3.824,733,3.559,734,3.333,735,1.934,736,1.865,738,3.884,740,2.384,804,3.749,822,5.126,832,2.912,873,1.763,889,3.27,894,4.268,895,1.55,911,1.421,1105,2.52,1135,3.824,1241,2.552,1307,3.258,1350,1.779,1386,5.001,1484,2.255,1487,2.316,1500,1.967,1530,2.586,1572,2.852,1627,2.586,1634,3.577,1643,2.152,1738,2.98,1808,2.852,1811,3.905,1942,4.575,2057,3.577,2058,3.577,2227,2.136,2228,2.52,2229,2.461,2230,2.461,2405,2.49,3075,2.748,3160,3.854,3161,3.854,3162,6.182,3163,3.854,3164,2.275,3165,2.52,3166,3.149,3167,3.854,3168,3.854,3169,3.854,3170,3.854,3171,6.182,3172,2.661,3173,2.852,3174,3.854,3175,3.854,3176,3.854,3177,2.852,3178,3.258,3179,3.394]],["component/63",[1,0.4]],["title/64-1",[160,31.609,586,28.616]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["title/64",[8,15.816,77,24.64,190,57.221,3180,72.12]],["name/64",[189,1.259,235,0.679,586,0.489,2012,1.43]],["text/64",[8,2.533,77,3.946,91,5.507,569,9.164]],["component/64",[1,0.4]],["title/65-1",[0,12.719,8,12.169,40,20.282,77,18.958,149,38.914,172,19.672,947,35.047]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["title/65-2",[2,19.324,18,24.421,302,39.161]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["title/65",[8,15.816,77,24.64,91,34.387,569,57.221]],["name/65",[8,0.432,235,0.868,361,1.173]],["text/65",[0,0.632,1,0.876,2,0.665,8,2.964,10,1.934,11,0.947,18,1.864,19,1.054,20,2.002,23,2.189,24,1.741,25,2.861,33,1.563,38,1.121,40,1.714,44,1.642,56,0.725,57,3.496,63,1.369,66,1.187,68,2.328,77,3.203,91,2.235,93,1.091,107,1.169,109,1.297,119,2.739,122,1.341,128,3.754,138,1.55,141,1.742,143,1.851,149,1.934,150,1.384,154,1.489,156,3.625,158,0.905,166,3.17,168,2.85,169,3.582,172,0.978,173,1.487,175,1.233,176,2.007,179,1.416,193,1.268,199,2.041,202,1.636,203,0.95,210,2.002,214,1.86,215,1.518,218,1.628,219,2.944,228,2.492,232,1.22,236,2.118,237,1.938,238,1.038,239,1.196,240,1.588,242,2.331,245,1.095,247,3.169,252,1.521,254,1.161,259,2.602,265,2.026,269,1.673,278,1.174,287,2.189,302,1.348,303,1.279,304,0.787,306,1.098,311,4.479,319,1.642,321,1.601,323,2.528,324,2.752,333,2.81,334,1.851,363,1.098,369,2.261,380,3.166,384,2.888,395,2.366,398,2.379,421,1.035,422,1.588,437,2.871,438,1.539,439,1.459,445,1.054,454,1.384,460,2.287,467,1.551,483,1.341,489,1.335,493,1.804,494,1.797,496,1.478,502,2.843,523,1.614,530,1.804,531,2.989,534,1.335,546,1.23,560,1.724,618,1.102,619,1.315,634,1.601,644,1.706,651,1.934,652,2.528,655,1.157,659,2.214,684,2.495,698,2.28,701,2.058,703,1.241,704,1.826,717,1.468,720,1.165,748,1.309,759,1.782,764,1.355,805,1.432,823,1.762,831,1.742,929,2.9,947,1.742,950,1.588,1036,1.826,1060,5.006,1186,2.429,1219,2.189,1231,1.441,1247,4.606,1281,1.642,1291,2.041,1308,1.904,1357,1.742,1366,1.478,1377,2.041,1378,1.967,1387,2.189,1394,2.331,1395,2.133,1506,1.967,1547,2.56,1550,3.469,1553,1.967,1557,1.826,1558,2.041,1559,2.133,1560,1.904,1572,2.041,1574,1.673,1602,1.934,1988,1.762,2002,2.133,2003,2.084,2018,2.253,2903,1.967,2948,2.56,3181,2.758,3182,2.758,3183,2.758]],["component/65",[1,0.4]],["title/66-1",[0,20.659,586,28.616]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["title/66-2",[8,17.571,138,26.496,1008,46.496]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["title/66-3",[11,27.516,138,26.496,1009,51.764]],["name/66-3",[]],["text/66-3",[]],["component/66-3",[]],["title/66-4",[2,19.324,14,46.12,15,31.386]],["name/66-4",[]],["text/66-4",[]],["component/66-4",[]],["title/66-5",[5,31.159,489,34.895,889,38.142,936,48.391]],["name/66-5",[]],["text/66-5",[]],["component/66-5",[]],["title/66-6",[9,29.369,64,24.456,150,32.903,169,26.727,489,31.726]],["name/66-6",[]],["text/66-6",[]],["component/66-6",[]],["title/66-7",[13,20.198,31,17.55,138,23.849,2905,63.511]],["name/66-7",[]],["text/66-7",[]],["component/66-7",[]],["title/66-8",[191,59.288,195,27.028,591,26.496]],["name/66-8",[]],["text/66-8",[]],["component/66-8",[]],["title/66-9",[8,14.38,31,15.956,38,15.674,56,17.245,1643,36.604]],["name/66-9",[]],["text/66-9",[]],["component/66-9",[]],["title/66-10",[31,13.503,175,14.594,176,12.676,228,22.618,248,27.403,1078,33.653,1644,31.941]],["name/66-10",[]],["text/66-10",[]],["component/66-10",[]],["title/66-11",[31,15.956,175,17.245,176,14.978,228,26.727,2405,42.361]],["name/66-11",[]],["text/66-11",[]],["component/66-11",[]],["title/66-12",[15,18.84,31,11.704,175,12.649,176,10.987,178,24.998,324,15.061,432,25.437,3075,34.294]],["name/66-12",[]],["text/66-12",[]],["component/66-12",[]],["title/66-13",[31,14.627,175,15.809,176,13.731,1209,32.41,1222,43.631,3077,43.631]],["name/66-13",[]],["text/66-13",[]],["component/66-13",[]],["title/66-14",[173,38.886,174,35.43,590,39.146,3184,60.957]],["name/66-14",[]],["text/66-14",[]],["component/66-14",[]],["title/66-15",[31,14.627,175,15.809,176,13.731,559,46.48,1426,30.164,3185,50.807]],["name/66-15",[]],["text/66-15",[]],["component/66-15",[]],["title/66-16",[511,40.538,593,34.12]],["name/66-16",[]],["text/66-16",[]],["component/66-16",[]],["title/66",[8,14.38,64,24.456,138,21.683,190,52.024,191,48.518]],["name/66",[17,2.753]],["text/66",[0,0.679,1,0.554,2,0.715,5,0.488,7,0.555,8,2.001,9,0.506,11,1.71,12,0.837,13,1.041,14,1.214,15,1.455,18,0.345,20,1.217,24,1.058,26,0.871,28,1.406,30,0.547,31,2.912,32,0.837,37,0.527,38,1.949,40,0.413,46,0.656,47,1.419,49,0.73,52,2.147,54,1.047,56,2.068,57,1.22,60,2.658,61,0.542,64,2.933,66,1.275,76,1.362,77,0.72,85,0.749,87,1.285,90,0.759,91,0.539,93,0.447,97,1.267,100,0.487,104,0.614,107,0.479,108,0.529,110,1.386,113,0.714,119,1.664,133,2.412,138,3.366,147,0.591,150,2.769,154,0.941,156,0.874,157,0.798,158,0.371,159,0.969,160,1.303,161,1.679,162,0.449,163,1.186,164,2.762,166,1.866,168,1.594,169,2.79,170,1.275,172,0.747,173,2.363,174,1.825,175,2.983,176,2.611,177,2.421,178,2.567,179,1.082,187,0.547,189,1.722,190,0.897,191,2.749,192,1.925,194,0.924,195,2.925,197,0.686,198,0.821,199,2.192,202,0.564,203,0.726,204,3.029,205,0.487,214,0.837,227,1.909,228,2.249,230,0.618,231,1.001,232,0.5,235,0.498,236,1.338,237,1.536,238,0.793,239,0.49,241,1.02,243,1.386,245,1.176,247,1.133,248,1.463,252,2.09,254,1.247,257,1.814,259,0.897,260,1.433,265,1.894,267,1.484,268,0.679,271,0.717,273,0.73,275,1.095,277,2.348,280,0.606,281,0.488,283,2.414,287,0.897,288,0.529,295,0.492,296,0.901,299,0.458,302,1.031,304,0.323,306,0.839,308,0.622,310,1.305,312,0.462,313,2.499,317,2.461,321,3.739,322,0.651,324,1.373,326,0.494,333,0.52,342,0.999,346,2.544,359,0.749,363,0.45,369,0.418,379,1.569,380,2.161,381,0.978,383,0.686,384,1.399,386,0.447,389,0.584,390,1.851,399,0.956,401,0.622,407,2.045,409,0.387,413,0.455,415,0.606,416,2.544,420,0.587,421,1.112,430,0.636,432,1.567,438,0.371,445,0.806,446,0.61,450,0.598,451,0.539,456,0.522,459,0.587,461,0.673,463,0.667,464,0.922,466,0.57,469,0.897,470,0.636,472,0.602,484,0.793,489,2.41,491,0.749,494,0.433,500,0.818,501,1.095,502,0.686,511,2.898,515,2.398,517,0.897,534,0.547,538,0.686,539,1.798,546,0.94,547,0.793,549,1.001,552,0.686,559,0.874,560,0.706,565,1.951,566,1.494,576,1.53,577,0.494,583,0.651,586,0.359,590,0.614,591,0.697,593,0.798,595,0.487,596,0.558,601,0.536,603,0.706,604,0.487,607,0.837,610,0.956,614,0.924,618,2.574,619,2.375,623,0.627,624,0.441,627,0.496,630,1.318,649,0.564,655,0.474,657,1.267,659,0.996,660,0.854,669,0.956,671,0.479,672,0.651,679,0.631,682,0.496,698,0.55,719,0.667,725,1.487,727,0.422,730,1.208,735,0.567,736,0.547,739,1.538,740,1.304,748,0.536,773,1.593,811,0.881,818,0.662,820,1.041,824,0.874,848,0.673,873,0.965,889,2.318,890,3.869,895,0.455,903,0.924,911,0.777,926,0.759,931,0.706,932,0.874,936,0.759,1008,0.656,1009,0.73,1011,0.627,1026,0.769,1036,0.749,1078,2.253,1081,0.759,1100,1.722,1110,1.049,1115,2.016,1132,0.722,1135,1.304,1203,0.673,1205,0.793,1206,0.874,1209,1.597,1220,0.591,1222,1.53,1231,0.591,1235,0.769,1282,0.662,1291,0.837,1301,0.897,1304,0.996,1307,0.956,1325,0.781,1328,0.584,1331,1.456,1349,2.059,1356,2.42,1357,1.332,1365,0.996,1366,1.129,1369,0.564,1384,0.806,1386,1.362,1387,0.897,1396,0.622,1398,1.244,1416,0.996,1426,1.487,1450,0.806,1456,0.662,1469,0.996,1528,0.587,1560,0.781,1565,1.195,1572,0.837,1607,0.759,1608,0.73,1615,0.692,1622,1.177,1643,0.631,1644,0.651,1722,0.924,1767,1.396,1792,0.793,1811,0.714,1994,1.396,1995,0.924,2016,0.692,2074,1.049,2122,0.956,2172,0.692,2290,0.924,2304,1.593,2327,0.956,2405,0.73,2488,1.01,2563,0.759,2650,1.673,2726,0.996,2812,0.714,2905,1.857,2981,1.049,3075,0.806,3077,0.821,3184,0.956,3185,0.956,3186,1.131,3187,2.108,3188,1.131,3189,1.131,3190,1.131,3191,1.131,3192,1.049,3193,1.131,3194,1.131,3195,1.049,3196,1.131,3197,1.131,3198,1.131,3199,1.63,3200,1.131,3201,1.049,3202,1.131,3203,2.108,3204,1.049,3205,1.131,3206,1.049,3207,0.956,3208,0.854,3209,0.806,3210,0.996,3211,1.957,3212,1.957,3213,1.049,3214,0.956,3215,1.049,3216,1.782]],["component/66",[1,0.4]],["title/67-1",[0,20.659,1853,56.923]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[39,31.039,424,48.391,511,32.439,1008,41.852]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67-3",[423,41.238,1009,58.226]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["title/67-4",[107,38.208,1684,69.69]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["title/67-5",[2,17.393,39,31.039,139,39.414,511,32.439]],["name/67-5",[]],["text/67-5",[]],["component/67-5",[]],["title/67-6",[5,31.159,39,31.039,511,32.439,1007,54.495]],["name/67-6",[]],["text/67-6",[]],["component/67-6",[]],["title/67-7",[9,32.303,68,35.803,150,36.19,168,20.831]],["name/67-7",[]],["text/67-7",[]],["component/67-7",[]],["title/67-8",[172,25.567,489,34.895,511,32.439,1686,38.886]],["name/67-8",[]],["text/67-8",[]],["component/67-8",[]],["title/67-9",[13,20.198,39,31.039,511,32.439,1393,34.387]],["name/67-9",[]],["text/67-9",[]],["component/67-9",[]],["title/67-10",[38,19.153,511,36.039,591,26.496]],["name/67-10",[]],["text/67-10",[]],["component/67-10",[]],["title/67-11",[293,30.462,511,32.439,593,27.303,1252,55.767]],["name/67-11",[]],["text/67-11",[]],["component/67-11",[]],["title/67-12",[209,46.496,805,41.605,2223,46.12]],["name/67-12",[]],["text/67-12",[]],["component/67-12",[]],["title/67-13",[31,19.497,1068,58.158,2224,50.605]],["name/67-13",[]],["text/67-13",[]],["component/67-13",[]],["title/67-14",[502,48.593,1285,67.723,2225,60.543]],["name/67-14",[]],["text/67-14",[]],["component/67-14",[]],["title/67-15",[511,36.039,2226,63.571,3217,74.358]],["name/67-15",[]],["text/67-15",[]],["component/67-15",[]],["title/67-16",[57,26.302,595,34.484,1313,65.457]],["name/67-16",[]],["text/67-16",[]],["component/67-16",[]],["title/67-17",[174,44.276,596,44.507]],["name/67-17",[]],["text/67-17",[]],["component/67-17",[]],["title/67",[39,38.789,511,40.538]],["name/67",[39,1.176,511,1.229]],["text/67",[0,0.209,1,0.968,2,0.22,5,0.394,6,0.379,7,0.448,8,0.811,9,0.409,11,0.592,13,0.256,16,0.427,18,0.747,19,2.285,20,2.378,21,0.36,24,0.698,26,0.377,31,1.261,37,0.425,38,1.515,39,5.57,40,1.352,57,2.632,60,1.046,61,4.234,62,0.771,64,2.902,65,1.46,66,1.337,68,1.217,74,0.945,82,0.782,84,0.865,85,2.057,90,0.612,92,0.597,94,0.63,95,1.379,99,1.516,101,0.416,102,0.706,104,0.495,107,1.039,108,0.807,110,1.147,115,0.492,126,4.043,127,0.724,128,0.39,130,2.685,131,2.113,134,2.288,139,3.463,147,0.477,148,0.64,149,0.64,150,0.865,154,0.778,157,1.176,158,1.02,159,0.419,162,0.973,163,0.513,166,0.583,168,1.925,170,0.742,172,0.611,174,1.526,176,1.366,182,1.147,183,0.495,184,0.64,192,0.602,195,0.308,197,1.487,202,1.266,209,2.459,214,0.362,215,0.502,216,0.604,218,0.539,225,0.771,227,0.751,228,1.266,230,0.942,231,1.755,232,1.374,237,0.713,238,1.595,241,1.186,243,0.427,245,0.973,247,0.446,250,0.63,251,0.918,252,1.374,253,0.418,259,0.388,265,1.059,271,0.586,273,0.59,275,3.621,276,0.843,278,0.388,280,0.924,283,0.608,288,0.807,290,0.513,291,0.76,293,0.728,296,0.39,302,0.446,303,1.137,304,0.699,311,0.506,314,0.97,316,0.936,319,0.543,324,0.54,330,1.128,333,0.419,339,1.036,340,0.69,353,0.746,354,0.559,360,0.451,361,1.027,363,0.363,368,0.724,369,0.906,370,1.209,372,1.409,374,1.191,375,1.409,378,0.724,380,0.358,386,0.361,387,0.48,395,0.87,396,1.349,400,1.458,401,0.502,404,0.706,406,0.57,409,0.313,410,0.963,413,0.693,414,1.128,423,1.421,424,1.645,430,0.513,432,0.483,433,0.746,438,0.3,442,2.093,445,1.619,450,0.483,456,0.421,460,0.645,462,1.827,464,0.399,465,0.651,467,1.747,471,0.548,472,0.486,483,0.839,487,0.739,489,1.79,491,1.142,494,0.661,500,1.205,501,1.613,502,1.884,509,0.502,510,1.389,511,5.076,512,0.456,519,0.662,524,1.4,530,0.597,531,0.446,539,0.834,541,1.358,543,0.53,545,0.548,546,0.769,547,0.64,556,2.464,563,0.554,565,0.358,577,0.754,584,0.724,591,0.302,593,0.346,595,0.393,596,0.451,600,0.63,601,0.433,604,1.824,606,0.896,623,0.506,629,0.64,630,0.57,643,0.59,649,0.456,650,0.92,657,0.548,659,0.431,665,1.435,669,0.414,670,0.724,679,0.51,682,0.401,684,0.918,685,0.502,688,0.521,690,1.191,692,0.59,693,2.202,699,0.506,701,0.757,720,0.386,725,0.865,731,0.63,737,2.031,738,0.865,744,0.982,751,0.906,757,0.597,776,0.675,779,0.468,781,0.456,788,0.525,802,0.576,805,1.273,811,0.381,812,0.466,818,0.534,820,0.451,824,0.706,848,1.027,850,0.604,873,0.418,886,1.128,896,1.944,909,1.303,911,1.364,981,0.461,1007,1.852,1008,0.53,1009,0.59,1024,0.721,1026,3.525,1029,1.519,1036,0.604,1048,1.276,1049,3.173,1062,1.603,1068,5.062,1093,0.69,1098,0.847,1114,0.612,1117,0.746,1118,0.804,1119,0.486,1161,0.706,1165,0.597,1169,1.191,1178,0.612,1199,1.409,1202,1.276,1205,1.209,1221,1.334,1223,0.64,1230,0.847,1233,0.847,1235,0.621,1236,0.597,1244,0.517,1245,1.252,1247,0.583,1250,0.564,1252,1.334,1254,0.804,1256,2.298,1275,1.548,1278,0.517,1281,0.543,1282,0.534,1285,3.998,1286,0.847,1287,0.847,1288,2.275,1290,0.502,1291,0.675,1293,0.597,1294,0.847,1295,1.23,1296,0.468,1308,1.191,1311,0.724,1313,8.201,1316,0.847,1321,0.847,1322,0.604,1323,0.847,1325,0.63,1326,0.847,1327,1.142,1328,0.471,1353,0.662,1371,3.257,1372,0.847,1375,0.847,1382,1.6,1383,0.59,1384,0.651,1386,1.114,1390,0.517,1393,0.435,1417,0.724,1419,2.402,1425,1.173,1432,0.822,1445,0.521,1456,0.534,1459,0.651,1460,1.067,1461,0.539,1498,0.651,1541,0.63,1548,0.651,1610,0.604,1629,2.145,1630,0.69,1646,0.651,1653,2.298,1658,0.576,1684,0.706,1686,0.492,1692,2.464,1706,0.724,1735,0.771,1738,0.706,1739,0.706,1747,0.706,1792,0.64,1821,0.597,1822,0.64,1834,0.675,1853,0.576,1905,0.724,1914,0.706,1933,0.612,1942,0.675,1994,0.604,2036,0.804,2087,1.458,2094,1.173,2095,0.804,2105,1.303,2132,0.604,2139,0.771,2171,1.252,2175,0.771,2216,0.746,2223,0.525,2224,0.576,2225,0.69,2226,0.724,2290,0.746,2293,0.804,2358,1.584,2409,1.519,2419,1.519,2430,0.804,2505,0.771,2507,0.847,2600,1.23,2643,0.69,2689,1.458,2692,1.303,2693,0.804,2703,0.621,2780,0.847,2812,0.576,2879,0.804,3199,0.706,3206,0.847,3217,3.933,3218,0.847,3219,1.409,3220,0.847,3221,4.39,3222,3.933,3223,0.847,3224,0.847,3225,0.847,3226,0.847,3227,1.334,3228,0.847,3229,0.913,3230,1.725,3231,0.847,3232,0.913,3233,0.913,3234,3.998,3235,2.452,3236,0.804,3237,0.913,3238,0.847,3239,1.409,3240,3.106,3241,1.519,3242,0.913,3243,0.913,3244,0.913,3245,0.804,3246,0.913,3247,0.913,3248,0.913,3249,0.913,3250,0.913,3251,0.913,3252,0.847,3253,5.58,3254,1.6,3255,1.334,3256,0.913,3257,0.913,3258,0.847,3259,0.746,3260,0.913,3261,0.913,3262,3.106,3263,1.6,3264,0.913,3265,0.913,3266,0.847,3267,0.913,3268,0.913,3269,0.913,3270,2.452,3271,0.913,3272,0.913,3273,2.452,3274,1.725,3275,0.913,3276,1.725,3277,0.913,3278,0.913,3279,0.913,3280,0.847,3281,0.771,3282,0.847,3283,2.452,3284,0.913,3285,0.847,3286,0.847,3287,0.913,3288,1.725,3289,3.106,3290,0.746,3291,0.847,3292,0.913,3293,0.804,3294,0.804,3295,0.771,3296,0.746,3297,1.725,3298,0.847,3299,0.804,3300,0.913,3301,0.913,3302,0.913,3303,2.625,3304,0.847,3305,0.847,3306,0.913,3307,0.847,3308,1.368,3309,0.913,3310,0.913,3311,0.913,3312,0.913,3313,0.913,3314,0.804,3315,0.847,3316,0.913,3317,0.913,3318,1.6,3319,0.847,3320,0.913,3321,0.913,3322,0.913,3323,0.913,3324,0.913,3325,0.771,3326,0.913,3327,0.913,3328,0.847,3329,0.847,3330,0.913,3331,0.804,3332,0.913,3333,0.913,3334,1.725,3335,1.725,3336,0.913,3337,0.913,3338,0.913,3339,0.913,3340,1.409,3341,0.913,3342,0.913,3343,1.519,3344,0.847,3345,1.725,3346,0.913,3347,0.913,3348,0.913,3349,0.913,3350,0.804,3351,0.913,3352,0.913,3353,0.913,3354,0.913,3355,0.913,3356,0.913,3357,0.847]],["component/67",[1,0.4]],["title/68-1",[0,18.366,369,29.624,461,47.707]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68-2",[2,17.393,258,32.576,421,27.059,461,42.941]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["title/68",[178,22.288,201,30.268,203,22.577,205,28.22,461,39.041]],["name/68",[201,1.261,461,1.627]],["text/68",[0,1.12,2,1.179,6,2.027,8,1.633,15,1.914,18,1.49,20,1.6,24,2.567,33,5.11,38,1.78,52,2.898,61,2.342,100,2.103,147,2.553,158,2.444,160,2.611,168,2.15,175,1.285,176,2.06,201,4.163,202,1.992,203,3.472,205,2.103,219,4.342,232,3.294,251,2.601,252,1.585,253,2.236,258,5.164,265,2.112,271,1.661,283,2.625,296,2.088,303,2.266,304,2.124,313,2.453,369,3.728,379,2.064,386,3.567,405,3.325,406,3.054,409,1.674,420,5.635,421,2.793,426,3.485,438,1.604,461,7.86,462,3.676,500,1.896,515,1.952,527,5.695,529,3.254,552,2.964,566,1.965,601,2.319,609,2.601,618,1.952,649,2.439,650,2.793,660,3.651,669,3.377,671,2.072,701,3.267,727,1.823,729,4.709,734,2.635,780,2.553,807,4.342,883,3.878,911,1.802,1135,3.023,1245,3.548,1275,3.087,1432,2.33,1459,3.485,1479,3.279,1484,2.86,1487,2.937,1521,2.993,3147,4.868]],["component/68",[1,0.4]],["title/69-1",[0,18.366,18,24.421,232,35.448]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[2,19.324,203,27.588,237,33.118]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69-3",[13,22.44,24,22.809,386,31.691]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["title/69-4",[24,25.657,591,29.803]],["name/69-4",[]],["text/69-4",[]],["component/69-4",[]],["title/69-5",[24,22.809,369,29.624,1643,44.729]],["name/69-5",[]],["text/69-5",[]],["component/69-5",[]],["title/69-6",[24,22.809,258,36.191,1644,46.12]],["name/69-6",[]],["text/69-6",[]],["component/69-6",[]],["title/69-7",[361,53.663,593,34.12]],["name/69-7",[]],["text/69-7",[]],["component/69-7",[]],["title/69",[201,33.292,203,24.832,304,20.573,586,22.899]],["name/69",[201,0.91,203,0.679,586,0.626]],["text/69",[0,0.83,2,0.874,6,2.439,8,0.794,13,1.014,15,2.303,18,3.231,19,3.264,20,1.186,24,4.003,33,2.052,38,0.866,40,1.324,74,1.397,82,1.643,87,3.219,100,1.559,107,1.536,112,2.801,133,1.583,154,1.15,158,3.084,160,1.27,164,1.461,166,2.51,168,1.698,170,1.559,175,2.471,176,2.299,178,1.231,192,2.051,193,1.665,195,1.222,201,4.645,202,3.139,203,3.93,205,1.559,214,2.945,219,1.744,232,3.284,237,2.43,247,0.936,253,3.909,258,3.859,259,1.541,265,1.565,275,3.053,281,3.207,293,3.135,295,4.09,296,3.17,302,1.77,304,1.033,358,2.368,361,4.42,369,2.744,379,2.484,386,2.936,393,2.157,409,1.241,438,1.93,442,1.789,450,3.11,456,1.672,460,1.355,461,2.157,463,2.138,527,2.288,540,2.068,547,2.54,552,2.197,566,2.364,591,1.198,593,1.371,609,1.928,618,1.447,627,1.59,650,2.785,653,2.313,655,1.519,669,1.643,701,2.581,727,1.351,734,1.953,748,1.719,781,5.022,811,1.513,896,1.904,911,1.335,981,2.967,1216,2.313,1244,2.052,1296,1.859,1350,4.645,1405,2.068,1425,2.464,1528,1.881,1532,2.43,1538,2.068,1622,2.022,1643,2.022,1644,2.085,2008,3.061,3239,2.959,3358,2.197]],["component/69",[1,0.4]],["title/70-1",[0,18.366,18,24.421,232,35.448]],["name/70-1",[]],["text/70-1",[]],["component/70-1",[]],["title/70-2",[2,19.324,18,24.421,673,60.543]],["name/70-2",[]],["text/70-2",[]],["component/70-2",[]],["title/70-3",[13,22.44,24,22.809,386,31.691]],["name/70-3",[]],["text/70-3",[]],["component/70-3",[]],["title/70-4",[24,25.657,591,29.803]],["name/70-4",[]],["text/70-4",[]],["component/70-4",[]],["title/70-5",[24,22.809,1411,56.19,1643,44.729]],["name/70-5",[]],["text/70-5",[]],["component/70-5",[]],["title/70-6",[24,22.809,192,27.952,1644,46.12]],["name/70-6",[]],["text/70-6",[]],["component/70-6",[]],["title/70-7",[195,30.403,593,34.12]],["name/70-7",[]],["text/70-7",[]],["component/70-7",[]],["title/70-8",[195,27.028,245,31.795,2223,46.12]],["name/70-8",[]],["text/70-8",[]],["component/70-8",[]],["title/70-9",[195,27.028,296,34.223,2224,50.605]],["name/70-9",[]],["text/70-9",[]],["component/70-9",[]],["title/70-10",[174,44.276,595,38.789]],["name/70-10",[]],["text/70-10",[]],["component/70-10",[]],["title/70-11",[361,53.663,596,44.507]],["name/70-11",[]],["text/70-11",[]],["component/70-11",[]],["title/70",[200,29.601,203,24.832,304,20.573,586,22.899]],["name/70",[200,0.809,203,0.679,586,0.626]],["text/70",[0,0.554,2,0.582,6,2.295,8,0.917,13,0.676,15,2.168,18,3.696,19,2.85,20,0.791,24,3.886,33,1.369,38,1.323,40,0.883,56,1.1,74,0.931,82,1.096,87,3.236,133,1.056,154,0.767,158,2.878,159,1.11,160,1.941,161,1.369,164,0.974,166,1.871,168,0.698,170,1.8,172,1.483,173,1.302,174,3.242,175,2.44,176,2.219,192,1.93,193,1.922,195,4.353,200,3.354,202,3.005,203,2.814,204,1.219,214,3.243,219,1.163,227,1.052,232,2.448,237,0.998,245,3.243,246,1.146,247,0.624,251,1.285,253,2.532,257,1.479,259,1.028,263,1.867,265,1.807,271,4.122,274,2.614,277,1.294,281,3.53,293,1.767,295,3.558,296,4.313,302,2.045,304,1.579,323,1.302,333,2.543,346,1.401,361,3.295,379,1.767,386,2.951,393,1.438,409,0.827,432,1.277,438,2.166,450,3.49,451,3.146,456,1.931,462,1.193,463,4.823,471,1.451,527,1.525,552,1.465,566,1.682,591,0.799,593,0.914,595,1.039,596,1.193,601,1.146,609,1.285,627,1.06,650,2.799,653,1.542,655,1.013,657,1.451,673,3.161,678,2.077,682,1.06,701,1.836,727,0.901,734,1.302,754,1.052,781,5.039,807,2.014,811,1.009,877,1.667,911,1.542,981,2.111,1182,1.722,1187,3.882,1216,2.671,1244,1.369,1296,1.239,1350,5.075,1405,1.379,1411,3.881,1468,2.041,1521,1.479,1532,1.62,1538,1.379,1622,3.089,1629,1.667,1643,1.348,1644,1.39,1833,1.753,2008,2.041,2223,1.39,2224,1.525,3358,1.465,3359,2.415]],["component/70",[1,0.4]],["title/71-1",[160,31.609,586,28.616]],["name/71-1",[]],["text/71-1",[]],["component/71-1",[]],["title/71",[1296,46.253,3358,54.659]],["name/71",[586,1.413]],["text/71",[24,3.545,195,3.494,200,5.482,203,4.598,253,4.739,293,4.375,1296,6.854,3358,7.553]],["component/71",[1,0.4]],["title/72-1",[0,12.719,65,33.04,109,26.086,283,19.566,423,25.39,861,31.941,1692,44.027]],["name/72-1",[]],["text/72-1",[]],["component/72-1",[]],["title/72",[65,39.041,109,30.824,423,30.002,687,45.983,861,37.743]],["name/72",[65,1.627,1692,2.167]],["text/72",[0,1.636,16,2.164,18,1.409,26,1.911,28,3.386,38,1.105,43,3.422,52,1.8,56,1.877,65,6.941,72,3.357,84,2.321,87,2.006,96,2.921,107,1.96,109,5.258,128,3.048,133,2.021,134,2.86,154,1.468,157,1.751,158,2.342,161,2.62,166,1.564,168,2.517,183,2.51,202,1.237,205,1.99,227,2.014,238,1.74,245,1.835,247,2.253,253,2.116,271,4.43,283,3.072,299,1.872,306,1.841,345,2.786,361,4.249,369,1.71,415,4.667,419,2.416,423,5.508,451,2.205,454,3.581,481,2.03,487,3.059,516,3.062,541,2.021,546,2.063,549,2.194,566,1.86,576,1.905,604,1.99,624,1.806,630,2.89,640,5.781,662,3.324,678,3.542,687,7.844,694,7.201,773,3.494,861,6.438,1208,3.576,1266,5.697,1425,3.146,1492,2.89,1610,6.486,1692,9.552,1964,3.778,2071,7.401,3360,4.292,3361,3.909,3362,4.624,3363,4.624,3364,4.624,3365,4.624,3366,4.624,3367,7.136]],["component/72",[1,0.4]],["title/73-1",[0,20.659,588,49.254]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["title/73-2",[40,23.966,295,28.55,549,31.115,820,32.38,1008,38.051]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["title/73-3",[56,18.967,115,38.886,640,42.565,1009,46.593]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["title/73-4",[115,35.354,154,20.819,640,38.699,720,27.695,1684,50.702]],["name/73-4",[]],["text/73-4",[]],["component/73-4",[]],["title/73-5",[247,18.647,667,41.185,3368,66.93,3369,66.93]],["name/73-5",[]],["text/73-5",[]],["component/73-5",[]],["title/73-6",[247,18.647,437,44.162,494,27.637,3370,66.93]],["name/73-6",[]],["text/73-6",[]],["component/73-6",[]],["title/73-7",[115,38.886,531,35.249,640,42.565,3371,66.93]],["name/73-7",[]],["text/73-7",[]],["component/73-7",[]],["title/73-8",[56,18.967,202,19.299,1423,58.918,3372,66.93]],["name/73-8",[]],["text/73-8",[]],["component/73-8",[]],["title/73-9",[40,21.971,202,16.085,640,35.477,1423,49.107,1492,37.561,3373,55.784]],["name/73-9",[]],["text/73-9",[]],["component/73-9",[]],["title/73-10",[56,18.967,115,38.886,754,31.402,3374,66.93]],["name/73-10",[]],["text/73-10",[]],["component/73-10",[]],["title/73-11",[56,17.245,115,35.354,485,50.702,3375,60.851,3376,60.851]],["name/73-11",[]],["text/73-11",[]],["component/73-11",[]],["title/73-12",[56,17.245,115,35.354,3377,60.851,3378,57.743,3379,60.851]],["name/73-12",[]],["text/73-12",[]],["component/73-12",[]],["title/73-13",[2,12.428,11,17.696,128,22.01,326,22.525,389,26.599,640,30.413,754,22.437,1543,30.682]],["name/73-13",[]],["text/73-13",[]],["component/73-13",[]],["title/73-14",[5,31.159,172,25.567,445,27.553,1544,54.495]],["name/73-14",[]],["text/73-14",[]],["component/73-14",[]],["title/73-15",[295,31.402,445,27.553,1027,50.576,1544,54.495]],["name/73-15",[]],["text/73-15",[]],["component/73-15",[]],["title/73-16",[159,33.144,445,27.553,1028,52.348,1544,54.495]],["name/73-16",[]],["text/73-16",[]],["component/73-16",[]],["title/73-17",[9,32.303,154,22.899,1011,39.97,3380,66.93]],["name/73-17",[]],["text/73-17",[]],["component/73-17",[]],["title/73-18",[154,19.086,1011,33.315,1064,38.834,1686,32.41,1811,37.965,3208,45.42]],["name/73-18",[]],["text/73-18",[]],["component/73-18",[]],["title/73-19",[115,32.41,166,20.329,247,15.542,640,35.477,1202,44.479,2005,37.176]],["name/73-19",[]],["text/73-19",[]],["component/73-19",[]],["title/73-20",[247,16.953,754,28.55,1064,42.361,1811,41.413,2553,45.983]],["name/73-20",[]],["text/73-20",[]],["component/73-20",[]],["title/73-21",[122,31.885,754,28.55,1064,42.361,1811,41.413,3381,55.421]],["name/73-21",[]],["text/73-21",[]],["component/73-21",[]],["title/73-22",[40,26.361,150,36.19,389,37.228,3382,60.957]],["name/73-22",[]],["text/73-22",[]],["component/73-22",[]],["title/73-23",[115,29.919,166,18.766,168,16.028,361,33.04,640,32.75,1202,41.06,3383,46.902]],["name/73-23",[]],["text/73-23",[]],["component/73-23",[]],["title/73-24",[15,25.685,157,24.823,384,30.968,389,33.847,2555,47.594]],["name/73-24",[]],["text/73-24",[]],["component/73-24",[]],["title/73-25",[13,16.835,326,26.276,389,31.029,590,32.627,640,35.477,1543,35.791]],["name/73-25",[]],["text/73-25",[]],["component/73-25",[]],["title/73-26",[11,17.696,326,22.525,389,26.599,591,17.04,606,26.757,1160,31.554,3384,71.912]],["name/73-26",[]],["text/73-26",[]],["component/73-26",[]],["title/73-27",[215,45.061,529,24.257,593,21.007,887,35.438,931,34.674,1482,42.908]],["name/73-27",[]],["text/73-27",[]],["component/73-27",[]],["title/73-28",[1,8.988,11,16.517,326,21.025,389,24.827,460,17.992,590,26.107,595,20.7,1543,28.638,1627,32.272]],["name/73-28",[]],["text/73-28",[]],["component/73-28",[]],["title/73-29",[11,27.516,1911,61.956,2227,44.407]],["name/73-29",[]],["text/73-29",[]],["component/73-29",[]],["title/73-30",[588,49.254,2367,79.368]],["name/73-30",[]],["text/73-30",[]],["component/73-30",[]],["title/73-31",[247,20.716,645,52.391,3385,74.358]],["name/73-31",[]],["text/73-31",[]],["component/73-31",[]],["title/73-32",[247,20.716,634,46.496,3386,74.358]],["name/73-32",[]],["text/73-32",[]],["component/73-32",[]],["title/73-33",[1,13.477,11,24.768,389,37.228,3387,66.93]],["name/73-33",[]],["text/73-33",[]],["component/73-33",[]],["title/73-34",[11,27.516,253,36.662,3388,74.358]],["name/73-34",[]],["text/73-34",[]],["component/73-34",[]],["title/73-35",[11,22.518,40,23.966,660,26.545,2094,44.612,3389,60.851]],["name/73-35",[]],["text/73-35",[]],["component/73-35",[]],["title/73-36",[460,33.715,3164,53.192]],["name/73-36",[]],["text/73-36",[]],["component/73-36",[]],["title/73-37",[588,49.254,3390,83.64]],["name/73-37",[]],["text/73-37",[]],["component/73-37",[]],["title/73-38",[247,20.716,645,52.391,3391,74.358]],["name/73-38",[]],["text/73-38",[]],["component/73-38",[]],["title/73-39",[247,20.716,634,46.496,3392,74.358]],["name/73-39",[]],["text/73-39",[]],["component/73-39",[]],["title/73-40",[1,13.477,389,37.228,460,26.979,3393,66.93]],["name/73-40",[]],["text/73-40",[]],["component/73-40",[]],["title/73-41",[253,36.662,460,29.973,3394,74.358]],["name/73-41",[]],["text/73-41",[]],["component/73-41",[]],["title/73-42",[1,11.233,11,20.643,541,26.276,585,42.154,596,29.684,811,25.113]],["name/73-42",[]],["text/73-42",[]],["component/73-42",[]],["title/73-43",[11,19.057,326,24.257,811,23.183,1543,33.04,1811,35.047,2228,36.284,3395,51.497]],["name/73-43",[]],["text/73-43",[]],["component/73-43",[]],["title/73-44",[3,55.188,172,31.951]],["name/73-44",[]],["text/73-44",[]],["component/73-44",[]],["title/73-45",[101,46.916]],["name/73-45",[]],["text/73-45",[]],["component/73-45",[]],["title/73-46",[1,11.233,11,20.643,634,34.882,738,30.164,811,25.113,3172,41.503]],["name/73-46",[]],["text/73-46",[]],["component/73-46",[]],["title/73-47",[3,55.188,172,31.951]],["name/73-47",[]],["text/73-47",[]],["component/73-47",[]],["title/73-48",[101,46.916]],["name/73-48",[]],["text/73-48",[]],["component/73-48",[]],["title/73-49",[1,10.37,11,19.057,215,30.537,645,36.284,811,23.183,1982,40.277,3173,41.06]],["name/73-49",[]],["text/73-49",[]],["component/73-49",[]],["title/73-50",[3,55.188,172,31.951]],["name/73-50",[]],["text/73-50",[]],["component/73-50",[]],["title/73-51",[101,46.916]],["name/73-51",[]],["text/73-51",[]],["component/73-51",[]],["title/73-52",[1,10.37,11,19.057,459,28.814,486,35.047,811,23.183,831,35.047,3396,46.902]],["name/73-52",[]],["text/73-52",[]],["component/73-52",[]],["title/73-53",[3,55.188,172,31.951]],["name/73-53",[]],["text/73-53",[]],["component/73-53",[]],["title/73-54",[101,46.916]],["name/73-54",[]],["text/73-54",[]],["component/73-54",[]],["title/73",[1,12.253,11,22.518,489,31.726,640,38.699,1911,50.702]],["name/73",[1,0.368,11,0.677,640,1.163]],["text/73",[0,0.978,1,1.589,2,0.502,3,0.889,4,0.909,5,0.113,6,0.109,8,0.219,9,0.117,11,2.24,13,0.692,15,0.735,16,1.328,18,0.232,19,0.197,20,0.169,24,0.907,25,0.575,28,0.361,38,0.294,39,0.113,40,1.102,45,0.14,46,0.152,52,1.819,54,1.033,55,0.483,56,1.871,57,0.25,64,0.192,65,0.732,75,0.362,84,0.259,85,0.174,87,0.114,93,0.204,94,0.181,95,0.428,96,0.166,98,0.39,100,0.222,101,0.455,107,1.49,108,0.241,109,0.123,110,0.241,111,0.174,115,3.093,120,0.329,121,1.053,122,1.709,128,2.051,132,0.176,147,0.398,150,0.617,151,0.245,154,1.215,157,2.212,158,2.2,159,0.565,160,0.35,161,0.945,162,0.396,164,0.757,166,0.564,168,1.831,169,0.107,172,1.876,176,0.429,177,0.115,178,0.089,182,0.78,184,0.184,187,0.127,188,0.143,192,0.726,193,0.565,202,0.852,205,1.512,209,0.442,213,0.356,214,1.906,215,2.188,216,0.342,219,0.592,227,1.459,228,0.107,232,0.228,236,0.344,237,0.108,238,1.199,239,1.307,240,0.151,241,0.483,243,0.356,245,0.98,246,0.791,247,1.306,248,0.255,250,0.526,252,0.399,253,0.952,259,0.22,265,0.329,267,0.75,270,0.558,271,4.826,275,0.136,280,0.14,283,1.866,286,0.161,291,0.335,293,0.111,295,0.906,296,0.712,298,0.15,299,0.922,302,0.372,303,0.57,304,0.147,306,1.641,310,0.227,311,0.286,313,0.132,317,0.23,319,0.156,321,0.152,323,1.807,324,0.385,326,3.455,328,0.999,329,0.171,342,0.769,345,0.813,347,0.519,354,0.161,360,0.13,361,0.864,363,0.104,368,0.208,369,0.281,379,0.111,380,0.298,381,0.871,384,2.607,386,0.104,387,0.138,389,5.388,395,0.947,396,0.284,403,0.653,410,0.146,413,0.306,416,0.299,419,0.137,420,1.08,423,0.12,428,0.235,432,0.273,436,0.159,437,1.738,438,2.283,439,0.403,441,1.077,442,0.493,445,0.87,450,0.139,451,0.246,454,0.132,455,0.142,456,0.121,459,0.395,460,1.488,463,0.155,464,0.226,474,0.355,481,0.334,482,0.563,485,4.828,486,2.319,487,0.326,489,0.483,490,0.382,494,0.556,497,0.346,500,0.295,501,0.866,502,0.159,506,0.171,509,0.144,512,1.233,515,0.206,517,0.208,523,0.719,529,0.821,531,0.918,535,0.346,538,0.606,539,0.25,540,0.15,541,0.91,543,0.152,546,0.34,549,0.124,553,0.696,563,0.313,565,0.481,566,0.755,568,0.15,582,0.329,584,0.409,585,0.184,588,0.672,590,0.788,591,0.817,593,0.465,595,0.529,596,0.376,597,0.14,598,0.333,599,0.127,600,1.573,601,0.124,603,0.624,604,0.896,606,2.287,607,0.563,608,0.425,609,0.405,610,0.222,615,0.927,618,1.404,623,0.422,625,0.342,626,0.562,627,0.115,628,0.302,629,0.184,630,2.391,631,0.368,634,1.848,635,0.243,640,4.986,645,1.361,647,2.339,650,0.626,651,1.317,652,0.141,655,0.216,658,0.208,660,1.669,661,1.452,662,0.572,663,0.445,664,0.476,667,1.301,669,0.852,678,0.828,679,1.379,682,0.115,684,1.315,685,0.284,687,1.018,688,0.295,689,0.42,690,0.181,692,0.169,693,0.864,694,0.988,698,0.128,699,0.681,701,0.732,702,0.304,705,0.174,715,0.356,717,1.107,719,0.155,720,0.519,723,0.208,724,0.534,725,0.132,727,0.098,730,0.107,731,0.69,734,0.141,738,0.132,741,2.167,743,0.187,744,0.752,745,0.612,751,0.4,753,0.351,754,1.918,757,0.171,760,0.511,761,0.706,764,2.541,768,1.653,769,2.17,770,2.006,771,0.479,773,0.755,778,0.167,780,0.137,783,0.208,784,0.208,785,0.208,788,0.151,799,0.486,804,0.313,811,1.534,812,0.263,813,0.356,816,0.604,818,0.719,820,0.376,821,0.346,831,0.481,838,0.295,840,1.568,842,0.88,850,0.661,854,2.871,869,0.481,873,0.12,875,0.872,881,1.389,883,0.208,884,0.243,887,0.486,888,0.399,889,0.273,911,2.229,913,1.29,916,1.347,917,0.563,918,0.927,920,0.222,927,0.222,931,0.322,934,0.326,951,0.302,981,0.26,1008,0.299,1009,0.169,1011,0.924,1027,0.184,1028,0.19,1038,0.164,1039,0.174,1044,1.389,1064,2.664,1067,1.018,1096,0.454,1113,0.631,1115,0.351,1119,0.14,1121,0.181,1143,0.19,1153,0.187,1155,0.231,1158,0.176,1160,0.612,1168,0.739,1169,0.526,1177,0.184,1190,0.492,1198,0.69,1200,0.39,1202,1.389,1209,0.141,1210,0.333,1231,0.137,1250,0.471,1259,0.187,1266,0.337,1282,0.445,1283,0.421,1299,0.222,1300,0.222,1301,0.208,1314,1.653,1322,0.174,1327,0.961,1328,0.135,1332,0.436,1350,0.121,1369,0.498,1389,0.181,1394,0.436,1395,0.589,1397,0.553,1400,0.111,1422,0.153,1423,3.249,1425,0.178,1432,0.125,1437,0.143,1438,0.413,1445,1.721,1457,0.169,1458,0.181,1461,0.857,1467,0.194,1480,0.944,1482,0.589,1485,0.454,1487,0.158,1492,1.424,1503,0.214,1520,0.479,1524,0.39,1537,0.208,1543,2.935,1544,3.998,1588,0.166,1604,0.167,1608,0.169,1609,0.952,1612,0.284,1622,0.288,1624,0.772,1627,0.511,1642,1.855,1646,0.368,1654,0.243,1657,0.214,1663,0.231,1665,0.421,1669,0.214,1673,0.927,1675,0.194,1678,0.222,1684,0.203,1686,0.141,1701,0.842,1718,0.19,1736,0.95,1740,1.227,1747,0.203,1760,0.203,1763,2.081,1764,0.67,1767,0.174,1768,0.454,1788,0.399,1792,0.184,1793,0.243,1808,0.382,1811,2.782,1834,0.382,1843,0.214,1862,0.137,1869,0.479,1877,0.187,1901,0.816,1902,0.88,1907,0.231,1911,1.123,1917,0.329,1927,1.416,1934,0.231,1954,0.421,1957,0.194,1960,0.589,1964,0.214,1971,0.589,1975,0.231,1978,0.231,1979,0.194,1982,0.19,1988,0.785,1997,2.372,2005,0.162,2045,0.198,2069,0.479,2075,3.551,2088,1.039,2089,0.95,2094,0.178,2115,0.421,2161,1.382,2166,0.203,2181,0.146,2186,0.399,2204,0.158,2205,0.231,2206,0.231,2227,0.145,2228,0.171,2252,0.222,2257,0.436,2259,0.222,2274,0.436,2281,0.454,2293,0.88,2358,0.169,2367,0.231,2439,0.243,2448,0.243,2461,0.214,2485,0.479,2508,0.518,2553,0.184,2555,0.19,2560,0.342,2643,0.198,2697,0.67,2812,0.166,2909,0.454,2997,0.222,3085,0.222,3164,0.155,3172,0.181,3173,0.194,3192,0.243,3208,0.575,3214,0.436,3245,0.454,3258,0.243,3281,0.222,3290,0.421,3343,0.231,3361,0.436,3368,0.243,3369,1.931,3370,0.243,3371,0.243,3372,0.243,3373,0.243,3374,0.243,3375,0.243,3376,0.927,3377,0.243,3378,1.653,3379,1.742,3380,1.931,3381,0.222,3382,0.222,3383,0.222,3384,0.479,3385,0.243,3386,0.243,3387,0.243,3388,0.243,3389,0.243,3390,0.243,3391,0.243,3392,0.243,3393,0.243,3394,0.243,3395,1.14,3396,0.222,3397,0.262,3398,0.516,3399,0.772,3400,0.243,3401,0.243,3402,0.222,3403,0.243,3404,0.243,3405,0.243,3406,0.243,3407,0.243,3408,0.262,3409,0.706,3410,1.082,3411,0.184,3412,0.222,3413,0.761,3414,0.516,3415,0.222,3416,0.262,3417,0.262,3418,0.262,3419,0.262,3420,0.262,3421,0.262,3422,0.262,3423,0.262,3424,0.262,3425,0.262,3426,0.262,3427,0.516,3428,0.262,3429,0.262,3430,0.262,3431,0.262,3432,0.262,3433,0.262,3434,0.262,3435,0.262,3436,0.262,3437,0.262,3438,0.262,3439,0.262,3440,0.262,3441,0.262,3442,0.262,3443,0.262,3444,0.262,3445,0.262,3446,0.262,3447,0.262,3448,0.262,3449,0.262,3450,0.262,3451,0.262,3452,0.262,3453,0.262,3454,0.262,3455,0.262,3456,0.262,3457,0.262,3458,0.262,3459,0.262,3460,0.262,3461,0.262,3462,0.262,3463,0.262,3464,0.262,3465,0.262,3466,0.262,3467,0.262,3468,0.262,3469,0.262,3470,0.262,3471,0.262,3472,0.262,3473,0.262,3474,0.262,3475,0.262,3476,0.262,3477,0.262,3478,0.262,3479,0.262,3480,0.262,3481,0.761,3482,0.761,3483,0.706,3484,0.516,3485,0.262,3486,0.262,3487,0.262,3488,0.262,3489,0.262,3490,0.262,3491,0.516,3492,0.262,3493,0.262,3494,0.262,3495,0.262,3496,1.668,3497,0.516,3498,0.262,3499,0.262,3500,0.194,3501,0.516,3502,0.262,3503,0.262,3504,0.262,3505,0.262,3506,0.516,3507,0.516,3508,0.516,3509,0.516,3510,0.516,3511,0.516,3512,0.761,3513,2.633,3514,0.516,3515,0.589,3516,1.278,3517,0.761,3518,0.516,3519,0.761,3520,0.262,3521,0.262,3522,0.516,3523,0.516,3524,0.999,3525,0.262,3526,0.262,3527,0.262,3528,0.262,3529,0.262,3530,0.262,3531,0.262,3532,0.262,3533,0.262,3534,0.262,3535,0.262,3536,0.262,3537,0.262,3538,0.262,3539,0.262,3540,1.229,3541,0.262,3542,0.516,3543,0.516,3544,0.516,3545,0.262,3546,1.347,3547,0.516,3548,0.516,3549,0.262,3550,0.516,3551,0.516,3552,0.262,3553,0.516,3554,0.262,3555,0.262,3556,0.262,3557,0.516,3558,0.516,3559,0.262,3560,0.262,3561,0.516,3562,0.262,3563,0.761,3564,0.262,3565,0.761,3566,0.262,3567,0.262,3568,0.516,3569,0.516,3570,0.262,3571,0.761,3572,0.262,3573,0.262,3574,0.262,3575,0.516,3576,0.262,3577,0.262,3578,0.479,3579,0.262,3580,0.262,3581,0.262,3582,0.262,3583,0.262,3584,0.262,3585,0.262,3586,0.516,3587,0.999,3588,0.479,3589,0.516,3590,0.262,3591,0.262,3592,0.761,3593,0.262,3594,0.262,3595,0.262,3596,0.262,3597,0.262,3598,0.262,3599,0.262,3600,0.262,3601,0.262,3602,0.262,3603,0.262,3604,0.262,3605,0.262,3606,0.516,3607,0.262,3608,0.927,3609,0.516,3610,0.516,3611,0.999,3612,0.999,3613,0.999,3614,0.761,3615,0.262,3616,0.761,3617,0.262,3618,0.516,3619,0.262,3620,0.262,3621,0.262,3622,0.262,3623,0.243,3624,0.262,3625,0.454,3626,0.516,3627,0.999,3628,0.262,3629,0.516,3630,0.262,3631,0.262,3632,0.516,3633,0.262,3634,0.262,3635,0.761,3636,1.229,3637,1.452,3638,0.761,3639,0.262,3640,0.262,3641,1.877,3642,1.452,3643,0.262,3644,0.262,3645,0.262,3646,0.262,3647,0.262,3648,0.262,3649,0.262,3650,0.262,3651,0.243,3652,0.262,3653,0.262,3654,0.262,3655,0.262,3656,0.262,3657,0.262,3658,0.262,3659,0.262,3660,0.262,3661,0.262,3662,0.262,3663,0.262,3664,1.452,3665,0.262,3666,0.262,3667,0.516,3668,0.262,3669,0.262,3670,0.479,3671,0.516,3672,0.479,3673,0.516,3674,0.516,3675,0.516,3676,0.516,3677,0.516,3678,0.516,3679,0.516,3680,0.262,3681,0.516,3682,0.243,3683,0.262,3684,0.761,3685,0.516,3686,0.262,3687,0.516,3688,0.262,3689,0.516,3690,0.243,3691,0.516,3692,0.243,3693,0.262,3694,0.516,3695,0.516,3696,0.262,3697,0.516,3698,0.516,3699,0.262,3700,0.761,3701,0.516,3702,0.454,3703,0.262,3704,0.516,3705,0.761,3706,0.516,3707,0.516,3708,0.761,3709,0.262,3710,0.262,3711,0.262,3712,0.516,3713,0.516,3714,0.516,3715,0.516,3716,0.262,3717,0.214,3718,0.761,3719,0.479,3720,0.262,3721,0.262,3722,0.262,3723,1.229,3724,0.516,3725,0.516,3726,0.516,3727,0.516,3728,0.262,3729,0.761,3730,0.262,3731,0.516,3732,0.999,3733,2.114,3734,0.999,3735,0.999,3736,0.262,3737,0.262,3738,0.262,3739,0.262,3740,1.229,3741,1.877,3742,0.194,3743,0.214,3744,0.262,3745,0.516,3746,0.516,3747,0.368,3748,0.262,3749,0.262,3750,0.262,3751,0.262,3752,0.262,3753,0.262,3754,0.262,3755,0.262,3756,0.262,3757,0.262,3758,1.229,3759,1.229,3760,0.262,3761,0.262,3762,0.761,3763,0.761,3764,0.262,3765,0.262,3766,0.262,3767,0.999,3768,1.229,3769,0.516,3770,0.231,3771,0.516,3772,0.761,3773,0.516,3774,0.761,3775,0.262,3776,0.761,3777,0.761,3778,0.262,3779,0.262,3780,0.262,3781,0.262,3782,0.262,3783,0.262,3784,0.262,3785,0.516,3786,0.262,3787,0.262,3788,0.262,3789,0.262,3790,0.262,3791,0.262,3792,0.516,3793,0.262,3794,0.761,3795,0.262,3796,0.516,3797,0.516,3798,0.262,3799,0.262,3800,0.262,3801,0.262,3802,0.262,3803,0.262,3804,0.262,3805,0.262,3806,0.262,3807,0.262,3808,0.262,3809,0.262,3810,0.262,3811,1.41,3812,0.262,3813,0.516,3814,0.516,3815,0.844,3816,0.516,3817,1.14,3818,0.516,3819,0.516,3820,0.516,3821,0.516,3822,0.516,3823,0.999,3824,0.761,3825,0.761,3826,0.761,3827,0.761,3828,0.761,3829,0.761,3830,0.516,3831,0.516,3832,0.479,3833,0.516,3834,0.479,3835,0.516,3836,0.243,3837,0.243,3838,1.229,3839,0.262,3840,0.516,3841,0.262,3842,0.262,3843,0.516,3844,0.262,3845,0.761,3846,0.262,3847,0.516,3848,0.262,3849,0.516,3850,0.516,3851,0.262,3852,0.262,3853,0.262,3854,0.262,3855,0.262,3856,0.262,3857,0.262,3858,0.516,3859,0.516,3860,0.262,3861,0.262,3862,0.262,3863,0.262,3864,0.262,3865,0.262,3866,0.262,3867,0.262,3868,0.262,3869,0.262,3870,0.262,3871,0.262,3872,0.262,3873,0.243,3874,0.516,3875,0.243]],["component/73",[1,0.4]],["title/74-1",[586,32.698]],["name/74-1",[]],["text/74-1",[]],["component/74-1",[]],["title/74",[1,13.477,11,24.768,488,37.228,489,34.895]],["name/74",[1,0.368,11,0.677,586,0.626]],["text/74",[1,2.37,8,2.17,11,3.398,16,4.629,24,2.816,35,4.794,40,3.616,52,2.818,95,6.338,99,4.478,125,5.915,158,2.377,176,1.654,205,4.258,231,3.436,241,3.503,247,1.872,265,3.128,306,2.883,311,4.013,326,4.927,387,3.806,389,5.107,409,2.48,463,4.273,489,3.503,568,6.436,609,3.854,622,4.858,640,5.839,644,4.478,655,3.036,681,7.476,1064,4.678,1344,5.471,1465,6.376,1543,5.891,1901,5.915,1904,6.719,1905,5.745,1910,6.376,1911,5.599,2122,6.12,3876,7.241,3877,7.241,3878,7.241]],["component/74",[1,0.4]],["title/75-1",[0,20.659,1853,56.923]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["title/75-2",[2,13.383,247,14.347,324,17.376,438,18.216,439,29.347,534,26.849,644,34.319]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["title/75-3",[13,15.541,247,14.347,324,17.376,422,31.941,438,18.216,439,29.347,534,26.849]],["name/75-3",[]],["text/75-3",[]],["component/75-3",[]],["title/75-4",[8,12.169,247,14.347,326,24.257,384,26.208,591,18.35,754,24.161,1575,33.653]],["name/75-4",[]],["text/75-4",[]],["component/75-4",[]],["title/75-5",[247,18.647,252,23.391,515,28.808,593,27.303]],["name/75-5",[]],["text/75-5",[]],["component/75-5",[]],["title/75-6",[109,33.903,215,39.688,1982,52.348,3879,60.957]],["name/75-6",[]],["text/75-6",[]],["component/75-6",[]],["title/75",[247,18.647,381,33.441,439,38.142,534,34.895]],["name/75",[381,0.715,439,0.815,534,0.746,1927,1.049]],["text/75",[0,0.313,1,1.497,2,0.329,6,0.566,8,2.518,11,1.197,13,0.382,14,0.786,15,0.535,18,1.542,19,0.522,20,2.368,24,1.623,25,0.639,26,1.038,27,0.853,28,1.192,36,0.929,39,0.588,52,0.531,54,0.678,56,0.917,57,2.058,63,0.678,66,1.081,74,0.968,77,2.142,87,1.089,89,0.746,96,0.862,108,0.639,109,1.18,110,0.639,115,0.736,119,0.612,128,0.583,133,0.597,154,2.296,158,0.824,160,1.999,162,1.717,163,0.768,166,0.462,168,2.088,169,1.764,176,0.574,177,0.599,187,1.215,192,1.509,200,1.031,201,0.63,202,2.318,203,2.982,210,0.991,215,5.647,219,0.657,227,1.093,231,1.192,232,0.604,235,2.986,236,3.06,238,1.312,239,1.512,243,0.639,244,1.01,245,0.542,247,2.738,248,1.24,252,2.599,255,0.678,259,0.581,271,0.854,278,0.581,283,1.229,296,1.073,299,2.538,304,0.995,310,1.106,312,2.771,317,0.609,324,1.584,326,2.492,333,0.627,342,1.176,345,0.533,360,4.778,363,0.544,369,2.318,376,1.056,381,2.643,382,1.115,384,2.389,386,1.379,389,0.705,396,0.751,403,0.893,408,0.636,409,0.468,413,1.402,416,0.792,419,2.978,420,0.709,421,1.308,422,0.786,428,2.597,437,6.052,438,3.769,439,6.583,441,0.882,442,1.24,455,1.363,460,2.132,466,0.689,474,1.17,481,0.599,483,3.295,494,0.523,500,1.679,511,0.614,515,1.393,529,2.211,531,0.667,534,5.33,546,1.555,549,0.648,565,0.984,576,0.562,577,2.492,583,0.786,591,0.451,593,0.517,599,0.661,600,2.407,601,0.648,604,1.081,618,1.393,624,1.361,625,1.663,626,0.768,634,2.023,644,2.156,649,1.253,650,1.623,657,0.82,660,0.553,661,1.372,662,0.636,663,1.469,664,1.569,669,0.619,678,0.678,684,0.727,685,1.919,688,1.434,689,1.467,698,1.221,717,0.727,720,0.577,725,1.26,727,1.3,729,2.791,730,3.266,732,0.844,733,0.786,735,2.538,751,0.718,754,3.148,759,2.795,802,1.586,807,2.435,821,1.685,838,0.78,840,1.482,895,0.549,897,0.762,911,0.503,931,0.853,936,0.916,970,1.056,981,0.689,1078,0.828,1088,1.115,1123,0.862,1154,0.751,1278,0.774,1293,0.893,1327,0.904,1345,0.974,1350,0.63,1369,0.681,1390,0.774,1392,0.862,1393,0.651,1409,1.482,1457,0.882,1458,0.943,1460,0.844,1461,0.806,1476,0.957,1480,1.139,1500,1.281,1575,2.114,1610,0.904,1614,1.685,1646,1.791,1648,0.929,1693,1.083,1794,0.882,1798,1.202,1853,0.862,1891,1.115,1946,0.943,1957,1.01,1958,1.032,1960,1.942,1980,1.115,1982,6.062,1983,1.992,2172,0.836,2659,0.957,3259,1.115,3515,1.056,3879,2.122,3880,1.267,3881,1.083,3882,1.115,3883,1.267,3884,1.365,3885,1.365,3886,1.202,3887,5.298,3888,1.202,3889,2.122,3890,1.154,3891,2.122,3892,1.154,3893,1.115,3894,1.115,3895,1.154,3896,1.154,3897,2.33,3898,1.267,3899,3.235,3900,2.848,3901,1.267,3902,1.115,3903,1.365,3904,1.267,3905,2.33,3906,2.33,3907,2.33,3908,1.267]],["component/75",[1,0.4]],["title/76-1",[0,20.659,1853,56.923]],["name/76-1",[]],["text/76-1",[]],["component/76-1",[]],["title/76-2",[2,14.497,202,16.085,203,20.697,247,15.542,438,19.732,439,31.79]],["name/76-2",[]],["text/76-2",[]],["component/76-2",[]],["title/76-3",[5,28.329,8,14.38,154,20.819,500,25.442,727,24.456]],["name/76-3",[]],["text/76-3",[]],["component/76-3",[]],["title/76-4",[9,26.924,200,24.672,203,20.697,247,15.542,438,19.732,439,31.79]],["name/76-4",[]],["text/76-4",[]],["component/76-4",[]],["title/76-5",[201,27.748,203,20.697,247,15.542,438,19.732,439,31.79,1686,32.41]],["name/76-5",[]],["text/76-5",[]],["component/76-5",[]],["title/76-6",[8,12.169,247,14.347,326,24.257,384,26.208,754,24.161,1575,33.653,2005,34.319]],["name/76-6",[]],["text/76-6",[]],["component/76-6",[]],["title/76",[202,17.546,203,22.577,247,16.953,381,30.404,439,34.678]],["name/76",[203,0.531,381,0.715,439,0.815,1927,1.049]],["text/76",[0,0.881,2,0.528,5,0.947,6,0.909,8,2.267,9,0.981,18,0.668,20,1.258,24,0.624,25,1.025,26,2.121,28,2.435,36,1.491,52,0.853,54,1.908,55,1.06,56,1.011,66,1.654,84,1.928,87,0.95,110,1.025,128,0.936,154,3.282,158,2.025,160,2.163,162,2.447,163,2.161,168,2.986,187,1.859,192,0.764,200,3.417,201,3.844,202,1.878,203,4.116,210,1.59,214,0.869,215,4.866,219,1.055,235,2.261,236,2.318,237,0.906,238,1.446,239,1.667,245,1.525,247,2.744,252,2,276,1.071,278,0.932,281,1.66,283,1.81,298,1.251,312,2.099,323,1.181,326,2.243,333,1.007,342,2.08,360,4.367,363,0.872,369,0.81,374,1.513,381,2.38,384,2.913,386,2.03,396,1.206,413,0.881,421,0.822,428,0.998,437,5.929,438,4.178,439,6.731,440,1.694,441,2.482,442,2.534,455,2.086,460,1.437,481,2.252,483,1.869,494,0.84,500,2.998,511,0.985,515,2.463,529,0.958,565,0.858,576,1.583,594,2.23,599,1.06,601,1.04,624,1.5,634,1.271,649,1.918,660,0.887,670,4.893,689,0.922,720,2.964,727,2.3,728,2.427,729,3.429,730,2.092,732,1.355,733,1.261,751,1.151,754,1.673,759,1.415,767,1.432,797,1.415,799,3.939,802,2.427,807,1.055,821,2.578,838,1.251,840,1.293,897,2.145,911,0.808,970,1.694,1088,1.79,1123,1.384,1154,1.206,1304,2.913,1327,1.451,1369,1.093,1392,1.384,1457,1.415,1458,1.513,1476,1.536,1480,3.504,1575,2.33,1616,4.477,1686,1.181,1693,1.738,1737,2.74,1788,1.694,1794,1.415,1853,1.384,1891,1.79,1951,1.694,1953,1.738,1958,1.655,1960,2.971,1982,4.477,1983,4.893,2005,1.355,2172,1.342,2892,1.694,3294,3.384,3515,1.694,3887,7.038,3888,1.929,3889,3.248,3890,1.852,3891,3.248,3892,1.852,3893,4.193,3894,4.193,3895,1.852,3896,1.852,3900,1.79,3902,3.139,3909,3.384,3910,3.384,3911,2.191,3912,3.384,3913,3.248]],["component/76",[1,0.4]],["title/77-1",[586,32.698]],["name/77-1",[]],["text/77-1",[]],["component/77-1",[]],["title/77",[247,20.716,381,37.153,439,42.375]],["name/77",[381,0.914,439,1.042,586,0.626]],["text/77",[202,2.949,203,3.795,247,3.341,381,5.992,439,6.834,534,5.333]],["component/77",[1,0.4]],["title/78-1",[0,20.659,1853,56.923]],["name/78-1",[]],["text/78-1",[]],["component/78-1",[]],["title/78-2",[38,15.674,54,32.551,214,26.019,529,28.663,1008,38.051]],["name/78-2",[]],["text/78-2",[]],["component/78-2",[]],["title/78-3",[1,12.253,25,30.682,169,26.727,219,31.569,1009,42.361]],["name/78-3",[]],["text/78-3",[]],["component/78-3",[]],["title/78-4",[1,11.233,2,14.497,25,28.127,168,17.362,214,23.853,911,22.161]],["name/78-4",[]],["text/78-4",[]],["component/78-4",[]],["title/78-5",[1,12.253,5,28.329,25,30.682,214,26.019,219,31.569]],["name/78-5",[]],["text/78-5",[]],["component/78-5",[]],["title/78-6",[8,14.38,9,29.369,25,30.682,214,26.019,219,31.569]],["name/78-6",[]],["text/78-6",[]],["component/78-6",[]],["title/78-7",[38,14.369,202,16.085,214,23.853,219,28.941,358,39.305,1686,32.41]],["name/78-7",[]],["text/78-7",[]],["component/78-7",[]],["title/78",[25,30.682,214,26.019,215,36.084,219,31.569,247,16.953]],["name/78",[20,0.645,214,0.782,586,0.626]],["text/78",[0,0.481,1,1.775,2,0.506,5,0.907,8,2.16,9,0.94,11,0.721,15,1.45,16,1.732,18,0.64,19,1.896,20,1.959,24,2.315,25,6.114,28,0.996,33,2.812,38,2.749,39,0.903,52,1.44,54,4.038,56,0.552,57,0.689,66,2.136,68,1.042,72,1.524,74,0.809,83,2.595,93,2.7,96,2.337,100,0.903,110,0.982,111,2.45,119,0.94,126,3.01,139,1.147,141,1.326,154,0.666,157,1.401,158,0.689,161,2.097,164,1.493,168,3.322,169,1.508,175,0.973,176,0.845,177,0.921,178,0.713,188,1.147,192,1.291,200,0.862,202,2.315,203,0.723,205,2.575,213,1.449,214,5.278,215,4.761,216,1.39,218,1.239,219,6.259,228,0.856,231,2.355,232,2.647,235,1.631,236,1.672,238,1.393,239,2.595,245,0.833,247,1.547,258,0.948,259,2.112,271,0.713,276,2.426,283,1.305,291,0.925,299,2.763,300,1.428,303,0.973,304,1.056,312,0.859,324,0.657,325,1.665,342,0.708,347,1.09,357,1.356,358,4.463,401,1.155,403,3.245,407,1.155,408,0.978,409,0.719,413,1.488,418,1.553,422,1.208,428,0.956,430,1.18,431,5.576,432,1.11,434,3.128,436,1.273,438,1.215,456,0.969,461,1.25,470,1.18,472,1.117,473,2.686,478,1.774,482,1.553,494,0.804,515,2.39,527,1.326,529,4.776,534,1.016,541,0.918,543,2.88,546,0.936,566,1.488,577,0.918,604,2.136,623,3.783,626,1.18,669,0.952,703,2.232,730,0.856,751,1.945,781,1.847,782,2.936,783,2.936,784,2.936,785,2.936,822,2.45,823,1.341,911,1.364,1008,1.218,1009,1.356,1067,1.472,1149,1.356,1154,1.155,1202,1.553,1203,1.25,1216,1.341,1282,2.165,1315,1.948,1317,1.373,1457,2.391,1458,4.131,1461,2.184,1462,1.948,1482,1.623,1571,1.326,1601,1.472,1610,1.39,1615,1.285,1686,1.132,1788,3.838,1834,1.553,1853,1.326,1967,3.602,1971,3.838,1972,1.774,1974,4.37,2107,1.715,2271,1.623,3409,1.948,3914,1.948,3915,2.099,3916,2.099,3917,6.633,3918,2.099,3919,1.623,3920,3.434]],["component/78",[1,0.4]],["title/79",[1,10.37,8,12.169,188,30.325,306,22.092,460,20.758,660,22.464,3921,55.49]],["name/79",[188,1.493,660,1.106]],["text/79",[26,4.598,176,2.541,205,4.787,306,4.428,386,4.4,492,8.825,603,6.951,1044,8.231]],["component/79",[1,0.4]],["title/80-1",[0,11.812,63,25.581,326,22.525,487,22.093,503,31.554,1543,30.682,1642,33.694,2483,38.129]],["name/80-1",[]],["text/80-1",[]],["component/80-1",[]],["title/80",[303,27.872,326,26.276,487,25.772,503,36.808,1642,39.305,2483,44.479]],["name/80",[3922,4.451]],["text/80",[0,1.604,6,1.38,8,0.73,11,2.609,13,0.521,15,1.303,16,0.871,18,0.567,19,1.271,28,0.884,38,0.445,40,2.777,52,0.725,56,1.186,63,1.652,66,1.941,75,1.306,84,1.67,91,0.888,93,0.736,99,2.058,100,1.432,121,1.176,128,3.468,129,1.249,157,1.26,162,1.79,168,0.538,176,0.425,192,1.161,193,2.521,202,0.498,227,0.811,231,1.579,238,1.252,247,1.166,251,0.991,253,0.852,261,2.462,265,0.804,270,1.039,271,1.131,281,1.437,294,2.156,299,3.076,303,5.214,326,5.11,342,0.628,361,1.109,380,3.359,384,1.571,386,0.736,403,1.217,404,1.44,423,4.677,428,1.516,438,3.067,451,1.586,460,0.697,462,0.919,464,1.454,472,0.991,481,3.072,486,2.101,487,3.257,497,5.448,503,4.652,517,1.477,523,1.09,531,2.204,533,1.477,535,1.249,553,1.055,565,1.303,566,0.749,591,0.616,593,0.705,596,0.919,597,0.997,606,2.848,624,0.727,640,1.964,661,1.018,662,0.867,676,1.964,677,5.417,703,0.837,744,0.746,754,0.811,774,2.914,788,4.029,822,7.074,840,1.099,869,2.849,873,0.852,875,2.71,911,0.686,938,1.129,1038,3.939,1178,4.229,1203,1.109,1278,1.055,1353,1.351,1395,3.487,1480,1.509,1487,1.119,1494,2.462,1543,3.753,1627,2.232,1642,7.24,1667,1.728,1669,1.521,1676,1.217,1709,4.494,1731,2.818,1763,1.286,1764,5.551,1800,1.9,1804,1.728,1810,6.633,1811,3.981,1815,2.176,1934,1.64,1965,2.333,1997,0.973,2053,4.874,2071,1.407,2109,2.718,2119,1.521,2461,6.207,2483,5.622,2651,1.521,2702,2.101,3081,1.64,3245,1.64,3546,3.088,3608,1.728,3682,5.091,3742,5.622,3747,3.911,3923,5.091,3924,8.576,3925,1.862,3926,1.64,3927,3.088,3928,1.862,3929,1.862,3930,3.088,3931,3.088,3932,3.327,3933,1.862,3934,1.862,3935,1.862,3936,1.862,3937,1.862,3938,1.862,3939,1.862,3940,1.728,3941,3.327,3942,3.327,3943,1.64,3944,1.286,3945,1.862,3946,1.64,3947,1.862,3948,1.862,3949,4.51,3950,1.862,3951,6.303,3952,6.303,3953,1.477,3954,1.862,3955,1.862,3956,1.862,3957,1.862,3958,3.088,3959,2.812,3960,1.862,3961,1.862,3962,1.862,3963,1.862,3964,1.862,3965,1.862,3966,3.327,3967,1.862,3968,1.862,3969,1.862,3970,3.327,3971,7.598,3972,1.521,3973,1.574,3974,1.862,3975,1.862,3976,1.862,3977,1.862,3978,1.862,3979,1.862,3980,1.862,3981,1.862,3982,1.862,3983,1.862,3984,1.862,3985,1.862,3986,1.862,3987,1.862,3988,1.862,3989,1.862,3990,1.862,3991,1.862,3992,1.862,3993,3.327,3994,1.862,3995,1.862,3996,3.327,3997,1.862,3998,1.862,3999,1.862,4000,1.862,4001,1.862,4002,1.862]],["component/80",[1,0.4]],["title/81-1",[0,18.366,172,28.405,304,22.856]],["name/81-1",[]],["text/81-1",[]],["component/81-1",[]],["title/81-2",[1,12.253,2,15.814,157,24.823,163,36.876,519,47.594]],["name/81-2",[]],["text/81-2",[]],["component/81-2",[]],["title/81-3",[13,22.44,68,39.777,1574,48.593]],["name/81-3",[]],["text/81-3",[]],["component/81-3",[]],["title/81-4",[1047,43.392,2118,62.227]],["name/81-4",[]],["text/81-4",[]],["component/81-4",[]],["title/81-5",[386,35.647,1050,43.827]],["name/81-5",[]],["text/81-5",[]],["component/81-5",[]],["title/81-6",[70,64.263,1052,47.967]],["name/81-6",[]],["text/81-6",[]],["component/81-6",[]],["title/81-7",[93,35.647,1054,53.192]],["name/81-7",[]],["text/81-7",[]],["component/81-7",[]],["title/81-8",[39,38.789,1056,56.318]],["name/81-8",[]],["text/81-8",[]],["component/81-8",[]],["title/81-9",[2136,61.32,2378,62.227]],["name/81-9",[]],["text/81-9",[]],["component/81-9",[]],["title/81-10",[1304,42.566,4003,65.418]],["name/81-10",[]],["text/81-10",[]],["component/81-10",[]],["title/81",[]],["name/81",[1,0.511,157,1.034]],["text/81",[0,0.327,1,2.209,2,0.344,3,0.873,8,0.793,10,0.999,11,3.382,13,0.399,16,2.094,18,0.434,19,0.998,20,1.184,21,0.562,24,0.406,25,0.667,27,1.632,28,1.716,29,1.255,35,1.73,36,1.777,37,0.664,38,1.07,39,3.528,40,1.322,43,1.055,46,0.827,52,1.017,54,1.297,55,0.69,56,0.951,57,2.691,60,0.864,61,5.569,64,1.349,65,2.153,66,1.926,68,1.297,70,3.191,71,1.131,75,1.832,77,1.235,89,0.779,90,1.753,91,0.68,93,2.322,95,4.8,99,2.236,100,1.926,101,2.039,110,0.667,113,0.9,114,1.418,120,0.91,126,4.745,128,3.342,129,0.956,133,1.142,134,0.881,144,1.016,150,2.62,153,0.956,154,0.829,157,4.07,158,0.468,159,1.2,162,1.435,163,2.033,166,2.18,168,2.141,169,1.824,171,2.732,172,0.505,176,0.326,185,1.323,192,3.358,198,1.034,202,1.397,209,1.516,215,0.784,218,0.841,227,1.574,228,1.474,231,3.059,233,1.862,235,0.628,236,0.644,237,0.589,238,2.21,245,2.071,247,1.518,248,2.21,249,1.077,252,1.173,259,1.904,264,1.65,265,2.785,268,0.856,269,1.584,276,0.697,281,0.616,285,2.796,288,1.222,291,1.593,292,1.034,298,0.814,302,1.277,303,2.075,304,0.407,306,0.567,310,0.628,311,0.79,316,0.774,324,0.446,326,3.241,329,0.932,333,0.655,334,0.956,340,1.077,345,3.563,346,1.516,354,0.873,362,2.134,380,1.753,381,0.661,383,0.864,384,4.546,386,1.43,389,0.736,396,2.873,398,0.723,401,0.784,402,1.65,403,1.708,408,0.664,409,0.488,411,0.984,413,0.573,415,1.399,421,0.535,430,0.802,432,1.381,445,0.998,455,0.774,460,0.977,486,0.9,487,1.919,489,2.526,490,1.055,494,0.546,495,0.873,497,1.753,500,0.553,501,1.356,502,1.584,503,4.26,504,4.597,506,0.932,515,0.569,519,6.987,524,0.814,541,1.142,542,1.708,552,2.193,565,0.558,566,0.573,604,0.613,605,1.205,606,2.324,608,0.796,618,0.569,631,1.016,643,1.687,650,0.535,652,0.768,655,1.516,661,0.779,662,0.664,684,1.39,693,0.849,701,2.291,702,0.841,720,0.602,725,0.715,748,0.676,754,1.574,780,0.744,793,1.016,815,1.131,889,1.381,905,1.016,931,0.891,981,1.318,1038,0.891,1047,0.686,1049,0.873,1050,0.693,1052,0.759,1054,0.841,1056,0.891,1060,3.271,1064,4.494,1068,1.034,1115,0.97,1149,0.921,1150,0.91,1183,1.323,1206,1.102,1209,0.768,1213,1.131,1220,0.744,1244,2.536,1253,1.034,1304,2.114,1308,0.984,1331,0.984,1369,2.234,1395,1.102,1416,1.255,1420,1.034,1432,0.68,1437,0.779,1492,0.891,1501,1.102,1506,1.862,1509,1.205,1543,0.849,1544,1.077,1546,1.255,1550,1.055,1571,1.65,1574,1.584,1612,2.873,1674,1.896,1701,0.827,1767,0.944,1811,4.682,1822,1.832,1835,1.016,1836,3.461,2050,2.732,2053,1.102,2095,2.3,2115,2.134,2118,1.803,2136,0.97,2204,0.856,2315,1.205,2378,2.496,2653,1.205,2812,0.9,2969,1.323,3199,1.102,3204,1.323,3207,1.205,3219,1.164,3227,1.102,3411,0.999,3412,1.205,3747,1.016,3923,2.424,3927,1.323,4003,1.034,4004,1.255,4005,1.425,4006,1.425,4007,1.255,4008,1.425,4009,1.255,4010,3.616,4011,1.425,4012,2.612,4013,1.425,4014,1.425,4015,1.425,4016,1.205,4017,1.832,4018,1.425,4019,1.425,4020,1.255,4021,1.425,4022,1.425,4023,1.323,4024,1.425,4025,1.425,4026,1.425,4027,1.164]],["component/81",[1,0.4]],["title/82-1",[586,32.698]],["name/82-1",[]],["text/82-1",[]],["component/82-1",[]],["title/82-2",[412,49.254,573,60.473]],["name/82-2",[]],["text/82-2",[]],["component/82-2",[]],["title/82-3",[114,48.92,342,30.403]],["name/82-3",[]],["text/82-3",[]],["component/82-3",[]],["title/82-4",[172,31.951,744,36.12]],["name/82-4",[]],["text/82-4",[]],["component/82-4",[]],["title/82-5",[304,22.856,369,29.624,1271,50.605]],["name/82-5",[]],["text/82-5",[]],["component/82-5",[]],["title/82",[4028,95.571]],["name/82",[267,0.787,380,0.772,828,1.666]],["text/82",[8,2.402,38,1.382,40,2.113,56,2.219,74,2.229,158,1.897,159,2.656,172,2.991,176,1.32,229,3.505,245,2.293,247,1.494,252,2.736,255,2.869,267,4.376,271,1.965,291,2.547,299,4.435,304,2.407,313,2.9,345,4.277,369,3.119,380,4.291,412,4.611,413,2.324,438,3.271,445,2.208,454,2.9,515,2.309,546,2.578,565,2.264,659,3.985,704,3.827,744,3.993,780,3.019,840,3.411,866,3.827,1081,3.878,1271,3.65,1304,2.73,1400,4.644,1687,3.827,1701,3.354,1766,3.779,1997,5.723,2354,4.885,2994,4.195,4028,5.364,4029,4.885,4030,5.364,4031,9.259,4032,5.09,4033,8.421,4034,5.364,4035,5.364,4036,7.131,4037,6.016,4038,7.829,4039,7.43,4040,7.131,4041,7.131,4042,7.131,4043,8.437]],["component/82",[1,0.4]],["title/83-1",[586,32.698]],["name/83-1",[]],["text/83-1",[]],["component/83-1",[]],["title/83-2",[412,49.254,573,60.473]],["name/83-2",[]],["text/83-2",[]],["component/83-2",[]],["title/83-3",[114,48.92,342,30.403]],["name/83-3",[]],["text/83-3",[]],["component/83-3",[]],["title/83-4",[172,31.951,744,36.12]],["name/83-4",[]],["text/83-4",[]],["component/83-4",[]],["title/83-5",[304,22.856,369,29.624,1271,50.605]],["name/83-5",[]],["text/83-5",[]],["component/83-5",[]],["title/83",[4044,81.708]],["name/83",[56,0.518,267,0.787,380,0.772]],["text/83",[0,0.611,1,0.498,6,1.106,8,1.308,24,1.297,30,1.29,38,1.089,40,0.975,46,1.547,54,2.261,56,2.27,84,1.338,111,1.766,114,1.447,122,1.297,133,3.083,159,1.226,168,0.77,172,2.114,176,0.609,205,1.148,214,1.808,229,1.617,245,1.058,252,0.865,255,1.324,267,4.712,271,0.906,276,1.303,277,3.194,281,3.423,288,2.132,291,2.007,293,1.126,299,3.732,304,2.462,306,1.062,307,3.85,313,1.338,315,3.442,333,2.094,342,1.537,345,2.328,369,1.684,380,3.103,404,2.062,411,4.87,412,4.329,413,1.072,423,1.22,428,2.075,438,1.495,450,3.154,451,1.271,454,1.338,516,1.766,520,1.602,522,4.012,544,3.522,546,1.189,565,1.784,568,1.523,573,1.789,582,2.909,624,1.041,659,2.151,701,1.17,727,2.224,739,6.307,744,2.39,780,1.393,828,2.254,840,2.689,866,1.766,961,5.534,962,2.475,1105,4.612,1155,2.348,1158,1.789,1175,8.651,1205,3.195,1271,1.684,1400,1.931,1480,2.705,1527,1.901,1609,4.524,1687,1.766,1706,2.116,1730,6.285,1731,1.666,1766,1.744,1821,2.979,1862,3.115,1997,2.38,2144,3.442,2161,2.763,2178,1.841,2182,3.016,2354,2.254,2538,2.179,2571,5.47,4031,5.04,4032,4.012,4033,2.254,4034,2.475,4035,2.475,4036,2.254,4037,4.252,4040,3.85,4041,3.85,4042,3.85,4044,2.116,4045,2.667,4046,9.22,4047,2.348,4048,2.667,4049,2.667,4050,2.667,4051,4.555,4052,2.254,4053,2.254,4054,2.254,4055,4.012,4056,4.555,4057,7.922,4058,4.228,4059,4.555,4060,4.555,4061,4.228,4062,4.228,4063,7.053,4064,4.555,4065,2.667,4066,2.667,4067,2.667,4068,2.667,4069,2.667,4070,2.667,4071,2.667,4072,2.667,4073,2.667,4074,2.667,4075,2.667,4076,2.667,4077,2.667,4078,5.963,4079,2.667,4080,4.555,4081,5.963,4082,2.667,4083,2.667,4084,4.555,4085,2.667,4086,4.555,4087,2.667,4088,2.667,4089,2.667,4090,2.667,4091,2.475,4092,2.475,4093,2.667,4094,2.254,4095,2.667,4096,2.667,4097,2.667,4098,2.667,4099,2.667]],["component/83",[1,0.4]],["title/84-1",[1310,95.571]],["name/84-1",[]],["text/84-1",[]],["component/84-1",[]],["title/84-2",[586,32.698]],["name/84-2",[]],["text/84-2",[]],["component/84-2",[]],["title/84-3",[63,44.742,151,42.768]],["name/84-3",[]],["text/84-3",[]],["component/84-3",[]],["title/84-4",[114,48.92,1393,42.973]],["name/84-4",[]],["text/84-4",[]],["component/84-4",[]],["title/84-5",[324,28.222,4100,90.127]],["name/84-5",[]],["text/84-5",[]],["component/84-5",[]],["title/84-6",[650,33.815,1304,42.566]],["name/84-6",[]],["text/84-6",[]],["component/84-6",[]],["title/84-7",[47,49.34]],["name/84-7",[]],["text/84-7",[]],["component/84-7",[]],["title/84-8",[1271,65.042]],["name/84-8",[]],["text/84-8",[]],["component/84-8",[]],["title/84-9",[4101,84.132]],["name/84-9",[]],["text/84-9",[]],["component/84-9",[]],["title/84-10",[170,38.789,267,36]],["name/84-10",[]],["text/84-10",[]],["component/84-10",[]],["title/84-11",[267,32.005,409,27.445,1862,41.856]],["name/84-11",[]],["text/84-11",[]],["component/84-11",[]],["title/84-12",[4102,87.043]],["name/84-12",[]],["text/84-12",[]],["component/84-12",[]],["title/84-13",[170,38.789,267,36]],["name/84-13",[]],["text/84-13",[]],["component/84-13",[]],["title/84-14",[267,32.005,409,27.445,1862,41.856]],["name/84-14",[]],["text/84-14",[]],["component/84-14",[]],["title/84-15",[4103,87.043]],["name/84-15",[]],["text/84-15",[]],["component/84-15",[]],["title/84-16",[170,38.789,267,36]],["name/84-16",[]],["text/84-16",[]],["component/84-16",[]],["title/84-17",[267,32.005,409,27.445,1862,41.856]],["name/84-17",[]],["text/84-17",[]],["component/84-17",[]],["title/84",[412,43.788,2161,48.593,2182,53.055]],["name/84",[586,1.413]],["text/84",[1,0.778,7,2.984,8,2.21,11,1.15,17,0.805,19,1.279,20,0.426,24,1.186,30,4.875,31,1.71,37,0.606,38,2.267,39,1.034,40,2.719,47,0.624,49,1.553,54,3.015,56,1.956,61,0.624,63,0.646,64,1.821,84,1.206,87,0.565,91,0.621,93,1.931,97,1.444,101,1.095,107,0.552,108,1.566,114,0.707,122,1.169,133,1.821,138,2.459,147,0.68,154,0.413,157,1.267,158,0.427,159,1.104,162,1.328,166,1.651,168,2.354,169,0.98,170,1.034,172,0.462,173,2.246,176,1.259,178,0.442,182,0.609,192,0.838,193,0.598,200,0.534,202,1.115,214,1.328,227,1.046,229,0.79,238,0.49,245,0.517,247,0.621,250,0.899,252,1.788,254,0.548,255,1.193,258,0.588,260,2.667,265,1.8,267,4.523,271,2.77,277,0.697,278,1.773,280,0.697,281,1.038,283,0.459,286,2.05,288,1.566,291,1.059,293,0.55,298,1.912,299,0.973,304,2.325,306,0.957,311,1.332,313,1.68,314,2.745,333,1.104,342,1.86,345,0.508,363,1.333,369,0.889,379,0.55,380,2.753,383,2.96,404,1.007,409,2.081,411,2.876,412,6.351,413,0.966,415,2.231,417,0.702,421,2.467,423,2.233,428,1.525,437,1.472,438,2.564,454,2.09,455,0.707,460,0.487,470,0.732,494,0.499,500,0.505,514,2.138,515,1.337,516,0.862,524,0.743,531,0.636,539,2.362,542,1.571,565,2.159,573,3.275,576,0.536,604,1.034,618,0.52,650,0.488,652,1.296,655,0.546,657,1.444,659,2.869,662,3.063,671,2.788,689,0.548,698,1.169,717,0.693,738,0.653,739,4.231,744,0.963,769,1.064,780,0.68,788,4.691,820,2.411,866,0.862,889,0.688,911,2.742,917,0.963,981,1.213,1032,0.913,1078,0.79,1105,1.571,1122,1.064,1134,0.928,1152,1.208,1154,2.292,1175,6.362,1205,2.347,1271,4.697,1304,2.869,1325,0.899,1328,0.672,1345,0.928,1350,0.601,1357,0.822,1385,1.033,1390,0.738,1393,0.621,1400,3.153,1409,0.768,1422,1.959,1426,1.206,1432,0.621,1438,1.817,1480,3.188,1560,1.659,1565,3.124,1609,1.372,1648,0.886,1697,1.431,1728,1.1,1730,1.907,1800,1.372,1862,4.08,1968,1.033,1997,4.569,2043,1.472,2144,0.984,2161,3.343,2170,0.797,2182,4.654,2184,1.033,2216,1.064,2299,0.945,2409,1.146,2564,1.362,2650,1.033,2893,2.948,2997,1.1,3358,0.79,3399,1.007,3702,2.116,3747,1.714,3946,1.146,4030,1.208,4038,1.208,4039,2.116,4040,2.031,4041,2.031,4042,2.031,4044,1.033,4102,1.1,4103,1.1,4104,1.302,4105,1.208,4106,1.302,4107,2.23,4108,1.302,4109,1.208,4110,3.774,4111,1.208,4112,1.208,4113,1.146,4114,1.208,4115,1.208,4116,1.146,4117,1.208,4118,1.302,4119,1.858,4120,1.302,4121,1.208,4122,1.302,4123,1.302,4124,1.208,4125,1.208,4126,1.208,4127,1.146,4128,1.208,4129,1.302,4130,1.302,4131,1.1,4132,1.302,4133,1.302,4134,1.1,4135,1.208,4136,1.208,4137,1.302,4138,1.302,4139,1.302,4140,1.302,4141,1.302,4142,1.302,4143,1.302,4144,1.302,4145,2.403,4146,2.948,4147,2.23,4148,1.302,4149,1.302,4150,1.302,4151,2.23,4152,2.23,4153,2.23,4154,2.23,4155,1.302,4156,1.302,4157,1.302,4158,1.302,4159,1.302,4160,1.302,4161,2.23,4162,2.23,4163,2.116,4164,1.302,4165,1.302]],["component/84",[1,0.4]],["title/85-1",[0,18.366,172,28.405,304,22.856]],["name/85-1",[]],["text/85-1",[]],["component/85-1",[]],["title/85-2",[2,19.324,324,25.09,409,27.445]],["name/85-2",[]],["text/85-2",[]],["component/85-2",[]],["title/85-3",[13,20.198,21,28.433,324,22.584,1024,30.13]],["name/85-3",[]],["text/85-3",[]],["component/85-3",[]],["title/85-4",[324,25.09,591,26.496,4166,65.457]],["name/85-4",[]],["text/85-4",[]],["component/85-4",[]],["title/85-5",[68,39.777,593,30.333,1574,48.593]],["name/85-5",[]],["text/85-5",[]],["component/85-5",[]],["title/85-6",[324,22.584,510,40.868,595,31.039,1400,30.575]],["name/85-6",[]],["text/85-6",[]],["component/85-6",[]],["title/85-7",[402,56.923,2227,49.95]],["name/85-7",[]],["text/85-7",[]],["component/85-7",[]],["title/85",[1,13.477,109,33.903,328,38.384,398,36.593]],["name/85",[586,1.413]],["text/85",[0,1.399,1,2.387,2,1.472,8,2.253,11,2.096,13,1.709,18,1.86,21,3.46,38,2.456,55,2.952,64,2.276,68,4.356,93,2.414,109,6.257,158,2.003,168,1.763,172,2.163,192,3.585,271,2.074,304,1.741,317,2.722,323,3.29,324,3.881,328,6.955,398,6.631,402,7.096,406,3.813,409,2.09,438,2.003,501,3.169,507,3.601,510,3.458,591,2.018,593,2.31,595,2.626,622,5.888,645,5.738,687,7.206,1024,2.549,1322,4.041,1400,2.587,1574,3.701,2118,6.059,2139,5.158,2227,3.382,2351,4.611,2903,4.351,4166,4.985]],["component/85",[1,0.4]],["title/86-1",[1038,64.351]],["name/86-1",[]],["text/86-1",[]],["component/86-1",[]],["title/86-2",[1,13.477,11,24.768,47,34.554,582,46.058]],["name/86-2",[]],["text/86-2",[]],["component/86-2",[]],["title/86-3",[1,13.477,47,34.554,490,53.365,582,46.058]],["name/86-3",[]],["text/86-3",[]],["component/86-3",[]],["title/86-4",[172,25.567,389,37.228,1067,50.576,4167,72.12]],["name/86-4",[]],["text/86-4",[]],["component/86-4",[]],["title/86",[170,34.484,172,28.405,389,41.359]],["name/86",[170,1.176,389,1.41]],["text/86",[1,1.503,8,1.188,11,4.435,19,2.069,22,4.424,24,1.542,25,3.763,57,2.64,93,2.142,109,2.546,114,4.365,126,3.284,128,3.435,150,2.717,154,2.553,166,1.831,168,1.564,170,2.331,178,1.841,202,1.449,215,5.279,219,3.872,238,3.995,239,4.604,246,2.57,295,2.358,317,2.416,323,4.336,324,3.004,326,3.515,384,2.558,386,2.142,389,6.783,398,2.748,419,2.829,420,4.176,484,3.798,485,6.218,486,5.079,501,2.812,534,2.62,535,3.634,577,2.367,604,3.461,625,5.325,634,4.667,645,6.272,701,2.377,720,2.287,744,3.223,754,2.358,815,4.297,831,7.164,1067,3.798,1350,2.5,1369,2.703,1461,4.746,1549,3.634,1650,7.463,1843,6.57,1971,6.218,1996,4.769,2007,3.798,2106,3.316,2184,6.381,3815,4.577,3832,5.026,4168,5.415]],["component/86",[1,0.4]],["title/87-1",[172,31.951,304,25.71]],["name/87-1",[]],["text/87-1",[]],["component/87-1",[]],["title/87-2",[21,31.589,324,25.09,1024,33.474]],["name/87-2",[]],["text/87-2",[]],["component/87-2",[]],["title/87-3",[324,28.222,4166,73.629]],["name/87-3",[]],["text/87-3",[]],["component/87-3",[]],["title/87-4",[68,44.742,1574,54.659]],["name/87-4",[]],["text/87-4",[]],["component/87-4",[]],["title/87-5",[324,25.09,510,45.403,1400,33.968]],["name/87-5",[]],["text/87-5",[]],["component/87-5",[]],["title/87-6",[4169,79.631]],["name/87-6",[]],["text/87-6",[]],["component/87-6",[]],["title/87-7",[70,73.43]],["name/87-7",[]],["text/87-7",[]],["component/87-7",[]],["title/87-8",[490,76.202]],["name/87-8",[]],["text/87-8",[]],["component/87-8",[]],["title/87",[1,12.253,16,30.682,57,21.524,128,28.007,324,20.533]],["name/87",[586,1.413]],["text/87",[1,2.509,8,2.239,11,3.144,16,4.778,21,3.609,24,1.426,37,2.333,47,2.4,55,3.67,57,3.601,61,3.634,64,1.868,68,2.487,80,3.513,84,2.514,95,5.149,99,3.098,104,2.719,109,2.355,110,2.344,119,3.398,128,4.686,140,4.234,143,3.361,151,2.377,158,1.644,162,1.988,163,2.817,168,2.191,182,2.344,192,2.646,202,1.341,228,2.042,231,2.377,238,1.885,239,2.173,244,3.707,265,2.164,303,2.323,323,2.701,324,4.247,328,2.666,339,3.01,378,3.975,389,5.271,394,4.234,395,2.528,398,2.542,408,3.533,409,1.716,436,3.038,438,1.644,460,3.425,484,3.513,489,2.424,501,2.601,507,2.957,541,2.19,590,2.719,598,3.236,607,3.707,622,5.09,640,2.957,643,3.236,681,3.785,684,2.666,889,2.649,911,1.847,1247,3.199,1300,4.234,1543,2.983,1544,3.785,1554,4.412,1612,2.757,1622,2.797,1836,3.874,2166,3.874,4170,4.649,4171,5.01,4172,6.411,4173,4.649,4174,4.649]],["component/87",[1,0.4]],["title/88-1",[0,18.366,172,28.405,304,22.856]],["name/88-1",[]],["text/88-1",[]],["component/88-1",[]],["title/88-2",[2,19.324,324,25.09,409,27.445]],["name/88-2",[]],["text/88-2",[]],["component/88-2",[]],["title/88-3",[13,18.364,21,25.851,271,22.288,324,20.533,1024,27.394]],["name/88-3",[]],["text/88-3",[]],["component/88-3",[]],["title/88-4",[68,39.777,591,26.496,1574,48.593]],["name/88-4",[]],["text/88-4",[]],["component/88-4",[]],["title/88-5",[324,25.09,593,30.333,4166,65.457]],["name/88-5",[]],["text/88-5",[]],["component/88-5",[]],["title/88-6",[324,22.584,510,40.868,595,31.039,1400,30.575]],["name/88-6",[]],["text/88-6",[]],["component/88-6",[]],["title/88-7",[39,38.789,2227,49.95]],["name/88-7",[]],["text/88-7",[]],["component/88-7",[]],["title/88",[1,12.253,24,18.666,57,21.524,323,35.354,684,34.898]],["name/88",[586,1.413]],["text/88",[0,1.481,1,2.274,2,1.559,13,1.81,18,1.97,21,3.604,24,2.602,39,2.781,55,3.127,57,4.147,64,2.41,68,4.538,93,3.616,158,2.121,168,1.867,172,2.291,192,3.189,271,2.197,304,1.844,323,4.929,324,3.956,329,5.978,406,4.038,408,5.372,409,2.214,438,2.121,487,3.919,501,3.356,507,3.814,510,3.662,591,2.137,593,2.447,595,2.781,634,5.305,684,6.724,756,10.156,759,4.175,981,4.613,1024,2.7,1400,2.74,1461,6.806,1574,3.919,2227,3.582,2351,4.883,2903,4.608,3214,5.462,4166,5.28,4175,6.463]],["component/88",[1,0.4]],["title/89",[166,30.48,238,33.916]],["name/89",[166,0.924,238,1.028]],["text/89",[18,3.555,64,4.35,1278,6.609]],["component/89",[1,0.4]],["title/90",[38,21.544,2110,79.368]],["name/90",[38,0.653,2110,2.406]],["text/90",[18,3.555,64,4.35,1278,6.609]],["component/90",[1,0.4]],["title/91",[38,19.153,659,37.842,1461,47.289]],["name/91",[38,0.471,659,0.931,1461,1.163]],["text/91",[18,3.555,64,4.35,1278,6.609]],["component/91",[1,0.4]],["title/92",[38,19.153,80,56.19,1461,47.289]],["name/92",[38,0.471,80,1.382,1461,1.163]],["text/92",[18,3.555,64,4.35,1278,6.609]],["component/92",[1,0.4]],["title/93",[38,21.544,228,36.736]],["name/93",[38,0.653,228,1.114]],["text/93",[18,3.555,64,4.35,1278,6.609]],["component/93",[1,0.4]],["title/94",[38,21.544,124,60.473]],["name/94",[38,0.653,124,1.833]],["text/94",[18,3.555,64,4.35,1278,6.609]],["component/94",[1,0.4]],["title/95",[39,38.789,209,52.301]],["name/95",[586,1.413]],["text/95",[18,3.555,64,4.35,1278,6.609]],["component/95",[1,0.4]],["title/96",[57,29.586,684,47.967]],["name/96",[57,0.897,684,1.454]],["text/96",[18,3.555,64,4.35,1278,6.609]],["component/96",[1,0.4]],["title/97",[684,47.967,1498,64.263]],["name/97",[684,1.454,1498,1.948]],["text/97",[18,3.555,64,4.35,1278,6.609]],["component/97",[1,0.4]],["title/98",[21,31.589,39,34.484,63,39.777]],["name/98",[21,0.777,39,0.848,63,0.978]],["text/98",[18,3.555,64,4.35,1278,6.609]],["component/98",[1,0.4]],["title/99-1",[586,32.698]],["name/99-1",[]],["text/99-1",[]],["component/99-1",[]],["title/99-2",[61,38.388,138,26.496,288,37.492]],["name/99-2",[]],["text/99-2",[]],["component/99-2",[]],["title/99-3",[424,60.473,1062,58.932]],["name/99-3",[]],["text/99-3",[]],["component/99-3",[]],["title/99-4",[38,19.153,134,49.554,375,65.457]],["name/99-4",[]],["text/99-4",[]],["component/99-4",[]],["title/99-5",[80,56.19,659,37.842,1461,47.289]],["name/99-5",[]],["text/99-5",[]],["component/99-5",[]],["title/99-6",[166,30.48,238,33.916]],["name/99-6",[]],["text/99-6",[]],["component/99-6",[]],["title/99-7",[38,19.153,124,53.761,506,52.391]],["name/99-7",[]],["text/99-7",[]],["component/99-7",[]],["title/99-8",[4176,95.571]],["name/99-8",[]],["text/99-8",[]],["component/99-8",[]],["title/99-9",[39,34.484,60,48.593,64,29.885]],["name/99-9",[]],["text/99-9",[]],["component/99-9",[]],["title/99-10",[38,17.239,166,24.39,701,31.652,1060,36.593]],["name/99-10",[]],["text/99-10",[]],["component/99-10",[]],["title/99-11",[38,19.153,176,18.303,202,21.441]],["name/99-11",[]],["text/99-11",[]],["component/99-11",[]],["title/99-12",[113,56.923,531,44.049]],["name/99-12",[]],["text/99-12",[]],["component/99-12",[]],["title/99-13",[176,20.588,531,44.049]],["name/99-13",[]],["text/99-13",[]],["component/99-13",[]],["title/99-14",[510,51.071,1535,79.368]],["name/99-14",[]],["text/99-14",[]],["component/99-14",[]],["title/99-15",[283,31.779,1917,57.558]],["name/99-15",[]],["text/99-15",[]],["component/99-15",[]],["title/99-16",[1735,87.043]],["name/99-16",[]],["text/99-16",[]],["component/99-16",[]],["title/99-17",[238,30.152,4177,74.358,4178,61.956]],["name/99-17",[]],["text/99-17",[]],["component/99-17",[]],["title/99-18",[38,19.153,278,34.095,516,53.055]],["name/99-18",[]],["text/99-18",[]],["component/99-18",[]],["title/99-19",[166,27.097,278,34.095,4179,74.358]],["name/99-19",[]],["text/99-19",[]],["component/99-19",[]],["title/99-20",[278,41.986,4180,66.93,4181,72.12]],["name/99-20",[]],["text/99-20",[]],["component/99-20",[]],["title/99-21",[39,34.484,511,36.039,577,35.025]],["name/99-21",[]],["text/99-21",[]],["component/99-21",[]],["title/99-22",[191,66.689,4182,79.368]],["name/99-22",[]],["text/99-22",[]],["component/99-22",[]],["title/99",[1062,58.932,4183,90.127]],["name/99",[1062,1.786,4184,2.732]],["text/99",[1,2.169,6,0.408,7,0.484,8,2.264,10,1.299,16,1.227,18,0.564,19,3.093,20,2.175,21,1.305,23,0.781,24,0.747,25,0.461,31,1.33,33,0.558,36,0.67,37,0.863,38,3.087,39,4.15,40,1.641,44,1.103,46,1.075,49,0.636,54,0.489,56,0.487,57,0.323,60,0.597,61,1.586,62,0.832,63,1.951,64,2.717,65,0.586,66,1.692,72,1.344,74,0.38,77,0.336,80,1.299,89,1.012,91,1.579,92,1.211,93,0.389,94,0.68,96,0.622,100,1.129,101,0.448,104,0.534,107,0.417,109,0.871,110,0.461,111,3.9,112,0.761,113,3.451,115,0.999,116,0.914,119,0.83,123,0.781,125,2.142,126,3.032,130,2.404,131,1.26,132,0.661,133,0.43,134,5.153,138,2.196,139,1.012,150,0.929,151,1.571,154,0.313,158,1.087,160,0.345,166,2.464,168,0.956,175,0.487,176,2.459,178,0.335,182,0.461,184,0.69,187,0.476,191,1.37,192,0.343,195,0.332,202,1.95,204,0.497,205,2.152,214,1.314,215,0.542,216,1.226,218,3.707,225,1.565,226,1.719,227,1.142,228,1.831,231,2.372,232,0.436,233,1.87,238,2.363,241,0.896,243,0.461,245,0.391,246,1.571,247,0.255,248,0.486,250,0.68,252,0.319,253,0.45,258,0.445,259,0.788,263,0.761,264,0.622,265,1.431,273,0.636,275,2.332,276,0.905,278,2.325,280,0.992,283,0.653,284,1.344,285,0.761,286,0.603,288,2.339,291,0.816,292,0.715,293,0.416,294,0.387,295,0.429,296,0.42,302,1.282,304,0.281,311,2.771,314,0.554,317,0.439,319,0.586,323,0.531,333,1.522,334,0.661,337,1.17,343,3.039,345,0.384,357,0.636,360,0.486,363,0.737,367,0.867,368,1.469,369,1.66,372,1.513,373,0.781,375,3.669,380,0.386,383,2.008,386,0.389,393,1.103,400,1.565,401,0.542,404,0.761,405,1.26,406,1.157,408,0.863,409,0.337,413,0.396,417,0.531,419,0.514,423,0.45,424,3.013,426,3.202,430,0.554,433,1.513,434,0.832,442,0.915,445,0.708,457,0.652,462,1.635,466,0.497,471,0.591,477,2.799,487,0.422,488,0.508,494,1.269,496,0.527,501,0.511,506,2.165,511,1.489,515,0.393,516,1.737,520,5.139,523,1.084,524,0.562,531,2.195,536,3.073,541,0.43,542,1.211,544,0.761,545,0.591,546,0.439,547,0.69,565,0.725,566,1.806,572,0.644,576,0.405,577,1.146,584,1.469,585,0.69,599,0.476,605,0.832,623,0.546,643,1.197,644,2.777,649,0.491,652,0.531,655,0.413,659,0.465,660,0.399,662,1.222,665,0.576,678,0.489,701,1.971,703,0.443,717,0.524,726,0.615,727,0.367,728,0.622,778,1.183,793,0.702,802,0.622,805,0.511,820,0.486,873,0.847,886,0.644,887,0.629,889,0.521,890,0.69,909,1.399,911,0.363,931,0.615,950,2.263,951,0.576,981,0.497,1007,0.744,1024,1.383,1026,0.67,1039,2.603,1048,0.728,1049,1.134,1060,0.94,1061,1.075,1062,5.448,1069,1.631,1114,0.661,1149,1.197,1165,0.644,1169,1.811,1176,1.631,1177,0.69,1178,1.76,1181,1.904,1185,1.321,1186,1.631,1202,0.728,1210,1.197,1213,2.627,1221,0.761,1231,2.612,1237,1.469,1244,1.486,1254,0.867,1278,1.876,1295,0.702,1304,0.465,1306,0.804,1313,0.804,1325,0.68,1327,0.652,1328,2.318,1371,1.631,1383,0.636,1385,1.469,1390,1.049,1400,0.417,1419,0.761,1420,0.715,1422,0.576,1456,1.535,1461,2.32,1463,2.028,1464,0.832,1470,0.728,1480,0.447,1487,0.591,1541,0.68,1569,0.761,1571,0.622,1575,1.123,1658,1.656,1665,0.804,1715,0.867,1728,1.565,1735,0.832,1738,0.761,1794,1.197,1820,1.344,1835,1.321,1899,0.832,1905,0.781,1910,0.867,1917,0.629,1921,0.832,1946,0.68,1965,0.69,1988,0.629,2036,1.631,2050,1.982,2087,1.565,2091,1.719,2092,0.867,2112,5.829,2115,0.804,2143,0.804,2178,1.279,2207,0.914,2292,1.719,2315,0.832,2430,0.867,2525,0.914,2605,2.309,2647,0.832,2653,0.832,2702,0.622,2745,0.728,2892,0.761,2902,0.914,2935,0.914,3201,0.914,3207,0.832,3218,0.914,3219,2.142,3220,1.719,3221,0.914,3222,0.914,3223,0.914,3224,0.914,3225,0.914,3226,0.914,3227,1.432,3228,0.914,3231,0.914,3234,0.832,3236,0.867,3241,1.631,3253,0.867,3254,0.914,3304,0.914,3325,0.832,3343,0.867,3344,0.914,3513,0.914,3588,1.719,3953,1.469,4173,0.914,4176,0.914,4177,4.64,4178,1.432,4179,0.914,4180,4.64,4182,0.867,4185,1.852,4186,3.211,4187,0.984,4188,1.399,4189,2.623,4190,0.984,4191,0.984,4192,0.984,4193,0.984,4194,0.984,4195,0.984,4196,0.984,4197,0.984,4198,3.931,4199,0.984,4200,0.984,4201,0.984,4202,0.984,4203,0.984,4204,3.648,4205,0.984,4206,0.914,4207,0.984,4208,0.984,4209,0.832,4210,0.914,4211,0.984,4212,0.914,4213,0.984,4214,1.852,4215,1.852,4216,0.984,4217,0.984,4218,0.984,4219,0.984,4220,1.852,4221,5,4222,1.852,4223,0.984,4224,0.984,4225,0.984,4226,0.984,4227,0.984,4228,0.984,4229,0.984,4230,0.984,4231,0.984,4232,0.984,4233,0.867,4234,0.984]],["component/99",[1,0.4]],["title/100-1",[0,20.659,586,28.616]],["name/100-1",[]],["text/100-1",[]],["component/100-1",[]],["title/100-2",[2,11.6,31,11.704,175,12.649,176,10.987,178,16.349,247,12.435,308,26.468,639,29.169,807,23.157]],["name/100-2",[]],["text/100-2",[]],["component/100-2",[]],["title/100-3",[5,23.974,178,18.862,247,14.347,324,17.376,807,26.716,812,28.314,3295,46.902]],["name/100-3",[]],["text/100-3",[]],["component/100-3",[]],["title/100-4",[9,24.854,178,18.862,247,14.347,324,17.376,807,26.716,812,28.314,3296,45.333]],["name/100-4",[]],["text/100-4",[]],["component/100-4",[]],["title/100-5",[38,10.779,176,10.301,178,15.327,247,11.659,324,14.12,629,31.623,807,21.71,895,18.132,1409,26.614,1686,24.313]],["name/100-5",[]],["text/100-5",[]],["component/100-5",[]],["title/100-6",[13,15.541,31,13.503,175,14.594,176,12.676,247,14.347,308,30.537,639,33.653]],["name/100-6",[]],["text/100-6",[]],["component/100-6",[]],["title/100-7",[0,15.03,31,15.956,178,22.288,812,33.458,1047,31.569]],["name/100-7",[]],["text/100-7",[]],["component/100-7",[]],["title/100-8",[2,15.814,31,15.956,178,22.288,812,33.458,1050,31.885]],["name/100-8",[]],["text/100-8",[]],["component/100-8",[]],["title/100-9",[31,11.704,38,11.497,159,22.104,178,16.349,734,25.933,812,24.542,895,19.34,1052,25.598,1409,28.387]],["name/100-9",[]],["text/100-9",[]],["component/100-9",[]],["title/100",[175,17.245,176,14.978,308,36.084,639,39.766,655,27.493]],["name/100",[308,1.084,639,1.195,2488,0.944]],["text/100",[0,1.446,2,1.521,5,0.472,7,1.414,8,0.631,9,0.49,13,0.572,15,0.428,18,0.623,19,0.781,24,2.281,31,2.634,38,2.328,56,0.288,73,0.893,74,0.422,77,0.374,80,0.767,82,2.445,84,1.026,89,0.598,96,1.817,104,0.594,108,0.956,138,0.362,151,0.519,154,1.864,159,1.322,160,0.384,162,0.434,164,1.961,168,2.532,172,1.02,175,2.108,176,2.1,177,0.897,178,4.471,187,0.529,195,0.971,200,1.484,202,0.293,203,0.991,204,2.452,214,0.434,219,1.74,235,0.482,247,2.473,252,1.385,259,1.224,268,1.228,271,2.28,275,1.061,299,3.454,308,5.359,316,1.562,323,0.59,324,3.317,342,3.031,345,0.798,358,2.364,380,2.3,386,1.138,409,2.423,417,1.949,438,3.14,445,2.832,446,0.59,454,2.143,456,0.505,470,0.615,479,0.561,496,0.586,500,1.403,509,1.125,512,1.436,529,0.893,537,2.521,546,0.488,565,0.801,566,0.44,576,4.412,586,0.347,601,1.715,604,2.092,618,2.52,624,0.427,629,3.78,639,3.56,650,0.767,657,0.657,660,0.443,669,2.445,678,4.236,682,1.586,701,0.897,719,0.645,720,0.863,727,3.27,729,1.489,730,1.981,734,4.727,736,2.351,744,1.153,804,1.24,807,5.263,812,5.863,873,0.5,895,4.438,911,2.326,1047,0.527,1050,0.532,1052,0.582,1165,1.337,1180,5.449,1240,0.78,1278,1.158,1350,1.328,1390,0.62,1393,0.975,1398,2.133,1400,0.464,1405,5.653,1409,5.747,1422,2.115,1432,0.975,1457,2.335,1484,2.844,1526,0.663,1527,0.78,1537,1.622,1578,3.104,1630,0.826,1686,0.59,1701,2.82,1714,1.321,1731,1.798,2180,4.632,2216,0.893,2488,0.524,2554,0.846,2618,3.839,2641,1.015,3208,2.174,3295,3.61,3296,2.351,3913,1.728,4110,0.846,4235,6.308,4236,0.963,4237,0.963,4238,1.897,4239,2.878,4240,3.758,4241,1.094,4242,2.878,4243,1.094,4244,1.015,4245,1.015,4246,2.044,4247,2.044,4248,2.283,4249,2.129,4250,2.129,4251,2.129,4252,3.615,4253,2.878,4254,2.534,4255,1.094,4256,2.044,4257,1.094,4258,1.094]],["component/100",[1,0.4]],["title/101",[8,15.816,154,22.899,764,35.43,897,40.261]],["name/101",[897,1.525,2560,1.809]],["text/101",[6,2.15,8,2.564,18,1.579,20,1.697,24,2.215,26,2.142,57,1.701,77,3.193,138,3.866,154,2.967,158,3.067,168,3,200,3.194,201,3.592,203,3.833,204,2.615,237,3.862,243,2.425,247,3.135,252,1.681,271,1.761,283,2.744,291,2.283,308,2.852,310,3.429,317,2.312,345,2.023,381,2.403,386,2.05,393,3.086,416,3.007,428,2.361,442,3.843,515,3.108,539,2.507,566,2.084,618,2.07,619,2.471,655,3.263,661,2.832,662,2.414,663,3.032,698,2.52,720,2.189,725,2.6,744,4.462,764,5.744,811,2.165,895,2.084,896,4.09,897,6.77,1158,3.477,1480,2.351,1504,4.564,1714,5.027,4204,4.809,4240,8.032,4259,4.809,4260,4.564,4261,9.147,4262,8.672,4263,3.916,4264,5.182,4265,4.809,4266,6.577,4267,5.182,4268,4.809]],["component/101",[1,0.4]],["title/102",[31,15.956,175,17.245,176,14.978,267,26.191,414,42.875]],["name/102",[17,2.753]],["text/102",[]],["component/102",[1,0.4]],["title/103-1",[0,16.531,31,17.55,175,18.967,176,16.474]],["name/103-1",[]],["text/103-1",[]],["component/103-1",[]],["title/103-2",[2,19.324,31,19.497,178,27.235]],["name/103-2",[]],["text/103-2",[]],["component/103-2",[]],["title/103-3",[5,31.159,38,17.239,178,24.514,419,37.675]],["name/103-3",[]],["text/103-3",[]],["component/103-3",[]],["title/103-4",[9,32.303,38,17.239,178,24.514,529,31.526]],["name/103-4",[]],["text/103-4",[]],["component/103-4",[]],["title/103-5",[13,16.835,175,15.809,176,13.731,200,24.672,203,20.697,342,20.277]],["name/103-5",[]],["text/103-5",[]],["component/103-5",[]],["title/103",[31,11.704,38,11.497,175,12.649,176,10.987,254,20.24,282,27.049,283,16.959,1369,24.005,1512,29.746]],["name/103",[38,0.471,282,1.108,1369,0.984]],["text/103",[0,0.642,2,0.371,5,0.665,6,1.162,8,0.614,9,0.689,13,0.784,18,1.448,20,0.917,24,2.204,25,1.804,26,3.2,30,1.865,31,2.23,38,2.837,40,2.017,46,0.893,47,0.737,55,0.744,56,1.915,58,1.3,61,0.737,74,0.593,82,0.698,87,0.667,91,0.733,93,0.608,108,1.31,123,1.22,128,1.647,147,0.804,154,0.488,157,1.459,158,0.919,160,2.169,164,0.621,166,0.947,168,2.104,170,0.662,172,0.545,175,2.242,176,1.947,177,0.675,178,3.697,179,0.789,181,0.994,182,2.582,192,0.537,193,1.772,195,2.457,200,1.149,202,1.655,203,0.964,214,1.885,219,1.856,243,0.72,245,1.111,246,0.73,247,1.228,252,1.54,254,2.602,255,0.764,267,1.54,271,2.3,274,0.961,278,1.192,280,0.824,281,0.665,282,4.585,283,4.281,291,0.678,293,1.628,294,0.604,295,2.068,299,1.134,304,0.439,306,1.115,310,0.678,312,0.629,313,1.934,324,2.553,327,0.804,342,2.086,345,0.601,358,1.006,360,0.76,379,1.628,380,0.603,386,1.108,387,1.472,388,1.162,407,2.121,410,1.563,419,4.044,420,2.466,421,1.446,428,0.701,438,3.62,450,0.813,454,0.772,460,1.442,462,0.76,464,0.672,466,0.776,474,0.716,479,1.978,500,0.597,501,1.454,511,0.692,512,1.398,515,1.897,529,2.958,531,1.369,537,0.908,541,0.672,549,0.73,563,1.698,565,0.603,566,0.619,575,3.514,576,4.757,577,2.958,588,0.841,590,0.835,597,1.5,598,2.491,624,1.854,626,1.575,628,0.9,649,0.768,652,0.829,669,3.07,678,0.764,679,1.563,689,1.999,700,0.872,717,0.819,726,0.961,727,3.179,728,0.971,729,3.358,730,2.249,734,0.829,736,2.992,738,1.405,744,1.122,745,0.942,754,0.67,764,1.376,795,1.116,799,0.982,807,1.856,811,0.643,818,0.9,869,3,873,1.281,894,1.062,895,4.373,911,1.421,951,0.9,1011,0.852,1119,0.819,1165,1.006,1177,1.079,1178,1.032,1252,1.189,1278,0.872,1304,0.726,1349,2.137,1350,0.71,1366,0.824,1369,1.924,1400,0.652,1401,1.079,1432,2.264,1438,2.092,1455,2.222,1456,0.9,1460,1.732,1480,0.698,1492,0.961,1501,2.165,1505,1.189,1512,2.937,1521,2.361,1526,2.338,1538,1.599,1697,0.916,1701,0.893,1714,0.994,1731,0.961,1767,1.019,1815,4.043,1821,1.006,1862,1.463,1928,1.032,1965,1.964,1997,0.804,2047,1.032,2050,1.162,2106,0.942,2114,1.062,2176,1.905,2181,2.651,2274,3.258,2598,1.22,2602,1.905,2603,1.905,2640,1.905,3118,2.367,3119,2.798,4269,2.599,4270,3.149,4271,1.538,4272,1.538,4273,1.538,4274,1.355,4275,1.538,4276,1.538,4277,1.538,4278,2.367,4279,2.466,4280,1.538]],["component/103",[1,0.4]],["title/104-1",[0,16.531,24,20.531,56,18.967,1349,39.97]],["name/104-1",[]],["text/104-1",[]],["component/104-1",[]],["title/104-2",[2,15.814,24,18.666,56,17.245,276,32.047,684,34.898]],["name/104-2",[]],["text/104-2",[]],["component/104-2",[]],["title/104-3",[13,22.44,138,26.496,247,20.716]],["name/104-3",[]],["text/104-3",[]],["component/104-3",[]],["title/104-4",[20,15.75,31,11.704,122,23.388,168,13.892,175,12.649,176,10.987,494,18.431,591,15.905,2181,26.85]],["name/104-4",[]],["text/104-4",[]],["component/104-4",[]],["title/104",[24,17.112,168,17.362,228,24.502,494,23.035,659,28.39,2016,36.808]],["name/104",[659,1.29,2016,1.673]],["text/104",[0,0.607,1,0.495,2,0.349,8,2.072,11,0.497,13,0.405,18,0.441,20,3.587,24,2.985,31,0.891,39,0.623,40,1.339,52,1.763,54,0.719,56,2.71,66,0.623,74,1.022,77,0.905,91,1.747,93,1.792,96,0.914,119,2.365,122,2.203,127,1.148,128,2.255,138,1.962,154,2.731,157,1.387,158,1.203,159,0.665,160,2.081,164,1.478,168,2.161,175,0.697,176,1.206,183,0.786,184,1.015,195,0.894,202,0.387,214,2.355,228,2.152,232,3.309,235,1.614,236,2.68,237,0.598,238,2.45,239,2.824,241,1.282,245,1.798,247,2.505,252,1.188,271,1.54,276,1.79,278,0.616,283,0.934,298,0.827,299,2.843,303,1.228,306,2.102,310,1.167,316,0.786,326,1.158,342,3.005,344,1.923,345,2.062,369,3.294,380,0.567,384,2.14,413,2.123,428,0.659,438,3.442,442,0.715,446,4.637,454,0.726,455,0.786,456,0.668,457,0.958,464,1.158,479,0.743,481,3.626,483,0.704,487,1.571,488,0.747,494,4.3,495,0.886,500,1.421,512,0.722,515,2.109,529,1.158,537,1.564,539,1.772,543,6.181,546,0.646,565,0.567,576,2.175,591,0.479,604,0.623,606,1.376,618,1.81,624,1.035,627,0.635,634,0.84,650,2.635,659,0.684,660,1.483,665,2.144,669,1.662,671,1.123,673,1.094,674,1.148,676,0.854,677,1.032,678,0.719,682,0.635,684,5.485,685,4.116,686,1.119,688,2.587,689,1.115,692,0.935,693,1.577,698,1.288,699,0.802,700,0.82,715,1.829,716,2.833,717,0.77,720,1.119,725,1.329,727,2.79,729,1.091,736,0.7,738,2.649,744,3.311,754,1.154,760,0.971,764,5.063,778,0.924,802,2.314,807,0.697,838,1.513,848,2.181,889,3.714,895,1.822,911,2.758,934,2.861,1119,0.77,1180,1.692,1190,2.367,1250,0.895,1290,1.458,1349,3.609,1366,0.775,1445,1.513,1480,1.202,1484,3.473,1519,2.333,1549,4.369,1575,0.878,1617,4.649,1627,0.971,1800,3.015,1867,1.183,1906,2.239,1957,1.071,1998,1.858,2016,1.622,2094,1.803,2106,0.886,2176,0.985,2181,2.045,2274,1.223,2358,4.206,2488,1.269,2659,1.015,3886,1.275,3953,1.148,4281,3.4,4282,1.223,4283,1.447,4284,5.507,4285,4.204,4286,2.239,4287,2.459,4288,2.459,4289,2.459,4290,1.343,4291,2.459,4292,1.343,4293,1.447,4294,1.343,4295,1.343]],["component/104",[1,0.4]],["title/105-1",[0,20.659,362,53.192]],["name/105-1",[]],["text/105-1",[]],["component/105-1",[]],["title/105-2",[2,14.497,20,19.684,154,19.086,228,24.502,494,23.035,720,25.389]],["name/105-2",[]],["text/105-2",[]],["component/105-2",[]],["title/105-3",[13,20.198,168,20.831,175,18.967,176,16.474]],["name/105-3",[]],["text/105-3",[]],["component/105-3",[]],["title/105-4",[19,27.553,304,20.573,652,38.886,1047,34.723]],["name/105-4",[]],["text/105-4",[]],["component/105-4",[]],["title/105-5",[31,17.55,175,18.967,176,16.474,1050,35.07]],["name/105-5",[]],["text/105-5",[]],["component/105-5",[]],["title/105-6",[25,25.965,182,25.965,205,23.882,258,25.064,379,23.438,494,21.265,2389,36.284]],["name/105-6",[]],["text/105-6",[]],["component/105-6",[]],["title/105-7",[177,22.615,178,17.515,195,17.383,202,13.789,254,21.685,283,18.169,700,29.2,2763,34.121]],["name/105-7",[]],["text/105-7",[]],["component/105-7",[]],["title/105-8",[31,17.55,177,31.652,178,24.514,1052,38.384]],["name/105-8",[]],["text/105-8",[]],["component/105-8",[]],["title/105-9",[114,39.146,200,29.601,203,24.832,1054,42.565]],["name/105-9",[]],["text/105-9",[]],["component/105-9",[]],["title/105-10",[18,24.421,302,39.161,591,26.496]],["name/105-10",[]],["text/105-10",[]],["component/105-10",[]],["title/105-11",[593,30.333,754,34.887,4296,63.571]],["name/105-11",[]],["text/105-11",[]],["component/105-11",[]],["title/105",[25,30.682,205,28.22,379,27.695,420,34.048,494,25.127]],["name/105",[25,0.592,688,0.723,730,0.516,1386,0.818,4297,1.114]],["text/105",[0,0.92,1,0.601,2,0.776,6,0.515,8,1.4,13,0.348,18,0.98,19,0.475,20,3.113,24,2.061,25,5.115,26,0.952,31,1.433,38,1.633,40,0.841,45,0.666,47,0.595,54,0.617,55,0.601,56,1.548,64,1.2,74,0.888,77,1.61,78,0.886,91,1.913,104,1.25,109,2.216,114,0.675,119,1.797,122,0.604,128,0.983,133,1.006,138,1.064,147,2.462,154,1.274,157,0.47,158,0.408,159,0.571,160,1.407,161,1.305,162,0.493,164,1.619,168,3.001,170,0.535,172,0.441,175,2.319,176,2.338,177,2.999,178,3.159,179,0.638,181,1.487,182,3.198,183,1.25,192,0.434,193,0.571,195,1.59,200,0.945,202,1.427,203,1.836,205,4.804,214,0.914,219,0.598,228,1.921,232,1.423,236,1.04,238,1.774,239,2.313,243,0.581,246,0.59,247,1.767,252,0.403,254,1.353,258,4.294,259,0.529,260,1.114,265,0.537,267,0.92,271,2.461,275,0.645,282,0.699,283,4.01,286,0.761,291,1.014,293,0.525,295,1.002,297,1.41,299,1.302,302,0.607,304,1.145,310,0.548,314,1.295,316,1.746,317,2.379,324,1.007,326,0.543,328,1.225,337,0.785,342,2.787,345,0.899,360,1.137,362,0.733,369,1.484,377,0.721,379,1.991,380,0.902,386,0.911,409,2.724,410,2.631,413,0.5,420,1.67,421,1.207,423,3.127,436,0.754,438,2.377,442,2.327,445,0.879,446,1.241,450,0.657,451,2.543,455,0.675,462,0.614,464,1.406,471,0.747,479,0.638,481,1.01,486,2.977,487,1.379,491,0.823,494,3.379,495,0.761,500,1.248,501,0.645,509,2.208,515,0.92,523,0.727,531,0.607,537,0.733,539,0.601,543,1.336,546,0.554,550,0.961,565,0.902,566,0.5,576,2.63,577,1.006,591,0.411,593,0.47,599,1.114,604,0.535,606,0.645,608,1.795,618,1.883,624,0.485,649,0.62,650,0.864,652,1.241,655,0.521,662,0.579,669,1.459,671,0.527,682,1.01,685,0.684,688,1.315,689,0.523,698,0.604,700,0.704,701,0.545,702,1.359,706,0.747,720,0.972,725,0.624,729,0.512,730,2.785,735,0.624,736,1.556,738,0.624,739,2.084,740,0.769,743,1.641,744,2.36,745,0.761,754,0.541,764,1.58,782,0.986,788,2.31,795,0.902,812,1.175,861,2.713,869,3.369,873,0.569,875,0.747,889,1.218,895,2.367,911,1.966,951,0.727,1039,1.524,1047,0.598,1050,0.604,1052,0.661,1054,0.733,1062,0.813,1064,0.803,1093,0.939,1113,0.785,1119,1.712,1128,0.727,1149,0.803,1190,1.487,1200,0.939,1209,0.67,1245,0.902,1349,1.276,1350,1.852,1369,1.149,1386,3.446,1393,1.098,1397,0.902,1432,0.593,1437,0.679,1445,1.315,1461,0.733,1467,1.703,1492,0.777,1510,0.939,1511,0.939,1513,0.858,1514,1.094,1515,1.05,1521,0.761,1564,0.986,1575,0.754,1607,1.545,1697,0.74,1714,0.803,1736,0.961,1811,1.454,1815,1.505,1917,2.054,1946,0.858,1955,1.05,2047,0.834,2114,1.589,2142,1.05,2180,1.439,2181,0.694,2182,1.524,2389,0.813,2488,1.103,2490,1.153,2538,2.627,2542,1.153,2571,1.589,2602,0.845,2640,0.845,2763,0.823,3811,1.05,3917,1.094,3953,0.986,3959,1.05,4278,1.946,4296,0.986,4298,2.027,4299,4.374,4300,1.05,4301,1.243,4302,1.243,4303,1.243,4304,2.136,4305,3.739,4306,1.153,4307,1.05,4308,2.136,4309,2.136,4310,2.136,4311,1.243,4312,2.302,4313,1.243,4314,1.243,4315,1.153,4316,1.153,4317,1.153,4318,2.136,4319,1.243,4320,1.153,4321,1.946,4322,1.243,4323,1.153]],["component/105",[1,0.4]],["title/106-1",[168,26.032,379,38.067]],["name/106-1",[]],["text/106-1",[]],["component/106-1",[]],["title/106",[31,15.956,175,17.245,176,14.978,177,28.777,178,22.288]],["name/106",[31,0.308,172,0.449,178,0.43,304,0.361,2488,0.606]],["text/106",[28,4.42,31,2.267,38,2.789,77,3.182,122,4.53,138,3.08,175,3.069,176,2.666,177,5.121,178,4.54,203,3.207,205,4.009,254,3.92,324,2.917,380,3.649,407,5.126,413,3.746,568,5.319,895,3.746,2385,10.77]],["component/106",[1,0.4]],["title/107-1",[0,13.778,1,11.233,254,25.296,333,27.625,540,34.327,2583,49.107]],["name/107-1",[]],["text/107-1",[]],["component/107-1",[]],["title/107-2",[2,17.393,342,24.328,540,41.185,1426,36.19]],["name/107-2",[]],["text/107-2",[]],["component/107-2",[]],["title/107-3",[5,34.617,1078,48.593,1393,38.203]],["name/107-3",[]],["text/107-3",[]],["component/107-3",[]],["title/107-4",[0,16.531,9,32.303,76,46.593,1393,34.387]],["name/107-4",[]],["text/107-4",[]],["component/107-4",[]],["title/107-5",[2,17.393,76,46.593,1393,34.387,1686,38.886]],["name/107-5",[]],["text/107-5",[]],["component/107-5",[]],["title/107-6",[13,20.198,38,17.239,254,30.35,1369,35.995]],["name/107-6",[]],["text/107-6",[]],["component/107-6",[]],["title/107-7",[38,14.369,342,20.277,464,26.276,1047,28.941,1369,30.001,2564,34.062]],["name/107-7",[]],["text/107-7",[]],["component/107-7",[]],["title/107-8",[40,21.971,254,25.296,283,21.195,419,31.401,487,25.772,591,19.877]],["name/107-8",[]],["text/107-8",[]],["component/107-8",[]],["title/107-9",[38,14.369,593,22.756,763,39.305,1011,33.315,1369,30.001,1835,42.861]],["name/107-9",[]],["text/107-9",[]],["component/107-9",[]],["title/107",[8,13.182,38,14.369,295,26.173,540,34.327,1369,30.001,2583,49.107]],["name/107",[38,0.48,295,0.467,1369,0.536,3692,0.996,4324,1.073]],["text/107",[0,1.406,1,0.406,2,1.231,5,0.94,8,0.477,9,0.974,13,1.069,15,1.496,18,0.663,20,0.712,26,2.536,31,0.929,37,1.013,38,2.53,40,1.396,52,0.847,56,1.614,74,1.472,76,3.964,85,1.44,88,2.018,97,2.294,107,0.922,108,1.018,110,1.787,117,1.777,122,1.058,143,1.459,150,1.091,154,0.691,157,3.14,158,1.253,159,1,160,0.763,164,0.878,168,2.395,170,1.643,172,2.175,175,0.572,192,0.759,214,0.863,231,1.032,245,0.863,246,1.032,247,0.562,252,0.705,254,4.061,258,1.725,267,2.79,271,4.184,275,1.129,281,0.94,282,4.664,283,4.038,288,1.018,295,2.222,299,4.285,301,1.838,333,1,342,2.595,360,1.074,369,0.804,407,1.197,409,0.745,412,2.087,419,2.666,438,2.723,445,2.939,450,2.019,451,1.82,464,0.951,474,1.013,487,1.637,488,3.167,512,1.085,540,3.988,549,1.032,565,1.999,567,1.345,576,4.555,588,1.189,589,1.319,590,1.181,591,0.719,593,0.823,601,2.422,606,1.129,618,2.038,624,0.849,626,2.87,650,0.816,660,0.88,663,1.273,671,0.922,679,2.849,683,1.838,685,1.197,717,1.158,727,1.424,739,3.186,744,1.53,748,1.032,763,2.497,812,1.11,875,3.066,887,1.389,1011,2.116,1047,1.047,1078,1.319,1124,2.018,1132,1.389,1145,1.915,1160,1.332,1175,3.424,1180,1.389,1348,2.528,1369,4.397,1393,3.33,1396,1.197,1398,1.284,1426,5.172,1437,1.189,1450,1.551,1452,1.44,1480,0.987,1512,4.758,1686,1.173,1701,1.262,1835,2.722,1925,1.579,1957,2.825,2043,4.71,2171,1.579,2564,1.232,2577,1.915,2583,3.119,2942,1.682,3119,1.579,3747,1.551,4279,1.915,4325,3.543,4326,3.543,4327,3.543,4328,4.736,4329,2.175,4330,2.175,4331,3.818,4332,3.818,4333,3.818,4334,2.175,4335,2.175,4336,2.175,4337,2.175,4338,2.175,4339,2.175,4340,3.543,4341,2.175,4342,2.175,4343,3.818,4344,2.175,4345,2.175,4346,2.175,4347,2.175,4348,3.818,4349,2.175,4350,2.175,4351,2.175,4352,6.136,4353,2.175,4354,2.175,4355,2.175,4356,2.175,4357,2.175,4358,2.175,4359,2.175,4360,2.175,4361,2.175,4362,2.175,4363,2.175,4364,2.175,4365,3.818,4366,2.175,4367,2.018,4368,2.175,4369,2.175,4370,2.175,4371,2.175,4372,2.175,4373,2.175,4374,2.175,4375,3.543,4376,2.175,4377,2.175,4378,2.175,4379,2.018,4380,2.175,4381,2.175,4382,2.175,4383,3.818,4384,2.175,4385,2.175,4386,2.175,4387,2.175,4388,2.175,4389,2.175,4390,2.175,4391,2.175,4392,2.175,4393,2.175,4394,2.175,4395,2.175,4396,3.818,4397,2.175]],["component/107",[1,0.4]],["title/108-1",[0,20.659,1853,56.923]],["name/108-1",[]],["text/108-1",[]],["component/108-1",[]],["title/108-2",[2,13.383,214,22.02,541,24.257,590,30.12,820,27.403,1128,32.471,1282,32.471]],["name/108-2",[]],["text/108-2",[]],["component/108-2",[]],["title/108-3",[13,18.364,38,15.674,589,39.766,1039,43.418,4398,57.743]],["name/108-3",[]],["text/108-3",[]],["component/108-3",[]],["title/108-4",[38,17.239,589,43.739,591,23.849,820,35.615]],["name/108-4",[]],["text/108-4",[]],["component/108-4",[]],["title/108-5",[38,15.674,419,34.253,464,28.663,590,35.591,1643,36.604]],["name/108-5",[]],["text/108-5",[]],["component/108-5",[]],["title/108-6",[38,17.239,275,37.449,501,37.449,1644,41.513]],["name/108-6",[]],["text/108-6",[]],["component/108-6",[]],["title/108-7",[38,17.239,501,37.449,767,47.158,2405,46.593]],["name/108-7",[]],["text/108-7",[]],["component/108-7",[]],["title/108-8",[38,19.153,838,45.756,3075,57.131]],["name/108-8",[]],["text/108-8",[]],["component/108-8",[]],["title/108-9",[267,32.005,838,45.756,4399,74.358]],["name/108-9",[]],["text/108-9",[]],["component/108-9",[]],["title/108-10",[576,33.001,838,45.756,4400,74.358]],["name/108-10",[]],["text/108-10",[]],["component/108-10",[]],["title/108-11",[153,48.391,415,38.632,590,39.146,3077,52.348]],["name/108-11",[]],["text/108-11",[]],["component/108-11",[]],["title/108-12",[26,27.102,283,23.12,306,26.105,655,27.493,4401,60.851]],["name/108-12",[]],["text/108-12",[]],["component/108-12",[]],["title/108-13",[283,25.43,419,37.675,1308,49.794,4402,66.93]],["name/108-13",[]],["text/108-13",[]],["component/108-13",[]],["title/108-14",[153,48.391,767,47.158,1369,35.995,3184,60.957]],["name/108-14",[]],["text/108-14",[]],["component/108-14",[]],["title/108-15",[38,19.153,577,35.025,3185,67.723]],["name/108-15",[]],["text/108-15",[]],["component/108-15",[]],["title/108",[38,19.153,589,48.593,590,43.491]],["name/108",[38,0.56,295,0.551,1369,0.632,4403,1.265]],["text/108",[0,0.531,2,0.302,6,0.96,8,2.25,13,0.35,15,0.907,16,0.585,18,0.381,19,0.885,20,1.321,25,0.585,26,1.957,31,0.981,37,1.506,38,3.078,39,0.997,40,2.656,41,1.022,47,0.599,49,0.808,52,2.085,56,0.329,58,1.057,60,0.758,61,0.599,64,1.504,66,0.538,74,1.247,82,2.43,87,1.402,89,0.683,91,0.596,92,0.818,93,0.495,96,1.462,100,1.736,104,0.679,107,0.982,108,0.585,110,1.083,111,2.141,112,0.967,114,0.679,119,0.56,120,0.799,121,0.79,122,0.608,123,0.992,128,0.534,133,1.413,142,0.908,144,1.651,147,0.653,151,0.593,153,2.706,157,2.028,158,1.061,162,2.884,163,0.703,164,0.504,168,0.934,169,2.184,170,1.392,172,1.43,176,1.464,187,1.951,193,1.486,197,0.758,204,0.631,214,1.879,215,0.688,218,0.738,228,0.944,231,1.099,245,0.919,246,0.593,249,0.945,251,1.232,252,0.406,253,1.059,254,1.697,265,1.397,267,3.426,271,0.787,275,1.679,281,1.742,282,3.325,283,3.431,288,0.585,291,1.02,295,1.408,296,0.534,299,1.633,302,1.132,304,0.357,306,0.498,316,0.679,319,0.745,322,0.72,327,0.653,340,1.75,342,1.597,345,0.488,346,0.726,360,0.617,363,0.922,370,0.877,372,1.022,373,1.837,379,0.528,387,2.489,408,0.582,414,0.818,415,3.167,419,4.619,420,1.679,422,0.72,432,0.661,436,0.758,438,2.104,445,0.478,450,1.71,460,0.468,462,0.617,463,0.738,464,3.624,467,0.703,472,0.665,474,1.078,481,0.549,487,0.536,488,0.645,501,3.773,506,0.818,510,1.312,511,3.269,512,1.156,514,0.799,520,1.391,531,1.132,538,0.758,540,1.322,541,2.802,546,0.558,552,0.758,556,0.992,565,2.847,566,0.503,568,0.714,576,4.56,577,1.012,588,0.683,589,6.015,590,3.723,591,0.413,599,0.605,601,0.593,604,2.545,606,1.202,608,1.293,609,0.665,618,0.499,624,0.488,649,1.156,650,0.869,655,1.985,660,0.937,665,1.892,671,0.53,679,0.698,702,1.367,706,0.751,717,0.665,720,1.366,727,0.466,737,0.818,745,0.766,748,0.593,751,1.217,754,1.008,763,0.818,767,2.114,776,0.925,780,2.474,781,1.156,811,1.685,820,4.488,824,0.967,838,6.185,873,0.572,911,1.975,913,0.967,1011,1.792,1024,0.522,1026,2.2,1039,2.141,1105,0.818,1121,0.863,1123,0.79,1128,1.892,1135,0.773,1149,0.808,1158,2.17,1160,0.766,1182,0.892,1213,0.992,1220,2.107,1221,0.967,1223,0.877,1238,1.892,1240,0.892,1252,2.5,1257,0.992,1259,0.892,1282,3.135,1308,2.232,1322,0.828,1324,0.992,1344,0.945,1369,3.812,1389,0.863,1397,1.681,1400,0.53,1411,0.877,1422,0.732,1426,0.627,1432,0.596,1437,0.683,1438,2.57,1445,1.322,1452,1.533,1453,0.992,1454,1.957,1455,0.992,1460,1.432,1467,1.713,1479,0.839,1490,0.781,1528,0.649,1530,0.839,1532,0.839,1608,2.089,1615,0.766,1643,0.698,1644,0.72,1658,0.79,1675,4.375,1701,0.726,1718,1.681,1767,1.533,1821,0.818,1853,0.79,1862,1.689,1896,0.925,1925,1.681,1979,0.925,1988,0.799,1998,0.877,2043,1.98,2080,0.992,2108,1.101,2178,2.232,2211,1.022,2300,1.101,2358,2.089,2405,0.808,2481,3.001,2600,0.892,2616,1.16,2702,0.79,2786,1.16,2906,0.892,2909,1.101,3075,0.892,3077,0.908,3147,3.096,3184,1.057,3185,1.057,3209,0.892,3239,1.022,3303,1.957,3350,2.039,3953,0.992,4020,1.101,4172,1.057,4206,1.16,4233,1.101,4279,1.101,4398,1.101,4399,1.16,4400,1.16,4401,1.16,4402,1.16,4404,1.25,4405,2.315,4406,2.315,4407,2.315,4408,1.25,4409,1.25,4410,1.16,4411,2.149,4412,1.16,4413,1.25,4414,1.25,4415,2.733,4416,1.25,4417,1.25,4418,1.25,4419,1.25,4420,1.25,4421,1.101,4422,1.25,4423,1.022,4424,1.25,4425,1.25,4426,1.16,4427,0.992,4428,1.25,4429,1.057,4430,1.101,4431,1.25,4432,1.16,4433,1.25,4434,1.101]],["component/108",[1,0.4]],["title/109",[38,19.153,295,34.887,1369,39.99]],["name/109",[17,2.753]],["text/109",[]],["component/109",[1,0.4]],["title/110-1",[586,32.698]],["name/110-1",[]],["text/110-1",[]],["component/110-1",[]],["title/110",[31,21.931,174,44.276]],["name/110",[17,2.753]],["text/110",[19,3.732,38,3.334,100,4.204,166,3.304,173,7.019,174,5.904,652,5.267,738,4.902,741,6.646,2906,6.965,4435,11.464,4436,9.065,4437,8.602,4438,9.769]],["component/110",[1,0.4]],["title/111-1",[0,20.659,586,28.616]],["name/111-1",[]],["text/111-1",[]],["component/111-1",[]],["title/111-2",[2,17.393,56,18.967,257,44.162,1396,39.688]],["name/111-2",[]],["text/111-2",[]],["component/111-2",[]],["title/111",[19,22.965,38,14.369,100,25.871,652,32.41,738,30.164,2906,42.861]],["name/111",[38,0.257,46,0.623,100,0.462,652,0.579,727,0.4,738,0.539]],["text/111",[0,1.584,2,1.07,18,1.352,19,2.64,20,1.453,24,2.727,26,2.856,38,2.29,46,4.01,52,1.727,56,2.52,57,1.456,64,1.655,66,1.91,74,1.711,77,2.361,100,1.91,107,1.881,129,2.977,138,1.467,157,1.68,158,1.456,160,1.556,162,2.742,164,1.79,166,1.5,168,1.996,169,1.808,173,3.726,174,4.707,195,1.497,202,1.849,232,3.057,235,3.045,237,1.834,257,7.272,259,1.888,265,1.917,267,2.76,270,2.477,271,3.257,274,4.318,286,2.717,293,1.874,299,1.796,333,2.039,342,3.232,347,2.304,360,2.191,421,1.665,445,1.695,449,7.791,466,2.239,478,3.75,481,3.033,500,1.722,529,1.939,531,3.377,534,4.636,541,1.939,546,1.979,567,2.744,568,2.534,586,1.409,595,1.91,608,2.477,618,1.772,624,1.732,626,2.495,652,3.726,706,2.666,727,2.577,729,2.846,738,3.468,807,2.136,812,2.264,1084,3.75,1134,3.164,1357,2.802,1396,6.535,1400,5.172,1422,2.596,1431,3.907,1463,3.431,1607,2.977,1697,4.114,1794,2.866,1988,2.833,2170,2.717,2564,2.514,2900,4.118,2906,4.927,3914,4.118,3919,3.431,4439,5.221,4440,3.353,4441,6.91]],["component/111",[1,0.4]],["title/112",[57,29.586,202,24.117]],["name/112",[202,0.412,203,0.531,235,0.679,625,1.021]],["text/112",[8,1.524,19,2.654,20,3.612,24,2.738,56,1.827,57,3.157,74,2.679,92,4.543,107,2.945,138,3.18,158,2.281,160,3.373,166,3.252,176,1.587,192,2.424,200,2.852,202,3.546,252,2.253,257,4.254,259,4.693,265,3.002,277,5.151,278,4.092,280,6.376,282,3.907,283,4.197,293,2.935,306,4.391,310,3.061,345,2.713,379,2.935,419,5.024,421,2.607,487,2.979,515,2.775,544,5.372,618,2.775,701,4.221,727,2.591,811,2.903,1024,2.903,1253,5.043,1328,3.586,1432,3.313,1557,4.601,1571,4.388]],["component/112",[1,0.4]],["title/113",[393,39.041,653,41.875,655,27.493,811,27.394,1061,38.051]],["name/113",[393,1.173,811,0.823,1061,1.144]],["text/113",[3,5.269,18,2.881,19,1.401,20,1.945,24,1.044,26,1.515,49,2.369,52,2.913,66,1.578,77,1.253,82,1.663,87,1.59,90,2.46,107,1.554,121,4.727,138,1.212,141,2.315,143,2.46,148,2.571,158,1.949,162,1.455,168,1.715,172,1.3,174,1.801,187,2.873,192,3.871,197,4.539,200,1.505,201,1.692,202,2.003,203,2.045,228,1.494,241,1.774,243,1.715,244,4.394,256,3.099,259,1.56,265,2.566,275,1.904,278,1.56,293,1.548,294,1.441,304,1.046,324,1.148,333,2.729,334,2.46,335,2.428,342,1.237,345,1.432,346,2.127,363,1.46,369,2.767,370,2.571,386,1.45,387,1.927,393,3.536,442,1.81,450,1.939,451,5.29,463,2.164,466,1.85,487,2.546,500,1.423,524,2.094,541,1.603,554,2.369,597,1.964,598,3.836,599,3.621,618,3.437,628,2.145,653,6.037,655,4.467,660,1.484,664,2.291,672,2.11,678,2.948,685,2.018,703,1.649,715,2.531,717,1.951,720,3.993,729,1.51,732,2.267,733,2.11,735,5.568,737,2.397,739,1.904,754,1.596,805,1.904,807,2.859,811,4.451,896,3.121,950,3.418,1011,2.032,1024,1.532,1061,2.127,1223,2.571,1238,2.145,1282,3.475,1293,4.894,1322,2.428,1398,2.164,1405,3.391,1407,7.029,1432,1.748,1494,2.713,1503,2.995,1506,7.911,1509,3.099,1528,1.904,1540,3.099,1542,3.099,1877,2.614,1994,2.428,2080,2.909,2191,2.995,2301,2.909,3412,3.099,4442,3.666,4443,3.666,4444,3.666,4445,3.666,4446,3.666,4447,3.666,4448,3.402,4449,3.666,4450,3.666,4451,3.666,4452,3.666,4453,3.666,4454,3.666,4455,3.666,4456,3.666,4457,3.402,4458,3.666]],["component/113",[1,0.4]],["title/114",[77,27.375,138,26.496,203,27.588]],["name/114",[586,1.413]],["text/114",[]],["component/114",[1,0.4]],["title/115-1",[0,18.366,172,28.405,304,22.856]],["name/115-1",[]],["text/115-1",[]],["component/115-1",[]],["title/115-2",[2,17.393,232,31.907,1457,46.593,1458,49.794]],["name/115-2",[]],["text/115-2",[]],["component/115-2",[]],["title/115-3",[13,18.364,20,21.472,232,29.009,418,48.518,546,29.248]],["name/115-3",[]],["text/115-3",[]],["component/115-3",[]],["title/115-4",[588,49.254,1047,43.392]],["name/115-4",[]],["text/115-4",[]],["component/115-4",[]],["title/115-5",[247,23.302,1050,43.827]],["name/115-5",[]],["text/115-5",[]],["component/115-5",[]],["title/115-6",[18,24.421,302,39.161,591,26.496]],["name/115-6",[]],["text/115-6",[]],["component/115-6",[]],["title/115-7",[593,27.303,754,31.402,2304,54.495,4296,57.221]],["name/115-7",[]],["text/115-7",[]],["component/115-7",[]],["title/115",[200,32.886,232,35.448,247,20.716]],["name/115",[200,0.633,934,0.973,936,1.034,1927,1.049]],["text/115",[0,0.335,1,0.273,2,0.645,6,1.893,8,2.544,11,0.918,13,0.409,18,0.815,19,0.558,20,2.598,25,0.684,26,0.604,30,1.293,33,4.897,37,1.245,38,1.091,40,0.534,52,0.569,55,1.293,68,0.726,74,2.303,75,1.025,77,1.559,82,0.663,110,0.684,111,0.968,120,0.933,128,2.271,133,0.639,141,1.688,154,1.173,158,1.745,160,2.298,162,1.811,164,1.078,166,0.494,168,2.496,172,0.518,178,0.909,187,1.293,188,0.799,192,1.855,200,4.167,202,0.715,203,2.256,219,3.819,228,1.505,231,0.694,232,5.303,233,1.906,236,1.207,237,1.527,238,1.39,239,1.602,240,3.061,243,1.251,245,1.466,246,1.753,247,2.763,248,0.722,252,2.693,253,2.089,259,0.622,264,1.688,271,3.137,275,1.918,278,1.137,281,2.297,283,0.942,288,1.251,293,1.129,296,1.142,299,0.592,302,1.306,304,1.302,306,2.378,310,1.178,312,1.093,322,1.539,342,2.015,345,1.442,347,3.102,358,0.956,369,2.612,379,2.246,386,1.057,416,1.551,418,7.198,421,1.003,426,1.042,438,0.877,443,1.104,445,1.021,449,0.933,451,0.697,456,1.705,460,1,474,1.245,476,2.481,481,3.482,483,3.435,494,1.415,500,1.771,509,0.804,514,1.707,515,1.823,527,4.751,539,1.293,540,0.835,541,1.168,543,0.848,546,2.036,554,1.727,555,2.067,565,2.083,566,0.588,568,2.607,576,0.602,583,0.841,588,0.799,591,0.483,593,0.553,599,0.707,604,1.964,609,2.429,618,1.475,628,1.564,649,0.729,662,1.245,663,1.564,669,2.412,672,0.841,682,1.173,684,1.966,688,3.036,689,1.125,693,1.591,698,1.3,701,2.334,702,0.863,704,0.968,715,1.009,716,1.13,719,1.578,720,1.129,725,2.29,726,1.67,727,0.997,729,3.267,730,1.861,731,1.845,735,2.29,744,3.179,754,0.636,779,1.372,795,1.94,799,1.707,839,0.895,877,1.009,886,1.748,895,1.075,911,3.743,934,0.923,951,0.855,1024,1.117,1047,0.704,1050,0.711,1181,1.94,1190,0.944,1231,1.396,1275,0.923,1368,1.104,1390,1.515,1396,0.804,1424,4.02,1432,0.697,1435,2.02,1436,1.13,1457,5.365,1458,4.124,1460,0.904,1470,1.081,1480,1.675,1487,2.743,1500,1.364,1525,1.356,1548,1.906,1600,1.874,1601,1.874,1602,3.201,1604,1.707,1614,1.793,1629,1.009,1719,1.845,1923,1.13,2066,2.259,2067,1.978,2185,1.235,2201,1.081,2304,1.104,2571,1.009,2655,1.235,2702,0.923,2703,1.819,2911,2.259,3127,3.252,3836,1.356,3837,1.356,3919,1.13,4007,1.287,4212,2.481,4296,1.16,4459,1.462,4460,1.462,4461,3.693,4462,1.462,4463,1.462,4464,2.673,4465,4.236,4466,1.462,4467,1.462,4468,1.462,4469,2.481,4470,1.462,4471,1.462,4472,1.462,4473,1.462,4474,1.462,4475,2.673,4476,1.462,4477,1.356,4478,1.462,4479,1.462,4480,1.462]],["component/115",[1,0.4]],["title/116-1",[160,31.609,586,28.616]],["name/116-1",[]],["text/116-1",[]],["component/116-1",[]],["title/116",[202,21.441,232,35.448,247,20.716]],["name/116",[586,0.489,934,0.973,936,1.034,1927,1.049]],["text/116",[1,1.64,8,1.924,24,2.498,33,3.458,35,4.041,40,2.23,55,2.952,66,2.626,74,2.353,77,3.511,139,3.335,160,2.14,166,2.064,168,2.535,169,2.487,176,2.004,192,3.92,200,5.242,201,2.817,202,3.007,203,2.101,214,2.421,219,2.938,228,2.487,232,5.266,236,2.756,237,2.522,238,2.296,239,2.647,245,2.421,247,3.302,251,3.248,259,2.597,330,6.719,339,3.666,340,4.611,345,2.383,357,3.942,358,5.738,359,4.041,377,3.541,416,3.541,418,6.493,456,4.051,472,3.248,494,2.338,527,3.854,565,2.39,568,3.485,717,3.248,911,3.235,931,5.483,1424,5.374,1425,4.152,1457,3.942,1458,4.213,1470,4.515,1549,4.094,1553,4.351,1612,3.358,2883,5.663]],["component/116",[1,0.4]],["title/117-1",[0,18.366,172,28.405,304,22.856]],["name/117-1",[]],["text/117-1",[]],["component/117-1",[]],["title/117-2",[2,14.497,154,19.086,200,24.672,330,39.305,720,25.389,931,37.561]],["name/117-2",[]],["text/117-2",[]],["component/117-2",[]],["title/117-3",[13,16.835,200,24.672,203,20.697,232,26.594,701,26.381,1487,36.116]],["name/117-3",[]],["text/117-3",[]],["component/117-3",[]],["title/117",[200,29.601,247,18.647,330,47.158,931,45.066]],["name/117",[200,0.633,330,1.008,931,0.963,1927,1.049]],["text/117",[0,1.06,1,0.507,2,0.655,8,2.453,11,1.588,13,0.76,15,2.367,18,1.41,20,3.046,24,0.773,27,1.696,28,2.868,31,1.471,38,0.649,40,0.992,52,2.352,55,1.314,56,2.576,57,1.518,74,1.047,77,3.347,115,3.848,154,2.266,158,1.518,160,2.119,162,1.835,164,1.095,166,2.414,168,1.336,172,0.962,175,1.877,176,2.334,187,1.314,192,0.947,193,1.248,195,0.916,200,4.867,201,1.253,202,3.266,203,2.081,218,1.602,227,2.631,232,3.157,238,2.274,239,2.006,247,2.07,248,2.984,251,2.462,252,1.96,259,1.155,271,3.162,274,1.696,276,1.327,277,1.454,281,2.611,283,2.516,288,1.27,295,1.182,296,1.976,304,0.774,310,1.196,312,1.11,319,1.616,322,1.563,330,8.078,342,0.916,345,1.806,369,2.234,377,1.575,386,1.074,409,0.93,421,1.019,446,2.494,460,1.016,479,2.374,483,3.47,487,2.591,515,1.848,532,1.646,534,2.924,539,1.314,566,1.092,601,1.288,618,1.084,623,1.505,643,3.904,660,1.099,663,2.707,669,2.098,698,1.32,701,2.652,719,1.602,720,1.147,725,1.362,728,2.921,729,2.489,730,1.885,731,4.172,735,1.362,744,1.088,754,1.182,763,1.775,780,1.418,799,1.734,805,2.402,807,1.307,811,1.932,840,3.567,850,1.798,895,1.092,931,7.523,934,1.715,1011,1.505,1165,1.775,1213,2.154,1275,1.715,1392,1.715,1487,3.631,1500,1.385,1507,2.519,1518,1.696,1521,2.832,1600,1.904,1603,2.009,1604,1.734,1612,2.545,1614,3.104,1616,1.971,1617,2.391,1629,3.194,1951,2.099,2001,2.051,2201,2.009,2488,1.301,2748,2.051,4027,2.218,4411,2.519,4465,2.519,4481,2.715,4482,2.715,4483,2.715,4484,4.625,4485,2.715,4486,2.715,4487,4.625]],["component/117",[1,0.4]],["title/118-1",[0,16.531,8,15.816,56,18.967,77,24.64]],["name/118-1",[]],["text/118-1",[]],["component/118-1",[]],["title/118-2",[237,24.846,252,19.496,483,29.23,543,34.882,619,28.661,639,36.455]],["name/118-2",[]],["text/118-2",[]],["component/118-2",[]],["title/118-3",[2,15.814,8,14.38,56,17.245,77,22.402,138,21.683]],["name/118-3",[]],["text/118-3",[]],["component/118-3",[]],["title/118-4",[13,22.44,302,39.161,1517,58.158]],["name/118-4",[]],["text/118-4",[]],["component/118-4",[]],["title/118",[8,17.571,56,21.073,77,27.375]],["name/118",[8,0.432,56,0.518,235,0.868]],["text/118",[0,0.711,1,1.244,2,0.748,6,0.714,8,2.751,11,2.49,13,0.482,18,1.577,19,1.184,20,1.385,24,2.064,31,0.419,32,1.273,38,1.237,52,0.67,56,2.533,57,1.018,66,0.741,74,1.631,77,4.26,87,0.746,90,1.155,91,1.478,92,1.125,107,0.73,108,0.805,133,0.752,138,2.398,158,2.702,160,2.335,162,3.266,164,0.694,166,2.02,168,1.222,169,0.701,173,0.928,174,0.845,175,0.815,176,0.708,177,0.755,178,0.585,187,1.5,192,2.083,195,0.58,202,1.132,227,3.762,231,0.817,235,3.424,236,1.4,237,1.748,238,1.167,239,1.344,243,1.451,245,1.679,246,2.834,247,1.094,252,3.212,253,1.418,271,3.883,278,2.201,283,0.607,293,0.727,296,0.735,302,0.841,304,1.207,306,1.234,312,0.704,313,0.863,314,2.379,317,0.768,319,1.025,321,0.999,322,1.784,328,0.916,333,0.791,345,1.21,347,1.61,354,1.054,363,0.685,369,2.461,379,2.185,384,1.998,386,1.226,387,0.904,396,0.947,409,1.062,415,0.922,416,0.999,421,1.941,428,1.412,430,0.968,438,1.698,442,1.531,445,1.184,446,3.589,456,1.431,459,0.894,460,1.582,467,0.968,471,1.034,472,4.136,479,0.883,483,4.201,487,1.814,488,0.888,489,0.833,500,1.203,509,0.947,510,1.757,512,0.859,515,0.687,523,1.007,532,3.137,534,3.508,539,0.833,543,2.455,565,1.214,566,1.701,568,0.983,572,1.125,576,0.709,583,0.99,601,2.007,604,1.334,606,0.894,609,1.65,618,0.687,619,3.705,623,1.718,624,0.672,628,1.007,639,2.565,650,0.646,655,1.3,660,1.255,663,1.007,665,2.475,669,3.02,672,1.784,678,0.854,682,1.856,684,2.753,686,1.331,689,2.177,692,2.003,693,3.964,698,2.904,701,2.27,718,1.075,719,1.83,720,1.309,725,2.123,727,1.156,729,4.079,730,1.264,731,2.921,732,1.064,733,0.99,735,2.997,736,0.833,754,0.749,767,1.125,779,1.591,795,1.249,804,1.044,805,1.61,807,1.492,812,0.878,875,1.034,886,1.125,895,1.247,896,1.629,947,1.958,957,1.597,999,1.597,1021,1.365,1024,0.719,1134,1.227,1209,0.928,1253,1.249,1290,0.947,1327,1.139,1349,0.954,1366,2.266,1389,1.188,1390,0.975,1407,1.406,1435,1.3,1438,0.934,1446,1.406,1460,1.064,1487,1.034,1500,2.158,1517,1.249,1536,1.139,1600,1.207,1601,1.207,1602,2.174,1603,1.273,1604,1.099,1614,1.155,1674,1.249,1892,1.454,1912,1.454,1913,1.515,1914,1.331,1915,1.515,1917,1.099,1919,1.007,1920,1.273,1922,1.406,1927,3.519,1928,1.155,2496,1.515,3066,1.331,3080,1.125,3081,1.515,3092,1.3,3318,2.877,4488,1.721,4489,1.721,4490,1.721,4491,1.721,4492,1.721,4493,1.721,4494,1.721]],["component/118",[1,0.4]],["title/119-1",[0,18.366,172,28.405,304,22.856]],["name/119-1",[]],["text/119-1",[]],["component/119-1",[]],["title/119-2",[2,15.814,77,22.402,247,16.953,534,31.726,1400,27.798]],["name/119-2",[]],["text/119-2",[]],["component/119-2",[]],["title/119-3",[13,15.541,77,18.958,138,18.35,202,14.849,203,19.106,259,23.612,280,29.724]],["name/119-3",[]],["text/119-3",[]],["component/119-3",[]],["title/119-4",[24,17.112,74,23.178,293,25.389,421,22.553,591,19.877,1557,39.803]],["name/119-4",[]],["text/119-4",[]],["component/119-4",[]],["title/119-5",[38,12.318,202,13.789,283,18.169,304,14.699,415,27.602,577,22.525,604,22.177,1643,28.766]],["name/119-5",[]],["text/119-5",[]],["component/119-5",[]],["title/119-6",[74,25.283,176,14.978,280,35.123,811,27.394,1644,37.743]],["name/119-6",[]],["text/119-6",[]],["component/119-6",[]],["title/119-7",[74,23.178,176,13.731,202,16.085,280,32.199,609,31.992,2405,38.834]],["name/119-7",[]],["text/119-7",[]],["component/119-7",[]],["title/119-8",[20,15.75,57,15.789,202,12.87,257,29.452,421,18.046,593,18.208,701,21.108,1571,30.377,4495,44.635]],["name/119-8",[]],["text/119-8",[]],["component/119-8",[]],["title/119",[166,18.766,202,14.849,259,23.612,277,29.724,278,23.612,280,29.724,283,19.566]],["name/119",[200,0.809,202,0.527,280,1.056]],["text/119",[0,0.194,2,0.204,8,1.394,13,0.237,15,0.896,16,0.395,17,3.032,18,0.489,19,1.706,20,1.861,24,1.271,25,1.07,26,0.945,28,0.401,30,2.16,31,0.206,38,1.358,39,0.69,40,1.792,47,0.768,52,1.352,55,0.409,56,2.493,57,1.609,61,0.768,64,0.315,66,0.69,74,1.721,77,2.171,82,2.224,83,1.124,84,1.148,87,1.506,89,0.462,93,0.334,100,0.984,107,0.358,108,1.867,109,1.075,110,0.75,115,0.864,117,1.309,121,2.193,133,0.369,138,0.961,141,1.444,151,0.761,154,0.726,157,1.315,158,1.609,160,1.02,162,0.907,164,0.647,166,1.349,168,0.84,170,0.984,172,0.568,174,0.415,176,1.946,188,0.462,193,3.314,200,0.939,202,3.473,203,1.196,214,0.335,218,0.946,227,2.899,230,0.462,235,1.008,236,0.382,240,1.673,243,1.07,245,1.378,246,2.862,247,0.591,248,0.417,251,0.45,254,0.356,255,0.419,257,3.249,258,0.382,259,0.973,263,0.653,265,1.929,270,2.492,271,2.957,274,1.002,275,3.3,277,1.225,278,0.682,280,5.775,281,0.365,282,2.757,283,3.99,291,0.372,293,0.677,294,0.63,295,1.512,296,0.361,299,2.148,302,1.421,304,0.829,313,0.424,314,0.475,317,0.377,330,0.552,333,0.388,340,0.638,342,0.771,345,0.626,347,0.832,359,0.559,360,2.806,369,0.846,377,0.49,379,1.228,381,1.06,384,0.757,386,0.334,396,0.882,402,0.534,409,0.783,415,2.391,417,0.455,419,1.814,420,0.439,421,1.303,423,0.387,426,0.602,428,2.233,430,0.901,436,0.972,438,2.6,443,3.015,445,0.612,446,0.864,447,0.744,448,0.69,449,2.851,450,2.11,451,0.764,453,0.69,456,0.39,463,0.946,464,1,472,1.217,474,1.617,481,2.151,487,0.362,500,0.328,506,0.552,509,0.465,512,0.8,513,0.638,514,0.539,520,0.508,523,0.938,532,3.446,534,4.886,539,0.409,540,0.915,541,1.951,546,0.377,552,1.387,556,0.67,565,0.896,566,0.34,568,0.482,576,1.643,577,2.32,583,1.999,591,0.279,593,0.32,597,0.453,598,0.546,601,0.401,604,0.69,609,1.547,618,0.337,624,2.355,626,0.901,627,0.703,649,1.141,650,0.858,653,0.539,658,4.784,660,1.406,663,0.494,665,0.938,667,0.915,669,1.81,671,0.358,676,0.946,678,1.135,679,0.472,682,0.703,689,0.356,692,3.428,699,2.474,701,3.569,703,0.721,706,1.374,717,0.45,718,0.528,721,0.613,725,0.424,727,1.665,729,1.643,730,0.344,734,0.455,736,0.776,737,0.552,741,0.575,744,1.965,753,0.575,754,0.996,757,1.048,763,1.048,781,0.422,802,1.012,804,0.512,807,0.772,811,3.56,812,0.431,839,0.981,861,0.923,869,1.012,873,0.387,881,1.692,883,0.67,889,0.447,895,0.645,921,1.362,950,0.923,951,1.338,981,0.426,1024,0.353,1053,1.048,1060,0.429,1067,0.592,1085,0.613,1115,1.978,1121,0.583,1132,0.539,1135,0.522,1143,0.613,1150,0.539,1160,0.517,1169,0.583,1178,1.075,1181,0.613,1182,1.143,1203,0.503,1209,1.568,1221,0.653,1231,0.441,1236,0.552,1282,0.494,1295,0.602,1296,0.434,1299,0.714,1349,2.941,1350,2.061,1368,1.211,1369,0.8,1389,1.107,1396,0.465,1400,3.83,1405,0.482,1413,0.67,1417,1.814,1425,1.091,1426,0.804,1432,0.403,1436,3.085,1437,1.25,1438,1.578,1452,0.559,1461,0.499,1467,0.625,1479,1.075,1480,0.383,1486,0.638,1518,1.817,1526,0.512,1530,0.567,1555,1.355,1557,2.642,1565,0.479,1571,1.012,1603,0.625,1604,1.024,1615,0.517,1624,0.653,1643,0.472,1644,0.486,1648,1.091,1658,0.534,1674,1.163,1677,0.714,1697,0.503,1719,0.583,1720,1.272,1730,1.272,1736,0.653,1763,0.583,1815,1.048,1821,2.919,1833,2.52,1862,0.441,1925,1.66,1973,2.014,2006,0.638,2043,0.517,2066,0.714,2067,0.625,2071,0.638,2211,0.69,2245,0.714,2290,0.69,2299,2.11,2301,0.67,2376,1.487,2405,0.546,2526,0.744,2659,0.592,2702,0.534,2951,2.685,3118,0.714,3119,1.66,3303,0.714,3944,0.583,4017,0.592,4032,0.744,4188,0.638,4263,0.638,4270,0.69,4278,0.714,4305,1.272,4427,0.67,4429,0.714,4495,2.122,4496,0.845,4497,0.784,4498,1.603,4499,0.714,4500,0.845,4501,0.845,4502,0.845,4503,2.56,4504,0.845,4505,0.744,4506,0.784,4507,0.845,4508,0.744,4509,0.845,4510,0.784,4511,0.845,4512,2.907,4513,0.845,4514,0.845,4515,0.845,4516,0.845,4517,0.845,4518,0.845,4519,0.845,4520,0.845,4521,0.845,4522,0.845,4523,0.845,4524,1.603,4525,0.845,4526,0.784,4527,0.845,4528,0.845,4529,0.845,4530,0.784,4531,0.845,4532,0.69,4533,0.845,4534,0.845,4535,0.845,4536,0.784]],["component/119",[1,0.4]],["title/120-1",[0,16.531,20,23.617,56,18.967,202,19.299]],["name/120-1",[]],["text/120-1",[]],["component/120-1",[]],["title/120-2",[2,17.393,202,19.299,227,31.402,661,39.414]],["name/120-2",[]],["text/120-2",[]],["component/120-2",[]],["title/120",[56,17.245,166,22.175,202,17.546,277,35.123,278,27.902]],["name/120",[30,0.953,202,0.527,1290,1.084]],["text/120",[0,0.618,2,0.65,8,1.319,16,2.152,18,0.822,20,2.843,24,0.768,25,1.262,28,2.182,33,3.407,38,0.645,39,1.161,40,2.198,52,1.05,55,2.225,56,1.581,66,1.161,83,1.891,87,1.17,89,1.474,100,1.161,115,1.454,141,1.703,154,1.46,158,1.974,160,2.109,162,1.825,164,1.088,166,2.033,168,0.779,172,0.956,188,1.474,192,0.941,193,3.265,195,0.91,200,3.273,202,3.402,203,2.07,214,1.07,218,2.714,219,2.895,227,4.736,232,3.143,246,2.853,252,0.875,258,1.218,260,1.305,263,2.085,265,1.165,270,1.505,271,3.697,274,4.983,299,3.228,304,1.312,313,1.353,314,1.517,330,1.763,359,1.786,381,1.25,386,2.378,388,2.038,421,1.725,422,1.552,426,1.923,428,1.228,430,1.517,432,1.426,438,3.571,443,3.475,444,2.375,446,4.681,447,2.375,448,4.912,449,2.937,450,2.432,451,1.286,453,2.203,471,1.62,474,1.256,481,2.018,483,2.924,500,1.046,520,2.763,527,3.798,529,1.179,532,2.789,534,2.225,535,1.809,541,1.179,548,2.038,576,1.894,583,2.647,597,1.444,601,3.372,604,1.161,623,2.549,624,1.796,627,2.639,650,1.725,652,1.454,660,1.862,661,4.358,669,3.617,689,2.53,692,1.742,693,5.52,699,1.494,701,1.183,718,3.757,727,2.974,729,4.197,730,1.875,731,3.175,735,1.353,736,3.438,744,2.41,754,2.002,804,1.635,807,4.18,838,1.54,839,1.651,889,1.426,895,1.849,896,2.417,1135,1.668,1165,1.763,1169,3.175,1231,3.141,1281,1.606,1350,1.245,1400,3.381,1436,3.556,1480,1.223,1530,1.809,1615,3.682,1648,1.835,1678,2.279,1714,1.742,1736,2.085,1763,1.862,1794,1.742,1917,3.84,2644,2.279,2702,1.703,3411,1.891,3770,2.375,4110,4.649,4263,2.038,4505,2.375,4506,2.502,4537,2.697,4538,2.697,4539,2.697,4540,2.279,4541,2.697]],["component/120",[1,0.4]],["title/121-1",[160,31.609,586,28.616]],["name/121-1",[]],["text/121-1",[]],["component/121-1",[]],["title/121",[20,26.238,56,21.073,202,21.441]],["name/121",[586,1.413]],["text/121",[8,2.291,56,3.292,77,3.569,166,4.234,202,3.35,259,4.445,277,6.706,278,5.327,280,5.596,283,3.684]],["component/121",[1,0.4]],["title/122-1",[0,20.659,586,28.616]],["name/122-1",[]],["text/122-1",[]],["component/122-1",[]],["title/122-2",[2,14.497,228,24.502,238,22.62,239,26.071,247,15.542,494,23.035]],["name/122-2",[]],["text/122-2",[]],["component/122-2",[]],["title/122",[20,19.684,228,24.502,238,22.62,239,26.071,247,15.542,494,23.035]],["name/122",[20,0.505,228,0.628,1927,1.049,2182,1.021]],["text/122",[0,0.559,1,0.634,2,0.588,6,0.548,8,2.26,11,1.696,15,0.955,18,0.403,19,0.505,20,3.478,24,2.427,27,1.523,28,0.627,37,0.616,38,0.811,39,2.398,40,0.891,44,0.787,52,0.949,54,0.656,56,1.973,57,0.434,61,1.168,65,0.787,66,1.46,74,1.626,77,0.833,93,1.668,100,1.815,107,0.56,108,0.619,110,0.619,119,1.519,122,2.401,128,3.508,134,2.608,138,2.346,147,0.691,154,2.108,157,0.5,158,0.434,160,1.189,162,1.346,164,2.248,166,3.151,168,2.818,176,0.557,178,0.449,183,0.717,187,0.64,192,1.471,202,0.908,204,0.667,228,4.201,230,0.722,231,1.609,232,4.403,235,1.074,236,1.905,238,1.858,239,2.141,240,1.403,241,2.04,245,0.967,247,2.851,248,1.204,251,1.297,252,0.791,253,0.605,259,2.101,265,1.053,271,1.153,273,1.575,274,0.826,276,2.999,277,1.817,278,0.562,281,1.822,283,1.196,288,0.619,296,1.041,303,0.613,304,0.377,306,1.679,310,1.494,312,1.387,316,0.717,333,1.559,339,0.794,342,1.88,345,0.952,346,0.767,347,1.761,354,0.809,360,1.675,369,2.911,379,0.558,380,1.328,384,0.624,386,0.523,395,2.812,396,1.341,402,0.835,405,0.899,406,0.826,413,1.696,416,0.767,417,1.314,421,0.496,428,1.545,438,1.829,442,0.653,445,0.505,455,0.717,456,1.566,457,0.875,460,1.269,466,0.667,471,0.794,480,1.08,481,1.07,482,2.509,483,0.643,487,2.389,494,4.012,495,0.809,496,0.708,500,1.636,509,0.727,511,0.595,515,1.972,521,1.049,529,0.578,535,0.887,539,1.641,540,0.755,543,4.947,547,1.709,559,1.022,567,0.818,577,0.578,583,1.403,586,0.42,601,1.157,604,0.569,618,2.226,623,1.351,624,0.516,626,1.907,627,0.58,634,0.767,644,0.818,650,0.914,652,0.713,655,1.422,659,3.543,660,0.987,662,0.616,663,0.773,664,0.826,665,0.773,666,0.978,684,2.628,685,0.727,688,1.937,689,1.427,690,0.913,692,2.724,693,2.94,698,1.185,699,0.733,702,1.439,715,0.913,716,1.885,720,1.029,725,2.796,727,1.265,729,1.397,730,0.993,735,1.702,738,5.33,739,1.266,744,1.69,751,0.695,754,1.061,779,0.678,781,0.66,802,1.539,805,1.761,811,0.552,812,0.674,823,0.844,832,0.999,848,3.654,886,0.864,895,0.98,911,2.054,934,0.835,1060,0.671,1121,0.913,1147,0.978,1159,1.117,1190,1.575,1238,0.773,1283,1.08,1304,0.624,1349,3.401,1392,0.835,1409,0.78,1420,0.959,1422,1.426,1426,0.663,1435,0.999,1445,1.392,1461,1.439,1463,1.022,1484,0.773,1490,1.523,1492,0.826,1500,1.244,1536,0.875,1541,0.913,1549,3.313,1602,0.927,1604,0.844,1610,1.614,1614,1.635,1719,0.913,1800,0.755,1801,2.866,1839,0.959,1862,0.691,1867,1.08,1893,0.835,1906,1.117,1988,2.693,2016,4.343,2170,2.077,2335,3.564,2358,2.191,2488,1.168,2655,1.117,2812,0.835,2979,1.164,3179,1.164,3199,1.022,3411,0.927,3415,1.117,3882,1.08,4178,1.022,4282,1.117,4286,2.06,4298,3.713,4307,1.117,4536,1.227,4542,1.08,4543,2.437,4544,1.322,4545,1.322,4546,3.913,4547,1.322,4548,5.995,4549,2.437,4550,1.117,4551,1.227,4552,1.227,4553,3.391,4554,1.227,4555,1.227]],["component/122",[1,0.4]],["title/123-1",[0,18.366,172,28.405,304,22.856]],["name/123-1",[]],["text/123-1",[]],["component/123-1",[]],["title/123-2",[2,17.393,119,32.303,228,29.397,911,26.588]],["name/123-2",[]],["text/123-2",[]],["component/123-2",[]],["title/123-3",[5,25.97,20,19.684,38,14.369,44,35.791,168,17.362,659,28.39]],["name/123-3",[]],["text/123-3",[]],["component/123-3",[]],["title/123-4",[13,20.198,754,31.402,2304,54.495,4296,57.221]],["name/123-4",[]],["text/123-4",[]],["component/123-4",[]],["title/123",[57,26.302,228,32.659,494,30.705]],["name/123",[228,0.803,586,0.626,2182,1.305]],["text/123",[0,0.498,1,1.548,2,0.524,5,0.938,8,2.722,13,0.608,16,1.784,18,0.662,19,2.936,20,4.098,24,1.085,26,1.576,28,1.03,31,0.528,37,2.854,38,2.388,39,2.193,40,1.393,44,3.034,52,0.845,55,1.05,56,0.571,57,1.251,63,1.078,65,1.293,66,0.934,72,1.576,77,2.383,87,0.942,91,1.818,93,0.859,100,0.934,104,1.178,110,1.016,119,5.127,122,2.478,126,1.317,133,0.949,138,2.541,154,2.631,157,1.443,158,0.713,159,1.752,164,2.472,166,2.359,168,2.975,172,0.77,175,1.003,176,0.871,178,0.738,183,2.069,192,1.33,209,2.212,214,0.861,225,1.835,227,0.945,228,4.86,231,2.908,232,0.96,236,0.981,237,1.576,238,2.306,239,2.658,240,1.25,241,1.05,245,2.022,247,2.493,255,1.078,258,0.981,259,2.168,265,1.647,288,1.016,291,0.957,303,3.235,304,0.619,306,1.518,311,2.113,312,0.888,314,1.221,323,1.171,333,1.752,334,1.457,335,1.438,345,2.393,347,1.127,359,1.438,369,1.884,380,3.01,383,1.317,389,1.968,393,1.293,395,1.095,396,1.195,405,1.477,406,1.357,409,0.744,411,1.499,413,3.332,415,1.163,422,1.25,423,0.993,428,0.989,442,1.072,456,1.002,459,1.127,470,1.221,479,1.956,489,1.05,494,4.452,501,1.127,506,2.493,507,2.25,509,1.195,541,0.949,543,1.26,546,0.968,552,2.312,565,0.85,566,2.049,599,1.05,608,3.421,618,0.867,634,2.212,650,0.815,655,0.91,659,5.487,677,1.548,684,2.712,716,1.679,720,0.917,724,2.673,744,2.042,754,2.219,759,1.403,848,3.034,911,2.259,951,1.27,1013,1.679,1078,1.317,1116,1.912,1132,1.386,1182,1.548,1205,1.522,1206,1.679,1222,1.576,1244,1.23,1290,1.195,1298,2.015,1304,1.025,1357,4.406,1420,2.767,1426,1.089,1432,1.035,1460,1.343,1463,2.948,1479,1.457,1501,1.679,1521,1.329,1565,1.23,1906,1.835,1980,1.774,1988,5.291,2016,3.752,2304,1.64,2499,1.723,2508,1.477,2564,1.23,2617,1.835,3953,1.723,4178,1.679,4296,1.723,4556,3.812,4557,1.835,4558,1.835,4559,2.015,4560,2.015]],["component/123",[1,0.4]],["title/124-1",[0,18.366,172,28.405,304,22.856]],["name/124-1",[]],["text/124-1",[]],["component/124-1",[]],["title/124-2",[2,14.497,8,13.182,119,26.924,573,40.333,659,28.39,1032,42.154]],["name/124-2",[]],["text/124-2",[]],["component/124-2",[]],["title/124-3",[1,9.629,5,22.263,8,11.301,19,19.686,20,16.874,119,23.08,494,19.747,659,24.337]],["name/124-3",[]],["text/124-3",[]],["component/124-3",[]],["title/124-4",[1,10.37,8,12.169,9,24.854,119,24.854,327,28.987,363,22.092,659,26.208]],["name/124-4",[]],["text/124-4",[]],["component/124-4",[]],["title/124-5",[8,13.182,13,16.835,37,27.999,119,26.924,154,19.086,720,25.389]],["name/124-5",[]],["text/124-5",[]],["component/124-5",[]],["title/124-6",[8,13.182,38,14.369,111,39.803,247,15.542,488,31.029,1047,28.941]],["name/124-6",[]],["text/124-6",[]],["component/124-6",[]],["title/124-7",[8,13.182,38,14.369,240,34.6,247,15.542,1050,29.23,3340,49.107]],["name/124-7",[]],["text/124-7",[]],["component/124-7",[]],["title/124-8",[20,19.684,276,29.379,347,31.213,494,23.035,738,30.164,1052,31.992]],["name/124-8",[]],["text/124-8",[]],["component/124-8",[]],["title/124-9",[20,21.472,228,26.727,494,25.127,1054,38.699,1867,53.567]],["name/124-9",[]],["text/124-9",[]],["component/124-9",[]],["title/124-10",[18,24.421,302,39.161,1056,50.067]],["name/124-10",[]],["text/124-10",[]],["component/124-10",[]],["title/124",[1,9.629,8,11.301,20,16.874,37,24.002,119,23.08,494,19.747,546,22.985,659,24.337]],["name/124",[380,0.772,560,1.231,659,0.931]],["text/124",[0,0.857,1,1.96,2,0.512,5,0.492,7,1.465,8,2.979,9,0.51,11,1.72,13,0.835,14,1.222,15,2.173,18,0.909,19,1.139,20,3.477,21,0.449,24,2.477,26,0.471,31,1.468,37,0.531,38,2.759,40,0.416,45,2.002,52,1.949,55,2.133,56,1.16,57,0.374,71,0.904,77,1.277,89,0.623,93,1.744,100,1.284,107,1.264,108,0.533,111,2.475,119,4.277,122,1.033,128,1.597,138,1.834,147,1.109,150,0.572,151,1.008,154,1.4,158,0.697,159,0.524,160,1.311,164,1.779,166,3.401,168,2.514,172,1.325,175,2.603,176,2.365,177,1.641,178,2.337,179,1.09,183,0.618,188,2.043,192,2.104,195,0.384,202,1,203,0.731,205,0.914,214,0.843,228,3.892,231,0.541,232,0.939,237,1.822,238,0.799,239,0.921,240,2.883,245,0.452,247,2.116,254,2.334,255,2.189,258,0.959,259,2.131,260,0.551,265,0.492,271,1.702,276,2.448,277,1.597,280,0.61,288,2.063,293,0.481,295,2.415,299,0.461,300,0.775,302,1.038,303,0.528,304,0.325,311,0.631,313,1.065,316,0.618,324,0.357,326,0.498,327,1.953,333,0.524,335,0.754,342,1.689,345,1.722,347,2.88,363,2.738,369,1.852,379,0.481,380,3.311,381,0.528,384,0.538,386,0.451,405,0.775,406,0.712,407,2.057,408,1.389,409,1.022,416,0.661,421,0.427,422,0.656,430,1.194,432,0.602,438,1.644,454,1.876,455,1.153,456,0.98,466,0.575,471,0.684,479,0.585,481,0.5,487,1.603,488,3.342,493,1.388,494,4.116,495,0.698,496,0.61,497,0.764,500,0.824,501,1.103,507,1.76,509,1.168,511,0.512,534,2.133,541,0.498,546,0.947,555,0.881,566,1.503,573,1.425,576,1.228,591,0.377,599,3.96,608,0.636,618,1.493,650,0.427,655,0.478,659,4.675,660,0.461,662,0.531,667,0.651,669,0.517,671,1.869,682,0.5,684,0.606,685,1.168,688,1.213,689,0.479,693,1.264,706,0.684,720,0.481,727,0.425,736,0.551,738,3.806,744,0.851,745,0.698,751,0.599,757,1.388,764,1.465,799,0.727,813,0.786,838,0.651,895,0.458,911,0.42,1032,2.091,1047,0.548,1050,0.554,1052,0.606,1054,0.672,1056,0.712,1119,1.587,1123,0.719,1181,1.541,1216,0.727,1278,0.645,1279,0.786,1304,2.619,1349,1.177,1356,0.931,1357,1.341,1385,0.904,1393,0.543,1396,0.627,1400,0.483,1426,2.783,1432,2.102,1575,0.691,1607,3.36,1612,0.627,1714,0.736,1867,3.602,1959,1.541,2010,0.812,2011,0.754,2016,3.694,2170,1.826,2181,2.087,2182,1.975,2488,0.546,2491,1.541,2492,0.963,2582,2.966,2640,0.775,2659,0.799,2702,0.719,2862,1.003,3070,0.861,3340,2.436,4188,1.604,4439,0.861,4561,2.123,4562,2.123,4563,1.139,4564,0.963,4565,0.963,4566,1.139,4567,2.123,4568,1.139,4569,1.139,4570,1.139,4571,1.057]],["component/124",[1,0.4]],["title/125-1",[0,20.659,586,28.616]],["name/125-1",[]],["text/125-1",[]],["component/125-1",[]],["title/125-2",[2,17.393,247,18.647,269,43.739,936,48.391]],["name/125-2",[]],["text/125-2",[]],["component/125-2",[]],["title/125-3",[13,20.198,304,20.573,390,45.066,421,27.059]],["name/125-3",[]],["text/125-3",[]],["component/125-3",[]],["title/125-4",[176,14.978,269,39.766,304,18.705,374,45.272,1047,31.569]],["name/125-4",[]],["text/125-4",[]],["component/125-4",[]],["title/125-5",[175,17.245,176,14.978,269,39.766,304,18.705,1050,31.885]],["name/125-5",[]],["text/125-5",[]],["component/125-5",[]],["title/125-6",[44,30.682,175,13.552,176,11.771,269,31.251,304,14.699,363,20.515,703,23.177,1052,27.425]],["name/125-6",[]],["text/125-6",[]],["component/125-6",[]],["title/125-7",[175,13.552,176,11.771,195,17.383,269,31.251,293,21.765,304,14.699,1054,30.413,1766,33.694]],["name/125-7",[]],["text/125-7",[]],["component/125-7",[]],["title/125-8",[38,13.264,175,14.594,176,12.676,293,23.438,662,25.847,1056,34.674,2178,38.313]],["name/125-8",[]],["text/125-8",[]],["component/125-8",[]],["title/125",[175,17.245,176,14.978,269,39.766,293,27.695,1060,33.269]],["name/125",[269,1.195,1366,1.056,1378,1.405]],["text/125",[0,0.326,1,0.266,2,0.343,3,0.871,6,1.853,7,1.28,8,1.412,11,1.79,13,0.398,14,0.818,15,1.021,16,2.09,18,0.433,19,0.996,20,2.985,24,0.405,28,0.675,35,2.958,37,1.214,38,1.068,44,2.66,52,0.553,55,1.261,56,0.685,57,0.467,64,0.53,66,0.612,75,0.997,77,2.529,82,1.637,91,0.678,93,1.031,94,0.982,102,1.099,110,2.438,114,1.415,119,0.637,128,1.541,132,2.421,133,0.622,154,0.451,157,0.538,158,2.28,159,2.958,162,1.034,164,0.574,166,1.511,168,2.138,169,0.58,175,2.739,176,2.993,187,0.688,192,1.259,193,4.705,195,3.388,202,2.688,205,0.612,214,0.564,231,0.675,237,1.077,238,1.961,239,0.617,241,1.261,243,0.665,247,1.347,252,1.17,254,0.598,263,2.015,265,3.001,268,0.854,269,7.106,270,2.909,271,2.188,275,0.738,276,0.695,277,0.762,278,0.605,280,1.396,281,3.001,286,1.596,291,1.148,293,3.96,294,2.909,296,2.226,303,4.459,304,2.6,311,0.788,312,0.582,324,0.816,327,0.743,330,0.93,333,0.653,339,1.566,345,2.035,363,2.766,368,2.068,374,2.491,379,1.887,386,0.562,390,4.341,409,0.487,411,0.982,414,0.93,415,0.762,417,1.405,421,0.978,446,2.409,450,0.752,455,0.772,460,0.532,466,0.717,467,0.8,472,2.377,479,1.338,481,0.624,482,1.052,487,1.915,494,0.545,500,0.552,512,0.71,517,2.068,521,1.128,529,1.139,540,0.812,541,0.622,546,0.634,549,0.675,566,0.572,567,0.879,586,0.451,606,1.874,627,0.624,629,2.53,643,1.684,650,0.533,652,0.767,660,0.576,661,1.972,662,2.427,663,0.832,665,1.525,669,0.645,678,1.791,686,2.79,699,0.788,703,3.33,705,2.389,717,0.757,720,0.601,727,1.346,751,0.747,774,0.919,779,0.73,780,0.743,813,4.047,818,0.832,936,1.749,947,3.702,948,1.128,1015,1.202,1024,1.089,1038,3.256,1039,1.726,1047,0.685,1049,0.871,1050,0.691,1052,0.757,1054,0.839,1056,0.888,1060,3.266,1085,1.892,1086,1.202,1108,1.032,1150,0.908,1190,1.684,1209,0.767,1210,2.331,1231,5.529,1257,1.128,1259,1.014,1282,0.832,1348,0.941,1366,4.731,1369,0.71,1377,1.929,1378,3.185,1390,0.806,1405,0.812,1432,1.243,1460,0.879,1480,0.645,1528,0.738,1534,1.128,1612,0.782,1622,6.079,1705,1.099,1713,1.128,1766,2.359,1768,6.52,1833,1.892,1835,2.573,1994,2.389,2178,4.047,2461,1.162,2489,3.185,2556,0.806,2691,1.202,2702,0.898,2760,1.128,3070,2.727,3881,1.128,3913,1.202,4550,1.202,4572,1.422,4573,2.203,4574,1.422,4575,1.422,4576,1.422,4577,1.319,4578,1.422,4579,1.422,4580,1.422,4581,2.606,4582,1.422,4583,2.419,4584,2.295,4585,1.319]],["component/125",[1,0.4]],["title/126-1",[0,20.659,421,33.815]],["name/126-1",[]],["text/126-1",[]],["component/126-1",[]],["title/126-2",[2,21.736,247,23.302]],["name/126-2",[]],["text/126-2",[]],["component/126-2",[]],["title/126",[8,12.169,16,25.965,93,21.948,268,33.341,369,20.517,541,24.257,1557,36.744]],["name/126",[369,0.729,390,1.231,1557,1.305]],["text/126",[0,1.424,2,2.144,8,2.735,16,3.638,17,4.808,18,1.182,38,1.858,40,1.418,45,3.329,56,1.02,91,1.849,93,3.516,154,1.232,157,1.468,158,2.04,160,2.727,164,1.565,168,1.795,176,0.886,187,1.877,192,1.353,193,4.086,219,2.992,237,2.569,241,3.007,247,1.607,252,2.015,253,1.775,258,1.752,265,1.676,268,5.845,271,4.075,280,3.329,283,2.741,293,1.638,299,3.599,304,2.218,328,2.064,342,1.308,369,4.611,380,4.066,390,4.858,407,4.278,420,2.014,421,2.332,423,1.775,438,2.552,445,1.482,451,1.849,455,2.105,460,1.451,494,2.381,496,4.164,500,2.411,511,1.745,528,4.598,541,3.398,546,2.772,586,1.232,590,2.105,593,1.468,624,1.515,659,3.672,660,2.516,672,2.233,676,4.588,720,1.638,727,1.447,730,1.581,739,2.014,740,2.399,744,1.555,811,3.248,848,3.7,911,1.43,921,5.792,1100,3.169,1221,2.999,1296,3.189,1331,2.678,1390,2.198,1480,1.76,1557,4.115,1622,4.963,1630,2.931,1653,2.87,1701,2.251,1821,4.063,2035,7.948,3920,3.6,4440,2.931,4586,3.6,4587,3.879,4588,6.214,4589,3.879,4590,3.879,4591,3.879,4592,3.879]],["component/126",[1,0.4]],["title/127-1",[0,18.366,202,21.441,1290,44.093]],["name/127-1",[]],["text/127-1",[]],["component/127-1",[]],["title/127-2",[2,21.736,811,37.653]],["name/127-2",[]],["text/127-2",[]],["component/127-2",[]],["title/127-3",[5,34.617,38,19.153,676,47.289]],["name/127-3",[]],["text/127-3",[]],["component/127-3",[]],["title/127-4",[9,35.888,38,19.153,4593,74.358]],["name/127-4",[]],["text/127-4",[]],["component/127-4",[]],["title/127-5",[280,42.919,390,50.067,1686,43.201]],["name/127-5",[]],["text/127-5",[]],["component/127-5",[]],["title/127-6",[169,32.659,2005,49.554,2703,54.514]],["name/127-6",[]],["text/127-6",[]],["component/127-6",[]],["title/127",[169,29.397,177,31.652,701,31.652,1557,47.755]],["name/127",[1557,2.948]],["text/127",[0,0.724,2,0.761,5,0.759,8,0.385,9,0.786,15,1.237,16,0.822,17,4.861,18,0.535,19,3.599,20,0.575,24,1.495,38,1.754,40,1.572,49,1.134,52,0.683,56,2.067,57,1.036,61,1.512,74,2.025,94,1.212,103,1.63,110,0.822,121,3.317,129,1.178,133,0.768,150,0.881,154,0.558,157,3.149,158,3.092,160,1.508,164,2.443,166,0.594,168,1.948,169,0.716,176,0.401,187,2.541,188,0.96,192,0.613,193,4.329,202,0.47,203,0.605,236,1.426,238,0.661,247,0.816,252,1.024,253,0.803,255,0.872,267,2.098,268,4.41,271,2.058,278,0.747,280,3.931,281,3.594,283,0.619,294,3.089,296,1.348,299,1.278,304,0.901,328,1.68,342,0.592,345,1.233,360,2.594,369,3.692,378,1.393,379,0.742,384,1.491,387,0.923,390,5.453,393,1.046,396,0.966,401,0.966,413,1.729,420,2.233,421,1.97,423,1.444,438,1.724,445,2.314,451,3.748,456,0.811,464,0.768,467,0.988,473,1.275,474,0.818,481,3.221,489,2.93,491,1.163,495,1.075,500,0.681,505,1.121,515,1.261,538,1.065,541,0.768,543,2.496,550,1.358,563,1.065,565,0.688,566,0.706,576,2.163,604,0.756,609,0.935,618,1.718,624,2.051,626,1.775,649,1.576,650,1.97,660,2.452,667,1.003,671,2.567,672,1.817,676,5.151,682,2.305,685,0.966,701,4.981,703,2.724,705,5.205,706,1.897,718,1.973,727,3.624,729,4.113,730,1.287,735,1.584,736,4.399,737,1.148,743,1.252,744,0.704,747,1.434,751,0.923,779,1.62,811,4.678,818,1.028,839,1.075,848,1.046,873,0.803,882,1.231,894,1.212,895,0.706,911,1.164,921,2.561,951,1.847,1011,0.973,1024,0.734,1061,1.019,1064,1.134,1115,2.148,1123,1.109,1150,4.687,1165,3.96,1182,1.252,1208,2.441,1212,1.434,1290,0.966,1296,1.62,1401,2.214,1405,4.489,1456,1.028,1480,0.797,1500,0.896,1506,5.233,1555,2.668,1557,4.466,1578,1.121,1604,2.016,1622,2.401,1648,3.573,1658,1.109,1686,0.947,1719,2.18,1821,4.799,1892,7.684,1928,1.178,2005,1.086,2043,1.075,2045,1.327,2067,1.299,2102,1.393,2358,1.134,2703,2.926,3293,1.546,3303,3.635,4586,2.93,4593,1.63,4594,1.756,4595,1.756,4596,1.756,4597,1.756,4598,1.63,4599,2.336,4600,1.546,4601,2.78,4602,1.546,4603,1.756,4604,1.756,4605,1.756,4606,1.63,4607,1.756,4608,1.756,4609,1.756,4610,1.756,4611,1.756]],["component/127",[1,0.4]],["title/128-1",[0,20.659,586,28.616]],["name/128-1",[]],["text/128-1",[]],["component/128-1",[]],["title/128-2",[2,15.814,660,26.545,819,45.272,820,32.38,947,41.413]],["name/128-2",[]],["text/128-2",[]],["component/128-2",[]],["title/128-3",[13,18.364,15,25.685,176,14.978,247,16.953,819,45.272]],["name/128-3",[]],["text/128-3",[]],["component/128-3",[]],["title/128",[138,29.803,819,62.227]],["name/128",[819,1.886,947,1.725]],["text/128",[0,0.451,2,0.475,8,2.745,11,2.247,13,0.551,15,3.073,16,1.636,18,0.6,19,0.752,20,1.871,21,0.776,24,2.625,26,0.814,28,1.659,31,1.148,35,1.303,38,2.109,52,1.361,56,1.503,61,0.943,64,0.734,74,1.348,77,0.673,93,1.383,96,1.243,109,0.925,113,1.243,120,3.012,128,2.795,133,0.861,138,3.668,143,2.346,150,2.367,154,2.078,157,2.743,158,2.378,162,0.781,164,1.903,168,0.569,169,1.425,172,0.698,176,2.613,192,1.22,195,0.664,197,2.12,202,0.527,231,1.659,235,0.867,236,2.13,238,1.316,239,0.854,245,1.387,247,1.873,252,1.53,254,2.754,257,2.141,260,0.952,265,0.85,267,1.397,271,0.669,280,1.054,281,0.85,286,1.205,290,4.074,291,0.867,293,1.477,296,0.841,299,1.415,304,0.562,305,3.626,306,2.884,310,1.541,317,4.114,324,1.789,345,1.842,346,2.029,376,1.522,379,2.413,380,3.277,413,1.406,420,1.022,421,0.739,432,1.041,438,1.148,445,0.752,455,1.069,461,2.082,462,0.972,464,0.861,481,1.534,487,1.499,489,0.952,500,1.357,502,1.194,512,0.982,517,1.562,523,2.046,529,0.861,539,3.505,541,2.062,545,1.183,555,1.522,565,0.771,586,0.625,606,1.022,618,2.282,624,0.769,627,3.443,658,1.562,659,2.228,660,1.909,661,4.288,662,3.654,669,0.893,682,0.864,685,1.083,698,2.778,700,1.115,701,2.07,705,1.303,720,3.06,725,2.867,726,2.185,727,1.304,729,2.353,734,1.885,744,3.144,751,1.035,754,0.857,778,1.257,780,1.028,786,3.853,807,0.948,811,0.822,819,8.198,820,4.356,831,2.208,866,3.123,867,1.562,873,0.901,947,5.284,981,0.993,1011,1.938,1021,5.748,1036,1.303,1084,1.664,1132,1.257,1159,1.664,1160,2.141,1210,2.259,1238,2.76,1271,2.208,1290,1.083,1322,1.303,1357,2.208,1401,1.38,1404,1.562,1432,1.667,1480,0.893,1513,1.359,1548,1.404,1572,1.457,1622,1.099,1738,1.522,1839,1.429,1911,1.522,1917,2.233,1994,2.315,2010,1.404,2484,1.194,2603,3.209,2703,1.339,3747,1.404,3834,1.827,4612,1.969,4613,1.969,4614,1.969,4615,1.969,4616,1.969,4617,1.969,4618,5.713,4619,7.245,4620,3.496,4621,1.969,4622,3.079,4623,1.969,4624,1.969,4625,1.969,4626,1.969,4627,1.969]],["component/128",[1,0.4]],["title/129",[11,27.516,138,26.496,619,38.203]],["name/129",[8,0.338,11,0.529,138,0.51,235,0.679]],["text/129",[0,1.015,2,1.403,8,2.347,11,1.998,12,1.91,13,0.723,15,1.011,18,0.787,20,0.845,52,1.005,56,1.53,74,0.995,138,3.925,154,1.406,157,1.677,158,1.91,159,1.186,160,1.554,162,1.024,164,1.787,168,1.279,169,1.052,170,1.111,184,1.81,192,0.9,202,1.185,231,2.102,236,2.001,241,1.249,245,1.024,247,1.145,248,1.274,252,3.471,259,1.098,271,3.4,283,2.433,293,1.09,296,2.485,308,1.42,310,1.952,313,1.295,317,4.628,321,6.526,322,3.349,328,4.828,329,1.688,342,0.871,347,2.3,361,1.537,379,2.915,384,1.219,386,1.021,396,1.42,422,1.486,436,3.529,438,1.91,445,1.692,459,1.34,460,1.657,467,1.451,470,1.451,500,3.29,515,1.031,529,1.128,535,2.972,539,2.143,540,1.474,541,1.128,549,1.225,565,1.011,572,1.688,576,1.063,577,1.936,586,0.819,591,0.853,593,0.977,595,1.111,596,1.274,598,1.667,606,2.3,607,4.306,609,1.374,619,4.564,623,2.455,624,1.008,627,1.133,629,4.081,630,4.313,639,1.565,660,3.875,663,1.51,664,1.613,665,2.592,667,1.474,669,3.131,670,2.048,671,1.094,679,3.248,682,2.554,685,1.42,689,2.904,698,4.411,699,2.455,701,2.554,702,1.523,703,3.104,719,1.523,721,1.873,725,3.463,727,0.963,729,3.736,730,1.052,734,1.392,735,1.295,737,1.688,739,1.34,740,1.596,743,1.84,745,1.58,804,1.565,805,3.022,811,2.883,820,1.274,848,1.537,886,2.896,888,4.5,889,4.484,890,6.713,892,2.181,926,4.631,927,4.918,947,2.798,1039,1.709,1060,1.309,1158,2.972,1282,1.51,1308,1.782,1386,5.019,1426,1.295,1521,2.712,1530,1.732,1537,2.048,1714,1.667,1794,1.667,1811,2.798,1862,1.348,1877,1.84,1892,2.181,1928,1.732,2045,1.95,4440,1.95,4622,2.273,4628,2.581,4629,2.581,4630,5.819,4631,2.581,4632,2.273,4633,2.581,4634,2.395,4635,2.395,4636,2.581,4637,2.581]],["component/129",[1,0.4]],["title/130-1",[160,31.609,586,28.616]],["name/130-1",[]],["text/130-1",[]],["component/130-1",[]],["title/130",[8,15.816,138,23.849,169,29.397,619,34.387]],["name/130",[8,0.432,235,0.868,1853,1.245]],["text/130",[8,2.689,11,3.467,138,4.543,170,4.345,235,4.449,252,3.275,487,4.329,577,4.413,619,4.814,819,6.971,932,7.807,4105,9.37,4634,9.37,4635,9.37,4638,10.096]],["component/130",[1,0.4]],["title/131-1",[0,20.659,586,28.616]],["name/131-1",[]],["text/131-1",[]],["component/131-1",[]],["title/131-2",[2,14.497,82,27.267,214,23.853,604,25.871,1452,39.803,2942,46.48]],["name/131-2",[]],["text/131-2",[]],["component/131-2",[]],["title/131-3",[13,16.835,82,27.267,200,24.672,227,26.173,604,25.871,1452,39.803]],["name/131-3",[]],["text/131-3",[]],["component/131-3",[]],["title/131-4",[175,14.594,176,12.676,178,18.862,450,29.347,591,18.35,604,23.882,1400,23.525]],["name/131-4",[]],["text/131-4",[]],["component/131-4",[]],["title/131-5",[175,15.809,176,13.731,275,31.213,450,31.79,593,22.756,604,25.871]],["name/131-5",[]],["text/131-5",[]],["component/131-5",[]],["title/131-6",[84,30.164,138,19.877,175,15.809,176,13.731,595,25.871,604,25.871]],["name/131-6",[]],["text/131-6",[]],["component/131-6",[]],["title/131",[138,23.849,252,23.391,487,30.921,577,31.526]],["name/131",[8,0.338,138,0.51,329,1.008,577,0.674]],["text/131",[0,0.634,1,0.712,2,0.919,6,0.629,8,2.338,11,2.304,13,0.774,15,1.083,18,1.161,20,2.006,30,0.734,31,2.141,37,0.707,38,2.176,39,0.653,56,0.399,64,0.566,66,0.653,77,0.945,82,3.992,84,2.358,87,0.658,102,1.173,104,0.823,107,1.172,120,0.969,129,1.018,133,0.663,138,3.942,141,0.958,157,1.779,158,1.251,159,0.697,160,1.916,164,2.472,166,1.289,168,1.769,169,1.127,170,1.64,175,2.314,176,2.202,178,2.082,192,1.329,193,0.697,198,1.101,200,2.242,202,0.406,203,0.522,204,0.765,205,0.653,209,0.88,214,1.864,227,1.659,231,1.808,236,0.685,245,1.864,247,0.392,252,2.343,259,1.177,265,0.655,267,0.606,271,1.597,275,1.978,276,0.741,277,0.812,283,2.547,299,4.169,304,0.433,308,1.522,310,2.07,311,0.841,317,2.096,321,0.88,322,2.704,342,3.474,345,1.08,347,0.788,379,0.641,386,0.6,387,0.797,402,0.958,407,0.835,413,1.112,438,2.202,442,0.749,445,1.456,450,4.963,460,1.034,463,0.895,466,0.765,474,0.707,481,1.672,487,2.626,488,1.427,489,0.734,500,1.073,509,0.835,512,1.38,515,0.606,532,0.92,539,0.734,540,2.176,546,0.677,549,0.72,565,0.594,577,5.028,586,0.482,591,0.914,593,1.047,595,0.653,598,0.98,604,4.513,618,1.522,619,2.604,624,1.08,626,1.555,660,2.716,669,1.728,679,4.518,682,1.214,685,2.097,689,3.233,698,1.345,700,0.86,701,1.214,702,0.895,703,1.714,704,1.004,705,1.004,725,5.262,726,3.828,727,0.566,729,0.625,734,0.818,744,1.527,754,0.66,793,1.082,805,1.978,811,3.209,873,0.694,889,0.802,909,1.146,911,2.014,926,1.018,934,1.746,950,0.873,1060,0.77,1061,0.88,1115,4.914,1121,1.047,1123,0.958,1128,0.888,1182,3.894,1236,0.992,1295,1.082,1350,2.169,1390,2.662,1400,4.28,1432,0.723,1446,1.239,1452,6.384,1512,1.71,1518,0.948,1536,1.004,1701,2.726,1877,1.082,1918,1.239,1928,1.018,1946,1.047,1997,0.792,2011,2.523,2103,5.988,2488,2.251,2643,1.146,2738,2.194,2752,3.476,2753,5.477,2755,1.122,2756,1.122,2942,3.633,3076,1.239,3209,1.082,3670,1.408,4622,1.336,4639,1.239,4640,1.408,4641,1.336,4642,1.336,4643,4.229,4644,4.36,4645,3.81,4646,4.698,4647,1.517,4648,2.765,4649,2.765,4650,1.517]],["component/131",[1,0.4]],["title/132",[8,17.571,138,26.496,170,34.484]],["name/132",[8,0.432,138,0.652,170,0.848]],["text/132",[0,1.288,1,0.64,8,2.689,11,3.366,20,3.21,24,2.597,26,3.416,31,2.011,38,1.708,47,3.423,66,1.475,77,1.171,91,1.634,100,1.475,107,1.452,119,1.535,133,2.456,138,4.224,150,1.719,154,2.624,157,4.836,158,1.125,164,1.382,166,1.159,168,1.623,170,3.557,172,1.215,173,1.847,174,2.761,175,1.879,176,1.632,177,1.504,178,1.91,179,2.884,180,4.591,183,3.05,192,1.195,200,2.306,201,1.582,227,2.447,237,1.416,247,2.137,251,1.823,254,1.442,259,1.458,265,1.48,267,2.245,282,4.017,283,2.914,302,1.674,304,1.603,310,2.476,313,2.82,342,1.156,346,1.988,357,3.63,380,1.342,390,2.141,413,1.378,414,2.24,415,1.835,422,1.972,430,1.927,438,1.125,446,1.847,461,5.837,464,3.613,470,1.927,494,2.737,502,2.078,507,2.022,532,2.078,539,3.456,549,1.626,560,2.141,565,1.342,618,1.368,659,1.618,679,7.209,698,1.666,703,1.541,725,2.82,764,1.683,780,2.935,832,2.589,896,1.801,897,3.137,904,2.799,911,2.072,932,2.649,934,2.164,1081,2.299,1107,2.896,1119,1.823,1291,2.535,1357,2.164,1392,3.549,1396,1.885,1437,1.872,1513,2.365,1523,3.674,1528,2.918,1538,1.956,1622,1.913,2047,2.299,2122,2.896,2488,2.692,2560,2.269,2564,3.184,2741,3.179,2781,2.799,4651,3.426,4652,2.403,4653,2.799,4654,3.426]],["component/132",[1,0.4]],["title/133",[202,24.117,1528,46.799]],["name/133",[202,0.527,586,0.626,1528,1.023]],["text/133",[1,1.741,8,2.044,20,2.175,28,5.109,33,3.763,52,3.627,55,3.213,77,2.269,87,4.042,133,4.074,138,3.56,157,2.514,168,3.11,170,2.858,192,2.317,201,4.302,202,3.123,203,3.209,230,6.379,258,3,259,2.826,346,3.854,361,3.954,395,3.351,438,2.18,459,6.061,464,4.706,494,2.545,624,3.639,655,2.785,679,3.707,703,5.732,896,4.898,921,3.954,929,4.107,1231,3.469,1480,3.012,1528,5.59,1893,4.194,2172,7.527,4652,7.55,4655,6.641]],["component/133",[1,0.4]],["title/134-1",[0,20.659,423,41.238]],["name/134-1",[]],["text/134-1",[]],["component/134-1",[]],["title/134-2",[2,21.736,195,30.403]],["name/134-2",[]],["text/134-2",[]],["component/134-2",[]],["title/134-3",[13,22.44,74,30.895,1279,55.321]],["name/134-3",[]],["text/134-3",[]],["component/134-3",[]],["title/134",[0,20.659,511,40.538]],["name/134",[0,0.452,195,0.665,238,0.742]],["text/134",[0,1.566,1,0.601,2,1.286,7,3.357,8,0.705,13,1.494,16,2.495,18,0.98,19,1.228,24,0.915,26,1.329,31,1.663,38,1.9,40,1.175,42,7.179,56,2.5,60,1.95,64,1.199,74,1.24,97,1.932,100,1.384,107,1.363,156,2.486,158,2.243,166,1.087,168,1.973,169,2.174,172,1.14,175,2.091,176,1.816,178,2.322,193,1.478,195,1.085,202,0.86,203,1.107,213,3.682,253,4.034,255,2.647,260,1.556,267,2.13,271,4.093,284,2.334,296,1.373,313,1.614,324,1.007,386,1.272,387,1.69,403,2.102,423,1.471,428,3.113,438,3.953,442,2.633,445,2.037,449,4.363,451,3.791,454,2.676,462,3.374,511,3.073,529,1.406,553,1.822,576,3.915,591,1.063,593,1.217,595,1.384,596,1.588,597,1.722,655,2.236,657,1.932,671,3.37,700,3.872,714,2.334,727,2.965,739,5.471,744,4.381,781,2.662,896,2.803,911,2.931,1119,4.231,1147,3.946,1279,2.22,1437,1.757,1438,2.895,1524,4.03,1588,2.031,1676,2.102,1722,2.627,1864,2.379,1919,1.882,2238,2.486,2571,7.781,2574,2.718,2746,2.984,2989,2.718,3070,4.03,3919,6.817,3944,6.087,4423,2.627,4439,5.163,4656,2.832,4657,5.333,4658,3.215,4659,3.215,4660,3.215,4661,5.333,4662,5.333,4663,6.341,4664,2.984,4665,2.984,4666,3.215,4667,3.215,4668,3.215,4669,3.215,4670,2.832,4671,5.582,4672,5.283,4673,5.333,4674,5.333,4675,3.215,4676,3.215,4677,3.215,4678,3.215,4679,2.718]],["component/134",[1,0.4]],["title/135-1",[0,20.659,423,41.238]],["name/135-1",[]],["text/135-1",[]],["component/135-1",[]],["title/135-2",[2,21.736,195,30.403]],["name/135-2",[]],["text/135-2",[]],["component/135-2",[]],["title/135-3",[13,22.44,74,30.895,1279,55.321]],["name/135-3",[]],["text/135-3",[]],["component/135-3",[]],["title/135",[2,21.736,511,40.538]],["name/135",[2,0.475,195,0.665,238,0.742]],["text/135",[0,1.243,2,0.661,6,0.623,7,3.275,8,0.829,13,0.767,15,1.073,16,1.768,18,0.458,19,1.781,24,0.427,26,0.621,31,0.919,38,1.826,40,0.549,56,2.457,60,0.911,64,1.409,74,0.579,78,1.954,83,3.803,84,1.375,96,2.386,97,0.902,100,0.646,107,0.637,110,0.703,158,1.997,164,0.606,168,0.791,172,0.532,175,1.888,176,1.64,178,2.596,188,1.497,192,0.524,193,2.142,194,1.227,195,1.275,199,1.111,201,3.887,202,0.402,203,0.517,205,2.619,215,5.142,247,0.388,253,2.133,255,2.314,260,0.727,267,1.509,271,4.042,284,1.09,293,0.634,296,1.614,299,1.109,304,0.782,313,1.375,333,0.69,343,1.161,358,0.982,360,1.353,361,2.25,386,1.494,387,1.44,423,0.687,428,2.47,438,3.99,449,1.75,451,1.802,454,3.053,456,0.693,462,2.302,474,1.276,511,1.699,512,1.367,529,1.652,553,0.851,567,0.929,576,3.316,577,1.652,591,0.497,593,0.568,595,0.646,596,0.742,597,0.804,601,0.713,604,1.626,618,0.6,627,0.659,655,2.551,671,4.07,689,1.153,700,4.328,703,1.699,714,1.09,718,0.938,727,2.678,739,3.966,744,4.497,781,2.706,811,1.145,840,1.617,911,2.968,1053,1.792,1119,4.065,1134,6.662,1141,1.161,1175,1.838,1238,1.603,1239,1.394,1279,1.037,1350,2.503,1422,0.879,1432,0.716,1437,1.497,1438,2.943,1518,1.712,1538,0.858,1578,4.585,1588,0.948,1653,1.111,1676,0.982,1719,1.037,1815,0.982,1919,0.879,1997,0.784,2238,1.161,2571,6.451,2574,1.269,2588,1.269,2744,7.897,2942,4.705,2992,1.322,3138,5.87,3144,2.543,3157,1.269,3208,1.135,3216,1.269,3770,4.105,3919,3.605,3944,5.558,4119,2.922,4421,1.322,4540,2.316,4656,1.322,4670,4.105,4671,3.087,4672,5.552,4679,2.316,4680,3.778,4681,3.778,4682,3.778,4683,3.778,4684,6.186,4685,3.778,4686,7.18,4687,3.778,4688,3.778,4689,3.778,4690,1.502,4691,4.326,4692,3.778,4693,3.506,4694,4.662,4695,4.105,4696,1.502,4697,1.502,4698,1.227,4699,1.394,4700,1.502,4701,1.322,4702,1.502,4703,1.502,4704,2.74,4705,3.778,4706,3.778,4707,3.778,4708,2.74,4709,1.502,4710,1.502,4711,1.502,4712,1.502,4713,1.502,4714,1.502,4715,1.502,4716,1.502,4717,1.502,4718,1.502,4719,1.502,4720,2.74,4721,1.502,4722,1.502,4723,3.778,4724,2.74,4725,1.502,4726,1.502,4727,1.502,4728,2.543,4729,2.74,4730,1.502,4731,1.502,4732,2.74,4733,1.394,4734,1.502,4735,1.502,4736,1.502,4737,1.502,4738,1.502,4739,2.74,4740,1.502,4741,1.502,4742,1.502,4743,1.502,4744,2.543,4745,4.598]],["component/135",[1,0.4]],["title/136-1",[0,20.659,423,41.238]],["name/136-1",[]],["text/136-1",[]],["component/136-1",[]],["title/136-2",[2,21.736,195,30.403]],["name/136-2",[]],["text/136-2",[]],["component/136-2",[]],["title/136-3",[13,22.44,74,30.895,1279,55.321]],["name/136-3",[]],["text/136-3",[]],["component/136-3",[]],["title/136",[13,25.241,511,40.538]],["name/136",[13,0.552,195,0.665,238,0.742]],["text/136",[0,1.438,1,0.419,2,0.946,6,0.931,7,3.5,8,0.861,13,1.099,15,0.879,18,0.684,24,0.639,26,0.927,30,1.086,31,1.272,38,1.873,40,0.82,56,2.881,60,1.361,64,1.464,74,0.865,84,1.126,97,1.348,100,0.966,107,0.951,158,2.572,164,0.905,168,0.648,172,0.795,175,2.06,176,1.79,178,2.422,189,6.891,193,1.031,194,7.311,195,0.757,199,1.66,202,0.6,203,0.773,229,4.321,253,3.26,254,0.944,255,1.948,260,1.086,267,1.567,271,3.93,291,0.989,295,0.977,296,1.676,304,1.119,313,5.082,327,1.172,360,1.108,361,5.826,363,0.893,386,0.888,387,2.062,423,1.795,438,2.938,451,4.479,454,1.126,462,5.153,511,2.352,512,1.12,529,0.981,541,0.981,553,1.272,576,3.474,577,0.981,591,0.742,593,1.485,595,0.966,596,1.108,597,1.202,604,0.966,618,0.896,655,2.63,657,1.348,671,4.148,689,0.944,700,4.439,718,1.402,727,2.657,730,0.915,739,2.038,744,4.479,781,3.13,895,1.578,911,2.312,1053,2.566,1081,2.633,1085,1.629,1119,3.792,1134,3.728,1151,1.549,1175,1.506,1209,1.21,1238,1.313,1279,1.549,1413,1.78,1437,1.226,1438,2.13,1441,2.848,1578,5.715,1588,1.417,1641,1.735,1676,1.467,1919,1.313,2105,2.965,2571,8.207,2992,3.456,3080,3.419,3208,1.696,3216,1.897,3919,5.509,3944,5.409,4540,3.317,4656,1.976,4670,6.274,4672,5.509,4679,1.897,4684,6.612,4691,2.082,4693,2.082,4698,5.82,4699,2.082,4701,1.976,4728,3.642,4745,3.951,4746,6.272,4747,5.229,4748,6.272,4749,2.244,4750,2.244,4751,3.924,4752,3.924,4753,2.244,4754,2.244,4755,2.082,4756,3.924,4757,2.244,4758,3.924,4759,2.244,4760,2.244,4761,2.244,4762,2.244,4763,4.043,4764,2.244,4765,2.244,4766,2.244,4767,2.244,4768,2.244,4769,2.244,4770,2.244,4771,2.244,4772,2.244,4773,2.244,4774,3.924,4775,2.244,4776,2.244,4777,2.244,4778,3.924,4779,2.244,4780,2.244]],["component/136",[1,0.4]],["title/137",[511,46.32]],["name/137",[586,1.413]],["text/137",[0,1.913,1,1.56,2,2.013,13,2.337,30,4.038,56,2.195,60,6.597,64,3.113,76,5.392,147,4.36,156,6.453,160,2.927,161,4.729,175,3.183,176,2.764,187,4.038,191,6.175,198,6.058,199,8.049,204,4.211,296,3.565,310,3.677,313,4.188,511,5.981,669,3.786,931,5.215,1026,5.678,1078,5.061,1081,5.6,1325,5.762,1722,6.818,1767,5.526,3216,9.194]],["component/137",[1,0.4]],["title/138-1",[0,18.366,195,27.028,423,36.662]],["name/138-1",[]],["text/138-1",[]],["component/138-1",[]],["title/138-2",[2,21.736,195,30.403]],["name/138-2",[]],["text/138-2",[]],["component/138-2",[]],["title/138-3",[13,16.835,31,14.627,38,14.369,64,22.42,97,36.116,1220,31.401]],["name/138-3",[]],["text/138-3",[]],["component/138-3",[]],["title/138-4",[56,18.967,267,28.808,591,23.849,3209,51.424]],["name/138-4",[]],["text/138-4",[]],["component/138-4",[]],["title/138-5",[30,34.895,267,28.808,462,35.615,1643,40.261]],["name/138-5",[]],["text/138-5",[]],["component/138-5",[]],["title/138-6",[56,18.967,267,28.808,1644,41.513,3147,47.158]],["name/138-6",[]],["text/138-6",[]],["component/138-6",[]],["title/138-7",[42,46.753,56,17.245,267,26.191,911,24.173,2405,42.361]],["name/138-7",[]],["text/138-7",[]],["component/138-7",[]],["title/138-8",[56,17.245,253,30.002,267,26.191,1896,48.518,3075,46.753]],["name/138-8",[]],["text/138-8",[]],["component/138-8",[]],["title/138-9",[56,17.245,267,26.191,2105,49.546,3077,47.594,4781,52.024]],["name/138-9",[]],["text/138-9",[]],["component/138-9",[]],["title/138-10",[7,25.315,56,13.552,175,13.552,176,11.771,178,17.515,228,21.004,593,19.508,671,21.846]],["name/138-10",[]],["text/138-10",[]],["component/138-10",[]],["title/138-11",[267,26.191,671,27.798,1763,45.272,2223,37.743,4782,55.421]],["name/138-11",[]],["text/138-11",[]],["component/138-11",[]],["title/138-12",[267,20.583,438,16.915,445,19.686,671,21.846,889,27.252,1763,35.578,2224,32.545,4782,43.554]],["name/138-12",[]],["text/138-12",[]],["component/138-12",[]],["title/138-13",[42,36.742,267,20.583,438,16.915,537,30.413,671,21.846,911,28.567,2225,38.937]],["name/138-13",[]],["text/138-13",[]],["component/138-13",[]],["title/138-14",[267,20.583,438,16.915,445,19.686,449,32.908,671,21.846,2226,40.884,3147,50.668]],["name/138-14",[]],["text/138-14",[]],["component/138-14",[]],["title/138-15",[0,13.778,7,29.53,56,15.809,342,20.277,671,25.483,4783,55.784]],["name/138-15",[]],["text/138-15",[]],["component/138-15",[]],["title/138-16",[2,14.497,7,29.53,56,15.809,342,20.277,671,25.483,4784,55.784]],["name/138-16",[]],["text/138-16",[]],["component/138-16",[]],["title/138-17",[267,22.165,438,18.216,671,23.525,1896,41.06,2105,41.929,4781,44.027,4785,51.497]],["name/138-17",[]],["text/138-17",[]],["component/138-17",[]],["title/138-18",[38,17.239,295,31.402,595,31.039,1369,35.995]],["name/138-18",[]],["text/138-18",[]],["component/138-18",[]],["title/138-19",[31,15.956,64,24.456,254,27.594,515,26.191,596,32.38]],["name/138-19",[]],["text/138-19",[]],["component/138-19",[]],["title/138",[0,13.778,8,13.182,31,14.627,170,25.871,195,20.277,254,25.296]],["name/138",[0,0.29,8,0.278,31,0.308,195,0.427,1271,0.799]],["text/138",[0,0.523,1,0.23,2,0.664,6,0.266,7,3.886,8,1.026,11,1.367,13,0.639,15,0.482,16,0.3,17,0.396,18,0.195,19,0.872,20,0.21,24,0.182,30,1.104,31,1.704,38,2.438,40,0.649,42,3.563,46,0.714,52,0.691,56,2.78,57,0.583,61,0.307,64,1.745,74,1.23,77,0.779,82,0.291,83,1.245,84,0.321,87,2.029,91,0.305,93,0.487,97,2.392,100,1.549,107,1.525,108,0.831,120,0.409,133,2.668,138,0.754,147,0.335,151,0.584,153,0.43,154,1.857,157,2.214,158,2.004,159,1.654,162,0.254,164,0.497,168,2.571,169,0.261,170,2.402,174,0.315,175,1.314,176,1.394,178,0.776,188,0.673,192,0.96,195,0.77,204,0.323,205,0.276,213,0.442,214,1.983,215,0.353,228,0.502,230,0.35,231,0.304,243,0.3,245,0.254,246,1.083,247,0.166,248,0.316,252,2.397,253,1.459,254,2.229,255,0.318,259,0.524,260,0.595,265,1.189,267,4.77,270,0.687,271,3.286,273,0.414,275,0.639,276,0.313,282,0.999,283,3.596,284,0.465,288,0.3,291,0.542,293,0.271,295,1.734,296,0.274,299,2.471,303,0.297,304,0.507,306,0.707,310,0.282,311,0.355,313,0.618,316,0.348,317,1.423,323,0.345,324,0.201,326,0.28,328,1.214,333,1.049,335,1.822,342,2.916,345,0.25,363,1.585,379,0.52,383,0.388,386,0.253,395,0.621,407,0.353,409,1.364,411,1.575,412,2.176,413,0.258,421,0.24,422,0.708,423,1.259,428,2.131,430,0.999,436,1.384,438,3.557,445,0.872,449,2.298,450,1.903,451,0.305,457,0.424,462,1.966,463,0.378,464,3.72,470,0.692,472,0.341,474,1.063,481,2.193,488,0.331,494,0.681,512,0.32,513,0.93,515,1.099,520,0.385,522,1.564,523,0.375,537,0.378,539,0.31,540,1.303,541,0.776,547,0.449,549,0.584,550,0.495,554,0.414,565,0.894,576,3.667,583,1.022,591,0.587,593,0.466,595,0.276,596,0.608,599,0.31,602,0.457,614,0.523,618,0.256,619,1.716,624,0.891,626,0.36,627,0.54,639,0.388,650,1.197,653,0.409,655,0.516,660,1.612,663,0.375,671,4.357,679,0.991,685,1.755,689,3.329,698,0.311,702,0.726,704,0.815,725,0.321,727,1.342,744,1.596,745,2.658,748,0.843,754,0.279,764,0.315,779,0.329,788,1.022,804,0.388,805,0.639,813,0.85,818,1.866,820,0.608,831,0.405,840,1.048,850,0.424,873,0.563,882,0.449,889,0.339,890,0.863,895,0.258,904,1.005,911,2.975,913,0.495,917,0.474,926,0.43,951,1.039,1053,0.419,1081,0.43,1085,0.465,1100,0.523,1105,0.419,1119,0.655,1128,0.375,1143,0.465,1158,0.43,1160,0.754,1168,0.474,1169,1.226,1175,0.43,1203,0.381,1205,2.523,1209,0.958,1220,1.666,1235,0.436,1238,0.375,1296,1.171,1304,0.581,1345,0.457,1368,0.93,1369,2.919,1389,0.442,1396,2.191,1400,3.283,1426,1.6,1432,0.305,1437,0.673,1450,2.274,1456,0.375,1479,0.43,1480,0.558,1488,0.541,1490,0.769,1492,0.4,1512,0.761,1538,0.366,1565,0.697,1578,1.457,1607,0.43,1615,2.203,1643,0.358,1644,0.369,1701,0.714,1714,0.414,1763,0.85,1800,1.014,1833,0.465,1862,2.915,1896,2.663,1935,0.449,1997,5.558,2047,1.192,2066,0.541,2067,0.474,2105,2.719,2171,2.89,2178,0.442,2182,0.815,2223,0.369,2224,0.405,2225,0.484,2226,0.508,2405,0.414,2564,4.659,2571,0.85,2577,1.084,2582,0.508,2599,2.009,2617,0.541,2812,0.777,2942,1.764,2951,2.466,2993,1.142,2994,2.89,3075,0.457,3077,0.465,3080,0.419,3147,5.821,3208,0.484,3209,0.877,4044,0.508,4047,0.564,4094,3.041,4209,0.541,4254,0.564,4307,0.541,4325,0.594,4326,0.594,4327,1.648,4328,1.648,4340,0.594,4367,0.594,4375,0.594,4379,1.142,4644,1.648,4671,1.864,4781,3.712,4782,2.326,4783,0.594,4784,0.594,4785,0.594,4786,1.648,4787,4.637,4788,0.641,4789,0.594,4790,0.594,4791,0.564,4792,0.564,4793,0.641,4794,0.641,4795,0.641,4796,1.231,4797,1.084,4798,0.641,4799,0.523,4800,0.541,4801,0.541,4802,0.523,4803,0.564,4804,0.641,4805,0.641,4806,0.641,4807,0.641,4808,0.641,4809,0.641,4810,0.641,4811,0.641,4812,0.641,4813,0.641,4814,1.231,4815,1.231,4816,1.231,4817,0.641,4818,0.641,4819,0.641,4820,1.776,4821,0.641,4822,1.648,4823,0.641,4824,0.594,4825,0.641,4826,1.084,4827,1.928,4828,0.564,4829,0.641,4830,0.641,4831,1.142,4832,0.594,4833,0.641,4834,0.594,4835,0.641,4836,1.231,4837,0.641,4838,0.641,4839,0.641,4840,0.594,4841,0.641,4842,0.641,4843,0.641,4844,0.641,4845,0.641,4846,0.641,4847,0.594,4848,0.641,4849,1.142,4850,0.641,4851,2.751,4852,2.751,4853,0.641,4854,0.641,4855,0.523,4856,0.594,4857,1.231,4858,0.641,4859,0.641,4860,1.231,4861,0.641,4862,1.231,4863,0.641,4864,2.751,4865,0.641,4866,0.641,4867,0.594,4868,0.641,4869,0.594,4870,1.231,4871,1.231,4872,0.641,4873,1.231,4874,1.231,4875,1.231,4876,0.641,4877,1.142,4878,0.641,4879,0.641]],["component/138",[1,0.4]],["title/139-1",[0,20.659,2600,64.263]],["name/139-1",[]],["text/139-1",[]],["component/139-1",[]],["title/139-2",[2,21.736,588,49.254]],["name/139-2",[]],["text/139-2",[]],["component/139-2",[]],["title/139-3",[13,22.44,195,27.028,660,32.437]],["name/139-3",[]],["text/139-3",[]],["component/139-3",[]],["title/139-4",[31,17.55,175,18.967,176,16.474,1047,34.723]],["name/139-4",[]],["text/139-4",[]],["component/139-4",[]],["title/139-5",[31,15.956,175,17.245,176,14.978,820,32.38,2453,48.518]],["name/139-5",[]],["text/139-5",[]],["component/139-5",[]],["title/139-6",[56,17.245,175,17.245,176,14.978,1827,38.699,3500,48.518]],["name/139-6",[]],["text/139-6",[]],["component/139-6",[]],["title/139-7",[15,28.251,56,18.967,294,28.341,4880,54.495]],["name/139-7",[]],["text/139-7",[]],["component/139-7",[]],["title/139-8",[38,14.369,56,15.809,195,20.277,202,16.085,689,25.296,4881,45.42]],["name/139-8",[]],["text/139-8",[]],["component/139-8",[]],["title/139-9",[38,14.369,56,15.809,195,20.277,202,16.085,421,22.553,4882,47.692]],["name/139-9",[]],["text/139-9",[]],["component/139-9",[]],["title/139-10",[24,15.797,56,14.594,74,21.397,175,14.594,176,12.676,195,18.719,4883,44.027]],["name/139-10",[]],["text/139-10",[]],["component/139-10",[]],["title/139-11",[56,18.967,294,28.341,748,34.223,4884,57.221]],["name/139-11",[]],["text/139-11",[]],["component/139-11",[]],["title/139-12",[175,17.245,176,14.978,730,26.727,1565,37.156,4885,52.024]],["name/139-12",[]],["text/139-12",[]],["component/139-12",[]],["title/139-13",[31,19.497,178,27.235,1050,38.963]],["name/139-13",[]],["text/139-13",[]],["component/139-13",[]],["title/139-14",[588,49.254,2389,58.932]],["name/139-14",[]],["text/139-14",[]],["component/139-14",[]],["title/139-15",[178,27.235,911,29.539,2763,53.055]],["name/139-15",[]],["text/139-15",[]],["component/139-15",[]],["title/139-16",[38,15.674,56,17.245,178,22.288,1349,36.34,2766,44.612]],["name/139-16",[]],["text/139-16",[]],["component/139-16",[]],["title/139-17",[38,15.674,56,17.245,178,22.288,421,24.601,2769,49.546]],["name/139-17",[]],["text/139-17",[]],["component/139-17",[]],["title/139-18",[175,17.245,176,14.978,178,22.288,730,26.727,4886,55.421]],["name/139-18",[]],["text/139-18",[]],["component/139-18",[]],["title/139-19",[31,15.956,166,22.175,175,17.245,176,14.978,1052,34.898]],["name/139-19",[]],["text/139-19",[]],["component/139-19",[]],["title/139-20",[154,20.819,247,16.953,720,27.695,1054,38.699,1615,40.151]],["name/139-20",[]],["text/139-20",[]],["component/139-20",[]],["title/139-21",[138,18.35,283,19.566,317,24.752,419,28.987,591,18.35,619,26.458,1386,35.849]],["name/139-21",[]],["text/139-21",[]],["component/139-21",[]],["title/139",[2,13.383,31,13.503,175,14.594,176,12.676,195,18.719,228,22.618,248,27.403]],["name/139",[2,0.259,31,0.261,195,0.362,228,0.438,248,0.53,2488,0.514]],["text/139",[0,0.518,2,0.201,8,0.866,11,1.18,13,0.234,15,1.903,18,0.254,19,0.319,20,0.74,24,1.881,30,0.404,31,2.224,37,0.389,38,2.184,47,1.647,52,1.891,56,2.928,66,0.359,74,1.523,77,1.35,87,0.362,104,0.453,119,0.374,122,0.77,133,0.692,138,2.45,147,0.436,154,1.899,157,0.856,158,3,160,0.555,161,0.473,162,2.373,164,1.387,166,1.495,168,1.627,169,0.34,172,0.296,175,2.982,176,2.66,177,0.992,178,3.855,179,1.476,183,0.453,195,3.622,197,0.506,200,1.411,201,0.385,202,2.594,203,2.551,214,0.897,227,1.496,228,0.34,235,0.698,236,0.377,238,0.596,241,0.766,245,2.087,246,0.752,247,1.546,248,0.412,252,0.733,253,1.035,255,0.414,259,0.674,260,0.404,270,1.262,271,2.433,276,0.408,277,0.848,278,2.545,283,2.524,288,0.741,291,0.368,293,1.452,294,1.909,295,1.925,296,0.676,299,0.338,305,0.878,306,1.573,310,0.698,312,0.925,317,1.762,324,1.076,328,1.829,342,1.639,369,0.836,379,0.669,380,0.62,384,0.394,386,0.894,387,2.324,389,0.431,396,0.459,407,0.459,409,0.543,419,0.827,420,1.174,421,2.479,438,3.403,445,0.864,446,0.854,449,1.444,450,0.838,451,1.883,455,0.453,456,0.385,460,0.312,464,0.988,466,0.421,479,3.236,481,1.262,487,0.358,488,0.431,489,0.404,500,1.533,511,1.777,512,0.416,515,1.149,523,2.011,529,0.365,532,0.961,534,0.404,537,3.325,538,0.506,541,0.692,542,0.545,546,0.372,548,1.197,552,0.506,575,2.543,576,3.328,588,1.236,591,0.276,599,0.404,601,0.396,608,0.466,618,1.373,619,1.883,624,0.618,628,0.488,650,0.313,655,0.35,657,0.952,660,2.421,665,1.323,667,0.476,669,1.026,671,0.354,672,0.48,682,0.695,685,0.459,689,4.025,699,0.462,700,0.473,717,0.444,720,0.352,725,0.419,727,2.571,728,0.527,729,3.7,730,3.02,732,2.443,733,2.274,734,2.13,735,0.795,736,1.911,739,1.174,744,2.397,748,1.874,764,1.111,779,2.269,804,0.506,807,1.655,818,1.683,820,2.598,840,0.492,882,0.585,889,1.521,895,3.948,897,0.466,911,1.267,921,1.346,934,0.527,1011,0.878,1047,0.402,1050,0.406,1052,0.444,1054,0.492,1074,0.645,1078,0.506,1108,0.606,1160,0.97,1241,1.497,1247,0.533,1304,0.748,1325,0.576,1349,1.253,1350,2.242,1366,1.211,1386,1.461,1390,0.473,1413,0.662,1438,2.637,1459,0.595,1480,0.718,1500,2.684,1518,0.521,1521,0.97,1526,1.744,1540,0.705,1565,1.63,1615,0.511,1629,0.576,1646,0.595,1693,0.662,1701,1.669,1731,0.99,1811,0.527,1827,1.697,1839,1.15,1862,0.436,1946,1.094,2047,0.56,2103,6.872,2106,1.385,2180,1.797,2389,0.545,2453,0.617,2484,0.506,2488,3.021,2600,1.129,2602,1.957,2603,1.078,2618,1.036,2748,0.63,2749,0.705,2752,0.617,2753,0.595,2755,0.617,2756,0.617,2763,0.552,2766,0.568,2769,0.63,2864,0.682,2906,1.129,3090,1.257,3147,1.881,3329,0.774,3411,0.585,3500,0.617,4236,0.735,4237,0.735,4248,1.794,4249,1.172,4250,1.172,4251,1.172,4260,0.735,4261,0.735,4265,0.774,4632,0.735,4653,1.847,4880,0.63,4881,0.63,4882,0.662,4883,0.662,4884,0.662,4885,0.662,4886,0.705,4887,1.584,4888,1.257,4889,0.617,4890,3.894,4891,0.645,4892,0.774,4893,1.584,4894,2.533,4895,1.847,4896,0.834,4897,2.098,4898,0.834,4899,0.834,4900,1.584,4901,0.735,4902,1.094,4903,1.023]],["component/139",[1,0.4]],["title/140-1",[0,18.366,195,27.028,423,36.662]],["name/140-1",[]],["text/140-1",[]],["component/140-1",[]],["title/140-2",[2,21.736,588,49.254]],["name/140-2",[]],["text/140-2",[]],["component/140-2",[]],["title/140-3",[13,20.198,176,16.474,195,24.328,293,30.462]],["name/140-3",[]],["text/140-3",[]],["component/140-3",[]],["title/140-4",[31,17.55,175,18.967,176,16.474,1047,34.723]],["name/140-4",[]],["text/140-4",[]],["component/140-4",[]],["title/140-5",[31,15.956,175,17.245,176,14.978,820,32.38,2453,48.518]],["name/140-5",[]],["text/140-5",[]],["component/140-5",[]],["title/140-6",[56,17.245,175,17.245,176,14.978,1827,38.699,3500,48.518]],["name/140-6",[]],["text/140-6",[]],["component/140-6",[]],["title/140-7",[15,28.251,56,18.967,294,28.341,4880,54.495]],["name/140-7",[]],["text/140-7",[]],["component/140-7",[]],["title/140-8",[38,13.264,56,14.594,195,18.719,202,14.849,895,22.313,3147,36.284,4881,41.929]],["name/140-8",[]],["text/140-8",[]],["component/140-8",[]],["title/140-9",[24,15.797,31,13.503,56,14.594,175,14.594,195,18.719,214,22.02,4882,44.027]],["name/140-9",[]],["text/140-9",[]],["component/140-9",[]],["title/140-10",[24,15.797,38,13.264,56,14.594,195,18.719,671,23.525,3147,36.284,4883,44.027]],["name/140-10",[]],["text/140-10",[]],["component/140-10",[]],["title/140-11",[56,17.245,247,16.953,496,35.123,2554,50.702,4884,52.024]],["name/140-11",[]],["text/140-11",[]],["component/140-11",[]],["title/140-12",[56,17.245,308,36.084,577,28.663,811,27.394,4885,52.024]],["name/140-12",[]],["text/140-12",[]],["component/140-12",[]],["title/140-13",[175,15.809,176,13.731,247,15.542,308,33.079,467,33.806,4904,50.807]],["name/140-13",[]],["text/140-13",[]],["component/140-13",[]],["title/140-14",[38,14.369,56,15.809,195,20.277,202,16.085,529,26.276,4905,50.807]],["name/140-14",[]],["text/140-14",[]],["component/140-14",[]],["title/140-15",[38,11.497,56,12.649,182,22.506,195,16.225,360,23.751,590,26.107,2559,33.729,2560,31.848,4906,40.652]],["name/140-15",[]],["text/140-15",[]],["component/140-15",[]],["title/140-16",[20,16.874,24,14.669,31,12.539,38,12.318,195,17.383,214,20.448,529,22.525,4907,43.554]],["name/140-16",[]],["text/140-16",[]],["component/140-16",[]],["title/140-17",[24,14.669,38,18.523,56,13.552,195,17.383,407,28.357,730,21.004,4908,43.554]],["name/140-17",[]],["text/140-17",[]],["component/140-17",[]],["title/140-18",[24,14.669,56,13.552,74,19.869,154,16.361,175,13.552,176,11.771,195,17.383,4909,47.821]],["name/140-18",[]],["text/140-18",[]],["component/140-18",[]],["title/140-19",[56,15.809,175,15.809,176,13.731,294,23.622,296,25.675,4910,55.784]],["name/140-19",[]],["text/140-19",[]],["component/140-19",[]],["title/140-20",[31,14.627,175,15.809,176,13.731,730,24.502,1565,34.062,4911,55.784]],["name/140-20",[]],["text/140-20",[]],["component/140-20",[]],["title/140-21",[31,19.497,178,27.235,1050,38.963]],["name/140-21",[]],["text/140-21",[]],["component/140-21",[]],["title/140-22",[38,15.674,56,17.245,178,22.288,1349,36.34,2389,42.875]],["name/140-22",[]],["text/140-22",[]],["component/140-22",[]],["title/140-23",[38,15.674,56,17.245,178,22.288,219,31.569,2763,43.418]],["name/140-23",[]],["text/140-23",[]],["component/140-23",[]],["title/140-24",[31,12.539,175,13.552,176,11.771,178,17.515,419,26.918,679,28.766,889,27.252,2766,35.059]],["name/140-24",[]],["text/140-24",[]],["component/140-24",[]],["title/140-25",[31,15.956,166,22.175,175,17.245,176,14.978,1052,34.898]],["name/140-25",[]],["text/140-25",[]],["component/140-25",[]],["title/140-26",[166,24.39,247,18.647,283,25.43,730,29.397]],["name/140-26",[]],["text/140-26",[]],["component/140-26",[]],["title/140-27",[138,18.35,283,19.566,317,24.752,419,28.987,591,18.35,619,26.458,1386,35.849]],["name/140-27",[]],["text/140-27",[]],["component/140-27",[]],["title/140",[13,16.835,31,14.627,175,15.809,176,13.731,195,20.277,228,24.502]],["name/140",[13,0.354,31,0.308,195,0.427,228,0.516,2488,0.606]],["text/140",[0,0.194,2,0.204,6,0.513,7,1.431,8,0.352,11,0.291,13,0.237,15,1.466,18,0.133,19,1.113,20,0.75,21,0.172,24,1.979,25,0.579,26,0.511,30,0.777,31,2.161,38,2.618,40,0.587,42,1.145,46,0.252,47,0.938,52,1.246,56,2.672,57,0.143,61,0.406,74,1.341,76,0.281,77,0.289,84,0.806,91,0.59,107,0.524,109,0.205,128,1.115,133,1.002,138,0.963,143,0.568,144,0.31,147,1.197,154,2.333,157,0.741,158,2.706,159,0.2,160,0.804,162,2.03,164,0.499,166,1.512,168,1.224,175,2.564,176,2.151,177,0.191,178,2.767,179,0.824,181,0.547,182,1.87,183,0.236,187,0.211,192,0.683,195,3.654,198,0.316,200,1.74,202,2.093,203,1.003,205,0.364,213,0.3,214,2.525,219,1.256,227,0.538,228,0.345,245,1.271,246,0.929,247,1.604,251,0.232,252,1.128,253,0.566,254,0.183,258,0.197,259,0.36,260,0.211,267,0.174,270,1.279,271,2.62,276,0.213,278,1.903,280,0.233,281,0.534,283,1.804,284,0.316,286,0.266,288,0.204,293,1.352,294,1.367,295,1.846,296,2.005,299,3.254,304,0.458,305,0.241,306,0.173,308,1.436,309,0.345,312,0.178,313,0.425,316,0.236,317,1.299,320,0.404,324,1.602,328,0.451,333,0.738,342,0.983,345,0.17,347,1.512,357,0.281,359,0.288,360,0.967,363,0.492,369,0.161,379,0.678,380,0.898,386,0.335,407,2.815,409,1.097,419,1.022,423,0.199,428,0.892,432,0.23,438,3.371,442,0.215,445,0.472,446,1.407,449,1.463,450,0.23,451,1.785,454,0.425,456,0.391,463,0.948,464,1.955,467,0.245,474,0.394,479,3.496,481,3.051,483,1.114,488,0.225,489,0.211,494,0.324,496,1.715,500,1.452,501,1.944,509,0.466,511,0.381,512,0.217,515,1.042,520,0.261,523,0.723,526,0.404,529,2.052,532,0.264,537,2.209,541,0.37,545,0.261,548,0.329,549,0.587,552,0.513,563,1.187,565,0.332,566,0.921,568,0.248,576,4.944,577,2.146,588,0.463,590,0.671,591,0.144,599,0.598,601,0.929,609,0.232,618,0.782,619,1.093,624,1.137,626,0.245,627,0.859,649,0.617,650,0.603,657,0.509,660,1.81,661,0.463,665,0.495,669,2.887,671,1.896,676,0.257,679,2.09,682,0.372,685,1.077,688,1.986,689,2.317,700,0.247,703,0.722,718,0.773,720,0.184,727,2.541,728,0.275,729,3.174,730,3.094,732,0.524,733,0.924,734,1.726,735,0.425,736,3.079,738,2.464,739,0.642,744,2.841,748,0.206,753,1.093,764,2.082,778,0.541,779,1.785,807,1.675,811,1.338,812,0.631,818,0.94,820,2.093,838,0.248,840,1.352,850,0.288,869,0.535,883,0.345,889,0.849,895,3.758,911,1.81,934,0.535,948,0.345,950,0.487,951,1.527,987,0.383,1039,0.288,1047,0.209,1050,0.212,1052,0.232,1085,0.316,1119,1.042,1135,1.801,1150,0.79,1160,0.266,1164,0.672,1169,1.582,1175,0.568,1180,1.463,1181,0.316,1209,0.456,1231,1.022,1237,0.345,1238,0.255,1241,1.064,1247,0.278,1252,0.336,1267,0.981,1304,0.584,1349,1.085,1350,1.845,1366,0.453,1368,1.214,1386,0.547,1390,0.247,1396,0.68,1398,0.73,1407,0.355,1413,0.345,1426,0.982,1438,3.538,1443,0.355,1445,0.917,1456,0.495,1480,0.197,1497,1.214,1500,2.282,1518,1.004,1521,0.518,1526,1.766,1530,0.292,1538,0.483,1541,0.854,1565,0.91,1578,0.278,1580,0.404,1607,1.078,1608,0.281,1610,0.819,1612,0.239,1619,0.854,1630,1.479,1701,1.514,1705,0.336,1731,1.432,1740,1.654,1763,1.802,1792,0.867,1800,0.248,1808,0.915,1815,0.284,1821,0.284,1827,0.73,1893,0.275,1921,0.368,1922,0.355,1935,0.305,1965,0.305,1968,0.345,2047,0.292,2103,3.633,2106,2.13,2160,0.316,2170,0.757,2176,0.576,2180,1.82,2181,0.69,2189,0.404,2201,0.322,2389,0.284,2453,0.322,2488,1.098,2498,1.147,2516,0.322,2541,0.31,2554,1.513,2556,0.48,2559,1.126,2560,1.064,2602,0.576,2603,0.296,2617,0.368,2636,0.746,2650,0.672,2748,0.329,2752,0.322,2753,0.604,2755,0.626,2756,0.626,2763,0.288,2766,0.296,2800,0.786,2864,0.355,3090,0.672,3092,0.329,3147,4.804,3399,1.242,3500,0.322,3880,0.404,4037,0.31,4110,0.336,4188,0.64,4248,0.981,4249,0.915,4250,0.915,4251,0.915,4274,0.383,4423,0.355,4499,0.368,4542,0.355,4559,0.404,4653,0.692,4665,0.786,4782,0.368,4786,1.491,4827,1.045,4831,1.147,4832,2.126,4834,0.404,4867,0.404,4880,0.329,4881,0.329,4882,0.345,4883,0.345,4884,0.345,4885,0.345,4888,0.672,4889,0.626,4891,0.336,4894,2.298,4897,1.147,4904,0.368,4905,0.368,4906,0.368,4907,0.368,4908,0.368,4909,0.404,4910,0.404,4911,0.404,4912,0.435,4913,0.435,4914,0.435,4915,0.435,4916,0.435,4917,0.435,4918,0.368,4919,0.404,4920,0.404,4921,0.847,4922,0.435,4923,0.435,4924,0.435,4925,0.435,4926,0.435,4927,0.847,4928,0.435,4929,0.981,4930,1.01,4931,1.01,4932,0.435,4933,0.435,4934,1.491,4935,0.404,4936,0.404,4937,0.435,4938,0.383,4939,0.435,4940,0.435,4941,0.847,4942,0.435,4943,0.847,4944,0.435,4945,0.404,4946,0.435,4947,0.435,4948,0.435,4949,0.435,4950,0.435,4951,0.435,4952,0.435,4953,0.435,4954,0.435,4955,0.435,4956,0.435,4957,0.435,4958,0.847,4959,0.435,4960,0.435,4961,0.435,4962,0.435,4963,0.847,4964,0.435,4965,0.404,4966,0.786,4967,0.847,4968,0.435,4969,0.435,4970,0.404,4971,0.435,4972,0.345,4973,0.435,4974,0.435,4975,0.435,4976,0.435,4977,0.435,4978,1.606,4979,0.435,4980,1.147,4981,0.435,4982,1.414,4983,0.404,4984,1.236,4985,0.435,4986,0.435,4987,0.435,4988,0.435,4989,0.435]],["component/140",[1,0.4]],["title/141-1",[0,20.659,2600,64.263]],["name/141-1",[]],["text/141-1",[]],["component/141-1",[]],["title/141-2",[2,21.736,588,49.254]],["name/141-2",[]],["text/141-2",[]],["component/141-2",[]],["title/141-3",[13,22.44,195,27.028,660,32.437]],["name/141-3",[]],["text/141-3",[]],["component/141-3",[]],["title/141-4",[31,17.55,175,18.967,176,16.474,1047,34.723]],["name/141-4",[]],["text/141-4",[]],["component/141-4",[]],["title/141-5",[31,15.956,175,17.245,176,14.978,820,32.38,2453,48.518]],["name/141-5",[]],["text/141-5",[]],["component/141-5",[]],["title/141-6",[56,17.245,175,17.245,176,14.978,1827,38.699,3500,48.518]],["name/141-6",[]],["text/141-6",[]],["component/141-6",[]],["title/141-7",[15,28.251,56,18.967,294,28.341,4880,54.495]],["name/141-7",[]],["text/141-7",[]],["component/141-7",[]],["title/141-8",[56,14.594,182,25.965,195,18.719,360,27.403,590,30.12,764,27.26,4881,41.929]],["name/141-8",[]],["text/141-8",[]],["component/141-8",[]],["title/141-9",[24,15.797,38,13.264,56,14.594,195,18.719,671,23.525,2103,41.06,4882,44.027]],["name/141-9",[]],["text/141-9",[]],["component/141-9",[]],["title/141-10",[38,10.779,56,11.859,182,21.1,195,15.211,205,19.407,590,24.476,1350,20.815,2559,31.623,2560,29.859,4883,35.777]],["name/141-10",[]],["text/141-10",[]],["component/141-10",[]],["title/141-11",[56,17.245,294,25.767,811,27.394,1149,42.361,4884,52.024]],["name/141-11",[]],["text/141-11",[]],["component/141-11",[]],["title/141-12",[38,13.264,56,14.594,195,18.719,202,14.849,689,23.352,2745,41.06,4885,44.027]],["name/141-12",[]],["text/141-12",[]],["component/141-12",[]],["title/141-13",[33,29.2,38,12.318,56,13.552,195,17.383,202,13.789,219,24.809,529,22.525,4904,43.554]],["name/141-13",[]],["text/141-13",[]],["component/141-13",[]],["title/141-14",[38,11.497,56,12.649,182,22.506,195,16.225,590,26.107,730,19.605,2559,33.729,2560,31.848,4905,40.652]],["name/141-14",[]],["text/141-14",[]],["component/141-14",[]],["title/141-15",[24,14.669,38,18.523,56,13.552,195,17.383,407,28.357,730,21.004,4906,43.554]],["name/141-15",[]],["text/141-15",[]],["component/141-15",[]],["title/141-16",[24,14.669,56,13.552,74,19.869,154,16.361,175,13.552,176,11.771,195,17.383,4907,43.554]],["name/141-16",[]],["text/141-16",[]],["component/141-16",[]],["title/141-17",[56,18.967,294,28.341,748,34.223,4908,60.957]],["name/141-17",[]],["text/141-17",[]],["component/141-17",[]],["title/141-18",[31,19.497,178,27.235,1050,38.963]],["name/141-18",[]],["text/141-18",[]],["component/141-18",[]],["title/141-19",[38,14.369,56,15.809,178,20.432,671,25.483,2103,44.479,2389,39.305]],["name/141-19",[]],["text/141-19",[]],["component/141-19",[]],["title/141-20",[31,12.539,53,40.884,168,14.884,178,17.515,312,21.077,313,25.858,2563,34.575,2763,34.121]],["name/141-20",[]],["text/141-20",[]],["component/141-20",[]],["title/141-21",[38,13.264,56,14.594,162,22.02,178,18.862,895,22.313,2745,41.06,2764,46.902]],["name/141-21",[]],["text/141-21",[]],["component/141-21",[]],["title/141-22",[100,20.7,247,12.435,299,19.471,324,23.029,565,18.84,599,23.272,1350,22.202,2765,40.652]],["name/141-22",[]],["text/141-22",[]],["component/141-22",[]],["title/141-23",[38,15.674,56,17.245,178,22.288,529,28.663,2766,44.612]],["name/141-23",[]],["text/141-23",[]],["component/141-23",[]],["title/141-24",[175,17.245,176,14.978,178,22.288,730,26.727,2769,49.546]],["name/141-24",[]],["text/141-24",[]],["component/141-24",[]],["title/141-25",[31,15.956,166,22.175,175,17.245,176,14.978,1052,34.898]],["name/141-25",[]],["text/141-25",[]],["component/141-25",[]],["title/141-26",[166,22.175,283,23.12,730,26.727,760,43.996,4990,60.851]],["name/141-26",[]],["text/141-26",[]],["component/141-26",[]],["title/141-27",[138,18.35,283,19.566,317,24.752,419,28.987,591,18.35,619,26.458,1386,35.849]],["name/141-27",[]],["text/141-27",[]],["component/141-27",[]],["title/141",[15,17.664,31,10.973,175,11.859,176,10.301,178,23.786,195,15.211,324,14.12,432,23.848,591,14.911]],["name/141",[15,0.323,31,0.2,178,0.28,195,0.278,324,0.258,432,0.435,591,0.272,2488,0.395]],["text/141",[0,0.226,2,0.123,6,0.596,7,1.108,8,0.495,11,0.493,13,0.143,15,1.544,18,0.155,19,0.549,20,0.167,24,1.621,25,0.239,26,0.933,28,0.242,30,0.695,31,1.74,33,0.56,38,2.526,40,0.361,47,0.688,52,1.162,53,0.784,56,2.686,74,1.151,77,0.338,78,0.364,82,0.231,87,0.429,91,0.243,100,0.22,107,0.216,108,0.239,120,0.326,121,0.322,122,0.699,128,0.614,133,0.223,138,1.399,143,0.342,154,1.156,157,1.258,158,2.881,160,0.652,161,0.289,162,1.679,164,0.58,166,1.431,168,1.448,169,0.208,172,0.181,175,2.067,176,1.907,177,0.434,178,3.283,179,0.737,181,0.928,182,2.457,183,0.277,187,0.478,188,0.279,193,0.234,195,3.205,197,0.309,200,1.363,202,1.734,203,0.777,204,0.257,205,0.618,214,0.57,219,0.692,227,0.809,243,0.672,245,0.895,247,1.358,252,1.461,253,0.85,255,0.491,260,0.247,267,0.204,270,0.285,271,3.912,276,0.249,277,0.273,278,0.611,281,1.29,283,1.39,288,0.462,291,0.225,293,0.215,294,1.77,295,1.717,296,1.275,299,2.218,304,0.282,305,0.548,306,1.048,310,0.435,312,2.415,313,0.721,317,1.006,324,2.716,325,1.14,328,0.765,342,1.607,358,0.334,360,1.114,369,0.687,370,0.358,380,1.964,386,0.202,387,2.994,389,0.263,407,1.828,409,0.901,419,0.516,420,0.746,421,0.191,423,0.452,428,1.028,432,0.523,437,0.312,438,3.469,445,0.549,449,3.043,451,2.272,454,0.496,455,0.277,460,0.695,464,1.591,466,0.938,479,2.445,481,0.99,487,0.424,488,0.263,489,0.247,496,0.529,500,1.412,501,1.171,511,0.229,512,0.255,515,1.051,523,0.841,529,1.849,531,0.483,532,0.309,537,3.602,538,0.309,541,0.223,546,0.228,548,0.386,563,0.871,565,0.387,566,0.205,575,2.209,576,4.755,577,1.15,588,0.54,590,1.976,591,0.475,598,0.33,599,0.478,601,1.071,618,0.574,619,1.076,624,0.199,627,0.631,628,0.299,643,0.33,650,0.539,652,0.275,657,1.117,660,1.474,661,0.279,662,0.238,665,0.578,669,0.843,671,2.226,676,0.301,679,0.802,682,0.434,685,0.281,688,1.061,689,3.307,699,0.283,717,0.272,718,0.617,725,0.496,727,2.831,728,0.907,729,3.39,730,3.402,732,1.149,733,1.07,734,1.791,735,0.721,736,4.597,738,1.978,739,1.725,744,2.104,745,0.312,748,0.882,753,0.672,754,0.222,757,0.646,760,0.342,764,1.467,779,2.695,781,0.717,807,1.086,811,1.247,812,0.733,818,1.088,820,1.114,824,1.111,839,0.312,840,2.148,850,0.338,882,0.358,889,0.76,895,4.055,911,1.453,921,0.588,934,0.624,1011,0.796,1047,0.246,1050,0.248,1052,0.272,1100,0.807,1119,0.272,1149,0.928,1150,0.631,1160,0.312,1175,0.964,1185,1.024,1241,2.2,1266,0.646,1292,0.386,1304,0.241,1306,1.518,1325,0.352,1350,3.628,1353,1.349,1366,0.529,1369,0.493,1385,0.405,1386,0.638,1390,0.289,1396,0.791,1398,0.848,1413,0.405,1422,0.299,1436,0.394,1437,0.785,1438,3.092,1443,0.417,1445,0.82,1450,0.364,1452,0.338,1459,0.364,1480,0.448,1484,0.578,1497,1.086,1500,1.695,1512,0.316,1518,0.319,1521,0.605,1526,3.04,1541,0.682,1565,0.56,1575,0.309,1607,0.964,1610,0.654,1615,0.605,1619,0.682,1629,0.682,1693,0.405,1731,3.689,1808,0.731,1827,0.848,1839,0.37,1862,0.516,1896,0.378,1935,0.358,1965,0.358,2043,0.605,2045,0.386,2047,0.663,2103,3.885,2106,1.381,2114,0.682,2170,0.605,2176,0.672,2180,1.161,2389,0.334,2453,0.378,2484,0.309,2488,1.744,2508,0.672,2541,1.325,2554,0.394,2559,1.845,2560,2.611,2563,3.197,2596,0.394,2598,0.405,2600,0.705,2602,0.672,2603,2.878,2745,5.402,2748,0.386,2752,0.378,2753,1.024,2755,1.063,2756,1.063,2763,0.338,2764,0.431,2765,0.431,2766,0.347,2769,0.386,2799,0.473,2831,0.449,2837,0.473,2864,0.417,2906,0.705,3090,0.405,3147,2.38,3294,0.449,3307,0.473,3500,0.378,4052,0.431,4053,0.431,4054,0.431,4248,0.784,4249,0.731,4250,0.731,4251,0.731,4270,0.417,4274,1.265,4297,0.449,4398,0.449,4542,0.417,4632,0.87,4653,0.807,4781,0.784,4856,0.473,4880,0.386,4881,0.386,4882,0.405,4883,0.405,4884,0.405,4885,0.405,4888,1.14,4889,0.378,4890,0.87,4891,0.394,4895,2.15,4901,0.449,4902,2.513,4903,0.928,4904,0.431,4905,0.431,4906,0.431,4907,0.431,4908,0.431,4929,1.14,4930,0.807,4931,0.807,4945,0.473,4965,0.473,4966,0.473,4970,0.473,4980,1.725,4982,1.637,4990,0.473,4991,0.51,4992,0.51,4993,0.473,4994,0.51,4995,2.094,4996,0.51,4997,0.51,4998,0.473,4999,0.51,5000,0.51,5001,0.51,5002,0.473,5003,0.51,5004,0.473,5005,0.405,5006,0.988,5007,0.51,5008,0.51,5009,0.51,5010,1.333,5011,0.51,5012,0.51,5013,0.51,5014,0.51,5015,0.51,5016,0.51,5017,0.51,5018,0.51,5019,0.51,5020,0.51,5021,0.51,5022,0.51,5023,0.988,5024,0.51,5025,0.988,5026,0.51,5027,0.51,5028,0.51,5029,0.51,5030,0.51,5031,0.51,5032,0.51,5033,0.51,5034,0.51,5035,0.51,5036,0.51,5037,0.988,5038,0.988,5039,0.51,5040,0.51,5041,0.51,5042,0.51,5043,0.51,5044,0.51,5045,0.51,5046,0.51,5047,0.51,5048,0.473,5049,1.437,5050,1.437,5051,0.473,5052,0.473,5053,0.473,5054,0.988,5055,0.473,5056,0.473,5057,0.917,5058,0.51,5059,0.51,5060,0.51,5061,0.51,5062,0.51,5063,0.51,5064,0.988,5065,0.51,5066,0.449]],["component/141",[1,0.4]],["title/142-1",[0,20.659,2600,64.263]],["name/142-1",[]],["text/142-1",[]],["component/142-1",[]],["title/142-2",[2,19.324,195,27.028,660,32.437]],["name/142-2",[]],["text/142-2",[]],["component/142-2",[]],["title/142-3",[5,25.97,56,15.809,173,32.41,254,25.296,413,24.171,1428,44.479]],["name/142-3",[]],["text/142-3",[]],["component/142-3",[]],["title/142-4",[56,15.809,173,32.41,421,22.553,618,24.01,1027,42.154,3147,39.305]],["name/142-4",[]],["text/142-4",[]],["component/142-4",[]],["title/142-5",[56,13.552,173,27.784,421,19.334,445,19.686,679,28.766,1028,37.403,2951,39.845,4827,43.554]],["name/142-5",[]],["text/142-5",[]],["component/142-5",[]],["title/142-6",[42,39.566,56,14.594,173,29.919,421,20.82,679,30.977,911,20.457,1031,41.929]],["name/142-6",[]],["text/142-6",[]],["component/142-6",[]],["title/142-7",[9,29.369,166,22.175,173,35.354,192,22.875,421,24.601]],["name/142-7",[]],["text/142-7",[]],["component/142-7",[]],["title/142-8",[1,10.37,166,18.766,192,19.358,278,23.612,306,22.092,1190,35.849,5067,51.497]],["name/142-8",[]],["text/142-8",[]],["component/142-8",[]],["title/142-9",[31,15.956,252,21.266,254,27.594,515,26.191,1686,35.354]],["name/142-9",[]],["text/142-9",[]],["component/142-9",[]],["title/142-10",[56,18.967,174,35.43,257,44.162,2005,44.604]],["name/142-10",[]],["text/142-10",[]],["component/142-10",[]],["title/142-11",[42,42.861,56,15.809,744,24.09,911,22.161,1396,33.079,5068,50.807]],["name/142-11",[]],["text/142-11",[]],["component/142-11",[]],["title/142-12",[56,17.245,744,26.278,1396,36.084,1763,45.272,5069,55.421]],["name/142-12",[]],["text/142-12",[]],["component/142-12",[]],["title/142-13",[56,17.245,159,30.134,174,32.212,1396,36.084,5070,60.851]],["name/142-13",[]],["text/142-13",[]],["component/142-13",[]],["title/142-14",[56,21.073,390,50.067,5071,74.358]],["name/142-14",[]],["text/142-14",[]],["component/142-14",[]],["title/142-15",[202,19.299,423,32.999,2204,43.332,5072,66.93]],["name/142-15",[]],["text/142-15",[]],["component/142-15",[]],["title/142",[64,24.456,173,35.354,174,32.212,195,22.119,595,28.22]],["name/142",[8,0.278,31,0.308,174,0.622,195,0.427,595,0.545]],["text/142",[0,0.814,1,0.162,2,0.857,5,0.375,7,2.239,8,1.186,9,0.389,11,0.805,13,0.657,14,0.5,15,0.645,18,0.265,19,1.558,20,0.768,24,0.668,31,0.725,37,0.766,38,0.975,39,0.374,40,0.317,42,6.022,45,1.256,52,0.913,56,2.791,57,1.166,64,0.614,74,0.904,77,1.017,84,0.436,87,0.377,93,1.178,100,1.529,107,0.698,108,0.406,110,0.77,111,0.575,120,0.555,133,0.38,138,1.507,154,0.745,157,0.888,158,2.223,159,1.078,160,1.246,161,0.932,162,3.272,164,1.201,166,2.187,168,1.672,169,0.354,172,0.308,173,5.44,174,3.722,178,0.559,182,0.406,183,0.471,192,1.887,195,1.004,200,1.674,202,0.797,203,0.807,227,3.189,235,2.984,236,0.392,237,0.359,238,0.327,245,0.93,252,1.478,254,2.105,257,5.952,260,0.796,267,1.629,271,4.056,277,0.881,278,1.267,283,2.833,288,0.406,293,0.99,294,0.341,296,0.703,299,2.19,303,2.508,304,0.248,306,0.934,310,0.725,312,0.355,317,1.585,321,1.728,327,0.86,328,0.876,333,0.756,342,1.952,360,0.429,369,0.867,379,0.367,380,0.34,383,0.527,384,0.41,387,1.232,388,2.684,390,4.882,413,1.197,420,0.854,421,3.647,423,0.753,438,3.147,442,0.813,445,1.137,446,0.887,449,1.051,450,0.459,451,0.785,459,0.854,460,0.325,462,0.429,464,2.96,481,1.559,484,2.491,486,0.549,489,0.796,500,1.582,507,0.513,515,1.419,529,0.38,531,0.425,532,0.998,534,0.42,538,0.527,539,0.796,541,1.302,553,0.492,565,0.919,576,0.358,583,0.5,597,0.465,599,1.135,601,0.412,604,0.708,618,1.419,619,2.174,623,0.481,624,0.916,627,0.722,649,0.821,650,1.71,653,1.051,660,1.651,662,0.405,663,0.963,664,1.028,669,1.611,671,0.994,676,2.406,679,1.309,682,0.381,685,0.478,688,0.496,689,2.97,698,0.8,699,0.912,701,0.722,702,0.513,704,0.575,706,0.522,715,0.6,725,0.826,726,0.543,727,3.076,729,3.7,730,1.662,736,0.42,744,2.591,745,0.532,747,1.344,748,0.412,751,0.457,754,0.378,768,0.765,779,1.203,805,2.117,807,3.113,813,1.136,818,1.742,865,0.806,873,0.397,882,1.644,890,2.088,895,1.64,904,0.71,911,2.263,913,0.672,926,1.104,951,0.963,970,0.672,1011,0.481,1027,0.609,1028,0.63,1031,0.656,1060,0.441,1108,2.161,1123,0.549,1149,1.063,1168,1.218,1180,3.455,1190,0.561,1203,0.517,1350,0.76,1386,0.561,1396,6.538,1400,0.698,1428,1.735,1437,0.475,1438,1.273,1450,0.619,1457,1.063,1480,1.611,1484,2.386,1492,1.028,1500,0.443,1529,0.689,1538,1.339,1542,1.391,1571,1.039,1608,0.561,1619,1.619,1622,0.919,1630,1.772,1675,1.218,1686,0.468,1701,0.504,1739,0.672,1763,5.394,1820,0.63,1821,1.076,1923,0.672,1997,2.13,1998,1.644,2005,0.537,2006,1.243,2171,3.309,2204,3.478,2407,0.806,2564,2.583,2600,1.173,2738,0.689,2904,0.765,2951,0.672,3080,1.533,3083,0.806,3084,0.806,3092,0.656,3147,4.428,3214,0.734,3719,0.806,3747,1.173,3815,0.734,3817,0.806,4094,0.734,4321,1.391,4435,1.449,4436,0.806,4437,0.765,4643,1.136,4653,1.344,4663,2.763,4664,2.763,4799,1.344,4824,0.806,4826,0.765,4827,3.446,4828,0.765,4840,2.176,4847,0.806,4849,0.806,4894,1.449,5067,0.806,5068,0.734,5069,0.734,5070,0.806,5071,0.806,5072,0.806,5073,3.552,5074,0.869,5075,0.869,5076,0.869,5077,0.869,5078,0.869,5079,0.869,5080,1.646,5081,1.646,5082,1.646,5083,0.869,5084,0.869,5085,2.977,5086,0.869,5087,0.869,5088,0.869,5089,0.869,5090,0.869,5091,0.869,5092,0.869,5093,0.869,5094,0.869,5095,1.646,5096,0.869,5097,0.869,5098,0.869,5099,0.869,5100,0.869,5101,0.869,5102,0.869,5103,0.869,5104,0.869,5105,2.763,5106,2.345,5107,1.527,5108,3.552,5109,0.869,5110,1.646,5111,0.869,5112,1.527,5113,0.869,5114,0.869,5115,0.869,5116,0.869,5117,1.646,5118,1.391,5119,0.806,5120,1.646,5121,0.869,5122,0.869,5123,0.869,5124,0.869,5125,0.869,5126,0.869,5127,1.646,5128,0.869,5129,0.869,5130,0.869,5131,0.869,5132,2.345,5133,0.869,5134,0.869,5135,0.869]],["component/142",[1,0.4]],["title/143",[24,18.666,201,30.268,203,22.577,1296,33.65,3358,39.766]],["name/143",[201,0.584,203,0.436,1296,0.649,2488,0.606,3358,0.767]],["text/143",[0,1.392,15,3.425,18,3.417,20,1.988,24,2.917,38,1.451,55,2.938,64,2.264,66,3.763,104,3.295,148,4.258,160,2.129,163,3.414,172,2.152,175,2.948,176,2.561,192,2.118,193,2.79,195,2.048,200,3.589,201,4.036,202,2.34,203,3.528,237,3.614,241,2.938,247,1.57,265,2.623,281,3.777,296,4.376,409,3.51,463,3.583,474,4.072,482,4.492,524,3.467,549,2.881,618,2.425,650,3.28,655,2.546,748,2.881,781,5.114,869,3.835,911,2.238,1216,5.584,1244,3.44,1261,4.817,1296,6.097,1350,2.803,1405,3.467,1411,6.131,1422,3.553,1490,3.794,1612,3.341,1800,3.467,1835,4.329,2479,5.634,2855,5.634,3350,5.347,3358,6.214,4169,4.695,5136,5.347,5137,6.071,5138,5.347]],["component/143",[1,0.4]],["title/144-1",[0,15.03,230,35.834,896,34.463,1231,34.253,2172,40.151]],["name/144-1",[]],["text/144-1",[]],["component/144-1",[]],["title/144-2",[2,15.814,230,35.834,896,34.463,2172,40.151,5139,60.851]],["name/144-2",[]],["text/144-2",[]],["component/144-2",[]],["title/144",[202,14.849,361,33.04,442,27.403,445,21.199,483,26.984,896,29.165,5140,45.333]],["name/144",[896,1.436,5140,2.232]],["text/144",[0,0.892,2,0.939,8,0.853,18,1.186,25,2.915,26,1.608,74,1.501,77,1.33,120,2.485,154,1.978,158,1.277,160,2.185,162,1.544,168,1.124,184,2.729,201,2.876,202,3.131,203,3.067,230,5.681,237,1.608,240,2.24,252,1.262,258,4.023,270,3.478,274,3.893,281,2.692,304,1.777,312,1.592,315,2.94,328,2.071,361,6.19,387,2.045,409,1.333,442,5.602,445,4.909,459,4.046,460,1.456,481,1.708,483,5.055,487,1.668,500,3.023,520,2.338,531,1.902,576,1.603,577,1.701,593,1.473,595,2.681,601,1.847,618,1.554,624,2.433,649,1.942,653,2.485,657,2.338,660,1.575,682,2.734,701,1.708,703,3.504,727,1.451,728,3.935,729,3.209,735,1.953,744,1.56,811,1.626,812,1.986,894,2.687,895,3.582,896,7.084,950,2.24,1169,2.687,1231,4.07,1292,2.94,1349,2.157,1398,2.297,1438,3.382,1480,1.765,1487,2.338,1518,2.432,1528,5.06,1604,2.485,1610,2.577,1616,2.825,1714,2.514,1794,2.514,1893,3.935,2045,2.94,2101,3.611,2172,6.366,2489,2.775,4110,3.009,4306,3.611,4307,3.289,4429,3.289,4931,3.179,5139,7.23,5140,7.96,5141,3.611,5142,3.611,5143,3.891,5144,3.891,5145,3.891]],["component/144",[1,0.4]],["title/145-1",[0,18.366,18,24.421,232,35.448]],["name/145-1",[]],["text/145-1",[]],["component/145-1",[]],["title/145-2",[2,19.324,176,18.303,1275,50.605]],["name/145-2",[]],["text/145-2",[]],["component/145-2",[]],["title/145",[202,19.299,459,37.449,703,32.439,4652,50.576]],["name/145",[1528,1.419,4652,1.916]],["text/145",[0,1.017,2,1.07,8,0.973,18,3.5,19,1.695,20,1.453,21,1.749,24,2.956,38,1.061,40,1.622,133,1.939,138,1.467,158,1.456,160,3.36,161,2.514,162,3.368,164,1.79,166,1.5,168,1.282,175,2.232,176,2.623,178,1.508,192,2.411,193,2.039,201,3.19,202,2.271,203,2.922,214,1.761,232,3.755,246,2.105,247,1.787,255,2.203,259,1.888,270,3.858,271,2.349,295,1.932,296,1.895,299,1.796,342,2.331,354,2.717,357,2.866,379,1.874,386,2.733,410,3.858,417,2.392,421,2.593,438,1.456,459,4.975,462,2.191,464,3.71,481,1.947,483,2.158,515,1.772,523,2.596,553,3.916,565,2.707,566,2.779,576,3.496,601,2.105,624,2.698,649,2.214,669,2.013,701,1.947,703,6.117,721,3.22,729,2.846,804,2.691,812,2.264,981,2.239,1216,2.833,1244,2.514,1275,2.802,1292,3.353,1349,3.83,1397,3.22,1405,3.946,1437,2.425,1438,3.751,1488,3.75,1530,4.637,1536,2.938,1622,2.477,1800,2.534,3086,4.118,3358,2.691,4037,3.164,4440,3.353,4599,6.28,4652,7.282,5146,4.437,5147,3.907,5148,3.907,5149,4.437,5150,3.75,5151,4.437]],["component/145",[1,0.4]],["title/146-1",[160,31.609,586,28.616]],["name/146-1",[]],["text/146-1",[]],["component/146-1",[]],["title/146",[202,21.441,459,41.605,703,36.039]],["name/146",[202,0.527,586,0.626,1528,1.023]],["text/146",[1,1.754,66,4.04,202,3.422,203,3.232,230,5.13,247,2.427,259,3.995,345,3.666,361,5.589,442,4.636,445,3.586,459,6.089,483,4.565,703,5.274,896,6.163,926,6.299,2172,5.748,2728,8.267,4652,8.223,5140,7.669,5152,9.387,5153,9.387]],["component/146",[1,0.4]],["title/147-1",[160,31.609,586,28.616]],["name/147-1",[]],["text/147-1",[]],["component/147-1",[]],["title/147",[174,44.276,304,25.71]],["name/147",[586,1.413]],["text/147",[26,5.341,174,5.414,282,6.198,304,3.686,462,5.443,1523,7.207,3131,8.522]],["component/147",[1,0.4]],["title/148-1",[0,15.03,26,27.102,174,32.212,282,36.876,369,24.243]],["name/148-1",[]],["text/148-1",[]],["component/148-1",[]],["title/148-2",[2,14.497,26,24.846,174,29.53,282,33.806,347,31.213,421,22.553]],["name/148-2",[]],["text/148-2",[]],["component/148-2",[]],["title/148",[26,29.809,174,35.43,282,40.56,304,20.573]],["name/148",[174,1.342,282,1.536]],["text/148",[0,0.853,2,0.898,6,1.544,8,1.904,18,1.135,19,1.422,20,2.477,24,2.712,26,3.938,33,3.407,38,2.436,40,1.361,52,1.449,55,1.801,56,1.581,57,1.222,61,1.784,66,2.588,84,1.868,100,2.588,147,1.945,158,1.974,160,2.652,168,2.943,174,6.567,175,1.581,176,2.549,192,2.097,195,1.256,200,3.563,202,1.609,203,2.989,205,1.602,213,2.57,214,1.477,219,2.895,231,1.767,232,2.66,237,1.539,246,1.767,251,3.2,258,1.682,265,1.608,271,2.044,282,5.358,283,2.12,295,3.293,296,2.568,304,2.718,314,2.094,342,2.028,347,4.508,354,2.28,369,2.223,379,1.572,386,3.769,409,1.275,420,5.795,421,2.256,438,1.974,461,2.217,462,4.287,467,2.094,500,1.445,512,1.858,527,3.797,529,1.627,565,2.355,566,1.497,609,1.981,623,2.063,624,1.454,627,1.634,649,3.001,650,1.397,660,1.507,669,2.727,671,1.578,701,2.639,703,1.675,727,1.389,729,3.576,751,1.957,780,1.945,807,1.792,816,2.954,820,1.838,895,2.418,1437,2.035,1487,2.237,1490,2.326,1521,2.28,1527,2.655,1612,2.049,1794,2.405,1896,4.449,2047,2.498,2108,3.278,2726,3.278,2812,2.351,3147,6.663,4321,3.147,4781,2.954,5154,3.278,5155,3.723,5156,3.455,5157,3.455]],["component/148",[1,0.4]],["title/149-1",[0,13.778,26,24.846,369,22.225,462,29.684,1523,39.305,3131,46.48]],["name/149-1",[]],["text/149-1",[]],["component/149-1",[]],["title/149-2",[2,13.383,26,22.936,347,28.814,421,20.82,462,27.403,1523,36.284,3131,42.908]],["name/149-2",[]],["text/149-2",[]],["component/149-2",[]],["title/149",[26,27.102,304,18.705,462,32.38,1523,42.875,3131,50.702]],["name/149",[174,1.342,1523,1.786]],["text/149",[0,0.848,2,0.892,6,1.535,8,2.083,18,1.128,19,2.286,20,1.959,24,2.463,26,4.2,33,4.268,38,2.068,52,1.44,57,1.215,61,1.773,66,1.592,100,2.575,107,1.569,138,1.224,147,1.933,158,1.964,160,2.098,168,2.743,174,2.939,175,0.973,176,2.321,192,1.291,200,3.551,202,0.99,203,2.979,205,1.592,213,2.555,214,1.468,219,3.626,232,2.647,247,0.957,251,3.184,265,1.599,271,2.56,283,3.05,295,2.605,296,2.555,304,2.709,314,2.081,342,2.018,347,4.932,369,3.198,379,1.563,386,3.422,409,1.267,420,5.781,421,2.245,430,2.081,438,1.215,461,6.05,462,6.269,467,2.081,489,1.79,500,1.436,515,1.478,527,4.756,529,2.615,566,1.488,618,1.478,623,2.051,624,1.445,627,1.624,649,1.847,650,1.388,657,2.223,660,2.422,669,2.714,671,1.569,699,2.051,701,2.626,727,1.38,729,3.563,751,1.945,780,1.933,807,2.88,816,2.936,820,1.827,895,2.406,949,3.023,950,2.13,1210,2.39,1257,2.936,1432,1.764,1437,2.022,1438,2.008,1479,2.483,1484,2.165,1521,2.266,1523,6.644,1612,2.036,1794,2.39,1935,2.595,2812,2.337,2917,3.258,3131,9.34,3147,3.912,4321,3.127,4558,3.127,5154,3.258,5156,3.434,5157,3.434,5158,3.7,5159,3.258,5160,3.7]],["component/149",[1,0.4]],["title/150",[24,17.112,200,24.672,203,20.697,253,27.504,293,25.389,1296,30.848]],["name/150",[200,0.519,203,0.436,253,0.579,1296,0.649,2488,0.606]],["text/150",[15,4.149,18,1.643,24,3.378,56,1.418,64,2.011,66,3.45,77,1.842,87,2.338,89,2.946,100,4.559,104,2.926,107,2.286,108,2.523,148,3.781,151,2.558,163,3.032,175,1.418,176,1.232,195,2.704,200,3.927,201,2.489,202,2.145,233,3.844,237,3.954,241,2.608,247,1.394,253,5.429,271,2.724,281,2.329,293,4.782,295,3.49,314,3.032,345,3.13,409,2.745,432,2.851,472,4.266,474,2.511,487,3.436,515,3.202,524,3.079,549,2.558,650,2.023,655,2.26,715,3.722,727,2.011,729,2.22,748,2.558,754,2.347,781,5.287,807,2.596,911,1.988,1169,3.722,1244,3.055,1261,4.277,1296,6.835,1350,2.489,1411,3.781,1422,3.155,1468,4.557,1490,5.008,1538,3.079,1862,2.816,1928,3.617,3000,6.056,3070,4.074,3358,4.861,4169,4.169,5161,5.391,5162,6.198,5163,6.548,5164,5.003]],["component/150",[1,0.4]],["title/151-1",[0,18.366,304,22.856,586,25.44]],["name/151-1",[]],["text/151-1",[]],["component/151-1",[]],["title/151-2",[2,14.497,175,15.809,176,13.731,650,22.553,3239,49.107,3358,36.455]],["name/151-2",[]],["text/151-2",[]],["component/151-2",[]],["title/151-3",[13,16.835,175,15.809,176,13.731,296,25.675,650,22.553,3358,36.455]],["name/151-3",[]],["text/151-3",[]],["component/151-3",[]],["title/151-4",[15,20.185,175,13.552,176,11.771,281,22.263,591,17.04,781,25.718,1296,26.445,1411,36.137]],["name/151-4",[]],["text/151-4",[]],["component/151-4",[]],["title/151-5",[15,20.185,175,13.552,176,11.771,281,22.263,593,19.508,748,24.452,781,25.718,1296,26.445]],["name/151-5",[]],["text/151-5",[]],["component/151-5",[]],["title/151",[24,18.666,200,26.913,203,22.577,1296,33.65,3358,39.766]],["name/151",[200,0.519,203,0.436,1296,0.649,2488,0.606,3358,0.767]],["text/151",[0,1.17,2,0.736,8,1.878,13,0.855,15,4.039,18,2.997,24,3.149,64,1.138,66,2.198,154,2.444,158,2.526,160,3.616,163,1.717,172,1.81,175,2.989,176,2.656,192,2.685,193,1.403,195,2.596,200,4.036,202,2.478,203,2.949,232,3.405,237,2.721,241,1.477,247,0.789,281,4.248,295,1.329,296,3.658,304,0.871,339,1.834,342,1.723,345,1.192,354,3.127,357,1.972,379,3.251,409,2.636,417,2.753,462,3.801,474,1.422,500,2.986,524,1.743,549,1.448,566,3.095,586,0.969,591,1.009,593,1.156,603,1.907,618,3.7,650,3.475,655,1.28,669,3.491,672,2.939,682,3.759,701,3.378,748,4.395,763,1.996,781,5.521,869,1.928,950,4.43,1216,3.261,1217,2.58,1244,1.73,1261,2.422,1296,6.193,1350,1.409,1392,1.928,1405,1.743,1411,4.617,1422,1.786,1480,2.316,1490,1.907,1536,3.381,1538,5.289,1639,4.051,1800,1.743,1862,3.439,2781,2.494,2914,2.688,3000,6.472,3239,6.287,3358,6.498,4169,2.36,5136,2.688,5138,2.688,5162,7.604,5165,5.797,5166,4.739,5167,2.688]],["component/151",[1,0.4]],["title/152-1",[0,18.366,304,22.856,586,25.44]],["name/152-1",[]],["text/152-1",[]],["component/152-1",[]],["title/152-2",[2,17.393,195,24.328,1639,57.221,3358,43.739]],["name/152-2",[]],["text/152-2",[]],["component/152-2",[]],["title/152-3",[13,18.364,195,22.119,296,28.007,650,24.601,3358,39.766]],["name/152-3",[]],["text/152-3",[]],["component/152-3",[]],["title/152-4",[30,26.849,195,18.719,281,23.974,591,18.35,781,27.695,1296,28.477,1639,44.027]],["name/152-4",[]],["text/152-4",[]],["component/152-4",[]],["title/152-5",[30,24.933,195,17.383,281,22.263,293,21.765,296,22.01,593,19.508,781,25.718,1296,26.445]],["name/152-5",[]],["text/152-5",[]],["component/152-5",[]],["title/152",[195,22.119,200,26.913,203,22.577,1296,33.65,3358,39.766]],["name/152",[195,0.427,200,0.519,203,0.436,1296,0.649,3358,0.767]],["text/152",[0,1.745,2,0.602,6,1.035,8,1.244,13,0.699,18,3.582,24,0.71,30,4.027,52,2.626,56,1.132,64,0.931,66,1.852,82,1.132,107,1.058,110,1.168,154,2.831,158,1.862,160,3.457,163,1.403,193,3.498,195,4.544,200,3.867,201,1.152,202,2.037,203,2.865,232,2.51,237,2.789,241,1.207,247,0.645,271,2.293,281,3.595,293,4.163,296,4.21,299,2.296,304,0.712,339,1.499,342,0.842,345,0.974,354,1.528,379,2.396,386,0.987,409,1.474,417,3.059,421,0.936,462,3.332,466,1.259,474,2.004,500,2.618,524,1.425,549,1.184,553,4.313,565,0.977,566,2.281,586,0.792,591,0.825,593,0.945,601,1.184,603,2.689,618,2.266,649,3.367,650,3.122,655,1.046,669,4.471,672,3.265,682,3.34,701,2.961,719,1.473,720,1.054,727,1.605,729,2.336,744,1,748,1.184,763,1.632,781,4.703,869,1.576,873,1.969,949,2.038,950,3.265,1143,1.811,1216,2.748,1217,2.109,1238,1.46,1244,1.414,1261,3.414,1296,5.934,1350,3.114,1392,1.576,1397,3.123,1405,1.425,1422,1.46,1455,1.98,1480,3.06,1484,1.46,1490,1.559,1518,1.559,1534,1.98,1536,1.652,1538,5.092,1588,1.576,1639,6.603,1641,5.217,1701,1.448,1800,1.425,1862,2.963,1942,1.846,2043,5.46,2114,1.723,2195,2.316,2267,1.98,2516,1.846,2781,2.038,2914,2.197,3000,5.751,3358,5.714,4169,1.929,4430,3.789,4920,2.316,5136,2.197,5138,2.197,5162,7.286,5165,4.996,5166,3.993,5167,2.197,5168,2.495,5169,2.495,5170,2.495]],["component/152",[1,0.4]],["title/153-1",[0,18.366,304,22.856,586,25.44]],["name/153-1",[]],["text/153-1",[]],["component/153-1",[]],["title/153-2",[1,11.233,2,14.497,21,23.698,77,20.537,1024,25.113,1609,34.327]],["name/153-2",[]],["text/153-2",[]],["component/153-2",[]],["title/153-3",[1,12.253,13,18.364,77,22.402,408,30.542,1609,37.445]],["name/153-3",[]],["text/153-3",[]],["component/153-3",[]],["title/153",[1,14.973,77,27.375,1609,45.756]],["name/153",[586,1.413]],["text/153",[0,1.385,1,2.519,2,1.457,8,2.453,11,2.992,13,1.692,16,2.827,18,1.841,19,2.308,20,1.978,21,2.382,24,2.909,47,2.894,57,3.892,77,4.35,107,2.561,119,2.706,139,3.301,151,2.867,154,1.918,160,2.119,168,1.745,192,2.107,204,3.048,227,3.793,237,2.497,238,3.278,239,2.62,241,2.923,243,2.827,247,2.642,252,1.959,303,2.801,304,1.723,306,2.405,317,2.695,398,3.065,408,6.071,409,2.984,438,2.86,460,2.26,465,4.307,487,2.59,515,2.413,566,2.429,586,1.918,594,3.506,624,2.359,760,4.053,950,3.477,1024,2.524,1333,4.671,1393,2.88,1609,6.771,1914,4.671,2118,4.171,4639,4.935]],["component/153",[1,0.4]],["title/154-1",[0,20.659,362,53.192]],["name/154-1",[]],["text/154-1",[]],["component/154-1",[]],["title/154-2",[2,15.814,31,15.956,175,17.245,176,14.978,247,16.953]],["name/154-2",[]],["text/154-2",[]],["component/154-2",[]],["title/154-3",[5,23.974,56,14.594,175,14.594,176,12.676,601,26.332,1827,32.75,4439,41.929]],["name/154-3",[]],["text/154-3",[]],["component/154-3",[]],["title/154-4",[15,28.251,31,17.55,294,28.341,1027,50.576]],["name/154-4",[]],["text/154-4",[]],["component/154-4",[]],["title/154-5",[31,14.627,38,14.369,195,20.277,202,16.085,895,24.171,1028,43.631]],["name/154-5",[]],["text/154-5",[]],["component/154-5",[]],["title/154-6",[31,12.539,38,12.318,168,14.884,195,17.383,202,13.789,358,33.694,529,22.525,1031,38.937]],["name/154-6",[]],["text/154-6",[]],["component/154-6",[]],["title/154-7",[31,14.627,195,20.277,200,24.672,202,16.085,671,25.483,1034,50.807]],["name/154-7",[]],["text/154-7",[]],["component/154-7",[]],["title/154-8",[14,29.661,24,14.669,31,12.539,195,17.383,202,13.789,650,19.334,1043,43.554,1400,21.846]],["name/154-8",[]],["text/154-8",[]],["component/154-8",[]],["title/154-9",[31,15.956,294,25.767,703,29.492,748,31.115,5171,60.851]],["name/154-9",[]],["text/154-9",[]],["component/154-9",[]],["title/154-10",[9,24.854,56,14.594,175,14.594,176,12.676,1398,32.75,1827,32.75,4439,41.929]],["name/154-10",[]],["text/154-10",[]],["component/154-10",[]],["title/154-11",[15,25.685,31,15.956,294,25.767,703,29.492,2457,49.546]],["name/154-11",[]],["text/154-11",[]],["component/154-11",[]],["title/154-12",[31,13.503,182,25.965,195,18.719,200,22.776,420,28.814,650,20.82,2458,41.929]],["name/154-12",[]],["text/154-12",[]],["component/154-12",[]],["title/154-13",[31,13.503,38,13.264,61,26.586,195,18.719,202,14.849,421,20.82,2459,44.027]],["name/154-13",[]],["text/154-13",[]],["component/154-13",[]],["title/154-14",[176,14.978,294,25.767,748,31.115,2132,43.418,5172,55.421]],["name/154-14",[]],["text/154-14",[]],["component/154-14",[]],["title/154-15",[13,20.198,154,22.899,166,24.39,534,34.895]],["name/154-15",[]],["text/154-15",[]],["component/154-15",[]],["title/154-16",[151,34.223,380,28.251,413,29,591,23.849]],["name/154-16",[]],["text/154-16",[]],["component/154-16",[]],["title/154",[166,16.266,175,12.649,176,10.987,195,16.225,202,12.87,218,28.387,277,25.763,413,19.34,1400,20.39]],["name/154",[166,0.428,531,0.618,534,0.612,1400,0.536,2488,0.606]],["text/154",[0,0.621,1,0.118,2,0.653,5,0.272,8,0.138,9,0.282,10,0.441,13,0.339,14,0.362,15,1.389,16,0.566,18,0.192,19,0.462,20,0.206,24,1.851,26,0.5,31,2.053,37,0.563,38,1.792,39,0.271,40,0.638,47,1.505,52,0.68,55,0.585,56,1.52,57,0.397,61,2.051,64,0.451,66,0.966,74,1.367,76,0.406,82,0.285,83,0.441,87,1.175,89,0.344,91,0.576,100,0.52,104,0.948,107,0.267,108,1.05,110,0.294,122,0.306,128,0.516,130,0.456,132,0.422,133,1.184,141,1.103,142,0.878,143,0.422,147,0.632,151,0.828,154,1.915,157,0.238,158,1.717,159,0.289,160,0.221,162,1.832,164,1.093,166,1.769,168,2.55,175,2.62,176,2.588,177,0.766,178,2.769,179,1.152,181,1.45,182,2.935,183,0.341,188,0.344,193,0.802,194,0.514,195,3.655,200,3.002,201,0.558,202,3.264,203,1.221,204,0.317,209,0.365,214,2.903,218,3.702,227,0.76,230,0.661,235,0.277,238,0.237,243,0.294,245,1.699,246,1.285,247,0.917,255,0.6,258,1.601,271,3.617,275,1.165,276,0.307,277,1.682,278,1.509,283,0.955,286,1.658,288,0.294,291,1.729,293,0.511,294,2.8,295,1.864,298,0.69,299,3.523,300,0.428,303,0.81,304,0.179,305,1.501,313,0.607,314,0.354,316,0.656,329,0.411,333,1.245,337,0.397,342,2.035,347,0.327,358,1.771,359,0.416,362,0.371,363,0.893,369,0.447,379,0.511,380,1.061,387,0.918,409,0.928,413,0.902,417,1.46,420,0.628,421,0.842,423,0.799,430,0.354,438,3.27,440,1.35,443,4.165,444,0.554,445,1.2,446,0.652,449,4.152,451,2.493,453,0.514,454,0.316,455,0.341,456,0.806,459,0.327,462,0.597,464,0.763,471,0.378,472,0.335,473,0.878,474,0.293,479,2.369,481,0.766,483,0.306,487,0.962,491,0.801,494,0.241,500,1.051,509,3.18,515,0.483,520,0.726,529,1.871,532,2.15,534,3.711,535,0.422,543,0.365,545,1.348,546,0.779,549,0.828,565,0.879,566,0.702,568,0.359,571,0.554,572,0.411,576,4.327,591,0.4,599,1.31,601,2.34,608,1.253,618,0.251,624,2.152,626,0.68,627,0.985,629,0.441,649,1.12,650,3.358,655,0.264,660,0.909,669,1.228,671,1.815,672,0.696,682,1.556,689,1.14,692,1.75,702,0.371,703,3.524,706,0.378,718,1.091,720,0.266,727,1.464,729,1.901,730,0.493,732,0.748,733,0.696,734,0.941,736,1.086,744,3.14,748,1.682,754,0.274,764,3.403,779,1.612,805,0.327,812,1.382,820,0.862,838,0.359,848,0.374,873,0.799,889,1.187,895,4.331,897,2.919,911,1.447,951,0.707,1027,0.441,1028,0.456,1031,0.475,1034,0.532,1038,0.755,1043,0.532,1113,0.764,1119,0.335,1128,0.368,1177,0.441,1180,0.772,1190,1.128,1222,0.878,1240,0.862,1241,0.801,1261,0.499,1290,0.346,1304,0.297,1317,0.411,1349,1.244,1350,0.806,1366,0.648,1396,0.346,1398,2.526,1400,4.026,1422,0.368,1437,0.344,1438,0.948,1441,0.456,1445,1.546,1460,3.234,1480,0.285,1490,0.393,1500,0.891,1501,4.044,1512,0.389,1526,1.059,1528,0.327,1627,1.817,1658,0.764,1701,0.365,1714,0.406,1794,0.406,1827,1.854,1896,0.465,1925,1.629,1946,0.434,2094,0.823,2106,1.069,2132,0.416,2181,2.39,2457,0.475,2458,0.475,2459,0.499,2541,0.862,2602,1.188,2618,1.142,2862,0.554,2903,1.245,3090,0.499,3092,0.475,3717,0.514,3919,0.486,4439,5.077,4698,2.212,4701,0.554,4888,1.385,4889,1.661,4891,0.486,4895,1.426,5171,0.584,5172,0.532,5173,1.209,5174,0.629,5175,1.209,5176,1.209,5177,2.708,5178,0.629,5179,1.122,5180,0.629,5181,0.629,5182,0.629,5183,0.629,5184,0.629,5185,0.629,5186,2.083,5187,0.629,5188,1.209,5189,1.476,5190,0.629,5191,0.584,5192,2.244,5193,1.781,5194,0.554,5195,0.629,5196,0.629,5197,0.629,5198,0.629,5199,0.629,5200,0.629,5201,0.629,5202,0.629,5203,0.629,5204,0.629,5205,0.629,5206,0.629,5207,0.629,5208,0.629,5209,0.629,5210,0.629,5211,0.629,5212,0.629,5213,0.629,5214,0.629,5215,0.629,5216,0.629,5217,0.629]],["component/154",[1,0.4]],["title/155-1",[0,15.03,166,22.175,227,28.55,247,16.953,278,27.902]],["name/155-1",[]],["text/155-1",[]],["component/155-1",[]],["title/155-2",[133,28.663,201,30.268,227,28.55,568,37.445,1008,38.051]],["name/155-2",[]],["text/155-2",[]],["component/155-2",[]],["title/155-3",[166,18.766,175,14.594,176,12.676,277,29.724,278,23.612,413,22.313,1009,35.849]],["name/155-3",[]],["text/155-3",[]],["component/155-3",[]],["title/155-4",[31,11.704,38,11.497,166,16.266,277,25.763,278,20.466,413,19.34,464,21.025,1684,37.191,2564,27.255]],["name/155-4",[]],["text/155-4",[]],["component/155-4",[]],["title/155-5",[2,17.393,31,17.55,175,18.967,176,16.474]],["name/155-5",[]],["text/155-5",[]],["component/155-5",[]],["title/155-6",[5,22.263,151,24.452,166,17.427,175,13.552,176,11.771,195,17.383,277,27.602,278,21.927]],["name/155-6",[]],["text/155-6",[]],["component/155-6",[]],["title/155-7",[9,19.01,31,10.328,37,19.769,38,10.145,97,25.5,166,14.353,175,11.162,202,11.357,407,23.356,624,16.572,5218,39.387]],["name/155-7",[]],["text/155-7",[]],["component/155-7",[]],["title/155-8",[31,17.55,342,24.328,542,47.158,1686,38.886]],["name/155-8",[]],["text/155-8",[]],["component/155-8",[]],["title/155",[31,14.627,166,20.329,175,15.809,176,13.731,238,22.62,542,39.305]],["name/155",[31,0.375,227,0.671,542,1.008,2488,0.738]],["text/155",[0,1.728,1,0.274,2,1.584,5,0.634,8,0.322,9,0.657,13,0.751,15,1.451,18,0.447,20,0.48,24,0.418,26,1.108,31,2.371,37,0.683,38,2.21,40,2.4,52,1.442,56,1.575,61,1.285,64,0.547,65,0.873,66,0.631,82,2.076,87,1.163,89,0.802,97,0.881,100,0.631,102,2.865,104,1.456,108,1.255,119,0.657,128,1.955,133,3.784,141,0.926,151,0.696,154,0.852,158,1.75,164,0.592,166,3.963,168,2.177,170,1.154,172,1.623,175,3.026,176,2.796,178,0.912,192,0.512,195,4.154,200,4.81,201,2.461,202,2.863,204,1.353,205,0.631,219,2.567,227,5.224,228,0.598,238,1.009,243,0.686,246,2.842,247,0.693,255,2.272,265,1.159,271,2.036,275,0.762,276,1.811,277,4.457,278,3.815,283,1.88,294,0.576,295,3.903,296,3.949,297,0.898,299,0.594,300,0.998,304,0.418,305,2.955,317,0.654,327,0.766,330,3.486,342,2.215,358,1.754,363,0.584,369,1.692,386,1.465,407,3.896,409,0.919,413,2.144,422,0.844,423,1.227,432,0.776,438,1.966,446,2.874,451,1.279,462,0.724,464,2.001,466,0.74,474,1.249,481,0.644,491,1.776,501,1.393,512,1.849,523,1.569,529,2.618,532,1.626,534,0.71,542,2.422,545,0.881,549,1.273,565,1.793,567,0.907,568,1.532,576,1.105,601,3.116,608,0.819,614,1.198,619,0.699,624,1.047,628,0.858,650,1.39,672,0.844,702,0.866,717,1.972,721,1.065,727,1,738,3.005,744,1.075,795,1.065,812,1.368,861,0.844,921,2.206,1008,0.851,1009,0.948,1038,2.315,1088,1.198,1113,1.694,1119,1.427,1135,0.907,1177,1.029,1179,1.292,1200,2.026,1203,1.597,1240,3.264,1244,0.831,1366,2.856,1398,3.876,1445,0.838,1450,1.912,1452,0.971,1479,1.799,1487,0.881,1492,0.917,1569,1.134,1684,1.134,1686,0.791,1767,0.971,1893,0.926,1918,1.198,1925,1.947,1979,1.085,2016,0.898,2132,1.776,2181,1.497,2488,2.869,2559,1.029,2564,0.831,2602,2.521,2738,2.128,2739,2.362,2748,2.799,2749,3.131,2752,1.085,2753,2.642,2755,1.984,2756,1.984,3109,1.134,3119,1.065,4004,1.292,4188,1.108,4434,1.292,4448,1.361,4499,1.24,4526,1.361,4532,1.198,5179,2.489,5218,1.361,5219,1.467,5220,1.467,5221,3.705,5222,3.705,5223,1.467,5224,1.164,5225,1.467,5226,1.467,5227,2.682,5228,2.682,5229,1.467,5230,2.682,5231,2.682,5232,1.467,5233,2.682,5234,1.467,5235,2.682]],["component/155",[1,0.4]],["title/156-1",[586,32.698]],["name/156-1",[]],["text/156-1",[]],["component/156-1",[]],["title/156",[31,21.931,549,42.768]],["name/156",[17,2.753]],["text/156",[195,3.823,496,6.07,2488,6.293,2613,10.517,5236,11.333]],["component/156",[1,0.4]],["title/157-1",[586,32.698]],["name/157-1",[]],["text/157-1",[]],["component/157-1",[]],["title/157",[175,18.967,176,16.474,288,33.747,1304,34.062]],["name/157",[464,0.861,549,0.935,586,0.626]],["text/157",[1,1.538,8,2.364,18,2.509,31,2.003,37,3.834,38,1.968,160,2.887,175,3.161,176,2.746,202,2.203,228,4.394,288,5.044,293,3.477,377,4.777,379,3.477,380,3.224,389,4.249,407,4.53,409,2.82,457,5.45,460,3.079,464,4.712,514,5.257,549,5.115,586,2.614,671,3.49,1304,3.888,1428,6.091,1578,5.257,2610,7.249,2611,7.249,2612,7.249,2904,7.249,4248,6.531,4855,6.725,5237,8.231,5238,7.249]],["component/157",[1,0.4]],["title/158-1",[0,20.659,586,28.616]],["name/158-1",[]],["text/158-1",[]],["component/158-1",[]],["title/158-2",[2,15.814,175,17.245,176,14.978,247,16.953,464,28.663]],["name/158-2",[]],["text/158-2",[]],["component/158-2",[]],["title/158-3",[13,16.835,168,17.362,200,24.672,203,20.697,671,25.483,744,24.09]],["name/158-3",[]],["text/158-3",[]],["component/158-3",[]],["title/158-4",[588,49.254,1047,43.392]],["name/158-4",[]],["text/158-4",[]],["component/158-4",[]],["title/158-5",[176,18.303,671,33.968,1050,38.963]],["name/158-5",[]],["text/158-5",[]],["component/158-5",[]],["title/158",[202,16.085,409,20.59,671,25.483,1578,38.388,4855,49.107,5238,52.935]],["name/158",[15,0.42,200,0.441,202,0.287,534,0.519,1400,0.455,1578,0.685]],["text/158",[0,0.503,2,0.529,7,1.078,8,1.127,13,0.615,15,3.029,18,0.669,20,2.898,24,1.463,25,1.027,31,1.503,38,0.525,40,0.802,52,0.854,61,1.052,66,0.945,74,2.982,154,1.222,157,1.946,158,2.027,162,0.871,164,0.886,168,2.799,169,0.895,175,2.328,176,2.124,177,2.256,178,1.747,179,1.126,182,2.405,192,0.766,195,2.812,200,2.883,202,2.968,203,1.77,214,2.039,219,1.057,227,0.956,228,1.569,230,1.199,231,1.041,232,1.703,237,0.907,247,1.597,258,0.991,271,2.388,278,0.934,281,0.948,283,1.357,291,1.696,293,0.927,299,4.188,300,1.493,304,0.626,333,1.769,342,2.37,345,0.857,369,0.811,380,0.86,381,1.018,409,2.406,420,1.14,423,1.004,438,2.539,443,4.666,449,6.606,456,1.013,464,2.699,474,1.793,479,1.126,481,3.884,483,1.067,500,1.994,509,2.118,511,0.987,512,1.095,515,0.877,529,0.959,534,4.033,565,2.419,576,1.585,586,0.697,588,1.199,618,1.537,624,0.857,626,3.473,650,1.928,669,0.996,671,5.127,678,1.09,682,2.71,692,1.418,727,1.435,729,3.185,734,1.183,744,1.542,764,3.451,807,1.057,812,2.623,818,1.284,895,2.067,909,1.658,1047,1.057,1050,1.067,1113,1.386,1114,1.473,1128,1.284,1154,1.208,1203,2.292,1236,3.361,1304,2.427,1366,1.176,1393,1.046,1396,1.208,1400,5.359,1436,3.974,1437,3.375,1479,1.473,1484,1.284,1500,1.12,1512,1.357,1565,1.244,1578,3.944,1607,1.473,1701,1.274,1763,3.549,1808,2.848,1839,1.593,1979,1.624,2072,1.793,2080,1.741,2106,1.344,2181,3.447,2812,3.246,2951,1.697,3926,3.389,4503,9.109,4505,3.389,4733,2.037,4791,1.933,4855,5.045,4890,1.933,5186,2.037,5189,1.855,5238,4.526,5239,2.195,5240,3.849,5241,2.195,5242,2.195,5243,2.195,5244,6.175,5245,1.855,5246,3.849,5247,3.849,5248,2.195,5249,6.175,5250,2.195,5251,2.195,5252,3.849,5253,2.037,5254,6.175,5255,2.195,5256,2.195,5257,2.195,5258,2.195]],["component/158",[1,0.4]],["title/159-1",[0,13.778,56,15.809,175,15.809,176,13.731,295,26.173,660,24.335]],["name/159-1",[]],["text/159-1",[]],["component/159-1",[]],["title/159-2",[2,17.393,38,17.239,529,31.526,590,39.146]],["name/159-2",[]],["text/159-2",[]],["component/159-2",[]],["title/159-3",[13,22.44,174,39.362,304,22.856]],["name/159-3",[]],["text/159-3",[]],["component/159-3",[]],["title/159-4",[7,27.26,74,21.397,154,17.619,304,15.829,591,18.35,604,23.882,700,31.444]],["name/159-4",[]],["text/159-4",[]],["component/159-4",[]],["title/159-5",[74,27.809,176,16.474,293,30.462,593,27.303]],["name/159-5",[]],["text/159-5",[]],["component/159-5",[]],["title/159-6",[74,23.178,175,15.809,176,13.731,293,25.389,2223,34.6,5259,50.807]],["name/159-6",[]],["text/159-6",[]],["component/159-6",[]],["title/159-7",[74,23.178,175,15.809,176,13.731,293,25.389,609,31.992,2224,37.965]],["name/159-7",[]],["text/159-7",[]],["component/159-7",[]],["title/159-8",[31,19.497,178,27.235,595,34.484]],["name/159-8",[]],["text/159-8",[]],["component/159-8",[]],["title/159-9",[15,28.251,31,17.55,178,24.514,2227,39.97]],["name/159-9",[]],["text/159-9",[]],["component/159-9",[]],["title/159-10",[31,14.627,38,14.369,178,20.432,1350,27.748,2745,44.479,3164,35.477]],["name/159-10",[]],["text/159-10",[]],["component/159-10",[]],["title/159-11",[168,17.362,175,15.809,176,13.731,202,16.085,342,20.277,596,29.684]],["name/159-11",[]],["text/159-11",[]],["component/159-11",[]],["title/159",[26,21.299,31,12.539,175,13.552,176,11.771,282,28.98,304,14.699,767,33.694,1523,33.694]],["name/159",[31,0.308,282,0.712,461,0.753,1523,0.827,2488,0.606]],["text/159",[0,0.579,2,0.173,7,0.97,13,0.201,15,1.852,18,0.219,20,2.147,24,1.63,25,1.64,26,2.71,30,1.222,31,1.393,38,2.207,40,0.722,47,0.344,55,0.348,56,2.204,74,2.713,77,0.469,82,0.326,91,0.343,93,0.543,100,0.309,122,0.668,128,1.497,129,0.482,133,1.104,138,0.454,151,0.341,154,2.711,157,0.272,158,2.9,160,0.692,161,0.407,162,0.285,166,1.026,168,1.818,172,0.487,174,2.659,175,2.285,176,2.24,177,0.603,178,3.003,179,0.369,181,2.265,182,3.921,188,0.393,195,2.519,202,1.055,203,0.68,205,0.591,214,2.148,219,2.276,245,0.545,247,1.4,251,0.731,252,0.233,253,2.754,255,1.957,270,0.401,271,4.286,274,0.449,275,1.82,278,0.585,281,0.594,282,2.659,283,1.236,293,2.146,294,1.858,295,1.893,296,1.079,299,4.415,304,2.634,308,0.756,309,0.57,313,1.523,316,0.39,326,0.314,337,0.454,342,0.852,345,0.281,347,0.373,369,2.117,379,2.146,381,0.637,386,0.543,387,0.378,407,1.39,409,0.246,420,1.025,438,3.624,446,3.394,451,2.87,454,0.361,461,5.9,462,0.355,464,1.723,479,3.089,481,0.603,494,0.527,496,1.353,501,1.312,509,1.086,520,0.826,523,0.804,524,0.41,529,1.532,549,0.937,563,1.84,566,1.409,576,5.009,582,0.877,590,1.647,591,0.238,593,0.272,595,0.309,596,0.355,598,0.888,599,0.348,604,1.697,606,0.373,609,0.382,618,1.212,624,0.281,650,0.27,660,1.596,663,0.421,665,0.421,669,0.326,671,1.671,679,0.401,682,1.538,689,1.989,700,1.986,704,0.476,717,0.731,727,2.624,729,0.296,730,1.607,734,0.387,735,0.361,736,1.222,738,1.523,744,2.037,764,4.34,767,1.291,813,0.496,820,0.355,838,0.41,840,0.424,850,1.307,873,0.329,875,0.826,889,1.854,895,4.875,911,2.964,1038,0.859,1119,1.615,1135,0.85,1165,0.47,1175,0.482,1177,0.504,1180,3.019,1212,1.122,1222,0.522,1231,1.031,1236,0.47,1237,0.57,1238,0.421,1241,0.476,1250,1.562,1265,0.556,1275,0.868,1349,0.398,1350,2.346,1422,0.421,1426,2.372,1432,0.343,1436,0.556,1445,1.127,1456,0.421,1460,0.85,1463,0.556,1480,0.326,1484,0.421,1490,0.449,1500,0.367,1501,1.062,1513,0.496,1521,0.44,1523,1.652,1578,0.877,1610,0.476,1697,1.175,1701,1.146,1800,1.442,1827,0.424,1896,1.017,2047,0.482,2103,1.869,2160,1.433,2176,2.065,2181,1.957,2223,0.414,2224,0.454,2227,0.398,2488,1.21,2489,2.811,2508,0.935,2541,4.082,2554,1.953,2556,0.407,2559,0.964,2560,0.91,2596,1.062,2598,1.09,2602,0.489,2618,0.47,2636,1.21,2745,3.498,2831,1.21,3104,0.667,3131,0.556,3147,3.091,3164,0.424,3717,1.613,4037,1.408,4110,0.556,4244,0.667,4421,0.633,4781,2.408,4889,0.532,4929,1.566,4995,1.832,4998,0.667,5005,0.57,5010,1.275,5051,0.667,5053,0.667,5056,0.667,5057,0.667,5194,0.633,5259,0.607,5260,3.035,5261,1.374,5262,1.832,5263,1.974,5264,1.374,5265,0.719,5266,3.035,5267,0.719,5268,0.719,5269,0.719,5270,0.719,5271,0.719,5272,0.719,5273,0.719,5274,0.719,5275,3.035,5276,0.719,5277,0.667,5278,0.719,5279,0.719,5280,0.719,5281,0.719,5282,0.719,5283,0.719,5284,0.719,5285,0.719,5286,0.667,5287,0.719,5288,0.719,5289,0.719,5290,2.526,5291,0.719,5292,0.719,5293,0.719,5294,0.719,5295,0.719,5296,0.719,5297,0.719,5298,0.719,5299,0.719,5300,0.719,5301,0.719,5302,0.719,5303,0.719,5304,0.719,5305,0.719,5306,0.719,5307,0.719,5308,0.719,5309,0.719,5310,0.719,5311,0.719,5312,0.719,5313,0.719,5314,0.719,5315,0.719,5316,0.719,5317,0.719,5318,0.719,5319,0.719,5320,0.719,5321,0.719,5322,0.719,5323,1.974,5324,0.719,5325,0.719,5326,1.974,5327,0.719,5328,0.667,5329,0.719,5330,0.719,5331,1.374]],["component/159",[1,0.4]],["title/160-1",[0,20.659,586,28.616]],["name/160-1",[]],["text/160-1",[]],["component/160-1",[]],["title/160-2",[2,14.497,15,23.546,175,15.809,176,13.731,214,23.853,247,15.542]],["name/160-2",[]],["text/160-2",[]],["component/160-2",[]],["title/160-3",[13,12.629,15,27.411,175,11.859,176,10.301,214,17.894,247,11.659,294,17.72,295,19.634,703,20.282]],["name/160-3",[]],["text/160-3",[]],["component/160-3",[]],["title/160-4",[175,14.594,176,12.676,214,22.02,247,14.347,293,23.438,591,18.35,820,27.403]],["name/160-4",[]],["text/160-4",[]],["component/160-4",[]],["title/160-5",[175,14.594,195,18.719,202,14.849,214,22.02,247,14.347,342,18.719,593,21.007]],["name/160-5",[]],["text/160-5",[]],["component/160-5",[]],["title/160-6",[168,16.028,175,14.594,214,22.02,247,14.347,409,19.007,2223,31.941,2618,36.284]],["name/160-6",[]],["text/160-6",[]],["component/160-6",[]],["title/160-7",[31,13.503,175,14.594,178,18.862,202,14.849,214,22.02,247,14.347,2224,35.047]],["name/160-7",[]],["text/160-7",[]],["component/160-7",[]],["title/160-8",[175,15.809,202,16.085,203,20.697,214,23.853,595,25.871,1350,27.748]],["name/160-8",[]],["text/160-8",[]],["component/160-8",[]],["title/160",[175,24.29,176,14.978,214,26.019,247,16.953]],["name/160",[175,0.518,214,0.782,2488,0.944]],["text/160",[0,1.041,2,0.453,13,0.526,15,3.674,18,0.305,24,2.174,31,2.24,38,1.086,40,0.365,47,3.659,52,0.389,56,2.079,57,0.328,74,1.534,76,0.645,77,0.642,78,0.712,82,0.453,91,0.476,107,0.424,115,0.539,133,1.162,138,0.621,147,0.522,154,1.065,157,0.711,158,1.306,159,0.459,162,1.578,164,2.4,168,2.757,175,3.472,176,2.807,178,2.999,179,2.041,187,0.909,195,3.042,200,1.091,201,0.461,202,2.71,203,1.901,214,4.876,235,0.44,237,0.413,245,1.33,247,2.771,251,0.532,252,0.862,254,0.42,259,0.425,271,1.876,275,3.654,278,1.427,292,0.725,293,1.68,294,3.206,295,1.46,299,2.408,302,0.488,303,1.844,304,0.758,324,1.05,327,0.981,333,1.221,342,3.105,345,0.733,360,0.493,363,0.748,379,1.122,380,2.162,381,0.463,386,0.743,387,0.525,409,3.213,428,0.856,437,0.612,438,2.96,446,0.539,451,1.897,456,0.867,457,0.662,462,2.937,464,1.162,466,0.948,474,0.465,479,2.331,481,2.423,483,0.486,487,0.428,491,0.662,500,2.46,509,0.55,512,0.499,515,0.75,529,0.437,537,3.51,541,1.162,545,0.6,546,0.838,549,3.009,565,0.736,566,0.402,567,0.618,575,1.39,576,3.36,586,0.317,591,0.621,593,0.711,595,0.43,599,0.483,618,2.376,624,0.733,627,0.824,650,0.375,657,0.6,660,1.357,669,0.453,671,0.424,678,0.496,682,1.166,689,2.127,703,1.789,727,2.218,729,2.76,730,1.621,732,0.618,733,0.575,734,0.539,735,1.682,736,3.243,739,1.38,744,3.168,754,0.818,764,0.923,779,1.721,807,1.614,820,1.656,823,0.638,895,2.83,909,0.755,911,0.692,921,1.118,951,0.585,1078,0.606,1113,2.118,1128,1.555,1180,3.525,1209,0.539,1238,0.585,1241,0.662,1304,0.887,1345,0.712,1350,2.548,1366,2.433,1396,1.034,1400,3.115,1445,0.571,1456,1.099,1500,1.711,1526,2.754,1731,1.174,1737,0.712,1794,0.645,1933,0.67,1957,1.966,1979,0.739,2094,0.68,2106,1.15,2180,1.174,2223,0.575,2224,0.631,2488,0.479,2516,1.39,2618,5.897,2690,1.654,2812,1.186,2897,0.88,2966,2.466,3090,1.49,3092,1.419,3110,0.927,3208,0.755,4236,0.88,4237,0.88,4300,0.844,4440,3.432,4540,2.834,4888,1.49,4889,3.361,4892,3.112,4895,1.534,4902,1.297,4903,2.934,4993,0.927,5332,0.999,5333,2.466,5334,1.878,5335,0.999,5336,0.999,5337,0.999,5338,0.999,5339,0.999,5340,0.999,5341,0.999,5342,3.978,5343,3.978,5344,4.542,5345,0.999,5346,0.999,5347,5.054,5348,0.999,5349,0.999,5350,0.999,5351,0.999,5352,0.999,5353,0.999,5354,1.878,5355,2.657,5356,1.878,5357,0.999,5358,0.999,5359,0.999]],["component/160",[1,0.4]],["title/161-1",[0,20.659,586,28.616]],["name/161-1",[]],["text/161-1",[]],["component/161-1",[]],["title/161-2",[2,15.814,114,35.591,175,17.245,176,14.978,247,16.953]],["name/161-2",[]],["text/161-2",[]],["component/161-2",[]],["title/161-3",[5,28.329,56,17.245,175,17.245,176,14.978,1827,38.699]],["name/161-3",[]],["text/161-3",[]],["component/161-3",[]],["title/161-4",[9,32.303,15,28.251,31,17.55,178,24.514]],["name/161-4",[]],["text/161-4",[]],["component/161-4",[]],["title/161-5",[31,12.539,33,29.2,38,12.318,178,17.515,219,24.809,527,32.545,529,22.525,1686,27.784]],["name/161-5",[]],["text/161-5",[]],["component/161-5",[]],["title/161-6",[31,11.704,38,11.497,182,22.506,195,16.225,590,26.107,1697,28.638,2005,29.746,2559,33.729,2560,31.848]],["name/161-6",[]],["text/161-6",[]],["component/161-6",[]],["title/161-7",[24,15.797,30,26.849,31,13.503,195,18.719,254,23.352,313,27.845,2553,38.914]],["name/161-7",[]],["text/161-7",[]],["component/161-7",[]],["title/161-8",[24,17.112,31,14.627,195,20.277,313,30.164,671,25.483,2555,43.631]],["name/161-8",[]],["text/161-8",[]],["component/161-8",[]],["title/161-9",[14,31.941,31,13.503,38,13.264,182,25.965,195,18.719,2557,46.902,4698,45.333]],["name/161-9",[]],["text/161-9",[]],["component/161-9",[]],["title/161-10",[31,14.627,38,14.369,178,20.432,202,16.085,312,24.586,2558,50.807]],["name/161-10",[]],["text/161-10",[]],["component/161-10",[]],["title/161-11",[31,11.704,38,11.497,178,16.349,202,12.87,219,23.157,460,17.992,528,35.589,529,21.025,2561,40.652]],["name/161-11",[]],["text/161-11",[]],["component/161-11",[]],["title/161-12",[31,12.539,38,12.318,178,17.515,182,24.112,195,17.383,423,23.578,460,19.276,2352,42.097]],["name/161-12",[]],["text/161-12",[]],["component/161-12",[]],["title/161-13",[24,12.837,31,10.973,195,15.211,252,14.625,313,22.628,316,24.476,460,16.868,873,20.633,2299,32.73,2562,38.113]],["name/161-13",[]],["text/161-13",[]],["component/161-13",[]],["title/161-14",[31,15.956,176,14.978,294,25.767,748,31.115,5360,60.851]],["name/161-14",[]],["text/161-14",[]],["component/161-14",[]],["title/161-15",[13,22.44,151,38.021,380,31.386]],["name/161-15",[]],["text/161-15",[]],["component/161-15",[]],["title/161-16",[31,15.956,38,15.674,151,31.115,413,26.366,591,21.683]],["name/161-16",[]],["text/161-16",[]],["component/161-16",[]],["title/161",[38,15.674,313,32.903,407,36.084,460,24.529,2299,47.594]],["name/161",[460,1.022,2299,1.983]],["text/161",[0,0.274,1,0.116,2,0.288,5,0.268,7,0.847,9,0.278,12,0.459,13,0.334,14,0.993,15,1.522,18,0.189,19,0.237,20,0.726,24,1.555,25,1.038,26,1.45,30,1.073,31,2.073,33,0.352,37,0.289,38,2.733,40,0.631,47,0.572,52,2.23,56,1.573,61,0.297,64,0.643,74,1.763,80,1.21,87,0.518,91,1.673,94,1.532,114,0.337,119,0.535,122,0.839,128,3.021,133,1.998,147,0.324,151,1.271,154,0.704,158,1.604,159,0.285,160,0.605,162,1.814,164,0.25,166,1.546,168,2.294,169,0.487,170,0.514,175,2.047,176,2.033,177,0.272,178,3.506,179,0.613,181,2.954,182,4.373,183,2.482,187,0.835,188,0.339,195,3.639,202,2.205,205,0.514,214,3.088,219,3.31,229,0.376,231,0.295,245,0.88,246,0.295,247,1.182,248,0.307,252,0.387,254,1.784,258,0.28,259,0.264,265,0.268,267,1.07,271,4.04,274,0.388,278,1.945,283,0.944,286,0.731,291,1.18,293,0.262,294,0.872,295,2.808,296,1.659,299,2.098,300,0.812,303,0.8,304,0.177,309,0.947,312,1.271,313,4.207,316,0.648,337,1.401,342,2.679,345,0.674,360,0.307,361,3.411,363,0.247,369,1.806,380,2.14,407,3.669,409,0.591,413,1.838,417,1.675,421,0.233,423,1.939,428,0.283,438,3.134,446,1.444,451,3.463,454,1.949,459,1.152,460,3.415,464,1.698,466,0.87,479,2.66,483,0.302,487,0.512,500,1.039,501,2.017,512,1.337,515,0.689,520,2.547,527,0.392,528,3.383,529,2.72,541,0.522,543,2.46,546,0.533,549,1.474,563,1.884,567,0.384,576,4.816,586,0.197,590,0.936,591,0.57,593,0.452,595,0.267,599,0.835,601,1.053,608,1.495,624,1.517,627,0.524,650,0.233,655,0.26,660,0.483,662,0.289,671,1.938,678,0.308,682,0.757,689,0.934,702,1.309,706,0.373,708,0.493,715,0.429,718,1.078,721,0.867,727,1.933,729,1.746,730,0.487,733,0.357,734,1.892,736,0.578,738,2.875,744,2.296,748,1.053,764,4.591,779,0.885,781,0.31,818,0.363,820,0.59,838,0.354,848,0.711,861,0.687,873,0.546,882,0.435,889,1.416,895,4.633,911,2.205,950,0.357,1038,1.078,1061,0.36,1105,1.751,1113,0.754,1114,0.416,1141,0.48,1175,0.416,1177,2.724,1180,0.396,1190,0.401,1222,0.451,1271,1.691,1301,2.125,1304,0.564,1349,0.344,1366,0.64,1392,0.392,1405,0.985,1438,1.454,1445,1.267,1456,0.363,1480,0.542,1500,1.366,1505,0.48,1521,1.358,1526,0.724,1538,0.354,1578,0.396,1619,1.849,1686,0.335,1697,1.85,1701,1.287,1747,0.48,1767,0.411,1792,0.435,1800,0.985,1822,0.435,1827,1.018,1893,0.392,1943,1.051,1997,0.624,1998,1.878,2005,0.384,2047,1.488,2094,0.422,2106,1.056,2176,2.114,2181,2.366,2299,5.402,2352,0.507,2497,0.507,2499,0.493,2541,1.909,2553,0.435,2555,0.451,2557,0.525,2558,0.525,2559,1.21,2560,1.142,2561,0.525,2562,0.525,2571,0.429,2596,0.923,2602,1.174,2618,0.781,2647,0.525,2744,0.525,2813,1.009,2994,0.867,3085,0.525,3132,2.059,3134,0.576,3136,0.576,3138,0.547,3399,0.48,3717,1.409,4131,0.525,4432,0.576,4532,1.812,4551,0.576,4557,0.525,4698,2.538,4822,0.576,4889,0.459,4891,0.48,4903,0.771,4929,1.369,4930,1.409,5002,1.108,5004,1.108,5165,0.547,5224,0.493,5360,0.576,5361,0.621,5362,1.194,5363,0.621,5364,0.621,5365,0.621,5366,1.725,5367,0.621,5368,0.621,5369,0.621,5370,0.621,5371,0.621,5372,0.621,5373,0.621,5374,0.621,5375,0.621,5376,0.621,5377,0.621,5378,0.621,5379,1.194,5380,3.508,5381,0.621,5382,0.621,5383,0.621,5384,1.194,5385,1.194,5386,1.194,5387,1.194,5388,1.194,5389,1.194,5390,0.621,5391,0.621,5392,0.621,5393,1.194,5394,0.621,5395,0.621,5396,1.194,5397,0.621,5398,0.621,5399,0.621,5400,0.525,5401,0.621,5402,0.621,5403,0.621,5404,0.621,5405,1.194,5406,0.621,5407,0.621,5408,0.621,5409,0.621,5410,0.621,5411,0.621,5412,0.621,5413,0.621,5414,0.621,5415,0.621,5416,0.621,5417,0.621,5418,0.621,5419,1.009,5420,0.621]],["component/161",[1,0.4]],["title/162-1",[0,20.659,586,28.616]],["name/162-1",[]],["text/162-1",[]],["component/162-1",[]],["title/162-2",[2,15.814,228,26.727,288,30.682,389,33.847,2016,40.151]],["name/162-2",[]],["text/162-2",[]],["component/162-2",[]],["title/162-3",[13,16.835,228,24.502,304,17.147,848,35.791,1357,37.965,2016,36.808]],["name/162-3",[]],["text/162-3",[]],["component/162-3",[]],["title/162-4",[247,20.716,1047,38.577,2016,49.063]],["name/162-4",[]],["text/162-4",[]],["component/162-4",[]],["title/162-5",[24,14.669,175,13.552,176,11.771,204,26,342,17.383,1050,25.058,1396,28.357,1985,40.884]],["name/162-5",[]],["text/162-5",[]],["component/162-5",[]],["title/162-6",[8,11.301,38,12.318,195,17.383,202,13.789,599,24.933,671,21.846,895,20.721,2389,33.694]],["name/162-6",[]],["text/162-6",[]],["component/162-6",[]],["title/162-7",[182,25.965,243,25.965,259,23.612,369,20.517,1357,35.047,2016,33.979,2763,36.744]],["name/162-7",[]],["text/162-7",[]],["component/162-7",[]],["title/162-8",[8,11.301,24,14.669,195,17.383,459,26.757,599,24.933,671,21.846,1396,28.357,2766,35.059]],["name/162-8",[]],["text/162-8",[]],["component/162-8",[]],["title/162-9",[38,13.264,177,24.353,178,18.862,182,25.965,274,34.674,700,31.444,2769,41.929]],["name/162-9",[]],["text/162-9",[]],["component/162-9",[]],["title/162-10",[38,13.264,177,24.353,178,18.862,195,18.719,202,14.849,509,30.537,4886,46.902]],["name/162-10",[]],["text/162-10",[]],["component/162-10",[]],["title/162",[8,15.816,100,31.039,228,29.397,1357,45.55]],["name/162",[8,0.432,494,0.755,2016,1.207]],["text/162",[0,0.767,1,0.625,2,0.314,8,1.54,11,0.447,13,0.364,15,1.63,16,1.123,18,0.396,19,0.917,20,0.786,24,2.633,26,0.538,28,1.139,31,1.477,33,0.737,37,0.606,38,2.266,39,1.033,44,0.774,52,1.898,55,0.629,56,1.955,61,1.15,74,2.124,82,0.59,85,0.861,91,1.984,107,0.551,119,1.075,122,0.632,128,1.025,133,1.05,147,0.679,154,0.762,157,0.492,158,0.788,160,0.456,168,2.799,175,2.142,176,2.113,177,3.711,178,3.847,181,0.84,182,4.329,183,0.706,192,0.838,195,3.456,200,0.534,202,1.759,204,0.656,214,1.327,228,1.988,230,0.711,231,1.139,237,1.382,243,0.608,247,2.018,252,0.422,258,1.084,259,1.022,260,0.629,268,1.443,271,4.01,274,2.601,278,0.553,283,0.459,288,1.565,291,0.573,294,0.511,295,2.643,299,0.972,304,0.371,333,0.598,337,3.479,342,3.562,346,0.755,347,1.737,363,0.518,369,3.126,380,0.94,389,1.239,395,0.656,409,0.445,420,0.675,421,1.83,423,2.232,438,2.44,442,0.642,445,1.278,449,5.4,451,2.326,459,0.675,464,2.873,479,0.667,481,3.425,494,1.595,496,0.697,500,1.298,509,3.031,511,1.08,512,0.649,515,0.519,516,0.861,521,1.032,546,1.071,559,3.218,576,2.707,586,0.413,588,1.312,590,1.815,597,0.697,599,2.36,601,0.617,618,0.519,624,0.508,644,0.804,649,2.077,650,0.488,671,2.573,672,1.382,688,0.743,689,0.547,700,2.764,717,0.692,727,1.552,729,0.536,730,1.696,738,1.205,740,1.485,744,2.433,748,0.617,751,2.187,764,4.154,802,0.821,812,1.706,818,0.761,848,4.849,873,1.099,887,0.83,895,2.215,911,0.885,1047,1.61,1050,1.626,1052,0.692,1054,0.767,1056,0.813,1113,0.821,1119,1.78,1128,0.761,1167,0.983,1237,1.032,1304,1.579,1349,1.331,1353,0.944,1357,6.761,1366,1.286,1396,1.321,1400,0.551,1426,1.205,1432,0.62,1445,2.377,1521,0.796,1575,1.456,1675,0.962,1679,1.207,1827,0.767,1957,0.962,1985,5.897,1988,0.83,1998,0.912,2016,6.793,2047,0.873,2106,0.796,2132,0.861,2176,2.832,2185,2.029,2358,3.151,2389,0.85,2500,1.207,2501,1.145,2541,3.478,2559,1.684,2564,0.737,2596,1.006,2598,1.032,2600,0.927,2602,1.633,2763,0.861,2766,0.885,2769,0.983,4320,1.207,4886,1.099,4903,0.84,4919,1.207,4934,1.207,4935,1.207,5245,1.099,5253,1.207,5277,1.207,5286,1.207,5421,2.401,5422,1.3,5423,1.3,5424,4.162,5425,4.877,5426,1.3,5427,1.3,5428,1.3,5429,1.3,5430,1.3,5431,2.401,5432,1.3,5433,1.3,5434,2.401,5435,1.3,5436,1.3,5437,1.3,5438,3.344,5439,1.3,5440,1.3,5441,1.3,5442,1.3,5443,1.3,5444,1.3,5445,1.3,5446,1.3,5447,1.207,5448,1.3,5449,2.228,5450,1.207,5451,1.207,5452,1.207,5453,1.207,5454,1.3,5455,1.3,5456,1.3,5457,1.3,5458,1.3,5459,1.3,5460,1.3,5461,1.3,5462,1.3,5463,1.3,5464,1.3,5465,2.401,5466,1.3,5467,1.3,5468,1.3,5469,1.3,5470,1.3,5471,1.3,5472,1.3,5473,1.3,5474,1.3,5475,1.3,5476,1.3,5477,1.145,5478,1.3]],["component/162",[1,0.4]],["title/163",[31,17.55,177,31.652,178,24.514,324,22.584]],["name/163",[17,2.753]],["text/163",[0,1.013,18,1.347,27,2.762,28,4.537,31,1.677,38,1.057,56,2.515,64,1.649,66,2.966,77,1.51,119,1.98,138,2.279,154,2.689,160,1.55,163,2.486,168,2.446,172,1.567,177,3.716,178,3.25,188,2.416,192,2.404,193,3.167,202,2.938,203,1.522,218,2.609,267,3.819,271,2.878,281,1.91,283,2.43,288,2.068,299,1.79,312,3.463,324,4.385,339,2.656,345,1.726,363,1.76,395,2.23,409,1.514,410,3.847,419,2.309,438,1.451,442,3.403,460,3.577,472,2.353,486,2.792,531,2.161,565,3.317,566,3.845,576,3.938,577,1.932,586,1.404,627,3.716,650,2.585,662,2.059,727,3.866,739,5.702,780,2.309,781,2.206,838,3.935,895,1.778,896,3.622,911,1.63,1011,2.45,1048,3.271,1074,3.418,1119,3.667,1147,3.271,1206,3.418,1277,3.418,1311,3.507,1350,3.909,1553,3.152,1623,3.893,1800,2.524,1862,3.599,1964,5.629,2024,3.611,2043,2.707,2563,2.966,2603,3.008,2640,3.008,2783,3.507,3926,3.893,5052,4.102,5055,4.102,5479,4.102]],["component/163",[1,0.4]],["title/164-1",[0,16.531,10,50.576,31,17.55,38,17.239]],["name/164-1",[]],["text/164-1",[]],["component/164-1",[]],["title/164-2",[2,17.393,31,17.55,38,17.239,1049,44.162]],["name/164-2",[]],["text/164-2",[]],["component/164-2",[]],["title/164-3",[5,31.159,38,17.239,800,63.511,1049,44.162]],["name/164-3",[]],["text/164-3",[]],["component/164-3",[]],["title/164-4",[9,32.303,31,17.55,56,18.967,260,34.895]],["name/164-4",[]],["text/164-4",[]],["component/164-4",[]],["title/164-5",[31,17.55,56,18.967,97,43.332,1686,38.886]],["name/164-5",[]],["text/164-5",[]],["component/164-5",[]],["title/164-6",[669,36.346,1210,51.764,2005,49.554]],["name/164-6",[]],["text/164-6",[]],["component/164-6",[]],["title/164-7",[13,20.198,21,28.433,31,17.55,38,17.239]],["name/164-7",[]],["text/164-7",[]],["component/164-7",[]],["title/164",[31,17.55,38,17.239,56,18.967,260,34.895]],["name/164",[31,0.375,38,0.368,260,0.746,5480,1.541]],["text/164",[0,0.554,2,0.582,5,1.043,8,1.447,9,1.082,10,2.934,11,1.437,13,0.676,16,1.13,18,0.736,19,2.85,20,2.161,21,1.649,26,0.998,28,1.146,31,3.299,37,3.475,38,3.173,40,1.529,47,3.161,49,3.575,52,0.94,56,2.149,57,0.793,58,2.041,63,1.199,64,3.048,66,1.039,74,0.931,93,0.955,97,5.837,107,1.024,110,1.957,111,1.599,120,1.542,125,1.973,130,1.753,133,2.884,139,1.32,151,1.985,153,1.62,157,1.584,158,2.449,159,1.11,160,0.847,168,1.598,169,1.705,175,1.1,176,1.704,178,0.821,198,1.753,202,0.646,204,1.219,205,1.039,218,1.425,230,1.32,231,1.146,246,1.985,251,1.285,254,3.139,260,4.885,265,1.807,267,0.965,268,1.451,270,1.348,275,1.254,283,0.852,288,2.589,296,1.032,299,0.978,302,1.18,304,0.689,313,4.655,327,1.262,333,3.428,342,1.411,363,0.961,374,1.667,387,2.199,409,1.433,411,3.821,413,0.971,415,3.535,419,2.185,423,3.413,432,2.212,437,4.041,463,2.469,466,1.219,471,1.451,473,1.753,481,1.836,491,1.599,501,2.172,516,3.664,537,1.425,540,1.379,547,1.694,549,1.146,565,2.168,567,3.422,574,2.127,577,1.829,585,1.694,601,1.146,618,0.965,624,0.943,655,1.013,657,1.451,660,1.693,665,1.413,669,2.51,698,1.174,717,3.512,723,1.916,725,2.099,780,1.262,800,5.811,811,1.009,820,2.733,873,2.532,911,3.012,947,2.642,951,1.413,1049,2.562,1078,1.465,1119,1.285,1149,1.56,1181,1.753,1185,1.722,1199,4.521,1210,3.575,1220,1.262,1236,1.579,1247,1.542,1290,1.329,1293,1.579,1308,3.821,1325,1.667,1338,2.241,1346,2.241,1390,1.369,1392,2.642,1393,1.152,1400,2.346,1432,1.152,1438,1.311,1490,1.509,1517,1.753,1611,1.787,1675,1.787,1686,1.302,1767,1.599,1862,1.262,1941,2.241,1967,1.753,2005,1.494,2120,2.041,2692,1.825,2693,2.127,3209,6.927,3241,2.127,3578,2.241,4178,1.867,4188,1.825,4639,1.973,5167,2.127,5481,2.415,5482,2.415,5483,5.534,5484,2.415,5485,2.415,5486,2.415,5487,5.135,5488,2.241,5489,2.415,5490,2.415]],["component/164",[1,0.4]],["title/165-1",[0,20.659,586,28.616]],["name/165-1",[]],["text/165-1",[]],["component/165-1",[]],["title/165-2",[2,21.736,247,23.302]],["name/165-2",[]],["text/165-2",[]],["component/165-2",[]],["title/165-3",[13,16.835,168,17.362,175,15.809,176,13.731,1400,25.483,5491,50.807]],["name/165-3",[]],["text/165-3",[]],["component/165-3",[]],["title/165",[8,14.38,193,30.134,304,18.705,313,32.903,450,34.678]],["name/165",[193,0.906,304,0.562,329,1.289]],["text/165",[0,1.661,1,0.519,2,0.67,8,2.063,11,0.954,13,0.778,15,1.088,18,0.847,20,2.372,24,0.791,26,2.994,31,2.289,38,2.466,56,1.905,63,1.379,66,2.03,82,1.26,87,2.666,133,3.167,138,2.917,158,1.548,160,0.974,162,1.871,163,1.562,164,1.121,168,2.98,173,1.498,174,1.364,175,2.32,176,2.148,178,0.944,192,0.969,193,5.642,200,1.936,202,1.262,203,1.624,205,4.048,215,3.987,247,1.219,252,1.53,254,2.586,258,1.255,265,1.2,267,2.894,271,2.089,280,1.488,281,2.655,283,0.979,291,2.078,293,1.173,296,1.186,303,1.288,304,3.405,313,4.719,317,1.239,333,1.276,342,2.737,363,2.447,387,1.46,413,1.896,417,1.498,432,1.469,445,1.802,450,4.291,464,3.856,481,2.07,500,2.385,515,1.109,523,1.625,529,2.687,546,1.239,572,3.084,577,1.214,582,3.012,583,1.599,586,0.882,591,0.918,606,1.442,618,1.109,619,1.324,624,1.085,626,1.562,655,1.165,679,2.633,682,1.219,708,2.204,714,2.016,729,1.942,730,1.922,764,2.317,781,4.05,802,2.979,836,6.123,873,2.158,890,1.948,1011,1.539,1113,1.754,1128,1.625,1135,1.718,1266,1.816,1317,4.737,1400,3.739,1438,1.508,1452,1.839,1480,1.26,1565,4.105,1658,1.754,1706,2.204,1730,2.204,1745,4.377,1747,3.647,1828,2.446,1862,1.451,1923,2.148,1946,1.918,1997,2.464,2008,2.348,2394,4.153,2487,2.348,2564,1.574,2994,2.016,3157,2.348,4052,6.123,4053,6.123,4054,6.123,4055,6.379,4672,2.148,5491,6.123,5492,6.723,5493,4.716,5494,4.716,5495,2.777,5496,2.777,5497,2.777,5498,2.777,5499,2.777,5500,2.777]],["component/165",[1,0.4]],["title/166-1",[0,20.659,586,28.616]],["name/166-1",[]],["text/166-1",[]],["component/166-1",[]],["title/166-2",[2,19.324,114,43.491,342,27.028]],["name/166-2",[]],["text/166-2",[]],["component/166-2",[]],["title/166-3",[5,38.938,588,49.254]],["name/166-3",[]],["text/166-3",[]],["component/166-3",[]],["title/166-4",[9,40.368,1393,42.973]],["name/166-4",[]],["text/166-4",[]],["component/166-4",[]],["title/166-5",[7,27.26,168,16.028,248,27.403,754,24.161,2457,41.929,3080,36.284,4763,42.908]],["name/166-5",[]],["text/166-5",[]],["component/166-5",[]],["title/166-6",[7,32.212,168,18.939,2458,49.546,3080,42.875,4763,50.702]],["name/166-6",[]],["text/166-6",[]],["component/166-6",[]],["title/166-7",[7,32.212,168,18.939,2459,52.024,3080,42.875,4763,50.702]],["name/166-7",[]],["text/166-7",[]],["component/166-7",[]],["title/166-8",[7,32.212,168,18.939,3080,42.875,4763,50.702,5172,55.421]],["name/166-8",[]],["text/166-8",[]],["component/166-8",[]],["title/166-9",[13,22.44,114,43.491,342,27.028]],["name/166-9",[]],["text/166-9",[]],["component/166-9",[]],["title/166-10",[7,27.26,168,16.028,327,28.987,754,24.161,779,28.477,1047,26.716,3080,36.284]],["name/166-10",[]],["text/166-10",[]],["component/166-10",[]],["title/166-11",[7,27.26,168,16.028,754,24.161,779,28.477,780,28.987,1050,26.984,3080,36.284]],["name/166-11",[]],["text/166-11",[]],["component/166-11",[]],["title/166",[7,27.26,168,16.028,267,22.165,754,24.161,1393,26.458,2812,35.047,3080,36.284]],["name/166",[114,1.483,3080,1.786]],["text/166",[0,1.328,2,1.207,5,0.712,7,6.455,9,0.738,13,1.143,18,0.502,28,0.782,31,0.725,38,1.547,45,2.186,46,0.956,56,2.115,74,2.723,76,1.064,82,0.747,93,2.291,110,0.771,114,1.618,130,1.196,133,1.784,158,3.004,159,1.37,168,3.67,169,0.672,178,0.56,188,0.9,227,0.717,246,0.782,248,2.472,253,0.754,267,4.313,271,4.04,278,1.268,299,0.667,304,1.846,327,1.557,342,3.802,360,2.472,363,0.656,369,2.611,381,0.764,407,0.907,409,0.564,412,3.537,421,1.878,432,0.871,445,2.213,454,0.827,456,2.311,472,1.586,474,1.388,481,0.723,553,0.934,566,0.663,586,0.523,588,0.9,591,0.545,592,3.704,593,0.624,595,0.709,596,0.814,597,0.883,601,1.415,627,0.723,650,0.618,671,2.744,689,0.693,700,3.667,720,1.259,727,2.414,739,1.548,745,1.825,754,3.84,767,1.077,779,4.127,780,3.026,812,0.841,886,1.949,887,3.197,911,0.607,1047,0.793,1050,0.801,1053,1.077,1081,1.106,1113,1.883,1128,0.964,1203,0.981,1205,1.156,1243,1.307,1259,1.175,1304,0.778,1322,1.091,1348,2.703,1393,0.786,1396,5.036,1398,0.972,1400,0.699,1426,0.827,1432,0.786,1565,3.283,1578,3.7,1588,1.041,1608,1.064,1641,1.274,1676,1.077,1763,1.138,1919,0.964,1997,1.557,2102,1.307,2171,6.642,2269,1.451,2457,1.245,2458,1.245,2459,1.307,2564,3.283,2812,1.041,2885,6.219,2906,3.569,2951,1.274,3080,8.73,3672,4.646,4016,2.519,4172,1.393,4503,8.059,4763,7.309,4791,1.451,4826,4.409,4828,5.699,5118,3.45,5172,1.393,5501,1.529,5502,1.529,5503,1.529,5504,1.648,5505,5.006,5506,5.006,5507,5.006,5508,5.006,5509,5.006,5510,8.451,5511,5.006,5512,8.451,5513,2.981,5514,2.981,5515,1.529,5516,6.472,5517,2.981,5518,2.981,5519,1.648,5520,1.648,5521,2.981,5522,2.981,5523,6.472,5524,2.981,5525,2.981,5526,2.981,5527,2.981,5528,2.981,5529,2.981]],["component/166",[1,0.4]],["title/167-1",[0,20.659,586,28.616]],["name/167-1",[]],["text/167-1",[]],["component/167-1",[]],["title/167-2",[2,19.324,57,26.302,267,32.005]],["name/167-2",[]],["text/167-2",[]],["component/167-2",[]],["title/167-3",[5,34.617,56,21.073,267,32.005]],["name/167-3",[]],["text/167-3",[]],["component/167-3",[]],["title/167-4",[30,29.084,267,24.01,299,24.335,1027,42.154,1400,25.483,1432,28.661]],["name/167-4",[]],["text/167-4",[]],["component/167-4",[]],["title/167-5",[1400,33.968,4031,67.723,5530,74.358]],["name/167-5",[]],["text/167-5",[]],["component/167-5",[]],["title/167-6",[1400,33.968,4033,67.723,5531,74.358]],["name/167-6",[]],["text/167-6",[]],["component/167-6",[]],["title/167-7",[1400,33.968,5491,67.723,5532,74.358]],["name/167-7",[]],["text/167-7",[]],["component/167-7",[]],["title/167-8",[9,23.08,30,24.933,170,22.177,252,16.713,267,20.583,380,20.185,413,20.721,1822,36.137]],["name/167-8",[]],["text/167-8",[]],["component/167-8",[]],["title/167-9",[7,35.43,13,20.198,57,23.675,671,30.575]],["name/167-9",[]],["text/167-9",[]],["component/167-9",[]],["title/167-10",[56,15.809,671,25.483,1047,28.941,1078,36.455,1236,39.305,1997,31.401]],["name/167-10",[]],["text/167-10",[]],["component/167-10",[]],["title/167-11",[7,32.212,56,17.245,671,27.798,1050,31.885,1997,34.253]],["name/167-11",[]],["text/167-11",[]],["component/167-11",[]],["title/167-12",[93,31.691,2389,52.391,5533,80.124]],["name/167-12",[]],["text/167-12",[]],["component/167-12",[]],["title/167-13",[7,29.53,299,24.335,671,25.483,1400,25.483,1432,28.661,2763,39.803]],["name/167-13",[]],["text/167-13",[]],["component/167-13",[]],["title/167-14",[1400,38.208,5534,79.368]],["name/167-14",[]],["text/167-14",[]],["component/167-14",[]],["title/167-15",[531,44.049,1400,38.208]],["name/167-15",[]],["text/167-15",[]],["component/167-15",[]],["title/167-16",[17,55.741,1400,38.208]],["name/167-16",[]],["text/167-16",[]],["component/167-16",[]],["title/167-17",[812,45.988,1400,38.208]],["name/167-17",[]],["text/167-17",[]],["component/167-17",[]],["title/167-18",[1400,38.208,3358,54.659]],["name/167-18",[]],["text/167-18",[]],["component/167-18",[]],["title/167-19",[7,32.212,93,25.935,168,18.939,2766,44.612,3080,42.875]],["name/167-19",[]],["text/167-19",[]],["component/167-19",[]],["title/167-20",[7,32.212,662,30.542,671,27.798,1052,34.898,1997,34.253]],["name/167-20",[]],["text/167-20",[]],["component/167-20",[]],["title/167-21",[8,11.301,20,16.874,154,16.361,228,21.004,455,27.97,494,19.747,1054,30.413,1997,26.918]],["name/167-21",[]],["text/167-21",[]],["component/167-21",[]],["title/167-22",[38,15.674,57,21.524,381,30.404,591,21.683,911,24.173]],["name/167-22",[]],["text/167-22",[]],["component/167-22",[]],["title/167-23",[38,13.264,56,14.594,911,20.457,1643,30.977,1997,28.987,2588,46.902,4119,42.908]],["name/167-23",[]],["text/167-23",[]],["component/167-23",[]],["title/167-24",[38,14.369,56,15.809,911,22.161,1644,34.6,1997,31.401,2105,45.42]],["name/167-24",[]],["text/167-24",[]],["component/167-24",[]],["title/167-25",[38,15.674,662,30.542,911,24.173,1997,34.253,2405,42.361]],["name/167-25",[]],["text/167-25",[]],["component/167-25",[]],["title/167-26",[38,12.318,56,13.552,381,23.894,411,35.578,627,22.615,911,18.997,1997,26.918,3075,36.742]],["name/167-26",[]],["text/167-26",[]],["component/167-26",[]],["title/167-27",[38,14.369,381,27.872,662,27.999,911,22.161,1997,31.401,3077,43.631]],["name/167-27",[]],["text/167-27",[]],["component/167-27",[]],["title/167-28",[49,56.08,56,15.809,593,22.756,911,22.161,3209,42.861]],["name/167-28",[]],["text/167-28",[]],["component/167-28",[]],["title/167-29",[229,33.653,313,27.845,327,28.987,363,22.092,595,23.882,730,22.618,1209,29.919]],["name/167-29",[]],["text/167-29",[]],["component/167-29",[]],["title/167-30",[254,23.352,304,15.829,313,27.845,454,27.845,460,20.758,596,27.403,2299,40.277]],["name/167-30",[]],["text/167-30",[]],["component/167-30",[]],["title/167-31",[57,23.675,173,38.886,421,27.059,597,38.632]],["name/167-31",[]],["text/167-31",[]],["component/167-31",[]],["title/167-32",[56,17.245,173,35.354,421,24.601,1997,34.253,2229,41.875]],["name/167-32",[]],["text/167-32",[]],["component/167-32",[]],["title/167-33",[173,35.354,421,24.601,662,30.542,1997,34.253,2230,41.875]],["name/167-33",[]],["text/167-33",[]],["component/167-33",[]],["title/167-34",[17,44.604,56,18.967,1997,37.675,3177,53.365]],["name/167-34",[]],["text/167-34",[]],["component/167-34",[]],["title/167-35",[38,14.369,57,19.732,166,20.329,173,32.41,278,25.578,1919,35.175]],["name/167-35",[]],["text/167-35",[]],["component/167-35",[]],["title/167-36",[166,20.329,173,32.41,277,32.199,421,22.553,1997,31.401,2231,47.692]],["name/167-36",[]],["text/167-36",[]],["component/167-36",[]],["title/167-37",[166,20.329,173,32.41,421,22.553,1997,31.401,2144,45.42,2232,47.692]],["name/167-37",[]],["text/167-37",[]],["component/167-37",[]],["title/167-38",[89,30.325,166,18.766,173,29.919,277,29.724,421,20.82,1997,28.987,5535,46.902]],["name/167-38",[]],["text/167-38",[]],["component/167-38",[]],["title/167-39",[89,30.325,166,18.766,173,29.919,421,20.82,1997,28.987,2144,41.929,5536,51.497]],["name/167-39",[]],["text/167-39",[]],["component/167-39",[]],["title/167-40",[8,10.548,168,13.892,170,20.7,254,20.24,267,19.212,481,21.108,553,27.255,744,19.276,1081,32.272]],["name/167-40",[]],["text/167-40",[]],["component/167-40",[]],["title/167-41",[168,18.939,170,28.22,1081,43.996,1997,34.253,2233,49.546]],["name/167-41",[]],["text/167-41",[]],["component/167-41",[]],["title/167-42",[57,21.524,176,14.978,445,25.05,805,34.048,1588,41.413]],["name/167-42",[]],["text/167-42",[]],["component/167-42",[]],["title/167-43",[31,19.497,38,19.153,247,20.716]],["name/167-43",[]],["text/167-43",[]],["component/167-43",[]],["title/167",[383,43.739,412,39.414,650,27.059,1997,37.675]],["name/167",[412,1.077,2161,1.195,2182,1.305]],["text/167",[0,0.796,1,0.299,2,0.77,5,0.187,6,0.18,7,4.721,8,1.46,9,0.194,11,0.67,13,0.449,15,0.17,16,0.395,17,3.398,18,1.138,19,0.612,20,1.385,24,0.124,26,0.349,27,0.77,28,1.647,30,0.597,31,1.242,35,0.287,37,0.746,38,2.281,40,0.585,41,0.354,45,1.046,46,0.252,49,1.477,52,0.623,56,2.64,57,0.854,61,0.591,64,0.315,66,0.531,74,1.232,75,0.304,76,0.28,82,0.727,84,0.218,87,0.847,89,1.067,91,1.523,93,1.938,96,0.274,100,0.531,104,0.235,108,0.577,110,0.395,128,0.684,129,0.291,133,0.853,138,1.319,144,0.309,150,0.424,154,2.066,157,1.209,158,1.538,159,0.388,160,0.802,161,0.246,162,0.335,164,1.507,166,1.348,168,2.737,169,1.415,170,1.82,171,0.328,172,0.154,173,2.753,176,0.793,187,0.21,192,0.559,193,2.61,197,0.512,202,0.33,203,0.149,204,0.622,205,0.363,209,0.252,214,0.489,215,0.239,227,0.697,228,0.503,229,0.748,231,0.585,238,0.464,243,0.395,245,0.775,246,0.585,247,0.218,248,0.964,249,0.328,252,2.458,254,1.678,255,2.1,265,0.843,267,4.158,270,0.688,271,3.173,273,0.28,275,0.438,277,1.224,278,0.682,279,0.69,280,0.452,281,0.692,282,0.244,283,1.025,286,0.266,288,0.395,290,0.475,291,0.543,293,0.825,296,0.361,299,3.556,303,0.391,304,1.065,305,0.683,306,0.491,310,0.372,312,0.177,313,2.001,327,0.644,333,1.716,342,3.545,345,0.892,360,1.844,363,1.036,369,2.1,370,0.304,378,0.344,379,0.183,380,2.488,381,1.481,383,0.971,386,0.172,395,0.622,409,0.669,410,0.471,411,0.583,412,1.588,413,0.785,417,0.455,421,2.324,422,0.922,424,0.827,428,0.562,432,0.229,437,0.517,438,2.232,445,2.366,449,0.277,450,0.847,451,0.403,454,0.804,455,0.669,456,0.739,460,0.461,464,1.27,466,0.622,467,0.244,470,0.693,471,0.261,472,0.449,473,0.315,474,0.574,480,0.69,481,2.15,486,0.274,487,0.529,494,0.748,510,0.246,511,1.028,514,0.277,515,0.337,531,1.561,539,1.807,541,0.369,546,0.194,549,1.085,553,2.397,554,0.545,555,0.335,565,1.02,566,0.785,576,1.197,582,1.023,586,0.268,587,0.382,591,0.53,593,0.467,595,0.363,596,0.417,597,0.66,599,0.408,601,1.379,606,0.438,618,1.593,624,0.481,626,1.098,627,0.371,636,0.69,643,0.28,644,0.522,649,0.217,650,0.317,655,0.182,658,0.344,659,1.372,660,0.176,661,0.237,662,1.97,663,0.494,664,0.528,666,0.321,671,4.303,682,0.19,689,0.674,700,0.246,702,0.256,704,0.287,711,0.367,712,0.354,714,0.315,717,0.231,720,0.357,725,0.218,727,0.162,728,0.533,730,0.503,737,0.806,744,1.497,745,0.266,748,0.206,751,0.228,753,0.295,754,0.85,763,0.806,767,0.284,779,0.633,780,0.227,781,0.217,788,0.25,793,0.309,805,3.216,811,0.353,812,3.611,839,0.517,840,1.715,848,1.361,850,0.287,866,0.287,875,0.962,882,0.865,911,3.238,951,0.254,1027,0.304,1047,0.209,1050,0.211,1052,0.231,1054,0.256,1064,0.28,1067,0.304,1078,2.105,1081,1.075,1085,0.315,1093,0.328,1128,0.494,1141,0.335,1143,0.315,1147,0.321,1158,0.291,1168,0.912,1178,0.566,1198,0.3,1203,0.258,1208,0.653,1209,1.053,1236,0.806,1238,0.494,1241,0.559,1245,0.613,1250,0.522,1266,0.552,1304,0.582,1305,0.559,1325,0.583,1348,0.287,1369,0.799,1389,0.851,1393,1.09,1396,2.055,1398,0.256,1400,4.371,1425,0.295,1426,0.98,1432,1.781,1441,1.889,1443,0.354,1445,1.305,1480,1.318,1490,0.271,1512,2.31,1518,0.77,1565,4.487,1578,1.247,1582,1.932,1588,1.012,1612,0.239,1615,0.266,1624,0.335,1643,0.242,1644,0.25,1676,0.284,1687,1.061,1714,0.28,1719,0.3,1740,0.714,1766,1.047,1815,0.552,1822,1.825,1833,1.163,1862,2.559,1893,0.274,1917,0.277,1919,0.494,1935,0.304,1957,0.625,1973,0.382,1997,5.585,2001,0.328,2010,0.309,2015,0.714,2017,0.743,2018,0.69,2043,0.755,2071,0.328,2080,0.67,2105,1.21,2114,0.3,2144,1.727,2161,0.748,2171,0.315,2178,0.3,2182,0.287,2184,0.344,2229,0.277,2230,0.277,2231,0.344,2232,0.344,2233,0.328,2238,0.335,2245,0.367,2252,0.714,2255,0.382,2257,0.367,2259,0.367,2299,0.613,2354,0.367,2389,0.284,2394,0.382,2405,0.28,2484,1.579,2487,0.714,2564,4.72,2571,0.3,2588,1.042,2692,0.328,2702,0.274,2763,0.287,2766,0.295,2781,0.354,2812,0.274,2942,0.653,2994,2.319,3005,0.743,3075,0.309,3077,0.315,3080,2.766,3095,0.367,3116,0.743,3118,0.367,3119,0.315,3157,0.714,3177,0.321,3207,0.367,3209,2.278,3280,0.403,3328,0.403,3358,2.105,3411,0.304,3516,0.743,3747,1.392,3944,0.3,3958,0.403,3959,0.367,4009,0.382,4016,0.367,4029,0.367,4031,2.2,4033,2.2,4036,0.367,4037,0.602,4044,0.978,4047,0.382,4052,0.714,4053,0.714,4054,0.714,4055,0.382,4058,0.403,4061,1.144,4062,0.403,4101,0.69,4111,0.403,4112,0.403,4113,0.382,4114,0.403,4115,0.403,4116,0.382,4117,0.403,4119,0.653,4121,0.403,4124,0.403,4125,0.403,4126,0.403,4127,0.743,4128,0.403,4131,0.367,4135,0.403,4136,1.144,4163,0.382,4430,0.382,4435,0.382,4437,0.382,4763,1.239,4797,0.382,4799,0.354,4800,0.367,4801,0.367,4802,0.354,4855,0.354,4869,0.783,4877,0.783,5112,0.403,5118,0.367,5193,0.67,5224,0.344,5491,1.042,5492,1.144,5501,0.403,5502,0.783,5503,1.487,5515,0.403,5530,0.403,5531,0.403,5532,0.403,5534,0.743,5535,0.367,5536,0.403,5537,0.434,5538,0.434,5539,0.434,5540,0.844,5541,0.434,5542,0.434,5543,0.434,5544,2.286,5545,0.434,5546,0.403,5547,0.434,5548,0.434,5549,0.403,5550,0.844,5551,0.434,5552,0.434,5553,0.403,5554,0.434,5555,0.434,5556,0.434,5557,0.434,5558,0.434,5559,0.403,5560,0.434,5561,0.434,5562,0.434,5563,0.403,5564,0.434,5565,0.844,5566,0.434,5567,0.434,5568,0.434,5569,0.434,5570,0.434,5571,0.434,5572,0.844,5573,0.844,5574,0.434,5575,0.844,5576,0.434,5577,0.434,5578,0.434,5579,1.952,5580,0.434,5581,0.844,5582,0.844,5583,0.434,5584,0.434,5585,1.233,5586,1.233,5587,0.844,5588,0.844,5589,0.844,5590,0.434,5591,0.844,5592,0.844,5593,0.844,5594,0.844,5595,0.844,5596,0.844,5597,0.844,5598,0.844,5599,0.434,5600,1.602,5601,1.602,5602,0.434,5603,0.844,5604,0.844,5605,0.844,5606,0.434,5607,0.403,5608,0.434,5609,0.434,5610,0.434,5611,0.434,5612,0.434,5613,0.434,5614,2.286,5615,0.844,5616,1.233,5617,1.233,5618,1.233,5619,1.233,5620,1.233,5621,1.233,5622,1.233,5623,1.233,5624,1.233,5625,0.844,5626,1.602,5627,1.602,5628,1.602,5629,1.602,5630,0.844,5631,1.602,5632,1.602,5633,1.602,5634,1.602,5635,0.844,5636,0.844,5637,0.434,5638,0.844,5639,0.844,5640,0.434,5641,0.434,5642,0.434,5643,0.434,5644,0.434,5645,0.434,5646,1.602]],["component/167",[1,0.4]],["title/168-1",[0,20.659,1853,56.923]],["name/168-1",[]],["text/168-1",[]],["component/168-1",[]],["title/168-2",[2,17.393,15,28.251,412,39.414,1304,34.062]],["name/168-2",[]],["text/168-2",[]],["component/168-2",[]],["title/168-3",[5,31.159,1317,47.158,1460,44.604,1646,51.424]],["name/168-3",[]],["text/168-3",[]],["component/168-3",[]],["title/168-4",[15,21.737,412,30.325,538,33.653,630,34.674,889,29.347,1027,38.914,1304,26.208]],["name/168-4",[]],["text/168-4",[]],["component/168-4",[]],["title/168-5",[412,39.414,1028,52.348,2994,52.348,5647,60.957]],["name/168-5",[]],["text/168-5",[]],["component/168-5",[]],["title/168-6",[1031,60.543,2994,58.158,5648,67.723]],["name/168-6",[]],["text/168-6",[]],["component/168-6",[]],["title/168-7",[9,32.303,254,30.35,1460,44.604,1646,51.424]],["name/168-7",[]],["text/168-7",[]],["component/168-7",[]],["title/168-8",[134,49.554,754,34.887,4305,63.571]],["name/168-8",[]],["text/168-8",[]],["component/168-8",[]],["title/168",[30,26.849,31,13.503,38,13.264,57,18.216,97,33.341,150,27.845,412,30.325]],["name/168",[412,1.493,1853,1.725]],["text/168",[0,0.445,1,0.871,2,0.468,4,1.435,5,0.838,8,1.24,9,0.869,11,1.185,15,2.538,16,2.181,18,0.591,19,1.318,20,0.635,24,0.552,31,1.134,32,1.435,33,1.099,37,0.904,38,1.351,39,0.835,52,1.343,55,0.939,56,1.487,57,1.53,61,1.653,64,1.739,77,1.179,82,2.115,84,1.732,87,3.114,89,1.06,97,2.074,100,0.835,107,0.822,108,2.181,113,1.225,122,1.678,133,0.848,134,1.2,142,1.408,150,0.973,151,0.921,154,1.795,157,2.14,158,1.53,164,0.783,166,0.656,168,1.633,169,1.407,172,0.688,176,0.443,198,1.408,202,0.924,209,1.126,227,0.845,231,0.921,245,0.77,250,1.339,252,3.284,253,2.587,254,3.685,258,0.876,264,1.225,267,2.588,271,1.585,275,1.007,276,1.687,281,2.014,283,3.57,288,0.908,290,1.091,291,2.054,293,3.286,298,1.108,303,0.9,304,0.553,306,1.856,310,0.855,315,1.466,316,1.873,317,0.865,327,1.803,333,2.142,335,1.285,342,2.186,345,1.348,360,0.958,363,1.374,370,2.42,381,0.9,383,2.093,387,1.814,388,2.608,393,1.155,397,1.708,409,1.597,411,1.339,412,6.865,416,1.126,417,1.046,419,1.013,421,0.728,423,0.888,438,0.637,440,1.5,445,0.741,451,0.925,456,0.896,460,1.291,464,1.509,470,2.622,474,1.608,481,0.851,487,1.48,488,1.001,489,0.939,494,0.743,500,0.753,501,1.792,502,1.177,511,0.873,515,3.108,538,3.428,539,0.939,545,1.166,546,1.539,565,1.352,566,0.78,567,1.2,601,0.921,604,0.835,606,2.421,610,1.64,618,0.775,623,1.075,626,1.941,630,3.532,655,0.813,656,1.708,662,0.904,689,0.816,692,1.253,693,1.155,698,1.678,720,0.819,735,0.973,739,1.007,751,1.814,754,1.503,780,1.803,811,0.81,882,1.36,889,2.99,903,1.585,911,0.715,1027,1.36,1028,1.408,1031,1.466,1053,1.268,1067,1.36,1093,1.466,1114,1.302,1122,1.585,1165,1.268,1177,1.36,1201,1.8,1210,1.253,1238,1.135,1256,1.435,1304,4.495,1317,4.237,1322,1.285,1328,1.001,1348,1.285,1392,1.225,1396,1.899,1426,2.837,1460,2.134,1518,1.212,1560,3.219,1646,2.461,1701,2.003,1738,1.5,1789,1.64,1792,2.42,1834,1.435,1853,1.225,1862,2.435,1997,2.953,2045,2.608,2047,1.302,2107,1.585,2161,3.93,2171,2.505,2182,3.087,2538,1.585,2564,2.642,2736,1.64,2994,8.267,3209,1.383,3913,2.917,3917,3.039,3946,1.708,4091,1.8,4092,1.8,4305,4.485,4415,1.64,4497,1.8,4792,1.708,4799,2.819,4800,2.917,4801,2.917,4802,2.819,4803,3.039,4972,1.539,5487,1.8,5647,7.016,5648,4.778,5649,5.653,5650,5.653,5651,3.451,5652,3.451,5653,3.451,5654,1.94,5655,4.662,5656,3.451,5657,3.451,5658,3.451,5659,3.451,5660,3.451,5661,3.451,5662,1.94,5663,1.94,5664,1.94,5665,3.451,5666,1.8,5667,3.451,5668,3.451,5669,1.94,5670,1.94,5671,1.94]],["component/168",[1,0.4]],["title/169",[288,33.747,412,39.414,650,27.059,1997,37.675]],["name/169",[252,0.5,288,0.721,412,0.842,911,0.568]],["text/169",[0,1.766,6,3.196,40,3.771,118,6.113,158,2.529,169,3.14,172,2.731,209,4.471,254,3.242,267,4.121,288,4.828,295,3.355,412,7.66,644,4.765,650,3.871,655,3.23,1369,3.845,1997,6.491,2171,7.489,4044,8.186,4109,9.575,4297,11.992,4797,9.086,5666,9.575,5672,10.318,5673,10.318,5674,10.318]],["component/169",[1,0.4]],["title/170-1",[160,31.609,586,28.616]],["name/170-1",[]],["text/170-1",[]],["component/170-1",[]],["title/170",[31,17.55,38,17.239,56,18.967,97,43.332]],["name/170",[586,1.413]],["text/170",[7,4.187,8,2.681,30,4.124,31,2.074,38,2.037,57,3.62,97,5.121,150,4.277,154,2.706,166,2.882,168,2.462,193,3.917,252,2.764,267,3.404,288,3.988,304,2.431,313,4.277,380,3.339,383,5.169,412,6.681,421,3.198,450,4.507,650,4.137,754,3.711,1393,4.064,1400,3.613,1997,5.76,2812,5.383,3080,5.573,4799,6.963,4800,7.204,4801,7.204,4802,6.963,4803,7.505]],["component/170",[1,0.4]],["title/171-1",[0,20.659,586,28.616]],["name/171-1",[]],["text/171-1",[]],["component/171-1",[]],["title/171",[8,13.182,154,19.086,166,20.329,380,23.546,421,22.553,1400,25.483]],["name/171",[8,0.278,166,0.428,380,0.496,421,0.475,659,0.598]],["text/171",[0,1.675,1,2.006,7,3.591,8,2.79,18,1.454,20,3.261,31,2.162,38,2.38,77,1.63,100,3.146,114,2.59,154,2.821,164,2.949,166,4.495,168,2.566,192,3.474,235,2.102,236,2.155,238,1.795,239,2.069,247,2.297,277,3.915,304,1.361,342,2.997,346,2.769,380,4.617,383,2.894,412,3.994,413,2.939,421,4.562,422,5.732,430,2.683,438,2.916,454,2.394,466,2.407,494,3.816,546,3.26,565,1.869,586,1.515,599,3.536,618,1.906,624,1.863,650,1.79,659,4.703,671,3.099,706,4.392,754,2.077,780,2.492,840,4.314,850,3.159,1114,3.201,1245,3.463,1331,3.294,1393,2.275,1400,4.801,1565,2.704,1864,5.408,1997,5.608,2144,3.605,2564,2.704,5607,6.783]],["component/171",[1,0.4]],["title/172",[8,19.765,31,21.931]],["name/172",[586,1.413]],["text/172",[]],["component/172",[1,0.4]],["title/173-1",[0,15.03,24,18.666,442,32.38,655,27.493,929,40.553]],["name/173-1",[]],["text/173-1",[]],["component/173-1",[]],["title/173-2",[2,17.393,8,15.816,438,23.675,1437,39.414]],["name/173-2",[]],["text/173-2",[]],["component/173-2",[]],["title/173-3",[8,15.816,13,20.198,438,23.675,498,63.511]],["name/173-3",[]],["text/173-3",[]],["component/173-3",[]],["title/173-4",[237,33.118,591,26.496,4240,61.956]],["name/173-4",[]],["text/173-4",[]],["component/173-4",[]],["title/173",[8,15.816,154,22.899,247,18.647,897,40.261]],["name/173",[8,0.432,154,0.626,897,1.1]],["text/173",[0,1.677,1,0.663,2,0.856,6,3.035,8,2.485,13,1.619,16,2.705,18,1.081,19,1.355,20,1.162,24,2.083,26,3.488,39,1.527,54,1.761,55,2.797,57,1.164,65,2.112,66,1.527,77,2.883,83,2.488,89,1.939,138,1.173,154,2.323,158,1.164,168,2.437,192,1.237,200,2.373,201,2.669,202,2.258,203,2.905,204,1.79,205,1.527,230,1.939,237,3.841,238,2.176,239,1.539,247,0.917,252,1.875,258,1.602,271,4.135,305,1.966,306,2.302,310,1.563,312,1.451,313,1.78,324,1.111,342,1.95,343,4.47,359,2.349,363,2.302,386,1.403,393,2.112,421,1.331,426,4.122,433,2.898,437,3.54,438,3.72,442,5.596,456,1.637,479,1.82,481,1.557,486,2.24,498,6.444,515,2.309,531,1.734,568,3.301,576,1.461,577,2.527,579,3.124,583,4.857,591,1.173,624,2.857,626,1.995,627,1.557,644,2.194,650,1.331,653,2.265,655,3.896,706,2.131,727,1.323,729,1.461,730,1.446,732,2.194,744,2.933,807,1.708,811,3.057,839,2.172,875,3.474,877,2.449,895,2.325,896,3.846,897,1.98,929,4.526,1132,4.673,1331,2.449,1350,1.637,1437,5.078,1442,4.886,1470,2.625,1479,2.38,1480,1.609,1492,3.613,1612,1.952,1736,2.743,1800,2.026,1919,3.383,1920,6.244,1937,2.998,2301,2.814,2358,2.292,2702,2.24,3411,2.488,4240,7.705,4263,2.68,4266,2.998,4268,3.292,5142,5.365,5163,4.723,5675,3.547,5676,3.547,5677,3.547]],["component/173",[1,0.4]],["title/174",[8,15.816,57,23.675,174,35.43,464,31.526]],["name/174",[174,1.342,464,1.194]],["text/174",[6,4.614,160,3.901,719,6.565,950,6.403,1122,9.087,1190,7.186,1278,6.303,3882,9.087]],["component/174",[1,0.4]],["title/175-1",[0,18.366,56,21.073,369,29.624]],["name/175-1",[]],["text/175-1",[]],["component/175-1",[]],["title/175",[56,21.073,322,46.12,369,29.624]],["name/175",[56,0.405,162,0.612,252,0.5,369,0.57]],["text/175",[0,0.895,6,1.619,8,1.37,11,1.341,13,1.093,18,1.904,26,1.614,40,1.427,56,3.422,74,1.505,82,1.771,87,2.709,93,1.544,100,3.36,138,3.443,154,1.24,157,1.478,158,1.282,162,4.869,164,1.575,168,1.128,169,1.591,172,2.214,202,1.672,237,1.614,238,1.469,243,2.923,246,1.853,252,3.896,253,1.786,260,1.889,271,3.716,305,6.294,306,5.329,307,3.3,308,2.148,310,4.301,322,5.992,327,2.039,342,2.107,345,2.439,354,2.391,369,4.33,386,1.544,415,2.091,421,1.465,438,2.563,474,1.818,487,1.674,511,1.756,515,1.559,565,1.529,567,2.415,576,4.288,577,2.731,583,5.136,603,2.44,604,1.68,660,1.581,717,3.324,720,1.649,727,1.456,729,1.608,733,2.247,734,2.105,735,1.959,746,5.103,747,6.379,753,2.656,779,2.004,793,2.784,799,2.493,811,1.631,835,3.438,875,2.346,894,2.696,895,1.57,1123,2.466,1165,2.553,1432,1.861,1438,2.119,1453,4.956,1527,2.784,1538,2.229,1600,2.738,1612,2.148,1714,2.522,1767,2.585,1800,2.229,1828,3.438,1919,2.285,1920,2.889,1937,3.3,2584,3.623,2702,2.466,5419,3.3,5678,3.623]],["component/175",[1,0.4]],["title/176",[247,16.953,252,21.266,306,26.105,310,28.892,805,34.048]],["name/176",[154,0.626,306,0.785,310,0.868]],["text/176",[8,1.402,11,2.196,16,2.992,18,2.765,56,2.386,77,2.185,138,4.008,157,2.421,159,2.938,162,2.537,169,2.606,172,2.267,203,2.202,238,2.406,243,2.992,246,3.034,247,2.346,252,4.083,265,3.92,271,2.173,281,2.762,305,3.544,306,5.496,308,5.803,310,5.83,317,2.852,321,3.71,322,3.68,335,4.234,369,2.364,438,2.099,460,2.392,487,2.741,500,2.481,567,3.954,586,2.03,603,3.995,650,2.399,673,4.831,701,2.806,733,3.68,734,3.447,779,3.281,781,3.191,1039,4.234,1123,4.038,1210,4.131,1405,3.651,1432,3.049,1484,3.742,1487,3.842,1538,3.651,1736,4.944,1800,3.651,3255,4.944,4318,5.934]],["component/176",[1,0.4]],["title/177-1",[0,18.366,172,28.405,304,22.856]],["name/177-1",[]],["text/177-1",[]],["component/177-1",[]],["title/177-2",[2,14.497,252,19.496,306,23.931,310,26.487,508,45.42,3120,49.107]],["name/177-2",[]],["text/177-2",[]],["component/177-2",[]],["title/177-3",[13,20.198,252,23.391,650,27.059,805,37.449]],["name/177-3",[]],["text/177-3",[]],["component/177-3",[]],["title/177-4",[14,29.661,252,16.713,253,23.578,369,19.052,460,28.987,500,19.994,591,17.04]],["name/177-4",[]],["text/177-4",[]],["component/177-4",[]],["title/177-5",[252,21.266,306,26.105,310,28.892,515,26.191,593,24.823]],["name/177-5",[]],["text/177-5",[]],["component/177-5",[]],["title/177-6",[252,17.997,305,30.754,306,22.092,363,22.092,369,20.517,595,23.882,5679,51.497]],["name/177-6",[]],["text/177-6",[]],["component/177-6",[]],["title/177",[57,19.732,154,19.086,305,33.315,306,23.931,788,34.6,805,31.213]],["name/177",[162,0.612,252,0.5,369,0.57,586,0.489]],["text/177",[0,0.847,2,0.891,6,1.533,8,1.311,11,1.269,13,1.035,14,1.206,16,0.98,18,2.293,19,0.801,20,1.21,30,1.014,31,0.899,37,0.976,52,0.816,56,1.303,57,1.627,66,0.902,74,1.911,77,2.571,82,0.951,104,1.137,110,1.729,121,1.323,138,3.68,154,0.665,158,2.238,160,0.735,162,1.967,164,0.845,169,2.02,172,1.31,175,1.303,176,1.856,202,2.434,203,0.721,238,1.39,243,2.796,246,1.753,252,4.346,253,2.268,258,0.946,265,0.905,273,2.387,281,2.141,283,2.404,294,0.823,296,1.578,304,0.598,305,6.62,306,5.422,308,2.727,310,5.202,316,3.244,317,2.211,321,1.216,322,3.44,342,2.538,354,2.263,363,2.714,369,3.196,421,0.786,430,1.178,438,0.688,445,2.605,456,1.706,460,3.682,466,1.057,467,1.178,470,1.178,471,2.22,474,1.721,483,1.797,487,2.562,500,1.923,508,2.792,512,1.046,515,3.931,520,1.259,539,1.014,545,1.259,591,1.222,592,4.422,593,0.793,595,0.902,601,0.994,603,2.309,624,1.443,650,2.558,660,2.006,661,2.019,669,2.711,678,1.04,682,0.92,698,1.019,706,1.259,708,2.932,725,1.051,727,1.378,729,2.041,733,3.924,734,3.676,735,1.854,779,3.499,781,1.046,805,4.488,807,2.386,811,1.544,873,0.959,950,1.206,1105,1.37,1169,1.447,1259,2.635,1290,2.033,1293,1.37,1348,1.387,1393,0.999,1401,1.469,1405,1.197,1409,2.181,1484,2.9,1518,1.309,1527,2.635,1538,3.893,1608,1.354,1687,1.387,1737,1.494,1792,2.591,1800,4.297,2204,1.259,2301,1.663,2516,1.55,2702,2.334,3120,6.638,3199,1.62,3319,1.945,4415,1.771,5048,1.945,5419,1.771,5679,6.327,5680,2.095]],["component/177",[1,0.4]],["title/178-1",[160,31.609,586,28.616]],["name/178-1",[]],["text/178-1",[]],["component/178-1",[]],["title/178",[57,26.302,138,26.496,306,31.899]],["name/178",[238,0.742,306,0.785,586,0.626]],["text/178",[56,2.772,57,3.459,154,3.346,247,2.725,252,3.418,305,5.841,306,5.01,310,4.644,322,6.066,369,3.896,788,6.066,805,6.534]],["component/178",[1,0.4]],["title/179-1",[0,20.659,586,28.616]],["name/179-1",[]],["text/179-1",[]],["component/179-1",[]],["title/179-2",[2,14.497,8,13.182,166,20.329,347,31.213,738,30.164,2170,36.808]],["name/179-2",[]],["text/179-2",[]],["component/179-2",[]],["title/179",[8,11.301,14,29.661,20,16.874,494,19.747,534,24.933,738,25.858,1426,25.858,2170,31.554]],["name/179",[738,0.989,1356,1.61,2170,1.207]],["text/179",[0,1.175,1,0.409,2,0.925,6,0.907,7,1.885,8,2.475,11,1.76,13,0.612,15,2.008,18,0.667,20,2.527,24,2.515,26,0.904,31,0.532,38,0.917,45,1.171,52,0.851,56,1.348,57,0.718,64,0.816,65,1.302,74,0.843,91,2.444,100,0.941,119,1.718,122,1.063,128,3.965,150,3.091,154,2.225,157,0.828,158,0.718,164,2.068,166,3.671,168,2.552,172,0.775,175,1.348,176,1.171,183,1.187,184,1.534,192,1.338,193,1.005,202,0.585,227,2.231,232,0.967,238,1.444,239,1.664,240,2.208,241,1.058,243,1.023,252,0.709,254,0.92,258,0.988,259,0.931,271,3.288,275,1.136,276,3.01,277,4.134,281,1.657,299,0.885,304,1.094,306,0.871,327,1.142,333,1.005,337,3.237,342,2.806,347,4.319,361,1.302,369,3.432,380,3.79,389,1.129,395,3.536,407,2.111,416,1.269,420,1.136,421,0.82,423,1.755,424,1.467,438,2.301,454,3.517,459,1.992,481,1.684,488,1.129,494,3.188,500,0.848,511,1.726,512,1.091,518,1.926,532,3.108,534,3.734,535,1.467,541,0.956,543,1.269,560,2.397,565,0.857,577,1.677,586,0.694,601,1.038,604,0.941,618,2.047,623,1.212,624,2.001,650,0.82,655,0.917,671,1.626,685,2.82,688,1.249,693,2.284,700,1.239,708,3.044,720,0.924,729,1.58,738,5.995,744,2.054,754,0.952,764,1.074,780,1.142,812,2.615,848,1.302,875,2.305,887,2.45,896,1.149,911,2.271,921,2.284,981,1.103,1053,2.508,1085,1.587,1105,1.43,1150,2.45,1282,2.245,1356,4.187,1398,2.264,1400,2.173,1422,1.28,1480,1.74,1589,3.243,1811,2.423,1912,1.848,2011,1.448,2032,1.926,2094,1.488,2170,5.41,2175,1.848,2182,1.448,2186,1.691,2358,1.413,2488,2.951,2491,3.72,2582,3.044,3119,1.587,3415,1.848,4439,2.899,4469,3.56,4548,5.206,4639,1.786,4695,3.378,4931,4.187,5419,3.243,5681,2.187,5682,2.187,5683,3.836,5684,2.187,5685,3.836,5686,2.187,5687,2.187,5688,3.836,5689,3.836,5690,3.836,5691,2.187,5692,6.159,5693,2.187,5694,2.187,5695,2.187,5696,2.187,5697,2.187,5698,2.187,5699,2.187,5700,2.187,5701,2.187,5702,2.187,5703,3.836,5704,2.187,5705,2.187,5706,2.187,5707,2.187,5708,2.187,5709,2.187,5710,6.159,5711,2.187,5712,3.836,5713,2.187,5714,2.187,5715,2.187,5716,2.187,5717,2.187,5718,2.187]],["component/179",[1,0.4]],["title/180-1",[160,31.609,586,28.616]],["name/180-1",[]],["text/180-1",[]],["component/180-1",[]],["title/180",[8,14.38,192,22.875,228,26.727,380,25.685,454,32.903]],["name/180",[17,2.753]],["text/180",[8,2.252,14,5.911,20,3.363,38,2.455,138,3.396,166,3.473,192,3.582,247,2.655,380,4.022,494,3.935,534,4.969,546,4.58,659,4.85,738,5.153,1357,6.486,1426,5.153,2170,6.288]],["component/180",[1,0.4]],["title/181-1",[0,11.812,8,11.301,154,16.361,166,17.427,175,13.552,176,11.771,276,25.185,720,21.765]],["name/181-1",[]],["text/181-1",[]],["component/181-1",[]],["title/181-2",[2,17.393,31,17.55,38,17.239,247,18.647]],["name/181-2",[]],["text/181-2",[]],["component/181-2",[]],["title/181-3",[8,12.169,13,15.541,31,13.503,175,14.594,176,12.676,488,28.644,1426,27.845]],["name/181-3",[]],["text/181-3",[]],["component/181-3",[]],["title/181",[38,11.497,138,15.905,166,16.266,192,16.779,247,12.435,380,18.84,546,21.454,659,22.716,1357,30.377]],["name/181",[380,0.604,659,0.728,1357,0.973,4565,1.303]],["text/181",[0,1.268,1,0.451,2,1.009,7,1.186,8,2.717,11,0.829,13,0.676,15,3.201,18,0.736,20,2.676,24,0.688,31,2.364,38,2.494,40,1.529,44,2.491,45,1.294,52,0.94,56,1.735,74,0.931,77,0.825,93,0.955,107,1.024,111,1.599,119,1.082,133,1.829,138,2.467,142,1.753,150,1.212,154,2.595,157,0.914,158,1.816,160,1.467,162,0.958,164,2.233,166,3.528,168,1.208,169,0.984,172,0.856,175,3.318,176,3.06,178,1.881,179,2.147,182,1.13,183,1.311,192,2.302,195,1.867,202,1.119,214,0.958,227,2.409,228,0.984,235,1.064,236,1.091,238,0.909,239,1.047,240,1.39,247,2.842,248,1.193,254,1.016,255,2.077,258,1.091,259,1.028,260,1.169,276,3.646,277,3.535,283,1.951,295,1.052,329,1.579,342,3.129,347,1.254,363,0.961,369,0.893,380,3.201,413,0.971,421,0.906,422,2.408,438,2.449,451,3.896,455,1.311,474,1.948,481,1.836,487,1.035,488,4.526,491,1.599,494,2.529,507,2.469,532,3.356,534,2.024,535,1.62,546,1.077,560,4.123,576,0.995,599,1.169,606,1.254,618,1.671,624,0.943,627,1.06,659,1.141,671,1.024,682,1.06,689,1.016,700,1.369,706,1.451,720,2.787,744,3.514,745,1.479,751,1.269,764,4.557,812,3.367,839,1.479,1177,1.694,1245,4.016,1279,3.821,1353,1.753,1400,1.024,1426,4.1,1476,1.694,1492,1.509,1957,1.787,2010,1.722,2011,1.599,2181,1.348,2488,3.161,2491,3.036,2492,2.041,2582,4.39,2750,3.684,2751,5.811,2752,3.095,2753,2.983,2755,3.095,2756,3.095,3411,1.694,4439,1.825,4599,1.787,4755,2.241,5719,3.882,5720,2.241,5721,5.135,5722,3.882,5723,3.882,5724,2.415]],["component/181",[1,0.4]],["title/182-1",[0,20.659,586,28.616]],["name/182-1",[]],["text/182-1",[]],["component/182-1",[]],["title/182-2",[2,13.383,122,26.984,247,14.347,395,27.999,494,21.265,929,34.319,1855,40.277]],["name/182-2",[]],["text/182-2",[]],["component/182-2",[]],["title/182-3",[13,15.541,122,26.984,247,14.347,395,27.999,929,34.319,1281,33.04,1855,40.277]],["name/182-3",[]],["text/182-3",[]],["component/182-3",[]],["title/182",[247,20.716,395,40.428,929,49.554]],["name/182",[395,0.994,760,1.322,1855,1.43]],["text/182",[0,0.792,1,1.942,2,0.833,8,2.648,13,0.968,18,1.053,24,0.984,40,1.263,56,0.909,66,1.487,77,1.181,122,3.494,154,3.299,158,3.009,160,1.985,164,1.394,168,1.634,204,1.744,230,1.888,235,3.166,236,3.246,238,2.704,239,3.117,245,2.246,247,2.687,271,1.175,278,2.408,283,1.218,291,1.523,298,1.973,303,1.602,312,4.026,326,1.511,327,1.805,342,1.166,363,1.376,386,1.367,395,6.748,422,1.989,432,1.828,437,2.116,438,2.727,442,4.861,464,1.511,481,2.484,483,2.752,494,4.156,500,3.223,529,2.474,565,1.354,576,1.423,586,1.097,600,3.907,602,4.035,618,1.38,627,1.517,644,2.137,650,2.123,655,1.449,660,2.291,682,2.484,690,3.907,693,3.369,703,2.545,727,3.098,729,4.054,730,2.307,732,3.5,733,3.257,744,1.385,797,2.232,807,2.725,839,2.116,896,5.462,897,3.159,911,2.086,929,8.001,949,2.823,977,3.207,1281,6.187,1350,1.595,1484,3.311,1528,2.938,1575,2.096,1855,7.144,1893,3.574,1942,4.187,1970,3.207,2172,2.116,2603,3.85,5725,3.456,5726,3.456,5727,3.456,5728,3.456,5729,3.456]],["component/182",[1,0.4]],["title/183-1",[0,20.659,588,49.254]],["name/183-1",[]],["text/183-1",[]],["component/183-1",[]],["title/183-2",[2,17.393,247,18.647,464,31.526,703,32.439]],["name/183-2",[]],["text/183-2",[]],["component/183-2",[]],["title/183-3",[13,20.198,31,17.55,175,18.967,176,16.474]],["name/183-3",[]],["text/183-3",[]],["component/183-3",[]],["title/183-4",[202,19.299,327,37.675,1047,34.723,1532,48.391]],["name/183-4",[]],["text/183-4",[]],["component/183-4",[]],["title/183-5",[202,19.299,1050,35.07,1209,38.886,1532,48.391]],["name/183-5",[]],["text/183-5",[]],["component/183-5",[]],["title/183-6",[14,37.743,302,32.047,692,42.361,1052,34.898,2181,36.604]],["name/183-6",[]],["text/183-6",[]],["component/183-6",[]],["title/183-7",[591,26.496,701,35.164,1528,41.605]],["name/183-7",[]],["text/183-7",[]],["component/183-7",[]],["title/183",[202,19.299,546,32.169,896,37.905,1532,48.391]],["name/183",[528,1.458,929,1.219,1528,1.023]],["text/183",[0,0.533,1,0.607,2,0.561,8,0.51,13,0.352,14,0.724,18,0.383,19,1.816,20,0.762,24,1.153,28,0.596,31,1.674,38,0.3,40,0.459,46,1.35,52,0.489,55,0.608,56,1.065,60,0.762,61,1.115,74,2.073,82,0.57,83,0.881,107,0.986,108,0.588,113,0.794,128,0.994,129,0.843,138,0.769,144,0.896,154,1.286,157,2.036,158,1.329,159,1.069,161,0.712,162,0.499,164,0.939,168,2.759,170,1.001,175,2.015,176,1.964,178,0.427,179,1.194,192,1.133,195,1.366,201,2.195,202,2.706,203,0.801,205,1.743,230,2.939,237,0.52,243,0.588,245,0.499,247,1.663,253,1.853,254,0.529,258,0.568,270,2.261,271,3.943,275,0.653,278,0.99,281,0.543,283,2.092,288,1.089,290,1.827,291,0.554,294,1.276,296,0.994,299,0.509,302,0.614,303,1.878,304,0.927,324,0.394,327,1.697,329,2.648,337,3.003,338,4.393,342,2.584,344,0.912,345,0.491,347,1.208,357,3.833,359,0.832,395,2.713,409,1.113,428,0.573,432,0.665,438,2.259,445,0.48,450,1.718,451,1.549,456,0.58,459,5.252,464,4.797,479,0.645,481,3.02,483,0.611,486,1.469,494,0.482,500,0.903,505,0.803,512,1.161,515,0.502,516,3.148,528,0.93,534,1.572,538,2.883,546,1.038,548,1.758,549,1.104,565,0.492,566,0.505,576,0.958,588,0.687,591,0.416,606,0.653,609,2.155,618,1.618,624,1.268,626,0.707,627,1.021,628,0.736,639,0.762,650,0.472,653,1.486,655,0.976,660,1.315,678,1.612,679,2.261,682,1.021,692,2.098,699,1.8,701,2.086,703,4.549,720,1.372,727,0.469,729,0.958,730,0.512,739,1.208,744,2.578,751,0.661,754,0.547,757,0.822,764,2.335,781,0.627,788,1.339,807,0.605,816,0.997,818,0.736,823,0.803,850,0.832,869,3.003,875,1.398,881,7.605,889,0.665,895,0.505,896,4.788,929,2.94,1011,0.697,1013,0.972,1047,0.605,1050,0.611,1052,0.669,1115,1.583,1175,2.717,1209,1.751,1250,0.777,1271,1.469,1275,0.794,1278,0.712,1281,0.748,1304,1.913,1327,0.832,1366,1.246,1392,0.794,1393,0.599,1400,2.28,1415,1.166,1426,1.167,1471,1.107,1496,0.95,1512,2.94,1518,0.785,1528,5.872,1532,3.608,1569,0.972,1571,3.003,1581,1.062,1622,0.702,1648,0.855,1766,0.822,1855,1.689,1925,0.912,1928,0.843,1988,0.803,2106,0.77,2160,0.912,2161,0.762,2172,5.09,2181,2.654,2267,0.997,2276,1.966,2604,2.577,2643,2.454,2783,4.707,2911,1.062,3108,1.966,3111,1.107,3114,1.107,3115,4.99,3116,1.107,3123,4.412,3126,1.166,3127,4.735,3255,1.799,3266,3.758,4542,1.027,4642,1.107,4643,2.242,4652,3.771,5147,2.049,5148,2.049,5189,1.966,5553,1.166,5730,1.107,5731,1.107,5732,1.257,5733,1.257,5734,1.166,5735,1.257,5736,1.166,5737,1.166,5738,1.166,5739,1.166,5740,1.166,5741,1.166,5742,1.166,5743,1.166,5744,3.566,5745,4.05,5746,1.257,5747,1.257,5748,1.257,5749,1.257,5750,3.248,5751,1.257,5752,3.248,5753,3.248,5754,2.327,5755,1.257,5756,1.257,5757,2.327,5758,2.327,5759,2.327,5760,2.327,5761,1.257,5762,1.257,5763,1.257,5764,1.257,5765,1.257,5766,1.257,5767,1.257,5768,1.166,5769,1.166,5770,1.166,5771,1.166,5772,2.159,5773,1.257,5774,1.166,5775,1.166,5776,1.166,5777,1.257,5778,2.159,5779,2.159,5780,1.166,5781,1.166,5782,1.166,5783,1.166,5784,3.014,5785,3.014,5786,3.014,5787,1.107,5788,1.166,5789,2.159,5790,1.166,5791,1.166,5792,1.166,5793,1.166,5794,2.159,5795,1.166,5796,1.166,5797,1.166,5798,1.166,5799,1.166]],["component/183",[1,0.4]],["title/184-1",[0,20.659,586,28.616]],["name/184-1",[]],["text/184-1",[]],["component/184-1",[]],["title/184-2",[2,19.324,31,19.497,138,26.496]],["name/184-2",[]],["text/184-2",[]],["component/184-2",[]],["title/184",[154,17.619,445,21.199,464,24.257,483,26.984,703,24.959,720,23.438,896,29.165]],["name/184",[483,0.958,896,1.036,2172,1.207]],["text/184",[0,1.631,1,1.045,2,0.822,8,1.56,11,1.17,18,1.038,19,1.301,24,0.97,25,2.617,28,1.617,31,0.829,38,1.337,40,1.245,44,2.028,56,0.896,60,2.066,66,1.466,77,1.164,85,2.256,100,2.407,107,1.444,127,2.703,128,1.455,138,2.724,157,3.443,158,1.118,161,1.93,164,1.374,168,3.115,170,2.407,201,1.573,202,2.616,203,1.173,205,3.062,230,3.057,232,1.507,247,1.84,252,1.105,265,1.472,273,4.597,281,2.416,283,3.447,304,2.595,317,1.52,333,1.566,337,3.533,342,3.068,359,2.256,361,3.33,442,4.067,445,4.392,459,2.904,460,1.274,464,5.149,466,1.719,481,2.455,483,5.431,486,2.152,487,1.461,524,1.945,531,1.665,565,2.787,566,1.37,577,2.445,586,1.082,595,2.407,601,1.617,618,1.361,623,1.888,624,1.33,653,2.176,679,3.972,689,1.434,693,4.237,703,4.645,739,1.769,788,3.219,818,1.993,839,2.086,895,1.37,896,6.534,1011,1.888,1013,2.634,1048,2.521,1256,2.521,1290,1.875,1304,1.609,1392,2.152,1479,2.286,1528,2.904,1569,2.634,1713,2.703,2160,2.473,2172,6.839,2276,4.727,2491,2.473,2783,7.756,3108,4.727,3111,3,3114,3,4027,2.783,4440,5.376,4643,2.352,5140,8.81,5141,3.161,5730,3,5731,3,5734,3.161,5800,5.593,5801,3.407,5802,3.407,5803,3.407,5804,3.407,5805,3.407,5806,3.407,5807,3.161]],["component/184",[1,0.4]],["title/185-1",[0,18.366,160,28.101,586,25.44]],["name/185-1",[]],["text/185-1",[]],["component/185-1",[]],["title/185",[459,41.605,896,42.112,1528,41.605]],["name/185",[586,0.867,896,1.436]],["text/185",[0,2.563,1,2.089,18,2.654,45,4.664,154,2.765,160,3.054,168,2.515,202,2.33,247,2.251,273,5.626,395,5.641,445,4.272,459,4.522,464,3.807,483,4.234,494,3.337,546,4.987,586,2.765,655,3.651,703,5.029,720,3.678,896,6.849,929,6.915,1281,5.185,1532,5.843,1855,6.321,1988,5.561,2906,6.209]],["component/185",[1,0.4]],["title/186-1",[0,20.659,586,28.616]],["name/186-1",[]],["text/186-1",[]],["component/186-1",[]],["title/186-2",[2,19.324,138,26.496,154,25.44]],["name/186-2",[]],["text/186-2",[]],["component/186-2",[]],["title/186-3",[13,20.198,31,17.55,921,42.941,1528,37.449]],["name/186-3",[]],["text/186-3",[]],["component/186-3",[]],["title/186-4",[202,19.299,327,37.675,1047,34.723,1532,48.391]],["name/186-4",[]],["text/186-4",[]],["component/186-4",[]],["title/186-5",[202,19.299,1050,35.07,1209,38.886,1532,48.391]],["name/186-5",[]],["text/186-5",[]],["component/186-5",[]],["title/186-6",[14,37.743,302,32.047,692,42.361,1052,34.898,2181,36.604]],["name/186-6",[]],["text/186-6",[]],["component/186-6",[]],["title/186-7",[591,26.496,701,35.164,1528,41.605]],["name/186-7",[]],["text/186-7",[]],["component/186-7",[]],["title/186",[247,20.716,921,47.707,1528,41.605]],["name/186",[1528,1.023,2488,0.944,4652,1.382]],["text/186",[0,0.545,1,0.241,2,0.574,8,0.906,11,1.139,13,0.666,14,0.741,18,0.393,19,1.578,20,0.422,21,0.508,24,0.677,31,1.889,38,0.308,46,1.381,52,0.926,56,0.872,61,1.14,74,2.11,77,1.133,82,1.504,87,1.032,100,1.024,107,0.546,108,0.603,113,0.813,115,0.694,122,0.626,128,1.016,129,0.864,133,0.563,138,2.444,144,0.918,154,1.537,157,2.071,158,1.089,159,1.094,160,0.452,161,0.73,162,1.921,164,1.338,168,2.34,170,2.084,175,2.213,176,2.048,178,0.438,179,1.221,192,1.157,193,0.592,195,1.846,201,2.784,202,2.855,203,1.142,205,0.554,230,4.04,237,0.532,243,0.603,245,0.511,247,1.068,253,1.89,254,1.738,255,0.639,258,0.582,259,1.013,265,0.556,270,2.305,271,3.97,274,0.805,275,1.236,278,0.548,281,0.556,283,1.929,288,1.113,290,2.723,291,0.567,294,1.623,295,0.561,296,0.55,299,0.521,302,0.629,303,1.915,304,0.679,312,0.527,317,1.479,324,0.403,327,1.733,329,2.169,337,2.608,338,4.47,342,2.494,344,0.935,345,0.503,347,1.236,357,4.512,363,0.513,409,1.136,421,0.483,428,1.511,432,0.681,438,2.549,445,0.492,450,2.893,451,1.581,456,0.595,459,5.3,464,5.28,474,0.6,479,0.661,481,3.407,483,0.626,500,0.923,505,0.822,512,0.643,515,0.514,516,3.206,534,1.605,539,0.623,546,0.574,548,1.798,549,1.129,565,0.504,576,1.366,586,0.409,591,0.426,601,0.611,606,0.669,609,2.198,618,1.65,624,1.295,626,0.724,627,0.565,628,0.754,639,1.443,650,0.483,655,0.54,660,1.96,678,1.646,679,3.054,682,1.044,685,0.709,689,1.001,692,2.143,699,0.714,701,2.401,703,4.513,720,1.005,727,0.48,729,0.98,730,0.525,739,1.236,744,2.618,745,0.789,751,1.251,754,1.036,757,0.842,764,2.379,781,1.188,788,0.741,807,0.62,816,1.022,818,0.754,823,0.822,850,0.853,889,0.681,895,0.518,896,2.545,921,2.459,926,0.864,1047,0.62,1050,0.626,1052,0.685,1115,1.619,1175,3.249,1190,0.832,1209,2.227,1250,0.797,1271,1.503,1275,0.813,1278,0.73,1290,0.709,1304,1.566,1327,0.853,1366,1.275,1392,0.813,1393,0.614,1400,2.319,1426,2.072,1471,1.134,1480,0.584,1496,0.973,1512,2.995,1518,0.805,1528,6.309,1532,3.671,1571,3.455,1581,1.089,1622,0.719,1648,0.876,1766,0.842,1925,0.935,2106,0.789,2161,0.781,2172,5.78,2181,2.703,2204,1.993,2267,1.022,2604,2.631,2643,2.506,2911,2.011,3108,2.011,3255,1.84,4440,0.973,4542,1.052,4642,2.095,4643,2.851,4652,6.102,5147,2.095,5148,2.095,5189,2.011,5736,1.195,5737,1.195,5738,2.208,5739,1.195,5740,1.195,5741,1.195,5742,1.195,5743,2.208,5744,5.752,5768,1.195,5769,1.195,5770,1.195,5771,1.195,5772,3.833,5774,2.208,5775,2.208,5776,2.208,5778,2.208,5779,2.208,5780,1.195,5781,1.195,5782,1.195,5783,1.195,5784,3.078,5785,3.078,5786,3.078,5787,1.134,5788,1.195,5789,2.208,5790,1.195,5791,1.195,5792,1.195,5793,1.195,5794,2.208,5795,1.195,5796,1.195,5797,1.195,5798,1.195,5799,2.208,5808,1.288,5809,1.288,5810,1.288,5811,1.288,5812,1.288,5813,1.288,5814,1.288,5815,1.288]],["component/186",[1,0.4]],["title/187-1",[0,18.366,160,28.101,586,25.44]],["name/187-1",[]],["text/187-1",[]],["component/187-1",[]],["title/187",[168,16.028,201,25.615,203,19.106,459,28.814,921,33.04,1528,28.814,4652,38.914]],["name/187",[586,0.867,4652,1.916]],["text/187",[0,2.783,1,1.856,18,3.027,45,5.319,160,3.483,168,2.868,201,5.604,203,4.18,247,2.567,345,3.877,459,5.156,586,3.153,921,7.228,1528,6.809,4652,6.964]],["component/187",[1,0.4]],["title/188-1",[21,35.532,101,41.06]],["name/188-1",[]],["text/188-1",[]],["component/188-1",[]],["title/188-2",[21,25.851,101,29.872,324,20.533,363,26.105,1328,33.847]],["name/188-2",[]],["text/188-2",[]],["component/188-2",[]],["title/188-3",[409,30.871,876,68.101]],["name/188-3",[]],["text/188-3",[]],["component/188-3",[]],["title/188-4",[588,56.28]],["name/188-4",[]],["text/188-4",[]],["component/188-4",[]],["title/188-5",[176,20.588,247,23.302]],["name/188-5",[]],["text/188-5",[]],["component/188-5",[]],["title/188-6",[247,16.953,326,28.663,384,30.968,494,25.127,1575,39.766]],["name/188-6",[]],["text/188-6",[]],["component/188-6",[]],["title/188",[8,11.301,203,17.742,247,13.323,381,23.894,384,24.337,438,16.915,439,27.252,1797,37.403]],["name/188",[381,1.267,439,1.445]],["text/188",[0,0.555,1,1.888,6,1.004,8,2.355,11,1.903,16,2.593,18,0.738,20,1.815,21,0.954,24,1.881,25,1.132,26,1,36,1.646,38,0.578,40,1.532,47,1.159,52,1.631,54,1.201,55,1.171,56,1.458,60,1.468,61,1.159,77,2.552,87,1.05,101,1.102,110,1.132,114,1.314,119,1.084,128,2.367,133,1.058,153,1.624,154,1.76,158,1.376,159,1.112,160,0.849,162,0.96,164,0.976,166,0.818,168,1.601,176,0.553,177,2.9,187,2.028,192,1.462,195,0.816,200,2.712,201,3.05,203,2.572,210,1.756,214,2.622,215,6.184,219,1.165,230,1.322,236,1.093,238,1.577,239,1.817,241,1.171,245,1.663,247,2.401,251,2.23,252,0.785,258,2.985,267,0.967,271,2.781,276,1.183,291,2.442,296,1.034,304,0.69,312,0.99,323,1.305,324,2.069,326,2.888,335,1.602,342,1.414,345,1.636,360,4.04,362,1.428,363,1.668,369,0.895,374,1.671,381,3.793,384,3.528,386,1.657,396,1.332,403,2.74,409,1.435,413,0.973,417,1.305,419,1.264,428,1.102,437,5.009,438,3.689,439,5.344,441,2.707,442,2.737,460,1.568,488,1.249,489,1.171,493,2.74,494,1.606,496,1.296,511,1.088,515,0.967,539,2.028,546,1.869,565,1.641,599,1.171,600,2.893,601,1.148,619,1.154,626,1.361,629,1.697,634,1.404,650,0.908,667,4.672,677,2.988,688,1.382,689,1.018,690,1.671,702,1.428,720,1.022,748,3.136,754,1.825,759,2.707,774,1.563,788,1.393,797,1.563,820,1.195,821,2.812,873,1.107,895,0.973,897,2.339,911,1.545,929,1.497,970,1.871,981,1.221,1024,1.011,1143,4.796,1154,2.306,1216,1.545,1305,1.602,1327,1.602,1328,1.249,1350,1.117,1369,1.208,1457,1.563,1458,1.671,1573,2.775,1575,1.468,1629,1.671,1665,1.977,1697,1.441,1709,1.725,1760,1.871,1788,1.871,1797,1.756,1891,1.977,1951,1.871,1953,1.92,1958,1.829,1959,1.756,1960,3.24,1982,1.756,1983,1.92,2089,1.871,2114,1.671,2139,2.045,2172,2.566,2198,3.101,2203,1.756,2892,1.871,3096,1.871,3119,1.756,3399,1.871,3515,1.871,3742,1.791,3887,7.849,3889,2.045,3890,2.045,3891,3.542,3892,2.045,3893,3.423,3894,3.423,3895,2.045,3896,2.045,3900,1.977,3902,1.977,3909,4.88,3910,2.131,3912,2.131,3944,1.671,4186,1.977,5816,1.791,5817,2.246,5818,3.542,5819,2.246,5820,2.131,5821,2.045,5822,2.131,5823,2.246,5824,2.131,5825,2.246,5826,2.246,5827,2.246]],["component/188",[1,0.4]],["title/189-1",[304,25.71,455,48.92]],["name/189-1",[]],["text/189-1",[]],["component/189-1",[]],["title/189-2",[21,28.433,401,39.688,413,29,1024,30.13]],["name/189-2",[]],["text/189-2",[]],["component/189-2",[]],["title/189",[1,10.37,8,12.169,11,19.057,64,20.697,150,27.845,248,27.403,1210,35.849]],["name/189",[11,0.529,2484,0.935,2663,1.223,2689,1.303]],["text/189",[0,0.95,1,1.725,6,1.72,8,2.619,11,3.985,16,3.066,19,1.584,21,2.583,24,2.628,31,1.009,40,4.706,52,2.551,54,3.253,56,1.09,57,2.151,64,3.986,82,1.881,101,1.889,133,1.812,138,2.687,154,2.081,158,3.03,168,1.893,176,1.856,177,1.82,178,1.409,192,1.446,201,4.261,202,1.753,203,3.68,205,1.784,228,1.69,235,4.43,247,1.072,248,2.048,251,4.324,257,5.653,265,1.791,267,2.617,304,1.183,306,2.609,324,3.148,342,1.399,363,1.651,380,2.567,409,1.42,417,3.533,454,3.288,455,2.251,456,1.914,464,2.864,466,2.092,494,1.589,541,1.812,624,1.619,634,2.406,650,1.556,655,1.739,659,1.958,666,3.068,667,3.742,689,1.745,741,2.821,744,1.662,764,3.219,866,2.746,873,1.897,897,3.658,1024,2.738,1167,3.133,1210,5.964,1441,3.01,1480,1.881,1498,2.956,1528,2.153,1933,4.397,2003,3.133,2161,2.515,2198,3.068,2484,5.599,2694,3.651,2695,3.848,2696,3.651,2697,3.651,2698,6.081,3944,8.762,5816,3.068]],["component/189",[1,0.4]],["title/190-1",[304,25.71,981,45.475]],["name/190-1",[]],["text/190-1",[]],["component/190-1",[]],["title/190-2",[21,28.433,401,39.688,413,29,1024,30.13]],["name/190-2",[]],["text/190-2",[]],["component/190-2",[]],["title/190",[1,12.253,8,14.38,77,22.402,154,20.819,720,27.695]],["name/190",[77,0.933,465,1.948]],["text/190",[1,2.328,8,2.559,18,2.363,19,2.962,21,3.057,40,2.834,47,3.715,56,2.039,57,2.545,77,4.256,119,3.473,128,4.426,139,4.237,151,3.679,157,2.935,168,2.24,202,2.075,205,3.337,251,4.127,252,3.361,304,2.956,316,4.209,317,3.459,324,2.428,327,4.051,401,4.267,413,3.118,428,3.532,460,3.876,465,5.529,471,4.659,539,3.752,624,3.028,698,3.771,797,6.695,820,3.829,981,5.228,1024,3.239,5828,7.754,5829,7.754,5830,6.828]],["component/190",[1,0.4]],["title/191-1",[0,20.659,586,28.616]],["name/191-1",[]],["text/191-1",[]],["component/191-1",[]],["title/191-2",[2,19.324,408,37.321,409,27.445]],["name/191-2",[]],["text/191-2",[]],["component/191-2",[]],["title/191-3",[13,20.198,21,28.433,408,33.593,1024,30.13]],["name/191-3",[]],["text/191-3",[]],["component/191-3",[]],["title/191-4",[8,15.816,170,31.039,247,18.647,591,23.849]],["name/191-4",[]],["text/191-4",[]],["component/191-4",[]],["title/191-5",[324,25.09,408,37.321,593,30.333]],["name/191-5",[]],["text/191-5",[]],["component/191-5",[]],["title/191-6",[176,18.303,595,34.484,1574,48.593]],["name/191-6",[]],["text/191-6",[]],["component/191-6",[]],["title/191-7",[408,33.593,510,40.868,596,35.615,5831,66.93]],["name/191-7",[]],["text/191-7",[]],["component/191-7",[]],["title/191-8",[70,64.263,2228,58.932]],["name/191-8",[]],["text/191-8",[]],["component/191-8",[]],["title/191-9",[2378,62.227,3172,62.227]],["name/191-9",[]],["text/191-9",[]],["component/191-9",[]],["title/191-10",[92,58.932,3173,66.689]],["name/191-10",[]],["text/191-10",[]],["component/191-10",[]],["title/191",[1,12.253,8,14.38,11,22.518,247,16.953,408,30.542]],["name/191",[586,1.413]],["text/191",[0,0.905,1,2.277,2,0.953,8,2.541,11,3.687,13,0.633,16,2.95,18,0.689,20,1.722,21,2.073,24,1.124,27,1.413,32,1.673,37,1.053,40,0.826,45,2.116,47,1.083,49,1.461,52,0.88,55,1.094,57,1.726,60,1.371,64,1.473,66,1.7,68,1.122,70,1.612,77,1.349,89,1.236,92,2.583,93,4.65,95,1.271,99,1.398,109,3.365,110,1.058,113,1.428,119,1.013,126,4.772,131,1.538,139,1.236,147,1.181,150,3.164,151,1.073,154,0.718,157,0.856,158,0.742,160,0.793,162,0.897,168,1.821,170,0.973,172,0.801,176,1.201,190,1.794,192,1.835,195,0.763,202,0.605,228,0.922,231,1.073,237,0.934,238,4.133,239,4.258,241,1.911,243,2.461,244,1.673,245,2.087,247,2.996,252,2.322,259,0.962,269,1.371,290,1.271,291,1.74,294,0.888,295,0.984,298,1.291,303,1.048,306,2.85,315,1.708,316,1.227,317,3.193,319,1.346,321,2.292,323,1.219,324,3.571,345,2.462,346,1.312,369,0.836,370,1.585,377,1.312,387,1.188,406,3.286,408,5.548,409,3.077,417,1.219,421,0.848,432,1.196,436,4.341,438,0.742,445,1.509,460,2.358,465,2.816,467,1.271,489,1.094,502,3.19,506,1.478,510,1.281,513,1.708,541,0.988,552,1.371,556,1.794,565,0.886,566,0.909,586,0.718,591,0.748,593,0.856,595,0.973,596,1.116,608,1.262,619,4.495,624,0.883,655,0.948,682,0.992,698,4.584,701,1.733,719,1.334,720,0.955,774,1.461,786,5.848,811,0.945,831,6.2,873,1.034,889,1.196,1024,1.65,1036,2.615,1049,1.384,1060,1.147,1114,1.517,1291,1.673,1293,1.478,1305,4.175,1459,1.612,1550,3.892,1574,1.371,1579,1.911,1602,1.585,1612,1.244,1658,1.428,1996,5.552,2161,3.19,2228,1.478,2351,3.974,2378,1.561,2505,1.911,2691,1.911,3076,1.847,3172,1.561,3173,1.673,3227,1.748,3314,1.991,3515,4.875,4016,1.911,4599,1.673,5831,2.098,5832,7.158,5833,2.261,5834,2.098,5835,2.098]],["component/191",[1,0.4]],["title/192-1",[304,25.71,981,45.475]],["name/192-1",[]],["text/192-1",[]],["component/192-1",[]],["title/192-2",[21,28.433,413,29,1024,30.13,1538,41.185]],["name/192-2",[]],["text/192-2",[]],["component/192-2",[]],["title/192",[1,9.629,8,11.301,24,14.669,25,24.112,214,20.448,219,24.809,247,13.323,460,19.276]],["name/192",[1,0.368,8,0.432,214,0.782]],["text/192",[0,0.797,1,2.421,6,1.442,8,2.652,11,3.157,18,1.059,19,1.328,21,2.844,24,2.054,25,3.901,26,1.437,37,1.619,38,1.725,40,3.047,47,1.665,57,2.736,77,2.848,98,4.296,101,1.583,112,2.687,119,1.557,151,2.698,154,1.104,157,1.316,158,1.141,168,2.084,205,1.496,214,4.313,219,4.013,230,1.899,236,1.57,237,3.446,238,2.14,239,2.466,241,2.751,247,2.155,248,1.716,252,1.127,267,2.271,271,3.541,283,2.544,291,1.531,299,1.407,302,1.699,304,2.058,312,1.422,316,1.886,317,1.55,324,2.879,326,1.519,345,2.22,384,1.641,386,1.375,408,2.648,409,1.948,410,3.174,413,1.398,438,1.866,460,2.699,480,2.839,488,1.794,489,1.682,539,3.491,568,1.985,595,2.447,619,3.975,624,1.357,634,4.187,684,4.437,685,3.129,730,2.317,759,3.673,781,1.735,797,5.385,820,2.808,854,4.645,873,1.59,911,2.096,951,2.034,981,2.869,1024,3.014,1114,2.332,1147,2.572,1154,3.129,1278,1.969,1305,3.765,1443,2.839,1461,2.051,1538,1.985,1622,4.028,1788,4.396,1974,5.007,2172,2.128,2203,4.127,2660,5.276,2897,3.061,3400,5.276,3401,5.276,3403,5.276,3404,5.276,3405,5.276,3406,5.276,3407,5.276,5816,2.572,5824,5.007,5836,5.276,5837,3.476,5838,3.476,5839,3.225,5840,5.686,5841,3.476]],["component/192",[1,0.4]],["title/193-1",[21,35.532,101,41.06]],["name/193-1",[]],["text/193-1",[]],["component/193-1",[]],["title/193-2",[409,30.871,876,68.101]],["name/193-2",[]],["text/193-2",[]],["component/193-2",[]],["title/193-3",[8,19.765,324,28.222]],["name/193-3",[]],["text/193-3",[]],["component/193-3",[]],["title/193-4",[1,12.253,95,36.876,324,28.921,667,37.445]],["name/193-4",[]],["text/193-4",[]],["component/193-4",[]],["title/193-5",[21,25.851,101,29.872,324,20.533,363,26.105,409,22.46]],["name/193-5",[]],["text/193-5",[]],["component/193-5",[]],["title/193",[39,23.882,128,23.701,326,24.257,384,26.208,524,31.689,1797,40.277,2204,33.341]],["name/193",[39,1.176,454,1.371]],["text/193",[0,0.456,1,2.174,2,0.852,8,2.865,11,2.506,20,0.652,21,0.785,24,0.567,26,0.823,30,0.964,37,0.928,39,1.52,40,1.74,47,1.692,52,0.775,54,0.989,56,0.929,57,1.563,61,0.954,73,1.627,77,3.398,82,0.903,84,0.999,87,2.064,93,1.397,95,4.989,101,0.907,108,0.932,119,0.892,128,1.509,147,1.04,154,1.829,158,1.891,159,2.188,160,1.239,161,1.128,166,2.847,168,1.375,175,0.524,176,1.087,177,2.528,192,0.695,200,1.954,201,1.631,203,3.055,209,2.05,230,1.088,232,0.881,235,2.539,236,3.295,237,1.967,238,2.481,239,2.499,241,0.964,245,1.402,247,1.886,251,1.88,252,0.646,257,2.915,265,1.526,267,1.901,271,2.241,283,1.245,291,1.556,304,1.008,312,1.445,317,0.888,319,1.186,322,1.146,324,3.425,326,3.189,342,0.672,345,1.859,362,1.175,363,0.793,369,1.306,380,2.257,384,3.975,386,1.397,409,1.973,413,0.801,420,1.034,428,3.324,438,0.654,441,5.731,442,4.381,460,1.321,466,1.005,474,0.928,485,1.54,487,0.854,488,1.028,489,0.964,493,2.31,494,2.527,495,1.219,496,1.892,499,1.683,515,0.795,524,1.137,529,0.87,534,2.303,539,2.303,541,0.87,546,0.888,560,2.207,565,0.78,566,0.801,619,3.144,624,0.778,625,3.152,634,3.343,650,2.963,651,4.04,652,2.566,659,2.721,662,0.928,667,5.066,687,1.396,688,1.137,689,1.486,698,2.802,701,0.874,702,2.809,751,1.047,759,3.722,788,1.146,789,5.202,797,3.722,820,1.744,831,3.639,834,1.754,873,0.911,895,0.801,897,1.972,911,0.734,1024,0.832,1060,1.792,1086,1.683,1154,1.096,1167,4.353,1250,1.232,1275,1.258,1305,1.319,1328,1.028,1348,1.319,1350,1.631,1377,1.473,1378,3.394,1457,1.286,1548,3.394,1557,1.319,1558,1.473,1559,1.54,1573,1.319,1602,1.396,1609,2.718,1622,1.112,1797,2.564,1947,3.111,1948,3.111,1949,4.192,1950,4.192,1951,1.54,1952,1.754,1953,1.58,1954,1.627,1958,1.505,1959,2.564,1985,1.58,2003,2.669,2006,1.505,2161,2.142,2172,1.219,2198,3.522,2203,1.445,2204,1.196,2436,1.754,2437,1.754,2484,1.208,2488,2.281,2663,1.58,2703,3.239,4550,1.683,4564,2.986,5816,1.473,5842,1.848,5843,1.848,5844,1.754,5845,3.278,5846,1.848]],["component/193",[1,0.4]],["title/194-1",[0,18.366,172,28.405,304,22.856]],["name/194-1",[]],["text/194-1",[]],["component/194-1",[]],["title/194-2",[2,19.324,408,37.321,409,27.445]],["name/194-2",[]],["text/194-2",[]],["component/194-2",[]],["title/194-3",[13,20.198,21,28.433,408,33.593,1024,30.13]],["name/194-3",[]],["text/194-3",[]],["component/194-3",[]],["title/194-4",[324,25.09,408,37.321,591,26.496]],["name/194-4",[]],["text/194-4",[]],["component/194-4",[]],["title/194-5",[68,39.777,593,30.333,1574,48.593]],["name/194-5",[]],["text/194-5",[]],["component/194-5",[]],["title/194-6",[408,33.593,510,40.868,595,31.039,1400,30.575]],["name/194-6",[]],["text/194-6",[]],["component/194-6",[]],["title/194-7",[70,64.263,2227,49.95]],["name/194-7",[]],["text/194-7",[]],["component/194-7",[]],["title/194-8",[2118,62.227,3164,53.192]],["name/194-8",[]],["text/194-8",[]],["component/194-8",[]],["title/194-9",[2378,62.227,3165,58.932]],["name/194-9",[]],["text/194-9",[]],["component/194-9",[]],["title/194",[1,13.477,8,15.816,57,23.675,408,33.593]],["name/194",[586,1.413]],["text/194",[0,1.004,1,2.421,2,0.615,8,2.665,11,2.647,13,0.714,15,0.998,18,0.777,19,1.674,21,2.272,24,0.725,45,1.365,47,2.099,55,3.311,56,0.67,57,3.591,64,0.95,68,2.175,70,1.817,77,2.876,82,1.156,87,1.105,93,3.764,95,1.433,99,1.576,104,1.383,110,1.192,113,2.767,119,1.141,122,1.239,126,1.545,128,2.462,147,1.331,154,1.391,157,2.59,158,1.438,160,1.537,163,1.433,166,2.314,168,1.976,169,1.039,172,1.553,192,1.528,202,1.831,205,2.945,209,3.344,228,1.039,235,3.015,236,5.162,237,3.725,238,2.575,239,2.968,241,4.813,245,2.287,246,1.209,247,1.993,255,2.175,259,1.084,268,1.531,269,2.657,271,1.489,280,1.365,294,1.001,296,1.088,304,1.25,311,2.428,314,1.433,317,1.137,323,1.374,324,3.115,326,2.991,327,2.289,345,1.711,369,0.942,377,2.542,378,2.022,379,1.076,380,1.716,384,4.698,386,1.008,398,1.293,406,2.738,408,5.727,409,1.974,410,1.422,413,1.025,416,1.479,421,2.162,430,1.433,436,3.495,438,0.836,439,1.348,441,1.646,455,1.383,460,2.156,489,1.233,494,0.976,501,1.323,503,3.529,510,1.444,519,1.849,541,1.114,552,2.657,566,1.762,591,0.843,593,0.965,594,3.344,595,1.097,602,1.817,655,1.837,669,1.156,676,1.504,689,1.072,701,2.529,720,1.076,774,1.646,889,1.348,981,1.286,1024,1.83,1049,1.56,1235,1.734,1247,1.627,1400,1.08,1459,3.124,1464,2.154,1517,1.849,1543,1.517,1574,1.545,1658,2.767,1836,1.97,2068,1.849,2118,1.759,2161,2.657,2213,2.154,2214,2.154,2215,2.154,2227,1.412,2285,2.022,2288,2.244,2294,2.365,2310,2.365,2351,3.311,2378,1.759,2483,1.885,3164,1.504,3165,1.666,3515,1.97,4170,2.365,4599,1.885,5830,2.244,5832,3.703,5834,2.365,5835,2.365,5847,4.381,5848,2.154,5849,2.548,5850,2.548]],["component/194",[1,0.4]],["title/195-1",[0,20.659,46,52.301]],["name/195-1",[]],["text/195-1",[]],["component/195-1",[]],["title/195-2",[19,25.05,20,21.472,44,39.041,494,25.127,1008,38.051]],["name/195-2",[]],["text/195-2",[]],["component/195-2",[]],["title/195-3",[228,32.659,1009,51.764,1393,38.203]],["name/195-3",[]],["text/195-3",[]],["component/195-3",[]],["title/195-4",[2,17.393,6,29.915,21,28.433,1024,30.13]],["name/195-4",[]],["text/195-4",[]],["component/195-4",[]],["title/195-5",[5,31.159,201,33.292,232,31.907,247,18.647]],["name/195-5",[]],["text/195-5",[]],["component/195-5",[]],["title/195-6",[9,26.924,138,19.877,228,24.502,247,15.542,413,24.171,494,23.035]],["name/195-6",[]],["text/195-6",[]],["component/195-6",[]],["title/195-7",[6,29.915,151,34.223,1686,38.886,5851,57.221]],["name/195-7",[]],["text/195-7",[]],["component/195-7",[]],["title/195-8",[13,20.198,21,28.433,488,37.228,1024,30.13]],["name/195-8",[]],["text/195-8",[]],["component/195-8",[]],["title/195-9",[63,39.777,304,22.856,1047,38.577]],["name/195-9",[]],["text/195-9",[]],["component/195-9",[]],["title/195-10",[21,28.433,101,32.856,1024,30.13,1050,35.07]],["name/195-10",[]],["text/195-10",[]],["component/195-10",[]],["title/195-11",[1,8.988,8,10.548,57,15.789,216,31.848,228,19.605,247,12.435,259,20.466,494,18.431,1052,25.598]],["name/195-11",[]],["text/195-11",[]],["component/195-11",[]],["title/195-12",[138,19.877,228,24.502,247,15.542,413,24.171,494,23.035,1054,35.477]],["name/195-12",[]],["text/195-12",[]],["component/195-12",[]],["title/195-13",[56,14.594,128,23.701,138,18.35,252,17.997,758,41.06,1056,34.674,2204,33.341]],["name/195-13",[]],["text/195-13",[]],["component/195-13",[]],["title/195-14",[8,11.301,56,13.552,128,22.01,154,16.361,252,16.713,515,20.583,758,38.129,2136,35.059]],["name/195-14",[]],["text/195-14",[]],["component/195-14",[]],["title/195-15",[8,11.301,56,13.552,128,22.01,154,16.361,252,16.713,515,20.583,4003,37.403,5852,47.821]],["name/195-15",[]],["text/195-15",[]],["component/195-15",[]],["title/195-16",[93,17.835,128,19.26,252,14.625,494,17.28,497,30.256,515,18.012,546,20.114,684,37.243,5853,35.777]],["name/195-16",[]],["text/195-16",[]],["component/195-16",[]],["title/195-17",[20,18.171,128,23.701,283,19.566,684,29.533,4902,38.313,5854,44.027,5855,51.497]],["name/195-17",[]],["text/195-17",[]],["component/195-17",[]],["title/195-18",[109,19.952,168,12.259,228,17.3,232,18.777,634,24.629,655,17.796,684,22.588,759,27.419,911,15.647,1988,27.105,5856,33.674]],["name/195-18",[]],["text/195-18",[]],["component/195-18",[]],["title/195-19",[8,14.38,228,26.727,259,27.902,560,40.973,5857,60.851]],["name/195-19",[]],["text/195-19",[]],["component/195-19",[]],["title/195-20",[20,26.238,228,32.659,5858,74.358]],["name/195-20",[]],["text/195-20",[]],["component/195-20",[]],["title/195-21",[24,17.112,115,32.41,166,20.329,634,34.882,759,38.834,5859,55.784]],["name/195-21",[]],["text/195-21",[]],["component/195-21",[]],["title/195-22",[31,19.497,138,26.496,591,26.496]],["name/195-22",[]],["text/195-22",[]],["component/195-22",[]],["title/195-23",[228,26.727,252,21.266,578,57.743,1643,36.604,2016,40.151]],["name/195-23",[]],["text/195-23",[]],["component/195-23",[]],["title/195-24",[252,21.266,659,30.968,1644,37.743,2016,40.151,2307,57.743]],["name/195-24",[]],["text/195-24",[]],["component/195-24",[]],["title/195-25",[8,15.816,57,23.675,154,22.899,593,27.303]],["name/195-25",[]],["text/195-25",[]],["component/195-25",[]],["title/195-26",[57,19.732,228,24.502,237,24.846,422,34.6,494,23.035,2223,34.6]],["name/195-26",[]],["text/195-26",[]],["component/195-26",[]],["title/195-27",[39,38.789,595,38.789]],["name/195-27",[]],["text/195-27",[]],["component/195-27",[]],["title/195-28",[38,19.153,175,21.073,2227,44.407]],["name/195-28",[]],["text/195-28",[]],["component/195-28",[]],["title/195-29",[31,17.55,377,41.852,1068,52.348,3164,42.565]],["name/195-29",[]],["text/195-29",[]],["component/195-29",[]],["title/195-30",[39,33.35,40,18.835,131,35.059,466,26,1178,34.575,3165,33.694,5860,43.554]],["name/195-30",[]],["text/195-30",[]],["component/195-30",[]],["title/195",[57,21.524,154,20.819,228,26.727,494,25.127,684,34.898]],["name/195",[8,0.432,138,0.652,684,1.049]],["text/195",[0,0.209,1,0.638,2,0.22,5,0.203,6,1.018,8,2.551,9,0.211,11,0.314,13,0.256,16,0.428,18,0.143,19,1.809,20,3.503,21,1.568,24,2.592,28,0.434,31,0.222,33,0.267,37,0.804,38,1.474,39,1.338,40,1.815,44,2.204,45,0.925,46,0.53,52,0.817,54,0.234,55,0.442,56,1.712,57,1.021,63,0.661,65,1.851,66,0.203,72,0.663,74,0.352,77,1.535,78,0.336,87,0.396,93,2.367,94,0.919,100,0.904,101,0.214,104,0.496,108,0.22,109,0.43,114,0.255,115,2.287,117,0.747,119,2.013,121,0.297,122,0.229,126,0.285,127,0.373,128,2.634,131,1.429,133,1.073,138,2.097,139,0.257,147,0.246,151,1.475,153,0.316,154,1.958,157,1.292,158,0.689,164,0.697,166,2.144,167,5.936,168,2.138,172,0.167,175,0.974,176,0.637,178,0.311,182,0.22,183,0.723,195,0.159,201,1.133,202,1.388,204,0.672,214,0.528,216,0.882,228,3.676,230,0.499,232,1.638,235,0.207,236,1.26,237,0.378,238,1.868,239,2.053,240,1.965,243,0.428,245,0.363,246,0.223,247,2.186,251,0.25,252,1.201,253,0.215,254,0.198,255,0.454,258,0.413,259,2.297,260,0.228,264,0.577,265,0.575,271,3.532,275,0.244,276,2.427,283,0.47,288,0.623,291,1.37,295,1.612,298,0.522,302,0.23,303,2.503,304,0.493,306,1.111,312,0.374,317,0.594,321,0.773,322,0.271,323,0.254,324,0.658,333,0.612,342,0.828,344,4.956,345,0.357,347,0.897,359,0.882,360,1.685,363,0.187,369,0.338,377,0.273,379,0.199,381,0.424,384,0.815,386,0.186,393,0.544,395,0.237,396,0.733,398,0.239,401,1.711,405,0.32,406,0.294,408,2.313,413,1.996,417,0.254,422,1.413,428,0.416,432,0.483,438,2.595,445,2.776,451,1.33,454,0.668,456,0.217,457,0.312,459,0.244,460,0.498,464,0.206,466,0.237,470,0.265,480,0.385,481,0.207,487,0.392,488,1.44,489,1.187,491,0.312,494,4.47,496,0.252,497,0.613,506,0.308,508,0.356,511,2.129,515,0.839,520,0.283,524,0.269,535,0.316,537,1.239,539,0.644,541,0.206,542,0.598,543,2.747,544,0.707,546,0.594,553,0.755,559,1.624,560,4.54,563,2.871,564,4.169,567,0.291,577,0.206,578,1.849,591,0.302,593,0.178,595,0.203,604,0.203,606,0.244,618,0.69,619,0.224,624,0.52,627,0.207,634,4.721,650,0.177,652,0.493,655,0.558,659,2.236,660,0.191,661,1.699,669,0.214,676,0.278,677,3.376,684,6.318,685,2.854,688,3.418,692,0.59,693,0.544,698,0.444,701,0.401,720,1.037,727,0.176,730,0.704,738,3.182,744,0.842,753,0.32,754,0.914,756,0.414,758,3.139,759,3.35,760,0.613,764,0.654,767,0.598,774,3.208,788,3.337,799,0.301,804,0.808,811,0.556,812,0.24,813,0.919,815,0.373,823,2.87,848,1.028,873,0.79,881,0.348,895,0.189,897,0.263,911,2.517,926,0.316,932,0.364,934,3.136,936,0.316,1008,0.273,1009,0.304,1024,0.877,1038,0.294,1047,0.227,1050,0.229,1052,0.25,1054,0.278,1056,0.294,1061,1.002,1068,0.342,1093,0.356,1128,1.633,1134,3.376,1149,1.115,1167,0.356,1178,0.316,1182,1.231,1188,0.414,1198,0.325,1205,0.33,1223,0.33,1231,0.246,1238,0.275,1243,0.373,1244,0.978,1281,0.28,1290,1.156,1295,0.336,1304,0.629,1348,0.312,1349,1.164,1357,2.156,1392,0.841,1393,0.635,1400,0.2,1420,0.663,1426,0.236,1432,0.224,1461,0.278,1470,0.348,1481,1.126,1486,0.69,1519,1.173,1528,1.615,1548,0.652,1549,2.086,1571,0.577,1573,0.882,1614,0.894,1637,0.385,1643,0.263,1644,0.271,1686,0.254,1687,0.312,1689,0.398,1705,0.364,1709,1.231,1843,0.385,1864,0.348,1942,0.348,1965,0.33,1980,1.41,1981,0.414,1985,1.057,1988,4.05,1989,0.437,2016,2.597,2094,0.622,2109,0.385,2136,0.32,2161,2.245,2172,0.56,2185,4.001,2201,0.676,2204,0.549,2223,0.271,2227,0.261,2307,1.849,2488,0.438,2702,0.577,2703,0.622,3164,0.278,3165,0.308,3236,1.173,3331,0.414,3410,0.414,3411,0.33,3742,2.944,3743,2.279,3879,0.772,3886,1.52,3888,0.414,4003,0.342,4263,0.69,4281,0.437,4282,2.628,4284,0.848,4285,1.236,4286,0.772,4287,1.236,4288,1.236,4289,1.236,4290,0.848,4291,1.236,4292,0.437,4294,0.848,4295,0.437,4298,1.173,4546,2.278,4548,2.074,4552,2.278,4744,0.437,4902,0.631,5447,2.589,5449,4.394,5450,2.589,5451,2.589,5452,2.589,5453,2.589,5844,0.805,5851,0.373,5852,2.886,5853,0.373,5854,0.373,5855,1.236,5856,0.373,5857,0.437,5858,0.437,5859,0.437,5860,0.398,5861,0.471,5862,0.471,5863,0.471,5864,0.471,5865,0.914,5866,0.471,5867,0.914,5868,0.471,5869,0.914,5870,0.471,5871,0.471,5872,0.471,5873,0.471,5874,0.471,5875,1.332,5876,1.727,5877,0.471,5878,0.471,5879,0.914,5880,2.454,5881,2.454,5882,1.727,5883,1.332,5884,0.914,5885,0.914,5886,0.914,5887,0.914,5888,0.414,5889,0.471,5890,1.727,5891,0.471,5892,0.914,5893,0.914,5894,1.727,5895,1.332,5896,1.332,5897,1.332,5898,1.332,5899,0.914,5900,0.471,5901,0.914,5902,0.471,5903,1.727,5904,0.471,5905,1.727,5906,0.914,5907,0.914,5908,0.914,5909,0.437,5910,0.437,5911,1.236,5912,0.471,5913,0.471,5914,0.471,5915,1.236,5916,0.471,5917,0.437,5918,0.437,5919,0.437,5920,0.471,5921,0.471,5922,0.471,5923,0.471,5924,0.471,5925,0.471,5926,0.398,5927,0.437,5928,0.471,5929,0.471,5930,0.471,5931,0.471,5932,0.471,5933,0.471,5934,0.471]],["component/195",[1,0.4]],["title/196-1",[0,20.659,1853,56.923]],["name/196-1",[]],["text/196-1",[]],["component/196-1",[]],["title/196-2",[2,15.814,247,16.953,415,35.123,577,28.663,738,32.903]],["name/196-2",[]],["text/196-2",[]],["component/196-2",[]],["title/196-3",[13,16.835,577,26.276,738,30.164,1460,37.176,1959,43.631,5935,50.807]],["name/196-3",[]],["text/196-3",[]],["component/196-3",[]],["title/196",[]],["name/196",[577,0.674,738,0.773,1573,1.021,2170,0.944]],["text/196",[0,0.382,1,0.563,2,0.727,13,0.467,14,0.96,15,0.653,18,0.508,19,1.152,20,0.546,24,0.475,25,2.365,26,0.69,38,0.399,39,0.718,40,0.61,44,0.993,52,0.649,54,2.509,56,0.793,65,2.455,87,0.724,91,0.795,142,1.211,154,0.53,157,1.561,158,1.918,159,0.767,162,0.662,166,1.395,168,2.055,176,0.381,183,0.906,192,1.439,200,1.693,201,0.77,202,0.807,203,1.42,214,2.319,219,2.814,232,0.738,233,1.19,235,1.817,241,0.807,245,1.196,246,0.792,247,1.84,248,2.036,258,1.863,271,4.52,276,2.47,288,0.781,295,1.313,296,0.713,300,1.135,304,1.176,326,0.729,342,1.017,345,1.177,347,0.866,369,3.514,380,0.653,381,0.774,384,0.788,415,3.495,423,1.379,428,0.76,436,3.544,438,2.336,462,0.824,463,0.985,481,1.81,482,1.234,494,0.639,495,2.525,501,0.866,509,0.918,511,2.935,512,0.833,515,0.666,524,0.953,529,0.729,534,0.807,541,0.729,542,1.971,552,1.828,563,2.501,576,1.698,577,2.852,599,0.807,604,2.175,608,0.931,623,0.925,626,1.695,649,2.058,660,1.22,676,2.983,677,2.149,678,1.496,684,0.888,688,2.355,689,0.702,701,0.732,715,1.152,738,5.811,745,1.022,748,0.792,754,1.313,760,1.119,767,1.091,780,0.871,788,1.735,822,1.105,839,1.022,840,2.983,848,3.009,875,1.002,911,0.615,921,1.795,934,1.054,1039,1.105,1062,1.971,1168,1.234,1212,1.363,1238,0.976,1273,6.055,1305,5.056,1390,1.708,1426,1.513,1460,1.032,1467,2.231,1480,0.757,1486,1.261,1492,1.884,1494,1.234,1564,1.324,1572,6.293,1573,2.731,1602,2.114,1604,1.065,1610,1.105,1676,5.561,1697,0.993,1701,0.968,1709,2.149,1853,1.054,1893,1.054,1942,2.231,1959,5.542,1963,1.548,1971,3.908,1982,1.211,2015,6.454,2032,6.724,2035,5.33,2161,4.631,2170,7.092,2300,1.469,2335,1.41,2358,3.775,2484,1.828,3178,1.41,3179,2.655,3219,1.363,3263,7.893,3360,2.798,3402,6.454,3623,1.548,3742,2.231,3882,1.363,3944,2.081,3972,4.128,3973,2.548,4023,1.548,4548,1.41,4554,1.548,4555,1.548,5935,9.44,5936,1.668,5937,1.668,5938,1.668,5939,1.668,5940,3.014,5941,3.827,5942,1.548,5943,2.798,5944,2.798,5945,7.636,5946,7.636,5947,3.014,5948,2.798,5949,1.668,5950,1.668,5951,1.668,5952,3.014,5953,3.014,5954,2.798,5955,1.668,5956,1.548,5957,1.668,5958,1.668,5959,1.668,5960,6.524,5961,3.014,5962,1.668,5963,1.668,5964,1.668,5965,1.668,5966,1.668,5967,1.668,5968,1.668,5969,1.668,5970,1.668,5971,1.668,5972,1.668,5973,1.668,5974,1.668,5975,1.668,5976,1.668,5977,1.668,5978,1.548,5979,1.668,5980,1.668,5981,1.668,5982,1.668,5983,1.668,5984,1.668,5985,1.668,5986,1.668,5987,1.668,5988,1.668,5989,1.668,5990,1.668,5991,3.014,5992,1.668,5993,1.668,5994,1.668,5995,3.014,5996,1.668]],["component/196",[1,0.4]],["title/197-1",[0,18.366,172,28.405,304,22.856]],["name/197-1",[]],["text/197-1",[]],["component/197-1",[]],["title/197-2",[2,19.324,408,37.321,409,27.445]],["name/197-2",[]],["text/197-2",[]],["component/197-2",[]],["title/197-3",[13,20.198,21,28.433,408,33.593,1024,30.13]],["name/197-3",[]],["text/197-3",[]],["component/197-3",[]],["title/197-4",[324,25.09,408,37.321,591,26.496]],["name/197-4",[]],["text/197-4",[]],["component/197-4",[]],["title/197-5",[68,39.777,593,30.333,1574,48.593]],["name/197-5",[]],["text/197-5",[]],["component/197-5",[]],["title/197-6",[408,33.593,510,40.868,595,31.039,1400,30.575]],["name/197-6",[]],["text/197-6",[]],["component/197-6",[]],["title/197-7",[2227,49.95,2378,62.227]],["name/197-7",[]],["text/197-7",[]],["component/197-7",[]],["title/197-8",[39,38.789,3164,53.192]],["name/197-8",[]],["text/197-8",[]],["component/197-8",[]],["title/197-9",[402,56.923,3165,58.932]],["name/197-9",[]],["text/197-9",[]],["component/197-9",[]],["title/197-10",[245,35.764,3166,73.629]],["name/197-10",[]],["text/197-10",[]],["component/197-10",[]],["title/197",[57,23.675,119,32.303,408,33.593,5997,55.767]],["name/197",[586,1.413]],["text/197",[0,0.513,1,2.125,2,0.54,3,1.371,8,2.287,11,1.345,13,0.627,18,0.683,20,2.051,21,1.544,24,3.046,36,4.841,37,3.315,38,0.535,39,3.848,40,1.432,55,1.895,56,1.03,57,2.935,61,1.073,64,1.461,65,2.333,66,0.964,68,1.945,75,1.571,77,2.14,85,1.483,91,1.068,93,3.333,109,1.053,110,1.048,113,3.298,119,1.755,122,1.089,134,3.229,139,1.224,141,1.415,151,1.063,154,0.711,157,0.848,158,0.735,159,1.8,160,0.786,166,2.118,168,2.055,172,0.794,176,0.512,187,1.084,192,3.637,197,2.376,215,2.156,230,2.141,231,1.063,232,2.771,237,1.619,238,2.357,239,0.971,241,1.084,245,3.105,247,1.35,253,1.025,255,1.112,259,0.953,265,1.693,268,1.346,269,3.799,273,1.447,275,1.163,276,2.552,281,0.968,291,0.987,298,1.279,304,1.118,306,0.892,317,0.999,324,3.846,339,1.346,345,2.446,346,2.273,369,0.828,377,1.3,386,0.886,389,1.156,396,3.916,402,1.415,406,3.914,408,5.461,409,1.342,413,0.901,417,1.208,421,0.84,438,1.286,487,1.68,491,3.457,494,1.501,495,5.748,501,1.163,506,1.464,509,1.233,510,1.269,524,2.237,531,1.095,541,0.979,552,1.358,566,0.901,577,0.979,591,0.741,593,0.848,595,0.964,624,0.875,650,0.84,652,2.112,667,3.577,678,1.112,689,0.943,738,1.124,774,1.447,776,1.657,780,1.17,822,1.483,936,1.503,1009,1.447,1024,0.936,1049,2.399,1060,3.611,1068,1.626,1178,1.503,1238,1.311,1247,1.43,1281,1.334,1282,1.311,1295,1.597,1308,2.705,1350,1.034,1369,3.126,1377,4.635,1400,0.95,1432,1.068,1456,1.311,1461,4.2,1482,1.732,1558,3.864,1568,2.079,1573,7.085,1574,1.358,1575,1.358,1612,2.156,1615,1.371,1616,1.626,1629,1.546,1760,1.732,1821,1.464,1822,1.571,2001,1.692,2007,6.27,2048,1.972,2102,1.777,2170,1.371,2172,1.371,2211,1.83,2227,1.241,2351,4.733,2378,1.546,2419,1.972,2643,1.692,2692,1.692,2879,1.972,2890,1.777,2891,1.777,2903,1.597,3164,1.322,3165,1.464,3166,1.83,3234,4.413,3282,2.079,3308,1.777,3314,1.972,3873,2.079,4209,1.893,5848,1.893,5935,3.311,5954,5.813,5978,2.079,5997,1.732,5998,2.24,5999,2.24,6000,2.24,6001,2.24,6002,3.918,6003,2.24,6004,2.24,6005,2.24,6006,2.24]],["component/197",[1,0.4]],["title/198",[1,13.477,24,20.531,324,22.584,2007,50.576]],["name/198",[24,0.561,324,0.617,2007,1.382]],["text/198",[1,1.744,8,2.734,11,4.282,20,1.694,24,3.885,25,2.42,31,0.754,38,2.481,55,2.503,57,4.227,77,1.767,93,2.046,119,2.317,138,2.57,154,2.113,160,1.087,166,1.048,174,2.541,175,0.815,176,2.132,177,2.27,178,2.641,192,1.081,195,1.745,202,2.884,205,2.226,228,1.263,236,1.4,237,1.281,238,1.166,239,1.344,241,1.5,243,1.45,254,1.304,255,1.539,282,2.909,290,2.909,293,2.185,294,1.218,302,1.515,304,2.217,324,0.971,360,1.531,380,4.577,395,2.61,400,2.62,408,5.181,461,4.627,464,1.355,493,5.081,494,3.795,495,3.167,496,5.304,577,2.261,650,1.163,659,2.443,720,1.309,741,3.519,767,5.649,823,1.979,866,2.052,1032,3.627,1061,1.799,1311,5.281,1357,1.958,1426,1.555,1498,2.21,1513,2.14,1523,3.382,1528,3.456,1565,1.756,1609,2.954,1687,3.425,1766,2.027,2004,2.397,2007,2.174,2160,3.754,2161,3.137,2178,3.571,2182,2.052,2320,2.293,2332,4.8,2390,4.555,2461,5.438,2488,3.723,2618,2.027,4564,2.62,6007,3.099,6008,3.099,6009,3.099,6010,2.876,6011,3.099,6012,3.099,6013,3.099,6014,3.099,6015,3.099,6016,5.172,6017,3.099]],["component/198",[1,0.4]],["title/199-1",[0,18.366,172,28.405,304,22.856]],["name/199-1",[]],["text/199-1",[]],["component/199-1",[]],["title/199-2",[2,19.324,408,37.321,409,27.445]],["name/199-2",[]],["text/199-2",[]],["component/199-2",[]],["title/199-3",[13,20.198,21,28.433,408,33.593,1024,30.13]],["name/199-3",[]],["text/199-3",[]],["component/199-3",[]],["title/199-4",[324,25.09,408,37.321,591,26.496]],["name/199-4",[]],["text/199-4",[]],["component/199-4",[]],["title/199-5",[68,39.777,593,30.333,1574,48.593]],["name/199-5",[]],["text/199-5",[]],["component/199-5",[]],["title/199-6",[408,33.593,510,40.868,595,31.039,1400,30.575]],["name/199-6",[]],["text/199-6",[]],["component/199-6",[]],["title/199-7",[2118,62.227,2227,49.95]],["name/199-7",[]],["text/199-7",[]],["component/199-7",[]],["title/199-8",[2378,62.227,3164,53.192]],["name/199-8",[]],["text/199-8",[]],["component/199-8",[]],["title/199-9",[70,64.263,3165,58.932]],["name/199-9",[]],["text/199-9",[]],["component/199-9",[]],["title/199",[8,12.169,57,18.216,77,18.958,408,25.847,494,21.265,495,33.979,1609,31.689]],["name/199",[586,1.413]],["text/199",[0,0.875,1,1.437,2,0.921,8,2.116,11,2.107,13,1.069,18,1.164,19,1.458,21,3.032,24,2.19,36,2.597,38,0.913,55,1.847,57,3.383,64,1.424,68,3.046,70,2.722,77,3.521,91,1.82,93,1.51,95,2.147,99,2.361,104,2.072,109,2.884,110,1.786,113,2.411,122,1.856,147,1.994,150,1.916,153,2.561,154,1.212,157,2.323,158,1.253,160,2.152,164,1.54,166,2.075,168,1.103,172,1.353,192,1.332,202,1.022,216,2.528,232,1.689,235,1.682,237,2.536,238,3.315,241,1.847,245,1.515,255,3.046,258,1.724,259,1.624,269,2.315,276,2.998,304,1.089,317,1.703,324,1.921,346,2.215,369,3.257,380,3.451,381,1.77,396,2.101,402,2.411,406,4.806,408,5.876,409,1.308,438,1.253,489,1.847,493,5.76,494,3.698,495,6.311,496,4.12,501,1.982,503,3.757,507,2.253,510,2.163,519,4.453,530,2.496,531,1.866,541,1.669,566,3.093,589,2.315,591,1.262,593,1.445,595,1.643,606,1.982,624,1.491,655,2.572,667,2.18,701,2.692,738,1.916,1024,1.595,1049,2.338,1256,2.825,1328,1.971,1369,1.905,1400,1.618,1573,5.093,1574,2.315,1609,5.886,1658,2.411,2007,2.677,2068,2.771,2089,2.952,2118,2.636,2170,2.338,2213,3.227,2214,3.227,2215,3.227,2227,2.116,2320,2.825,2351,5.812,2378,2.636,2483,2.825,2903,2.722,3164,2.253,3165,2.496,4426,3.543,4599,5.691,5818,3.227,5848,3.227,6010,3.543,6018,3.817,6019,3.817,6020,3.817,6021,6.135,6022,3.817,6023,3.817,6024,3.817,6025,3.543,6026,3.543,6027,3.817]],["component/199",[1,0.4]],["title/200-1",[0,18.366,172,28.405,304,22.856]],["name/200-1",[]],["text/200-1",[]],["component/200-1",[]],["title/200-2",[2,19.324,38,19.153,170,34.484]],["name/200-2",[]],["text/200-2",[]],["component/200-2",[]],["title/200-3",[5,38.938,6028,83.64]],["name/200-3",[]],["text/200-3",[]],["component/200-3",[]],["title/200",[38,17.239,291,31.779,302,35.249,1061,41.852]],["name/200",[109,1.284,2320,2.021]],["text/200",[0,1.789,2,1.882,5,3.372,8,1.711,18,2.379,26,3.226,38,2.488,57,3.416,77,2.666,109,3.669,139,4.265,168,2.254,170,3.359,172,2.767,202,2.088,205,3.359,214,3.097,254,4.38,255,3.874,291,4.586,298,4.457,302,3.814,304,2.226,379,3.296,381,3.619,408,4.848,494,2.991,495,4.779,566,4.185,618,3.117,738,5.222,757,5.103,1024,3.26,1061,4.529,1154,4.295,1256,7.701,1445,4.457,1609,4.457,2053,6.035,2170,6.373,2320,5.775,3291,7.243,6028,7.243,6029,7.804,6030,7.804]],["component/200",[1,0.4]],["title/201-1",[0,18.366,172,28.405,304,22.856]],["name/201-1",[]],["text/201-1",[]],["component/201-1",[]],["title/201-2",[2,15.814,21,25.851,413,26.366,1024,27.394,1538,37.445]],["name/201-2",[]],["text/201-2",[]],["component/201-2",[]],["title/201-3",[13,20.198,20,23.617,454,36.19,650,27.059]],["name/201-3",[]],["text/201-3",[]],["component/201-3",[]],["title/201-4",[20,18.171,21,21.877,101,25.28,324,17.376,363,22.092,591,18.35,1328,28.644]],["name/201-4",[]],["text/201-4",[]],["component/201-4",[]],["title/201",[77,17.605,170,22.177,380,20.185,454,25.858,493,33.694,494,19.747,496,27.602,667,29.427]],["name/201",[8,0.432,235,0.868,6031,1.971]],["text/201",[0,0.825,1,1.093,2,0.868,8,1.283,11,1.236,13,1.008,18,1.097,19,1.375,20,2.421,21,2.914,24,2.423,26,1.488,31,0.876,37,1.677,38,0.861,40,2.139,47,1.725,52,1.401,55,1.742,57,1.182,65,2.144,77,2.526,101,2.666,108,1.685,119,1.613,128,1.538,150,6.804,151,2.777,154,1.858,157,2.215,160,1.263,166,1.979,172,1.276,173,3.155,175,0.947,176,0.822,177,4.11,178,1.224,192,1.256,203,3.455,205,1.55,235,6.148,245,1.429,247,2.201,251,3.114,257,6.144,259,2.49,271,2.513,304,1.669,324,2.933,326,1.574,327,1.881,363,2.33,380,2.896,396,3.22,409,1.233,413,1.448,438,2.795,454,4.272,455,1.954,473,2.613,493,4.834,494,2.242,496,3.96,568,2.056,580,3.043,591,1.191,600,2.486,619,4.059,650,2.195,667,2.056,685,3.22,698,4.14,730,2.385,831,5.377,866,6.644,873,1.647,981,1.817,1024,2.445,1036,3.875,1049,2.205,1060,1.827,1153,2.567,1235,2.45,1328,1.858,1366,1.929,1387,2.857,1426,1.807,1538,2.056,1573,2.384,1607,2.416,1622,2.01,2006,4.421,2007,2.525,2010,2.567,2015,3.043,2089,4.525,2186,2.784,2488,4.079,4643,2.486,5816,2.664,6032,3.6,6033,3.6]],["component/201",[1,0.4]],["title/202-1",[0,20.659,362,53.192]],["name/202-1",[]],["text/202-1",[]],["component/202-1",[]],["title/202-2",[2,17.393,8,15.816,138,23.849,170,31.039]],["name/202-2",[]],["text/202-2",[]],["component/202-2",[]],["title/202-3",[5,34.617,260,38.768,507,47.289]],["name/202-3",[]],["text/202-3",[]],["component/202-3",[]],["title/202-4",[9,35.888,97,48.141,507,47.289]],["name/202-4",[]],["text/202-4",[]],["component/202-4",[]],["title/202-5",[8,15.816,13,20.198,138,23.849,324,22.584]],["name/202-5",[]],["text/202-5",[]],["component/202-5",[]],["title/202-6",[8,15.816,154,22.899,304,20.573,1047,34.723]],["name/202-6",[]],["text/202-6",[]],["component/202-6",[]],["title/202-7",[8,15.816,31,17.55,38,17.239,1050,35.07]],["name/202-7",[]],["text/202-7",[]],["component/202-7",[]],["title/202-8",[8,15.816,175,18.967,176,16.474,1052,38.384]],["name/202-8",[]],["text/202-8",[]],["component/202-8",[]],["title/202-9",[8,13.182,175,15.809,176,13.731,177,26.381,178,20.432,1054,35.477]],["name/202-9",[]],["text/202-9",[]],["component/202-9",[]],["title/202-10",[8,15.816,202,19.299,227,31.402,1056,45.066]],["name/202-10",[]],["text/202-10",[]],["component/202-10",[]],["title/202-11",[8,13.182,166,20.329,175,15.809,176,13.731,278,25.578,2136,40.897]],["name/202-11",[]],["text/202-11",[]],["component/202-11",[]],["title/202-12",[173,38.886,174,35.43,464,31.526,4003,52.348]],["name/202-12",[]],["text/202-12",[]],["component/202-12",[]],["title/202-13",[8,15.816,461,42.941,464,31.526,5853,57.221]],["name/202-13",[]],["text/202-13",[]],["component/202-13",[]],["title/202-14",[8,14.38,19,25.05,464,28.663,1528,34.048,5854,52.024]],["name/202-14",[]],["text/202-14",[]],["component/202-14",[]],["title/202-15",[8,14.38,20,21.472,228,26.727,494,25.127,5856,52.024]],["name/202-15",[]],["text/202-15",[]],["component/202-15",[]],["title/202-16",[8,15.816,138,23.849,511,32.439,6034,60.957]],["name/202-16",[]],["text/202-16",[]],["component/202-16",[]],["title/202",[8,17.571,25,37.492,138,26.496]],["name/202",[8,0.599,138,0.903]],["text/202",[0,0.248,1,0.791,2,0.261,5,0.467,6,0.449,8,2.898,9,0.485,11,2.414,13,0.303,16,1.334,18,0.33,19,2.044,20,2.515,21,2.627,24,1.206,25,0.947,26,4.411,31,2.597,37,0.504,38,1.497,40,0.395,47,0.518,57,1.756,64,0.403,77,0.974,87,0.469,89,2.315,91,4.541,93,1.417,97,1.216,108,0.506,115,1.091,133,2.338,138,3.996,139,0.591,147,0.565,151,1.353,154,3.611,157,3.118,160,2.465,161,2.03,166,2.253,168,2.218,170,1.227,171,0.817,172,1.501,173,1.091,174,1.4,175,2.592,176,2.175,177,1.859,178,1.818,179,1.038,180,1.653,182,0.506,183,1.945,187,0.979,195,0.365,200,0.83,201,0.934,202,1.783,203,1.458,205,0.466,227,2.329,228,2.376,230,0.591,231,0.96,237,0.447,238,0.407,241,0.523,246,0.513,247,1.383,252,0.656,254,0.455,255,1.415,257,0.662,260,0.523,271,3.587,276,0.529,278,2.666,280,0.579,282,1.138,283,3.225,290,0.608,291,0.477,294,0.425,295,0.471,303,0.502,304,2.35,306,0.431,314,1.603,317,1.889,321,1.174,324,2.579,333,0.497,337,0.683,344,0.785,362,0.638,373,0.858,380,1.659,381,0.938,387,1.883,390,1.264,408,5.629,409,1.651,412,1.106,413,0.814,415,1.919,420,0.562,421,0.406,438,1.176,442,0.534,445,0.413,455,0.587,456,1.955,459,0.562,461,4.386,462,0.534,464,3.813,472,1.517,479,0.555,494,3.054,502,2.173,505,0.691,507,1.682,510,0.613,511,2.168,515,1.139,523,1.184,532,0.656,552,0.656,560,0.676,566,2.827,567,4.556,577,0.473,619,0.516,622,1.358,624,2.276,650,0.759,655,1.776,679,4.113,682,1.572,701,0.475,703,0.91,717,0.576,720,2.259,739,0.562,748,0.513,832,5.312,839,0.662,873,0.926,896,1.063,897,1.13,911,0.399,921,0.644,951,0.633,981,0.546,1047,0.521,1050,0.526,1052,0.576,1054,0.638,1056,0.676,1147,0.8,1149,0.699,1154,0.595,1161,0.836,1167,1.529,1188,0.953,1203,1.697,1220,0.565,1290,0.595,1304,0.511,1328,0.558,1340,0.953,1350,0.499,1384,1.443,1426,0.543,1437,0.591,1513,0.747,1523,1.864,1528,2.503,1571,1.278,1609,0.618,1622,0.604,1658,1.8,1933,0.726,2132,0.716,2136,0.736,2138,1.004,2172,0.662,2285,0.858,2426,1.004,2488,2.31,2659,0.759,2728,0.953,2738,0.858,2739,0.953,2748,0.817,2749,0.914,2750,0.953,2751,0.953,2752,1.497,2753,1.443,2755,0.8,2756,0.8,3209,0.771,4003,0.785,4188,0.817,4240,0.836,4259,1.004,4260,0.953,4261,0.953,4262,1.004,4286,0.914,4599,0.8,4600,0.953,4643,0.747,5648,0.914,5719,1.004,5721,1.004,5722,1.004,5730,1.782,5731,0.953,5807,1.004,5853,0.858,5854,0.858,5856,0.858,6034,0.914,6035,1.082,6036,1.082,6037,1.082,6038,1.082,6039,1.004,6040,1.082,6041,1.004,6042,1.004,6043,1.082,6044,1.082,6045,1.082,6046,1.082,6047,1.082,6048,1.082,6049,1.082,6050,1.082]],["component/202",[1,0.4]],["title/203-1",[0,20.659,362,53.192]],["name/203-1",[]],["text/203-1",[]],["component/203-1",[]],["title/203-2",[2,19.324,38,19.153,170,34.484]],["name/203-2",[]],["text/203-2",[]],["component/203-2",[]],["title/203-3",[5,34.617,202,21.441,280,42.919]],["name/203-3",[]],["text/203-3",[]],["component/203-3",[]],["title/203-4",[9,32.303,202,19.299,280,38.632,484,50.576]],["name/203-4",[]],["text/203-4",[]],["component/203-4",[]],["title/203",[38,19.153,109,37.666,423,36.662]],["name/203",[109,1.284,861,1.572]],["textcomponent/203",[1,0.4]],["title/204-1",[0,20.659,362,53.192]],["name/204-1",[]],["text/204-1",[]],["component/204-1",[]],["title/204-2",[2,19.324,408,37.321,409,27.445]],["name/204-2",[]],["text/204-2",[]],["component/204-2",[]],["title/204-3",[13,20.198,21,28.433,408,33.593,1024,30.13]],["name/204-3",[]],["text/204-3",[]],["component/204-3",[]],["title/204-4",[324,25.09,408,37.321,591,26.496]],["name/204-4",[]],["text/204-4",[]],["component/204-4",[]],["title/204-5",[68,39.777,593,30.333,1574,48.593]],["name/204-5",[]],["text/204-5",[]],["component/204-5",[]],["title/204-6",[408,33.593,510,40.868,595,31.039,1400,30.575]],["name/204-6",[]],["text/204-6",[]],["component/204-6",[]],["title/204-7",[39,38.789,2227,49.95]],["name/204-7",[]],["text/204-7",[]],["component/204-7",[]],["title/204-8",[3164,53.192,4169,69.69]],["name/204-8",[]],["text/204-8",[]],["component/204-8",[]],["title/204-9",[470,50.686,3165,58.932]],["name/204-9",[]],["text/204-9",[]],["component/204-9",[]],["title/204",[8,15.816,31,17.55,138,23.849,408,33.593]],["name/204",[586,1.413]],["text/204",[0,1.17,2,0.921,8,2.616,11,0.747,13,1.069,18,0.663,19,0.831,20,0.712,21,1.505,24,2.508,25,2.871,26,0.899,31,2.433,39,0.936,40,0.795,41,1.777,45,1.165,47,1.042,55,1.052,56,0.572,57,2.525,61,1.829,63,3.819,64,2.605,66,0.936,68,1.895,74,0.839,87,0.943,89,1.189,93,2.427,100,2.196,109,3.283,115,1.173,122,1.058,126,1.319,138,4.172,148,1.525,150,1.091,151,1.032,154,0.691,157,0.823,158,0.714,162,0.863,166,1.726,168,1.474,169,0.887,170,1.643,171,2.885,172,0.771,173,2.059,174,5.064,177,0.955,178,0.739,179,1.116,191,1.609,192,2.684,200,1.567,202,2.675,203,0.749,227,0.947,228,0.887,235,3.39,237,3.428,240,2.198,241,4.67,245,0.863,247,0.562,252,2.495,257,5.079,276,1.866,280,3.287,281,0.94,283,2.164,288,1.018,290,1.223,291,0.958,296,0.929,304,0.62,306,2.032,310,0.958,311,1.205,312,0.89,317,2.276,321,2.216,324,2.409,329,2.497,345,1.491,362,1.284,369,0.804,377,1.262,380,1.999,390,1.359,395,2.575,406,1.359,408,4.801,409,2.102,412,1.189,420,1.983,421,0.816,436,5.615,438,0.714,445,1.95,464,0.951,470,1.223,484,4.898,505,1.389,507,1.284,510,1.232,512,1.085,524,1.242,549,1.032,577,0.951,591,0.719,593,0.823,595,0.936,604,0.936,619,2.926,643,2.467,650,0.816,659,2.41,717,1.158,741,4.752,873,0.995,894,1.502,895,1.535,921,1.295,938,1.319,947,1.374,1024,0.909,1060,3.113,1160,1.332,1216,1.389,1244,2.164,1281,1.295,1305,1.44,1317,1.422,1328,1.123,1342,3.227,1343,1.777,1393,1.037,1400,0.922,1560,1.502,1574,1.319,1621,1.838,1658,1.374,1926,3.543,2142,5.903,2160,3.704,2161,5.03,2197,1.915,2203,1.579,2204,2.294,2227,1.205,2285,1.726,2288,1.915,2297,2.018,2302,2.018,2304,1.643,2320,1.609,2351,1.643,2361,2.018,2381,2.018,2385,1.838,2391,2.018,2402,2.018,2694,1.915,2703,1.48,2709,3.543,2710,2.018,3164,1.284,3165,1.422,3415,1.838,3815,1.838,4009,1.915,4169,1.682,4270,1.777,4902,1.502,5832,6.502,5848,5.186,6053,2.175,6054,2.175,6055,3.818,6056,2.175,6057,2.175,6058,2.175,6059,2.175,6060,2.175,6061,2.175,6062,2.175,6063,1.777,6064,3.818,6065,3.818,6066,3.818,6067,2.175,6068,1.915,6069,2.175,6070,2.175,6071,1.915]],["component/204",[1,0.4]],["title/205-1",[46,52.301,304,25.71]],["name/205-1",[]],["text/205-1",[]],["component/205-1",[]],["title/205-2",[114,39.146,290,40.56,1821,47.158,3943,63.511]],["name/205-2",[]],["text/205-2",[]],["component/205-2",[]],["title/205-3",[21,20.315,63,25.581,101,23.476,114,27.97,264,32.545,290,28.98,655,21.606,1345,36.742]],["name/205-3",[]],["text/205-3",[]],["component/205-3",[]],["title/205-4",[21,31.589,101,36.503,1024,33.474]],["name/205-4",[]],["text/205-4",[]],["component/205-4",[]],["title/205-5",[32,59.288,290,45.061,324,25.09]],["name/205-5",[]],["text/205-5",[]],["component/205-5",[]],["title/205-6",[290,45.061,294,31.487,2204,48.141]],["name/205-6",[]],["text/205-6",[]],["component/205-6",[]],["title/205-7",[294,28.341,730,29.397,2178,49.794,2204,43.332]],["name/205-7",[]],["text/205-7",[]],["component/205-7",[]],["title/205-8",[38,17.239,166,24.39,290,40.56,380,28.251]],["name/205-8",[]],["text/205-8",[]],["component/205-8",[]],["title/205-9",[20,26.238,119,35.888,324,25.09]],["name/205-9",[]],["text/205-9",[]],["component/205-9",[]],["title/205-10",[38,14.369,175,15.809,176,13.731,274,37.561,290,33.806,380,23.546]],["name/205-10",[]],["text/205-10",[]],["component/205-10",[]],["title/205-11",[6,29.915,175,18.967,176,16.474,295,31.402]],["name/205-11",[]],["text/205-11",[]],["component/205-11",[]],["title/205-12",[175,18.967,176,16.474,290,40.56,295,31.402]],["name/205-12",[]],["text/205-12",[]],["component/205-12",[]],["title/205-13",[175,17.245,176,14.978,195,22.119,290,36.876,296,28.007]],["name/205-13",[]],["text/205-13",[]],["component/205-13",[]],["title/205-14",[24,15.797,38,13.264,57,18.216,175,14.594,176,12.676,247,14.347,290,31.207]],["name/205-14",[]],["text/205-14",[]],["component/205-14",[]],["title/205-15",[175,17.245,176,14.978,290,36.876,294,25.767,701,28.777]],["name/205-15",[]],["text/205-15",[]],["component/205-15",[]],["title/205-16",[290,45.061,487,34.353,819,55.321]],["name/205-16",[]],["text/205-16",[]],["component/205-16",[]],["title/205-17",[31,15.956,38,15.674,175,17.245,176,14.978,290,36.876]],["name/205-17",[]],["text/205-17",[]],["component/205-17",[]],["title/205",[175,18.967,176,16.474,290,40.56,606,37.449]],["name/205",[290,1.536,823,1.745]],["text/205",[0,0.657,1,0.155,2,0.543,6,0.654,11,0.285,13,0.442,14,0.908,15,0.882,16,0.389,20,0.938,24,0.816,26,0.931,28,1.069,35,0.55,37,0.387,38,2.399,40,0.823,45,0.845,47,1.886,52,1.885,55,0.402,56,0.592,57,0.941,61,0.398,74,1.105,75,1.106,77,0.284,85,0.55,89,0.454,90,0.557,91,1.074,92,0.543,93,1.355,94,0.574,100,1.233,104,0.451,108,2.629,109,1.61,114,0.856,119,1.009,128,0.674,133,1.927,147,1.177,151,2.831,154,1.997,157,0.315,158,1.59,159,0.382,166,2.5,168,1.986,169,0.918,172,1.563,175,2.006,176,2.409,178,0.766,179,0.426,192,1.538,193,2.226,195,1.328,202,2.101,204,1.137,229,0.504,232,1.95,235,0.366,237,0.652,238,0.848,243,0.389,245,2.081,246,1.36,247,0.582,251,0.442,252,0.929,253,2.017,254,3.304,259,1.219,267,2.095,271,4.219,274,0.519,275,0.431,280,0.445,281,2.577,290,6.981,291,0.366,293,1.447,294,3.898,295,0.362,296,1.224,299,1.387,303,2.245,304,1.603,306,0.628,311,0.874,324,0.897,337,1.423,339,1.353,342,0.76,343,1.22,347,1.778,360,1.944,369,3.624,374,2.365,376,0.642,380,0.325,381,1.045,389,0.429,395,1.137,397,0.732,413,3.891,415,0.445,421,0.592,423,0.722,428,0.719,432,0.439,445,1.85,451,1.366,456,0.383,457,1.492,460,1.649,461,0.495,462,1.112,463,1.329,472,0.84,473,0.603,481,0.692,487,0.676,506,2.24,515,0.332,520,0.499,521,0.659,524,0.474,531,3.074,533,0.659,537,3.316,541,1.253,545,0.499,553,1.276,563,2.388,565,0.325,576,1.622,582,1.83,591,0.275,593,0.315,606,2.723,618,0.332,624,0.324,627,0.989,628,0.486,643,0.537,655,1.202,661,2.409,662,0.735,676,0.49,682,0.365,701,3.348,703,2.527,730,1.605,735,0.792,738,3.156,744,2.52,745,0.509,748,1.069,753,0.565,754,1.248,764,2.166,776,1.167,777,0.628,780,0.434,788,0.478,794,0.603,802,0.525,811,2.347,819,3.879,823,1.008,840,0.49,848,2.344,866,2.268,875,1.722,889,1.516,911,1.056,947,0.525,1011,1.588,1060,0.422,1128,0.923,1149,1.019,1153,0.592,1161,0.642,1175,1.511,1178,0.557,1181,0.603,1184,2.659,1185,0.592,1198,0.574,1223,0.583,1231,2.53,1240,0.592,1249,1.333,1253,0.603,1267,0.659,1296,2.692,1322,0.55,1328,0.429,1366,1.207,1384,0.592,1393,1.877,1396,0.868,1400,0.352,1417,0.659,1425,0.565,1426,0.792,1432,0.396,1437,0.862,1445,1.286,1460,1.393,1467,1.167,1470,2.12,1480,1.786,1486,1.702,1493,0.732,1538,0.901,1541,0.574,1546,0.732,1563,2.274,1564,1.787,1569,0.642,1571,3.059,1582,3.328,1608,0.537,1611,1.667,1615,1.379,1637,1.84,1648,0.565,1687,1.045,1721,1.389,1766,0.543,1815,1.032,1821,0.543,1835,1.606,1839,1.145,1864,0.615,1880,2.091,1905,0.659,1946,0.574,2170,1.379,2178,1.089,2204,1.722,2358,2.544,2488,3.422,2560,1.045,2590,1.333,2602,1.073,2655,1.904,2691,0.702,2702,0.996,2847,0.771,2906,3.453,2979,1.984,3066,0.642,3070,0.628,3178,1.904,3209,0.592,3227,0.642,3281,1.904,3412,3.328,3625,0.732,3943,0.732,3944,1.089,4029,0.702,4037,1.125,4110,4.055,4209,0.702,4233,0.732,4270,1.289,4585,0.771,4601,2.524,4602,0.732,4641,1.984,4643,1.089,4671,1.84,4679,1.333,4695,0.732,4802,1.289,4983,0.771,5159,1.389,5164,0.771,5328,0.771,6072,2.866,6073,3.937,6074,3.425,6075,0.831,6076,3.425,6077,0.771,6078,0.831,6079,2.866,6080,2.253,6081,1.578,6082,1.578,6083,0.831,6084,0.831,6085,2.866,6086,1.578,6087,1.578,6088,0.831,6089,2.253,6090,2.091,6091,2.253,6092,1.578,6093,2.253,6094,2.253,6095,2.091,6096,2.253,6097,0.831,6098,0.831,6099,0.831,6100,0.831,6101,0.831,6102,1.578,6103,1.578,6104,0.831,6105,0.831,6106,0.831,6107,0.831,6108,0.831,6109,0.831,6110,0.831,6111,0.831,6112,0.831,6113,2.866,6114,0.831,6115,0.831,6116,0.831,6117,0.831,6118,0.831,6119,0.831,6120,0.831,6121,0.831,6122,0.831,6123,0.831,6124,0.831,6125,0.831,6126,0.831,6127,0.831,6128,0.831]],["component/205",[1,0.4]],["title/206-1",[0,18.366,172,28.405,304,22.856]],["name/206-1",[]],["text/206-1",[]],["component/206-1",[]],["title/206-2",[2,19.324,38,19.153,170,34.484]],["name/206-2",[]],["text/206-2",[]],["component/206-2",[]],["title/206-3",[5,31.159,694,49.068,861,41.513,6129,66.93]],["name/206-3",[]],["text/206-3",[]],["component/206-3",[]],["title/206-4",[9,32.303,283,25.43,694,49.068,861,41.513]],["name/206-4",[]],["text/206-4",[]],["component/206-4",[]],["title/206-5",[91,34.387,694,49.068,861,41.513,1686,38.886]],["name/206-5",[]],["text/206-5",[]],["component/206-5",[]],["title/206",[38,19.153,109,37.666,423,36.662]],["name/206",[109,1.284,861,1.572]],["text/206",[0,1.417,2,1.491,5,1.665,8,1.942,9,1.726,13,1.079,18,1.175,20,1.262,24,1.76,25,4.843,38,3.216,55,2.991,57,1.265,74,1.486,91,1.838,93,2.445,109,4.164,119,3.967,166,1.303,168,1.113,170,5.019,172,4.413,183,6.33,202,2.071,204,1.945,205,4.173,214,3.072,219,4.669,228,1.571,252,1.25,253,3.542,267,3.873,283,2.73,291,4.273,298,2.201,304,2.527,358,2.52,369,2.286,408,2.88,410,2.152,423,4.976,431,3.149,529,3.384,541,3.384,563,2.337,567,2.384,591,1.274,593,1.459,604,1.659,608,2.152,618,2.469,685,4.26,694,7.042,703,2.781,738,3.102,861,5.099,895,2.486,911,3.575,1032,4.336,1400,3.282,1445,5.911,1456,2.255,1686,2.078,1821,5.062,1917,2.461,2145,3.577,2170,2.36,2176,2.622,2571,5.345,3290,6.324,4119,2.98,4178,2.98,5997,4.78,6129,5.737,6130,3.577]],["component/206",[1,0.4]],["title/207-1",[0,16.531,119,32.303,445,27.553,505,46.058]],["name/207-1",[]],["text/207-1",[]],["component/207-1",[]],["title/207-2",[2,21.736,31,21.931]],["name/207-2",[]],["text/207-2",[]],["component/207-2",[]],["title/207-3",[5,25.97,38,14.369,170,25.871,283,21.195,730,24.502,1271,37.965]],["name/207-3",[]],["text/207-3",[]],["component/207-3",[]],["title/207-4",[13,22.44,93,31.691,283,28.252]],["name/207-4",[]],["text/207-4",[]],["component/207-4",[]],["title/207-5",[157,24.823,170,28.22,252,21.266,283,23.12,1047,31.569]],["name/207-5",[]],["text/207-5",[]],["component/207-5",[]],["title/207-6",[283,28.252,812,40.884,1050,38.963]],["name/207-6",[]],["text/207-6",[]],["component/207-6",[]],["title/207",[283,31.779,420,46.799]],["name/207",[283,0.963,419,1.427]],["text/207",[0,1.085,2,1.142,5,2.045,8,1.038,13,1.326,18,2.214,20,1.55,26,1.957,31,1.152,38,2.699,46,2.747,63,3.607,66,3.127,82,2.147,84,3.646,87,2.053,92,3.095,93,1.872,107,2.007,110,2.215,119,2.12,157,1.792,162,2.883,166,1.601,168,1.367,170,3.805,188,2.587,192,1.651,204,2.388,205,2.037,214,4.48,252,2.867,254,3.057,255,3.607,258,3.281,271,2.469,283,4.985,290,2.662,291,4.713,302,2.314,306,2.892,345,1.848,360,2.338,369,1.75,379,3.069,407,5.457,423,2.166,428,2.157,445,3.788,450,2.503,451,2.257,460,1.771,474,2.205,484,3.32,505,6.333,545,4.365,554,3.058,565,2.846,662,2.205,694,6.747,706,2.844,730,4.042,812,5.06,861,5.708,873,2.166,911,1.745,1047,2.279,1050,2.302,1160,2.899,1271,2.99,1432,2.257,1697,2.818,1933,3.176,2050,3.577,2604,3.756,3357,4.393,4131,4.001,4263,3.577,4305,5.764,6131,4.734]],["component/207",[1,0.4]],["title/208-1",[0,18.366,172,28.405,304,22.856]],["name/208-1",[]],["text/208-1",[]],["component/208-1",[]],["title/208-2",[2,19.324,408,37.321,409,27.445]],["name/208-2",[]],["text/208-2",[]],["component/208-2",[]],["title/208-3",[13,20.198,21,28.433,408,33.593,1024,30.13]],["name/208-3",[]],["text/208-3",[]],["component/208-3",[]],["title/208-4",[324,25.09,408,37.321,591,26.496]],["name/208-4",[]],["text/208-4",[]],["component/208-4",[]],["title/208-5",[68,39.777,593,30.333,1574,48.593]],["name/208-5",[]],["text/208-5",[]],["component/208-5",[]],["title/208-6",[408,33.593,510,40.868,595,31.039,1400,30.575]],["name/208-6",[]],["text/208-6",[]],["component/208-6",[]],["title/208-7",[2118,62.227,2227,49.95]],["name/208-7",[]],["text/208-7",[]],["component/208-7",[]],["title/208-8",[2378,62.227,3164,53.192]],["name/208-8",[]],["text/208-8",[]],["component/208-8",[]],["title/208-9",[1571,56.923,3165,58.932]],["name/208-9",[]],["text/208-9",[]],["component/208-9",[]],["title/208-10",[39,38.789,3166,73.629]],["name/208-10",[]],["text/208-10",[]],["component/208-10",[]],["title/208",[8,15.816,38,17.239,57,23.675,408,33.593]],["name/208",[586,1.413]],["text/208",[0,0.658,1,0.536,2,0.692,8,2.827,11,1.665,13,0.804,18,0.875,19,1.097,20,0.94,21,2.482,24,2.555,25,2.269,31,0.698,38,3.081,39,1.235,40,1.049,55,3.046,56,0.755,57,3.136,64,1.071,68,2.407,77,0.981,91,1.369,93,2.927,99,1.775,100,2.71,104,1.558,109,3.888,113,1.813,119,1.286,132,1.926,138,0.949,147,1.499,151,1.362,157,1.087,158,0.942,160,1.701,166,1.64,168,1.401,172,1.018,175,0.755,176,1.108,192,1.001,202,0.768,204,1.448,205,2.087,227,1.25,228,1.17,232,1.27,237,1.186,241,1.389,245,1.924,252,2.4,254,2.041,255,4.455,259,1.221,267,1.937,269,1.741,283,1.71,290,1.614,292,2.083,294,1.906,302,1.403,304,1.383,311,1.591,317,2.163,324,1.518,363,1.143,369,2.736,370,2.013,380,3.515,386,1.135,396,1.58,408,5.834,409,0.983,436,5.794,438,0.942,470,2.727,486,3.063,501,2.518,503,2.969,507,1.694,510,1.626,529,2.12,533,3.847,541,1.255,542,3.171,545,1.725,546,1.28,566,1.95,568,1.639,591,0.949,593,1.087,595,1.235,604,2.087,624,1.121,655,2.033,659,3.495,662,2.259,671,1.217,694,4.284,701,2.128,703,1.291,730,3.016,744,1.15,748,1.362,825,2.219,861,4.26,866,4.169,873,1.313,895,1.154,1024,2.026,1049,1.758,1119,1.528,1281,1.709,1295,2.047,1317,1.877,1322,1.901,1328,1.482,1342,5.322,1343,2.345,1349,1.591,1400,1.217,1420,2.083,1492,1.794,1560,1.982,1571,3.063,1574,1.741,1612,1.58,1658,3.063,1687,3.211,1697,3.749,1766,4.117,1917,1.833,1979,2.124,2068,2.083,2118,1.982,2161,4.488,2213,2.426,2214,2.426,2215,2.426,2227,1.591,2378,1.982,2483,2.124,2903,2.047,3164,1.694,3165,1.877,3166,2.345,4178,2.219,5832,6.255,5997,2.219,6025,2.664,6026,2.664,6132,2.87,6133,4.849,6134,2.87,6135,2.87,6136,2.87]],["component/208",[1,0.4]],["title/209-1",[0,18.366,172,28.405,304,22.856]],["name/209-1",[]],["text/209-1",[]],["component/209-1",[]],["title/209-2",[2,19.324,254,33.718,1565,45.403]],["name/209-2",[]],["text/209-2",[]],["component/209-2",[]],["title/209-3",[13,22.44,38,19.153,170,34.484]],["name/209-3",[]],["text/209-3",[]],["component/209-3",[]],["title/209-4",[1047,43.392,4101,73.629]],["name/209-4",[]],["text/209-4",[]],["component/209-4",[]],["title/209-5",[1050,43.827,4102,76.177]],["name/209-5",[]],["text/209-5",[]],["component/209-5",[]],["title/209-6",[1052,47.967,4103,76.177]],["name/209-6",[]],["text/209-6",[]],["component/209-6",[]],["title/209-7",[1054,53.192,6137,83.64]],["name/209-7",[]],["text/209-7",[]],["component/209-7",[]],["title/209-8",[1056,56.318,6138,83.64]],["name/209-8",[]],["text/209-8",[]],["component/209-8",[]],["title/209-9",[2136,61.32,6139,83.64]],["name/209-9",[]],["text/209-9",[]],["component/209-9",[]],["title/209",[8,17.571,93,31.691,254,33.718]],["name/209",[8,0.599,1271,1.725]],["text/209",[0,0.576,2,0.606,6,1.041,8,2.167,11,0.862,13,0.703,18,0.765,20,1.866,21,0.99,24,1.623,26,1.038,30,3.697,31,1.387,38,2.601,39,1.081,54,1.246,56,2.353,61,2.731,77,0.858,82,1.139,87,1.089,93,2.254,100,1.081,104,1.363,138,1.885,157,0.951,166,0.849,168,1.25,170,1.081,172,3.171,175,1.499,176,1.302,187,2.093,202,1.813,205,1.081,227,2.482,238,0.945,247,0.649,252,1.849,254,1.821,255,2.148,258,1.134,264,1.586,265,1.085,267,3.573,277,3.053,278,1.068,281,4.433,299,1.751,304,0.716,335,1.663,347,1.304,360,4.667,369,2.505,380,1.695,410,1.402,411,5.766,413,1.01,415,3.053,428,2.597,436,1.523,438,4.065,450,4.417,451,4.713,460,0.939,487,2.444,501,2.96,507,1.482,515,1.003,542,1.642,568,1.434,573,1.685,601,2.705,608,1.402,624,0.98,662,1.17,671,1.834,676,2.553,679,2.415,738,1.26,739,6.286,769,2.051,788,2.49,911,3.298,917,1.858,1047,1.209,1050,1.221,1052,1.336,1054,1.482,1056,1.569,1236,2.829,1282,1.469,1328,1.296,1349,3.159,1400,2.416,1456,2.531,1492,4.234,1565,3.23,1609,4.363,1697,1.495,1730,6.062,1862,5.163,1893,2.732,1979,4.217,2043,5.478,2106,4.678,2136,1.708,2170,1.537,2571,3.935,2997,2.122,3227,1.941,3702,2.211,4039,3.81,4040,3.656,4041,3.656,4042,3.656,4101,2.051,4102,2.122,4103,2.122,4119,1.941,4146,3.81,4147,7.09,4151,2.33,4152,2.33,4153,2.33,4154,4.015,4161,2.33,4162,2.33,4163,2.211,6137,2.33,6138,2.33,6139,2.33,6140,2.511,6141,2.511,6142,2.511,6143,2.511,6144,2.511,6145,2.511,6146,2.511,6147,2.511,6148,2.511,6149,2.511,6150,2.511,6151,7.64,6152,2.511,6153,2.511,6154,2.511,6155,4.326,6156,5.7,6157,2.511,6158,4.326,6159,2.511,6160,4.326]],["component/209",[1,0.4]],["title/210-1",[0,20.659,586,28.616]],["name/210-1",[]],["text/210-1",[]],["component/210-1",[]],["title/210-2",[2,13.383,31,13.503,247,14.347,294,21.806,297,33.979,379,23.438,1164,44.027]],["name/210-2",[]],["text/210-2",[]],["component/210-2",[]],["title/210-3",[13,15.541,31,13.503,247,14.347,294,21.806,297,33.979,379,23.438,6161,40.277]],["name/210-3",[]],["text/210-3",[]],["component/210-3",[]],["title/210",[]],["name/210",[294,0.774,379,0.832,2488,0.944]],["text/210",[0,0.565,2,1.027,13,0.69,18,1.298,30,1.192,31,2.803,47,4.878,52,1.657,56,1.76,61,2.04,74,1.642,76,1.592,82,1.118,108,1.153,110,1.153,133,2.457,158,1.397,160,3.108,162,1.689,168,2.182,169,1.005,175,2.843,176,2.631,179,4.242,187,2.06,192,0.86,203,0.849,204,2.148,205,1.061,214,1.689,247,2.422,252,1.381,259,1.049,271,3.184,294,5.21,297,7.278,299,1.723,304,1.214,316,2.311,327,2.224,342,2.257,345,2.194,363,0.981,377,1.43,379,5.819,410,1.376,438,3.342,455,4.81,456,2.594,474,1.148,479,3.433,488,2.198,500,1.652,501,2.211,514,1.574,549,4.652,550,1.906,565,0.965,566,0.991,568,1.407,573,2.856,576,3.111,582,2.719,586,0.783,588,1.347,592,4.95,599,2.06,604,1.061,639,1.495,660,1.723,672,2.45,689,1.792,705,1.632,727,2.495,729,3.404,734,2.295,735,2.136,736,2.06,779,2.185,780,1.287,895,3.563,911,2.785,1121,1.702,1151,1.702,1164,7.432,1275,3.549,1366,3.01,1405,3.209,1500,2.172,1521,2.607,1526,2.582,1541,1.702,1612,1.356,1820,1.789,2556,1.397,3096,1.906,3811,2.083,4029,2.083,4903,2.75,5005,3.378,6161,6.799,6162,6.171,6163,2.465,6164,2.465,6165,2.465,6166,2.465,6167,2.465]],["component/210",[1,0.4]],["title/211-1",[0,20.659,586,28.616]],["name/211-1",[]],["text/211-1",[]],["component/211-1",[]],["title/211-2",[2,15.814,31,15.956,294,25.767,748,31.115,811,27.394]],["name/211-2",[]],["text/211-2",[]],["component/211-2",[]],["title/211-3",[13,16.835,15,23.546,31,14.627,294,23.622,811,25.113,2556,34.062]],["name/211-3",[]],["text/211-3",[]],["component/211-3",[]],["title/211-4",[31,13.503,294,21.806,297,33.979,591,18.35,811,23.183,2508,37.754,4017,38.914]],["name/211-4",[]],["text/211-4",[]],["component/211-4",[]],["title/211",[294,35.418,811,37.653]],["name/211",[294,1.074,811,1.141]],["text/211",[0,0.72,2,0.757,13,0.879,15,3.68,18,0.957,20,1.028,24,0.894,31,2.91,37,1.463,38,0.751,40,1.148,82,2.372,110,1.469,122,1.527,133,2.937,141,1.983,154,1.66,157,1.189,158,2.572,168,1.51,172,1.113,175,2.849,176,2.732,179,1.611,187,1.519,195,2.935,202,0.84,205,2.25,229,1.904,246,1.49,247,1.737,258,2.362,271,2.958,286,1.923,293,2.208,294,5.265,295,2.925,297,5.328,299,3.522,304,0.896,314,1.766,333,1.443,342,1.764,345,1.226,363,1.25,379,1.326,438,3.084,445,2.567,451,1.497,459,1.63,466,2.638,487,2.242,541,2.286,549,4.727,576,4.297,586,0.997,591,1.038,599,1.519,608,1.753,618,1.254,624,1.226,627,2.295,639,1.904,660,1.271,672,1.807,689,1.321,703,1.412,717,2.783,726,1.962,727,1.95,729,1.293,736,1.519,748,4.727,764,2.569,778,2.005,811,5.803,873,1.437,895,3.499,897,3.75,911,1.158,1165,2.053,1231,1.64,1250,1.942,1265,5.195,1317,2.053,1422,1.837,1426,1.576,1480,2.372,1800,1.793,1893,1.983,2508,6.392,2556,4.439,4017,7.317,4573,2.654,4583,2.914,5193,5.33,6168,6.718,6169,3.14,6170,3.14]],["component/211",[1,0.4]],["title/212-1",[0,20.659,586,28.616]],["name/212-1",[]],["text/212-1",[]],["component/212-1",[]],["title/212-2",[2,14.497,31,14.627,247,15.542,294,23.622,703,27.037,748,28.524]],["name/212-2",[]],["text/212-2",[]],["component/212-2",[]],["title/212-3",[13,16.835,15,23.546,31,14.627,247,15.542,294,23.622,703,27.037]],["name/212-3",[]],["text/212-3",[]],["component/212-3",[]],["title/212-4",[31,14.627,247,15.542,294,23.622,297,36.808,591,19.877,1164,47.692]],["name/212-4",[]],["text/212-4",[]],["component/212-4",[]],["title/212-5",[31,13.503,247,14.347,294,21.806,297,33.979,593,21.007,703,24.959,6161,40.277]],["name/212-5",[]],["text/212-5",[]],["component/212-5",[]],["title/212",[294,35.418,703,40.538]],["name/212",[294,1.074,703,1.229]],["text/212",[0,0.424,1,0.184,2,1.512,13,0.275,15,1.955,18,0.563,19,0.706,26,0.406,31,2.381,37,0.457,38,2.339,44,0.585,52,0.719,64,0.689,87,1.433,107,0.783,119,1.757,133,1.445,141,2.087,151,0.877,154,1.991,158,1.638,160,1.376,168,2.528,175,2.573,176,2.48,179,1.696,182,2.097,214,1.557,243,1.546,247,2.921,252,1.072,258,5.028,271,2.828,283,1.165,286,2.023,294,4.809,295,0.428,297,4.951,299,4.269,304,1.119,342,2.115,363,2.172,379,1.396,409,1.132,438,3.497,446,1.411,451,1.576,456,1.811,459,4.436,464,0.808,466,0.932,474,0.861,487,1.682,541,0.808,546,1.75,549,5.807,565,2.963,566,0.395,576,4.653,586,0.312,588,1.806,590,1.794,591,0.325,593,0.372,599,0.475,606,0.959,608,2.19,618,1.994,624,1.75,649,0.49,650,2.613,655,0.412,657,1.985,682,0.431,689,1.886,703,6.105,727,3.534,729,2.869,736,2.169,739,2.832,744,2.186,748,3.452,751,1.737,764,3.422,780,1.726,807,0.89,838,1.055,873,0.449,889,0.977,895,3.346,897,4.995,911,2.568,1119,0.983,1164,4.665,1180,3.755,1231,0.513,1250,1.143,1290,1.017,1349,0.544,1400,1.9,1405,1.055,1422,3.192,1438,1.794,1445,1.055,1480,1.78,1484,1.934,1500,1.686,1512,2.772,1622,1.845,1800,1.055,1827,1.95,2067,2.445,2180,2.451,2181,4.062,2488,0.47,2497,0.802,2499,0.779,2526,0.865,2556,3.091,4249,0.727,4250,0.727,4251,0.727,4599,0.727,4600,0.865,5005,0.779,5191,3.067,5193,5.526,5194,0.865,5956,3.067,6161,2.399,6162,5.944,6171,2.429,6172,1.627,6173,1.848,6174,1.848,6175,1.848,6176,0.982,6177,0.982,6178,0.982,6179,0.982,6180,0.982,6181,0.982,6182,0.982,6183,0.911,6184,0.982]],["component/212",[1,0.4]],["title/213-1",[0,20.659,586,28.616]],["name/213-1",[]],["text/213-1",[]],["component/213-1",[]],["title/213-2",[2,17.393,247,18.647,911,26.588,2489,51.424]],["name/213-2",[]],["text/213-2",[]],["component/213-2",[]],["title/213-3",[13,15.541,31,13.503,281,23.974,294,21.806,297,33.979,2508,37.754,4017,38.914]],["name/213-3",[]],["text/213-3",[]],["component/213-3",[]],["title/213-4",[31,14.627,281,25.97,294,23.622,297,36.808,591,19.877,6161,43.631]],["name/213-4",[]],["text/213-4",[]],["component/213-4",[]],["title/213-5",[168,16.028,175,14.594,176,12.676,294,21.806,342,18.719,593,21.007,2489,39.566]],["name/213-5",[]],["text/213-5",[]],["component/213-5",[]],["title/213",[294,35.418,2489,64.263]],["name/213",[294,1.074,2489,1.948]],["text/213",[0,0.663,1,0.298,2,1.364,6,1.647,13,0.81,15,1.133,18,0.486,24,1.969,26,2.017,31,2.266,36,1.084,47,3.033,55,0.771,56,1.283,61,1.385,74,1.115,78,1.136,82,1.801,87,0.691,115,1.559,133,3.451,139,0.871,141,1.006,154,2.637,157,0.603,158,2.592,159,2.6,162,1.936,164,0.643,168,1.409,169,0.649,174,0.783,175,1.955,176,1.982,178,0.542,179,2.504,182,0.745,187,0.771,188,1.58,192,0.556,193,1.329,195,1.908,202,1.062,214,1.147,229,0.966,240,0.917,243,0.745,247,2.041,252,0.938,260,0.771,265,0.688,271,2.527,281,4.936,286,3.464,288,1.857,293,3.335,294,5.073,295,1.259,297,6.026,299,0.645,302,1.413,308,0.877,314,0.896,316,1.569,342,3.039,379,2.922,438,2.078,448,1.302,455,0.865,459,0.827,467,2.232,478,2.444,479,2.504,500,1.893,507,0.94,509,0.877,512,1.443,541,1.264,549,3.528,553,1.638,565,1.133,566,2.782,576,2.607,582,3.613,586,0.506,591,0.527,593,1.095,601,0.756,608,3.158,624,0.622,627,1.742,639,2.407,649,1.443,655,0.668,660,1.171,663,3.31,664,0.996,689,1.67,705,4.581,714,1.156,726,3.955,727,2.773,729,2.607,734,1.559,735,1.451,738,0.799,748,1.884,779,1.484,781,3.711,795,1.156,805,0.827,821,2.663,873,2.233,895,1.163,911,3.321,1038,3.049,1078,0.966,1150,3.116,1212,6.074,1231,2.955,1266,1.042,1275,5.689,1328,1.492,1366,2.614,1398,1.706,1405,1.651,1409,1.706,1484,1.692,1500,1.475,1526,1.754,1528,0.827,1534,1.264,1549,1.069,1585,1.403,1591,1.347,1595,1.347,1604,1.017,1609,0.91,1674,2.099,1705,1.232,1713,3.871,1719,1.1,1747,2.236,1835,1.136,2071,1.204,2211,1.302,2489,9.166,2505,4.124,2508,5.371,2509,5.25,2510,5.25,2511,1.479,2659,1.117,2702,1.006,2812,1.006,3070,1.204,3089,1.479,3095,2.444,3096,1.232,3361,1.347,3882,3.243,4017,4.851,4245,1.479,4902,1.1,4903,1.029,5005,2.294,5720,1.479,5926,1.347,6161,5.397,6162,1.302,6185,2.891,6186,2.683,6187,1.593,6188,1.593,6189,1.593,6190,1.593,6191,1.593,6192,1.593,6193,1.593,6194,1.593,6195,1.593,6196,1.593,6197,3.969,6198,3.969,6199,1.593,6200,1.479]],["component/213",[1,0.4]],["title/214-1",[0,20.659,586,28.616]],["name/214-1",[]],["text/214-1",[]],["component/214-1",[]],["title/214-2",[2,14.497,31,14.627,100,25.871,294,23.622,496,32.199,1820,43.631]],["name/214-2",[]],["text/214-2",[]],["component/214-2",[]],["title/214",[100,31.039,294,28.341,496,38.632,1820,52.348]],["name/214",[100,0.848,294,0.774,496,1.056]],["text/214",[0,0.947,1,0.772,2,0.997,7,2.03,15,1.619,18,1.259,28,1.961,31,2.242,47,4.414,56,1.719,66,1.778,74,1.593,93,2.585,100,5.259,119,1.851,121,2.61,132,2.773,162,2.593,168,1.888,175,2.132,176,2.293,179,3.354,195,3.6,202,1.106,238,1.555,243,1.933,245,1.64,247,1.69,252,1.34,258,3.661,281,1.785,286,2.53,294,5.388,296,1.765,297,4.002,308,2.274,335,2.736,342,2.204,386,1.634,414,2.702,438,1.356,456,3.017,479,2.121,496,7.127,500,2.536,537,2.439,549,4.372,565,3.175,566,1.662,582,2.639,586,1.312,601,1.961,627,1.813,639,2.506,655,1.733,659,1.952,660,1.673,663,2.418,685,2.274,700,3.703,703,2.939,727,3.437,729,2.692,734,2.228,735,2.073,779,2.121,799,2.639,807,1.989,895,1.662,911,2.988,921,2.46,1231,2.159,1238,2.418,1241,2.736,1275,5.12,1366,2.213,1500,2.108,1526,2.506,1737,2.946,1820,8.113,1998,2.898,2425,3.835,2489,4.66,3092,3.122,3399,5.053,4888,3.278,4895,3.376,4903,2.67,5224,3.278,6161,4.743,6201,4.132,6202,4.132,6203,4.132,6204,4.132,6205,4.132]],["component/214",[1,0.4]],["title/215-1",[586,32.698]],["name/215-1",[]],["text/215-1",[]],["component/215-1",[]],["title/215",[496,55.163]],["name/215",[586,1.413]],["text/215",[100,4.971,294,4.539,496,6.187,1820,8.384]],["component/215",[1,0.4]],["title/216-1",[0,20.659,586,28.616]],["name/216-1",[]],["text/216-1",[]],["component/216-1",[]],["title/216-2",[2,13.383,464,24.257,549,26.332,911,20.457,1231,28.987,1304,26.208,1426,27.845]],["name/216-2",[]],["text/216-2",[]],["component/216-2",[]],["title/216-3",[13,14.432,31,12.539,168,14.884,175,13.552,176,11.771,1231,26.918,1304,24.337,1426,25.858]],["name/216-3",[]],["text/216-3",[]],["component/216-3",[]],["title/216-4",[31,17.55,176,16.474,820,35.615,1047,34.723]],["name/216-4",[]],["text/216-4",[]],["component/216-4",[]],["title/216-5",[56,17.245,176,14.978,1050,31.885,1151,45.272,1827,38.699]],["name/216-5",[]],["text/216-5",[]],["component/216-5",[]],["title/216-6",[15,23.546,31,14.627,176,13.731,294,23.622,1052,31.992,1151,41.503]],["name/216-6",[]],["text/216-6",[]],["component/216-6",[]],["title/216-7",[31,12.539,38,12.318,81,39.845,195,17.383,202,13.789,462,25.447,895,20.721,1054,30.413]],["name/216-7",[]],["text/216-7",[]],["component/216-7",[]],["title/216-8",[31,13.503,494,21.265,1056,34.674,1231,28.987,1426,41.089,2556,31.444]],["name/216-8",[]],["text/216-8",[]],["component/216-8",[]],["title/216-9",[56,17.245,897,36.604,1827,38.699,2136,44.612,2556,37.156]],["name/216-9",[]],["text/216-9",[]],["component/216-9",[]],["title/216-10",[15,23.546,31,14.627,294,23.622,897,33.556,2556,34.062,4003,43.631]],["name/216-10",[]],["text/216-10",[]],["component/216-10",[]],["title/216-11",[31,13.503,195,18.719,202,14.849,414,36.284,462,27.403,483,26.984,5853,44.027]],["name/216-11",[]],["text/216-11",[]],["component/216-11",[]],["title/216-12",[31,13.503,38,13.264,182,25.965,195,18.719,590,30.12,700,31.444,5854,44.027]],["name/216-12",[]],["text/216-12",[]],["component/216-12",[]],["title/216-13",[31,14.627,294,23.622,748,28.524,897,33.556,2556,34.062,5856,47.692]],["name/216-13",[]],["text/216-13",[]],["component/216-13",[]],["title/216-14",[31,14.627,195,20.277,202,16.085,462,29.684,6034,50.807,6206,55.784]],["name/216-14",[]],["text/216-14",[]],["component/216-14",[]],["title/216-15",[31,14.627,159,27.625,176,13.731,294,23.622,748,28.524,6207,55.784]],["name/216-15",[]],["text/216-15",[]],["component/216-15",[]],["title/216-16",[413,20.721,591,17.04,652,27.784,1081,34.575,1231,26.918,1426,38.884,2556,29.2]],["name/216-16",[]],["text/216-16",[]],["component/216-16",[]],["title/216-17",[175,15.809,176,13.731,202,16.085,203,20.697,593,22.756,1350,27.748]],["name/216-17",[]],["text/216-17",[]],["component/216-17",[]],["title/216",[1231,47.081,1426,45.226]],["name/216",[1231,1.427,1426,1.371]],["text/216",[0,0.542,1,0.442,2,0.864,6,0.982,8,0.519,13,0.465,15,2.886,18,0.721,24,0.855,26,0.978,31,2.767,37,1.102,38,1.821,40,0.865,47,0.796,49,0.567,52,0.342,56,2.495,61,0.42,64,0.883,74,0.338,81,2.77,82,0.398,93,0.347,100,0.715,108,1.107,110,0.411,133,1.797,147,0.868,151,0.416,154,1.73,158,2.578,159,2.678,162,1.999,164,0.955,168,1.785,175,2.124,176,2.825,178,2.949,179,3.171,181,1.529,182,3.045,183,0.476,187,2.438,188,1.293,193,0.403,195,3.454,200,0.36,201,0.405,202,2.612,203,0.815,204,0.443,214,2.452,245,0.659,247,0.926,253,0.76,258,0.75,259,0.373,264,0.554,271,3.71,278,2.629,281,0.379,283,1.62,286,0.537,288,0.411,293,1.736,294,3.257,295,3.091,299,1.45,300,0.597,303,1.906,304,0.25,327,0.458,342,1.699,345,0.649,363,1.426,374,0.606,377,0.509,379,0.371,409,0.811,413,1.847,414,3.294,417,0.896,421,0.329,438,3.397,451,2.946,461,0.989,462,5.161,464,2.381,466,0.838,467,1.331,479,3.78,483,3.704,487,0.712,494,1.151,500,1.165,511,1.064,515,0.945,541,1.034,549,3.233,565,1.176,566,0.668,576,4.346,582,0.56,586,0.279,590,1.63,591,0.29,592,1.229,593,0.332,599,0.804,604,0.715,606,0.863,608,0.49,624,1.794,652,0.896,655,0.697,660,1.86,669,0.398,678,0.825,682,1.804,689,1.264,700,2.855,702,0.518,727,1.713,729,2.545,730,0.358,734,1.931,739,0.863,744,1.436,748,2.585,751,1.244,764,3.036,779,1.541,794,0.637,820,1.169,839,1.017,895,4.118,897,5.128,911,2.148,1047,0.422,1050,0.427,1052,0.467,1054,0.518,1056,0.548,1081,1.588,1108,0.637,1113,0.554,1119,0.884,1151,4.901,1160,0.537,1177,0.615,1209,0.473,1222,1.206,1231,4.799,1253,0.637,1275,0.554,1290,0.914,1304,1.692,1328,0.453,1344,0.663,1345,0.626,1350,0.767,1366,1.268,1426,5.74,1438,3.163,1480,0.754,1500,1.533,1524,1.255,1526,1.821,1534,0.696,1697,0.522,1705,0.678,1827,4.021,1893,0.554,1935,0.615,2106,1.449,2136,0.597,2176,0.597,2180,0.548,2181,0.928,2281,0.773,2488,1.134,2556,6.086,2560,0.581,2596,0.678,2602,1.61,2618,1.086,2890,0.696,2891,0.696,3096,0.678,3295,0.742,3296,1.357,3717,0.717,3944,1.147,4003,0.637,4248,0.696,4249,0.649,4250,0.649,4251,0.649,4745,0.663,4889,1.751,4891,1.285,4902,1.147,4903,1.94,5224,0.696,5853,0.696,5854,0.696,5856,0.696,6034,0.742,6206,3.324,6207,0.814,6208,0.877,6209,0.649,6210,0.814,6211,0.877,6212,0.814,6213,0.877,6214,0.877,6215,1.661,6216,0.877,6217,1.661,6218,0.877,6219,0.877,6220,2.366,6221,0.877,6222,0.877,6223,0.877,6224,0.877,6225,0.877,6226,0.877,6227,0.877,6228,0.814]],["component/216",[1,0.4]],["title/217-1",[0,20.659,586,28.616]],["name/217-1",[]],["text/217-1",[]],["component/217-1",[]],["title/217-2",[2,15.814,31,15.956,168,18.939,2556,37.156,6209,48.518]],["name/217-2",[]],["text/217-2",[]],["component/217-2",[]],["title/217-3",[5,31.159,31,17.55,176,16.474,820,35.615]],["name/217-3",[]],["text/217-3",[]],["component/217-3",[]],["title/217-4",[9,29.369,56,17.245,175,17.245,176,14.978,1827,38.699]],["name/217-4",[]],["text/217-4",[]],["component/217-4",[]],["title/217-5",[15,23.546,31,14.627,159,27.625,176,13.731,294,23.622,1686,32.41]],["name/217-5",[]],["text/217-5",[]],["component/217-5",[]],["title/217-6",[31,12.539,38,12.318,81,39.845,195,17.383,202,13.789,462,25.447,895,20.721,2005,31.869]],["name/217-6",[]],["text/217-6",[]],["component/217-6",[]],["title/217-7",[31,17.55,2553,50.576,2556,40.868,6209,53.365]],["name/217-7",[]],["text/217-7",[]],["component/217-7",[]],["title/217-8",[15,25.685,31,15.956,294,25.767,2556,37.156,3381,55.421]],["name/217-8",[]],["text/217-8",[]],["component/217-8",[]],["title/217-9",[56,15.809,195,20.277,202,16.085,252,19.496,319,35.791,3382,50.807]],["name/217-9",[]],["text/217-9",[]],["component/217-9",[]],["title/217-10",[31,15.956,294,25.767,748,31.115,2556,37.156,3383,55.421]],["name/217-10",[]],["text/217-10",[]],["component/217-10",[]],["title/217-11",[31,14.627,159,27.625,176,13.731,294,23.622,748,28.524,2555,43.631]],["name/217-11",[]],["text/217-11",[]],["component/217-11",[]],["title/217",[2556,51.071,6209,66.689]],["name/217",[2556,1.548,6209,2.021]],["text/217",[0,1.142,2,0.979,5,0.707,9,0.733,15,4.071,18,0.499,24,0.843,31,2.771,37,0.762,38,1.805,40,0.598,47,1.945,52,0.637,56,2.733,81,2.291,82,0.742,87,0.71,94,2.045,108,1.386,133,1.295,154,0.941,157,1.885,158,2.63,159,4.192,162,1.976,168,1.438,175,2.399,176,2.926,178,2.863,179,2.556,187,2.41,188,0.894,192,0.571,195,3.271,200,0.672,202,2.724,203,0.563,214,2.557,233,1.167,243,0.766,245,0.649,247,1.491,248,0.808,252,2.09,259,0.696,260,0.792,271,3.533,276,0.8,278,2.993,281,0.707,283,1.431,291,0.721,294,4.362,295,3.488,299,2.016,303,1.374,319,4.496,342,1.369,345,0.639,363,1.616,414,1.07,417,0.882,428,0.746,438,3.342,451,2.375,456,0.755,462,2.847,464,1.295,467,0.92,474,0.762,479,4.511,483,1.441,487,0.702,500,1.575,511,0.736,515,1.183,549,3.802,554,1.057,565,1.951,576,4.193,582,1.892,586,0.52,606,1.538,608,0.914,624,1.945,649,1.479,660,2.016,669,0.742,682,1.781,689,1.708,700,0.927,718,1.023,727,1.858,729,2.897,730,0.667,733,0.942,734,1.597,739,1.538,744,1.627,745,1.814,748,4.171,764,1.994,778,1.045,779,2.556,793,1.167,820,2.004,895,4.179,911,1.092,1119,2.16,1121,1.13,1151,3.439,1160,1.002,1203,0.974,1222,1.188,1231,2.12,1240,1.167,1275,1.871,1328,0.845,1353,2.15,1366,0.877,1426,0.821,1438,3.129,1500,1.512,1526,2.462,1538,0.935,1554,1.441,1622,0.914,1675,1.211,1686,0.882,1800,1.692,1827,4.151,1981,1.441,2005,1.012,2072,2.42,2106,1.814,2488,0.784,2553,1.148,2555,1.188,2556,7.152,2602,2.016,2659,1.148,3381,1.383,3382,1.383,3383,1.383,3944,2.045,4745,1.237,4889,2.192,4891,1.265,4903,1.914,5119,2.749,6172,1.441,6209,6.973,6228,1.519,6229,1.637,6230,1.637,6231,2.963,6232,1.637,6233,1.637]],["component/217",[1,0.4]],["title/218-1",[0,20.659,586,28.616]],["name/218-1",[]],["text/218-1",[]],["component/218-1",[]],["title/218-2",[294,35.418,911,33.226]],["name/218-2",[]],["text/218-2",[]],["component/218-2",[]],["title/218-3",[2,14.497,31,14.627,294,23.622,295,26.173,703,27.037,2556,34.062]],["name/218-3",[]],["text/218-3",[]],["component/218-3",[]],["title/218-4",[5,38.938,588,49.254]],["name/218-4",[]],["text/218-4",[]],["component/218-4",[]],["title/218-5",[9,40.368,31,21.931]],["name/218-5",[]],["text/218-5",[]],["component/218-5",[]],["title/218-6",[13,16.835,31,14.627,294,23.622,295,26.173,811,25.113,2556,34.062]],["name/218-6",[]],["text/218-6",[]],["component/218-6",[]],["title/218",[]],["name/218",[294,1.074,2556,1.548]],["text/218",[0,0.653,2,0.378,5,0.678,9,0.702,13,0.439,15,4.454,18,0.478,19,0.599,20,0.514,24,0.446,31,2.537,38,0.681,56,1.471,74,1.511,122,0.763,133,2.738,141,0.99,154,0.905,157,1.483,158,1.582,161,0.889,164,0.633,168,1.979,172,0.556,175,1.647,176,2.747,179,0.805,187,1.379,195,1.887,202,0.42,214,1.913,247,2.39,252,1.271,258,2.829,260,1.379,264,1.8,265,1.231,271,1.332,278,0.667,286,1.745,288,0.734,293,1.655,294,5.263,295,4.359,296,0.67,297,1.745,299,3.62,303,1.322,304,0.447,314,0.882,342,2.779,345,0.612,363,1.56,379,0.662,409,0.976,428,1.785,438,2.704,445,2.393,451,0.748,455,0.851,459,3.557,466,1.438,467,0.882,479,2.474,487,2.686,502,0.951,512,0.783,541,1.713,547,1.1,549,4.639,565,1.888,566,0.631,576,3.683,586,0.498,588,1.558,599,1.379,605,1.326,608,0.875,618,0.626,624,1.53,627,1.251,650,1.069,660,1.154,672,1.641,703,5.171,721,1.138,727,3.647,729,2.304,736,0.759,738,0.787,745,0.96,748,3.251,751,0.824,764,1.925,778,1.002,779,1.463,794,1.138,802,0.99,811,5.194,824,1.213,873,0.718,889,0.829,895,2.519,897,5.458,911,2.716,951,0.918,1038,0.98,1061,1.654,1108,1.138,1123,1.8,1151,6.383,1165,1.025,1231,0.819,1250,0.97,1265,4.844,1290,1.568,1317,1.025,1393,0.748,1405,1.628,1422,2.293,1438,3.4,1480,0.711,1484,1.668,1500,2.46,1526,1.729,1534,1.244,1538,0.896,1800,3.577,1827,1.682,1877,1.118,1893,0.99,2180,1.781,2301,1.244,2556,7.161,3085,2.409,3091,1.455,3096,2.204,4017,5.488,4477,1.455,4573,1.326,4672,2.204,4745,1.185,4903,1.013,5193,6.209,6161,1.138,6162,1.281,6171,2.645,6172,2.51,6186,1.455,6234,1.455,6235,2.85,6236,1.568,6237,1.568,6238,1.568,6239,2.85,6240,2.85,6241,2.85,6242,1.568]],["component/218",[1,0.4]],["title/219",[195,34.739]],["name/219",[586,1.413]],["text/219",[]],["component/219",[1,0.4]],["title/220",[1,10.37,8,12.169,175,14.594,176,12.676,228,22.618,288,25.965,1304,26.208]],["name/220",[8,0.338,228,0.628,586,0.489,659,0.728]],["text/220",[1,2.224,8,2.919,11,2.096,15,2.39,31,2.5,37,2.842,38,2.686,52,2.375,110,2.855,119,3.93,138,2.902,151,2.896,154,1.937,158,2.003,164,3.54,166,3.8,168,2.535,175,2.955,176,2.567,204,3.079,228,2.487,235,2.689,236,2.756,238,2.296,239,2.647,247,1.578,254,2.568,258,2.756,267,2.437,277,4.7,295,2.657,313,4.403,347,3.169,363,2.429,380,3.437,407,3.358,413,2.454,421,3.292,422,3.512,430,3.432,488,4.53,599,5.437,608,3.406,618,3.505,655,2.559,659,4.144,671,2.587,754,2.657,1087,5.663,1304,2.882,1400,2.587,1658,3.854,2016,3.737,2181,6.272]],["component/220",[1,0.4]],["title/221",[8,13.182,38,14.369,313,30.164,407,33.079,599,29.084,671,25.483]],["name/221",[8,0.338,313,0.773,599,0.746,671,0.653]],["text/221",[0,0.554,1,0.782,7,2.055,8,2.659,11,0.829,24,0.688,31,1.347,38,1.577,52,0.94,56,1.962,61,1.157,74,2.134,91,1.995,128,2.818,133,1.056,154,2.946,157,2.095,160,3.075,166,2.523,168,1.598,175,1.1,176,1.264,177,1.06,178,1.881,195,2.226,202,1.119,214,2.618,231,1.146,235,1.064,236,1.091,237,0.998,238,0.909,239,1.047,245,0.958,247,1.929,254,1.016,259,1.028,271,1.422,278,1.028,283,0.852,295,1.052,299,4.343,300,1.643,313,4.655,326,1.056,342,3.619,360,1.193,369,0.893,380,0.946,407,3.631,409,1.895,421,0.906,438,3.879,446,6.171,451,1.152,454,1.212,464,3.572,467,1.358,474,1.125,479,1.239,481,4.929,483,1.174,488,2.856,489,1.169,500,1.623,509,3.045,511,1.882,512,1.205,515,0.965,545,1.451,563,1.465,565,0.946,576,3.821,599,4.243,624,0.943,626,1.358,650,3.066,660,0.978,671,4.852,678,1.199,689,1.76,700,1.369,718,1.509,727,3.048,729,2.279,738,3.744,744,3.514,764,6.248,774,3.575,807,1.163,818,1.413,838,1.379,887,1.542,889,5.138,895,2.225,911,3.012,1119,1.285,1180,4.214,1267,1.916,1271,1.525,1304,1.976,1349,1.338,1366,2.241,1400,1.024,1445,3.768,1480,1.898,1484,4.365,1619,1.667,1800,4.26,1935,1.694,2106,1.479,2181,3.684,2618,3.618,4571,2.241,4929,3.319,4930,1.973,5245,2.041,6243,4.183,6244,2.241,6245,2.241,6246,2.415,6247,2.415,6248,2.415]],["component/221",[1,0.4]],["title/222",[8,14.38,15,25.685,175,17.245,176,14.978,599,31.726]],["name/222",[8,0.338,15,0.604,599,0.746,2488,0.738]],["text/222",[0,0.511,1,0.73,8,2.634,11,0.766,15,4.588,24,0.635,31,1.267,52,1.52,56,1.867,61,1.069,74,2.007,91,1.862,128,0.953,138,0.738,154,2.975,157,1.478,160,2.949,166,2.401,168,1.504,175,3.036,176,2.775,177,0.979,178,1.77,192,1.362,195,2.107,202,1.045,214,2.817,231,1.059,235,0.983,236,1.008,237,0.922,238,0.84,239,0.968,245,0.885,247,1.835,259,0.95,271,0.758,278,0.95,283,0.787,295,2.267,299,4.215,300,1.518,326,0.975,342,3.604,360,1.102,363,0.888,409,1.783,438,3.508,446,6.014,450,1.18,451,3.385,456,1.803,464,3.414,467,1.255,474,1.039,479,1.145,481,4.798,483,1.085,488,3.665,489,1.08,491,1.478,500,1.515,509,2.865,511,1.004,512,1.114,515,0.891,523,1.306,545,1.341,563,1.353,576,3.676,599,3.435,601,1.059,624,0.871,626,1.255,650,2.93,660,0.903,678,1.108,679,1.246,689,1.643,700,1.264,718,1.394,727,2.913,729,2.144,738,3.562,744,3.755,764,6.233,774,3.364,807,1.074,818,1.306,823,1.425,838,1.274,887,1.425,889,4.956,895,2.093,911,2.617,934,1.409,1038,1.394,1119,1.188,1180,3.99,1267,1.77,1304,1.844,1349,1.237,1366,2.092,1398,1.317,1400,0.946,1426,1.12,1445,4.054,1480,1.771,1484,4.154,1619,1.541,1800,4.054,1935,1.565,2043,2.391,2106,1.366,2181,3.488,2488,1.069,2618,3.404,2753,1.591,2813,1.886,4929,3.098,4930,1.823,5245,1.886,5723,2.071,6244,2.071,6245,2.071,6249,3.905,6250,3.905,6251,2.231,6252,2.231,6253,2.231,6254,2.231,6255,2.231,6256,2.231]],["component/222",[1,0.4]],["title/223-1",[0,20.659,586,28.616]],["name/223-1",[]],["text/223-1",[]],["component/223-1",[]],["title/223-2",[2,21.736,31,21.931]],["name/223-2",[]],["text/223-2",[]],["component/223-2",[]],["title/223",[31,15.956,324,20.533,483,31.885,807,31.569,1414,57.743]],["name/223",[807,1.315,1403,2.535]],["text/223",[0,0.801,2,0.843,6,1.45,8,0.767,18,2.208,19,3.196,20,1.145,28,1.659,31,2.408,38,2.204,56,0.919,66,1.504,73,4.667,74,1.348,77,2.475,115,1.885,138,2.395,148,2.451,154,2.3,160,2.004,162,1.387,164,2.305,168,1.01,169,1.425,172,1.239,177,2.507,178,3.55,192,2.918,197,2.12,202,3.299,203,3.408,231,1.659,245,3.319,247,1.873,252,1.134,274,2.184,305,1.937,306,2.274,310,1.54,312,1.43,324,3.099,339,2.1,342,2.444,387,3.002,414,2.286,479,1.794,483,6.471,487,1.499,500,3.84,512,2.851,529,2.497,554,2.258,572,2.286,576,1.44,586,1.11,598,2.258,604,1.504,623,1.937,627,1.534,650,1.312,660,1.415,662,2.661,678,5.596,703,2.569,720,4.18,724,4.006,727,1.304,729,1.44,730,2.329,735,4.627,736,3.505,754,2.487,778,2.232,780,1.826,807,4.027,812,1.784,895,2.297,929,2.162,954,4.828,1107,2.955,1181,2.537,1293,2.286,1349,1.937,1350,1.614,1401,2.451,1407,8.085,1408,2.955,1409,3.372,1414,10.456,1432,1.667,1438,1.897,1486,2.641,1526,2.12,1532,2.346,1553,4.073,1646,2.493,1648,2.378,1789,4.828,1969,2.774,2063,4.227,2603,2.378,2640,2.378,4903,2.258,6257,3.496,6258,3.496,6259,3.496]],["component/223",[1,0.4]],["title/224",[154,17.619,312,22.697,324,17.376,911,20.457,1296,28.477,1862,28.987,2563,37.233]],["name/224",[312,0.63,1296,0.791,1862,0.805,2563,1.034]],["text/224",[31,2.222,56,1.312,74,2.916,77,1.704,87,2.164,96,3.151,138,1.65,154,1.584,160,1.75,162,3.001,164,2.013,169,3.082,175,1.312,177,2.189,178,2.57,193,5.296,203,1.718,204,2.517,246,2.367,267,3.02,299,4.433,312,4.168,324,3.862,342,1.683,360,2.464,387,3.974,409,1.709,460,1.866,462,3.734,479,2.56,500,3.954,515,1.993,529,2.181,550,7.879,565,1.954,566,2.006,576,4.197,650,1.872,682,2.189,689,3.843,702,2.944,727,3.406,729,4.197,730,3.722,735,3.794,736,4.418,739,5.686,779,2.56,873,2.283,911,1.839,1135,3.085,1238,2.919,1296,6.606,1350,3.491,1438,4.104,1526,3.026,1538,2.849,1862,2.606,1928,3.347,1969,6,2063,3.691,2563,7.347,2603,3.394,2640,3.394,3000,3.77,4902,3.444,4903,4.885,5162,5.847,6260,4.63,6261,4.989]],["component/224",[1,0.4]],["title/225",[38,15.674,178,22.288,254,27.594,730,26.727,1512,40.553]],["name/225",[38,0.302,312,0.518,650,0.475,730,0.516,2563,0.849]],["text/225",[20,1.469,25,2.099,28,2.129,31,2.806,38,2.641,56,1.833,74,1.73,77,1.533,110,3.262,133,3.047,138,1.484,158,2.288,160,1.573,162,2.766,164,1.81,168,2.013,170,3,175,1.833,176,1.025,177,3.751,178,3.919,195,1.513,200,1.841,202,1.201,203,1.545,204,2.264,205,1.931,246,2.129,254,3.597,267,3.85,271,2.369,281,3.011,299,1.816,312,4.519,324,3.732,327,3.641,342,2.351,360,3.442,387,4.493,407,2.469,419,2.344,460,1.678,479,2.302,500,3.317,511,2.018,529,3.047,565,1.757,566,1.804,576,3.97,624,1.752,650,1.683,672,2.582,682,1.969,689,3.597,702,2.648,727,2.6,729,3.521,730,3.484,735,3.498,736,3.373,739,3.619,779,2.302,781,3.479,811,1.874,812,2.289,873,2.053,911,1.654,1105,2.934,1278,2.542,1292,3.39,1369,4.266,1393,2.139,1438,4.64,1512,6.833,1526,2.721,1839,3.256,2063,3.32,2563,7.413,2640,3.052,2692,3.39,2812,2.834,4902,3.098,4903,4.503,6260,4.164,6262,4.486]],["component/225",[1,0.4]],["title/226-1",[0,18.366,172,28.405,324,25.09]],["name/226-1",[]],["text/226-1",[]],["component/226-1",[]],["title/226-2",[2,19.324,159,36.823,163,45.061]],["name/226-2",[]],["text/226-2",[]],["component/226-2",[]],["title/226-3",[13,22.44,26,33.118,38,19.153]],["name/226-3",[]],["text/226-3",[]],["component/226-3",[]],["title/226",[312,32.772,324,25.09,2563,53.761]],["name/226",[312,1.117,2563,1.833]],["text/226",[0,0.714,2,0.751,8,0.683,13,0.873,18,0.95,26,1.288,28,3.699,31,1.264,38,2.237,40,1.139,46,1.808,49,2.013,52,2.022,56,0.819,64,1.162,85,2.063,87,2.253,110,1.458,119,1.395,133,2.271,138,1.03,143,3.485,149,3.643,150,1.563,157,1.179,158,1.023,159,1.432,163,1.752,168,1.5,169,1.27,172,2.368,175,0.819,176,0.712,177,1.367,178,2.945,192,1.087,193,2.387,197,1.889,202,2.504,218,1.839,240,1.793,252,2.167,255,2.579,260,1.507,267,3.738,270,1.739,271,2.945,278,1.326,288,1.458,296,1.331,299,3.156,312,4.06,324,3.858,327,1.628,333,2.387,342,2.63,346,1.808,360,4.278,377,1.808,380,2.035,381,3.615,386,1.232,399,2.633,423,3.057,438,2.193,454,1.563,460,1.165,481,2.28,508,2.354,509,2.859,511,2.336,512,1.555,537,1.839,546,1.39,566,1.253,572,2.037,576,4.088,577,4.546,583,2.99,593,1.179,599,1.507,604,1.341,624,1.217,627,3.421,649,1.555,650,1.169,655,2.178,662,1.451,671,2.832,672,1.793,676,1.839,678,3.87,689,2.186,703,2.336,720,1.316,726,1.947,727,1.938,734,1.68,736,1.507,754,1.357,779,1.599,780,1.628,781,1.555,811,2.17,895,2.089,1074,2.409,1078,1.889,1203,1.855,1206,2.409,1209,1.68,1238,1.823,1245,2.261,1247,1.99,1304,1.471,1328,1.608,1350,3.999,1393,1.485,1409,1.839,1429,2.744,1453,4.121,1460,1.927,1512,4.132,1538,1.779,1610,2.063,1622,2.9,1653,2.305,1731,4.175,1815,3.397,1924,2.633,1928,2.09,1965,3.643,1994,2.063,2001,2.354,2043,1.908,2068,2.261,2271,5.166,2484,1.889,2563,5.813,2618,2.037,2659,2.185,3259,6.369,4643,2.151,5150,2.633,5546,2.891,5678,4.821,6263,3.116,6264,2.891,6265,5.195,6266,3.116,6267,3.116,6268,3.116,6269,3.116,6270,5.195]],["component/226",[1,0.4]],["title/227-1",[0,11.812,247,13.323,279,42.097,283,27.323,324,16.136,460,19.276,1369,25.718]],["name/227-1",[]],["text/227-1",[]],["component/227-1",[]],["title/227-2",[2,15.814,169,26.727,279,53.567,283,23.12,1369,32.726]],["name/227-2",[]],["text/227-2",[]],["component/227-2",[]],["title/227-3",[13,22.44,18,24.421,302,39.161]],["name/227-3",[]],["text/227-3",[]],["component/227-3",[]],["title/227",[168,14.884,283,27.323,324,16.136,565,20.185,576,21.224,1209,27.784,1369,25.718]],["name/227",[283,0.543,299,0.624,324,0.483,1209,0.831]],["text/227",[0,1.152,2,0.905,8,0.823,13,1.051,18,1.532,20,2.49,24,0.607,25,2.831,26,3.391,28,1.781,31,1.472,38,1.201,39,0.918,40,1.372,45,3.241,56,0.561,66,0.918,77,1.282,87,3.298,96,1.347,108,2.831,110,0.998,123,1.692,133,0.932,138,0.705,154,3.038,158,1.232,160,0.748,162,0.846,164,0.86,168,0.616,169,0.869,175,1.322,176,0.857,177,1.647,178,3.252,193,0.98,202,1.619,203,1.73,205,1.615,219,1.027,231,1.012,239,1.628,247,1.299,252,1.63,254,0.897,259,2.934,279,4.105,282,2.11,283,4.899,299,3.078,302,1.042,324,2.731,333,0.98,342,1.695,345,1.962,379,0.901,409,1.285,410,1.19,419,6.398,420,2.609,421,1.408,438,2.264,450,1.128,456,0.984,460,2.264,474,0.993,479,1.094,481,3.026,487,0.914,494,0.817,500,0.827,515,1.499,529,0.932,531,1.834,553,1.208,563,1.293,565,2.701,575,1.578,576,3.778,577,2.197,591,0.705,604,0.918,624,0.833,626,2.11,649,1.064,652,2.709,655,1.573,662,0.993,672,1.228,682,0.936,689,0.897,703,0.959,727,1.874,729,2.492,730,0.869,735,1.07,736,2.431,737,1.394,779,1.094,780,1.114,782,2.977,802,2.37,811,0.891,812,1.088,839,1.306,869,7.189,911,0.786,951,1.248,1024,0.891,1062,1.394,1198,2.591,1202,1.578,1209,4.945,1217,1.802,1238,2.196,1290,1.174,1304,2.373,1324,2.977,1350,1.732,1369,4.353,1432,1.017,1457,1.378,1480,0.967,1500,1.088,1510,1.611,1511,1.611,1512,1.319,1513,3.469,1514,1.878,1515,1.802,1526,2.276,1527,1.521,1549,1.431,1564,1.692,1648,1.451,1737,1.521,1792,1.496,1815,6.484,1821,1.394,1833,7.808,1925,1.548,1935,1.496,1955,3.172,1965,6.117,1969,3.987,2114,3.469,2180,1.333,2488,1.022,2603,2.553,2605,1.878,4249,1.578,4250,1.578,4251,1.578,4278,5.828,4304,1.979,4308,3.483,4309,1.979,4310,1.979,4315,1.979,4316,1.979,4317,1.979,4323,3.483,4510,1.979,4902,1.472,4903,1.378,6271,2.133,6272,3.753]],["component/227",[1,0.4]],["title/228-1",[0,18.366,6273,74.358,6274,74.358]],["name/228-1",[]],["text/228-1",[]],["component/228-1",[]],["title/228-2",[1008,46.496,5477,70.56,6275,74.358]],["name/228-2",[]],["text/228-2",[]],["component/228-2",[]],["title/228-3",[2,17.393,283,25.43,4557,60.957,4918,60.957]],["name/228-3",[]],["text/228-3",[]],["component/228-3",[]],["title/228",[283,31.779,4918,76.177]],["name/228",[283,1.57]],["text/228",[0,2.276,2,2.395,271,3.375,283,3.501,423,4.543,987,8.744,1008,5.762,2618,6.493,4557,8.393,4560,11.266,4918,8.393,4936,9.215,5477,8.744,6273,9.215,6274,9.215,6275,9.215,6276,9.93,6277,9.93,6278,9.93,6279,9.93]],["component/228",[1,0.4]],["title/229-1",[0,18.366,64,29.885,5400,67.723]],["name/229-1",[]],["text/229-1",[]],["component/229-1",[]],["title/229-2",[1008,52.301,1572,66.689]],["name/229-2",[]],["text/229-2",[]],["component/229-2",[]],["title/229-3",[2,19.324,386,31.691,764,39.362]],["name/229-3",[]],["text/229-3",[]],["component/229-3",[]],["title/229-4",[5,38.938,38,21.544]],["name/229-4",[]],["text/229-4",[]],["component/229-4",[]],["title/229-5",[9,40.368,303,41.791]],["name/229-5",[]],["text/229-5",[]],["component/229-5",[]],["title/229-6",[299,32.437,1119,42.644,1686,43.201]],["name/229-6",[]],["text/229-6",[]],["component/229-6",[]],["title/229-7",[2005,55.741,2043,55.188]],["name/229-7",[]],["text/229-7",[]],["component/229-7",[]],["title/229-8",[2553,63.204,3210,79.368]],["name/229-8",[]],["text/229-8",[]],["component/229-8",[]],["title/229-9",[2555,65.418,6280,83.64]],["name/229-9",[]],["text/229-9",[]],["component/229-9",[]],["title/229",[764,39.362,1153,57.131,2285,63.571]],["name/229",[6281,4.451]],["text/229",[0,1.562,2,1.643,5,1.882,6,3.935,7,2.14,9,1.951,13,1.22,18,2.076,19,1.664,31,1.06,37,2.029,38,1.628,49,2.814,52,1.696,64,1.625,87,1.889,89,2.381,107,1.847,110,2.039,133,1.904,136,4.043,154,2.163,157,3.176,158,1.43,164,2.749,168,1.968,175,1.146,176,0.995,177,1.912,178,2.851,182,2.039,192,2.377,195,1.47,202,1.823,232,1.927,236,1.968,249,3.292,255,2.163,271,2.316,274,2.722,293,3.543,296,1.861,299,4.418,303,2.02,312,2.786,324,3.571,325,3.456,333,3.855,342,2.298,361,2.594,380,2.669,381,3.89,386,3.752,409,2.333,423,4.71,432,2.304,445,3.205,482,3.224,500,1.69,514,2.782,537,4.021,543,2.528,549,2.067,565,1.707,566,1.752,576,1.794,577,1.904,583,2.508,591,1.441,604,1.875,618,2.721,655,1.827,682,1.912,739,2.262,744,3.802,764,5.057,811,1.82,895,1.752,1008,2.528,1119,3.626,1153,4.857,1331,3.008,1426,2.186,1432,2.077,1459,4.857,1480,1.976,1569,3.369,1572,3.224,1677,3.682,1686,2.349,1822,3.055,1864,3.224,1893,2.751,1967,3.162,2005,2.694,2043,2.668,2166,3.369,2553,3.055,2555,3.162,2563,2.923,3210,3.836,3651,4.043,4300,3.682,4901,3.836,5154,3.836,5400,3.682,6068,7.387,6280,4.043,6282,4.043,6283,4.356,6284,4.356,6285,4.356,6286,4.356,6287,4.356,6288,4.356]],["component/229",[1,0.4]],["title/230-1",[0,18.366,324,25.09,586,25.44]],["name/230-1",[]],["text/230-1",[]],["component/230-1",[]],["title/230-2",[2,19.324,18,24.421,302,39.161]],["name/230-2",[]],["text/230-2",[]],["component/230-2",[]],["title/230",[324,28.222,838,51.468]],["name/230",[838,2.542]],["text/230",[0,0.573,2,0.603,8,0.548,18,1.314,19,0.955,24,2.169,28,2.045,31,1.049,38,1.822,40,0.914,52,0.973,56,0.658,74,1.662,77,1.473,82,1.955,100,2.445,122,1.216,138,1.425,154,1.369,157,1.632,158,0.821,160,2.369,162,0.992,163,1.406,164,1.009,168,3.281,169,1.757,172,0.886,175,0.658,176,0.571,177,2.494,178,2.296,192,0.872,197,1.516,202,2.039,203,1.484,247,1.469,252,0.811,254,1.814,267,0.999,270,1.396,271,0.85,286,1.531,291,1.102,302,1.222,324,2.386,333,1.149,342,3.011,345,0.976,346,1.451,369,1.594,380,1.689,381,1.159,395,2.867,409,0.856,413,2.717,417,1.348,420,1.298,421,1.617,423,4.315,430,1.406,438,3.096,440,1.933,442,4.658,455,1.357,459,1.298,460,0.935,481,4.883,500,2.957,508,3.257,529,1.093,537,2.544,545,1.502,553,1.417,576,3.677,586,1.369,604,1.076,609,1.331,618,2.699,627,2.494,669,1.134,671,4.717,682,1.892,685,2.372,688,4.758,689,1.052,723,1.984,728,1.579,729,1.775,730,1.757,735,1.255,736,3.687,739,2.238,744,2.277,764,1.228,804,2.614,838,7.135,839,1.531,869,1.579,895,1.733,917,1.85,921,1.489,954,2.113,1231,1.306,1271,1.579,1290,1.376,1293,1.635,1311,1.984,1350,4.728,1396,2.372,1400,1.827,1428,6.605,1437,3.105,1456,1.463,1480,1.134,1481,2.113,1526,1.516,1622,1.396,1676,1.635,1731,1.562,1815,1.635,1966,2.976,1969,3.42,2004,5.224,2024,2.043,2025,2.202,2157,4.508,2158,9.94,2486,2.113,2640,2.933,2760,1.984,2787,5.273,2796,2.32,2797,2.32,2802,2.32,2889,5.273,3199,1.933,3959,2.113,4440,1.889,4640,2.32,4643,1.726,4902,1.726,4903,1.615,5066,2.202,5549,2.32,6289,5.682,6290,2.5,6291,2.5,6292,8.332,6293,2.5,6294,2.5,6295,2.5,6296,2.5,6297,2.5,6298,5.682,6299,4.311,6300,2.202]],["component/230",[1,0.4]],["title/231-1",[0,13.778,38,14.369,247,15.542,324,18.823,454,30.164,727,22.42]],["name/231-1",[]],["text/231-1",[]],["component/231-1",[]],["title/231-2",[2,11.6,38,11.497,247,12.435,324,23.029,432,25.437,599,23.272,676,28.387,727,17.939]],["name/231-2",[]],["text/231-2",[]],["component/231-2",[]],["title/231",[38,13.264,128,23.701,247,14.347,324,17.376,380,21.737,676,32.75,727,20.697]],["name/231",[178,0.43,324,0.396,727,0.472,2488,0.606,5479,1.174]],["text/231",[0,1.695,2,1.168,6,0.844,8,0.79,13,1.008,18,0.62,20,0.666,24,1.904,26,1.488,28,0.966,37,0.948,38,2.799,44,1.212,52,2.278,54,1.788,56,0.535,74,1.388,77,0.695,82,0.923,91,3.525,110,0.952,119,0.912,128,2.069,133,1.574,138,0.673,143,1.366,154,1.858,157,1.363,158,1.182,168,1.04,175,0.535,176,0.465,177,0.893,178,1.646,183,3.177,192,1.256,195,1.215,200,0.835,203,0.701,228,0.83,230,1.112,232,0.9,247,1.513,248,1.005,252,1.168,271,3.746,291,2.134,295,0.886,299,3.236,303,0.944,324,3.826,337,3.059,342,3.646,345,0.795,369,1.331,380,3.669,407,1.12,422,2.073,423,2.216,432,1.904,438,3.617,442,1.005,451,4.275,454,4.7,455,1.955,464,3.232,473,1.477,481,2.935,494,1.38,500,3.303,501,2.515,511,0.915,529,0.89,537,5.292,543,1.181,576,3.045,591,0.673,599,1.742,627,1.58,650,2.196,659,1.701,676,4.718,688,4.862,689,2.038,727,4.182,729,2.41,730,2.385,736,4.119,744,0.816,751,1.07,754,0.886,812,2.471,839,3.584,895,2.973,896,2.545,911,0.75,1158,2.416,1241,2.384,1281,1.212,1349,1.128,1350,3.088,1396,1.982,1426,1.021,1484,2.107,1497,2.721,1500,1.837,1512,1.259,1619,2.486,1622,1.136,1663,1.792,1731,2.25,1839,1.477,1979,2.665,2002,2.784,2022,1.889,2142,3.044,2385,1.72,2603,1.385,2783,4.643,2917,1.792,4107,3.342,4982,1.792,5262,1.889,5888,3.171,6095,1.889,6300,7.04,6301,2.035,6302,2.035,6303,2.035,6304,2.035,6305,2.035,6306,4.843,6307,2.035,6308,2.035,6309,2.035,6310,2.035,6311,2.035,6312,3.601,6313,3.601,6314,4.843,6315,2.035,6316,2.035,6317,2.035,6318,2.035,6319,2.035,6320,3.601,6321,2.035,6322,2.035,6323,2.035,6324,2.035,6325,2.035,6326,2.035,6327,2.035,6328,2.035,6329,2.035,6330,3.601,6331,2.035,6332,2.035,6333,2.035,6334,2.035,6335,2.035,6336,2.035,6337,2.035,6338,2.035,6339,2.035,6340,2.035,6341,2.035,6342,2.035,6343,2.035,6344,2.035,6345,3.601,6346,2.035,6347,3.601,6348,3.601,6349,3.601,6350,2.035,6351,5.852,6352,2.035,6353,3.601,6354,2.035,6355,2.035,6356,2.035,6357,2.035]],["component/231",[1,0.4]],["title/232",[168,16.028,324,17.376,409,19.007,460,20.758,627,24.353,727,20.697,1497,41.929]],["name/232",[627,0.865,727,0.735,1497,1.489]],["text/232",[0,0.991,13,1.211,24,1.231,28,2.052,31,2.299,38,2.259,56,1.138,74,2.612,77,2.853,104,2.348,122,3.294,138,2.761,143,2.902,144,3.084,148,3.033,154,2.151,157,1.637,160,2.376,162,1.716,163,2.432,175,1.782,176,0.988,177,2.973,178,3.212,203,2.332,252,2.197,299,4.605,324,3.79,342,2.285,345,1.689,363,1.722,409,2.86,416,2.51,438,2.741,456,1.997,460,3.535,466,2.182,479,2.22,481,1.898,500,3.24,501,2.246,511,1.945,529,1.891,566,1.739,572,2.828,575,3.2,576,4.986,599,3.278,624,1.689,627,4.775,657,2.599,662,3.155,682,1.898,689,2.851,720,2.861,727,4.784,729,3.892,730,2.761,734,2.332,736,2.093,739,4.336,779,2.22,780,3.539,895,3.8,1480,1.962,1484,2.531,1497,8.222,1526,2.623,1536,2.864,1731,2.703,1969,5.375,2063,3.2,2484,2.623,2603,6.98,2702,2.732,4902,2.986,4903,4.376,5066,5.965,6300,3.809,6358,6.774,6359,4.325,6360,4.325]],["component/232",[1,0.4]],["title/233",[175,21.073,176,18.303,328,42.644]],["name/233",[176,0.624,328,1.454]],["text/233",[8,2.012,18,1.98,19,2.482,30,3.144,31,2.589,47,4.397,52,2.529,56,2.413,57,2.133,74,2.505,107,2.755,138,3.518,158,2.133,160,2.279,162,2.578,169,2.648,175,2.798,176,3.035,252,2.107,271,2.209,296,2.775,305,3.601,306,4.602,310,2.863,311,3.601,312,2.658,324,2.035,328,6.489,345,2.537,363,2.587,386,2.57,409,2.226,417,3.503,421,2.438,438,3.012,445,2.482,500,2.521,566,2.613,627,2.852,638,6.03,649,3.243,657,3.904,704,4.302,727,3.423,729,2.676,737,4.249,877,4.486,950,3.74,1024,2.715,1168,4.808,1182,4.633,1432,3.098,1480,4.163,1500,3.315,1737,4.633,1911,5.024,2488,3.113,3881,5.155,6361,6.498]],["component/233",[1,0.4]],["title/234",[56,21.073,175,21.073,176,18.303]],["name/234",[56,0.718,176,0.624]],["text/234",[6,1.171,8,0.619,13,1.339,19,1.827,20,0.924,25,1.321,26,1.976,30,3.542,31,1.993,47,1.353,52,1.099,56,2.493,66,1.215,77,1.634,84,2.399,100,1.215,107,1.197,121,1.783,138,1.581,158,0.927,160,2.182,162,2.468,164,3.305,168,1.797,175,3.281,176,3,177,2.099,178,1.625,179,3.192,192,0.985,200,1.159,201,1.303,202,2.381,203,2.142,205,1.215,237,1.167,241,2.314,244,2.089,247,0.73,252,3.233,253,1.292,258,1.275,264,1.783,271,4.076,275,1.466,278,2.647,283,0.995,287,3.794,303,1.309,304,1.364,305,2.65,306,2.915,307,4.042,310,2.107,312,2.995,316,1.532,317,1.259,322,1.625,342,0.952,343,2.183,345,2.429,363,1.904,369,1.044,409,1.638,415,2.561,416,1.638,421,1.794,426,2.013,438,3.63,445,1.079,450,1.493,451,1.346,457,1.869,474,1.315,500,1.095,515,1.91,541,1.234,566,2.501,576,3.016,577,3.889,583,4.214,603,2.988,604,2.677,609,1.503,618,2.485,619,1.346,650,1.794,660,1.143,699,1.565,703,2.798,726,2.988,729,1.163,730,2.535,733,3.58,736,3.542,740,3.847,748,1.34,799,1.803,805,1.466,807,2.302,875,2.873,895,2.501,1024,4.165,1078,1.712,1132,1.803,1143,2.049,1190,1.824,1244,1.6,1247,1.803,1328,2.468,1350,1.303,1438,1.532,1442,2.386,1453,2.24,1455,2.24,1459,2.013,1518,2.988,1528,1.466,1538,3.552,1603,2.089,1615,2.928,1630,2.133,1714,1.824,1720,3.794,1792,1.98,1919,2.798,1920,5.417,1922,3.906,1946,1.949,2114,1.949,2204,1.696,2327,2.386,2564,1.6,2640,3.253,2723,2.62,5163,2.306,6362,2.62,6363,2.486,6364,2.823,6365,2.62]],["component/234",[1,0.4]],["title/235",[175,21.073,176,18.303,662,37.321]],["name/235",[176,0.624,662,1.272]],["text/235",[8,2.052,18,2.035,19,2.551,31,1.625,52,3.641,57,2.192,74,2.575,107,2.831,121,4.218,138,4.073,158,2.192,160,2.342,163,3.756,169,2.722,175,3.077,176,2.994,202,1.787,252,3.502,258,3.016,271,3.18,305,5.185,306,5.083,310,4.122,312,2.731,317,2.979,324,2.091,363,3.724,386,2.641,421,2.505,500,2.591,515,2.667,566,2.685,609,3.554,619,3.184,627,2.931,649,3.333,661,3.649,662,5.738,699,3.701,720,2.821,729,2.75,781,3.333,877,4.611,950,3.844,1159,5.644,1322,4.422,1432,3.184,1500,3.407,1528,3.468,1611,4.941]],["component/235",[1,0.4]],["title/236",[175,21.073,176,18.303,312,32.772]],["name/236",[176,0.624,312,1.117]],["text/236",[8,1.055,18,2.241,19,1.837,30,2.327,31,2.173,47,2.304,52,1.872,56,1.934,64,1.794,77,2.512,84,3.69,107,2.039,138,2.432,160,2.579,162,1.908,175,2.988,176,2.913,179,2.468,202,1.287,203,2.532,243,2.25,246,2.282,252,4.266,253,2.201,258,2.172,271,3.035,275,2.497,291,2.119,295,2.094,303,2.23,305,4.076,306,3.981,310,3.24,312,4.835,316,2.61,317,3.28,322,2.768,324,2.303,345,1.878,363,1.915,369,1.778,421,1.804,438,3.282,445,2.809,450,2.543,470,5.021,500,1.866,515,3.566,549,3.49,566,2.957,603,4.595,609,2.56,618,2.937,619,2.293,660,1.947,699,2.665,727,1.794,729,3.029,730,4.076,805,2.497,807,2.315,811,2.009,895,2.957,1024,3.072,1078,2.917,1281,2.864,1432,2.293,1487,2.89,1500,2.454,1528,2.497,1603,3.559,1714,3.107,1946,3.321,2204,2.89,2484,2.917,2497,3.929,2499,3.816,2564,2.725,6366,4.809,6367,4.809,6368,4.809,6369,4.809,6370,4.809]],["component/236",[1,0.4]],["title/237-1",[0,18.366,3,49.063,4,59.288]],["name/237-1",[]],["text/237-1",[]],["component/237-1",[]],["title/237-2",[2,17.393,63,35.803,304,20.573,981,36.389]],["name/237-2",[]],["text/237-2",[]],["component/237-2",[]],["title/237-3",[13,14.432,77,17.605,138,17.04,175,13.552,176,11.771,203,17.742,247,13.323,472,27.425]],["name/237-3",[]],["text/237-3",[]],["component/237-3",[]],["title/237-4",[93,28.525,176,16.474,472,38.384,1047,34.723]],["name/237-4",[]],["text/237-4",[]],["component/237-4",[]],["title/237-5",[56,17.245,175,17.245,176,14.978,472,34.898,2453,48.518]],["name/237-5",[]],["text/237-5",[]],["component/237-5",[]],["title/237-6",[175,17.245,176,14.978,472,34.898,3500,48.518,4134,55.421]],["name/237-6",[]],["text/237-6",[]],["component/237-6",[]],["title/237-7",[175,17.245,176,14.978,472,34.898,662,30.542,4880,49.546]],["name/237-7",[]],["text/237-7",[]],["component/237-7",[]],["title/237-8",[175,17.245,176,14.978,472,34.898,1296,33.65,4881,49.546]],["name/237-8",[]],["text/237-8",[]],["component/237-8",[]],["title/237-9",[93,31.691,176,18.303,1050,38.963]],["name/237-9",[]],["text/237-9",[]],["component/237-9",[]],["title/237-10",[175,17.245,176,14.978,428,29.872,472,34.898,2389,42.875]],["name/237-10",[]],["text/237-10",[]],["component/237-10",[]],["title/237-11",[175,17.245,176,14.978,472,34.898,661,35.834,2763,43.418]],["name/237-11",[]],["text/237-11",[]],["component/237-11",[]],["title/237-12",[175,15.809,176,13.731,363,23.931,472,31.992,1296,30.848,2766,40.897]],["name/237-12",[]],["text/237-12",[]],["component/237-12",[]],["title/237-13",[8,15.816,31,17.55,138,23.849,591,23.849]],["name/237-13",[]],["text/237-13",[]],["component/237-13",[]],["title/237-14",[202,19.299,203,24.832,237,29.809,593,27.303]],["name/237-14",[]],["text/237-14",[]],["component/237-14",[]],["title/237",[24,18.666,202,17.546,203,22.577,386,25.935,6371,57.743]],["name/237",[176,0.624,472,1.454]],["text/237",[0,0.98,2,0.83,3,0.824,4,0.996,6,0.558,8,1.472,11,1.182,13,1.401,18,0.41,19,0.514,20,0.441,24,1.911,26,0.556,27,0.841,30,0.651,31,0.603,38,0.322,40,0.492,45,1.844,52,0.524,54,1.23,56,1.993,57,1.13,63,0.668,64,0.502,66,1.482,77,2.449,82,1.124,84,1.728,93,1.362,100,0.579,110,0.63,119,0.603,138,3.484,144,0.959,151,1.176,154,1.971,157,0.938,158,2.204,160,0.472,162,2.239,164,1.725,166,1.692,168,1.445,170,1.482,175,3.229,176,2.953,179,0.691,192,0.469,193,1.582,197,0.816,200,1.413,201,1.589,202,2.513,203,3.628,231,0.638,237,2.963,241,0.651,243,0.63,245,0.534,246,1.634,247,1.459,252,2.458,258,1.119,259,1.465,260,1.199,265,1.07,271,3.34,283,1.508,304,0.384,305,1.373,306,1.992,310,1.092,312,0.55,314,0.757,317,1.105,322,0.774,327,0.703,334,0.903,339,1.489,342,1.443,343,1.916,345,2.424,363,2.246,369,0.497,381,0.624,386,1.362,416,1.438,417,0.725,421,0.93,422,0.774,428,1.569,438,2.204,446,1.856,450,0.712,456,1.144,462,1.223,463,0.794,466,0.679,471,1.489,472,7.217,474,0.627,483,1.674,487,1.062,489,0.651,500,2.409,515,0.99,539,0.651,541,0.588,552,0.816,565,0.527,566,1.385,577,1.505,583,2.462,591,0.819,593,0.938,599,1.199,602,3.567,608,0.751,619,1.181,624,1.344,649,2.134,650,2.519,655,0.564,660,2.284,661,2.734,662,3.127,666,0.996,669,0.61,678,0.668,679,0.751,682,1.087,689,1.043,727,2.504,729,3.121,730,2.039,734,1.336,735,2.146,736,2.73,745,1.517,748,1.176,763,0.88,804,0.816,811,1.035,818,1.45,839,0.824,873,1.134,875,1.489,877,2.377,895,0.996,951,0.787,981,0.679,1047,0.648,1050,0.654,1081,0.903,1119,0.716,1132,1.582,1160,0.824,1190,0.869,1216,0.859,1236,0.88,1290,0.74,1296,3.889,1350,3.97,1389,0.929,1405,1.415,1409,0.794,1425,0.915,1438,0.73,1441,1.798,1442,2.094,1456,0.787,1468,1.137,1480,0.61,1500,1.264,1512,2.129,1518,0.841,1553,1.767,1575,1.503,1608,0.869,1612,1.895,1615,0.824,1714,0.869,1720,1.068,1794,1.601,1919,1.45,1920,3.164,1923,1.916,1928,0.903,1937,2.094,2001,1.872,2068,2.499,2389,0.88,2453,0.996,2484,0.816,2488,3.631,2683,1.185,2745,0.996,2753,3.567,2763,0.891,2766,0.915,3199,1.04,3293,3.032,3500,0.996,3881,1.068,4134,4.229,4577,3.195,4598,1.249,4880,1.017,4881,1.017,5118,2.094,5163,2.024,6039,1.249,6041,3.195,6042,4.643,6371,3.032,6372,1.345,6373,1.345,6374,2.478,6375,1.345,6376,1.345,6377,5.003,6378,1.345,6379,1.345,6380,1.345]],["component/237",[1,0.4]],["title/238",[8,14.38,31,15.956,57,21.524,175,17.245,176,14.978]],["name/238",[31,0.48,176,0.45,586,0.626]],["text/238",[8,1.094,18,1.521,19,1.906,24,1.42,31,2.222,38,1.193,47,2.39,56,1.989,57,2.998,66,2.147,73,4.076,74,1.924,77,3.12,107,2.115,138,3.959,160,1.75,169,3.082,175,3.031,176,3.17,178,1.696,179,2.56,203,3.144,252,1.618,256,4.217,304,1.423,305,2.765,306,4.36,310,3.332,312,4.168,324,2.859,328,2.655,345,1.948,363,3.01,386,2.991,409,2.59,419,2.606,421,4.108,423,5.01,438,2.998,445,2.889,470,2.806,507,2.944,512,2.49,566,2.006,604,2.147,627,2.189,662,5.101,671,2.115,730,3.082,735,2.503,736,2.414,950,5.256,1011,4.191,1121,3.444,1292,3.77,1296,3.881,1401,3.499,1404,3.958,1432,2.379,1608,3.223,2067,3.691,2128,4.63,2564,2.827,4174,4.63,4182,4.393,4434,4.393,4972,6,6371,4.393,6381,4.989,6382,4.989]],["component/238",[1,0.4]],["title/239",[176,18.303,438,26.302,671,33.968]],["name/239",[176,0.624,671,1.158]],["text/239",[13,2.421,31,2.104,47,4.142,74,3.334,104,4.693,160,3.032,169,3.524,175,2.927,176,3.072,197,5.243,258,3.905,271,2.939,299,3.5,311,4.791,356,7.613,409,2.961,438,4.414,500,3.354,576,3.561,583,4.976,601,4.102,626,4.862,650,3.244,671,5.218,895,4.475,1024,3.612,1508,8.023]],["component/239",[1,0.4]],["title/240",[175,21.073,176,18.303,1296,41.119]],["name/240",[176,0.624,1296,1.402]],["text/240",[19,2.925,30,3.704,31,1.863,56,2.013,77,2.615,104,4.155,107,3.245,138,2.531,158,2.513,175,2.702,176,2.953,177,4.509,178,3.492,202,2.048,203,2.636,271,3.492,290,4.305,311,4.243,312,3.131,315,5.784,339,4.6,345,2.989,360,3.78,386,3.028,409,2.622,438,3.373,462,3.78,474,3.566,515,3.058,524,4.372,566,3.078,618,3.058,674,6.074,718,4.784,877,5.285,911,2.822,950,4.406,1024,3.198,1296,6.634,1553,5.458,1862,3.999,3000,5.784,4792,6.741,5162,5.919]],["component/240",[1,0.4]],["title/241",[175,21.073,176,18.303,419,41.856]],["name/241",[176,0.624,419,1.427]],["text/241",[0,1.65,8,1.578,19,2.75,45,3.855,47,3.448,57,2.363,107,4.177,138,3.995,169,4.016,175,2.591,176,2.76,179,3.694,252,2.334,271,2.446,283,2.538,305,3.989,306,4.81,310,3.171,312,4.03,324,2.254,328,3.831,335,4.766,363,2.865,386,3.897,419,3.76,421,3.697,445,4.835,507,4.248,566,3.962,618,2.875,627,4.324,736,4.767,743,5.132,950,5.672,1039,4.766,1432,3.432,1526,5.976,1527,5.132,1565,5.583,2564,5.583,4037,5.132]],["component/241",[1,0.4]],["title/242-1",[0,18.366,304,22.856,586,25.44]],["name/242-1",[]],["text/242-1",[]],["component/242-1",[]],["title/242-2",[2,17.393,267,28.808,438,23.675,671,30.575]],["name/242-2",[]],["text/242-2",[]],["component/242-2",[]],["title/242-3",[13,22.44,267,32.005,1296,41.119]],["name/242-3",[]],["text/242-3",[]],["component/242-3",[]],["title/242-4",[170,31.039,267,28.808,421,27.059,591,23.849]],["name/242-4",[]],["text/242-4",[]],["component/242-4",[]],["title/242-5",[304,22.856,736,38.768,1643,44.729]],["name/242-5",[]],["text/242-5",[]],["component/242-5",[]],["title/242-6",[17,49.554,736,38.768,1644,46.12]],["name/242-6",[]],["text/242-6",[]],["component/242-6",[]],["title/242-7",[736,38.768,1862,41.856,2405,51.764]],["name/242-7",[]],["text/242-7",[]],["component/242-7",[]],["title/242-8",[169,24.502,267,24.01,305,33.315,306,23.931,363,23.931,593,22.756]],["name/242-8",[]],["text/242-8",[]],["component/242-8",[]],["title/242-9",[11,24.768,1917,46.058,2223,41.513,3747,51.424]],["name/242-9",[]],["text/242-9",[]],["component/242-9",[]],["title/242-10",[11,19.057,93,21.948,247,14.347,254,23.352,623,30.754,1917,35.438,2224,35.047]],["name/242-10",[]],["text/242-10",[]],["component/242-10",[]],["title/242-11",[254,25.296,1565,34.062,1611,44.479,1917,38.388,2225,45.42,6383,55.784]],["name/242-11",[]],["text/242-11",[]],["component/242-11",[]],["title/242",[8,14.38,31,15.956,38,15.674,170,28.22,267,26.191]],["name/242",[38,0.471,170,0.848,267,0.787]],["text/242",[0,0.88,2,0.74,6,1.593,8,2.381,11,2.95,13,0.33,16,1.436,17,4.337,18,1.17,19,1.467,20,0.385,21,0.464,24,0.335,26,0.905,27,0.735,28,0.559,30,0.569,31,1.706,38,2.168,40,0.8,56,1.621,57,1.484,64,1.144,74,0.454,77,2.638,84,1.098,87,1.331,89,0.643,91,0.561,93,1.214,97,0.707,100,1.321,102,0.91,104,0.639,107,2.405,111,2.032,122,0.572,128,0.503,129,1.469,138,3.417,151,0.559,154,0.974,157,1.712,158,1.26,160,1.347,162,0.467,164,1.549,168,0.632,169,2.091,170,3.177,172,1.603,176,1.764,178,0.4,182,1.436,183,0.639,188,0.643,192,0.764,193,1.006,202,0.315,203,1.953,228,0.48,233,0.839,236,0.532,237,0.486,245,0.869,246,0.559,247,1.594,248,1.081,251,1.165,252,1.245,253,2.069,254,4.791,255,1.906,258,0.532,267,4.652,270,0.657,271,3.512,273,1.982,275,0.611,281,1.326,283,0.772,291,0.965,293,1.296,295,0.512,296,0.503,299,2.675,304,1.463,305,5.644,306,4.369,308,1.689,310,2.5,311,0.652,317,0.525,322,2.603,328,0.626,333,2.357,339,0.707,342,1.295,345,1.766,347,1.137,360,0.581,363,0.871,369,1.672,386,1.214,408,1.429,409,0.403,412,1.677,413,1.234,415,2.057,416,0.683,421,2.77,422,0.677,423,1.404,430,1.726,438,2.901,442,0.581,450,0.622,456,0.543,462,1.081,464,1.977,467,0.662,474,0.548,481,0.517,487,0.505,500,1.754,509,1.689,514,0.752,515,1.226,516,4.081,529,0.515,539,2.188,541,0.957,553,0.667,565,0.461,566,1.544,567,0.728,576,2.113,583,0.677,586,0.374,591,0.389,593,0.446,599,0.569,604,0.942,606,2.348,609,1.633,618,0.47,619,2.446,623,2.128,624,2.003,627,0.517,650,2.313,655,0.918,660,0.476,661,0.643,662,2.106,665,0.689,666,0.871,669,0.534,671,1.917,673,0.889,674,0.934,678,0.584,682,1.347,689,0.495,698,2.494,699,0.652,725,0.591,726,2.399,727,0.816,730,0.48,736,2.745,744,0.877,763,0.77,802,0.743,819,2.119,873,1.002,877,0.813,895,0.88,911,1.416,938,0.714,947,0.743,948,0.934,994,1.092,1093,0.889,1114,0.79,1115,0.801,1123,0.743,1150,0.752,1190,0.76,1223,0.825,1238,0.689,1247,0.752,1266,0.77,1271,2.425,1282,0.689,1285,0.995,1296,3.789,1324,0.934,1328,1.13,1350,1.01,1388,1.85,1393,0.561,1396,1.205,1397,0.854,1400,1.301,1405,0.672,1432,0.561,1450,0.839,1452,0.779,1480,1.742,1487,0.707,1543,0.701,1548,0.839,1549,0.79,1560,1.511,1565,1.739,1576,0.962,1577,0.91,1595,0.995,1607,2.059,1611,1.62,1643,0.657,1644,0.677,1658,0.743,1677,0.995,1731,1.368,1737,0.839,1824,2.848,1862,3.452,1917,5.793,2001,1.654,2043,2.769,2178,2.119,2204,0.707,2223,0.677,2224,0.743,2225,0.889,2405,0.76,2484,1.328,2516,1.62,2603,1.489,2663,2.435,3000,2.319,3299,1.037,3340,0.962,3358,0.714,3747,3.224,4188,0.889,4269,2.031,4412,1.092,4508,1.037,4558,0.995,4671,0.962,5159,1.037,5162,2.373,5259,0.995,5400,0.995,5647,0.995,6090,1.092,6383,1.092,6384,2.189,6385,1.177,6386,1.177,6387,1.177,6388,1.177,6389,1.177,6390,1.177,6391,1.177,6392,1.177,6393,1.177,6394,1.177,6395,1.177,6396,1.177,6397,1.177,6398,1.177,6399,1.177,6400,1.177,6401,1.177,6402,1.177,6403,1.177,6404,1.177,6405,1.177,6406,1.177,6407,3.068,6408,1.177,6409,1.177]],["component/242",[1,0.4]],["title/243-1",[160,31.609,586,28.616]],["name/243-1",[]],["text/243-1",[]],["component/243-1",[]],["title/243",[267,41.135]],["name/243",[267,1.091,586,0.867]],["text/243",[8,2.774,31,3.078,38,2.541,170,5.445,254,4.474,267,5.053,445,4.062,740,6.575,2564,6.025]],["component/243",[1,0.4]],["title/244-1",[0,18.366,304,22.856,981,40.428]],["name/244-1",[]],["text/244-1",[]],["component/244-1",[]],["title/244-2",[2,19.324,114,43.491,1393,38.203]],["name/244-2",[]],["text/244-2",[]],["component/244-2",[]],["title/244-3",[13,22.44,409,27.445,1244,45.403]],["name/244-3",[]],["text/244-3",[]],["component/244-3",[]],["title/244-4",[114,39.146,176,16.474,304,20.573,1047,34.723]],["name/244-4",[]],["text/244-4",[]],["component/244-4",[]],["title/244-5",[296,23.701,329,36.284,445,21.199,1049,33.979,1050,26.984,1621,46.902,3109,42.908]],["name/244-5",[]],["text/244-5",[]],["component/244-5",[]],["title/244-6",[77,14.5,170,18.266,203,14.613,228,17.3,254,17.861,267,16.953,283,14.965,346,24.629,415,22.734,591,14.035,1350,19.592]],["name/244-6",[]],["text/244-6",[]],["component/244-6",[]],["title/244",[8,11.301,31,12.539,170,22.177,254,21.685,267,20.583,445,19.686,740,31.869,2564,29.2]],["name/244",[740,1.69,2564,1.548]],["text/244",[0,0.283,1,0.428,2,0.298,8,1.494,11,1.1,13,0.346,18,0.976,19,1.794,20,0.405,27,1.432,28,0.587,30,1.109,31,2.076,38,2.547,40,0.452,54,0.614,56,1.235,57,1.312,64,0.855,66,0.986,74,0.477,77,2.816,82,1.039,87,0.536,93,0.489,97,0.743,100,0.986,101,0.563,107,1.694,110,1.498,113,0.781,114,1.244,115,0.667,118,0.981,120,1.463,121,0.781,131,0.841,138,3.066,139,1.252,142,0.897,150,0.62,151,0.587,154,1.017,157,0.867,158,1.312,160,1.646,162,0.491,164,1.612,168,1.535,169,2.943,170,4.587,172,1.664,176,1.214,188,0.676,192,1.117,193,1.471,197,1.39,203,2.73,205,0.532,218,0.73,228,1.305,231,1.896,237,0.511,243,1.072,246,1.087,247,1.214,252,3.313,253,0.566,254,3.038,255,0.614,258,1.446,259,1.7,264,2.022,265,0.534,267,4.142,268,2.821,270,0.69,271,0.42,273,0.799,275,0.642,276,0.604,278,0.526,281,0.534,283,4.071,288,1.498,291,0.545,296,3.083,302,1.12,304,0.654,305,2.945,306,3.157,308,0.68,310,1.411,312,3.489,314,0.695,316,2.169,317,1.022,321,1.33,322,0.712,324,0.387,329,4.963,333,0.568,334,1.537,339,0.743,345,0.895,346,1.33,359,0.819,363,0.912,368,0.981,369,0.457,377,1.858,379,0.522,383,1.39,386,0.906,409,1.097,410,1.279,412,4.148,415,2.14,416,1.33,421,0.464,428,1.459,445,2.431,456,0.571,460,0.857,462,0.611,467,0.695,469,0.981,470,1.289,471,0.743,487,0.53,489,0.598,500,1.55,514,0.79,515,0.915,531,0.604,538,1.942,541,1.4,545,1.924,549,0.587,565,1.565,566,2.359,577,0.54,586,0.727,591,0.409,600,0.854,603,0.773,604,0.986,608,1.279,618,0.494,619,1.092,623,0.685,624,1.56,627,1.405,628,0.723,643,1.48,649,0.617,650,1.499,653,0.79,660,0.5,669,0.561,679,0.69,682,1.006,683,1.045,703,1.44,718,0.773,724,0.867,725,0.62,727,0.461,728,0.781,729,1.934,730,2.166,735,1.607,736,0.598,737,0.808,739,0.642,740,4.694,751,0.65,777,3.019,778,0.79,779,1.176,781,1.598,788,0.712,789,1.634,805,1.19,807,1.103,811,2.846,831,1.447,873,1.465,887,0.79,948,0.981,950,1.319,981,1.156,1011,1.775,1036,0.819,1047,0.595,1049,2.875,1050,0.601,1061,0.717,1069,1.089,1078,0.75,1093,0.934,1105,1.498,1121,0.854,1123,0.781,1128,0.723,1135,1.417,1149,1.48,1192,1.089,1209,0.667,1210,0.799,1238,0.723,1244,0.701,1278,0.701,1282,0.723,1293,0.808,1295,2.283,1301,0.981,1304,0.584,1305,0.819,1307,1.045,1308,2.211,1309,1.937,1333,2.476,1345,1.634,1350,2.167,1390,2.264,1393,0.589,1400,1.694,1401,0.867,1405,0.706,1408,1.045,1409,1.89,1425,1.559,1432,0.589,1437,0.676,1486,0.934,1528,1.19,1529,0.981,1565,1.814,1608,0.799,1621,1.937,1658,0.781,1689,1.045,1701,0.717,1714,1.48,1800,1.828,1862,1.197,1994,2.12,1997,3.965,2010,0.881,2026,1.147,2161,2.423,2182,1.517,2184,3.725,2191,1.01,2484,0.75,2503,1.147,2518,1.147,2519,2.126,2564,4.833,2600,0.881,2692,0.934,2791,1.147,2872,1.089,2994,3.408,3107,1.147,3109,4.921,3238,1.147,3411,0.867,3516,1.089,3811,1.045,3881,1.818,4027,1.872,4094,1.045,4240,0.956,4266,1.045,4457,1.147,4499,1.045,4558,1.045,4601,1.089,4787,4.932,4789,1.147,4790,1.147,4938,2.018,5647,1.045,6410,5.867,6411,1.236,6412,3.708,6413,1.147,6414,1.147,6415,1.236,6416,1.236,6417,2.971,6418,1.236,6419,1.236,6420,1.236,6421,1.236,6422,1.236,6423,1.236,6424,2.291,6425,1.147,6426,1.236,6427,1.236,6428,1.236,6429,1.236,6430,1.236,6431,1.236,6432,1.236,6433,1.236,6434,1.236,6435,2.291]],["component/244",[1,0.4]],["title/245",[178,22.288,183,35.591,312,26.819,421,24.601,507,38.699]],["name/245",[183,0.837,312,0.63,421,0.578,445,0.589]],["text/245",[1,0.808,6,1.794,8,0.949,20,2.218,26,2.8,30,2.093,31,1.648,38,1.034,40,2.476,57,1.42,82,3.788,84,3.399,120,4.326,138,1.43,158,1.42,160,2.376,164,3.369,168,1.249,175,1.782,176,1.547,177,4.502,178,4.359,183,2.348,192,1.509,202,2.745,231,3.214,243,2.024,244,3.2,248,2.136,252,3.819,271,1.47,278,3.553,299,1.751,304,1.234,305,2.397,306,2.697,310,1.906,312,3.415,316,2.348,324,2.121,342,1.459,345,2.645,363,2.697,409,1.482,415,3.629,421,2.542,430,2.432,438,2.741,445,3.61,460,1.618,471,2.599,474,2.015,500,3.24,507,2.553,515,3.335,541,2.961,554,2.794,565,1.694,576,3.892,577,4.972,604,3.594,669,3.073,672,2.49,703,3.756,726,2.703,729,1.781,730,2.761,733,4.806,736,4.964,739,2.246,744,1.733,811,1.807,1113,2.732,1200,3.268,1331,2.986,1390,2.451,1432,2.062,1496,3.268,1512,2.675,1518,4.233,1538,4.768,1612,2.38,1720,5.375,1731,4.233,1994,2.864,2063,5.012,4972,5.375,6162,3.533,6365,4.014,6436,4.325]],["component/245",[1,0.4]],["title/246-1",[0,16.531,178,24.514,438,23.675,1296,37.012]],["name/246-1",[]],["text/246-1",[]],["component/246-1",[]],["title/246-2",[2,13.383,30,26.849,178,18.862,281,23.974,315,41.929,781,27.695,1296,28.477]],["name/246-2",[]],["text/246-2",[]],["component/246-2",[]],["title/246",[177,35.164,178,27.235,1296,41.119]],["name/246",[178,0.929,1296,1.402]],["text/246",[0,1.361,1,1.399,2,1.432,13,1.027,18,1.117,28,1.74,30,4.896,31,0.892,45,5.064,52,1.427,56,0.964,57,2.824,64,1.367,77,2.029,84,2.98,110,1.715,138,2.475,139,2.004,160,3.018,169,1.494,177,3.285,178,4.564,192,1.279,202,1.589,203,2.045,252,3.066,258,1.656,265,1.584,271,4.174,281,4.793,290,2.062,304,1.046,305,4.769,306,3.426,308,3.268,310,2.617,312,2.429,315,7.646,339,3.568,345,3.36,346,2.127,363,1.46,416,3.446,438,3.497,460,1.371,470,3.34,487,1.572,515,2.989,575,2.713,591,1.212,593,1.388,602,2.614,627,3.285,650,3.997,674,2.909,720,1.548,727,2.791,744,1.469,781,5.878,911,2.189,1296,6.891,1405,3.391,1504,3.229,1538,3.391,1553,4.234,1612,2.018,1862,3.91,1920,4.394,1928,3.984,3000,7.143,5162,7.824,5163,4.851,6437,8.604]],["component/246",[1,0.4]],["title/247-1",[247,16.953,326,28.663,384,30.968,494,25.127,1575,39.766]],["name/247-1",[]],["text/247-1",[]],["component/247-1",[]],["title/247",[]],["name/247",[247,0.398,381,0.715,439,0.815,494,0.591]],["text/247",[6,2.493,24,1.711,25,2.813,36,4.089,52,2.34,56,2.283,60,3.645,87,2.607,110,2.813,128,2.567,133,2.627,154,3.235,162,2.385,164,2.425,187,4.2,192,2.097,210,4.363,219,2.894,296,2.567,326,2.627,335,3.98,360,6.089,363,2.393,369,2.222,381,2.787,384,4.1,437,6.832,438,3.663,439,5.901,441,3.883,442,4.286,460,3.247,511,2.703,546,2.681,565,3.4,599,2.908,626,3.38,667,3.432,702,3.547,720,2.539,754,2.617,821,5.824,897,3.355,911,2.216,970,4.648,1154,3.308,1327,3.98,1369,3,1457,3.883,1458,4.15,1697,3.579,1891,4.91,1958,4.542,1960,6.712,2172,3.681,3096,4.648,3399,4.648,3515,4.648,3887,11.001,3889,5.08,3890,5.08,3891,7.337,3892,5.08,3893,4.91,3894,4.91,3895,5.08,3896,5.08,5827,5.578]],["component/247",[1,0.4]],["title/248-1",[409,30.871,876,68.101]],["name/248-1",[]],["text/248-1",[]],["component/248-1",[]],["title/248-2",[588,56.28]],["name/248-2",[]],["text/248-2",[]],["component/248-2",[]],["title/248-3",[176,20.588,247,23.302]],["name/248-3",[]],["text/248-3",[]],["component/248-3",[]],["title/248",[]],["name/248",[381,0.914,439,1.042,586,0.626]],["text/248",[1,1.299,8,2.525,16,3.252,18,1.362,24,1.272,26,1.848,38,1.068,54,2.219,55,2.163,56,1.176,77,3.286,128,1.909,158,1.467,159,2.054,168,2.463,177,3.742,192,1.559,200,1.835,201,2.063,203,1.539,214,3.817,215,7.294,245,1.774,247,2.205,258,3.852,271,3.542,276,2.185,291,1.97,312,1.828,323,2.41,326,1.954,342,2.345,345,1.745,374,3.086,381,4.46,384,2.111,403,4.545,413,1.797,417,2.41,419,2.335,428,2.036,437,2.737,438,3.621,439,5.087,493,4.545,494,1.713,496,2.394,539,2.163,600,4.799,601,2.121,629,3.135,634,2.594,667,3.969,677,4.956,689,1.881,690,3.086,748,4.564,754,1.946,759,4.49,774,2.888,788,2.573,797,2.888,895,1.797,897,2.495,911,1.648,929,2.764,1143,6.982,1216,2.855,1573,4.602,1575,2.711,1629,3.086,1709,3.187,1760,3.456,1788,3.456,1951,3.456,1953,3.546,1959,3.244,1982,3.244,1983,3.546,2089,3.456,2114,3.086,3119,3.244,3742,3.307,3893,3.652,3894,3.652,3900,3.652,3902,3.652,3909,7.51,3910,3.936,3912,3.936,3944,3.086,4186,3.652,5817,4.148,5818,5.874,5819,4.148,5820,3.936,5821,3.778,5822,3.936,5823,4.148,5824,3.936,5825,4.148,5826,4.148]],["component/248",[1,0.4]],["title/249-1",[21,35.532,101,41.06]],["name/249-1",[]],["text/249-1",[]],["component/249-1",[]],["title/249-2",[21,25.851,101,29.872,324,20.533,363,26.105,1328,33.847]],["name/249-2",[]],["text/249-2",[]],["component/249-2",[]],["title/249",[]],["name/249",[21,0.608,381,0.715,439,0.815,1024,0.644]],["text/249",[0,1.514,1,2.442,8,2.553,11,3.188,20,2.163,21,2.604,24,2.643,40,3.393,47,3.164,52,2.571,77,2.256,101,3.009,119,2.958,158,2.168,160,2.316,176,1.509,177,2.899,195,2.228,200,4.406,201,4.955,203,4.009,230,3.609,236,2.983,238,3.493,239,4.026,247,2.775,251,4.941,252,2.142,258,2.983,267,2.638,291,4.09,324,3.646,363,2.629,386,2.612,409,2.262,438,2.168,488,3.409,489,3.196,515,2.638,539,3.196,619,3.149,650,2.478,820,3.262,873,3.022,1024,2.759,1154,3.635,1305,4.373,1328,3.409,1350,3.049,2172,4.044,2198,6.869,2203,4.794,5816,4.887]],["component/249",[1,0.4]],["title/250-1",[21,25.851,101,29.872,324,20.533,363,26.105,409,22.46]],["name/250-1",[]],["text/250-1",[]],["component/250-1",[]],["title/250",[]],["name/250",[39,0.848,324,0.617,454,0.989]],["text/250",[0,0.84,1,2.333,2,1.432,8,2.999,11,2.57,20,1.201,21,1.445,24,1.044,40,1.34,52,1.427,57,1.203,77,2.029,82,1.663,95,5.992,101,1.67,159,1.685,160,1.286,175,0.964,176,0.837,177,1.609,200,2.437,203,3.484,209,3.446,230,2.004,232,1.622,235,3.791,236,4.57,238,3.238,239,3.732,247,1.935,251,1.951,252,1.189,257,4.583,267,2.989,271,2.925,291,2.617,324,2.694,363,1.46,380,3.37,384,4.465,386,1.45,409,2.034,420,1.904,438,1.203,485,2.835,488,1.892,489,1.774,493,3.883,494,2.868,496,3.181,499,3.099,515,1.464,529,1.603,534,2.873,539,1.774,560,3.711,619,4.507,625,2.428,634,4.993,650,2.228,652,1.977,659,4.064,667,3.391,687,2.571,698,4.184,701,1.609,759,5.559,820,1.81,831,5.434,873,1.677,911,1.352,1024,1.532,1060,3.013,1154,2.018,1167,6.502,1305,2.428,1377,2.713,1378,5.336,1457,2.369,1557,2.428,1558,2.713,1559,2.835,1573,2.428,1959,4.31,1985,2.909,2003,4.487,2006,2.77,2161,3.601,2172,2.245,2198,2.713,2203,2.661,2436,3.229,2437,3.229,2484,2.223,2488,3.586,2663,2.909,4550,3.099,4564,5.019,5816,2.713,5844,3.229,5845,5.511,5846,3.402]],["component/250",[1,0.4]],["title/251-1",[409,30.871,876,68.101]],["name/251-1",[]],["text/251-1",[]],["component/251-1",[]],["title/251-2",[8,19.765,324,28.222]],["name/251-2",[]],["text/251-2",[]],["component/251-2",[]],["title/251-3",[1,12.253,95,36.876,324,28.921,667,37.445]],["name/251-3",[]],["text/251-3",[]],["component/251-3",[]],["title/251",[]],["name/251",[39,0.848,454,0.989,586,0.626]],["text/251",[1,1.926,8,2.723,11,2.107,26,1.578,30,1.847,39,1.643,40,1.395,54,1.895,56,1.613,57,2.014,77,4.075,84,1.916,87,2.661,93,1.51,95,3.45,108,1.786,147,1.994,154,2.797,158,2.525,160,1.339,161,2.163,166,3.485,168,2.222,176,1.401,177,3.376,192,1.332,200,1.567,201,2.832,203,2.648,237,3.179,245,1.515,247,1.586,265,2.651,283,2.163,304,1.089,312,2.509,317,1.703,319,2.273,322,2.197,324,3.817,326,4.218,342,1.288,345,1.491,369,1.411,384,1.803,409,1.308,413,1.535,428,4.396,441,7.277,442,5.562,460,2.295,466,1.926,474,1.778,487,1.637,494,1.463,534,1.847,539,2.968,541,1.669,565,1.495,566,1.535,624,1.491,625,4.062,650,2.886,651,5.394,652,3.308,662,1.778,667,5.031,689,2.582,702,4.54,751,2.006,788,2.197,789,6.881,797,5.691,820,1.885,834,3.362,895,1.535,897,3.425,1086,3.227,1250,2.361,1328,1.971,1348,2.528,1350,1.762,1548,5.484,1609,2.18,1797,2.771,1947,5.403,1948,5.403,1949,6.773,1950,6.773,1951,2.952,1952,3.362,1953,3.029,1954,3.119,1958,2.884,2198,2.825,2703,5.233,5843,3.543]],["component/251",[1,0.4]],["title/252-1",[21,35.532,101,41.06]],["name/252-1",[]],["text/252-1",[]],["component/252-1",[]],["title/252",[]],["name/252",[21,0.608,39,0.663,207,1.43,454,0.773]],["text/252",[1,1.811,37,4.513,40,3.542,47,5.73,87,4.203,93,3.833,119,4.34,158,3.181,159,5.496,251,5.157,324,3.034,345,3.784,495,5.933,650,3.636,651,6.795,1275,6.12,1350,4.473,1609,6.829,1622,5.409,2198,7.17,5842,8.992]],["component/252",[1,0.4]],["title/253-1",[0,18.366,172,28.405,304,22.856]],["name/253-1",[]],["text/253-1",[]],["component/253-1",[]],["title/253-2",[2,19.324,202,21.441,227,34.887]],["name/253-2",[]],["text/253-2",[]],["component/253-2",[]],["title/253-3",[13,22.44,409,27.445,1393,38.203]],["name/253-3",[]],["text/253-3",[]],["component/253-3",[]],["title/253-4",[63,35.803,304,20.573,591,23.849,981,36.389]],["name/253-4",[]],["text/253-4",[]],["component/253-4",[]],["title/253-5",[6,29.915,21,28.433,593,27.303,1024,30.13]],["name/253-5",[]],["text/253-5",[]],["component/253-5",[]],["title/253-6",[21,28.433,101,32.856,595,31.039,1024,30.13]],["name/253-6",[]],["text/253-6",[]],["component/253-6",[]],["title/253-7",[57,26.302,237,33.118,596,39.567]],["name/253-7",[]],["text/253-7",[]],["component/253-7",[]],["title/253-8",[64,24.456,401,36.084,413,26.366,597,35.123,1220,34.253]],["name/253-8",[]],["text/253-8",[]],["component/253-8",[]],["title/253-9",[1024,33.474,1383,51.764,2229,51.17]],["name/253-9",[]],["text/253-9",[]],["component/253-9",[]],["title/253-10",[64,29.885,1220,41.856,2230,51.17]],["name/253-10",[]],["text/253-10",[]],["component/253-10",[]],["title/253-11",[8,14.38,38,15.674,460,24.529,589,39.766,1919,38.369]],["name/253-11",[]],["text/253-11",[]],["component/253-11",[]],["title/253-12",[39,38.789,553,51.071]],["name/253-12",[]],["text/253-12",[]],["component/253-12",[]],["title/253-13",[38,19.153,175,21.073,2233,60.543]],["name/253-13",[]],["text/253-13",[]],["component/253-13",[]],["title/253-14",[2234,57.221,6438,66.93,6439,66.93,6440,66.93]],["name/253-14",[]],["text/253-14",[]],["component/253-14",[]],["title/253-15",[39,35.241,131,37.754,524,31.689,1062,36.284,1419,42.908,6441,51.497]],["name/253-15",[]],["text/253-15",[]],["component/253-15",[]],["title/253-16",[212,63.571,1588,50.605,6442,67.723]],["name/253-16",[]],["text/253-16",[]],["component/253-16",[]],["title/253",[8,13.182,57,19.732,109,28.257,281,25.97,398,30.499,938,36.455]],["name/253",[398,1.386,938,1.657]],["text/253",[0,0.36,1,0.533,2,0.379,6,2.002,8,2.244,13,0.799,15,0.615,16,0.735,18,0.479,19,1.843,20,2.414,21,3.25,24,1.594,26,1.621,28,1.354,30,0.76,37,0.731,38,1.97,39,3.173,40,1.043,47,0.752,56,1.031,57,0.937,63,1.417,64,2.088,65,1.699,66,0.676,72,1.14,77,1.649,84,1.432,93,1.551,101,0.715,109,3.875,115,0.847,119,0.703,124,1.915,128,1.219,131,3.81,149,2.001,151,3.498,154,3.025,157,1.827,162,2.222,163,0.883,164,0.634,166,0.531,168,1.617,172,1.39,175,0.413,176,0.359,177,0.689,178,1.333,181,1.014,182,1.835,187,0.76,188,0.858,192,0.996,193,0.722,202,0.42,212,1.246,227,0.684,228,0.64,230,1.559,235,3.451,236,3.538,237,1.621,238,0.591,243,0.735,246,1.861,247,1.621,248,1.409,251,1.519,252,0.926,259,1.214,271,2.662,280,0.841,281,3.997,291,0.692,293,1.205,295,3.21,299,1.588,304,0.814,306,1.921,323,0.847,328,3.337,339,0.943,342,0.53,345,0.613,359,1.89,363,0.625,369,1.055,381,0.728,382,2.331,383,0.952,386,0.621,393,0.935,396,2.158,398,6.584,401,3.45,403,1.866,408,0.731,409,1.918,413,1.147,437,1.747,438,0.937,442,0.775,459,0.815,460,2.095,481,1.252,487,1.682,488,0.811,489,0.76,494,1.094,500,0.609,509,1.57,524,3.915,531,1.395,540,0.897,541,0.686,544,1.214,553,0.89,554,2.534,555,2.207,565,0.615,566,0.631,577,2.448,583,0.904,589,0.952,591,0.519,593,0.594,595,0.676,596,1.409,597,0.841,606,2.037,608,1.593,609,0.836,624,1.114,627,0.689,628,0.919,630,1.783,636,1.283,649,0.784,662,2.248,664,0.981,666,1.162,698,2.346,700,0.89,701,3.009,712,2.331,718,0.981,726,1.783,728,3.048,730,0.64,744,1.572,754,0.684,760,1.054,764,0.771,781,1.957,786,3.942,789,1.12,797,2.534,799,1.003,802,0.992,811,0.656,821,1.915,822,1.04,840,0.927,890,1.101,895,1.94,897,0.877,911,1.052,938,6.327,947,3.96,981,0.792,1024,2.016,1060,0.797,1061,0.911,1062,1.027,1096,1.383,1128,4.012,1132,1.003,1147,1.162,1150,2.505,1185,1.12,1203,0.935,1220,1.491,1235,1.068,1237,1.246,1243,1.246,1266,2.565,1272,1.162,1281,0.935,1290,0.864,1304,0.742,1348,1.04,1349,0.87,1383,1.014,1386,1.014,1393,0.749,1400,0.666,1404,2.264,1419,1.214,1432,0.749,1456,0.919,1480,2.54,1571,0.992,1576,2.331,1577,2.207,1578,1.822,1588,0.992,1600,1.101,1604,1.003,1609,2.24,1610,1.04,1611,1.162,1616,1.14,1618,2.648,1619,1.084,1622,2.189,1627,1.054,1701,0.911,1800,0.897,1919,0.919,1965,1.101,2045,1.187,2071,2.156,2109,1.283,2129,1.457,2143,1.283,2166,2.207,2198,1.162,2229,1.003,2230,1.003,2233,1.187,2234,1.246,2299,2.071,2486,3.315,2683,1.383,3219,1.283,3255,1.214,3298,1.457,3411,1.101,3625,4.249,4146,1.383,4186,1.283,4210,1.457,4300,3.315,4573,1.327,4602,1.383,5259,1.327,5830,1.383,5926,1.327,5997,1.214,6438,1.457,6439,1.457,6440,1.457,6441,1.457,6442,1.327,6443,1.57,6444,1.57,6445,4.825,6446,1.57,6447,1.57,6448,1.457,6449,4.825,6450,1.57,6451,3.922,6452,2.648,6453,2.854,6454,1.57,6455,1.57,6456,1.57,6457,1.57,6458,1.57]],["component/253",[1,0.4]],["title/254-1",[0,18.366,172,28.405,304,22.856]],["name/254-1",[]],["text/254-1",[]],["component/254-1",[]],["title/254-2",[202,21.441,227,34.887,1008,46.496]],["name/254-2",[]],["text/254-2",[]],["component/254-2",[]],["title/254-3",[2,19.324,409,27.445,1393,38.203]],["name/254-3",[]],["text/254-3",[]],["component/254-3",[]],["title/254-4",[13,20.198,63,35.803,304,20.573,981,36.389]],["name/254-4",[]],["text/254-4",[]],["component/254-4",[]],["title/254-5",[21,28.433,101,32.856,591,23.849,1024,30.13]],["name/254-5",[]],["text/254-5",[]],["component/254-5",[]],["title/254-6",[8,12.169,21,21.877,101,25.28,324,17.376,363,22.092,1328,28.644,1643,30.977]],["name/254-6",[]],["text/254-6",[]],["component/254-6",[]],["title/254-7",[64,29.885,593,30.333,1220,41.856]],["name/254-7",[]],["text/254-7",[]],["component/254-7",[]],["title/254-8",[1024,33.474,1383,51.764,2223,46.12]],["name/254-8",[]],["text/254-8",[]],["component/254-8",[]],["title/254-9",[64,29.885,1220,41.856,2224,50.605]],["name/254-9",[]],["text/254-9",[]],["component/254-9",[]],["title/254-10",[8,14.38,38,15.674,460,24.529,589,39.766,595,28.22]],["name/254-10",[]],["text/254-10",[]],["component/254-10",[]],["title/254-11",[39,38.789,596,44.507]],["name/254-11",[]],["text/254-11",[]],["component/254-11",[]],["title/254",[8,12.169,154,17.619,192,19.358,306,22.092,312,22.697,432,29.347,1612,30.537]],["name/254",[236,0.696,306,0.614,1149,0.996,1927,1.049]],["text/254",[0,1.154,1,1.555,2,0.602,3,2.123,6,1.035,8,2.317,11,3.062,12,1.847,13,1.205,15,0.531,18,1.729,21,1.367,24,1.225,28,1.645,30,1.677,37,1.615,38,0.324,39,0.584,45,2.305,47,0.65,55,2.435,56,0.656,57,1.652,61,0.65,63,0.673,64,1.293,77,1.184,80,0.951,82,1.132,84,1.252,87,0.588,100,0.584,101,1.137,108,1.622,109,0.637,110,0.635,121,0.856,133,1.091,151,0.644,154,1.598,158,0.819,162,1.375,168,0.721,169,0.553,172,0.885,187,0.656,192,1.209,193,1.978,202,1.152,227,0.59,235,4.952,236,5.387,237,1.031,238,4.351,239,4.767,241,0.656,247,1.113,248,0.67,252,2.336,255,0.673,260,2.435,271,0.461,303,0.629,304,0.712,306,5.137,312,0.555,324,1.085,326,2.48,333,2.313,342,1.698,363,0.54,369,1.861,379,0.573,383,0.822,386,0.536,389,1.288,395,0.684,396,0.746,405,0.923,408,0.632,409,1.474,413,1.003,415,3.343,421,0.509,428,0.618,432,1.32,438,2.621,445,0.518,455,0.736,456,1.6,460,2.335,464,0.593,474,0.632,481,1.095,487,0.581,492,1.076,495,3.822,496,3.039,499,1.146,508,1.025,515,0.542,523,0.794,539,0.656,546,0.605,554,2.239,565,1.358,568,0.774,580,2.109,589,0.822,591,1.664,593,0.513,595,0.584,596,0.67,599,0.656,600,4.658,603,2.166,604,1.074,608,0.757,619,0.647,624,0.974,625,1.652,626,2.42,627,1.521,650,0.936,653,0.866,655,0.569,662,0.632,667,4.93,669,1.132,677,3.068,690,3.475,716,3.328,724,0.951,734,0.731,743,1.779,744,3.051,754,0.59,774,3.665,779,0.696,788,1.995,789,0.967,797,1.612,799,0.866,812,0.692,813,0.936,820,1.232,840,2.046,848,2.064,881,1.003,905,0.967,911,0.5,921,2.064,951,0.794,981,0.684,1008,0.787,1024,2.102,1062,0.887,1114,0.91,1123,0.856,1128,2.518,1154,0.746,1181,1.811,1203,0.807,1220,1.304,1236,0.887,1253,0.984,1270,1.049,1272,1.003,1282,0.794,1283,1.108,1299,1.146,1304,0.64,1305,0.898,1328,0.7,1331,0.936,1332,1.146,1333,1.049,1350,0.626,1383,0.876,1393,0.647,1396,0.746,1428,1.003,1480,1.132,1538,0.774,1548,0.967,1558,1.003,1573,6.777,1612,1.373,1622,0.757,1629,0.936,1643,0.757,1648,0.923,1701,2.011,1709,3.068,1718,1.811,1731,3.545,1877,0.967,1893,0.856,1908,5.792,1919,2.945,1927,0.923,1933,1.674,1942,1.003,1988,1.594,1997,1.304,2048,1.194,2114,0.936,2203,0.984,2223,0.781,2224,0.856,2358,1.612,2590,1.146,2650,3.414,2651,1.108,2659,0.951,2696,1.194,2702,0.856,2903,0.967,3002,3.994,3120,1.108,3253,2.198,3259,1.108,3742,2.565,3743,4.111,3930,1.259,3931,1.259,3972,2.832,4037,1.779,4238,3.217,4643,0.936,5150,1.146,5488,2.316,5818,6.087,5820,1.194,5821,1.146,5822,2.198,5935,1.146,6459,1.356,6460,2.496,6461,3.466,6462,1.356,6463,1.356,6464,1.356,6465,1.356,6466,1.259,6467,3.466,6468,1.356,6469,3.466,6470,1.356,6471,2.496,6472,4.303,6473,4.303,6474,2.496,6475,2.496,6476,3.217,6477,1.146,6478,1.356,6479,1.356,6480,1.356,6481,1.356]],["component/254",[1,0.4]],["title/255-1",[0,18.366,172,28.405,304,22.856]],["name/255-1",[]],["text/255-1",[]],["component/255-1",[]],["title/255-2",[202,21.441,227,34.887,1008,46.496]],["name/255-2",[]],["text/255-2",[]],["component/255-2",[]],["title/255-3",[2,19.324,409,27.445,1393,38.203]],["name/255-3",[]],["text/255-3",[]],["component/255-3",[]],["title/255-4",[13,20.198,63,35.803,304,20.573,981,36.389]],["name/255-4",[]],["text/255-4",[]],["component/255-4",[]],["title/255-5",[21,28.433,84,36.19,101,32.856,591,23.849]],["name/255-5",[]],["text/255-5",[]],["component/255-5",[]],["title/255-6",[439,42.375,534,38.768,1643,44.729]],["name/255-6",[]],["text/255-6",[]],["component/255-6",[]],["title/255-7",[77,20.537,202,16.085,237,24.846,438,19.732,439,31.79,1644,34.6]],["name/255-7",[]],["text/255-7",[]],["component/255-7",[]],["title/255-8",[6,29.915,151,34.223,2405,46.593,5851,57.221]],["name/255-8",[]],["text/255-8",[]],["component/255-8",[]],["title/255-9",[21,28.433,101,32.856,593,27.303,1024,30.13]],["name/255-9",[]],["text/255-9",[]],["component/255-9",[]],["title/255-10",[21,23.698,235,26.487,236,27.151,1277,46.48,1968,47.692,2223,34.6]],["name/255-10",[]],["text/255-10",[]],["component/255-10",[]],["title/255-11",[24,17.112,166,20.329,202,16.085,634,34.882,759,38.834,2338,52.935]],["name/255-11",[]],["text/255-11",[]],["component/255-11",[]],["title/255-12",[8,12.169,21,21.877,101,25.28,324,17.376,363,22.092,1328,28.644,2224,35.047]],["name/255-12",[]],["text/255-12",[]],["component/255-12",[]],["title/255-13",[64,29.885,595,34.484,1220,41.856]],["name/255-13",[]],["text/255-13",[]],["component/255-13",[]],["title/255-14",[1024,33.474,1383,51.764,2227,44.407]],["name/255-14",[]],["text/255-14",[]],["component/255-14",[]],["title/255-15",[64,29.885,1220,41.856,3164,47.289]],["name/255-15",[]],["text/255-15",[]],["component/255-15",[]],["title/255-16",[8,14.38,38,15.674,460,24.529,589,39.766,596,32.38]],["name/255-16",[]],["text/255-16",[]],["component/255-16",[]],["title/255-17",[39,38.789,597,48.277]],["name/255-17",[]],["text/255-17",[]],["component/255-17",[]],["title/255-18",[38,19.153,175,21.073,2229,51.17]],["name/255-18",[]],["text/255-18",[]],["component/255-18",[]],["title/255-19",[31,17.55,377,41.852,1068,52.348,2230,46.058]],["name/255-19",[]],["text/255-19",[]],["component/255-19",[]],["title/255-20",[39,35.241,131,37.754,524,31.689,1062,36.284,1419,42.908,3177,41.06]],["name/255-20",[]],["text/255-20",[]],["component/255-20",[]],["title/255",[24,14.669,57,16.915,202,13.789,227,22.437,247,13.323,381,23.894,534,24.933,688,29.427]],["name/255",[381,0.914,534,0.953,688,1.125]],["text/255",[0,0.444,1,1.594,2,0.467,3,0.632,6,0.803,8,2.419,11,1.184,13,0.542,15,0.404,18,0.315,19,1.56,20,1.695,21,2.226,24,2.428,26,0.801,28,0.49,31,0.251,38,1.113,39,1.177,40,0.377,45,2.494,47,0.928,52,0.402,55,0.937,56,1.074,57,1.995,63,0.513,64,1.02,65,2.431,72,0.749,77,2.212,80,0.724,82,0.468,84,1.373,87,0.84,89,0.564,91,0.492,93,1.082,101,1.57,108,1.613,110,0.483,115,3.49,119,1.225,120,0.659,122,0.502,128,0.441,129,0.693,131,1.318,138,0.341,151,0.49,154,2.554,157,1.305,158,0.898,162,0.41,166,1.575,168,0.298,169,0.421,172,0.687,174,0.507,175,0.272,177,0.85,178,0.351,182,0.906,187,1.324,192,0.36,193,0.475,200,1.676,201,0.477,202,2.449,203,1.406,209,0.599,215,4.278,227,1.191,228,0.421,232,0.857,235,2.488,236,2.745,237,1.688,238,1.297,239,1.187,240,1.115,241,1.668,245,0.769,247,3.089,248,0.51,252,1.678,253,0.472,255,1.711,257,3.169,258,0.466,259,1.467,260,0.937,271,3.045,273,0.667,291,1.519,293,0.436,295,0.45,299,2.095,304,1.165,306,0.411,312,0.422,314,0.581,317,0.864,323,0.557,324,2.027,326,2.657,333,0.475,342,2.42,347,0.536,357,0.667,363,0.411,369,0.716,377,0.599,379,0.436,380,0.759,381,3.326,382,1.582,384,2.667,386,0.766,389,0.533,395,0.521,396,0.568,401,3.345,403,0.675,408,1.605,409,0.937,413,3.335,420,1.006,421,0.387,428,0.882,437,3.169,438,3.682,439,6.063,460,0.725,461,0.615,464,0.847,481,1.201,489,0.937,490,0.764,493,1.789,494,2.164,496,1.846,497,0.693,500,0.401,512,0.515,523,1.601,524,0.59,529,0.451,531,0.505,532,1.659,534,5.654,539,0.5,541,0.847,543,0.599,546,0.864,549,0.49,554,0.667,563,0.626,565,1.599,566,0.415,568,1.562,577,1.196,583,0.594,585,1.358,589,1.175,591,0.641,593,0.733,595,0.834,596,0.51,597,0.553,600,2.819,601,0.49,606,0.536,608,0.576,624,1.068,634,4.813,650,0.727,652,0.557,657,0.62,659,0.488,661,0.564,662,0.481,666,0.764,667,1.106,672,0.594,678,0.513,684,0.55,685,1.897,688,4.096,689,1.45,698,1.33,701,0.85,706,0.62,727,0.385,737,0.675,738,0.518,744,1.096,754,0.45,758,0.764,759,3.648,760,1.836,764,0.952,774,1.251,777,0.78,797,2.638,820,0.51,839,0.632,840,1.143,873,1.252,895,0.415,911,0.381,921,1.153,931,0.645,934,1.223,936,0.693,981,0.977,1008,0.599,1024,2.704,1032,0.724,1061,0.599,1062,0.675,1064,1.251,1068,0.749,1135,1.198,1150,0.659,1153,1.951,1154,0.568,1220,1.012,1241,0.684,1244,1.55,1272,0.764,1277,3.6,1290,2.562,1305,0.684,1328,1,1333,1.498,1348,0.684,1383,0.667,1390,0.585,1393,0.492,1400,0.821,1419,0.798,1432,0.492,1456,0.604,1461,0.609,1470,3.445,1480,1.852,1481,0.873,1484,0.604,1518,1.71,1521,0.632,1573,2.704,1610,0.684,1612,0.568,1637,0.844,1643,0.576,1644,0.594,1646,0.736,1709,2.457,1718,0.749,1760,4.7,1843,0.844,1968,0.819,1980,0.844,1983,1.537,2006,2.604,2186,1.498,2197,0.909,2203,0.749,2223,0.594,2224,0.652,2227,0.572,2229,0.659,2230,0.659,2338,0.909,2405,0.667,2659,0.724,2689,0.873,2703,0.703,3164,0.609,3177,0.764,3402,0.873,3410,0.909,3411,1.358,3879,1.637,3883,0.958,3897,2.539,3898,1.798,3899,2.539,3900,2.235,3901,0.958,3902,0.844,3904,0.958,3905,1.798,3906,1.798,3907,1.798,3908,1.798,4186,0.844,4282,1.637,4532,0.844,4643,0.713,5839,0.958,5851,0.819,5917,0.958,5918,0.958,5919,0.958,5926,1.637,5927,0.958,5941,0.958,5942,0.958,5943,0.958,5944,0.958,5948,0.958,6452,4.321,6477,0.873,6482,1.033,6483,1.033,6484,0.958,6485,1.033,6486,1.033,6487,1.033,6488,1.033,6489,1.033,6490,1.033,6491,1.033,6492,1.937,6493,1.033,6494,1.033,6495,1.033,6496,1.033,6497,1.033]],["component/255",[1,0.4]],["title/256-1",[0,18.366,202,21.441,227,34.887]],["name/256-1",[]],["text/256-1",[]],["component/256-1",[]],["title/256-2",[2,19.324,182,37.492,409,27.445]],["name/256-2",[]],["text/256-2",[]],["component/256-2",[]],["title/256-3",[13,20.198,63,35.803,304,20.573,981,36.389]],["name/256-3",[]],["text/256-3",[]],["component/256-3",[]],["title/256-4",[21,28.433,84,36.19,101,32.856,591,23.849]],["name/256-4",[]],["text/256-4",[]],["component/256-4",[]],["title/256-5",[6,29.915,151,34.223,1643,40.261,5851,57.221]],["name/256-5",[]],["text/256-5",[]],["component/256-5",[]],["title/256-6",[21,28.433,101,32.856,593,27.303,1024,30.13]],["name/256-6",[]],["text/256-6",[]],["component/256-6",[]],["title/256-7",[21,23.698,235,26.487,236,27.151,270,33.556,1277,46.48,2223,34.6]],["name/256-7",[]],["text/256-7",[]],["component/256-7",[]],["title/256-8",[8,14.38,38,15.674,460,24.529,589,39.766,595,28.22]],["name/256-8",[]],["text/256-8",[]],["component/256-8",[]],["title/256-9",[64,29.885,596,39.567,1220,41.856]],["name/256-9",[]],["text/256-9",[]],["component/256-9",[]],["title/256-10",[1024,33.474,1383,51.764,2228,52.391]],["name/256-10",[]],["text/256-10",[]],["component/256-10",[]],["title/256-11",[64,29.885,1220,41.856,3172,55.321]],["name/256-11",[]],["text/256-11",[]],["component/256-11",[]],["title/256",[24,13.692,108,22.506,176,16.799,192,16.779,214,19.086,215,26.468,2083,64.763]],["name/256",[214,0.612,248,0.761,460,0.577,2088,1.303]],["text/256",[0,1.478,1,1.498,2,1.555,6,3.325,8,2.183,13,1.138,18,1.238,21,3.16,24,1.835,28,1.928,38,2.654,45,3.454,56,1.068,63,2.017,64,2.405,77,3.118,84,2.038,87,1.762,98,3.07,101,2.937,108,3.751,151,3.804,154,1.29,162,1.612,164,1.639,177,1.783,182,1.901,192,1.417,202,1.087,213,6.301,214,5.351,215,6.34,227,1.769,235,2.841,236,3.621,247,1.667,252,2.091,259,1.729,260,1.966,270,2.268,273,4.165,281,1.755,283,2.273,299,1.645,304,1.159,306,1.617,312,1.662,316,2.205,324,1.272,345,2.517,409,2.208,438,1.334,460,4.548,462,2.006,472,2.162,515,1.623,540,2.32,549,1.928,576,1.673,577,2.818,589,2.464,591,1.343,593,1.538,595,1.748,596,2.006,619,1.937,622,2.726,650,3.975,684,2.162,689,1.71,734,2.19,751,2.135,781,2.027,813,2.805,887,2.594,911,1.498,936,4.326,981,2.05,1024,4.426,1216,2.594,1220,3.368,1241,2.69,1253,2.949,1272,3.006,1277,6.198,1300,3.434,1314,3.577,1383,2.624,1615,2.488,1643,2.268,1701,2.357,1808,3.006,1933,2.726,1975,5.678,1978,3.577,2201,3.006,2223,2.338,2228,2.656,2812,2.566,3172,2.805,5851,3.223,6498,9.126,6499,4.062]],["component/256",[1,0.4]],["title/257-1",[0,20.659,362,53.192]],["name/257-1",[]],["text/257-1",[]],["component/257-1",[]],["title/257-2",[2,17.393,202,19.299,227,31.402,1914,55.767]],["name/257-2",[]],["text/257-2",[]],["component/257-2",[]],["title/257-3",[13,20.198,63,35.803,304,20.573,981,36.389]],["name/257-3",[]],["text/257-3",[]],["component/257-3",[]],["title/257-4",[409,27.445,591,26.496,1393,38.203]],["name/257-4",[]],["text/257-4",[]],["component/257-4",[]],["title/257-5",[6,33.235,151,38.021,593,30.333]],["name/257-5",[]],["text/257-5",[]],["component/257-5",[]],["title/257-6",[21,31.589,488,41.359,595,34.484]],["name/257-6",[]],["text/257-6",[]],["component/257-6",[]],["title/257-7",[412,32.85,1067,42.154,1304,28.39,1565,34.062,1997,31.401,2227,33.315]],["name/257-7",[]],["text/257-7",[]],["component/257-7",[]],["title/257-8",[24,22.809,304,22.856,3164,47.289]],["name/257-8",[]],["text/257-8",[]],["component/257-8",[]],["title/257-9",[20,19.684,21,34.223,101,27.385,324,18.823,3165,39.305]],["name/257-9",[]],["text/257-9",[]],["component/257-9",[]],["title/257-10",[8,15.816,31,17.55,138,23.849,596,35.615]],["name/257-10",[]],["text/257-10",[]],["component/257-10",[]],["title/257-11",[31,17.55,671,30.575,1236,47.158,2228,47.158]],["name/257-11",[]],["text/257-11",[]],["component/257-11",[]],["title/257-12",[8,15.816,138,23.849,577,31.526,3172,49.794]],["name/257-12",[]],["text/257-12",[]],["component/257-12",[]],["title/257-13",[64,24.456,401,36.084,413,26.366,597,35.123,1220,34.253]],["name/257-13",[]],["text/257-13",[]],["component/257-13",[]],["title/257-14",[1024,33.474,1026,54.514,2229,51.17]],["name/257-14",[]],["text/257-14",[]],["component/257-14",[]],["title/257-15",[64,29.885,1220,41.856,2230,51.17]],["name/257-15",[]],["text/257-15",[]],["component/257-15",[]],["title/257",[57,19.732,93,23.775,260,29.084,671,25.483,911,22.161,1236,39.305]],["name/257",[93,0.779,260,0.953,3005,1.735]],["text/257",[0,1.443,2,1.267,6,0.936,7,3.512,8,1.381,11,0.775,13,1.104,14,1.299,18,0.688,19,0.862,20,1.291,21,2.819,24,2.555,31,1.532,37,1.051,40,1.441,45,1.209,52,0.878,57,0.741,63,1.12,64,2.667,74,0.87,77,0.771,82,1.024,84,1.132,92,1.475,93,3.726,101,2.393,107,0.957,110,1.845,133,1.724,138,2.798,151,3.393,154,1.252,157,0.854,158,2.347,160,0.791,162,0.895,168,2.833,170,0.971,176,1.2,192,1.376,202,0.604,204,1.139,227,0.983,238,1.484,247,1.02,248,1.947,252,2.319,254,0.95,260,3.047,265,0.975,267,2.098,270,1.26,271,3.554,304,2.896,311,1.251,324,1.645,342,2.412,345,0.881,362,1.332,369,0.834,380,0.884,383,5.131,401,1.242,409,1.351,412,5.36,413,1.586,415,1.209,428,1.796,438,2.067,451,1.88,462,1.947,474,1.051,488,1.165,500,1.53,509,3.935,512,1.126,521,3.129,541,0.986,549,3.393,565,1.545,573,5.274,576,0.929,577,2.296,591,0.746,593,0.854,595,0.971,596,1.114,597,1.209,598,1.458,601,1.071,622,1.514,627,0.99,650,0.847,665,1.32,671,5.047,720,0.953,744,3.775,745,2.415,788,1.299,820,1.114,873,1.804,911,2.898,981,1.139,1024,1.647,1026,1.535,1067,4.416,1145,5.545,1220,2.06,1235,1.535,1236,5.532,1238,1.32,1240,2.812,1293,2.578,1304,3.996,1317,1.475,1325,1.558,1353,2.862,1393,1.076,1400,2.669,1426,2.635,1432,3.002,1445,3.596,1456,1.32,1467,1.67,1472,2.094,1490,1.41,1517,1.638,1565,2.234,1615,1.382,1697,1.344,1822,1.582,1862,2.06,1864,1.67,1899,1.907,1914,1.745,1997,6.294,2050,1.705,2161,1.369,2182,2.611,2227,1.251,2228,1.475,2229,1.441,2230,1.441,2516,1.67,2564,1.279,2590,3.333,2812,5.343,3164,1.332,3165,1.475,3172,1.558,4101,1.843,4116,1.987,4172,1.907,4263,1.705,4745,1.705,5107,2.094,5534,3.473,5816,1.67,5836,2.094,6500,5.252,6501,7.86,6502,2.257,6503,3.943,6504,2.257,6505,3.943,6506,2.257,6507,2.257,6508,2.257,6509,2.257,6510,2.257,6511,2.257,6512,2.257,6513,2.257]],["component/257",[1,0.4]],["title/258-1",[170,34.484,326,35.025,1560,55.321]],["name/258-1",[]],["text/258-1",[]],["component/258-1",[]],["title/258-2",[342,30.403,1755,79.368]],["name/258-2",[]],["text/258-2",[]],["component/258-2",[]],["title/258-3",[326,39.397,503,55.188]],["name/258-3",[]],["text/258-3",[]],["component/258-3",[]],["title/258",[303,37.153,503,49.063,1560,55.321]],["name/258",[6514,4.451]],["text/258",[0,1.778,2,0.933,11,0.965,13,1.083,24,2.209,28,0.733,36,2.631,37,1.309,38,1.322,52,0.601,56,0.406,57,0.507,61,1.346,66,1.664,75,1.971,78,3.396,82,0.7,87,0.67,93,3.842,100,1.209,101,0.703,104,1.525,108,1.81,109,1.321,110,1.315,122,1.881,139,1.536,150,0.775,154,1.757,157,0.585,158,0.507,163,0.868,166,0.522,168,1.117,169,1.145,170,0.665,171,1.167,172,0.547,173,2.983,187,0.747,192,1.349,193,2.849,202,0.752,214,1.535,238,0.581,243,0.723,245,1.89,246,0.733,247,2.112,248,1.388,251,0.822,252,1.545,254,2.005,255,3.078,257,0.946,258,1.269,259,0.657,260,0.747,261,2.862,265,0.667,267,1.123,271,4.43,285,2.173,298,1.605,301,1.305,303,1.793,310,3.911,326,4.349,327,2.488,339,0.928,340,1.167,342,2.091,345,0.603,353,1.261,369,1.039,376,1.194,387,1.477,395,1.951,398,1.426,422,0.889,438,3.337,439,2.045,454,1.41,456,2.862,457,1.861,464,0.675,466,1.418,482,1.143,484,1.083,486,2.443,487,1.205,494,0.592,497,3.196,503,4.154,511,1.264,515,0.617,541,0.675,549,0.733,566,1.915,591,0.511,593,1.464,600,3.289,601,0.733,622,1.036,627,0.678,640,0.911,643,1.816,660,1.138,662,1.309,677,2.758,687,2.712,689,0.65,690,1.066,693,0.919,701,0.678,714,1.121,717,0.822,727,0.576,728,0.975,744,1.55,754,0.672,757,1.01,758,2.862,760,4.898,780,0.807,788,2.742,799,3.533,811,0.645,812,0.788,815,1.225,822,6.588,823,1.795,825,4.794,826,2.608,840,1.659,850,1.022,854,1.261,875,4.076,889,0.817,911,0.569,921,1.673,938,0.936,1038,1.756,1078,0.936,1123,0.975,1158,1.036,1198,1.94,1205,1.083,1208,1.194,1209,0.833,1220,0.807,1223,1.083,1253,1.121,1271,1.775,1282,0.904,1322,1.022,1366,0.827,1369,3.094,1396,0.85,1398,1.659,1432,0.736,1482,2.99,1498,1.101,1527,1.101,1552,1.305,1560,3.82,1562,8.554,1616,1.121,1687,1.022,1690,1.433,1691,1.433,1694,1.433,1695,1.433,1697,3.691,1699,1.433,1709,2.758,1731,1.756,1733,2.608,1755,1.36,1784,2.608,1833,2.04,1877,1.101,1893,0.975,1954,1.261,1982,1.121,2083,1.36,2118,3.289,2242,1.36,2483,3.525,2484,1.704,2890,1.225,2891,1.225,2906,2.758,3095,1.305,3281,1.305,3285,1.433,3325,1.305,3483,1.433,3690,1.433,3742,2.862,3743,1.261,3747,7.094,3972,1.261,3973,1.305,4007,1.36,4027,1.261,4931,1.261,5909,1.433,5910,1.433,5911,1.433,6282,1.433,6515,1.544,6516,1.544,6517,4.763,6518,1.544,6519,1.544,6520,1.433,6521,1.544,6522,1.544,6523,1.544,6524,1.544,6525,1.544,6526,1.544,6527,1.544,6528,5.532,6529,1.544,6530,1.544,6531,1.544,6532,1.544,6533,1.544,6534,1.544,6535,1.544,6536,1.544,6537,1.544,6538,1.544,6539,1.544,6540,1.544,6541,1.544,6542,1.544,6543,2.81,6544,1.544,6545,1.544,6546,2.81,6547,2.81,6548,1.544,6549,3.867,6550,1.544,6551,5.532,6552,1.544,6553,1.544,6554,1.544,6555,2.81,6556,1.544,6557,1.544,6558,1.544,6559,1.544,6560,1.544,6561,1.544,6562,1.544,6563,1.544,6564,1.544,6565,3.867,6566,3.867,6567,3.867,6568,3.867,6569,3.867,6570,1.544,6571,1.544,6572,1.544,6573,1.544,6574,1.544,6575,1.544,6576,1.544,6577,1.544,6578,1.544,6579,1.544,6580,1.544,6581,1.544,6582,1.544,6583,1.544,6584,1.544,6585,1.544,6586,1.544,6587,1.544,6588,1.544,6589,2.81,6590,1.544,6591,1.544]],["component/258",[1,0.4]],["title/259-1",[0,20.659,586,28.616]],["name/259-1",[]],["text/259-1",[]],["component/259-1",[]],["title/259-2",[2,15.814,31,15.956,247,16.953,294,25.767,1409,38.699]],["name/259-2",[]],["text/259-2",[]],["component/259-2",[]],["title/259-3",[5,25.97,31,14.627,247,15.542,294,23.622,748,28.524,1409,35.477]],["name/259-3",[]],["text/259-3",[]],["component/259-3",[]],["title/259-4",[9,23.08,31,12.539,247,13.323,294,20.25,297,31.554,1409,30.413,2508,35.059,4017,36.137]],["name/259-4",[]],["text/259-4",[]],["component/259-4",[]],["title/259",[294,35.418,1409,53.192]],["name/259",[294,1.074,1409,1.612]],["text/259",[0,1.375,2,0.895,5,1.603,9,1.662,15,1.454,18,1.131,31,2.942,40,1.357,158,1.218,168,1.732,169,1.513,176,2.63,187,1.796,214,2.38,229,7.473,247,2.977,265,1.603,271,2.039,278,2.552,294,5.288,295,4.142,297,6.557,299,2.428,304,1.711,308,2.042,342,2.023,345,1.449,438,2.845,451,4.132,456,1.713,479,3.078,500,2.327,514,2.37,541,1.622,549,5.082,576,3.569,582,3.83,586,1.178,639,5.256,660,1.502,689,2.524,721,2.694,727,3.232,729,2.47,736,2.902,748,5.289,778,3.83,895,3.485,911,1.368,1151,5.984,1231,4.527,1280,3.268,1409,7.995,1480,2.721,1500,3.06,1946,2.562,2484,2.251,2508,7.584,2556,6.7,4017,6.671,4745,2.804,6161,2.694,6234,3.444,6592,3.444]],["component/259",[1,0.4]],["title/260-1",[0,20.659,586,28.616]],["name/260-1",[]],["text/260-1",[]],["component/260-1",[]],["title/260-2",[2,12.428,31,12.539,169,21.004,229,31.251,247,13.323,294,20.25,811,21.528,2556,29.2]],["name/260-2",[]],["text/260-2",[]],["component/260-2",[]],["title/260-3",[5,25.97,31,14.627,247,15.542,294,23.622,748,28.524,811,25.113]],["name/260-3",[]],["text/260-3",[]],["component/260-3",[]],["title/260-4",[9,23.08,31,12.539,247,13.323,294,20.25,297,31.554,811,21.528,2508,35.059,4017,36.137]],["name/260-4",[]],["text/260-4",[]],["component/260-4",[]],["title/260",[4938,63.511,6183,66.93,6593,72.12,6594,72.12]],["name/260",[229,1.195,294,0.774,811,0.823]],["text/260",[0,0.481,2,0.892,5,0.907,9,0.94,15,0.822,18,0.64,31,2.541,38,0.885,56,0.552,66,1.593,74,1.427,82,0.952,93,0.83,115,1.132,122,1.021,133,2.615,154,1.9,157,1.879,158,1.629,168,0.606,169,0.856,175,1.305,176,2.443,177,0.921,187,1.016,193,0.965,214,1.468,229,6.626,240,1.208,245,2.708,246,0.996,247,2.237,248,1.827,254,2.089,260,1.016,271,2.941,278,1.575,293,0.887,294,5.081,295,2.605,296,0.897,297,4.179,299,3.049,304,1.707,308,1.155,342,2.541,345,0.82,363,1.473,379,2.527,395,1.059,409,1.268,438,2.988,445,3.629,448,3.023,451,2.853,459,1.09,466,1.059,467,3.365,479,2.547,487,1.587,500,1.436,541,0.918,546,2.669,549,4.955,576,4.586,577,0.918,582,3.169,586,0.666,599,1.016,608,1.172,618,1.478,624,0.82,627,1.624,639,3.629,660,0.85,672,1.208,689,1.557,703,1.664,727,3.034,729,2.464,748,5.075,764,2.438,778,2.363,779,1.077,811,5.752,818,2.165,895,3.271,897,3.34,911,1.364,1151,3.427,1165,2.42,1231,1.933,1250,2.289,1275,3.779,1317,1.373,1409,1.239,1422,1.228,1438,1.139,1456,1.228,1480,1.679,1496,1.586,1500,3.053,1646,1.497,1728,3.128,1800,2.113,2180,2.312,2181,1.172,2508,6.914,2556,6.061,2650,1.665,2653,1.774,3092,2.796,3361,1.774,4017,4.196,4423,1.715,4429,1.774,4584,3.259,4672,2.862,5005,1.665,5193,4.747,5648,1.774,5744,6.011,6161,2.686,6592,3.434,6595,2.099,6596,3.701,6597,3.701,6598,2.099,6599,2.099,6600,2.099,6601,2.099,6602,2.099,6603,3.701]],["component/260",[1,0.4]],["title/261-1",[0,20.659,586,28.616]],["name/261-1",[]],["text/261-1",[]],["component/261-1",[]],["title/261-2",[2,17.393,31,17.55,229,43.739,2556,40.868]],["name/261-2",[]],["text/261-2",[]],["component/261-2",[]],["title/261",[229,54.659,2556,51.071]],["name/261",[229,2.7]],["text/261",[0,1.54,2,1.032,6,2.786,15,1.676,18,1.304,31,2.757,40,2.455,52,1.666,56,1.125,66,1.842,74,1.65,82,1.941,93,1.692,133,1.87,138,1.415,154,1.359,157,1.62,158,2.205,168,1.94,175,2.181,176,2.999,187,2.07,188,2.338,192,1.493,214,1.698,229,8.193,247,1.106,248,2.113,260,2.07,285,3.309,293,4.955,294,4.257,295,1.863,297,2.62,363,1.704,467,4.664,479,2.196,489,2.07,546,1.909,549,3.188,565,1.676,582,2.733,586,1.359,639,2.595,660,1.732,664,2.674,678,3.335,689,1.801,699,2.372,700,2.425,717,3.575,727,3.093,729,1.762,748,3.188,779,2.196,794,3.106,811,3.464,911,1.578,1053,2.798,1128,2.504,1151,5.725,1203,2.548,1211,3.496,1231,5.332,1266,2.798,1280,3.768,1409,6.024,1437,3.671,1454,3.617,1494,3.166,1500,2.183,1518,2.674,1526,2.595,1800,2.444,1933,2.871,1946,4.638,1988,2.733,2072,3.496,2216,3.496,2508,2.911,2556,7.351,4017,3.001,4584,9.539,4745,3.233,4903,2.764,6210,3.971,6604,4.279,6605,4.279]],["component/261",[1,0.4]],["title/262-1",[0,18.366,172,28.405,304,22.856]],["name/262-1",[]],["text/262-1",[]],["component/262-1",[]],["title/262-2",[2,19.324,409,27.445,1244,45.403]],["name/262-2",[]],["text/262-2",[]],["component/262-2",[]],["title/262-3",[5,31.159,114,39.146,176,16.474,304,20.573]],["name/262-3",[]],["text/262-3",[]],["component/262-3",[]],["title/262-4",[9,24.854,381,25.73,409,19.007,445,21.199,2180,34.674,6063,66.894]],["name/262-4",[]],["text/262-4",[]],["component/262-4",[]],["title/262-5",[445,30.611,2457,60.543,6063,65.457]],["name/262-5",[]],["text/262-5",[]],["component/262-5",[]],["title/262-6",[381,30.404,409,22.46,2180,40.973,2458,49.546,6063,53.567]],["name/262-6",[]],["text/262-6",[]],["component/262-6",[]],["title/262-7",[445,22.965,604,25.871,811,25.113,1049,36.808,1686,32.41,3109,46.48]],["name/262-7",[]],["text/262-7",[]],["component/262-7",[]],["title/262-8",[393,47.707,811,33.474,6606,74.358]],["name/262-8",[]],["text/262-8",[]],["component/262-8",[]],["title/262-9",[393,42.941,811,30.13,1061,41.852,6607,66.93]],["name/262-9",[]],["text/262-9",[]],["component/262-9",[]],["title/262-10",[445,30.611,1158,53.761,2005,49.554]],["name/262-10",[]],["text/262-10",[]],["component/262-10",[]],["title/262-11",[327,37.675,538,43.739,1158,48.391,5068,60.957]],["name/262-11",[]],["text/262-11",[]],["component/262-11",[]],["title/262-12",[538,43.739,1158,48.391,2604,57.221,5069,60.957]],["name/262-12",[]],["text/262-12",[]],["component/262-12",[]],["title/262-13",[445,27.553,2553,50.576,6608,66.93,6609,66.93]],["name/262-13",[]],["text/262-13",[]],["component/262-13",[]],["title/262",[175,14.594,176,12.676,182,25.965,268,33.341,312,22.697,445,21.199,740,34.319]],["name/262",[181,1.273,182,0.922,312,0.806]],["text/262",[0,0.421,1,0.343,2,0.443,4,2.432,5,0.793,6,0.762,8,0.721,9,0.823,15,1.287,18,0.56,19,0.702,31,2.072,38,0.439,46,1.066,47,0.88,52,1.279,56,1.428,57,0.603,61,0.88,64,1.226,66,1.414,77,1.123,85,2.176,100,0.79,101,1.497,107,1.891,114,0.997,130,1.333,138,2.294,143,1.232,148,2.305,150,1.649,151,1.559,157,1.688,158,2.05,160,0.644,163,2.508,168,2.681,169,2.545,170,0.79,172,0.651,175,1.982,176,2.038,179,0.942,181,2.123,182,5.069,192,1.894,195,1.505,197,1.114,203,1.131,204,2.25,218,1.084,241,1.59,243,1.538,248,0.907,250,1.268,252,1.447,264,2.817,265,1.927,268,3.752,271,2.562,293,0.776,295,0.8,296,2.319,304,0.937,305,1.821,306,2.762,310,0.809,311,1.018,312,3.083,316,1.784,324,0.575,327,2.836,333,2.495,334,1.232,342,0.619,345,1.741,363,3.208,377,1.907,379,0.776,381,2.895,386,0.726,393,3.233,409,3.291,416,1.066,417,0.99,421,1.233,422,1.057,424,1.232,428,0.837,445,4.448,451,0.876,489,0.889,494,0.704,500,2.107,501,2.316,538,5.63,541,0.803,543,1.066,547,1.288,549,0.871,565,0.719,566,2.511,583,2.567,601,0.871,604,1.414,618,2.494,624,1.741,627,0.806,649,0.917,650,0.689,655,2.277,664,2.053,672,1.057,682,0.806,689,0.773,703,0.826,717,0.977,724,1.288,727,0.685,729,2.572,730,1.339,735,0.921,736,1.59,740,6.816,744,1.317,746,1.5,748,1.559,764,1.614,777,2.483,789,1.309,799,2.099,811,3.878,894,1.268,905,1.309,911,0.677,950,1.057,1049,2.731,1061,1.907,1084,1.552,1123,1.16,1128,1.923,1134,1.309,1158,6.643,1180,1.173,1244,2.527,1247,1.173,1250,3.358,1275,1.16,1290,1.011,1293,2.149,1309,2.778,1349,1.018,1350,1.517,1365,1.617,1405,1.049,1409,1.084,1432,1.567,1437,1.004,1456,1.923,1484,1.075,1490,1.147,1500,0.937,1529,4.308,1540,1.552,1542,2.778,1622,1.025,1649,1.5,1686,0.99,1737,1.309,1767,1.216,1800,1.049,1857,1.704,1942,3.3,1943,3.928,2005,1.136,2010,1.309,2180,4.709,2457,1.388,2458,1.388,2484,1.114,2488,0.88,2541,1.309,2553,1.288,2604,4.308,2618,1.201,2640,2.236,2776,1.617,2818,1.704,3076,1.5,3109,3.449,3286,1.704,3331,1.617,3378,1.617,3881,1.457,4240,1.42,4249,1.359,4250,1.359,4251,1.359,4254,4.782,4266,1.552,4299,1.704,4415,1.552,5068,1.552,5069,1.552,5150,2.778,5224,1.457,5563,3.05,6063,7.288,6209,1.359,6264,4.139,6363,1.617,6412,1.704,6413,1.704,6414,1.704,6606,1.704,6607,1.704,6608,5.039,6609,5.039,6610,1.836,6611,3.286,6612,1.836,6613,1.836,6614,1.836,6615,1.836,6616,1.836,6617,1.836,6618,1.836,6619,1.836,6620,1.836,6621,3.286,6622,1.836]],["component/262",[1,0.4]],["title/263-1",[160,31.609,586,28.616]],["name/263-1",[]],["text/263-1",[]],["component/263-1",[]],["title/263",[175,17.245,176,14.978,312,26.819,324,20.533,421,24.601]],["name/263",[176,0.45,324,0.617,586,0.626]],["text/263",[31,2.215,57,2.988,77,3.11,138,3.01,169,3.711,175,3.316,176,3.121,179,4.672,182,4.26,268,5.47,304,2.597,312,4.704,324,2.851,421,3.415,438,2.988,445,4.817,507,5.373,624,3.555,736,4.405,740,7.113,2564,5.158,2640,6.194]],["component/263",[1,0.4]],["title/264",[31,15.956,175,17.245,176,14.978,179,33.65,740,40.553]],["name/264",[179,1.011,736,0.953,740,1.219]],["text/264",[0,0.638,1,0.52,2,1.14,7,1.368,8,1.35,13,0.78,15,1.091,19,1.805,20,0.912,24,0.793,28,2.242,31,3.025,40,1.018,45,2.531,47,3.476,56,1.619,63,1.382,64,1.038,66,2.65,77,2.776,84,1.397,100,2.034,101,2.153,104,1.511,107,2.003,126,1.688,138,2.036,150,1.397,151,1.321,159,1.279,162,1.875,168,2.72,169,3.312,172,1.675,175,3.188,176,2.992,178,1.606,179,4.532,181,1.799,182,4.406,189,3.86,192,0.971,195,2.741,202,1.264,203,2.498,228,3.312,237,1.151,241,3.51,244,2.06,247,0.72,248,1.375,252,0.903,259,1.185,264,3.888,265,1.203,268,1.673,281,2.042,287,4.885,288,2.881,293,1.176,304,0.794,306,1.108,311,1.543,312,2.968,324,0.872,334,1.868,335,1.843,345,2.404,356,2.452,363,1.881,374,3.263,377,1.616,379,1.176,381,1.291,386,1.869,387,1.463,388,2.104,389,1.437,409,2.109,417,1.501,421,1.773,432,1.472,445,3.374,460,1.041,470,1.566,474,2.201,479,1.429,487,1.194,507,3.634,515,1.112,537,1.643,545,1.673,549,2.921,560,1.74,566,2.917,591,0.921,593,1.054,596,1.375,603,1.74,618,1.112,643,1.799,655,1.167,730,1.135,736,4.273,740,5.462,744,1.116,754,2.057,757,1.82,763,1.82,950,2.72,1153,1.985,1154,1.532,1209,1.501,1244,2.678,1304,4.447,1333,2.153,1366,1.491,1392,3.888,1459,1.985,1687,1.843,1964,2.274,2016,1.705,2049,2.584,2106,1.705,2160,2.021,2180,3.847,2181,1.554,2327,5.204,2488,3.476,2516,2.06,2564,3.489,2640,4.936,2890,2.209,2891,2.209,3211,4.385,3212,4.385,3213,2.584,3215,2.584,3255,2.153,4249,2.06,4250,2.06,4251,2.06,4639,2.274,4972,2.209,6362,2.584,6363,4.161,6623,2.784,6624,2.784]],["component/264",[1,0.4]],["title/265",[176,13.731,312,24.586,421,22.553,445,22.965,507,35.477,2564,34.062]],["name/265",[445,1.044,736,1.322]],["text/265",[0,0.895,2,0.942,8,1.712,13,1.093,18,1.19,19,1.492,20,2.046,31,2.375,45,4.78,47,4.676,52,1.52,56,1.027,57,1.282,64,1.456,66,1.68,101,1.779,107,1.655,138,2.066,157,2.365,158,1.282,162,1.549,164,1.575,166,1.32,168,1.128,169,2.546,172,1.384,175,2.987,176,2.854,179,5.343,195,2.107,204,1.97,228,1.591,230,3.414,252,2.026,268,2.346,270,2.179,304,1.782,305,2.164,306,3.553,310,1.72,311,3.462,312,1.597,314,3.513,316,2.119,324,1.223,328,3.324,342,2.107,345,1.524,346,2.266,363,1.554,377,2.266,386,1.544,409,1.337,417,2.105,421,1.465,438,2.051,445,5.071,470,2.196,500,1.515,507,4.608,545,3.753,546,1.741,549,1.853,566,1.57,576,3.216,577,3.413,589,2.368,591,1.291,608,2.179,624,2.439,627,1.713,720,1.649,736,5.037,739,2.027,740,4.829,743,2.784,811,3.262,896,2.052,950,2.247,1039,4.136,1160,2.391,1244,2.212,1366,3.346,1401,2.738,1417,3.098,1432,2.978,1501,3.019,1529,3.098,1565,2.212,1574,2.368,1687,2.585,1718,2.834,1737,2.784,1893,2.466,2001,2.95,2067,2.889,2184,3.098,2564,5.899,2640,2.656,2890,3.098,2891,3.098,3109,3.019,3252,3.623,3255,3.019,3308,3.098,4037,4.454,4972,3.098,5105,3.623,6520,3.623,6625,3.904,6626,3.904,6627,3.904,6628,3.904,6629,3.904]],["component/265",[1,0.4]],["title/266-1",[0,18.366,172,28.405,304,22.856]],["name/266-1",[]],["text/266-1",[]],["component/266-1",[]],["title/266-2",[202,21.441,227,34.887,1008,46.496]],["name/266-2",[]],["text/266-2",[]],["component/266-2",[]],["title/266-3",[2,17.393,63,35.803,304,20.573,981,36.389]],["name/266-3",[]],["text/266-3",[]],["component/266-3",[]],["title/266-4",[13,22.44,21,31.589,101,36.503]],["name/266-4",[]],["text/266-4",[]],["component/266-4",[]],["title/266-5",[8,12.169,107,23.525,138,18.35,317,24.752,342,18.719,905,39.566,1047,26.716]],["name/266-5",[]],["text/266-5",[]],["component/266-5",[]],["title/266-6",[8,10.548,11,16.517,138,15.905,598,31.073,618,19.212,1024,20.094,1050,23.388,1697,28.638,2011,31.848]],["name/266-6",[]],["text/266-6",[]],["component/266-6",[]],["title/266-7",[8,12.169,21,21.877,101,25.28,324,17.376,363,22.092,1052,29.533,1328,28.644]],["name/266-7",[]],["text/266-7",[]],["component/266-7",[]],["title/266-8",[64,29.885,591,26.496,1220,41.856]],["name/266-8",[]],["text/266-8",[]],["component/266-8",[]],["title/266-9",[1024,33.474,1383,51.764,1643,44.729]],["name/266-9",[]],["text/266-9",[]],["component/266-9",[]],["title/266-10",[64,29.885,1220,41.856,1644,46.12]],["name/266-10",[]],["text/266-10",[]],["component/266-10",[]],["title/266",[8,11.301,11,17.696,31,12.539,120,32.908,175,13.552,176,11.771,342,17.383,2011,34.121]],["name/266",[8,0.599,2011,1.809]],["text/266",[0,0.878,1,2.322,2,0.924,8,2.552,11,3.319,13,1.073,16,1.792,18,1.167,21,2.425,24,1.751,28,1.817,31,0.932,32,2.834,38,2.31,52,1.491,55,1.853,56,1.007,63,1.901,64,2.294,77,3.526,84,1.922,101,2.802,107,4.098,108,1.792,109,2.891,138,3.413,157,1.45,158,1.257,160,2.703,172,1.358,175,1.007,176,0.875,202,1.025,205,2.647,209,2.222,227,1.667,238,3.321,239,3.828,247,1.59,252,3.135,265,1.655,271,1.302,304,1.755,306,2.449,314,2.154,316,2.079,317,4.311,324,2.414,342,3.261,363,1.525,379,1.618,389,3.979,410,2.138,413,1.54,436,2.323,460,4.219,463,3.63,539,1.853,568,2.187,591,1.266,598,6.245,608,2.138,618,1.53,619,4.208,655,1.606,812,1.954,820,1.891,831,2.419,905,5.496,981,1.932,1008,2.222,1024,4.988,1047,1.844,1050,1.862,1052,2.038,1154,2.107,1220,3.213,1272,5.703,1328,3.175,1332,5.199,1383,2.474,1643,2.138,1644,2.204,1697,3.662,1798,3.372,2011,7.182,2161,2.323,2491,7.016,2661,3.554,2903,2.731,4641,3.372,4643,2.644,6200,3.554,6477,3.237,6630,3.83,6631,3.83,6632,3.83,6633,3.83]],["component/266",[1,0.4]],["title/267-1",[0,20.659,362,53.192]],["name/267-1",[]],["text/267-1",[]],["component/267-1",[]],["title/267-2",[202,21.441,227,34.887,1008,46.496]],["name/267-2",[]],["text/267-2",[]],["component/267-2",[]],["title/267-3",[2,19.324,409,27.445,1393,38.203]],["name/267-3",[]],["text/267-3",[]],["component/267-3",[]],["title/267-4",[13,22.44,21,31.589,488,41.359]],["name/267-4",[]],["text/267-4",[]],["component/267-4",[]],["title/267-5",[157,22.756,182,28.127,283,21.195,342,20.277,494,23.035,1047,28.941]],["name/267-5",[]],["text/267-5",[]],["component/267-5",[]],["title/267-6",[20,19.684,21,23.698,101,27.385,324,18.823,1050,29.23,1328,31.029]],["name/267-6",[]],["text/267-6",[]],["component/267-6",[]],["title/267-7",[8,17.571,138,26.496,1052,42.644]],["name/267-7",[]],["text/267-7",[]],["component/267-7",[]],["title/267-8",[54,35.803,138,23.849,539,34.895,1054,42.565]],["name/267-8",[]],["text/267-8",[]],["component/267-8",[]],["title/267-9",[24,20.531,203,24.832,577,31.526,1056,45.066]],["name/267-9",[]],["text/267-9",[]],["component/267-9",[]],["title/267-10",[24,20.531,178,24.514,192,25.16,2136,49.068]],["name/267-10",[]],["text/267-10",[]],["component/267-10",[]],["title/267-11",[252,25.987,2320,59.288,6634,74.358]],["name/267-11",[]],["text/267-11",[]],["component/267-11",[]],["title/267-12",[454,40.207,689,33.718,6635,74.358]],["name/267-12",[]],["text/267-12",[]],["component/267-12",[]],["title/267-13",[24,20.531,57,23.675,138,23.849,4003,52.348]],["name/267-13",[]],["text/267-13",[]],["component/267-13",[]],["title/267-14",[454,40.207,689,33.718,6636,74.358]],["name/267-14",[]],["text/267-14",[]],["component/267-14",[]],["title/267-15",[64,29.885,591,26.496,1220,41.856]],["name/267-15",[]],["text/267-15",[]],["component/267-15",[]],["title/267-16",[1024,33.474,1026,54.514,1643,44.729]],["name/267-16",[]],["text/267-16",[]],["component/267-16",[]],["title/267-17",[1220,47.081,1644,51.878]],["name/267-17",[]],["text/267-17",[]],["component/267-17",[]],["title/267",[177,31.652,178,24.514,182,33.747,494,27.637]],["name/267",[178,0.929,182,1.278]],["text/267",[0,0.799,2,0.841,7,0.964,8,1.931,13,0.55,14,2.007,18,0.598,20,1.142,21,1.855,24,2.895,26,1.944,31,0.848,38,1.362,40,1.719,45,1.867,52,1.357,54,3.888,55,1.687,56,0.516,57,2.143,64,1.3,66,0.844,77,0.67,89,1.072,100,0.844,101,1.588,104,1.065,107,0.832,108,1.631,109,0.922,115,1.058,122,0.954,127,2.766,138,3.724,151,1.654,157,0.743,158,0.644,160,0.688,162,1.867,168,1.646,169,0.8,170,0.844,175,0.917,176,1.908,177,0.861,178,4.428,182,5.764,187,0.949,192,3.337,195,1.176,200,2.339,201,2.631,202,0.933,203,3.673,204,1.759,227,0.854,235,2.512,243,1.631,245,1.383,246,2.232,249,1.483,251,1.044,252,2.986,255,0.974,258,0.886,259,0.835,265,0.848,271,2.458,283,2.549,291,2.073,293,0.829,299,1.411,302,0.959,305,1.087,306,0.781,310,0.865,324,3.266,333,1.602,342,1.176,362,1.158,363,1.388,369,1.289,380,1.843,381,2.181,386,1.379,409,2.861,413,0.789,428,2.143,438,0.644,454,3.628,460,1.76,462,0.969,466,1.759,474,1.624,488,1.013,494,3.375,509,1.918,515,0.784,539,3.159,565,1.366,566,0.789,568,1.12,577,3.651,585,1.376,591,0.649,599,0.949,608,2.626,619,0.936,650,0.736,655,0.823,676,2.058,689,4.489,704,2.308,727,0.732,730,1.917,739,2.96,744,1.397,751,1.031,754,0.854,764,1.713,774,1.268,777,1.483,812,2.4,818,2.04,823,1.253,873,0.898,895,0.789,1008,1.139,1024,1.456,1026,1.335,1047,0.945,1050,0.954,1052,1.044,1054,1.158,1056,1.226,1105,1.283,1114,1.317,1182,1.399,1220,1.821,1245,1.424,1270,1.517,1272,1.452,1328,1.8,1331,1.355,1390,1.975,1393,1.662,1396,1.08,1400,1.994,1445,2.686,1480,0.89,1490,2.178,1565,4.732,1612,1.08,1643,1.095,1644,1.129,1658,1.239,1674,1.424,1767,1.299,1834,3.481,1933,1.317,1967,1.424,2063,1.452,2136,1.335,2285,6.987,2320,1.452,2491,1.424,2560,1.299,2618,3.076,2864,1.603,3299,1.728,3325,1.658,4003,1.424,4037,2.486,4672,1.517,5816,1.452,6477,1.658,6634,1.821,6635,1.821,6636,1.821,6637,3.486,6638,3.486,6639,1.962,6640,1.962,6641,1.962,6642,1.962,6643,1.962,6644,1.962,6645,1.962,6646,1.962]],["component/267",[1,0.4]],["title/268-1",[0,20.659,362,53.192]],["name/268-1",[]],["text/268-1",[]],["component/268-1",[]],["title/268-2",[2,19.324,409,27.445,1393,38.203]],["name/268-2",[]],["text/268-2",[]],["component/268-2",[]],["title/268-3",[13,22.44,202,21.441,227,34.887]],["name/268-3",[]],["text/268-3",[]],["component/268-3",[]],["title/268-4",[63,35.803,304,20.573,591,23.849,981,36.389]],["name/268-4",[]],["text/268-4",[]],["component/268-4",[]],["title/268-5",[21,25.851,101,29.872,401,36.084,413,26.366,593,24.823]],["name/268-5",[]],["text/268-5",[]],["component/268-5",[]],["title/268-6",[134,49.554,1739,61.956,2223,46.12]],["name/268-6",[]],["text/268-6",[]],["component/268-6",[]],["title/268-7",[169,32.659,424,53.761,595,34.484]],["name/268-7",[]],["text/268-7",[]],["component/268-7",[]],["title/268-8",[1066,61.956,2227,44.407,4427,63.571]],["name/268-8",[]],["text/268-8",[]],["component/268-8",[]],["title/268-9",[252,23.391,380,28.251,659,34.062,3164,42.565]],["name/268-9",[]],["text/268-9",[]],["component/268-9",[]],["title/268-10",[101,36.503,531,39.161,3165,52.391]],["name/268-10",[]],["text/268-10",[]],["component/268-10",[]],["title/268",[64,13.457,134,22.314,138,11.931,168,10.421,175,9.489,176,13.389,178,12.264,252,11.701,306,14.364,310,15.898,377,20.937,1739,27.898,3308,28.625]],["name/268",[64,1.019,310,1.204]],["text/268",[0,0.745,2,0.784,6,0.753,8,2.219,13,0.91,16,0.849,18,1.64,19,0.693,20,1.065,21,1.282,24,0.516,30,1.573,31,1.075,40,1.188,45,4.008,47,0.869,52,0.706,54,1.614,56,2.887,57,1.067,63,0.901,64,2.007,66,0.781,74,0.7,82,0.823,84,0.91,93,0.718,101,1.481,104,0.985,107,0.769,108,0.849,115,1.753,134,3.83,138,3.921,139,0.991,151,0.861,154,0.576,157,0.687,168,1.276,169,1.8,175,2.428,176,2.68,178,3.138,192,1.134,193,0.834,202,1.44,203,1.521,205,0.781,227,0.79,228,1.8,231,1.543,235,1.946,237,0.75,241,0.878,243,2.518,245,1.752,246,1.543,247,0.469,252,3.846,265,0.784,270,1.013,271,0.617,273,2.1,278,0.772,281,0.784,283,1.146,292,1.317,302,0.887,304,1.26,305,5.116,306,4.992,310,5.051,312,3.461,313,5.508,316,1.764,317,1.45,322,1.044,324,0.568,328,3.296,339,1.09,362,1.071,369,0.671,370,1.272,377,3.996,379,0.766,380,1.73,383,2.678,386,1.747,401,0.998,403,2.888,409,1.113,410,1.815,413,1.776,424,1.217,438,2.033,460,2.317,471,1.09,474,0.845,502,1.1,513,1.371,515,0.725,531,0.887,539,1.573,543,1.053,545,4.809,552,1.1,554,1.172,572,2.888,582,1.159,591,1.075,593,1.231,595,1.399,596,0.896,603,1.134,604,2.963,606,0.942,619,3.283,655,1.363,659,0.857,660,0.734,662,4.451,678,3.074,689,3.732,698,1.581,729,0.747,730,1.325,744,0.727,754,0.79,763,1.186,793,1.294,795,1.317,807,0.873,811,1.358,823,1.159,848,1.08,894,1.253,895,0.729,903,1.482,981,0.915,1049,1.111,1066,1.403,1149,2.1,1182,1.294,1213,1.439,1240,1.294,1270,5.324,1272,2.405,1290,2.43,1325,1.253,1388,1.533,1390,1.028,1393,1.55,1441,1.317,1497,2.456,1530,1.217,1553,1.294,1612,2.43,1619,1.253,1674,1.317,1697,1.08,1739,4.789,1933,1.217,1998,1.272,2204,1.09,2223,1.044,2227,1.005,2290,1.482,2703,3.005,3120,5.625,3164,1.071,3165,1.186,3308,4.269,3340,1.482,4004,1.598,4020,1.598,4427,1.439,6484,1.684,6647,1.814,6648,1.814,6649,1.814,6650,1.814,6651,1.814,6652,1.814,6653,1.814,6654,5.381,6655,1.814,6656,1.814,6657,3.251,6658,3.251,6659,3.251,6660,1.814]],["component/268",[1,0.4]],["title/269-1",[0,20.659,362,53.192]],["name/269-1",[]],["text/269-1",[]],["component/269-1",[]],["title/269-2",[2,19.324,409,27.445,1393,38.203]],["name/269-2",[]],["text/269-2",[]],["component/269-2",[]],["title/269-3",[13,22.44,202,21.441,227,34.887]],["name/269-3",[]],["text/269-3",[]],["component/269-3",[]],["title/269-4",[63,35.803,304,20.573,591,23.849,981,36.389]],["name/269-4",[]],["text/269-4",[]],["component/269-4",[]],["title/269-5",[212,63.571,593,30.333,6442,67.723]],["name/269-5",[]],["text/269-5",[]],["component/269-5",[]],["title/269-6",[31,19.497,342,27.028,595,34.484]],["name/269-6",[]],["text/269-6",[]],["component/269-6",[]],["title/269-7",[157,25.267,283,14.965,342,14.317,744,17.009,780,22.171,1119,22.588,1510,32.07,2132,28.103,2227,23.522,2488,20.334]],["name/269-7",[]],["text/269-7",[]],["component/269-7",[]],["title/269-8",[31,9.754,38,9.582,157,15.175,204,20.226,219,19.299,342,13.522,380,15.702,494,15.361,1511,30.289,2488,19.205,3164,23.658,6209,29.661]],["name/269-8",[]],["text/269-8",[]],["component/269-8",[]],["title/269-9",[577,35.025,596,39.567,2181,44.729]],["name/269-9",[]],["text/269-9",[]],["component/269-9",[]],["title/269-10",[744,32.111,2181,44.729,2228,52.391]],["name/269-10",[]],["text/269-10",[]],["component/269-10",[]],["title/269-11",[380,31.386,659,37.842,3172,55.321]],["name/269-11",[]],["text/269-11",[]],["component/269-11",[]],["title/269-12",[21,28.433,413,29,505,46.058,3173,53.365]],["name/269-12",[]],["text/269-12",[]],["component/269-12",[]],["title/269-13",[597,42.919,6661,80.124,6662,74.358]],["name/269-13",[]],["text/269-13",[]],["component/269-13",[]],["title/269-14",[409,27.445,2180,50.067,2229,51.17]],["name/269-14",[]],["text/269-14",[]],["component/269-14",[]],["title/269-15",[380,31.386,659,37.842,2230,51.17]],["name/269-15",[]],["text/269-15",[]],["component/269-15",[]],["title/269-16",[21,28.433,413,29,505,46.058,3177,53.365]],["name/269-16",[]],["text/269-16",[]],["component/269-16",[]],["title/269-17",[1919,46.886,6662,74.358,6663,80.124]],["name/269-17",[]],["text/269-17",[]],["component/269-17",[]],["title/269-18",[409,27.445,2180,50.067,2231,63.571]],["name/269-18",[]],["text/269-18",[]],["component/269-18",[]],["title/269-19",[380,31.386,659,37.842,2232,63.571]],["name/269-19",[]],["text/269-19",[]],["component/269-19",[]],["title/269-20",[21,28.433,413,29,505,46.058,5535,60.957]],["name/269-20",[]],["text/269-20",[]],["component/269-20",[]],["title/269-21",[460,26.979,553,40.868,1154,39.688,1458,49.794]],["name/269-21",[]],["text/269-21",[]],["component/269-21",[]],["title/269-22",[64,24.456,401,36.084,413,26.366,1220,34.253,1588,41.413]],["name/269-22",[]],["text/269-22",[]],["component/269-22",[]],["title/269-23",[1024,33.474,1676,52.391,6071,70.56]],["name/269-23",[]],["text/269-23",[]],["component/269-23",[]],["title/269-24",[64,29.885,1220,41.856,2238,61.956]],["name/269-24",[]],["text/269-24",[]],["component/269-24",[]],["title/269",[175,10.542,176,9.157,219,19.299,258,18.106,259,17.057,358,26.211,380,15.702,410,22.377,529,17.523,577,17.523,604,17.252,1612,22.059]],["name/269",[529,1.194,577,1.194]],["text/269",[0,0.756,2,0.795,6,0.981,13,0.662,14,2.365,17,0.791,18,0.39,19,2.081,20,1.578,21,2.367,26,2.875,30,0.619,31,0.803,37,0.596,38,2.742,45,1.267,52,1.284,55,0.619,61,0.613,63,0.635,64,1.23,74,1.584,87,1.782,91,2.298,107,0.543,108,0.599,110,1.107,111,3.606,114,1.284,122,0.622,129,0.859,147,0.668,149,0.897,151,1.122,157,4.222,158,0.42,163,0.72,168,2.009,169,0.964,170,2.344,172,3.075,175,0.867,176,1.101,182,1.543,183,2.23,192,0.825,193,1.888,195,1.113,202,0.342,204,1.194,205,1.42,212,1.015,215,3.828,218,1.396,219,4.304,227,0.557,228,1.675,231,0.607,246,0.607,247,0.331,253,1.509,258,1.068,260,0.619,264,0.808,265,0.553,267,1.641,270,1.321,271,3.829,273,0.827,283,3.152,291,1.042,304,0.941,306,0.942,311,0.709,327,0.668,337,3.44,339,0.769,342,2.724,345,0.5,347,0.664,358,0.837,362,0.755,369,1.782,379,0.54,380,1.609,386,1.305,389,1.221,393,1.408,401,0.704,405,1.609,406,1.478,409,1.866,410,3.352,413,1.938,420,0.664,421,0.48,423,1.082,428,1.078,438,1.788,439,0.677,442,1.168,443,2.492,445,1.26,449,0.817,455,0.695,456,0.591,460,1.537,463,1.396,474,0.596,481,0.562,484,2.313,494,0.906,501,0.664,505,2.106,513,0.967,515,0.511,516,0.847,523,0.749,529,1.796,549,0.607,552,0.776,553,0.725,563,2,565,0.927,577,3.041,591,0.782,592,1.75,593,0.484,595,0.551,596,0.632,597,0.685,604,1.018,608,0.714,618,2.779,624,1.288,650,1.808,653,0.817,655,0.537,659,1.558,685,2.261,700,2.328,705,1.566,720,0.999,744,2.407,780,1.723,781,1.181,811,2.013,812,1.207,818,0.749,889,2.173,905,0.912,911,3.621,929,0.791,981,0.646,1011,1.311,1024,0.988,1053,0.837,1061,0.743,1067,1.659,1119,3.196,1123,0.808,1154,4.053,1175,1.587,1185,0.912,1199,1.045,1220,1.236,1266,0.837,1290,0.704,1304,0.604,1317,1.547,1349,0.709,1353,0.929,1393,0.61,1432,0.61,1437,0.699,1445,6.432,1452,0.847,1458,2.277,1463,0.99,1467,1.75,1480,0.58,1487,0.769,1488,1.082,1490,0.8,1510,5.256,1511,1.787,1512,2.98,1513,0.884,1541,1.633,1575,2,1588,0.808,1665,1.045,1676,0.837,1919,0.749,1972,3.473,1998,0.897,2094,2.244,2132,0.847,2175,1.082,2180,2.061,2181,1.841,2201,0.947,2227,0.709,2228,0.837,2229,0.817,2230,0.817,2231,1.015,2232,1.015,2238,0.99,2315,1.082,2488,1.968,2541,4.282,2564,0.725,2690,1.127,2692,0.967,2744,1.082,2813,1.082,2830,2.195,2989,1.082,3119,1.717,3164,0.755,3172,0.884,3173,0.947,3177,0.947,3290,3.937,3402,2.788,4119,2.55,4423,1.045,5535,1.082,5559,1.188,6071,1.127,6130,1.188,6209,1.75,6442,1.082,6664,1.28,6665,1.28,6666,6.956,6667,5.446,6668,1.28,6669,2.365,6670,1.28,6671,1.28,6672,1.28,6673,1.28,6674,1.28,6675,1.28,6676,1.28,6677,1.28,6678,1.28,6679,2.365,6680,1.28,6681,1.28,6682,2.365,6683,1.28,6684,2.365,6685,1.28,6686,1.28,6687,1.28,6688,1.28,6689,1.28,6690,1.28,6691,1.28,6692,4.109,6693,1.28,6694,1.28,6695,1.28,6696,1.28,6697,1.28,6698,1.28,6699,1.28,6700,2.365,6701,1.28,6702,1.28,6703,1.28,6704,1.28,6705,1.28,6706,1.28,6707,1.28,6708,3.298,6709,1.28,6710,1.28,6711,3.298,6712,1.28,6713,1.28,6714,3.298,6715,3.298,6716,3.298,6717,1.28,6718,1.28,6719,2.365,6720,2.365,6721,1.28,6722,1.28,6723,1.28,6724,2.365,6725,1.28,6726,1.28,6727,1.28,6728,1.28,6729,1.28,6730,1.28,6731,1.28,6732,1.28,6733,1.28,6734,1.28,6735,1.28,6736,1.28,6737,1.28,6738,1.28,6739,1.28,6740,1.28,6741,1.28,6742,1.28,6743,1.28,6744,1.28,6745,1.28,6746,1.28,6747,1.28,6748,1.28,6749,1.28,6750,1.28,6751,1.28,6752,1.28,6753,1.28,6754,2.365,6755,1.28,6756,1.28]],["component/269",[1,0.4]],["title/270-1",[0,20.659,362,53.192]],["name/270-1",[]],["text/270-1",[]],["component/270-1",[]],["title/270-2",[2,21.736,10,63.204]],["name/270-2",[]],["text/270-2",[]],["component/270-2",[]],["title/270-3",[13,22.44,409,27.445,1393,38.203]],["name/270-3",[]],["text/270-3",[]],["component/270-3",[]],["title/270-4",[202,21.441,227,34.887,591,26.496]],["name/270-4",[]],["text/270-4",[]],["component/270-4",[]],["title/270-5",[63,35.803,304,20.573,593,27.303,981,36.389]],["name/270-5",[]],["text/270-5",[]],["component/270-5",[]],["title/270-6",[395,40.428,577,35.025,2223,46.12]],["name/270-6",[]],["text/270-6",[]],["component/270-6",[]],["title/270-7",[6,21.374,16,24.112,31,12.539,138,17.04,237,21.299,241,24.933,577,22.525,2224,32.545]],["name/270-7",[]],["text/270-7",[]],["component/270-7",[]],["title/270-8",[21,25.851,101,29.872,401,36.084,413,26.366,595,28.22]],["name/270-8",[]],["text/270-8",[]],["component/270-8",[]],["title/270-9",[414,52.391,596,39.567,701,35.164]],["name/270-9",[]],["text/270-9",[]],["component/270-9",[]],["title/270-10",[169,32.659,424,53.761,597,42.919]],["name/270-10",[]],["text/270-10",[]],["component/270-10",[]],["title/270-11",[1066,61.956,2229,51.17,4427,63.571]],["name/270-11",[]],["text/270-11",[]],["component/270-11",[]],["title/270-12",[387,42.112,424,53.761,2230,51.17]],["name/270-12",[]],["text/270-12",[]],["component/270-12",[]],["title/270-13",[101,36.503,531,39.161,1919,46.886]],["name/270-13",[]],["text/270-13",[]],["component/270-13",[]],["title/270",[40,16.482,175,11.859,176,10.301,413,18.132,464,19.711,549,21.398,576,18.573,577,19.711,604,19.407,1160,27.612]],["name/270",[464,1.194,577,1.194]],["text/270",[0,0.609,1,0.497,2,0.886,6,2.196,8,1.889,10,1.019,11,1.818,13,0.744,16,0.68,18,0.443,21,0.573,24,0.414,31,2.555,40,1.66,45,3.496,47,1.76,54,2.628,56,0.382,63,1.824,64,1.371,74,0.56,77,0.496,82,1.667,84,0.729,92,0.95,101,2.07,108,0.68,117,1.187,138,3.928,139,3.251,143,0.975,147,1.389,151,0.689,158,0.477,159,0.668,160,1.289,162,1.458,164,1.072,168,2.284,169,1.083,172,0.515,175,1.565,176,1.491,179,2.331,182,0.68,183,0.789,187,0.703,195,2.374,202,0.983,204,1.854,227,0.633,237,2.459,240,3.047,241,3.158,243,0.68,245,0.576,246,0.689,247,0.95,248,0.717,252,1.473,255,1.32,260,0.703,271,0.904,273,1.717,283,1.867,288,1.719,291,1.619,293,0.614,299,0.588,304,0.758,305,0.805,306,3.43,310,0.64,311,0.805,314,0.817,316,1.994,317,0.648,323,0.783,324,0.832,333,0.668,362,0.857,363,0.578,377,0.843,379,0.614,381,2.107,384,0.686,387,0.764,395,2.671,401,0.799,409,0.498,411,2.537,413,1.069,414,0.95,415,4.015,424,2.465,428,0.662,445,0.555,456,0.671,460,1.699,464,5.402,470,0.817,474,0.677,479,3.349,481,1.994,488,0.75,489,0.703,490,1.967,492,1.153,515,1.062,524,2.098,531,0.71,537,2.169,539,4.802,545,1.597,549,5.593,554,0.939,555,1.123,565,1.041,576,1.095,577,5.632,585,1.864,591,0.879,593,1.006,595,1.144,596,1.313,597,0.778,602,1.036,618,1.062,619,0.693,622,0.975,624,1.038,650,1.379,655,3.143,660,1.076,661,0.794,689,2.228,698,1.293,701,0.638,703,0.653,717,0.773,725,0.729,730,1.498,739,0.754,744,4.684,751,0.764,753,0.988,757,0.95,758,4.402,773,1.098,778,0.928,799,0.928,805,0.754,811,1.898,838,2.594,839,1.628,873,0.665,911,3.577,921,0.865,981,0.733,1066,1.123,1119,5.759,1135,1.644,1154,2.5,1178,0.975,1210,0.939,1221,1.123,1247,0.928,1250,1.644,1253,1.054,1263,1.348,1270,2.841,1272,3.362,1304,1.255,1350,0.671,1353,1.054,1366,2.433,1392,0.918,1393,0.693,1425,0.988,1432,2.166,1438,0.789,1441,1.054,1445,0.83,1456,0.85,1460,4.036,1484,0.85,1565,0.823,1601,1.019,1627,1.784,1648,0.988,1766,0.95,1821,0.95,1877,1.036,1919,0.85,1933,1.784,1994,0.962,2094,0.988,2109,1.187,2114,1.003,2132,3.008,2166,1.123,2203,3.297,2204,0.873,2223,0.836,2224,0.918,2229,0.928,2230,0.928,2651,1.187,2702,0.918,2812,0.918,2989,1.228,3259,1.187,3296,1.187,3315,1.348,3733,1.348,4134,1.228,4427,1.153,6068,2.341,6757,2.658,6758,1.453,6759,1.453,6760,4.543,6761,1.453,6762,2.658,6763,1.453,6764,1.453,6765,1.453,6766,1.453,6767,1.453,6768,1.453,6769,1.453,6770,1.453,6771,1.453,6772,1.453]],["component/270",[1,0.4]],["title/271-1",[0,18.366,172,28.405,304,22.856]],["name/271-1",[]],["text/271-1",[]],["component/271-1",[]],["title/271-2",[2,19.324,409,27.445,1393,38.203]],["name/271-2",[]],["text/271-2",[]],["component/271-2",[]],["title/271-3",[13,22.44,227,34.887,6773,74.358]],["name/271-3",[]],["text/271-3",[]],["component/271-3",[]],["title/271-4",[63,35.803,304,20.573,591,23.849,981,36.389]],["name/271-4",[]],["text/271-4",[]],["component/271-4",[]],["title/271-5",[21,25.851,101,29.872,401,36.084,413,26.366,593,24.823]],["name/271-5",[]],["text/271-5",[]],["component/271-5",[]],["title/271-6",[24,18.666,119,29.369,214,26.019,1393,31.264,2223,37.743]],["name/271-6",[]],["text/271-6",[]],["component/271-6",[]],["title/271-7",[8,15.816,138,23.849,595,31.039,2132,47.755]],["name/271-7",[]],["text/271-7",[]],["component/271-7",[]],["title/271-8",[1304,37.842,2132,53.055,2227,44.407]],["name/271-8",[]],["text/271-8",[]],["component/271-8",[]],["title/271-9",[21,25.851,24,18.666,413,26.366,505,41.875,596,32.38]],["name/271-9",[]],["text/271-9",[]],["component/271-9",[]],["title/271-10",[8,11.301,31,18.856,412,28.161,781,25.718,1154,28.357,1304,24.337,2228,33.694]],["name/271-10",[]],["text/271-10",[]],["component/271-10",[]],["title/271-11",[459,34.048,703,29.492,1766,42.875,2181,36.604,3172,45.272]],["name/271-11",[]],["text/271-11",[]],["component/271-11",[]],["title/271-12",[8,13.182,24,17.112,38,14.369,57,19.732,1687,39.803,3173,44.479]],["name/271-12",[]],["text/271-12",[]],["component/271-12",[]],["title/271-13",[8,13.182,24,17.112,38,14.369,57,19.732,1766,39.305,3396,50.807]],["name/271-13",[]],["text/271-13",[]],["component/271-13",[]],["title/271-14",[24,12.082,38,10.145,74,16.365,175,11.162,176,9.695,293,17.926,294,16.679,703,19.09,1369,21.182,2167,37.375,6774,39.387]],["name/271-14",[]],["text/271-14",[]],["component/271-14",[]],["title/271-15",[64,24.456,401,36.084,413,26.366,597,35.123,1220,34.253]],["name/271-15",[]],["text/271-15",[]],["component/271-15",[]],["title/271-16",[1024,33.474,1383,51.764,2229,51.17]],["name/271-16",[]],["text/271-16",[]],["component/271-16",[]],["title/271-17",[64,29.885,1220,41.856,2230,51.17]],["name/271-17",[]],["text/271-17",[]],["component/271-17",[]],["title/271",[38,19.153,1369,39.99,1766,52.391]],["name/271",[1369,1.363,4036,2.309]],["text/271",[0,1.034,2,0.636,6,0.598,8,1.423,13,0.739,18,0.439,21,1.04,24,2.53,25,1.707,26,1.09,30,0.697,31,1.704,37,0.671,38,2.413,40,0.527,45,0.772,46,0.836,52,0.561,54,1.309,56,0.694,57,2.131,63,0.715,64,1.962,74,3.636,76,0.931,82,0.653,84,2.265,91,0.687,93,2.567,100,0.62,101,0.656,107,0.611,112,1.114,119,1.634,121,3.323,123,1.143,132,0.967,138,0.872,151,1.252,154,1.158,159,0.662,162,1.448,168,1.304,169,0.587,170,1.942,172,0.935,175,1.707,176,2.588,178,2.206,187,2.862,192,0.503,193,1.212,202,0.385,204,0.727,205,0.62,214,1.448,219,1.757,227,0.627,229,1.6,230,0.787,238,0.542,239,0.625,240,0.829,245,0.572,246,0.684,247,0.943,248,0.711,252,0.467,253,2.407,254,1.535,258,0.651,259,0.613,264,0.91,267,2.102,271,3.89,281,0.622,282,2.052,283,3.994,293,1.114,294,2.931,299,1.068,303,1.223,304,1.687,309,2.895,313,4.305,324,0.826,333,0.662,337,1.666,342,2.516,345,1.425,362,0.85,363,0.574,369,0.533,370,1.01,387,1.386,389,0.744,401,1.452,403,1.725,409,0.493,410,0.804,412,2.466,413,2.116,415,2.818,419,1.906,420,2.732,423,1.207,432,1.395,436,0.874,438,1.942,451,1.258,459,1.894,481,1.158,505,0.92,524,0.823,529,0.63,531,2.206,538,3.587,540,0.823,541,1.153,552,2.737,563,2.213,565,2.061,567,2.256,576,1.859,577,1.595,591,0.476,593,0.545,595,0.62,596,0.711,597,0.772,609,1.942,618,1.457,624,0.562,627,1.158,650,0.99,667,0.823,678,1.309,699,0.798,703,4.125,727,0.537,730,3.208,737,0.942,738,1.324,739,0.748,748,0.684,754,1.149,764,1.296,769,1.177,780,1.906,781,1.316,788,0.829,811,1.524,820,1.303,869,1.666,873,1.207,911,1.345,917,1.066,939,2.155,941,1.218,981,0.727,1024,0.602,1048,1.066,1134,1.027,1141,1.114,1149,0.931,1154,2.008,1185,1.027,1198,0.995,1220,1.378,1241,1.747,1249,1.218,1265,1.114,1270,1.114,1304,3.066,1322,0.954,1344,1.993,1369,3.495,1383,0.931,1393,1.258,1398,1.557,1400,0.611,1411,1.01,1432,1.74,1438,0.782,1445,0.823,1455,1.143,1456,2.641,1490,0.9,1506,1.027,1528,0.748,1563,2.093,1612,0.793,1619,0.995,1623,2.323,1653,1.952,1675,1.066,1687,2.988,1720,2.093,1766,5.389,1794,0.931,1800,0.823,1815,0.942,1893,1.666,1959,1.046,1997,1.378,2071,1.993,2132,2.416,2167,3.213,2170,0.882,2176,2.482,2181,3.302,2191,1.177,2223,0.829,2227,0.798,2228,0.942,2229,0.92,2230,0.92,2358,1.704,2488,1.264,2501,2.323,2659,1.01,2688,1.337,2702,1.666,2858,2.448,2872,1.269,3172,0.995,3173,1.066,3178,1.218,3396,1.218,3875,1.337,4113,1.269,4305,2.895,4410,1.337,4565,1.218,4599,1.066,5333,2.448,5787,1.269,5860,1.218,6077,1.337,6417,1.337,6773,1.337,6774,1.337,6775,2.638,6776,1.441,6777,1.441,6778,2.638,6779,2.638,6780,1.441,6781,1.441,6782,2.638,6783,1.441,6784,1.441,6785,1.441,6786,1.441,6787,2.638,6788,2.638,6789,1.441,6790,1.441,6791,1.441,6792,3.648,6793,1.441,6794,2.638,6795,1.441,6796,1.441,6797,1.441,6798,1.441,6799,1.441,6800,1.441,6801,1.441,6802,3.648,6803,1.441,6804,1.441,6805,1.441,6806,1.441,6807,1.441,6808,1.441,6809,1.441,6810,1.441,6811,1.441,6812,3.648,6813,1.441,6814,1.441,6815,1.441,6816,1.441,6817,1.441,6818,1.441,6819,1.441,6820,1.441,6821,1.441,6822,1.441,6823,1.441,6824,2.638,6825,1.441,6826,1.441,6827,1.441,6828,1.441,6829,1.441,6830,1.441,6831,1.441]],["component/271",[1,0.4]],["title/272-1",[0,18.366,172,28.405,304,22.856]],["name/272-1",[]],["text/272-1",[]],["component/272-1",[]],["title/272-2",[2,19.324,182,37.492,409,27.445]],["name/272-2",[]],["text/272-2",[]],["component/272-2",[]],["title/272-3",[13,22.44,202,21.441,227,34.887]],["name/272-3",[]],["text/272-3",[]],["component/272-3",[]],["title/272-4",[63,35.803,304,20.573,591,23.849,981,36.389]],["name/272-4",[]],["text/272-4",[]],["component/272-4",[]],["title/272-5",[21,25.851,101,29.872,401,36.084,413,26.366,593,24.823]],["name/272-5",[]],["text/272-5",[]],["component/272-5",[]],["title/272-6",[47,34.554,119,32.303,2223,41.513,5997,55.767]],["name/272-6",[]],["text/272-6",[]],["component/272-6",[]],["title/272-7",[8,15.816,138,23.849,595,31.039,2132,47.755]],["name/272-7",[]],["text/272-7",[]],["component/272-7",[]],["title/272-8",[138,26.496,170,34.484,2227,44.407]],["name/272-8",[]],["text/272-8",[]],["component/272-8",[]],["title/272-9",[1304,37.842,2132,53.055,3164,47.289]],["name/272-9",[]],["text/272-9",[]],["component/272-9",[]],["title/272-10",[11,27.516,24,22.809,596,39.567]],["name/272-10",[]],["text/272-10",[]],["component/272-10",[]],["title/272-11",[247,20.716,2228,52.391,6832,74.358]],["name/272-11",[]],["text/272-11",[]],["component/272-11",[]],["title/272-12",[21,25.851,24,18.666,413,26.366,505,41.875,597,35.123]],["name/272-12",[]],["text/272-12",[]],["component/272-12",[]],["title/272-13",[324,25.09,1328,41.359,2229,51.17]],["name/272-13",[]],["text/272-13",[]],["component/272-13",[]],["title/272-14",[54,29.841,380,23.546,1060,30.499,1369,30.001,1836,46.48,2230,38.388]],["name/272-14",[]],["text/272-14",[]],["component/272-14",[]],["title/272-15",[54,35.803,205,31.039,380,28.251,3177,53.365]],["name/272-15",[]],["text/272-15",[]],["component/272-15",[]],["title/272-16",[24,15.797,54,27.547,56,14.594,115,29.919,245,22.02,369,20.517,6833,51.497]],["name/272-16",[]],["text/272-16",[]],["component/272-16",[]],["title/272-17",[154,16.361,166,17.427,192,17.977,247,13.323,413,20.721,530,33.694,531,25.185,6834,47.821]],["name/272-17",[]],["text/272-17",[]],["component/272-17",[]],["title/272-18",[77,27.375,166,27.097,1919,46.886]],["name/272-18",[]],["text/272-18",[]],["component/272-18",[]],["title/272-19",[8,15.816,57,23.675,247,18.647,553,40.868]],["name/272-19",[]],["text/272-19",[]],["component/272-19",[]],["title/272-20",[8,17.571,247,20.716,2233,60.543]],["name/272-20",[]],["text/272-20",[]],["component/272-20",[]],["title/272-21",[235,35.305,237,33.118,2234,63.571]],["name/272-21",[]],["text/272-21",[]],["component/272-21",[]],["title/272-22",[64,24.456,401,36.084,413,26.366,1220,34.253,1588,41.413]],["name/272-22",[]],["text/272-22",[]],["component/272-22",[]],["title/272-23",[1024,33.474,1383,51.764,2235,67.723]],["name/272-23",[]],["text/272-23",[]],["component/272-23",[]],["title/272-24",[64,29.885,1220,41.856,6835,74.358]],["name/272-24",[]],["text/272-24",[]],["component/272-24",[]],["title/272",[8,12.169,38,13.264,54,27.547,255,27.547,380,21.737,530,36.284,531,27.121]],["name/272",[54,1.356,380,1.07]],["text/272",[0,0.239,1,0.516,2,0.252,6,0.812,7,0.962,8,2.228,11,1.415,13,0.292,14,1.127,16,1.293,18,0.597,20,1.538,21,1.089,24,2.055,28,0.929,30,1.993,31,1.002,38,1.247,39,0.449,40,1.01,47,0.5,52,0.762,53,0.828,54,5.948,55,0.505,56,0.915,57,0.643,63,0.518,64,1.031,65,0.622,66,2.021,77,1.944,82,0.888,84,1.387,87,1.198,89,1.07,91,1.317,92,1.28,100,0.842,101,0.476,107,0.443,108,1.927,113,1.236,115,1.055,119,0.468,128,0.836,134,0.646,138,1.362,147,0.545,150,0.524,153,0.701,154,2.07,158,0.343,159,0.48,160,0.969,164,0.421,166,2.328,168,1.988,170,0.449,172,0.37,175,0.275,176,0.447,182,0.489,187,0.505,192,0.683,193,1.27,200,0.429,202,2.015,205,2.021,214,0.414,227,0.455,228,3.496,231,1.311,232,1.222,235,1.218,236,0.884,237,0.432,238,0.393,240,1.59,243,0.916,245,1.38,246,0.496,247,2.811,248,0.967,252,1.845,253,0.478,258,0.884,259,1.753,263,0.807,268,0.627,269,3.164,271,1.773,275,0.542,276,0.51,291,0.863,292,0.758,299,0.792,301,0.883,303,1.281,304,1.488,316,1.5,324,0.613,326,0.456,333,1.27,337,0.66,339,0.627,342,0.932,345,0.764,360,0.516,369,2.41,377,0.606,379,1.469,380,4.591,386,0.413,387,1.452,389,0.539,390,1.727,395,0.527,401,1.077,405,1.332,406,1.223,407,0.575,409,0.671,412,0.571,413,2.768,415,1.48,420,0.542,424,0.701,428,2.592,432,0.552,438,2.738,441,1.785,442,0.516,445,1.329,446,0.563,450,1.035,454,0.524,455,4.391,456,0.482,457,0.691,462,1.364,463,1.155,464,0.856,472,0.556,493,4.262,494,1.059,496,3.687,505,0.667,508,1.479,513,0.789,514,0.667,515,1.104,530,5.114,531,4.495,532,1.187,534,0.505,539,0.947,543,1.136,553,0.592,560,0.652,568,1.118,573,0.701,574,0.92,577,0.456,591,0.345,593,1.046,595,0.449,596,0.516,597,0.559,601,0.496,604,1.189,608,0.583,609,0.556,619,0.498,624,0.408,643,0.675,650,1.545,652,0.563,659,2.892,661,0.571,662,0.486,667,1.578,671,2.596,677,3.348,684,0.556,685,1.521,688,2.352,690,2.844,701,0.458,703,0.47,720,0.827,724,0.732,727,0.389,728,1.236,758,1.448,760,1.313,777,0.789,781,0.521,788,2.703,789,1.396,811,0.818,820,0.516,821,1.313,840,3.079,842,1.724,848,0.622,850,1.296,873,0.478,897,1.093,911,1.283,921,2.071,981,0.527,1011,1.085,1024,2.876,1060,3.106,1088,0.853,1128,1.145,1141,1.514,1153,4.366,1154,1.077,1161,0.807,1199,0.853,1200,0.789,1219,0.828,1220,1.023,1223,0.732,1236,1.28,1270,0.807,1281,0.622,1283,0.853,1304,1.305,1328,0.539,1331,0.721,1336,0.969,1344,2.088,1349,0.579,1350,0.904,1369,0.977,1377,3.048,1378,2.481,1383,0.675,1384,0.745,1393,0.498,1396,0.575,1398,1.155,1400,0.443,1420,0.758,1425,0.71,1429,0.92,1432,0.933,1480,0.474,1490,0.652,1494,0.773,1530,1.313,1548,0.745,1571,0.66,1575,0.633,1588,0.66,1604,0.667,1612,0.575,1614,0.701,1637,1.599,1709,1.97,1719,0.721,1731,1.727,1833,0.758,1836,1.514,1919,0.611,1959,0.758,1988,1.25,1997,0.545,2002,0.807,2018,2.257,2038,0.853,2053,1.514,2094,0.71,2103,2.574,2114,1.352,2119,0.853,2132,1.296,2162,0.92,2163,0.969,2204,0.627,2223,0.601,2227,0.579,2228,0.683,2229,0.667,2230,0.667,2233,0.789,2234,0.828,2235,0.883,2320,1.448,2335,4.409,2358,0.675,2486,0.883,2538,0.853,2644,0.883,2651,0.853,2654,0.969,2657,0.969,2703,0.71,2885,5.392,2903,0.745,3147,2.693,3164,0.616,3177,0.773,3195,0.969,3227,0.807,3234,0.883,3305,0.969,3308,0.828,3358,0.633,3742,3.474,3743,2.257,3972,2.257,3973,0.883,4127,0.92,4263,0.789,4508,0.92,4530,0.969,4532,1.599,4565,2.94,4606,0.969,5821,1.655,5860,0.883,5888,0.92,5915,0.969,5997,0.807,6212,0.969,6425,0.969,6448,0.969,6466,0.969,6476,0.969,6832,0.969,6833,0.969,6834,0.969,6835,0.969,6836,1.044,6837,1.044,6838,1.044,6839,1.044,6840,3.479,6841,1.044,6842,1.044,6843,1.044,6844,1.958,6845,1.044,6846,1.958,6847,1.044,6848,1.044,6849,1.044,6850,1.044,6851,1.044,6852,1.044,6853,1.044,6854,1.044,6855,1.044,6856,1.044,6857,1.044,6858,1.958,6859,1.958,6860,1.044,6861,1.044,6862,1.958,6863,1.044,6864,1.044,6865,1.958,6866,1.044,6867,1.044,6868,1.044,6869,1.044,6870,1.044,6871,1.044,6872,1.044,6873,1.044,6874,1.044,6875,1.044,6876,1.044,6877,1.044,6878,1.044,6879,1.044,6880,1.044,6881,1.044,6882,1.044,6883,1.044,6884,1.044,6885,1.044,6886,1.044]],["component/272",[1,0.4]]],"invertedIndex":[["",{"_index":271,"title":{"88-3":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"9":{},"10":{},"12":{},"15":{},"16":{},"18":{},"19":{},"21":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"39":{},"40":{},"42":{},"44":{},"46":{},"49":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"66":{},"67":{},"68":{},"70":{},"72":{},"73":{},"75":{},"78":{},"80":{},"82":{},"83":{},"84":{},"85":{},"88":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"148":{},"149":{},"150":{},"152":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"173":{},"175":{},"176":{},"179":{},"182":{},"183":{},"186":{},"188":{},"192":{},"193":{},"194":{},"195":{},"196":{},"201":{},"202":{},"205":{},"207":{},"210":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"221":{},"222":{},"225":{},"226":{},"228":{},"229":{},"230":{},"231":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"240":{},"241":{},"242":{},"244":{},"245":{},"246":{},"248":{},"250":{},"253":{},"254":{},"255":{},"257":{},"258":{},"259":{},"260":{},"262":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["0",{"_index":875,"title":{},"name":{},"text":{"4":{},"19":{},"21":{},"22":{},"28":{},"29":{},"30":{},"33":{},"51":{},"73":{},"80":{},"105":{},"107":{},"118":{},"159":{},"167":{},"173":{},"175":{},"179":{},"183":{},"196":{},"205":{},"234":{},"237":{},"258":{}},"component":{}}],["0.0.0.0/0",{"_index":1954,"title":{},"name":{},"text":{"29":{},"73":{},"193":{},"251":{},"258":{}},"component":{}}],["0.0.1",{"_index":2714,"title":{},"name":{},"text":{"56":{}},"component":{}}],["0.0.19",{"_index":2355,"title":{},"name":{},"text":{"49":{}},"component":{}}],["0.28",{"_index":2371,"title":{},"name":{},"text":{"49":{}},"component":{}}],["0.49",{"_index":1849,"title":{},"name":{},"text":{"23":{}},"component":{}}],["0.5",{"_index":3711,"title":{},"name":{},"text":{"73":{}},"component":{}}],["0.7.0",{"_index":2375,"title":{},"name":{},"text":{"49":{}},"component":{}}],["0.75in",{"_index":3124,"title":{},"name":{},"text":{"61":{}},"component":{}}],["0.9in",{"_index":3125,"title":{},"name":{},"text":{"61":{}},"component":{}}],["0.okd",{"_index":3737,"title":{},"name":{},"text":{"73":{}},"component":{}}],["0/2",{"_index":3945,"title":{},"name":{},"text":{"80":{}},"component":{}}],["00015622",{"_index":5452,"title":{},"name":{},"text":{"162":{},"195":{}},"component":{}}],["000;\\n",{"_index":5753,"title":{},"name":{},"text":{"183":{}},"component":{}}],["00z",{"_index":2446,"title":{},"name":{},"text":{"49":{}},"component":{}}],["01",{"_index":5419,"title":{},"name":{},"text":{"161":{},"175":{},"177":{},"179":{}},"component":{}}],["01.01.2012",{"_index":4732,"title":{},"name":{},"text":{"135":{}},"component":{}}],["01/01/01",{"_index":6691,"title":{},"name":{},"text":{"269":{}},"component":{}}],["02",{"_index":708,"title":{},"name":{},"text":{"4":{},"16":{},"161":{},"165":{},"177":{},"179":{}},"component":{}}],["02/09/2022",{"_index":5500,"title":{},"name":{},"text":{"165":{}},"component":{}}],["022919",{"_index":3739,"title":{},"name":{},"text":{"73":{}},"component":{}}],["02t08:09:40+02:00[europe/kyiv",{"_index":6190,"title":{},"name":{},"text":{"213":{}},"component":{}}],["03",{"_index":713,"title":{},"name":{},"text":{"4":{}},"component":{}}],["0325982b325e444537f61f1f69203c85",{"_index":4446,"title":{},"name":{},"text":{"113":{}},"component":{}}],["04",{"_index":710,"title":{},"name":{},"text":{"4":{},"21":{},"49":{}},"component":{}}],["046fe691f52a953f9",{"_index":3976,"title":{},"name":{},"text":{"80":{}},"component":{}}],["05t16:30:00+03:00[europe/kyiv",{"_index":6194,"title":{},"name":{},"text":{"213":{}},"component":{}}],["06",{"_index":1744,"title":{},"name":{},"text":{"21":{}},"component":{}}],["06:07:59",{"_index":5494,"title":{},"name":{},"text":{"165":{}},"component":{}}],["06t23",{"_index":2445,"title":{},"name":{},"text":{"49":{}},"component":{}}],["07",{"_index":1625,"title":{},"name":{},"text":{"16":{}},"component":{}}],["073427f_20220602",{"_index":1750,"title":{},"name":{},"text":{"21":{}},"component":{}}],["073507i",{"_index":1751,"title":{},"name":{},"text":{"21":{}},"component":{}}],["08",{"_index":3738,"title":{},"name":{},"text":{"73":{}},"component":{}}],["09",{"_index":1745,"title":{},"name":{},"text":{"21":{},"165":{}},"component":{}}],["09/02/2022",{"_index":5498,"title":{},"name":{},"text":{"165":{}},"component":{}}],["0;\\n",{"_index":5745,"title":{},"name":{},"text":{"183":{}},"component":{}}],["0a580a822841",{"_index":5786,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["0d756563",{"_index":5630,"title":{},"name":{},"text":{"167":{}},"component":{}}],["0e0102e3ff768559b",{"_index":3696,"title":{},"name":{},"text":{"73":{}},"component":{}}],["0ede2509a36215538",{"_index":3693,"title":{},"name":{},"text":{"73":{}},"component":{}}],["0kb",{"_index":4975,"title":{},"name":{},"text":{"140":{}},"component":{}}],["0ydqungb0ylrg9cy0ldrhydqotga0lxqvncx0zbrgtc4iiwichjlzmvycmvkx3vzzxjuyw1lijoic2vydmljzs1hy2nvdw50lxryzw1iaxrhlwludm9rzxiilcjjbgllbnrbzgryzxnzijoioduumjizljiwos4xocj9.uhf6gzfd9fc1idehilo9kspsopxxlsqtsotamut3cnemzfs77a",{"_index":5695,"title":{},"name":{},"text":{"179":{}},"component":{}}],["0~ubuntu",{"_index":3634,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1",{"_index":0,"title":{"134":{},"138":{},"1-1":{},"4-1":{},"6-1":{},"9-1":{},"12-1":{},"14-1":{},"15-1":{},"16-1":{},"17-1":{},"18-1":{},"19-1":{},"21-1":{},"22-1":{},"23-1":{},"25-1":{},"28-1":{},"29-1":{},"30-1":{},"31-1":{},"32-1":{},"33-1":{},"37-1":{},"40-1":{},"42-1":{},"43-1":{},"44-1":{},"46-1":{},"49-1":{},"50-1":{},"51-1":{},"52-1":{},"55-1":{},"56-1":{},"57-1":{},"58-1":{},"59-1":{},"60-1":{},"61-1":{},"65-1":{},"66-1":{},"67-1":{},"68-1":{},"69-1":{},"70-1":{},"72-1":{},"73-1":{},"75-1":{},"76-1":{},"78-1":{},"80-1":{},"81-1":{},"85-1":{},"88-1":{},"100-1":{},"100-7":{},"103-1":{},"104-1":{},"105-1":{},"107-1":{},"107-4":{},"108-1":{},"111-1":{},"115-1":{},"117-1":{},"118-1":{},"119-1":{},"120-1":{},"122-1":{},"123-1":{},"124-1":{},"125-1":{},"126-1":{},"127-1":{},"128-1":{},"131-1":{},"134-1":{},"135-1":{},"136-1":{},"138-1":{},"138-15":{},"139-1":{},"140-1":{},"141-1":{},"142-1":{},"144-1":{},"145-1":{},"148-1":{},"149-1":{},"151-1":{},"152-1":{},"153-1":{},"154-1":{},"155-1":{},"158-1":{},"159-1":{},"160-1":{},"161-1":{},"162-1":{},"164-1":{},"165-1":{},"166-1":{},"167-1":{},"168-1":{},"171-1":{},"173-1":{},"175-1":{},"177-1":{},"179-1":{},"181-1":{},"182-1":{},"183-1":{},"184-1":{},"185-1":{},"186-1":{},"187-1":{},"191-1":{},"194-1":{},"195-1":{},"196-1":{},"197-1":{},"199-1":{},"200-1":{},"201-1":{},"202-1":{},"203-1":{},"204-1":{},"206-1":{},"207-1":{},"208-1":{},"209-1":{},"210-1":{},"211-1":{},"212-1":{},"213-1":{},"214-1":{},"216-1":{},"217-1":{},"218-1":{},"223-1":{},"226-1":{},"227-1":{},"228-1":{},"229-1":{},"230-1":{},"231-1":{},"237-1":{},"242-1":{},"244-1":{},"246-1":{},"253-1":{},"254-1":{},"255-1":{},"256-1":{},"257-1":{},"259-1":{},"260-1":{},"261-1":{},"262-1":{},"266-1":{},"267-1":{},"268-1":{},"269-1":{},"270-1":{},"271-1":{},"272-1":{}},"name":{"134":{},"138":{}},"text":{"1":{},"4":{},"6":{},"8":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"37":{},"40":{},"42":{},"43":{},"44":{},"46":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"78":{},"80":{},"81":{},"83":{},"85":{},"88":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"148":{},"149":{},"151":{},"152":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"175":{},"177":{},"179":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"237":{},"241":{},"242":{},"244":{},"246":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["1').formdata",{"_index":6218,"title":{},"name":{},"text":{"216":{}},"component":{}}],["1,,valu",{"_index":4391,"title":{},"name":{},"text":{"107":{}},"component":{}}],["1,2,3",{"_index":6360,"title":{},"name":{},"text":{"232":{}},"component":{}}],["1.0",{"_index":2329,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.0.1",{"_index":3148,"title":{},"name":{},"text":{"62":{}},"component":{}}],["1.0.25",{"_index":2377,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.1",{"_index":1008,"title":{"6-2":{},"21-2":{},"58-2":{},"66-2":{},"67-2":{},"73-2":{},"78-2":{},"155-2":{},"195-2":{},"228-2":{},"229-2":{},"254-2":{},"255-2":{},"266-2":{},"267-2":{}},"name":{},"text":{"6":{},"58":{},"66":{},"67":{},"73":{},"78":{},"155":{},"195":{},"228":{},"229":{},"254":{},"255":{},"266":{},"267":{}},"component":{}}],["1.1.1",{"_index":2340,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.18.0",{"_index":2365,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.19",{"_index":2279,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.2",{"_index":1009,"title":{"6-3":{},"21-3":{},"58-3":{},"66-3":{},"67-3":{},"73-3":{},"78-3":{},"155-3":{},"195-3":{}},"name":{},"text":{"6":{},"58":{},"66":{},"67":{},"73":{},"78":{},"155":{},"195":{},"197":{}},"component":{}}],["1.2.1",{"_index":1010,"title":{"6-4":{}},"name":{},"text":{"6":{}},"component":{}}],["1.2.2",{"_index":1012,"title":{"6-5":{}},"name":{},"text":{"6":{}},"component":{}}],["1.2.3",{"_index":1014,"title":{"6-6":{}},"name":{},"text":{"6":{}},"component":{}}],["1.2.4",{"_index":1016,"title":{"6-7":{}},"name":{},"text":{"6":{}},"component":{}}],["1.2.5",{"_index":1018,"title":{"6-8":{}},"name":{},"text":{"6":{}},"component":{}}],["1.2.6",{"_index":1020,"title":{"6-9":{}},"name":{},"text":{"6":{}},"component":{}}],["1.2.7",{"_index":1022,"title":{"6-10":{}},"name":{},"text":{"6":{}},"component":{}}],["1.22.1",{"_index":2362,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.24",{"_index":2345,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.24.0",{"_index":2432,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.25.0",{"_index":2440,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.3",{"_index":1684,"title":{"21-4":{},"67-4":{},"73-4":{},"155-4":{}},"name":{},"text":{"67":{},"73":{},"155":{}},"component":{}}],["1.3.1",{"_index":3368,"title":{"73-5":{}},"name":{},"text":{"73":{}},"component":{}}],["1.3.2",{"_index":3370,"title":{"73-6":{}},"name":{},"text":{"73":{}},"component":{}}],["1.3.236",{"_index":2397,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.3.3",{"_index":3371,"title":{"73-7":{}},"name":{},"text":{"73":{}},"component":{}}],["1.3.4",{"_index":3372,"title":{"73-8":{}},"name":{},"text":{"73":{}},"component":{}}],["1.3.5",{"_index":3373,"title":{"73-9":{}},"name":{},"text":{"73":{}},"component":{}}],["1.3.7",{"_index":3510,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1.35.0",{"_index":2431,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.4",{"_index":3374,"title":{"73-10":{}},"name":{},"text":{"73":{}},"component":{}}],["1.4.1",{"_index":3375,"title":{"73-11":{}},"name":{},"text":{"73":{}},"component":{}}],["1.4.2",{"_index":3377,"title":{"73-12":{}},"name":{},"text":{"73":{}},"component":{}}],["1.5",{"_index":5067,"title":{"142-8":{}},"name":{},"text":{"142":{}},"component":{}}],["1.7.2",{"_index":2311,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.8",{"_index":2406,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.8.0",{"_index":2392,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.9.2",{"_index":1906,"title":{},"name":{},"text":{"26":{},"104":{},"122":{},"123":{}},"component":{}}],["1.9.3",{"_index":716,"title":{},"name":{},"text":{"4":{},"26":{},"104":{},"115":{},"122":{},"123":{},"254":{}},"component":{}}],["1.9.4",{"_index":1908,"title":{},"name":{},"text":{"26":{},"254":{}},"component":{}}],["1.9.4.11",{"_index":620,"title":{},"name":{},"text":{"4":{}},"component":{}}],["1.9.4.7",{"_index":621,"title":{},"name":{},"text":{"4":{}},"component":{}}],["1.9.5",{"_index":492,"title":{},"name":{},"text":{"2":{},"6":{},"26":{},"79":{},"254":{},"270":{}},"component":{}}],["1.9.6",{"_index":3921,"title":{"79":{}},"name":{},"text":{},"component":{}}],["1.9.7",{"_index":2373,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1.9.x.28",{"_index":2090,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1.amazonaws.com",{"_index":3730,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1.amazonaws.com/openshift",{"_index":3731,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1.creat",{"_index":4794,"title":{},"name":{},"text":{"138":{}},"component":{}}],["1.x.x",{"_index":1303,"title":{},"name":{},"text":{"6":{}},"component":{}}],["1/128",{"_index":6588,"title":{},"name":{},"text":{"258":{}},"component":{}}],["1/terraform/terraform.tfst",{"_index":3580,"title":{},"name":{},"text":{"73":{}},"component":{}}],["10",{"_index":553,"title":{"30-10":{},"49-20":{},"167-40":{},"253-12":{},"269-21":{},"272-19":{}},"name":{},"text":{"2":{},"18":{},"30":{},"49":{},"50":{},"51":{},"55":{},"73":{},"80":{},"134":{},"135":{},"136":{},"142":{},"145":{},"152":{},"166":{},"167":{},"195":{},"205":{},"213":{},"227":{},"230":{},"242":{},"253":{},"269":{},"272":{}},"component":{}}],["10.0.0",{"_index":2382,"title":{},"name":{},"text":{"49":{}},"component":{}}],["10.0.0.0/16",{"_index":3679,"title":{},"name":{},"text":{"73":{}},"component":{}}],["10.0.1.0/24",{"_index":3686,"title":{},"name":{},"text":{"73":{}},"component":{}}],["10.0.101.0/24",{"_index":3688,"title":{},"name":{},"text":{"73":{}},"component":{}}],["10.1",{"_index":2233,"title":{"49-21":{},"167-41":{},"253-13":{},"272-20":{}},"name":{},"text":{"49":{},"167":{},"253":{},"272":{}},"component":{}}],["10.1.0",{"_index":2395,"title":{},"name":{},"text":{"49":{}},"component":{}}],["10.128.0.0/14",{"_index":3750,"title":{},"name":{},"text":{"73":{}},"component":{}}],["10.128.32.10:55660",{"_index":5991,"title":{},"name":{},"text":{"196":{}},"component":{}}],["10.128.32.10:55660,localaddress",{"_index":5994,"title":{},"name":{},"text":{"196":{}},"component":{}}],["10.130.18.67:8080",{"_index":5995,"title":{},"name":{},"text":{"196":{}},"component":{}}],["10.2",{"_index":2234,"title":{"49-22":{},"253-14":{},"272-21":{}},"name":{},"text":{"49":{},"253":{},"272":{}},"component":{}}],["10.3",{"_index":6441,"title":{"253-15":{}},"name":{},"text":{"253":{}},"component":{}}],["10.9.1.1",{"_index":1671,"title":{},"name":{},"text":{"19":{}},"component":{}}],["10.9.1.235/24",{"_index":1666,"title":{},"name":{},"text":{"19":{}},"component":{}}],["100",{"_index":2114,"title":{},"name":{},"text":{"44":{},"103":{},"105":{},"141":{},"152":{},"167":{},"188":{},"227":{},"234":{},"248":{},"254":{},"270":{},"272":{}},"component":{}}],["1000",{"_index":4463,"title":{},"name":{},"text":{"115":{}},"component":{}}],["10000",{"_index":2672,"title":{},"name":{},"text":{"55":{}},"component":{}}],["101",{"_index":2908,"title":{},"name":{},"text":{"59":{}},"component":{}}],["101,ministri",{"_index":3008,"title":{},"name":{},"text":{"59":{}},"component":{}}],["101.201",{"_index":2913,"title":{},"name":{},"text":{"59":{}},"component":{}}],["101.202",{"_index":2916,"title":{},"name":{},"text":{"59":{}},"component":{}}],["101.202.303",{"_index":2898,"title":{},"name":{},"text":{"59":{}},"component":{}}],["101.203",{"_index":2919,"title":{},"name":{},"text":{"59":{}},"component":{}}],["101.203.301",{"_index":2921,"title":{},"name":{},"text":{"59":{}},"component":{}}],["101.203.302",{"_index":2924,"title":{},"name":{},"text":{"59":{}},"component":{}}],["1010101014",{"_index":5796,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["102",{"_index":2925,"title":{},"name":{},"text":{"59":{}},"component":{}}],["102,103.206",{"_index":3061,"title":{},"name":{},"text":{"59":{}},"component":{}}],["102,ministri",{"_index":3010,"title":{},"name":{},"text":{"59":{}},"component":{}}],["102.204",{"_index":2927,"title":{},"name":{},"text":{"59":{}},"component":{}}],["102.205",{"_index":2929,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103",{"_index":2931,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103,ministri",{"_index":3012,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103.206",{"_index":2934,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103.207",{"_index":2938,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103.208",{"_index":2940,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103.208.303",{"_index":2944,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103.208.304",{"_index":2947,"title":{},"name":{},"text":{"59":{}},"component":{}}],["103.209",{"_index":2950,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104",{"_index":2952,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104,ministri",{"_index":3014,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.210",{"_index":2956,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.211",{"_index":2959,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.212",{"_index":2962,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.213",{"_index":2968,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.214",{"_index":2971,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.215",{"_index":2974,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.215.305",{"_index":2976,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.215.306",{"_index":2978,"title":{},"name":{},"text":{"59":{}},"component":{}}],["104.215.306.401",{"_index":2980,"title":{},"name":{},"text":{"59":{}},"component":{}}],["1065",{"_index":3149,"title":{},"name":{},"text":{"62":{}},"component":{}}],["1079",{"_index":1683,"title":{},"name":{},"text":{"19":{}},"component":{}}],["10:05",{"_index":1620,"title":{},"name":{},"text":{"16":{}},"component":{}}],["10m",{"_index":3964,"title":{},"name":{},"text":{"80":{}},"component":{}}],["11",{"_index":1588,"title":{"30-11":{},"49-23":{},"167-42":{},"253-16":{},"269-22":{},"272-22":{}},"name":{},"text":{"15":{},"16":{},"30":{},"49":{},"73":{},"134":{},"135":{},"136":{},"152":{},"166":{},"167":{},"253":{},"269":{},"272":{}},"component":{}}],["11.1",{"_index":2235,"title":{"49-24":{},"272-23":{}},"name":{},"text":{"49":{},"272":{}},"component":{}}],["11.2",{"_index":6835,"title":{"272-24":{}},"name":{},"text":{"272":{}},"component":{}}],["11.x",{"_index":2272,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1104.00",{"_index":2474,"title":{},"name":{},"text":{"50":{}},"component":{}}],["11111111",{"_index":5186,"title":{},"name":{},"text":{"154":{},"158":{}},"component":{}}],["114.24",{"_index":2475,"title":{},"name":{},"text":{"50":{}},"component":{}}],["118c",{"_index":5626,"title":{},"name":{},"text":{"167":{}},"component":{}}],["11:05",{"_index":1593,"title":{},"name":{},"text":{"15":{}},"component":{}}],["11:06",{"_index":1596,"title":{},"name":{},"text":{"15":{}},"component":{}}],["11:07",{"_index":1598,"title":{},"name":{},"text":{"15":{}},"component":{}}],["11ed",{"_index":5784,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["12",{"_index":1676,"title":{"30-12":{},"49-25":{},"269-23":{}},"name":{},"text":{"19":{},"21":{},"30":{},"49":{},"50":{},"80":{},"134":{},"135":{},"136":{},"166":{},"167":{},"196":{},"230":{},"269":{}},"component":{}}],["12.1",{"_index":2236,"title":{"49-26":{}},"name":{},"text":{"49":{}},"component":{}}],["12.2",{"_index":2237,"title":{"49-27":{}},"name":{},"text":{"49":{}},"component":{}}],["12.34.56.78",{"_index":1874,"title":{},"name":{},"text":{"25":{}},"component":{}}],["120",{"_index":3982,"title":{},"name":{},"text":{"80":{}},"component":{}}],["120h",{"_index":1638,"title":{},"name":{},"text":{"18":{}},"component":{}}],["123",{"_index":5728,"title":{},"name":{},"text":{"182":{}},"component":{}}],["12345678",{"_index":5046,"title":{},"name":{},"text":{"141":{}},"component":{}}],["1256",{"_index":3722,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1256::22",{"_index":3720,"title":{},"name":{},"text":{"73":{}},"component":{}}],["127.0.0.1/32",{"_index":6587,"title":{},"name":{},"text":{"258":{}},"component":{}}],["128",{"_index":3960,"title":{},"name":{},"text":{"80":{}},"component":{}}],["128mi",{"_index":2052,"title":{},"name":{},"text":{"34":{}},"component":{}}],["1292.61",{"_index":2476,"title":{},"name":{},"text":{"50":{}},"component":{}}],["12:54:51",{"_index":5770,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["12px;\\n",{"_index":5766,"title":{},"name":{},"text":{"183":{}},"component":{}}],["13",{"_index":2238,"title":{"49-28":{},"269-24":{}},"name":{},"text":{"49":{},"134":{},"135":{},"167":{},"269":{}},"component":{}}],["13.1",{"_index":2239,"title":{"49-29":{}},"name":{},"text":{"49":{}},"component":{}}],["13.2",{"_index":2240,"title":{"49-30":{}},"name":{},"text":{"49":{}},"component":{}}],["1323.96",{"_index":2473,"title":{},"name":{},"text":{"50":{}},"component":{}}],["13:05",{"_index":1594,"title":{},"name":{},"text":{"15":{}},"component":{}}],["13:06",{"_index":1597,"title":{},"name":{},"text":{"15":{}},"component":{}}],["13:07",{"_index":1599,"title":{},"name":{},"text":{"15":{}},"component":{}}],["14",{"_index":714,"title":{"49-31":{}},"name":{},"text":{"4":{},"21":{},"49":{},"134":{},"135":{},"165":{},"167":{},"213":{},"258":{}},"component":{}}],["14.1",{"_index":2241,"title":{"49-32":{}},"name":{},"text":{"49":{}},"component":{}}],["14.2",{"_index":2242,"title":{"49-33":{}},"name":{},"text":{"49":{},"258":{}},"component":{}}],["14.5.0",{"_index":2318,"title":{},"name":{},"text":{"49":{}},"component":{}}],["14:15:11",{"_index":1746,"title":{},"name":{},"text":{"21":{}},"component":{}}],["15",{"_index":1719,"title":{"49-34":{}},"name":{},"text":{"21":{},"33":{},"39":{},"49":{},"115":{},"119":{},"122":{},"127":{},"135":{},"167":{},"213":{},"272":{}},"component":{}}],["15.05.2022",{"_index":6198,"title":{},"name":{},"text":{"213":{}},"component":{}}],["15.1",{"_index":2243,"title":{"49-35":{}},"name":{},"text":{"49":{}},"component":{}}],["15.2",{"_index":2244,"title":{"49-36":{}},"name":{},"text":{"49":{}},"component":{}}],["150",{"_index":3701,"title":{},"name":{},"text":{"73":{}},"component":{}}],["152",{"_index":2325,"title":{},"name":{},"text":{"49":{}},"component":{}}],["15in",{"_index":3121,"title":{},"name":{},"text":{"61":{}},"component":{}}],["15th",{"_index":6195,"title":{},"name":{},"text":{"213":{}},"component":{}}],["16",{"_index":2245,"title":{"49-37":{}},"name":{},"text":{"49":{},"119":{},"167":{}},"component":{}}],["16.1",{"_index":2246,"title":{"49-38":{}},"name":{},"text":{"49":{}},"component":{}}],["16.18.1",{"_index":2313,"title":{},"name":{},"text":{"49":{}},"component":{}}],["1657,104.215.306",{"_index":3062,"title":{},"name":{},"text":{"59":{}},"component":{}}],["16:30",{"_index":6196,"title":{},"name":{},"text":{"213":{}},"component":{}}],["16px",{"_index":5762,"title":{},"name":{},"text":{"183":{}},"component":{}}],["16px;\\n",{"_index":5757,"title":{},"name":{},"text":{"183":{}},"component":{}}],["16px;\\n}\\n\\n",{"_index":5767,"title":{},"name":{},"text":{"183":{}},"component":{}}],["16px;\\n}\\n\\n.logo",{"_index":5754,"title":{},"name":{},"text":{"183":{}},"component":{}}],["16t13:17:10.952z",{"_index":5392,"title":{},"name":{},"text":{"161":{}},"component":{}}],["17",{"_index":1624,"title":{"49-39":{}},"name":{},"text":{"16":{},"49":{},"51":{},"73":{},"119":{},"167":{}},"component":{}}],["17.1",{"_index":2247,"title":{"49-40":{}},"name":{},"text":{"49":{}},"component":{}}],["17.2",{"_index":2248,"title":{"49-41":{}},"name":{},"text":{"49":{}},"component":{}}],["17.3",{"_index":2249,"title":{"49-42":{}},"name":{},"text":{"49":{}},"component":{}}],["172.16.0.0/12",{"_index":1944,"title":{},"name":{},"text":{"29":{}},"component":{}}],["172.16.0.192/27",{"_index":1950,"title":{},"name":{},"text":{"29":{},"193":{},"251":{}},"component":{}}],["17:00",{"_index":6408,"title":{},"name":{},"text":{"242":{}},"component":{}}],["17f33242543e4340b690391d6f1d1513",{"_index":4478,"title":{},"name":{},"text":{"115":{}},"component":{}}],["18",{"_index":711,"title":{"49-43":{}},"name":{},"text":{"4":{},"49":{},"167":{}},"component":{}}],["18.04",{"_index":3714,"title":{},"name":{},"text":{"73":{}},"component":{}}],["18.07.2013",{"_index":4739,"title":{},"name":{},"text":{"135":{}},"component":{}}],["18.1",{"_index":2250,"title":{"49-44":{}},"name":{},"text":{"49":{}},"component":{}}],["1823",{"_index":3269,"title":{},"name":{},"text":{"67":{}},"component":{}}],["19",{"_index":712,"title":{"49-45":{}},"name":{},"text":{"4":{},"49":{},"167":{},"253":{}},"component":{}}],["19.04",{"_index":2466,"title":{},"name":{},"text":{"50":{}},"component":{}}],["19.1",{"_index":2251,"title":{"49-46":{}},"name":{},"text":{"49":{}},"component":{}}],["192.168.0.0/23",{"_index":1938,"title":{},"name":{},"text":{"29":{}},"component":{}}],["192.168.1.1/32",{"_index":1936,"title":{},"name":{},"text":{"29":{}},"component":{}}],["192.168.1.240/29",{"_index":1952,"title":{},"name":{},"text":{"29":{},"193":{},"251":{}},"component":{}}],["192.168.1.64/26",{"_index":1949,"title":{},"name":{},"text":{"29":{},"193":{},"251":{}},"component":{}}],["1978",{"_index":5771,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["1:1",{"_index":4413,"title":{},"name":{},"text":{"108":{}},"component":{}}],["1;\\n",{"_index":5746,"title":{},"name":{},"text":{"183":{}},"component":{}}],["1a",{"_index":3682,"title":{},"name":{},"text":{"73":{},"80":{}},"component":{}}],["1b",{"_index":3683,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1c",{"_index":3684,"title":{},"name":{},"text":{"73":{}},"component":{}}],["1dc9f1f9b1e5be4d37c2b68993af243923ea7620",{"_index":5448,"title":{},"name":{},"text":{"162":{}},"component":{}}],["1h",{"_index":5919,"title":{},"name":{},"text":{"195":{},"255":{}},"component":{}}],["1st",{"_index":3295,"title":{"100-3":{}},"name":{},"text":{"67":{},"100":{},"216":{}},"component":{}}],["2",{"_index":2,"title":{"135":{},"139":{},"1-2":{},"4-2":{},"6-11":{},"9-2":{},"12-2":{},"14-2":{},"15-2":{},"16-2":{},"17-2":{},"18-3":{},"19-2":{},"21-5":{},"22-2":{},"23-2":{},"25-2":{},"28-2":{},"29-2":{},"30-2":{},"31-2":{},"32-2":{},"33-2":{},"37-2":{},"40-2":{},"42-2":{},"43-2":{},"44-2":{},"46-2":{},"49-2":{},"50-2":{},"51-2":{},"52-2":{},"55-2":{},"56-2":{},"57-2":{},"58-4":{},"59-2":{},"60-2":{},"61-2":{},"65-2":{},"66-4":{},"67-5":{},"68-2":{},"69-2":{},"70-2":{},"73-13":{},"75-2":{},"76-2":{},"78-4":{},"81-2":{},"85-2":{},"88-2":{},"100-2":{},"100-8":{},"103-2":{},"104-2":{},"105-2":{},"107-2":{},"107-5":{},"108-2":{},"111-2":{},"115-2":{},"117-2":{},"118-3":{},"119-2":{},"120-2":{},"122-2":{},"123-2":{},"124-2":{},"125-2":{},"126-2":{},"127-2":{},"128-2":{},"131-2":{},"134-2":{},"135-2":{},"136-2":{},"138-2":{},"138-16":{},"139-2":{},"140-2":{},"141-2":{},"142-2":{},"144-2":{},"145-2":{},"148-2":{},"149-2":{},"151-2":{},"152-2":{},"153-2":{},"154-2":{},"155-5":{},"158-2":{},"159-2":{},"160-2":{},"161-2":{},"162-2":{},"164-2":{},"165-2":{},"166-2":{},"167-2":{},"168-2":{},"173-2":{},"177-2":{},"179-2":{},"181-2":{},"182-2":{},"183-2":{},"184-2":{},"186-2":{},"191-2":{},"194-2":{},"195-4":{},"196-2":{},"197-2":{},"199-2":{},"200-2":{},"201-2":{},"202-2":{},"203-2":{},"204-2":{},"206-2":{},"207-2":{},"208-2":{},"209-2":{},"210-2":{},"211-2":{},"212-2":{},"213-2":{},"214-2":{},"216-2":{},"217-2":{},"218-3":{},"223-2":{},"226-2":{},"227-2":{},"228-3":{},"229-3":{},"230-2":{},"231-2":{},"237-2":{},"242-2":{},"244-2":{},"246-2":{},"253-2":{},"254-3":{},"255-3":{},"256-2":{},"257-2":{},"259-2":{},"260-2":{},"261-2":{},"262-2":{},"266-3":{},"267-3":{},"268-2":{},"269-2":{},"270-2":{},"271-2":{},"272-2":{}},"name":{"135":{},"139":{}},"text":{"1":{},"4":{},"6":{},"8":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"37":{},"40":{},"42":{},"43":{},"44":{},"46":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"78":{},"81":{},"85":{},"88":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"148":{},"149":{},"151":{},"152":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"173":{},"177":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"191":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"223":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"237":{},"242":{},"244":{},"246":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["2').formdata",{"_index":6221,"title":{},"name":{},"text":{"216":{}},"component":{}}],["2+.<|registri",{"_index":6014,"title":{},"name":{},"text":{"198":{}},"component":{}}],["2+.<|subsystem",{"_index":6011,"title":{},"name":{},"text":{"198":{}},"component":{}}],["2.0",{"_index":2327,"title":{},"name":{},"text":{"49":{},"66":{},"234":{},"264":{}},"component":{}}],["2.0.1",{"_index":3574,"title":{},"name":{},"text":{"73":{}},"component":{}}],["2.1",{"_index":5,"title":{"1-3":{},"6-12":{},"21-6":{},"23-3":{},"25-3":{},"29-3":{},"32-3":{},"50-3":{},"51-3":{},"52-3":{},"61-3":{},"66-5":{},"67-6":{},"73-14":{},"76-3":{},"78-5":{},"100-3":{},"103-3":{},"107-3":{},"123-3":{},"124-3":{},"127-3":{},"142-3":{},"154-3":{},"155-6":{},"161-3":{},"164-3":{},"166-3":{},"167-3":{},"168-3":{},"195-5":{},"200-3":{},"202-3":{},"203-3":{},"206-3":{},"207-3":{},"217-3":{},"218-4":{},"229-4":{},"259-3":{},"260-3":{},"262-3":{}},"name":{},"text":{"1":{},"6":{},"23":{},"25":{},"29":{},"32":{},"49":{},"50":{},"51":{},"52":{},"61":{},"66":{},"67":{},"73":{},"76":{},"78":{},"100":{},"103":{},"107":{},"123":{},"124":{},"127":{},"142":{},"154":{},"155":{},"161":{},"164":{},"166":{},"167":{},"168":{},"195":{},"200":{},"202":{},"203":{},"206":{},"207":{},"217":{},"218":{},"229":{},"259":{},"260":{},"262":{}},"component":{}}],["2.1.1",{"_index":1027,"title":{"6-13":{},"73-15":{},"142-4":{},"154-4":{},"167-4":{},"168-4":{}},"name":{},"text":{"6":{},"73":{},"142":{},"154":{},"167":{},"168":{}},"component":{}}],["2.1.1.1",{"_index":5530,"title":{"167-5":{}},"name":{},"text":{"167":{}},"component":{}}],["2.1.1.2",{"_index":5531,"title":{"167-6":{}},"name":{},"text":{"167":{}},"component":{}}],["2.1.1.3",{"_index":5532,"title":{"167-7":{}},"name":{},"text":{"167":{}},"component":{}}],["2.1.2",{"_index":1028,"title":{"6-14":{},"73-16":{},"142-5":{},"154-5":{},"168-5":{}},"name":{},"text":{"6":{},"73":{},"142":{},"154":{},"168":{}},"component":{}}],["2.1.3",{"_index":1031,"title":{"6-15":{},"142-6":{},"154-6":{},"168-6":{}},"name":{},"text":{"6":{},"142":{},"154":{},"168":{}},"component":{}}],["2.1.4",{"_index":1034,"title":{"6-16":{},"154-7":{}},"name":{},"text":{"6":{},"154":{}},"component":{}}],["2.1.4.1",{"_index":1037,"title":{"6-17":{}},"name":{},"text":{"6":{}},"component":{}}],["2.1.4.2",{"_index":1041,"title":{"6-18":{}},"name":{},"text":{"6":{}},"component":{}}],["2.1.5",{"_index":1043,"title":{"6-19":{},"154-8":{}},"name":{},"text":{"6":{},"154":{}},"component":{}}],["2.1.5.1",{"_index":1045,"title":{"6-20":{}},"name":{},"text":{"6":{}},"component":{}}],["2.1.6",{"_index":5171,"title":{"154-9":{}},"name":{},"text":{"154":{}},"component":{}}],["2.10",{"_index":2352,"title":{"52-12":{},"161-12":{}},"name":{},"text":{"49":{},"52":{},"161":{}},"component":{}}],["2.11",{"_index":2562,"title":{"52-13":{},"161-13":{}},"name":{},"text":{"52":{},"161":{}},"component":{}}],["2.12",{"_index":5360,"title":{"161-14":{}},"name":{},"text":{"161":{}},"component":{}}],["2.14.7",{"_index":2449,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.2",{"_index":9,"title":{"1-4":{},"21-7":{},"23-4":{},"25-4":{},"29-4":{},"32-13":{},"50-4":{},"51-4":{},"52-4":{},"61-4":{},"66-6":{},"67-7":{},"73-17":{},"76-4":{},"78-6":{},"100-4":{},"103-4":{},"107-4":{},"124-4":{},"127-4":{},"142-7":{},"154-10":{},"155-7":{},"161-4":{},"164-4":{},"166-4":{},"167-8":{},"168-7":{},"195-6":{},"202-4":{},"203-4":{},"206-4":{},"217-4":{},"218-5":{},"229-5":{},"259-4":{},"260-4":{},"262-4":{}},"name":{},"text":{"1":{},"23":{},"25":{},"29":{},"32":{},"50":{},"51":{},"52":{},"61":{},"66":{},"67":{},"73":{},"76":{},"78":{},"100":{},"103":{},"107":{},"124":{},"127":{},"142":{},"154":{},"155":{},"161":{},"164":{},"166":{},"167":{},"168":{},"195":{},"202":{},"203":{},"206":{},"217":{},"218":{},"229":{},"259":{},"260":{},"262":{}},"component":{}}],["2.2.1",{"_index":2457,"title":{"50-5":{},"154-11":{},"166-5":{},"262-5":{}},"name":{},"text":{"50":{},"154":{},"166":{},"262":{}},"component":{}}],["2.2.2",{"_index":2458,"title":{"50-6":{},"154-12":{},"166-6":{},"262-6":{}},"name":{},"text":{"50":{},"154":{},"166":{},"262":{}},"component":{}}],["2.2.24",{"_index":2364,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.2.3",{"_index":2459,"title":{"50-7":{},"154-13":{},"166-7":{}},"name":{},"text":{"50":{},"154":{},"166":{}},"component":{}}],["2.2.4",{"_index":5172,"title":{"154-14":{},"166-8":{}},"name":{},"text":{"154":{},"166":{}},"component":{}}],["2.21.0",{"_index":907,"title":{},"name":{},"text":{"4":{},"49":{}},"component":{}}],["2.21.1",{"_index":908,"title":{},"name":{},"text":{"4":{}},"component":{}}],["2.24.0",{"_index":2434,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.27.2",{"_index":2422,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.3",{"_index":1686,"title":{"21-8":{},"32-16":{},"52-5":{},"61-5":{},"67-8":{},"73-18":{},"76-5":{},"78-7":{},"100-5":{},"107-5":{},"127-5":{},"142-9":{},"155-8":{},"161-5":{},"164-5":{},"195-7":{},"206-5":{},"217-5":{},"229-6":{},"262-7":{}},"name":{},"text":{"32":{},"52":{},"61":{},"67":{},"73":{},"76":{},"78":{},"100":{},"107":{},"127":{},"142":{},"155":{},"161":{},"164":{},"195":{},"206":{},"217":{},"229":{},"262":{}},"component":{}}],["2.3.1",{"_index":6606,"title":{"262-8":{}},"name":{},"text":{"262":{}},"component":{}}],["2.3.2",{"_index":6607,"title":{"262-9":{}},"name":{},"text":{"262":{}},"component":{}}],["2.303.3",{"_index":2346,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.36",{"_index":6535,"title":{},"name":{},"text":{"258":{}},"component":{}}],["2.38",{"_index":2450,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.4",{"_index":2005,"title":{"32-20":{},"52-6":{},"73-19":{},"76-6":{},"127-6":{},"142-10":{},"161-6":{},"164-6":{},"217-6":{},"229-7":{},"262-10":{}},"name":{},"text":{"32":{},"52":{},"73":{},"76":{},"127":{},"142":{},"161":{},"164":{},"217":{},"229":{},"262":{}},"component":{}}],["2.4.1",{"_index":5068,"title":{"142-11":{},"262-11":{}},"name":{},"text":{"142":{},"262":{}},"component":{}}],["2.4.2",{"_index":5069,"title":{"142-12":{},"262-12":{}},"name":{},"text":{"142":{},"262":{}},"component":{}}],["2.4.3",{"_index":5070,"title":{"142-13":{}},"name":{},"text":{"142":{}},"component":{}}],["2.4.4",{"_index":5071,"title":{"142-14":{}},"name":{},"text":{"142":{}},"component":{}}],["2.4.5",{"_index":5072,"title":{"142-15":{}},"name":{},"text":{"142":{}},"component":{}}],["2.40",{"_index":1786,"title":{},"name":{},"text":{"21":{}},"component":{}}],["2.5",{"_index":2553,"title":{"52-7":{},"73-20":{},"161-7":{},"217-7":{},"229-8":{},"262-13":{}},"name":{},"text":{"52":{},"73":{},"161":{},"217":{},"229":{},"262":{}},"component":{}}],["2.5.1",{"_index":3381,"title":{"73-21":{},"217-8":{}},"name":{},"text":{"73":{},"217":{}},"component":{}}],["2.5.2",{"_index":3382,"title":{"73-22":{},"217-9":{}},"name":{},"text":{"73":{},"217":{}},"component":{}}],["2.5.3",{"_index":3383,"title":{"73-23":{},"217-10":{}},"name":{},"text":{"73":{},"217":{}},"component":{}}],["2.6",{"_index":2555,"title":{"52-8":{},"73-24":{},"161-8":{},"217-11":{},"229-9":{}},"name":{},"text":{"52":{},"73":{},"161":{},"217":{},"229":{}},"component":{}}],["2.6.1",{"_index":2308,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.7",{"_index":2557,"title":{"52-9":{},"161-9":{}},"name":{},"text":{"52":{},"161":{}},"component":{}}],["2.7.0",{"_index":2360,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2.8",{"_index":2558,"title":{"52-10":{},"161-10":{}},"name":{},"text":{"52":{},"161":{}},"component":{}}],["2.9",{"_index":2561,"title":{"52-11":{},"161-11":{}},"name":{},"text":{"52":{},"161":{}},"component":{}}],["20",{"_index":2252,"title":{"49-47":{}},"name":{},"text":{"49":{},"73":{},"167":{}},"component":{}}],["20.1",{"_index":2254,"title":{"49-48":{}},"name":{},"text":{"49":{}},"component":{}}],["20.6.0",{"_index":2403,"title":{},"name":{},"text":{"49":{}},"component":{}}],["20/02/14",{"_index":6694,"title":{},"name":{},"text":{"269":{}},"component":{}}],["200",{"_index":3281,"title":{},"name":{},"text":{"67":{},"73":{},"205":{},"258":{}},"component":{}}],["2009",{"_index":2282,"title":{},"name":{},"text":{"49":{}},"component":{}}],["201",{"_index":2912,"title":{},"name":{},"text":{"59":{}},"component":{}}],["201,depart",{"_index":3016,"title":{},"name":{},"text":{"59":{}},"component":{}}],["2012",{"_index":2293,"title":{},"name":{},"text":{"49":{},"67":{},"73":{}},"component":{}}],["2014",{"_index":2383,"title":{},"name":{},"text":{"49":{}},"component":{}}],["2019",{"_index":6189,"title":{},"name":{},"text":{"213":{}},"component":{}}],["202",{"_index":2915,"title":{},"name":{},"text":{"59":{}},"component":{}}],["202,divis",{"_index":3018,"title":{},"name":{},"text":{"59":{}},"component":{}}],["2021",{"_index":3263,"title":{},"name":{},"text":{"67":{},"196":{}},"component":{}}],["2021.0.0",{"_index":2309,"title":{},"name":{},"text":{"49":{}},"component":{}}],["20210224",{"_index":3715,"title":{},"name":{},"text":{"73":{}},"component":{}}],["2022",{"_index":1747,"title":{},"name":{},"text":{"21":{},"50":{},"67":{},"73":{},"161":{},"165":{},"213":{}},"component":{}}],["20220527",{"_index":2401,"title":{},"name":{},"text":{"49":{}},"component":{}}],["20220902",{"_index":5496,"title":{},"name":{},"text":{"165":{}},"component":{}}],["2023",{"_index":709,"title":{},"name":{},"text":{"4":{},"16":{}},"component":{}}],["20230629.zip",{"_index":6753,"title":{},"name":{},"text":{"269":{}},"component":{}}],["203",{"_index":2918,"title":{},"name":{},"text":{"59":{}},"component":{}}],["203,depart",{"_index":3020,"title":{},"name":{},"text":{"59":{}},"component":{}}],["204",{"_index":2926,"title":{},"name":{},"text":{"59":{}},"component":{}}],["204,state",{"_index":3026,"title":{},"name":{},"text":{"59":{}},"component":{}}],["205",{"_index":2928,"title":{},"name":{},"text":{"59":{}},"component":{}}],["205,state",{"_index":3028,"title":{},"name":{},"text":{"59":{}},"component":{}}],["206",{"_index":2933,"title":{},"name":{},"text":{"59":{}},"component":{}}],["206,nation",{"_index":3030,"title":{},"name":{},"text":{"59":{}},"component":{}}],["207",{"_index":2937,"title":{},"name":{},"text":{"59":{}},"component":{}}],["207,state",{"_index":3032,"title":{},"name":{},"text":{"59":{}},"component":{}}],["208",{"_index":2939,"title":{},"name":{},"text":{"59":{}},"component":{}}],["208,state",{"_index":3034,"title":{},"name":{},"text":{"59":{}},"component":{}}],["209",{"_index":2949,"title":{},"name":{},"text":{"59":{}},"component":{}}],["209,state",{"_index":3036,"title":{},"name":{},"text":{"59":{}},"component":{}}],["20:00",{"_index":6123,"title":{},"name":{},"text":{"205":{}},"component":{}}],["20gi",{"_index":871,"title":{},"name":{},"text":{"4":{}},"component":{}}],["21",{"_index":2255,"title":{"49-49":{}},"name":{},"text":{"49":{},"167":{}},"component":{}}],["21.1",{"_index":2256,"title":{"49-50":{}},"name":{},"text":{"49":{}},"component":{}}],["210",{"_index":2955,"title":{},"name":{},"text":{"59":{}},"component":{}}],["210,state",{"_index":3042,"title":{},"name":{},"text":{"59":{}},"component":{}}],["211",{"_index":2958,"title":{},"name":{},"text":{"59":{}},"component":{}}],["211,state",{"_index":3044,"title":{},"name":{},"text":{"59":{}},"component":{}}],["212",{"_index":2961,"title":{},"name":{},"text":{"59":{}},"component":{}}],["212,state",{"_index":3046,"title":{},"name":{},"text":{"59":{}},"component":{}}],["213",{"_index":2967,"title":{},"name":{},"text":{"59":{}},"component":{}}],["213,state",{"_index":3048,"title":{},"name":{},"text":{"59":{}},"component":{}}],["214",{"_index":2970,"title":{},"name":{},"text":{"59":{}},"component":{}}],["214,state",{"_index":3050,"title":{},"name":{},"text":{"59":{}},"component":{}}],["214722",{"_index":4731,"title":{},"name":{},"text":{"135":{}},"component":{}}],["215",{"_index":2973,"title":{},"name":{},"text":{"59":{}},"component":{}}],["215,state",{"_index":3052,"title":{},"name":{},"text":{"59":{}},"component":{}}],["22",{"_index":2257,"title":{"49-51":{}},"name":{},"text":{"49":{},"73":{},"167":{}},"component":{}}],["22.1",{"_index":2258,"title":{"49-52":{}},"name":{},"text":{"49":{}},"component":{}}],["22.85",{"_index":2465,"title":{},"name":{},"text":{"50":{}},"component":{}}],["220.8",{"_index":2464,"title":{},"name":{},"text":{"50":{}},"component":{}}],["2222",{"_index":5431,"title":{},"name":{},"text":{"162":{}},"component":{}}],["22222222",{"_index":5251,"title":{},"name":{},"text":{"158":{}},"component":{}}],["2222222222",{"_index":5188,"title":{},"name":{},"text":{"154":{}},"component":{}}],["22965",{"_index":3272,"title":{},"name":{},"text":{"67":{}},"component":{}}],["22:00",{"_index":6125,"title":{},"name":{},"text":{"205":{}},"component":{}}],["23",{"_index":2259,"title":{"49-53":{}},"name":{},"text":{"49":{},"73":{},"167":{}},"component":{}}],["23+.<|regist",{"_index":6013,"title":{},"name":{},"text":{"198":{}},"component":{}}],["23.1",{"_index":2260,"title":{"49-54":{}},"name":{},"text":{"49":{}},"component":{}}],["23.2",{"_index":2261,"title":{"49-55":{}},"name":{},"text":{"49":{}},"component":{}}],["23804735",{"_index":4703,"title":{},"name":{},"text":{"135":{}},"component":{}}],["24",{"_index":1669,"title":{"49-56":{}},"name":{},"text":{"19":{},"49":{},"73":{},"80":{}},"component":{}}],["24.1",{"_index":2262,"title":{"49-57":{}},"name":{},"text":{"49":{}},"component":{}}],["24.2",{"_index":2263,"title":{"49-58":{}},"name":{},"text":{"49":{}},"component":{}}],["24.3",{"_index":2264,"title":{"49-59":{}},"name":{},"text":{"49":{}},"component":{}}],["242b",{"_index":5443,"title":{},"name":{},"text":{"162":{}},"component":{}}],["24px;\\n",{"_index":5760,"title":{},"name":{},"text":{"183":{}},"component":{}}],["24px;\\n}\\n\\n.main",{"_index":5758,"title":{},"name":{},"text":{"183":{}},"component":{}}],["24t12:48:45.867291z",{"_index":5966,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867334z",{"_index":5968,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867376z",{"_index":5970,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867393z",{"_index":5972,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867400z",{"_index":5973,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867447z",{"_index":5974,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867497z",{"_index":5975,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867507z",{"_index":5983,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867616z",{"_index":5988,"title":{},"name":{},"text":{"196":{}},"component":{}}],["24t12:48:45.867628z",{"_index":5996,"title":{},"name":{},"text":{"196":{}},"component":{}}],["25",{"_index":1641,"title":{"49-60":{}},"name":{},"text":{"18":{},"25":{},"49":{},"136":{},"152":{},"166":{}},"component":{}}],["25.1",{"_index":2265,"title":{"49-61":{}},"name":{},"text":{"49":{}},"component":{}}],["25.2",{"_index":2266,"title":{"49-62":{}},"name":{},"text":{"49":{}},"component":{}}],["255",{"_index":4506,"title":{},"name":{},"text":{"119":{},"120":{}},"component":{}}],["256",{"_index":3961,"title":{},"name":{},"text":{"80":{}},"component":{}}],["2579.39",{"_index":2477,"title":{},"name":{},"text":{"50":{}},"component":{}}],["258.52",{"_index":2468,"title":{},"name":{},"text":{"50":{}},"component":{}}],["25h",{"_index":1681,"title":{},"name":{},"text":{"19":{}},"component":{}}],["26",{"_index":2267,"title":{"49-63":{}},"name":{},"text":{"49":{},"60":{},"152":{},"183":{},"186":{}},"component":{}}],["26.1",{"_index":2268,"title":{"49-64":{}},"name":{},"text":{"49":{}},"component":{}}],["27",{"_index":2269,"title":{"49-65":{}},"name":{},"text":{"49":{},"166":{}},"component":{}}],["27.1",{"_index":2270,"title":{"49-66":{}},"name":{},"text":{"49":{}},"component":{}}],["28",{"_index":1636,"title":{},"name":{},"text":{"18":{}},"component":{}}],["28px;\\n}\\n\\n.footer",{"_index":5761,"title":{},"name":{},"text":{"183":{}},"component":{}}],["2_mju_edr_prod",{"_index":5453,"title":{},"name":{},"text":{"162":{},"195":{}},"component":{}}],["2c963f66afa6",{"_index":5597,"title":{},"name":{},"text":{"167":{}},"component":{}}],["2d89ffea",{"_index":5625,"title":{},"name":{},"text":{"167":{}},"component":{}}],["2fa",{"_index":3284,"title":{},"name":{},"text":{"67":{}},"component":{}}],["2gi",{"_index":2056,"title":{},"name":{},"text":{"34":{}},"component":{}}],["2i",{"_index":3783,"title":{},"name":{},"text":{"73":{}},"component":{}}],["2n5bl",{"_index":1680,"title":{},"name":{},"text":{"19":{}},"component":{}}],["2nd",{"_index":3296,"title":{"100-4":{}},"name":{},"text":{"67":{},"100":{},"216":{},"270":{}},"component":{}}],["2uxeg6l",{"_index":5698,"title":{},"name":{},"text":{"179":{}},"component":{}}],["2xx",{"_index":6868,"title":{},"name":{},"text":{"272":{}},"component":{}}],["3",{"_index":13,"title":{"136":{},"140":{},"1-5":{},"4-3":{},"6-21":{},"9-3":{},"15-3":{},"16-3":{},"19-3":{},"21-9":{},"23-5":{},"25-5":{},"28-3":{},"29-5":{},"30-3":{},"31-3":{},"32-26":{},"33-3":{},"42-3":{},"43-3":{},"44-3":{},"46-3":{},"49-3":{},"51-5":{},"52-14":{},"55-3":{},"57-3":{},"58-5":{},"59-3":{},"60-3":{},"66-7":{},"67-9":{},"69-3":{},"70-3":{},"73-25":{},"75-3":{},"81-3":{},"85-3":{},"88-3":{},"100-6":{},"103-5":{},"104-3":{},"105-3":{},"107-6":{},"108-3":{},"115-3":{},"117-3":{},"118-4":{},"119-3":{},"123-4":{},"124-5":{},"125-3":{},"128-3":{},"131-3":{},"134-3":{},"135-3":{},"136-3":{},"138-3":{},"139-3":{},"140-3":{},"141-3":{},"151-3":{},"152-3":{},"153-3":{},"154-15":{},"158-3":{},"159-3":{},"160-3":{},"161-15":{},"162-3":{},"164-7":{},"165-3":{},"166-9":{},"167-9":{},"173-3":{},"177-3":{},"181-3":{},"182-3":{},"183-3":{},"186-3":{},"191-3":{},"194-3":{},"195-8":{},"196-3":{},"197-3":{},"199-3":{},"201-3":{},"202-5":{},"204-3":{},"207-4":{},"208-3":{},"209-3":{},"210-3":{},"211-3":{},"212-3":{},"213-3":{},"216-3":{},"218-6":{},"226-3":{},"227-3":{},"237-3":{},"242-3":{},"244-3":{},"253-3":{},"254-4":{},"255-4":{},"256-3":{},"257-3":{},"266-4":{},"267-4":{},"268-3":{},"269-3":{},"270-3":{},"271-3":{},"272-3":{}},"name":{"136":{},"140":{}},"text":{"1":{},"4":{},"6":{},"9":{},"15":{},"16":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"40":{},"42":{},"43":{},"44":{},"46":{},"49":{},"51":{},"52":{},"55":{},"58":{},"59":{},"60":{},"62":{},"66":{},"67":{},"69":{},"70":{},"73":{},"75":{},"80":{},"81":{},"85":{},"88":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"115":{},"117":{},"118":{},"119":{},"123":{},"124":{},"125":{},"128":{},"129":{},"131":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"151":{},"152":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"173":{},"175":{},"177":{},"179":{},"181":{},"182":{},"183":{},"186":{},"191":{},"194":{},"195":{},"196":{},"197":{},"199":{},"201":{},"202":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"216":{},"218":{},"226":{},"227":{},"229":{},"231":{},"232":{},"234":{},"237":{},"239":{},"242":{},"244":{},"246":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["3.0.0",{"_index":2366,"title":{},"name":{},"text":{"49":{}},"component":{}}],["3.0.1",{"_index":2356,"title":{},"name":{},"text":{"49":{}},"component":{}}],["3.0.6",{"_index":2275,"title":{},"name":{},"text":{"49":{}},"component":{}}],["3.1",{"_index":1047,"title":{"6-22":{},"9-4":{},"21-10":{},"46-4":{},"58-6":{},"81-4":{},"100-7":{},"105-4":{},"107-7":{},"115-4":{},"124-6":{},"125-4":{},"139-4":{},"140-4":{},"141-4":{},"158-4":{},"162-4":{},"166-10":{},"167-10":{},"183-4":{},"186-4":{},"195-9":{},"202-6":{},"207-5":{},"209-4":{},"216-4":{},"237-4":{},"244-4":{},"266-5":{},"267-5":{}},"name":{},"text":{"6":{},"9":{},"46":{},"58":{},"81":{},"100":{},"105":{},"107":{},"115":{},"124":{},"125":{},"139":{},"140":{},"141":{},"158":{},"162":{},"166":{},"167":{},"183":{},"186":{},"195":{},"202":{},"207":{},"209":{},"216":{},"237":{},"244":{},"266":{},"267":{}},"component":{}}],["3.1.1",{"_index":2453,"title":{"139-5":{},"140-5":{},"141-5":{},"237-5":{}},"name":{},"text":{"49":{},"139":{},"140":{},"141":{},"237":{}},"component":{}}],["3.1.10",{"_index":4905,"title":{"140-14":{},"141-14":{}},"name":{},"text":{"140":{},"141":{}},"component":{}}],["3.1.11",{"_index":4906,"title":{"140-15":{},"141-15":{}},"name":{},"text":{"140":{},"141":{}},"component":{}}],["3.1.12",{"_index":4907,"title":{"140-16":{},"141-16":{}},"name":{},"text":{"140":{},"141":{}},"component":{}}],["3.1.13",{"_index":4908,"title":{"140-17":{},"141-17":{}},"name":{},"text":{"140":{},"141":{}},"component":{}}],["3.1.14",{"_index":4909,"title":{"140-18":{}},"name":{},"text":{"140":{}},"component":{}}],["3.1.15",{"_index":4910,"title":{"140-19":{}},"name":{},"text":{"140":{}},"component":{}}],["3.1.16",{"_index":4911,"title":{"140-20":{}},"name":{},"text":{"140":{}},"component":{}}],["3.1.2",{"_index":3500,"title":{"139-6":{},"140-6":{},"141-6":{},"237-6":{}},"name":{},"text":{"73":{},"139":{},"140":{},"141":{},"237":{}},"component":{}}],["3.1.3",{"_index":4880,"title":{"139-7":{},"140-7":{},"141-7":{},"237-7":{}},"name":{},"text":{"139":{},"140":{},"141":{},"237":{}},"component":{}}],["3.1.4",{"_index":4881,"title":{"139-8":{},"140-8":{},"141-8":{},"237-8":{}},"name":{},"text":{"139":{},"140":{},"141":{},"237":{}},"component":{}}],["3.1.5",{"_index":4882,"title":{"139-9":{},"140-9":{},"141-9":{}},"name":{},"text":{"139":{},"140":{},"141":{}},"component":{}}],["3.1.6",{"_index":4883,"title":{"139-10":{},"140-10":{},"141-10":{}},"name":{},"text":{"139":{},"140":{},"141":{}},"component":{}}],["3.1.7",{"_index":4884,"title":{"139-11":{},"140-11":{},"141-11":{}},"name":{},"text":{"139":{},"140":{},"141":{}},"component":{}}],["3.1.8",{"_index":4885,"title":{"139-12":{},"140-12":{},"141-12":{}},"name":{},"text":{"139":{},"140":{},"141":{}},"component":{}}],["3.1.9",{"_index":4904,"title":{"140-13":{},"141-13":{}},"name":{},"text":{"140":{},"141":{}},"component":{}}],["3.10",{"_index":5856,"title":{"195-18":{},"202-15":{},"216-13":{}},"name":{},"text":{"195":{},"202":{},"216":{}},"component":{}}],["3.10.1",{"_index":5857,"title":{"195-19":{}},"name":{},"text":{"195":{}},"component":{}}],["3.10.2",{"_index":5858,"title":{"195-20":{}},"name":{},"text":{"195":{}},"component":{}}],["3.10.3",{"_index":5859,"title":{"195-21":{}},"name":{},"text":{"195":{}},"component":{}}],["3.11",{"_index":6034,"title":{"202-16":{},"216-14":{}},"name":{},"text":{"202":{},"216":{}},"component":{}}],["3.12",{"_index":6207,"title":{"216-15":{}},"name":{},"text":{"216":{}},"component":{}}],["3.19.0",{"_index":3526,"title":{},"name":{},"text":{"73":{}},"component":{}}],["3.2",{"_index":1050,"title":{"6-23":{},"9-5":{},"21-11":{},"46-5":{},"58-7":{},"81-5":{},"100-8":{},"105-5":{},"115-5":{},"124-7":{},"125-5":{},"139-13":{},"140-21":{},"141-18":{},"158-5":{},"162-5":{},"166-11":{},"167-11":{},"183-5":{},"186-5":{},"195-10":{},"202-7":{},"207-6":{},"209-5":{},"216-5":{},"237-9":{},"244-5":{},"266-6":{},"267-6":{}},"name":{},"text":{"6":{},"9":{},"46":{},"58":{},"81":{},"100":{},"105":{},"115":{},"124":{},"125":{},"139":{},"140":{},"141":{},"158":{},"162":{},"166":{},"167":{},"183":{},"186":{},"195":{},"202":{},"207":{},"209":{},"216":{},"237":{},"244":{},"266":{},"267":{}},"component":{}}],["3.2.1",{"_index":2389,"title":{"58-8":{},"105-6":{},"139-14":{},"140-22":{},"141-19":{},"162-6":{},"167-12":{},"237-10":{}},"name":{},"text":{"49":{},"58":{},"105":{},"139":{},"140":{},"141":{},"162":{},"167":{},"237":{}},"component":{}}],["3.2.1.1",{"_index":2761,"title":{"58-9":{}},"name":{},"text":{"58":{}},"component":{}}],["3.2.1.2",{"_index":2762,"title":{"58-10":{}},"name":{},"text":{"58":{}},"component":{}}],["3.2.2",{"_index":2763,"title":{"58-11":{},"105-7":{},"139-15":{},"140-23":{},"141-20":{},"162-7":{},"167-13":{},"237-11":{}},"name":{},"text":{"58":{},"105":{},"139":{},"140":{},"141":{},"162":{},"167":{},"237":{}},"component":{}}],["3.2.2.1",{"_index":2764,"title":{"58-12":{},"141-21":{}},"name":{},"text":{"58":{},"141":{}},"component":{}}],["3.2.2.2",{"_index":2765,"title":{"58-13":{},"141-22":{}},"name":{},"text":{"58":{},"141":{}},"component":{}}],["3.2.3",{"_index":2766,"title":{"58-14":{},"139-16":{},"140-24":{},"141-23":{},"162-8":{},"167-19":{},"237-12":{}},"name":{},"text":{"58":{},"139":{},"140":{},"141":{},"162":{},"167":{},"237":{}},"component":{}}],["3.2.3.1",{"_index":2767,"title":{"58-15":{}},"name":{},"text":{"58":{}},"component":{}}],["3.2.3.2",{"_index":2768,"title":{"58-16":{}},"name":{},"text":{"58":{}},"component":{}}],["3.2.4",{"_index":2769,"title":{"58-17":{},"139-17":{},"141-24":{},"162-9":{}},"name":{},"text":{"58":{},"139":{},"141":{},"162":{}},"component":{}}],["3.2.4.1",{"_index":2770,"title":{"58-18":{}},"name":{},"text":{"58":{}},"component":{}}],["3.2.4.2",{"_index":2771,"title":{"58-19":{}},"name":{},"text":{"58":{}},"component":{}}],["3.2.45",{"_index":2295,"title":{},"name":{},"text":{"49":{}},"component":{}}],["3.2.5",{"_index":4886,"title":{"139-18":{},"162-10":{}},"name":{},"text":{"139":{},"162":{}},"component":{}}],["3.3",{"_index":1052,"title":{"6-24":{},"46-6":{},"58-20":{},"81-6":{},"100-9":{},"105-8":{},"124-8":{},"125-6":{},"139-19":{},"140-25":{},"141-25":{},"167-20":{},"183-6":{},"186-6":{},"195-11":{},"202-8":{},"209-6":{},"216-6":{},"266-7":{},"267-7":{}},"name":{},"text":{"6":{},"46":{},"58":{},"81":{},"100":{},"105":{},"124":{},"125":{},"139":{},"140":{},"141":{},"162":{},"167":{},"183":{},"186":{},"195":{},"202":{},"209":{},"216":{},"266":{},"267":{}},"component":{}}],["3.3.1",{"_index":4990,"title":{"141-26":{}},"name":{},"text":{"141":{}},"component":{}}],["3.3.2",{"_index":2347,"title":{},"name":{},"text":{"49":{}},"component":{}}],["3.30.0",{"_index":2348,"title":{},"name":{},"text":{"49":{}},"component":{}}],["3.4",{"_index":1054,"title":{"6-25":{},"46-7":{},"81-7":{},"105-9":{},"124-9":{},"125-7":{},"139-20":{},"167-21":{},"195-12":{},"202-9":{},"209-7":{},"216-7":{},"267-8":{}},"name":{},"text":{"6":{},"46":{},"81":{},"105":{},"124":{},"125":{},"139":{},"162":{},"167":{},"195":{},"202":{},"209":{},"216":{},"267":{}},"component":{}}],["3.4.1",{"_index":1055,"title":{"6-26":{}},"name":{},"text":{"6":{}},"component":{}}],["3.5",{"_index":1056,"title":{"6-27":{},"46-8":{},"81-8":{},"124-10":{},"125-8":{},"195-13":{},"202-10":{},"209-8":{},"216-8":{},"267-9":{}},"name":{},"text":{"6":{},"46":{},"81":{},"124":{},"125":{},"162":{},"195":{},"202":{},"209":{},"216":{},"267":{}},"component":{}}],["3.5.1",{"_index":1057,"title":{"6-28":{}},"name":{},"text":{"6":{}},"component":{}}],["3.5.2",{"_index":1058,"title":{"6-29":{}},"name":{},"text":{"6":{}},"component":{}}],["3.6",{"_index":2136,"title":{"46-9":{},"81-9":{},"195-14":{},"202-11":{},"209-9":{},"216-9":{},"267-10":{}},"name":{},"text":{"46":{},"81":{},"195":{},"202":{},"209":{},"216":{},"267":{}},"component":{}}],["3.6.0",{"_index":3489,"title":{},"name":{},"text":{"73":{}},"component":{}}],["3.6.1",{"_index":6634,"title":{"267-11":{}},"name":{},"text":{"267":{}},"component":{}}],["3.6.2",{"_index":6635,"title":{"267-12":{}},"name":{},"text":{"267":{}},"component":{}}],["3.7",{"_index":4003,"title":{"81-10":{},"195-15":{},"202-12":{},"216-10":{},"267-13":{}},"name":{},"text":{"81":{},"195":{},"202":{},"216":{},"267":{}},"component":{}}],["3.7.1",{"_index":6636,"title":{"267-14":{}},"name":{},"text":{"267":{}},"component":{}}],["3.8",{"_index":5853,"title":{"195-16":{},"202-13":{},"216-11":{}},"name":{},"text":{"195":{},"202":{},"216":{}},"component":{}}],["3.9",{"_index":5854,"title":{"195-17":{},"202-14":{},"216-12":{}},"name":{},"text":{"195":{},"202":{},"216":{}},"component":{}}],["3.x",{"_index":2283,"title":{},"name":{},"text":{"49":{}},"component":{}}],["30",{"_index":2071,"title":{},"name":{},"text":{"39":{},"72":{},"80":{},"119":{},"167":{},"213":{},"253":{},"271":{}},"component":{}}],["300",{"_index":4931,"title":{},"name":{},"text":{"140":{},"141":{},"144":{},"179":{},"258":{}},"component":{}}],["301",{"_index":2920,"title":{},"name":{},"text":{"59":{}},"component":{}}],["301,depart",{"_index":3022,"title":{},"name":{},"text":{"59":{}},"component":{}}],["302",{"_index":2923,"title":{},"name":{},"text":{"59":{}},"component":{}}],["302,depart",{"_index":3024,"title":{},"name":{},"text":{"59":{}},"component":{}}],["303",{"_index":2943,"title":{},"name":{},"text":{"59":{}},"component":{}}],["303,offic",{"_index":3038,"title":{},"name":{},"text":{"59":{}},"component":{}}],["304",{"_index":2946,"title":{},"name":{},"text":{"59":{}},"component":{}}],["304,offic",{"_index":3040,"title":{},"name":{},"text":{"59":{}},"component":{}}],["305",{"_index":2975,"title":{},"name":{},"text":{"59":{}},"component":{}}],["305,depart",{"_index":3054,"title":{},"name":{},"text":{"59":{}},"component":{}}],["306",{"_index":2977,"title":{},"name":{},"text":{"59":{}},"component":{}}],["306,depart",{"_index":3056,"title":{},"name":{},"text":{"59":{}},"component":{}}],["32",{"_index":835,"title":{},"name":{},"text":{"4":{},"33":{},"175":{}},"component":{}}],["32px",{"_index":5751,"title":{},"name":{},"text":{"183":{}},"component":{}}],["34554362",{"_index":5254,"title":{},"name":{},"text":{"158":{}},"component":{}}],["345870",{"_index":5141,"title":{},"name":{},"text":{"144":{},"184":{}},"component":{}}],["350",{"_index":86,"title":{},"name":{},"text":{"1":{}},"component":{}}],["350m",{"_index":2051,"title":{},"name":{},"text":{"34":{}},"component":{}}],["36",{"_index":1626,"title":{},"name":{},"text":{"16":{}},"component":{}}],["3d",{"_index":1999,"title":{},"name":{},"text":{"31":{}},"component":{}}],["3fa85f64",{"_index":5593,"title":{},"name":{},"text":{"167":{}},"component":{}}],["3i",{"_index":3786,"title":{},"name":{},"text":{"73":{}},"component":{}}],["3r",{"_index":3337,"title":{},"name":{},"text":{"67":{}},"component":{}}],["3rd",{"_index":2351,"title":{},"name":{},"text":{"49":{},"85":{},"88":{},"191":{},"194":{},"197":{},"199":{},"204":{}},"component":{}}],["4",{"_index":591,"title":{"141":{},"4-4":{},"6-30":{},"9-6":{},"19-4":{},"23-6":{},"25-6":{},"28-4":{},"30-4":{},"32-27":{},"33-4":{},"42-4":{},"43-4":{},"44-4":{},"49-4":{},"52-15":{},"55-5":{},"57-4":{},"58-21":{},"59-4":{},"60-4":{},"66-8":{},"67-10":{},"69-4":{},"70-4":{},"73-26":{},"75-4":{},"85-4":{},"88-4":{},"104-4":{},"105-10":{},"107-8":{},"108-4":{},"115-6":{},"119-4":{},"131-4":{},"138-4":{},"139-21":{},"140-27":{},"141-27":{},"151-4":{},"152-4":{},"154-16":{},"159-4":{},"160-4":{},"161-16":{},"167-22":{},"173-4":{},"177-4":{},"183-7":{},"186-7":{},"191-4":{},"194-4":{},"195-22":{},"197-4":{},"199-4":{},"201-4":{},"204-4":{},"208-4":{},"211-4":{},"212-4":{},"213-4":{},"216-16":{},"237-13":{},"242-4":{},"244-6":{},"253-4":{},"254-5":{},"255-5":{},"256-4":{},"257-4":{},"266-8":{},"267-15":{},"268-4":{},"269-4":{},"270-4":{},"271-4":{},"272-4":{}},"name":{"141":{}},"text":{"4":{},"6":{},"9":{},"18":{},"23":{},"25":{},"28":{},"29":{},"30":{},"32":{},"33":{},"42":{},"43":{},"44":{},"49":{},"52":{},"55":{},"58":{},"59":{},"60":{},"66":{},"67":{},"69":{},"70":{},"73":{},"75":{},"80":{},"85":{},"88":{},"104":{},"105":{},"107":{},"108":{},"115":{},"119":{},"124":{},"129":{},"131":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"151":{},"152":{},"154":{},"159":{},"160":{},"161":{},"165":{},"166":{},"167":{},"173":{},"177":{},"183":{},"186":{},"191":{},"194":{},"195":{},"197":{},"199":{},"201":{},"204":{},"205":{},"206":{},"208":{},"211":{},"212":{},"213":{},"216":{},"227":{},"229":{},"231":{},"237":{},"242":{},"244":{},"246":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["4+.<|administr",{"_index":6009,"title":{},"name":{},"text":{"198":{}},"component":{}}],["4+.<|subsystem",{"_index":6016,"title":{},"name":{},"text":{"198":{}},"component":{}}],["4.0",{"_index":5447,"title":{},"name":{},"text":{"162":{},"195":{}},"component":{}}],["4.1",{"_index":1643,"title":{"19-5":{},"55-6":{},"60-5":{},"66-9":{},"69-5":{},"70-5":{},"108-5":{},"119-5":{},"138-5":{},"167-23":{},"195-23":{},"242-5":{},"254-6":{},"255-6":{},"256-5":{},"266-9":{},"267-16":{}},"name":{},"text":{"55":{},"60":{},"63":{},"66":{},"69":{},"70":{},"108":{},"119":{},"138":{},"167":{},"195":{},"242":{},"254":{},"255":{},"256":{},"266":{},"267":{}},"component":{}}],["4.1.2",{"_index":2303,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.10.7",{"_index":2341,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.11",{"_index":1907,"title":{},"name":{},"text":{"26":{},"49":{},"73":{}},"component":{}}],["4.11.0",{"_index":2439,"title":{},"name":{},"text":{"49":{},"73":{}},"component":{}}],["4.11.4",{"_index":2305,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.12",{"_index":1909,"title":{},"name":{},"text":{"26":{}},"component":{}}],["4.13.12",{"_index":2386,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.15",{"_index":4045,"title":{},"name":{},"text":{"83":{}},"component":{}}],["4.2",{"_index":1644,"title":{"19-6":{},"55-7":{},"60-6":{},"66-10":{},"69-6":{},"70-6":{},"108-6":{},"119-6":{},"138-6":{},"167-24":{},"195-24":{},"242-6":{},"255-7":{},"266-10":{},"267-17":{}},"name":{},"text":{"49":{},"55":{},"60":{},"66":{},"69":{},"70":{},"108":{},"119":{},"138":{},"167":{},"195":{},"242":{},"255":{},"266":{},"267":{}},"component":{}}],["4.2.1",{"_index":3067,"title":{"60-7":{}},"name":{},"text":{"60":{}},"component":{}}],["4.2.2",{"_index":3068,"title":{"60-8":{}},"name":{},"text":{"60":{}},"component":{}}],["4.2.3",{"_index":3069,"title":{"60-9":{}},"name":{},"text":{"60":{}},"component":{}}],["4.2.4",{"_index":3071,"title":{"60-10":{}},"name":{},"text":{"60":{}},"component":{}}],["4.2.5",{"_index":3072,"title":{"60-11":{}},"name":{},"text":{"60":{}},"component":{}}],["4.2.6",{"_index":3073,"title":{"60-12":{}},"name":{},"text":{"60":{}},"component":{}}],["4.2.7",{"_index":3074,"title":{"60-13":{}},"name":{},"text":{"60":{}},"component":{}}],["4.3",{"_index":2405,"title":{"60-14":{},"66-11":{},"108-7":{},"119-7":{},"138-7":{},"167-25":{},"242-7":{},"255-8":{}},"name":{},"text":{"49":{},"60":{},"63":{},"66":{},"108":{},"119":{},"138":{},"167":{},"242":{},"255":{}},"component":{}}],["4.3.0",{"_index":3544,"title":{},"name":{},"text":{"73":{}},"component":{}}],["4.3.1",{"_index":2334,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.4",{"_index":3075,"title":{"60-15":{},"66-12":{},"108-8":{},"138-8":{},"167-26":{}},"name":{},"text":{"60":{},"63":{},"66":{},"108":{},"138":{},"167":{}},"component":{}}],["4.4.0",{"_index":2427,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.4.1",{"_index":4399,"title":{"108-9":{}},"name":{},"text":{"108":{}},"component":{}}],["4.4.2",{"_index":4400,"title":{"108-10":{}},"name":{},"text":{"108":{}},"component":{}}],["4.5",{"_index":3077,"title":{"60-16":{},"66-13":{},"108-11":{},"138-9":{},"167-27":{}},"name":{},"text":{"60":{},"66":{},"108":{},"138":{},"167":{}},"component":{}}],["4.5.0",{"_index":4098,"title":{},"name":{},"text":{"83":{}},"component":{}}],["4.5.1",{"_index":4401,"title":{"108-12":{}},"name":{},"text":{"108":{}},"component":{}}],["4.5.1.1",{"_index":4402,"title":{"108-13":{}},"name":{},"text":{"108":{}},"component":{}}],["4.5.5",{"_index":2289,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.5.xsd",{"_index":6428,"title":{},"name":{},"text":{"244":{}},"component":{}}],["4.51.0",{"_index":3583,"title":{},"name":{},"text":{"73":{}},"component":{}}],["4.6",{"_index":3184,"title":{"66-14":{},"108-14":{}},"name":{},"text":{"66":{},"108":{}},"component":{}}],["4.7",{"_index":3185,"title":{"66-15":{},"108-15":{}},"name":{},"text":{"66":{},"108":{}},"component":{}}],["4.9.8",{"_index":2343,"title":{},"name":{},"text":{"49":{}},"component":{}}],["4.ad",{"_index":4804,"title":{},"name":{},"text":{"138":{}},"component":{}}],["4.x",{"_index":1797,"title":{"24":{},"188":{},"193":{}},"name":{},"text":{"22":{},"27":{},"29":{},"40":{},"188":{},"193":{},"251":{}},"component":{}}],["400",{"_index":1880,"title":{},"name":{},"text":{"25":{},"205":{}},"component":{}}],["401",{"_index":2979,"title":{},"name":{},"text":{"59":{},"122":{},"205":{}},"component":{}}],["401,offic",{"_index":3058,"title":{},"name":{},"text":{"59":{}},"component":{}}],["404",{"_index":6425,"title":{},"name":{},"text":{"244":{},"272":{}},"component":{}}],["4078",{"_index":5043,"title":{},"name":{},"text":{"141":{}},"component":{}}],["40gi",{"_index":878,"title":{},"name":{},"text":{"4":{}},"component":{}}],["42",{"_index":5677,"title":{},"name":{},"text":{"173":{}},"component":{}}],["42,101.203.301",{"_index":3063,"title":{},"name":{},"text":{"59":{}},"component":{}}],["429",{"_index":2654,"title":{},"name":{},"text":{"55":{},"272":{}},"component":{}}],["43395033",{"_index":5450,"title":{},"name":{},"text":{"162":{},"195":{}},"component":{}}],["44228",{"_index":3264,"title":{},"name":{},"text":{"67":{}},"component":{}}],["443",{"_index":4544,"title":{},"name":{},"text":{"122":{}},"component":{}}],["45046",{"_index":3265,"title":{},"name":{},"text":{"67":{}},"component":{}}],["4562",{"_index":5595,"title":{},"name":{},"text":{"167":{}},"component":{}}],["466ad903",{"_index":5041,"title":{},"name":{},"text":{"141":{}},"component":{}}],["46fe",{"_index":5632,"title":{},"name":{},"text":{"167":{}},"component":{}}],["48",{"_index":1891,"title":{},"name":{},"text":{"25":{},"75":{},"76":{},"188":{},"247":{}},"component":{}}],["48px",{"_index":5759,"title":{},"name":{},"text":{"183":{}},"component":{}}],["48px;\\n",{"_index":5750,"title":{},"name":{},"text":{"183":{}},"component":{}}],["48px;\\n}\\n\\n.platform",{"_index":5756,"title":{},"name":{},"text":{"183":{}},"component":{}}],["49.50",{"_index":2467,"title":{},"name":{},"text":{"50":{}},"component":{}}],["4937",{"_index":5444,"title":{},"name":{},"text":{"162":{}},"component":{}}],["4965",{"_index":4706,"title":{},"name":{},"text":{"135":{}},"component":{}}],["4b1e",{"_index":5618,"title":{},"name":{},"text":{"167":{}},"component":{}}],["4be9",{"_index":5627,"title":{},"name":{},"text":{"167":{}},"component":{}}],["4d95",{"_index":5410,"title":{},"name":{},"text":{"161":{}},"component":{}}],["4xx",{"_index":6870,"title":{},"name":{},"text":{"272":{}},"component":{}}],["5",{"_index":593,"title":{"4-5":{},"30-5":{},"33-5":{},"44-5":{},"49-5":{},"55-8":{},"58-23":{},"59-5":{},"66-16":{},"67-11":{},"69-7":{},"70-7":{},"73-27":{},"75-5":{},"85-5":{},"88-5":{},"105-11":{},"107-9":{},"115-7":{},"119-8":{},"131-5":{},"138-10":{},"151-5":{},"152-5":{},"159-5":{},"160-5":{},"167-28":{},"177-5":{},"191-5":{},"194-5":{},"195-25":{},"197-5":{},"199-5":{},"204-5":{},"208-5":{},"212-5":{},"213-5":{},"216-17":{},"237-14":{},"242-8":{},"253-5":{},"254-7":{},"255-9":{},"256-6":{},"257-5":{},"268-5":{},"269-5":{},"270-5":{},"271-5":{},"272-5":{}},"name":{},"text":{"4":{},"6":{},"15":{},"16":{},"25":{},"29":{},"30":{},"33":{},"44":{},"49":{},"50":{},"51":{},"52":{},"55":{},"58":{},"59":{},"66":{},"67":{},"69":{},"70":{},"73":{},"75":{},"80":{},"85":{},"88":{},"105":{},"107":{},"115":{},"119":{},"126":{},"129":{},"131":{},"134":{},"135":{},"136":{},"138":{},"144":{},"151":{},"152":{},"159":{},"160":{},"161":{},"166":{},"167":{},"177":{},"191":{},"194":{},"195":{},"197":{},"199":{},"204":{},"205":{},"206":{},"208":{},"212":{},"213":{},"216":{},"226":{},"237":{},"242":{},"246":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"264":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["5,000",{"_index":3480,"title":{},"name":{},"text":{"73":{}},"component":{}}],["5.0.1",{"_index":2298,"title":{},"name":{},"text":{"49":{}},"component":{}}],["5.1",{"_index":2223,"title":{"49-6":{},"67-12":{},"70-8":{},"138-11":{},"159-6":{},"160-6":{},"195-26":{},"242-9":{},"254-8":{},"255-10":{},"256-7":{},"268-6":{},"270-6":{},"271-6":{},"272-6":{}},"name":{},"text":{"49":{},"67":{},"70":{},"138":{},"159":{},"160":{},"195":{},"242":{},"254":{},"255":{},"256":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["5.1.1",{"_index":2338,"title":{"255-11":{}},"name":{},"text":{"49":{},"255":{}},"component":{}}],["5.2",{"_index":2224,"title":{"49-7":{},"67-13":{},"70-9":{},"138-12":{},"159-7":{},"160-7":{},"242-10":{},"254-9":{},"255-12":{},"270-7":{}},"name":{},"text":{"49":{},"67":{},"70":{},"138":{},"159":{},"160":{},"242":{},"254":{},"255":{},"270":{}},"component":{}}],["5.3",{"_index":2225,"title":{"49-8":{},"67-14":{},"138-13":{},"242-11":{}},"name":{},"text":{"49":{},"67":{},"138":{},"242":{}},"component":{}}],["5.3.13",{"_index":2306,"title":{},"name":{},"text":{"49":{}},"component":{}}],["5.4",{"_index":2226,"title":{"49-9":{},"67-15":{},"138-14":{}},"name":{},"text":{"49":{},"67":{},"138":{}},"component":{}}],["5.4.1",{"_index":4783,"title":{"138-15":{}},"name":{},"text":{"138":{}},"component":{}}],["5.4.2",{"_index":4784,"title":{"138-16":{}},"name":{},"text":{"138":{}},"component":{}}],["5.5",{"_index":4785,"title":{"138-17":{}},"name":{},"text":{"138":{}},"component":{}}],["5.5.4",{"_index":2443,"title":{},"name":{},"text":{"49":{}},"component":{}}],["5.6.2,5.8.2",{"_index":2429,"title":{},"name":{},"text":{"49":{}},"component":{}}],["5.ad",{"_index":4806,"title":{},"name":{},"text":{"138":{}},"component":{}}],["50",{"_index":1455,"title":{},"name":{},"text":{"9":{},"103":{},"108":{},"152":{},"234":{},"271":{}},"component":{}}],["500",{"_index":4601,"title":{},"name":{},"text":{"127":{},"205":{},"244":{}},"component":{}}],["5005:5005",{"_index":3176,"title":{},"name":{},"text":{"63":{}},"component":{}}],["501",{"_index":4604,"title":{},"name":{},"text":{"127":{}},"component":{}}],["502",{"_index":4605,"title":{},"name":{},"text":{"127":{}},"component":{}}],["503",{"_index":4606,"title":{},"name":{},"text":{"127":{},"272":{}},"component":{}}],["504",{"_index":4607,"title":{},"name":{},"text":{"127":{}},"component":{}}],["505",{"_index":4608,"title":{},"name":{},"text":{"127":{}},"component":{}}],["50mb",{"_index":4976,"title":{},"name":{},"text":{"140":{}},"component":{}}],["512",{"_index":1937,"title":{},"name":{},"text":{"29":{},"173":{},"175":{},"237":{}},"component":{}}],["53",{"_index":3369,"title":{"73-5":{}},"name":{},"text":{"73":{}},"component":{}}],["5432",{"_index":6551,"title":{},"name":{},"text":{"258":{}},"component":{}}],["55",{"_index":4095,"title":{},"name":{},"text":{"83":{}},"component":{}}],["552.00",{"_index":2470,"title":{},"name":{},"text":{"50":{}},"component":{}}],["5577675",{"_index":4738,"title":{},"name":{},"text":{"135":{}},"component":{}}],["57.12",{"_index":2471,"title":{},"name":{},"text":{"50":{}},"component":{}}],["570.71",{"_index":2469,"title":{},"name":{},"text":{"50":{}},"component":{}}],["5717",{"_index":5594,"title":{},"name":{},"text":{"167":{}},"component":{}}],["5731fad5",{"_index":4715,"title":{},"name":{},"text":{"135":{}},"component":{}}],["587",{"_index":5726,"title":{},"name":{},"text":{"182":{}},"component":{}}],["5gi",{"_index":870,"title":{},"name":{},"text":{"4":{}},"component":{}}],["5m",{"_index":3966,"title":{},"name":{},"text":{"80":{}},"component":{}}],["5xx",{"_index":6869,"title":{},"name":{},"text":{"272":{}},"component":{}}],["6",{"_index":595,"title":{"142":{},"4-6":{},"30-6":{},"44-6":{},"49-10":{},"58-24":{},"59-6":{},"67-16":{},"70-10":{},"73-28":{},"85-6":{},"88-6":{},"131-6":{},"138-18":{},"159-8":{},"160-8":{},"167-29":{},"177-6":{},"191-6":{},"194-6":{},"195-27":{},"197-6":{},"199-6":{},"204-6":{},"208-6":{},"253-6":{},"254-10":{},"255-13":{},"256-8":{},"257-6":{},"268-7":{},"269-6":{},"270-8":{},"271-7":{},"272-7":{}},"name":{"142":{}},"text":{"4":{},"15":{},"21":{},"25":{},"29":{},"30":{},"44":{},"49":{},"58":{},"59":{},"66":{},"67":{},"70":{},"73":{},"85":{},"88":{},"111":{},"129":{},"131":{},"134":{},"135":{},"136":{},"138":{},"144":{},"159":{},"160":{},"161":{},"166":{},"167":{},"177":{},"184":{},"191":{},"192":{},"194":{},"195":{},"197":{},"199":{},"204":{},"208":{},"253":{},"254":{},"255":{},"256":{},"257":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["6.0.8",{"_index":2321,"title":{},"name":{},"text":{"49":{}},"component":{}}],["6.1",{"_index":2227,"title":{"49-11":{},"73-29":{},"85-7":{},"88-7":{},"159-9":{},"194-7":{},"195-28":{},"197-7":{},"199-7":{},"204-7":{},"208-7":{},"255-14":{},"257-7":{},"268-8":{},"269-7":{},"271-8":{},"272-8":{}},"name":{},"text":{"49":{},"63":{},"73":{},"85":{},"88":{},"159":{},"194":{},"195":{},"197":{},"199":{},"204":{},"208":{},"255":{},"257":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["6.1.1",{"_index":2367,"title":{"73-30":{}},"name":{},"text":{"49":{},"73":{}},"component":{}}],["6.1.2",{"_index":3385,"title":{"73-31":{}},"name":{},"text":{"73":{}},"component":{}}],["6.1.3",{"_index":3386,"title":{"73-32":{}},"name":{},"text":{"73":{}},"component":{}}],["6.1.4",{"_index":3387,"title":{"73-33":{}},"name":{},"text":{"73":{}},"component":{}}],["6.1.5",{"_index":3388,"title":{"73-34":{}},"name":{},"text":{"73":{}},"component":{}}],["6.1.6",{"_index":3389,"title":{"73-35":{}},"name":{},"text":{"73":{}},"component":{}}],["6.18",{"_index":2336,"title":{},"name":{},"text":{"49":{}},"component":{}}],["6.2",{"_index":3164,"title":{"73-36":{},"159-10":{},"194-8":{},"195-29":{},"197-8":{},"199-8":{},"204-8":{},"208-8":{},"255-15":{},"257-8":{},"268-9":{},"269-8":{},"272-9":{}},"name":{},"text":{"63":{},"73":{},"159":{},"194":{},"195":{},"197":{},"199":{},"204":{},"208":{},"255":{},"257":{},"268":{},"269":{},"272":{}},"component":{}}],["6.2.0",{"_index":2324,"title":{},"name":{},"text":{"49":{}},"component":{}}],["6.2.1",{"_index":3390,"title":{"73-37":{}},"name":{},"text":{"73":{}},"component":{}}],["6.2.2",{"_index":3391,"title":{"73-38":{}},"name":{},"text":{"73":{}},"component":{}}],["6.2.3",{"_index":3392,"title":{"73-39":{}},"name":{},"text":{"73":{}},"component":{}}],["6.2.4",{"_index":3393,"title":{"73-40":{}},"name":{},"text":{"73":{}},"component":{}}],["6.2.5",{"_index":3394,"title":{"73-41":{}},"name":{},"text":{"73":{}},"component":{}}],["6.2.6",{"_index":2333,"title":{},"name":{},"text":{"49":{}},"component":{}}],["6.3",{"_index":3165,"title":{"194-9":{},"195-30":{},"197-9":{},"199-9":{},"204-9":{},"208-9":{},"257-9":{},"268-10":{}},"name":{},"text":{"63":{},"194":{},"195":{},"197":{},"199":{},"204":{},"208":{},"257":{},"268":{}},"component":{}}],["6.4",{"_index":3166,"title":{"197-10":{},"208-10":{}},"name":{},"text":{"63":{},"197":{},"208":{}},"component":{}}],["6.dat",{"_index":1485,"title":{},"name":{},"text":{"9":{},"30":{},"73":{}},"component":{}}],["6.png",{"_index":2735,"title":{},"name":{},"text":{"57":{}},"component":{}}],["600",{"_index":3630,"title":{},"name":{},"text":{"73":{}},"component":{}}],["63",{"_index":3883,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["64",{"_index":612,"title":{},"name":{},"text":{"4":{}},"component":{}}],["6443",{"_index":3850,"title":{},"name":{},"text":{"73":{}},"component":{}}],["646.30",{"_index":2472,"title":{},"name":{},"text":{"50":{}},"component":{}}],["65b2",{"_index":5783,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["65b8",{"_index":5789,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["6731fad5",{"_index":4704,"title":{},"name":{},"text":{"135":{}},"component":{}}],["7",{"_index":596,"title":{"4-7":{},"30-7":{},"44-7":{},"49-12":{},"58-25":{},"59-7":{},"67-17":{},"70-11":{},"73-42":{},"138-19":{},"159-11":{},"167-30":{},"191-7":{},"253-7":{},"254-11":{},"255-16":{},"256-9":{},"257-10":{},"269-9":{},"270-9":{},"271-9":{},"272-10":{}},"name":{},"text":{"4":{},"15":{},"30":{},"44":{},"49":{},"58":{},"59":{},"66":{},"67":{},"70":{},"73":{},"80":{},"129":{},"134":{},"135":{},"136":{},"138":{},"159":{},"166":{},"167":{},"191":{},"253":{},"254":{},"255":{},"256":{},"257":{},"264":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["7.1",{"_index":2228,"title":{"49-13":{},"73-43":{},"191-8":{},"256-10":{},"257-11":{},"269-10":{},"271-10":{},"272-11":{}},"name":{},"text":{"49":{},"63":{},"73":{},"191":{},"256":{},"257":{},"269":{},"271":{},"272":{}},"component":{}}],["7.16.0",{"_index":2379,"title":{},"name":{},"text":{"49":{}},"component":{}}],["7.16.2",{"_index":2442,"title":{},"name":{},"text":{"49":{}},"component":{}}],["7.2",{"_index":3172,"title":{"73-46":{},"191-9":{},"256-11":{},"257-12":{},"269-11":{},"271-11":{}},"name":{},"text":{"63":{},"73":{},"191":{},"256":{},"257":{},"269":{},"271":{}},"component":{}}],["7.3",{"_index":3173,"title":{"73-49":{},"191-10":{},"269-12":{},"271-12":{}},"name":{},"text":{"63":{},"73":{},"191":{},"269":{},"271":{}},"component":{}}],["7.3.0",{"_index":2424,"title":{},"name":{},"text":{"49":{}},"component":{}}],["7.4",{"_index":3396,"title":{"73-52":{},"271-13":{}},"name":{},"text":{"73":{},"271":{}},"component":{}}],["7.4.5",{"_index":2433,"title":{},"name":{},"text":{"49":{}},"component":{}}],["7.5",{"_index":6774,"title":{"271-14":{}},"name":{},"text":{"271":{}},"component":{}}],["7.x",{"_index":6758,"title":{},"name":{},"text":{"270":{}},"component":{}}],["7.x/8.x",{"_index":6759,"title":{},"name":{},"text":{"270":{}},"component":{}}],["720",{"_index":4462,"title":{},"name":{},"text":{"115":{}},"component":{}}],["742c",{"_index":5617,"title":{},"name":{},"text":{"167":{}},"component":{}}],["75",{"_index":3936,"title":{},"name":{},"text":{"80":{}},"component":{}}],["7519",{"_index":4555,"title":{},"name":{},"text":{"122":{},"196":{}},"component":{}}],["7604867906",{"_index":4099,"title":{},"name":{},"text":{"83":{}},"component":{}}],["764324427262.dkr.ecr.eu",{"_index":3729,"title":{},"name":{},"text":{"73":{}},"component":{}}],["768gi",{"_index":1807,"title":{},"name":{},"text":{"22":{}},"component":{}}],["7bd0",{"_index":5042,"title":{},"name":{},"text":{"141":{}},"component":{}}],["8",{"_index":597,"title":{"4-8":{},"30-8":{},"49-14":{},"59-8":{},"167-31":{},"253-8":{},"255-17":{},"257-13":{},"269-13":{},"270-10":{},"271-15":{},"272-12":{}},"name":{},"text":{"4":{},"13":{},"15":{},"30":{},"49":{},"51":{},"59":{},"61":{},"73":{},"80":{},"103":{},"113":{},"119":{},"120":{},"134":{},"135":{},"136":{},"142":{},"162":{},"166":{},"167":{},"253":{},"255":{},"257":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["8+.<|busi",{"_index":6015,"title":{},"name":{},"text":{"198":{}},"component":{}}],["8.1",{"_index":2229,"title":{"49-15":{},"167-32":{},"253-9":{},"255-18":{},"257-14":{},"269-14":{},"270-11":{},"271-16":{},"272-13":{}},"name":{},"text":{"49":{},"63":{},"167":{},"253":{},"255":{},"257":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["8.2",{"_index":2230,"title":{"49-16":{},"167-33":{},"253-10":{},"255-19":{},"257-15":{},"269-15":{},"270-12":{},"271-17":{},"272-14":{}},"name":{},"text":{"49":{},"63":{},"167":{},"253":{},"255":{},"257":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["8.3",{"_index":3177,"title":{"167-34":{},"255-20":{},"269-16":{},"272-15":{}},"name":{},"text":{"63":{},"167":{},"255":{},"269":{},"272":{}},"component":{}}],["8.4",{"_index":6833,"title":{"272-16":{}},"name":{},"text":{"272":{}},"component":{}}],["8.5",{"_index":6834,"title":{"272-17":{}},"name":{},"text":{"272":{}},"component":{}}],["8.5in",{"_index":3122,"title":{},"name":{},"text":{"61":{}},"component":{}}],["8.x",{"_index":6761,"title":{},"name":{},"text":{"270":{}},"component":{}}],["80",{"_index":1283,"title":{},"name":{},"text":{"6":{},"73":{},"122":{},"254":{},"272":{}},"component":{}}],["8080",{"_index":6476,"title":{},"name":{},"text":{"254":{},"272":{}},"component":{}}],["80px;\\n",{"_index":5763,"title":{},"name":{},"text":{"183":{}},"component":{}}],["80|85)0{8",{"_index":4348,"title":{},"name":{},"text":{"107":{}},"component":{}}],["8100",{"_index":6858,"title":{},"name":{},"text":{"272":{}},"component":{}}],["8200",{"_index":844,"title":{},"name":{},"text":{"4":{}},"component":{}}],["8201",{"_index":846,"title":{},"name":{},"text":{"4":{}},"component":{}}],["85",{"_index":1799,"title":{},"name":{},"text":{"22":{}},"component":{}}],["85.223.209.0/24",{"_index":3829,"title":{},"name":{},"text":{"73":{}},"component":{}}],["8601",{"_index":2510,"title":{},"name":{},"text":{"51":{},"213":{}},"component":{}}],["88888888",{"_index":5242,"title":{},"name":{},"text":{"158":{}},"component":{}}],["8:00",{"_index":2493,"title":{},"name":{},"text":{"51":{}},"component":{}}],["8:1d833a79f2d827609a61ac1df5354bd4",{"_index":4096,"title":{},"name":{},"text":{"83":{}},"component":{}}],["8c80",{"_index":4705,"title":{},"name":{},"text":{"135":{}},"component":{}}],["8fda",{"_index":5785,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["9",{"_index":1919,"title":{"30-9":{},"49-17":{},"167-35":{},"253-11":{},"269-17":{},"270-13":{},"272-18":{}},"name":{},"text":{"28":{},"29":{},"30":{},"33":{},"49":{},"51":{},"118":{},"134":{},"135":{},"136":{},"166":{},"167":{},"173":{},"175":{},"234":{},"237":{},"253":{},"254":{},"269":{},"270":{},"272":{}},"component":{}}],["9.1",{"_index":2231,"title":{"49-18":{},"167-36":{},"269-18":{}},"name":{},"text":{"49":{},"167":{},"269":{}},"component":{}}],["9.2",{"_index":2232,"title":{"49-19":{},"167-37":{},"269-19":{}},"name":{},"text":{"49":{},"167":{},"269":{}},"component":{}}],["9.3",{"_index":5535,"title":{"167-38":{},"269-20":{}},"name":{},"text":{"167":{},"269":{}},"component":{}}],["9.4",{"_index":5536,"title":{"167-39":{}},"name":{},"text":{"167":{}},"component":{}}],["900",{"_index":4396,"title":{},"name":{},"text":{"107":{}},"component":{}}],["9000",{"_index":1761,"title":{},"name":{},"text":{"21":{}},"component":{}}],["910",{"_index":2648,"title":{},"name":{},"text":{"55":{}},"component":{}}],["972ed66780a8",{"_index":5045,"title":{},"name":{},"text":{"141":{}},"component":{}}],["9898",{"_index":6558,"title":{},"name":{},"text":{"258":{}},"component":{}}],["98e1",{"_index":5409,"title":{},"name":{},"text":{"161":{}},"component":{}}],["9]{2}0{5",{"_index":4350,"title":{},"name":{},"text":{"107":{}},"component":{}}],["9]{2}0{8",{"_index":4347,"title":{},"name":{},"text":{"107":{}},"component":{}}],["9]{2}20{7",{"_index":4351,"title":{},"name":{},"text":{"107":{}},"component":{}}],["9]{2}2[0",{"_index":4349,"title":{},"name":{},"text":{"107":{}},"component":{}}],["9_",{"_index":3707,"title":{},"name":{},"text":{"73":{}},"component":{}}],["9f80",{"_index":5044,"title":{},"name":{},"text":{"141":{}},"component":{}}],["9fa0",{"_index":5628,"title":{},"name":{},"text":{"167":{}},"component":{}}],["9fc6",{"_index":4707,"title":{},"name":{},"text":{"135":{}},"component":{}}],["_",{"_index":1922,"title":{},"name":{},"text":{"28":{},"30":{},"118":{},"140":{},"234":{}},"component":{}}],["_action_cancel",{"_index":6269,"title":{},"name":{},"text":{"226":{}},"component":{}}],["_action_cod",{"_index":4235,"title":{},"name":{},"text":{"100":{}},"component":{}}],["_action_upd",{"_index":6268,"title":{},"name":{},"text":{"226":{}},"component":{}}],["_further",{"_index":6231,"title":{},"name":{},"text":{"217":{}},"component":{}}],["_hst",{"_index":4048,"title":{},"name":{},"text":{"83":{}},"component":{}}],["_index_id",{"_index":4592,"title":{},"name":{},"text":{"126":{}},"component":{}}],["_v",{"_index":5112,"title":{},"name":{},"text":{"142":{},"167":{}},"component":{}}],["a.b.c.d/x",{"_index":1945,"title":{},"name":{},"text":{"29":{}},"component":{}}],["a.dns.wildcard.com/apps.clust",{"_index":924,"title":{},"name":{},"text":{"4":{}},"component":{}}],["a0c8",{"_index":5633,"title":{},"name":{},"text":{"167":{}},"component":{}}],["a707",{"_index":5445,"title":{},"name":{},"text":{"162":{}},"component":{}}],["a90606bb",{"_index":5442,"title":{},"name":{},"text":{"162":{}},"component":{}}],["a:mail",{"_index":1872,"title":{},"name":{},"text":{"25":{}},"component":{}}],["a_cluster_login=\"oc",{"_index":742,"title":{},"name":{},"text":{"4":{}},"component":{}}],["aa",{"_index":5492,"title":{},"name":{},"text":{"165":{},"167":{}},"component":{}}],["aaa",{"_index":1156,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ab",{"_index":4730,"title":{},"name":{},"text":{"135":{}},"component":{}}],["abbrevi",{"_index":498,"title":{"173-3":{}},"name":{},"text":{"2":{},"173":{}},"component":{}}],["abc",{"_index":707,"title":{},"name":{},"text":{"4":{}},"component":{}}],["abil",{"_index":1612,"title":{"254":{},"269":{}},"name":{},"text":{"16":{},"18":{},"21":{},"46":{},"52":{},"58":{},"61":{},"73":{},"81":{},"87":{},"116":{},"117":{},"124":{},"125":{},"140":{},"143":{},"148":{},"149":{},"167":{},"173":{},"175":{},"191":{},"197":{},"208":{},"210":{},"237":{},"245":{},"246":{},"254":{},"255":{},"267":{},"268":{},"271":{},"272":{}},"component":{}}],["abort",{"_index":796,"title":{},"name":{},"text":{"4":{}},"component":{}}],["abortincompletemultipartupload",{"_index":3364,"title":{},"name":{},"text":{"72":{}},"component":{}}],["abov",{"_index":1479,"title":{},"name":{},"text":{"9":{},"19":{},"21":{},"51":{},"52":{},"68":{},"108":{},"119":{},"123":{},"138":{},"149":{},"155":{},"158":{},"173":{},"184":{}},"component":{}}],["absenc",{"_index":117,"title":{},"name":{},"text":{"1":{},"107":{},"119":{},"195":{},"270":{}},"component":{}}],["absent",{"_index":666,"title":{},"name":{},"text":{"4":{},"56":{},"122":{},"167":{},"189":{},"237":{},"242":{},"253":{},"255":{}},"component":{}}],["absolut",{"_index":5888,"title":{},"name":{},"text":{"195":{},"231":{},"272":{}},"component":{}}],["abstract",{"_index":362,"title":{"46-1":{},"105-1":{},"154-1":{},"202-1":{},"203-1":{},"204-1":{},"257-1":{},"267-1":{},"268-1":{},"269-1":{},"270-1":{}},"name":{},"text":{"2":{},"46":{},"81":{},"105":{},"154":{},"188":{},"193":{},"202":{},"203":{},"204":{},"257":{},"267":{},"268":{},"269":{},"270":{},"271":{}},"component":{}}],["abstractchang",{"_index":4141,"title":{},"name":{},"text":{"84":{}},"component":{}}],["academ",{"_index":4696,"title":{},"name":{},"text":{"135":{}},"component":{}}],["academic_year",{"_index":4697,"title":{},"name":{},"text":{"135":{}},"component":{}}],["acc",{"_index":1483,"title":{},"name":{},"text":{"9":{}},"component":{}}],["acc36524cc2d",{"_index":5620,"title":{},"name":{},"text":{"167":{}},"component":{}}],["acceler",{"_index":4009,"title":{},"name":{},"text":{"81":{},"167":{},"204":{}},"component":{}}],["accept",{"_index":1245,"title":{},"name":{},"text":{"6":{},"21":{},"67":{},"68":{},"105":{},"167":{},"171":{},"181":{},"226":{},"267":{}},"component":{}}],["access",{"_index":166,"title":{"29":{},"33":{},"89":{},"119":{},"120":{},"154":{},"155":{},"171":{},"181":{},"19-3":{},"28-3":{},"29-2":{},"29-5":{},"30-8":{},"31-2":{},"32-26":{},"33-2":{},"33-3":{},"33-5":{},"49-17":{},"59-5":{},"60-1":{},"73-19":{},"73-23":{},"99-6":{},"99-10":{},"99-19":{},"139-19":{},"140-25":{},"140-26":{},"141-25":{},"141-26":{},"142-7":{},"142-8":{},"154-15":{},"155-1":{},"155-3":{},"155-4":{},"155-6":{},"155-7":{},"167-35":{},"167-36":{},"167-37":{},"167-38":{},"167-39":{},"179-2":{},"181-1":{},"195-21":{},"202-11":{},"205-8":{},"255-11":{},"272-17":{},"272-18":{}},"name":{"29":{},"33":{},"89":{},"154":{},"171":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"12":{},"14":{},"15":{},"18":{},"19":{},"21":{},"22":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"37":{},"44":{},"45":{},"46":{},"48":{},"49":{},"51":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"75":{},"81":{},"84":{},"86":{},"99":{},"103":{},"110":{},"111":{},"112":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"127":{},"131":{},"132":{},"134":{},"139":{},"140":{},"141":{},"142":{},"145":{},"154":{},"155":{},"159":{},"161":{},"167":{},"168":{},"170":{},"171":{},"179":{},"180":{},"181":{},"188":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"201":{},"202":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"220":{},"221":{},"222":{},"237":{},"251":{},"253":{},"255":{},"258":{},"265":{},"272":{}},"component":{}}],["access.adoc",{"_index":4638,"title":{},"name":{},"text":{"130":{}},"component":{}}],["access_token",{"_index":5692,"title":{},"name":{},"text":{"179":{}},"component":{}}],["accesstoken",{"_index":5235,"title":{},"name":{},"text":{"155":{}},"component":{}}],["accident",{"_index":1789,"title":{},"name":{},"text":{"21":{},"35":{},"168":{},"223":{}},"component":{}}],["accommod",{"_index":2941,"title":{},"name":{},"text":{"59":{}},"component":{}}],["accompani",{"_index":3350,"title":{},"name":{},"text":{"67":{},"108":{},"143":{}},"component":{}}],["accord",{"_index":873,"title":{"161-13":{}},"name":{},"text":{"4":{},"6":{},"15":{},"16":{},"19":{},"21":{},"30":{},"45":{},"46":{},"48":{},"49":{},"51":{},"52":{},"56":{},"57":{},"58":{},"59":{},"63":{},"66":{},"67":{},"73":{},"80":{},"99":{},"100":{},"103":{},"105":{},"108":{},"119":{},"127":{},"128":{},"131":{},"138":{},"142":{},"152":{},"154":{},"159":{},"161":{},"162":{},"164":{},"165":{},"177":{},"188":{},"189":{},"191":{},"192":{},"193":{},"195":{},"201":{},"202":{},"204":{},"207":{},"208":{},"211":{},"212":{},"213":{},"218":{},"224":{},"225":{},"237":{},"242":{},"244":{},"249":{},"250":{},"255":{},"257":{},"267":{},"270":{},"271":{},"272":{}},"component":{}}],["accordingli",{"_index":2683,"title":{},"name":{},"text":{"55":{},"237":{},"253":{}},"component":{}}],["account",{"_index":115,"title":{"73-3":{},"73-4":{},"73-7":{},"73-10":{},"73-11":{},"73-12":{},"73-19":{},"73-23":{},"195-21":{},"272-16":{}},"name":{},"text":{"1":{},"2":{},"9":{},"15":{},"16":{},"28":{},"30":{},"57":{},"67":{},"73":{},"75":{},"99":{},"117":{},"119":{},"120":{},"160":{},"186":{},"195":{},"202":{},"204":{},"213":{},"223":{},"244":{},"253":{},"255":{},"260":{},"267":{},"268":{},"272":{}},"component":{}}],["accredit",{"_index":213,"title":{"46-4":{}},"name":{},"text":{"2":{},"9":{},"30":{},"46":{},"73":{},"78":{},"134":{},"138":{},"140":{},"148":{},"149":{},"256":{}},"component":{}}],["accreditation_flag",{"_index":4668,"title":{},"name":{},"text":{"134":{}},"component":{}}],["accreditationflag",{"_index":4973,"title":{},"name":{},"text":{"140":{}},"component":{}}],["accumul",{"_index":1184,"title":{},"name":{},"text":{"6":{},"205":{}},"component":{}}],["accur",{"_index":2902,"title":{},"name":{},"text":{"59":{},"99":{}},"component":{}}],["accuraci",{"_index":1535,"title":{"99-14":{}},"name":{},"text":{"13":{},"58":{}},"component":{}}],["achiev",{"_index":285,"title":{},"name":{},"text":{"2":{},"55":{},"58":{},"81":{},"99":{},"258":{},"261":{}},"component":{}}],["acl",{"_index":3491,"title":{},"name":{},"text":{"73":{}},"component":{}}],["acm",{"_index":3773,"title":{},"name":{},"text":{"73":{}},"component":{}}],["acme.sh",{"_index":3772,"title":{},"name":{},"text":{"73":{}},"component":{}}],["acme.sh/dnsapi/dns_aws.sh",{"_index":3785,"title":{},"name":{},"text":{"73":{}},"component":{}}],["acord",{"_index":3223,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["acronym",{"_index":6442,"title":{"253-16":{},"269-5":{}},"name":{},"text":{"253":{},"269":{}},"component":{}}],["act",{"_index":78,"title":{},"name":{},"text":{"1":{},"6":{},"12":{},"49":{},"105":{},"135":{},"141":{},"160":{},"195":{},"213":{},"258":{}},"component":{}}],["act_ge_properti",{"_index":6075,"title":{},"name":{},"text":{"205":{}},"component":{}}],["action",{"_index":678,"title":{"8":{},"52":{},"52-6":{},"59-2":{}},"name":{"52":{}},"text":{"4":{},"8":{},"23":{},"25":{},"29":{},"30":{},"35":{},"41":{},"44":{},"45":{},"48":{},"51":{},"52":{},"58":{},"59":{},"60":{},"61":{},"70":{},"72":{},"73":{},"75":{},"99":{},"100":{},"103":{},"104":{},"113":{},"118":{},"119":{},"125":{},"158":{},"160":{},"161":{},"177":{},"183":{},"186":{},"196":{},"197":{},"216":{},"221":{},"222":{},"223":{},"226":{},"237":{},"242":{},"255":{},"261":{},"268":{},"271":{}},"component":{}}],["action.bpmn",{"_index":2585,"title":{},"name":{},"text":{"52":{}},"component":{}}],["action_cod",{"_index":2641,"title":{},"name":{},"text":{"52":{},"100":{}},"component":{}}],["activ",{"_index":1231,"title":{"216":{},"52-8":{},"60-10":{},"144-1":{},"216-2":{},"216-3":{},"216-8":{},"216-16":{}},"name":{"216":{}},"text":{"6":{},"21":{},"30":{},"33":{},"34":{},"51":{},"52":{},"55":{},"58":{},"60":{},"65":{},"66":{},"73":{},"99":{},"115":{},"119":{},"120":{},"125":{},"133":{},"140":{},"144":{},"159":{},"195":{},"205":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"230":{},"259":{},"260":{},"261":{}},"component":{}}],["activity_0l2g5sf",{"_index":5791,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["activity_0l2g5sf:b84e9948",{"_index":5793,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["activity_id",{"_index":5434,"title":{},"name":{},"text":{"162":{}},"component":{}}],["activity_instance_id",{"_index":6083,"title":{},"name":{},"text":{"205":{}},"component":{}}],["activity_shar",{"_index":5228,"title":{},"name":{},"text":{"155":{}},"component":{}}],["activityinstanceid",{"_index":6110,"title":{},"name":{},"text":{"205":{}},"component":{}}],["actor",{"_index":1914,"title":{"257-2":{}},"name":{},"text":{"28":{},"46":{},"67":{},"118":{},"153":{},"257":{}},"component":{}}],["actual",{"_index":513,"title":{},"name":{},"text":{"2":{},"6":{},"119":{},"138":{},"191":{},"268":{},"269":{},"272":{}},"component":{}}],["actualis",{"_index":4229,"title":{},"name":{},"text":{"99":{}},"component":{}}],["actuat",{"_index":2163,"title":{},"name":{},"text":{"47":{},"272":{}},"component":{}}],["ad",{"_index":428,"title":{"23-3":{},"23-4":{},"28-2":{},"29-3":{},"29-4":{},"52-7":{},"237-10":{}},"name":{},"text":{"2":{},"4":{},"8":{},"21":{},"23":{},"25":{},"28":{},"29":{},"31":{},"36":{},"49":{},"52":{},"55":{},"57":{},"59":{},"60":{},"61":{},"73":{},"75":{},"76":{},"78":{},"80":{},"83":{},"84":{},"101":{},"103":{},"104":{},"118":{},"119":{},"120":{},"122":{},"123":{},"134":{},"135":{},"138":{},"140":{},"141":{},"160":{},"161":{},"167":{},"183":{},"186":{},"188":{},"190":{},"193":{},"195":{},"196":{},"205":{},"207":{},"209":{},"217":{},"218":{},"237":{},"244":{},"248":{},"251":{},"254":{},"255":{},"257":{},"262":{},"267":{},"269":{},"270":{},"272":{}},"component":{}}],["adapt",{"_index":1429,"title":{},"name":{},"text":{"9":{},"226":{},"272":{}},"component":{}}],["add",{"_index":689,"title":{"139-8":{},"141-12":{},"267-12":{},"267-14":{}},"name":{},"text":{"4":{},"6":{},"21":{},"23":{},"25":{},"28":{},"29":{},"30":{},"32":{},"34":{},"36":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"61":{},"63":{},"73":{},"75":{},"76":{},"84":{},"103":{},"104":{},"105":{},"115":{},"118":{},"119":{},"120":{},"122":{},"124":{},"129":{},"131":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"159":{},"160":{},"161":{},"162":{},"166":{},"167":{},"168":{},"181":{},"184":{},"186":{},"188":{},"189":{},"193":{},"194":{},"196":{},"197":{},"210":{},"211":{},"212":{},"213":{},"216":{},"217":{},"221":{},"222":{},"224":{},"225":{},"226":{},"227":{},"230":{},"231":{},"232":{},"237":{},"242":{},"248":{},"251":{},"255":{},"256":{},"258":{},"259":{},"260":{},"261":{},"262":{},"267":{},"268":{},"270":{}},"component":{}}],["add/chang",{"_index":5843,"title":{},"name":{},"text":{"193":{},"251":{}},"component":{}}],["add/open/upload",{"_index":803,"title":{},"name":{},"text":{"4":{}},"component":{}}],["add_level",{"_index":5518,"title":{},"name":{},"text":{"166":{}},"component":{}}],["addcolumn",{"_index":4109,"title":{},"name":{},"text":{"84":{},"169":{}},"component":{}}],["added/updated/remov",{"_index":5891,"title":{},"name":{},"text":{"195":{}},"component":{}}],["addit",{"_index":754,"title":{"166":{},"73-10":{},"73-13":{},"73-20":{},"73-21":{},"75-4":{},"76-6":{},"105-11":{},"115-7":{},"123-4":{},"166-5":{},"166-10":{},"166-11":{},"168-8":{}},"name":{},"text":{"4":{},"6":{},"9":{},"10":{},"28":{},"33":{},"34":{},"47":{},"49":{},"50":{},"52":{},"56":{},"58":{},"59":{},"60":{},"70":{},"73":{},"75":{},"76":{},"80":{},"81":{},"86":{},"103":{},"104":{},"105":{},"108":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"128":{},"131":{},"138":{},"141":{},"142":{},"150":{},"154":{},"160":{},"166":{},"167":{},"168":{},"170":{},"171":{},"179":{},"183":{},"186":{},"188":{},"195":{},"196":{},"205":{},"220":{},"223":{},"226":{},"231":{},"247":{},"248":{},"253":{},"254":{},"255":{},"258":{},"264":{},"267":{},"268":{},"271":{}},"component":{}}],["addition",{"_index":1425,"title":{},"name":{},"text":{"9":{},"58":{},"67":{},"69":{},"72":{},"73":{},"116":{},"119":{},"167":{},"205":{},"237":{},"244":{},"270":{},"272":{}},"component":{}}],["addititon",{"_index":4200,"title":{},"name":{},"text":{"99":{}},"component":{}}],["addlabform",{"_index":4896,"title":{},"name":{},"text":{"139":{}},"component":{}}],["addlabformact",{"_index":4922,"title":{},"name":{},"text":{"140":{}},"component":{}}],["addpersonalprofil",{"_index":5376,"title":{},"name":{},"text":{"161":{}},"component":{}}],["addpersonnelformact",{"_index":5007,"title":{},"name":{},"text":{"141":{}},"component":{}}],["addpersonpropclosur",{"_index":5268,"title":{},"name":{},"text":{"159":{}},"component":{}}],["addpersonpropclosure(person",{"_index":5275,"title":{},"name":{},"text":{"159":{}},"component":{}}],["addreadrul",{"_index":3004,"title":{},"name":{},"text":{"59":{}},"component":{}}],["address",{"_index":442,"title":{"19":{},"144":{},"173-1":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"19":{},"20":{},"25":{},"28":{},"29":{},"30":{},"40":{},"44":{},"48":{},"49":{},"55":{},"58":{},"67":{},"69":{},"73":{},"75":{},"76":{},"99":{},"101":{},"104":{},"105":{},"113":{},"118":{},"122":{},"123":{},"131":{},"134":{},"140":{},"142":{},"144":{},"146":{},"162":{},"163":{},"173":{},"182":{},"184":{},"188":{},"193":{},"202":{},"230":{},"231":{},"242":{},"247":{},"251":{},"253":{},"269":{},"272":{}},"component":{}}],["adduniqueconstraint",{"_index":5672,"title":{},"name":{},"text":{"169":{}},"component":{}}],["adequ",{"_index":3241,"title":{},"name":{},"text":{"67":{},"99":{},"164":{}},"component":{}}],["adher",{"_index":1069,"title":{},"name":{},"text":{"6":{},"99":{},"244":{}},"component":{}}],["adhocwork",{"_index":2694,"title":{},"name":{},"text":{"56":{},"189":{},"204":{}},"component":{}}],["adipisci",{"_index":6334,"title":{},"name":{},"text":{"231":{}},"component":{}}],["adjac",{"_index":4100,"title":{"84-5":{}},"name":{},"text":{},"component":{}}],["adjust",{"_index":1417,"title":{},"name":{},"text":{"8":{},"61":{},"67":{},"119":{},"205":{},"265":{}},"component":{}}],["admin",{"_index":235,"title":{"32-4":{},"32-8":{},"255-10":{},"256-7":{},"272-21":{}},"name":{"3":{},"14":{},"28":{},"60":{},"61":{},"64":{},"65":{},"112":{},"118":{},"129":{},"130":{},"201":{}},"text":{"2":{},"4":{},"6":{},"22":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"35":{},"36":{},"37":{},"40":{},"42":{},"43":{},"55":{},"56":{},"57":{},"59":{},"60":{},"66":{},"75":{},"76":{},"78":{},"81":{},"100":{},"104":{},"111":{},"118":{},"119":{},"122":{},"128":{},"130":{},"139":{},"142":{},"154":{},"160":{},"171":{},"181":{},"182":{},"189":{},"193":{},"194":{},"195":{},"196":{},"199":{},"201":{},"204":{},"205":{},"220":{},"221":{},"222":{},"250":{},"253":{},"254":{},"255":{},"256":{},"267":{},"268":{},"272":{}},"component":{}}],["admin/admin",{"_index":4613,"title":{},"name":{},"text":{"128":{}},"component":{}}],["admin/cp",{"_index":933,"title":{},"name":{},"text":{"4":{},"30":{},"57":{}},"component":{}}],["admin/extern",{"_index":1989,"title":{},"name":{},"text":{"31":{},"195":{}},"component":{}}],["admin/regul",{"_index":4634,"title":{},"name":{},"text":{"129":{},"130":{}},"component":{}}],["admin:connect",{"_index":5812,"title":{},"name":{},"text":{"186":{}},"component":{}}],["admin:installation/platform",{"_index":3877,"title":{},"name":{},"text":{"74":{}},"component":{}}],["admin:registri",{"_index":782,"title":{},"name":{},"text":{"4":{},"36":{},"37":{},"78":{},"105":{},"227":{}},"component":{}}],["admin:update/speci",{"_index":2098,"title":{},"name":{},"text":{"41":{}},"component":{}}],["admin:us",{"_index":5103,"title":{},"name":{},"text":{"142":{}},"component":{}}],["administ",{"_index":242,"title":{"60":{}},"name":{},"text":{"2":{},"60":{},"65":{}},"component":{}}],["administr",{"_index":77,"title":{"3":{},"14":{},"28":{},"29":{},"64":{},"65":{},"114":{},"118":{},"153":{},"190":{},"199":{},"201":{},"14-1":{},"28-2":{},"28-3":{},"30-2":{},"32-3":{},"32-4":{},"32-9":{},"32-16":{},"65-1":{},"118-1":{},"118-3":{},"119-2":{},"119-3":{},"153-2":{},"153-3":{},"237-3":{},"244-6":{},"255-7":{},"272-18":{}},"name":{"190":{}},"text":{"1":{},"2":{},"4":{},"9":{},"14":{},"15":{},"16":{},"17":{},"18":{},"22":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"44":{},"45":{},"46":{},"48":{},"51":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"75":{},"81":{},"99":{},"100":{},"101":{},"104":{},"105":{},"106":{},"111":{},"113":{},"115":{},"116":{},"117":{},"118":{},"119":{},"121":{},"122":{},"123":{},"124":{},"125":{},"128":{},"131":{},"132":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"150":{},"153":{},"159":{},"160":{},"163":{},"168":{},"171":{},"173":{},"176":{},"177":{},"181":{},"182":{},"184":{},"186":{},"188":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"205":{},"208":{},"209":{},"223":{},"224":{},"225":{},"227":{},"230":{},"231":{},"232":{},"234":{},"236":{},"237":{},"238":{},"240":{},"242":{},"244":{},"246":{},"248":{},"249":{},"250":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"262":{},"263":{},"264":{},"266":{},"267":{},"270":{},"272":{}},"component":{}}],["administrator(",{"_index":4494,"title":{},"name":{},"text":{"118":{}},"component":{}}],["administrator’",{"_index":1973,"title":{},"name":{},"text":{"30":{},"119":{},"167":{}},"component":{}}],["adminrout",{"_index":1948,"title":{},"name":{},"text":{"29":{},"193":{},"251":{}},"component":{}}],["admins.adoc#add",{"_index":2064,"title":{},"name":{},"text":{"36":{}},"component":{}}],["admintool",{"_index":6010,"title":{},"name":{},"text":{"198":{},"199":{}},"component":{}}],["admiss",{"_index":4026,"title":{},"name":{},"text":{"81":{}},"component":{}}],["adopt",{"_index":1029,"title":{"6-14":{}},"name":{},"text":{"6":{},"67":{}},"component":{}}],["advanc",{"_index":249,"title":{},"name":{},"text":{"2":{},"21":{},"32":{},"81":{},"108":{},"167":{},"229":{},"267":{}},"component":{}}],["advantag",{"_index":4027,"title":{},"name":{},"text":{"81":{},"117":{},"184":{},"244":{},"258":{}},"component":{}}],["advis",{"_index":4432,"title":{},"name":{},"text":{"108":{},"161":{}},"component":{}}],["advoc",{"_index":135,"title":{},"name":{},"text":{"1":{}},"component":{}}],["affair",{"_index":2930,"title":{},"name":{},"text":{"59":{}},"component":{}}],["affect",{"_index":3411,"title":{},"name":{},"text":{"73":{},"81":{},"120":{},"122":{},"139":{},"167":{},"173":{},"181":{},"195":{},"244":{},"253":{},"255":{}},"component":{}}],["affero",{"_index":2331,"title":{},"name":{},"text":{"49":{}},"component":{}}],["affili",{"_index":2900,"title":{},"name":{},"text":{"59":{},"111":{}},"component":{}}],["affin",{"_index":3942,"title":{},"name":{},"text":{"80":{}},"component":{}}],["ag",{"_index":1678,"title":{},"name":{},"text":{"19":{},"21":{},"73":{},"120":{}},"component":{}}],["again",{"_index":2045,"title":{},"name":{},"text":{"33":{},"73":{},"127":{},"129":{},"141":{},"144":{},"168":{},"253":{}},"component":{}}],["against",{"_index":3308,"title":{"268":{}},"name":{},"text":{"67":{},"197":{},"265":{},"268":{},"272":{}},"component":{}}],["agenc",{"_index":2953,"title":{},"name":{},"text":{"59":{}},"component":{}}],["agent",{"_index":2409,"title":{},"name":{},"text":{"49":{},"67":{},"84":{}},"component":{}}],["agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005",{"_index":3161,"title":{},"name":{},"text":{"63":{}},"component":{}}],["aggreg",{"_index":378,"title":{},"name":{},"text":{"2":{},"67":{},"87":{},"127":{},"167":{},"194":{}},"component":{}}],["agil",{"_index":1030,"title":{"6-14":{}},"name":{},"text":{"6":{}},"component":{}}],["agnost",{"_index":1897,"title":{},"name":{},"text":{"25":{}},"component":{}}],["agnostic",{"_index":2208,"title":{},"name":{},"text":{"48":{}},"component":{}}],["ago",{"_index":3366,"title":{},"name":{},"text":{"72":{}},"component":{}}],["agpl",{"_index":2447,"title":{},"name":{},"text":{"49":{}},"component":{}}],["agre",{"_index":1825,"title":{},"name":{},"text":{"23":{},"40":{}},"component":{}}],["agreement",{"_index":2911,"title":{},"name":{},"text":{"59":{},"115":{},"183":{},"186":{}},"component":{}}],["ahead",{"_index":1698,"title":{},"name":{},"text":{"21":{}},"component":{}}],["aid",{"_index":3238,"title":{},"name":{},"text":{"67":{},"244":{}},"component":{}}],["aim",{"_index":284,"title":{},"name":{},"text":{"2":{},"6":{},"41":{},"44":{},"49":{},"99":{},"134":{},"135":{},"138":{},"140":{}},"component":{}}],["akcc",{"_index":217,"title":{"46-4":{}},"name":{},"text":{"2":{},"9":{},"30":{},"46":{}},"component":{}}],["alarm",{"_index":6187,"title":{},"name":{},"text":{"213":{}},"component":{}}],["albeit",{"_index":6524,"title":{},"name":{},"text":{"258":{}},"component":{}}],["alert",{"_index":1402,"title":{},"name":{"8":{}},"text":{},"component":{}}],["alertmanag",{"_index":5846,"title":{},"name":{},"text":{"193":{},"250":{}},"component":{}}],["algorithm",{"_index":1467,"title":{},"name":{},"text":{"9":{},"73":{},"105":{},"108":{},"119":{},"196":{},"205":{},"257":{},"269":{}},"component":{}}],["alia",{"_index":970,"title":{},"name":{},"text":{"5":{},"59":{},"75":{},"76":{},"142":{},"188":{},"247":{}},"component":{}}],["align",{"_index":125,"title":{},"name":{},"text":{"1":{},"26":{},"74":{},"99":{},"164":{}},"component":{}}],["allfil",{"_index":6684,"title":{},"name":{},"text":{"269":{}},"component":{}}],["allist",{"_index":2594,"title":{},"name":{},"text":{"52":{}},"component":{}}],["alloc",{"_index":1219,"title":{},"name":{},"text":{"6":{},"30":{},"31":{},"34":{},"65":{},"272":{}},"component":{}}],["allow",{"_index":345,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"15":{},"16":{},"19":{},"21":{},"28":{},"29":{},"30":{},"32":{},"34":{},"45":{},"46":{},"49":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"61":{},"72":{},"73":{},"75":{},"81":{},"82":{},"83":{},"84":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"108":{},"112":{},"113":{},"115":{},"116":{},"117":{},"118":{},"119":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"131":{},"138":{},"140":{},"146":{},"150":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"163":{},"167":{},"168":{},"175":{},"183":{},"186":{},"187":{},"188":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"204":{},"207":{},"210":{},"211":{},"216":{},"217":{},"218":{},"227":{},"230":{},"231":{},"232":{},"233":{},"234":{},"236":{},"237":{},"238":{},"240":{},"242":{},"244":{},"245":{},"246":{},"248":{},"251":{},"252":{},"253":{},"256":{},"257":{},"258":{},"259":{},"260":{},"262":{},"264":{},"265":{},"269":{},"271":{},"272":{}},"component":{}}],["allsigninfo",{"_index":6679,"title":{},"name":{},"text":{"269":{}},"component":{}}],["along",{"_index":2659,"title":{},"name":{},"text":{"55":{},"75":{},"104":{},"119":{},"124":{},"202":{},"213":{},"217":{},"226":{},"254":{},"255":{},"271":{}},"component":{}}],["alongsid",{"_index":2049,"title":{},"name":{},"text":{"34":{},"264":{}},"component":{}}],["alphabet",{"_index":5163,"title":{},"name":{},"text":{"150":{},"173":{},"234":{},"237":{},"246":{}},"component":{}}],["alphanumericignorecas",{"_index":1449,"title":{},"name":{},"text":{"9":{}},"component":{}}],["alreadi",{"_index":1518,"title":{},"name":{},"text":{"12":{},"117":{},"119":{},"131":{},"135":{},"139":{},"140":{},"141":{},"144":{},"152":{},"167":{},"168":{},"177":{},"183":{},"186":{},"203":{},"234":{},"237":{},"245":{},"255":{},"261":{}},"component":{}}],["alt",{"_index":3292,"title":{},"name":{},"text":{"67":{}},"component":{}}],["alter",{"_index":828,"title":{},"name":{"82":{}},"text":{"4":{},"21":{},"83":{}},"component":{}}],["altern",{"_index":639,"title":{"100":{},"100-2":{},"100-6":{},"118-2":{}},"name":{"100":{}},"text":{"4":{},"9":{},"22":{},"28":{},"33":{},"52":{},"100":{},"118":{},"129":{},"138":{},"183":{},"186":{},"210":{},"211":{},"213":{},"214":{},"259":{},"260":{},"261":{}},"component":{}}],["altertableapi",{"_index":4028,"title":{"82":{}},"name":{},"text":{"82":{}},"component":{}}],["although",{"_index":1088,"title":{},"name":{},"text":{"6":{},"75":{},"76":{},"155":{},"272":{}},"component":{}}],["alway",{"_index":1123,"title":{},"name":{},"text":{"6":{},"42":{},"43":{},"61":{},"75":{},"76":{},"108":{},"124":{},"127":{},"131":{},"142":{},"175":{},"176":{},"218":{},"242":{},"244":{},"254":{},"258":{},"262":{},"269":{}},"component":{}}],["always_primary|disallow_to_failov",{"_index":6564,"title":{},"name":{},"text":{"258":{}},"component":{}}],["amazon",{"_index":1901,"title":{},"name":{},"text":{"25":{},"26":{},"50":{},"73":{},"74":{}},"component":{}}],["ambed",{"_index":4223,"title":{},"name":{},"text":{"99":{}},"component":{}}],["ambigu",{"_index":1095,"title":{},"name":{},"text":{"6":{}},"component":{}}],["amd64",{"_index":615,"title":{},"name":{},"text":{"4":{},"73":{}},"component":{}}],["amen",{"_index":3309,"title":{},"name":{},"text":{"67":{}},"component":{}}],["amend",{"_index":6053,"title":{},"name":{},"text":{"204":{}},"component":{}}],["ami",{"_index":3546,"title":{},"name":{},"text":{"73":{},"80":{}},"component":{}}],["amount",{"_index":1835,"title":{"107-9":{}},"name":{},"text":{"23":{},"55":{},"60":{},"81":{},"99":{},"107":{},"125":{},"143":{},"205":{},"213":{}},"component":{}}],["analog",{"_index":320,"title":{},"name":{},"text":{"2":{},"140":{}},"component":{}}],["analys",{"_index":6431,"title":{},"name":{},"text":{"244":{}},"component":{}}],["analysi",{"_index":1049,"title":{"6-22":{},"164-2":{},"164-3":{},"244-5":{},"262-7":{}},"name":{},"text":{"6":{},"14":{},"32":{},"58":{},"67":{},"81":{},"99":{},"125":{},"164":{},"191":{},"194":{},"197":{},"199":{},"201":{},"208":{},"244":{},"262":{},"268":{}},"component":{}}],["analyst",{"_index":5483,"title":{},"name":{},"text":{"164":{}},"component":{}}],["analyt",{"_index":173,"title":{"142":{},"21-8":{},"66-14":{},"142-3":{},"142-4":{},"142-5":{},"142-6":{},"142-7":{},"167-31":{},"167-32":{},"167-33":{},"167-35":{},"167-36":{},"167-37":{},"167-38":{},"167-39":{},"202-12":{}},"name":{},"text":{"1":{},"2":{},"4":{},"21":{},"32":{},"44":{},"57":{},"65":{},"66":{},"70":{},"84":{},"110":{},"111":{},"118":{},"132":{},"142":{},"165":{},"167":{},"201":{},"202":{},"204":{},"258":{}},"component":{}}],["analytical_pub",{"_index":1779,"title":{},"name":{},"text":{"21":{}},"component":{}}],["analytics/monitor",{"_index":6020,"title":{},"name":{},"text":{"199":{}},"component":{}}],["analytics_",{"_index":5098,"title":{},"name":{},"text":{"142":{}},"component":{}}],["analytics_offic",{"_index":5099,"title":{},"name":{},"text":{"142":{}},"component":{}}],["analytics_view_nam",{"_index":5113,"title":{},"name":{},"text":{"142":{}},"component":{}}],["analyz",{"_index":1308,"title":{"108-13":{}},"name":{},"text":{"6":{},"32":{},"49":{},"60":{},"65":{},"67":{},"81":{},"108":{},"129":{},"164":{},"197":{},"244":{}},"component":{}}],["anchor",{"_index":5933,"title":{},"name":{},"text":{"195":{}},"component":{}}],["and/or",{"_index":3926,"title":{},"name":{},"text":{"80":{},"158":{},"163":{}},"component":{}}],["and\\or",{"_index":6754,"title":{},"name":{},"text":{"269":{}},"component":{}}],["andalmost",{"_index":3312,"title":{},"name":{},"text":{"67":{}},"component":{}}],["animi",{"_index":6337,"title":{},"name":{},"text":{"231":{}},"component":{}}],["annot",{"_index":789,"title":{},"name":{},"text":{"4":{},"6":{},"21":{},"47":{},"193":{},"244":{},"251":{},"253":{},"254":{},"262":{},"272":{}},"component":{}}],["anomali",{"_index":4572,"title":{},"name":{},"text":{"125":{}},"component":{}}],["anonym",{"_index":893,"title":{},"name":{},"text":{"4":{},"57":{}},"component":{}}],["anoth",{"_index":599,"title":{"221":{},"222":{},"141-22":{},"162-6":{},"162-8":{},"231-2":{}},"name":{"221":{},"222":{}},"text":{"4":{},"9":{},"13":{},"21":{},"24":{},"33":{},"51":{},"58":{},"73":{},"75":{},"76":{},"99":{},"105":{},"108":{},"113":{},"115":{},"123":{},"124":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"159":{},"160":{},"161":{},"162":{},"167":{},"171":{},"181":{},"188":{},"196":{},"210":{},"211":{},"212":{},"216":{},"218":{},"220":{},"221":{},"222":{},"226":{},"231":{},"232":{},"237":{},"242":{},"247":{},"254":{},"260":{},"267":{}},"component":{}}],["answer",{"_index":952,"title":{},"name":{},"text":{"5":{},"6":{}},"component":{}}],["anti",{"_index":3943,"title":{"205-2":{}},"name":{},"text":{"80":{},"205":{}},"component":{}}],["antiviru",{"_index":2415,"title":{},"name":{},"text":{"49":{}},"component":{}}],["antor",{"_index":6631,"title":{},"name":{},"text":{"266":{}},"component":{}}],["antora",{"_index":2452,"title":{},"name":{},"text":{"49":{}},"component":{}}],["anual",{"_index":3336,"title":{},"name":{},"text":{"67":{}},"component":{}}],["anyon",{"_index":4545,"title":{},"name":{},"text":{"122":{}},"component":{}}],["anyth",{"_index":1984,"title":{},"name":{},"text":{"30":{}},"component":{}}],["anywher",{"_index":5563,"title":{},"name":{},"text":{"167":{},"262":{}},"component":{}}],["apach",{"_index":2276,"title":{},"name":{},"text":{"49":{},"61":{},"183":{},"184":{}},"component":{}}],["apex",{"_index":3892,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{}},"component":{}}],["api",{"_index":380,"title":{"55":{},"171":{},"180":{},"181":{},"201":{},"231":{},"269":{},"272":{},"32-7":{},"58-24":{},"154-16":{},"161-15":{},"167-8":{},"205-8":{},"205-10":{},"268-9":{},"269-8":{},"269-11":{},"269-15":{},"269-19":{},"272-14":{},"272-15":{}},"name":{"55":{},"82":{},"83":{},"124":{},"171":{},"181":{},"272":{}},"text":{"2":{},"4":{},"6":{},"9":{},"14":{},"15":{},"19":{},"32":{},"33":{},"40":{},"44":{},"45":{},"47":{},"48":{},"49":{},"52":{},"55":{},"56":{},"58":{},"59":{},"62":{},"65":{},"66":{},"67":{},"73":{},"80":{},"81":{},"82":{},"83":{},"84":{},"99":{},"100":{},"103":{},"104":{},"105":{},"106":{},"122":{},"123":{},"124":{},"126":{},"128":{},"132":{},"139":{},"140":{},"141":{},"142":{},"154":{},"157":{},"158":{},"160":{},"161":{},"162":{},"167":{},"170":{},"171":{},"179":{},"180":{},"181":{},"189":{},"193":{},"194":{},"196":{},"198":{},"199":{},"201":{},"202":{},"204":{},"205":{},"208":{},"209":{},"220":{},"221":{},"226":{},"229":{},"230":{},"231":{},"250":{},"255":{},"257":{},"267":{},"268":{},"269":{},"272":{}},"component":{}}],["api.adoc",{"_index":5862,"title":{},"name":{},"text":{"195":{}},"component":{}}],["api.nais.gov.ua/1.0/subjects/2222",{"_index":5430,"title":{},"name":{},"text":{"162":{}},"component":{}}],["api.yaml",{"_index":6864,"title":{},"name":{},"text":{"272":{}},"component":{}}],["api/api",{"_index":5126,"title":{},"name":{},"text":{"142":{}},"component":{}}],["api/dashboard",{"_index":5121,"title":{},"name":{},"text":{"142":{}},"component":{}}],["api/data",{"_index":4980,"title":{},"name":{},"text":{"140":{},"141":{}},"component":{}}],["api/esignature/cont",{"_index":6747,"title":{},"name":{},"text":{"269":{}},"component":{}}],["api/esignature/info",{"_index":6738,"title":{},"name":{},"text":{"269":{}},"component":{}}],["api/esignature/valid",{"_index":6710,"title":{},"name":{},"text":{"269":{}},"component":{}}],["api/gateway/busi",{"_index":5711,"title":{},"name":{},"text":{"179":{}},"component":{}}],["api/gateway/data",{"_index":5715,"title":{},"name":{},"text":{"179":{}},"component":{}}],["api/history/process",{"_index":6101,"title":{},"name":{},"text":{"205":{}},"component":{}}],["api/history/task",{"_index":6109,"title":{},"name":{},"text":{"205":{}},"component":{}}],["api/integration/data",{"_index":4567,"title":{},"name":{},"text":{"124":{}},"component":{}}],["api/process",{"_index":6088,"title":{},"name":{},"text":{"205":{}},"component":{}}],["api/rest",{"_index":6651,"title":{},"name":{},"text":{"268":{}},"component":{}}],["api/v1/auth/partn",{"_index":5889,"title":{},"name":{},"text":{"195":{}},"component":{}}],["api/v1/notification/distribution/push",{"_index":4290,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["api/v1/publ",{"_index":4287,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["apivers",{"_index":3742,"title":{},"name":{},"text":{"73":{},"80":{},"188":{},"195":{},"196":{},"248":{},"254":{},"258":{},"272":{}},"component":{}}],["apostroph",{"_index":1442,"title":{},"name":{},"text":{"9":{},"173":{},"234":{},"237":{}},"component":{}}],["app",{"_index":921,"title":{"186":{},"187":{},"186-3":{}},"name":{},"text":{"4":{},"40":{},"119":{},"126":{},"127":{},"133":{},"139":{},"141":{},"155":{},"160":{},"179":{},"186":{},"187":{},"196":{},"202":{},"204":{},"214":{},"230":{},"254":{},"255":{},"258":{},"270":{},"272":{}},"component":{}}],["app,offic",{"_index":5229,"title":{},"name":{},"text":{"155":{}},"component":{}}],["app.kubernetes.io/manag",{"_index":6468,"title":{},"name":{},"text":{"254":{}},"component":{}}],["app.kubernetes.io/nam",{"_index":6857,"title":{},"name":{},"text":{"272":{}},"component":{}}],["app/secrets/diia",{"_index":5914,"title":{},"name":{},"text":{"195":{}},"component":{}}],["app/secrets/extern",{"_index":5913,"title":{},"name":{},"text":{"195":{}},"component":{}}],["app/secrets/trembita",{"_index":5912,"title":{},"name":{},"text":{"195":{}},"component":{}}],["app2",{"_index":5231,"title":{},"name":{},"text":{"155":{}},"component":{}}],["appar",{"_index":3327,"title":{},"name":{},"text":{"67":{}},"component":{}}],["appear",{"_index":672,"title":{},"name":{},"text":{"4":{},"8":{},"13":{},"16":{},"30":{},"33":{},"56":{},"57":{},"66":{},"113":{},"115":{},"118":{},"126":{},"127":{},"139":{},"151":{},"152":{},"154":{},"155":{},"162":{},"210":{},"211":{},"218":{},"225":{},"226":{},"227":{},"245":{},"255":{},"260":{},"262":{}},"component":{}}],["append",{"_index":4894,"title":{},"name":{},"text":{"139":{},"140":{},"142":{}},"component":{}}],["appli",{"_index":515,"title":{"75-5":{},"138-19":{},"142-9":{},"177-5":{},"195-14":{},"195-15":{},"195-16":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"14":{},"15":{},"16":{},"23":{},"28":{},"29":{},"30":{},"33":{},"34":{},"36":{},"39":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"61":{},"66":{},"68":{},"73":{},"75":{},"76":{},"78":{},"81":{},"82":{},"84":{},"99":{},"101":{},"103":{},"104":{},"105":{},"112":{},"115":{},"117":{},"118":{},"122":{},"127":{},"129":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"149":{},"150":{},"153":{},"154":{},"158":{},"160":{},"161":{},"162":{},"165":{},"167":{},"168":{},"173":{},"175":{},"177":{},"183":{},"186":{},"188":{},"193":{},"195":{},"196":{},"202":{},"205":{},"209":{},"216":{},"217":{},"221":{},"222":{},"224":{},"227":{},"234":{},"235":{},"236":{},"237":{},"240":{},"242":{},"244":{},"245":{},"246":{},"249":{},"250":{},"254":{},"256":{},"258":{},"264":{},"267":{},"268":{},"269":{},"270":{},"272":{}},"component":{}}],["applic",{"_index":61,"title":{"49-2":{},"49-3":{},"99-2":{},"154-13":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"14":{},"23":{},"29":{},"32":{},"34":{},"47":{},"49":{},"50":{},"52":{},"57":{},"59":{},"66":{},"67":{},"68":{},"81":{},"84":{},"87":{},"99":{},"103":{},"108":{},"119":{},"122":{},"127":{},"128":{},"138":{},"140":{},"148":{},"149":{},"154":{},"155":{},"158":{},"161":{},"162":{},"167":{},"168":{},"183":{},"186":{},"188":{},"193":{},"197":{},"204":{},"205":{},"209":{},"210":{},"213":{},"216":{},"221":{},"222":{},"254":{},"258":{},"262":{},"269":{}},"component":{}}],["applicant’",{"_index":221,"title":{},"name":{},"text":{"2":{}},"component":{}}],["application/json",{"_index":2596,"title":{},"name":{},"text":{"52":{},"58":{},"141":{},"159":{},"161":{},"162":{},"216":{}},"component":{}}],["application/octet",{"_index":4316,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["application/pdf",{"_index":4308,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["application/pdf,image/jpeg,image/png",{"_index":4974,"title":{},"name":{},"text":{"140":{}},"component":{}}],["application/pgadmin",{"_index":2711,"title":{},"name":{},"text":{"56":{}},"component":{}}],["application/pkcs7",{"_index":4317,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["application/pod",{"_index":4520,"title":{},"name":{},"text":{"119":{}},"component":{}}],["application/redash",{"_index":6057,"title":{},"name":{},"text":{"204":{}},"component":{}}],["application/xml",{"_index":5473,"title":{},"name":{},"text":{"162":{}},"component":{}}],["application/xml').childelement(\"bodi",{"_index":5466,"title":{},"name":{},"text":{"162":{}},"component":{}}],["application_id",{"_index":6154,"title":{},"name":{},"text":{"209":{}},"component":{}}],["application_nam",{"_index":6155,"title":{},"name":{},"text":{"209":{}},"component":{}}],["application_rol",{"_index":4081,"title":{},"name":{},"text":{"83":{}},"component":{}}],["applicationname=\"keycloak",{"_index":4515,"title":{},"name":{},"text":{"119":{}},"component":{}}],["applicationsecond",{"_index":6233,"title":{},"name":{},"text":{"217":{}},"component":{}}],["application’",{"_index":3328,"title":{},"name":{},"text":{"67":{},"167":{}},"component":{}}],["appoint",{"_index":2903,"title":{},"name":{},"text":{"59":{},"65":{},"85":{},"88":{},"154":{},"197":{},"199":{},"208":{},"254":{},"266":{},"272":{}},"component":{}}],["approach",{"_index":139,"title":{"6-1":{},"6-2":{},"6-19":{},"67-5":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"23":{},"31":{},"32":{},"34":{},"42":{},"43":{},"44":{},"48":{},"49":{},"57":{},"59":{},"67":{},"78":{},"99":{},"116":{},"153":{},"164":{},"190":{},"191":{},"195":{},"197":{},"200":{},"202":{},"213":{},"244":{},"246":{},"258":{},"268":{},"270":{}},"component":{}}],["appropri",{"_index":523,"title":{},"name":{},"text":{"2":{},"6":{},"30":{},"33":{},"45":{},"59":{},"63":{},"65":{},"73":{},"80":{},"99":{},"105":{},"118":{},"119":{},"128":{},"138":{},"139":{},"140":{},"141":{},"145":{},"155":{},"159":{},"165":{},"202":{},"222":{},"254":{},"255":{},"269":{}},"component":{}}],["approv",{"_index":319,"title":{"36":{},"33-3":{},"217-9":{}},"name":{},"text":{"2":{},"6":{},"28":{},"29":{},"31":{},"32":{},"33":{},"36":{},"37":{},"42":{},"43":{},"59":{},"65":{},"67":{},"73":{},"99":{},"108":{},"117":{},"118":{},"191":{},"193":{},"217":{},"251":{}},"component":{}}],["approxim",{"_index":1968,"title":{"255-10":{}},"name":{},"text":{"30":{},"50":{},"84":{},"140":{},"255":{}},"component":{}}],["apps..dev.registry.eua.gov.ua",{"_index":2551,"title":{},"name":{},"text":{"51":{}},"component":{}}],["apps..dev.registry.eua.gov.ua/cicd",{"_index":4621,"title":{},"name":{},"text":{"128":{}},"component":{}}],["apps.envone.dev.registry.eua.gov.ua",{"_index":6414,"title":{},"name":{},"text":{"244":{},"262":{}},"component":{}}],["apps.envone.dev.registry.eua.gov.ua/api/dashboards/8",{"_index":5123,"title":{},"name":{},"text":{"142":{}},"component":{}}],["apps.envone.dev.registry.eua.gov.ua/cicd/job/registri",{"_index":5644,"title":{},"name":{},"text":{"167":{}},"component":{}}],["apps.envone.dev.registry.eua.gov.ua/geoserv",{"_index":2875,"title":{},"name":{},"text":{"58":{}},"component":{}}],["apps.envone.dev.registry.eua.gov.ua/geoserver/registry/ow",{"_index":6295,"title":{},"name":{},"text":{"230":{}},"component":{}}],["apps.envone.dev.registry.eua.gov.ua/openapi",{"_index":2884,"title":{},"name":{},"text":{"58":{}},"component":{}}],["apps.openshift.example.com",{"_index":2079,"title":{},"name":{},"text":{"40":{}},"component":{}}],["apps.openshift.io/v1",{"_index":3933,"title":{},"name":{},"text":{"80":{}},"component":{}}],["apps.reestr1.eua.gov.ua",{"_index":922,"title":{},"name":{},"text":{"4":{}},"component":{}}],["apps/v1",{"_index":5909,"title":{},"name":{},"text":{"195":{},"258":{}},"component":{}}],["apptoolbox",{"_index":1854,"title":{"25-6":{}},"name":{},"text":{"25":{}},"component":{}}],["apt",{"_index":3636,"title":{},"name":{},"text":{"73":{}},"component":{}}],["arbitrari",{"_index":3299,"title":{},"name":{},"text":{"67":{},"242":{},"267":{}},"component":{}}],["arch:architecture/data",{"_index":2153,"title":{},"name":{},"text":{"46":{}},"component":{}}],["arch:architecture/platform",{"_index":2121,"title":{},"name":{},"text":{"44":{}},"component":{}}],["arch:architecture/platform/operational/logging/overview.adoc",{"_index":6025,"title":{},"name":{},"text":{"199":{},"208":{}},"component":{}}],["arch:architecture/platform/operational/monitoring/overview.adoc",{"_index":6026,"title":{},"name":{},"text":{"199":{},"208":{}},"component":{}}],["arch:architecture/platform/operational/us",{"_index":1912,"title":{},"name":{},"text":{"28":{},"46":{},"118":{},"179":{}},"component":{}}],["arch:architecture/registry/administrative/regul",{"_index":6648,"title":{},"name":{},"text":{"268":{}},"component":{}}],["arch:architecture/registry/operational/bpms/overview.adoc",{"_index":2150,"title":{},"name":{},"text":{"46":{}},"component":{}}],["arch:architecture/registry/operational/digit",{"_index":2146,"title":{},"name":{},"text":{"46":{}},"component":{}}],["arch:architecture/registry/operational/extern",{"_index":2151,"title":{},"name":{},"text":{"46":{}},"component":{}}],["arch:architecture/registry/operational/geo/overview.adoc",{"_index":2159,"title":{},"name":{},"text":{"46":{}},"component":{}}],["arch:architecture/registry/operational/notifications/overview.adoc",{"_index":2155,"title":{},"name":{},"text":{"46":{}},"component":{}}],["arch:archive/admin",{"_index":6287,"title":{},"name":{},"text":{"229":{}},"component":{}}],["arch=$(dpkg",{"_index":3650,"title":{},"name":{},"text":{"73":{}},"component":{}}],["architect",{"_index":206,"title":{},"name":{},"text":{"1":{},"6":{}},"component":{}}],["architectur",{"_index":209,"title":{"44":{},"45":{},"46":{},"48":{},"95":{},"44-7":{},"48-2":{},"67-12":{}},"name":{},"text":{"1":{},"4":{},"32":{},"44":{},"45":{},"46":{},"48":{},"67":{},"73":{},"81":{},"123":{},"131":{},"154":{},"167":{},"168":{},"169":{},"193":{},"194":{},"250":{},"255":{},"266":{}},"component":{}}],["architecture/application/redash",{"_index":6058,"title":{},"name":{},"text":{"204":{}},"component":{}}],["architecture/contain",{"_index":2213,"title":{},"name":{},"text":{"48":{},"194":{},"199":{},"208":{}},"component":{}}],["architecture/data",{"_index":2220,"title":{},"name":{},"text":{"48":{}},"component":{}}],["architecture/devop",{"_index":2710,"title":{},"name":{},"text":{"56":{},"204":{}},"component":{}}],["architecture/libraries/ddm",{"_index":6843,"title":{},"name":{},"text":{"272":{}},"component":{}}],["architecture/network",{"_index":2221,"title":{},"name":{},"text":{"48":{}},"component":{}}],["architecture/platform/operational/logging/overview.adoc",{"_index":5834,"title":{},"name":{},"text":{"191":{},"194":{}},"component":{}}],["architecture/platform/operational/monitoring/overview.adoc",{"_index":5835,"title":{},"name":{},"text":{"191":{},"194":{}},"component":{}}],["architecture/platform/operational/overview.adoc",{"_index":2217,"title":{},"name":{},"text":{"48":{}},"component":{}}],["architecture/registry/administrative/overview.adoc",{"_index":2218,"title":{},"name":{},"text":{"48":{}},"component":{}}],["architecture/registry/operational/notifications/diia",{"_index":5861,"title":{},"name":{},"text":{"195":{}},"component":{}}],["architecture/registry/operational/notifications/notif",{"_index":5872,"title":{},"name":{},"text":{"195":{}},"component":{}}],["architecture/registry/operational/overview.adoc",{"_index":2219,"title":{},"name":{},"text":{"48":{}},"component":{}}],["archiv",{"_index":484,"title":{"203-4":{}},"name":{},"text":{"2":{},"21":{},"66":{},"86":{},"87":{},"142":{},"203":{},"204":{},"207":{},"258":{},"269":{}},"component":{}}],["area",{"_index":1311,"title":{},"name":{},"text":{"6":{},"46":{},"67":{},"163":{},"198":{},"230":{}},"component":{}}],["aren’t",{"_index":1086,"title":{},"name":{},"text":{"6":{},"125":{},"193":{},"251":{}},"component":{}}],["argument",{"_index":4300,"title":{},"name":{},"text":{"105":{},"160":{},"229":{},"253":{}},"component":{}}],["aris",{"_index":1493,"title":{},"name":{},"text":{"10":{},"56":{},"205":{}},"component":{}}],["arn",{"_index":3710,"title":{},"name":{},"text":{"73":{}},"component":{}}],["arn:aws:iam::764324427262:role/customcrossaccountrol",{"_index":3705,"title":{},"name":{},"text":{"73":{}},"component":{}}],["arrang",{"_index":4792,"title":{},"name":{},"text":{"138":{},"168":{},"240":{}},"component":{}}],["arrangeactassert",{"_index":1157,"title":{},"name":{},"text":{"6":{}},"component":{}}],["array",{"_index":1512,"title":{"103":{},"225":{}},"name":{},"text":{"12":{},"52":{},"103":{},"107":{},"131":{},"138":{},"141":{},"154":{},"158":{},"167":{},"183":{},"186":{},"212":{},"225":{},"226":{},"227":{},"231":{},"237":{},"245":{},"269":{}},"component":{}}],["array['code','category','nam",{"_index":4343,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array['code','document_type','name','constant_cod",{"_index":4371,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array['code','nam",{"_index":4375,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["array['code','name','col3','col4",{"_index":4382,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array['code','name','constant_cod",{"_index":4862,"title":{},"name":{},"text":{"138":{}},"component":{}}],["array['code','research_typ",{"_index":4367,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["array['document_type','name','constant_cod",{"_index":4372,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array['id','name','constant_cod",{"_index":4378,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array['laboratory_id::ref(lookup_col:laboratory,ref_table:laboratory,ref_col:name,ref_id:laboratory_id",{"_index":4360,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array['name','constant_cod",{"_index":4379,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["array['name','factor_type::''хімічни",{"_index":4383,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array['numb",{"_index":2580,"title":{},"name":{},"text":{"52":{}},"component":{}}],["array['research_typ",{"_index":4340,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["array['uuid','laboratory','staff_status','researches','full_name','hygienist_flag','full_time_flag','salary','fixed_term_contract_flag','contract_end_date','specialization_date','specialization_end_date','dismissal_flag','dismissal_d",{"_index":4359,"title":{},"name":{},"text":{"107":{}},"component":{}}],["array[cont",{"_index":6748,"title":{},"name":{},"text":{"269":{}},"component":{}}],["array[signatureinfo",{"_index":6739,"title":{},"name":{},"text":{"269":{}},"component":{}}],["arriv",{"_index":6668,"title":{},"name":{},"text":{"269":{}},"component":{}}],["arrow",{"_index":3293,"title":{},"name":{},"text":{"67":{},"127":{},"237":{}},"component":{}}],["artefact",{"_index":5833,"title":{},"name":{},"text":{"191":{}},"component":{}}],["articl",{"_index":1517,"title":{"118-4":{}},"name":{},"text":{"12":{},"29":{},"32":{},"36":{},"118":{},"164":{},"194":{},"203":{},"257":{}},"component":{}}],["artifact",{"_index":1036,"title":{"6-16":{},"6-17":{},"6-18":{},"32-12":{}},"name":{},"text":{"6":{},"14":{},"15":{},"32":{},"49":{},"65":{},"66":{},"67":{},"128":{},"191":{},"201":{},"244":{}},"component":{}}],["artifici",{"_index":6776,"title":{},"name":{},"text":{"271":{}},"component":{}}],["asc",{"_index":4671,"title":{},"name":{},"text":{"134":{},"135":{},"138":{},"205":{},"242":{}},"component":{}}],["ascend",{"_index":3000,"title":{},"name":{},"text":{"59":{},"150":{},"151":{},"152":{},"224":{},"240":{},"242":{},"246":{}},"component":{}}],["asciidoc",{"_index":2454,"title":{},"name":{},"text":{"49":{}},"component":{}}],["asciidoctor",{"_index":2456,"title":{},"name":{},"text":{"49":{}},"component":{}}],["asic",{"_index":1510,"title":{"12":{},"12-2":{},"269-7":{}},"name":{"12":{}},"text":{"12":{},"105":{},"227":{},"269":{}},"component":{}}],["asic/cad",{"_index":6708,"title":{},"name":{},"text":{"269":{}},"component":{}}],["ask",{"_index":954,"title":{},"name":{},"text":{"5":{},"8":{},"223":{},"230":{}},"component":{}}],["aspect",{"_index":1384,"title":{},"name":{},"text":{"6":{},"30":{},"32":{},"37":{},"44":{},"58":{},"66":{},"67":{},"202":{},"205":{},"272":{}},"component":{}}],["aspernatur\\naut",{"_index":6342,"title":{},"name":{},"text":{"231":{}},"component":{}}],["asr",{"_index":2124,"title":{},"name":{"45":{}},"text":{},"component":{}}],["assembl",{"_index":2661,"title":{},"name":{},"text":{"55":{},"266":{}},"component":{}}],["assert",{"_index":1172,"title":{},"name":{},"text":{"6":{}},"component":{}}],["assertions.assertnotnull(object",{"_index":1173,"title":{},"name":{},"text":{"6":{}},"component":{}}],["assertj",{"_index":1339,"title":{},"name":{},"text":{"6":{}},"component":{}}],["assess",{"_index":1026,"title":{"6-10":{},"257-14":{},"267-16":{}},"name":{},"text":{"6":{},"12":{},"28":{},"44":{},"66":{},"67":{},"99":{},"108":{},"137":{},"257":{},"267":{}},"component":{}}],["asset",{"_index":6375,"title":{},"name":{},"text":{"237":{}},"component":{}}],["assig",{"_index":5396,"title":{},"name":{},"text":{"161":{}},"component":{}}],["assign",{"_index":446,"title":{"60-15":{}},"name":{"28":{}},"text":{"2":{},"4":{},"6":{},"19":{},"25":{},"28":{},"29":{},"30":{},"36":{},"37":{},"52":{},"58":{},"59":{},"60":{},"66":{},"100":{},"104":{},"105":{},"117":{},"118":{},"119":{},"120":{},"125":{},"132":{},"139":{},"140":{},"142":{},"154":{},"155":{},"159":{},"160":{},"161":{},"212":{},"221":{},"222":{},"237":{},"272":{}},"component":{}}],["assigne",{"_index":2602,"title":{},"name":{},"text":{"52":{},"103":{},"105":{},"139":{},"140":{},"141":{},"154":{},"155":{},"159":{},"161":{},"162":{},"205":{},"216":{},"217":{}},"component":{}}],["assist",{"_index":1507,"title":{},"name":{},"text":{"10":{},"117":{}},"component":{}}],["associ",{"_index":132,"title":{},"name":{},"text":{"1":{},"21":{},"29":{},"51":{},"52":{},"57":{},"58":{},"59":{},"73":{},"99":{},"125":{},"154":{},"208":{},"214":{},"271":{}},"component":{}}],["assum",{"_index":1200,"title":{},"name":{},"text":{"6":{},"50":{},"52":{},"73":{},"105":{},"155":{},"245":{},"272":{}},"component":{}}],["assume_role_polici",{"_index":3586,"title":{},"name":{},"text":{"73":{}},"component":{}}],["assur",{"_index":2430,"title":{},"name":{},"text":{"49":{},"67":{},"99":{}},"component":{}}],["asterisk",{"_index":6621,"title":{},"name":{},"text":{"262":{}},"component":{}}],["asv",{"_index":3226,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["asymmetr",{"_index":1466,"title":{},"name":{},"text":{"9":{}},"component":{}}],["async",{"_index":4036,"title":{},"name":{"271":{}},"text":{"82":{},"83":{},"167":{}},"component":{}}],["asyncdataloadrespons",{"_index":6820,"title":{},"name":{},"text":{"271":{}},"component":{}}],["asyncdataloadresponsekafkalisten",{"_index":6813,"title":{},"name":{},"text":{"271":{}},"component":{}}],["asyncdataloadresult",{"_index":6822,"title":{},"name":{},"text":{"271":{}},"component":{}}],["asynchron",{"_index":1766,"title":{"271":{},"125-7":{},"271-11":{},"271-13":{}},"name":{},"text":{"21":{},"52":{},"82":{},"83":{},"125":{},"167":{},"183":{},"186":{},"198":{},"205":{},"208":{},"270":{},"271":{}},"component":{}}],["atom",{"_index":4795,"title":{},"name":{},"text":{"138":{}},"component":{}}],["atregulatiostribut",{"_index":3153,"title":{},"name":{},"text":{"62":{}},"component":{}}],["attach",{"_index":3399,"title":{},"name":{},"text":{"73":{},"84":{},"140":{},"161":{},"188":{},"214":{},"247":{}},"component":{}}],["attack",{"_index":3234,"title":{},"name":{},"text":{"67":{},"99":{},"197":{},"272":{}},"component":{}}],["attempt",{"_index":1496,"title":{},"name":{},"text":{"10":{},"12":{},"21":{},"56":{},"183":{},"186":{},"245":{},"260":{}},"component":{}}],["attend",{"_index":4776,"title":{},"name":{},"text":{"136":{}},"component":{}}],["attent",{"_index":2067,"title":{},"name":{},"text":{"37":{},"41":{},"115":{},"119":{},"127":{},"138":{},"212":{},"238":{},"265":{}},"component":{}}],["attribut",{"_index":1400,"title":{"7":{},"154":{},"171":{},"85-6":{},"87-5":{},"88-6":{},"119-2":{},"131-4":{},"154-8":{},"165-3":{},"167-4":{},"167-5":{},"167-6":{},"167-7":{},"167-13":{},"167-14":{},"167-15":{},"167-16":{},"167-17":{},"167-18":{},"194-6":{},"197-6":{},"199-6":{},"204-6":{},"208-6":{}},"name":{"154":{},"158":{}},"text":{"9":{},"33":{},"44":{},"47":{},"55":{},"58":{},"59":{},"61":{},"73":{},"82":{},"83":{},"84":{},"85":{},"88":{},"99":{},"100":{},"103":{},"108":{},"111":{},"119":{},"120":{},"124":{},"131":{},"138":{},"142":{},"154":{},"158":{},"160":{},"162":{},"164":{},"165":{},"166":{},"167":{},"170":{},"171":{},"179":{},"181":{},"183":{},"186":{},"194":{},"195":{},"197":{},"199":{},"203":{},"204":{},"205":{},"206":{},"208":{},"209":{},"212":{},"220":{},"221":{},"222":{},"230":{},"242":{},"244":{},"253":{},"255":{},"257":{},"267":{},"271":{},"272":{}},"component":{}}],["attribute_nam",{"_index":4041,"title":{},"name":{},"text":{"82":{},"83":{},"84":{},"209":{}},"component":{}}],["attribute_valu",{"_index":4042,"title":{},"name":{},"text":{"82":{},"83":{},"84":{},"209":{}},"component":{}}],["attributes.adoc",{"_index":2123,"title":{},"name":{},"text":{"44":{}},"component":{}}],["attributesequ",{"_index":5246,"title":{},"name":{},"text":{"158":{}},"component":{}}],["attributesstartswith",{"_index":5247,"title":{},"name":{},"text":{"158":{}},"component":{}}],["atttribut",{"_index":5831,"title":{"191-7":{}},"name":{},"text":{"191":{}},"component":{}}],["audit",{"_index":1571,"title":{"119-8":{},"208-9":{}},"name":{},"text":{"14":{},"44":{},"47":{},"48":{},"78":{},"81":{},"99":{},"112":{},"119":{},"142":{},"183":{},"186":{},"195":{},"202":{},"205":{},"208":{},"253":{},"272":{}},"component":{}}],["auditor",{"_index":5104,"title":{},"name":{},"text":{"142":{}},"component":{}}],["auditstorag",{"_index":863,"title":{},"name":{},"text":{"4":{}},"component":{}}],["aut",{"_index":6336,"title":{},"name":{},"text":{"231":{}},"component":{}}],["auth",{"_index":934,"title":{},"name":{"9":{},"115":{},"116":{}},"text":{"4":{},"30":{},"47":{},"73":{},"104":{},"115":{},"117":{},"122":{},"131":{},"132":{},"139":{},"140":{},"141":{},"195":{},"196":{},"222":{},"255":{}},"component":{}}],["auth\":\"b3blb",{"_index":3758,"title":{},"name":{},"text":{"73":{}},"component":{}}],["auth.diia.gov.ua/api/v1/auth/partn",{"_index":5887,"title":{},"name":{},"text":{"195":{}},"component":{}}],["auth/*.yml",{"_index":2747,"title":{},"name":{},"text":{"57":{}},"component":{}}],["auth/citizen.yml",{"_index":2749,"title":{},"name":{},"text":{"57":{},"139":{},"155":{},"202":{}},"component":{}}],["auth/extern",{"_index":2750,"title":{},"name":{},"text":{"57":{},"181":{},"202":{}},"component":{}}],["auth/keycloak",{"_index":3083,"title":{},"name":{},"text":{"60":{},"142":{}},"component":{}}],["auth/officer.yml",{"_index":2748,"title":{},"name":{},"text":{"57":{},"59":{},"117":{},"139":{},"140":{},"141":{},"155":{},"202":{}},"component":{}}],["auth_token",{"_index":4546,"title":{},"name":{},"text":{"122":{},"195":{}},"component":{}}],["auth_token+bear",{"_index":4552,"title":{},"name":{},"text":{"122":{},"195":{}},"component":{}}],["auth_typ",{"_index":4471,"title":{},"name":{},"text":{"115":{}},"component":{}}],["auth_type=dig_sign",{"_index":4476,"title":{},"name":{},"text":{"115":{}},"component":{}}],["authent",{"_index":232,"title":{"9":{},"115":{},"116":{},"9-2":{},"9-3":{},"9-5":{},"30-9":{},"30-10":{},"55-2":{},"55-3":{},"55-4":{},"69-1":{},"70-1":{},"115-2":{},"115-3":{},"117-3":{},"145-1":{},"195-5":{},"195-18":{}},"name":{},"text":{"2":{},"4":{},"9":{},"12":{},"13":{},"14":{},"25":{},"30":{},"31":{},"32":{},"33":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"55":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"78":{},"99":{},"104":{},"105":{},"111":{},"115":{},"116":{},"117":{},"120":{},"122":{},"123":{},"124":{},"145":{},"148":{},"149":{},"151":{},"152":{},"158":{},"179":{},"184":{},"193":{},"195":{},"196":{},"197":{},"199":{},"205":{},"208":{},"229":{},"231":{},"250":{},"255":{},"272":{}},"component":{}}],["authenticationfilter::decodehead",{"_index":5976,"title":{},"name":{},"text":{"196":{}},"component":{}}],["authentif",{"_index":2727,"title":{},"name":{},"text":{"57":{}},"component":{}}],["author",{"_index":276,"title":{"52-4":{},"60-2":{},"104-2":{},"124-8":{},"181-1":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"13":{},"14":{},"32":{},"33":{},"45":{},"47":{},"48":{},"49":{},"52":{},"55":{},"57":{},"59":{},"60":{},"63":{},"67":{},"76":{},"78":{},"81":{},"83":{},"99":{},"104":{},"117":{},"122":{},"124":{},"125":{},"131":{},"138":{},"139":{},"140":{},"141":{},"154":{},"155":{},"168":{},"179":{},"181":{},"188":{},"195":{},"196":{},"197":{},"199":{},"202":{},"204":{},"217":{},"244":{},"248":{},"272":{}},"component":{}}],["authorizationpolici",{"_index":5953,"title":{},"name":{},"text":{"196":{}},"component":{}}],["authorship",{"_index":6455,"title":{},"name":{},"text":{"253":{}},"component":{}}],["auths\":{\"cloud.openshift.com\":{\"auth\":\"b3blb=\",\"email\":\"test@example.com\"},\"quay.io\":{\"auth\":\"b3blb=\",\"email\":\"test@example.com\"},\"registry.connect.redhat.com\":{\"username\":\"test\",\"password\":\"test\",\"auth\":\"b3blb=\",\"email\":\"test@example.com\"},\"registry.redhat.io\":{\"username\":\"test\",\"password\":\"test\",\"auth\":\"b3blb=\",\"email\":\"test@example.com\"},\"index.docker.io/v2/\":{\"username\":\"test\",\"password\":\"test\",\"auth\":\"b3blb=\",\"email\":\"test@example.com",{"_index":3766,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aution",{"_index":6167,"title":{},"name":{},"text":{"210":{}},"component":{}}],["auto",{"_index":329,"title":{"244-5":{}},"name":{"131":{},"165":{}},"text":{"2":{},"6":{},"57":{},"59":{},"73":{},"81":{},"88":{},"129":{},"154":{},"181":{},"183":{},"186":{},"204":{},"244":{}},"component":{}}],["auto.adoc",{"_index":3064,"title":{},"name":{},"text":{"59":{}},"component":{}}],["auto.bpmn",{"_index":4566,"title":{},"name":{},"text":{"124":{}},"component":{}}],["auto1",{"_index":5797,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["auto_generated_numb",{"_index":4063,"title":{},"name":{},"text":{"83":{}},"component":{}}],["autocomplet",{"_index":6063,"title":{"262-4":{},"262-5":{},"262-6":{}},"name":{},"text":{"204":{},"262":{}},"component":{}}],["autofil",{"_index":5363,"title":{},"name":{},"text":{"161":{}},"component":{}}],["autogener",{"_index":4051,"title":{},"name":{},"text":{"83":{}},"component":{}}],["autom",{"_index":502,"title":{"6-25":{},"49-14":{},"67-14":{}},"name":{},"text":{"2":{},"6":{},"14":{},"23":{},"31":{},"32":{},"48":{},"49":{},"50":{},"65":{},"66":{},"67":{},"73":{},"81":{},"128":{},"132":{},"168":{},"191":{},"202":{},"218":{},"268":{}},"component":{}}],["automat",{"_index":487,"title":{"80":{},"131":{},"80-1":{},"107-8":{},"205-16":{}},"name":{},"text":{"2":{},"9":{},"16":{},"21":{},"22":{},"28":{},"29":{},"30":{},"31":{},"33":{},"35":{},"42":{},"43":{},"47":{},"49":{},"50":{},"51":{},"52":{},"57":{},"58":{},"59":{},"61":{},"67":{},"72":{},"73":{},"80":{},"81":{},"88":{},"99":{},"104":{},"105":{},"107":{},"108":{},"112":{},"113":{},"117":{},"118":{},"119":{},"122":{},"124":{},"125":{},"128":{},"130":{},"131":{},"139":{},"141":{},"144":{},"150":{},"153":{},"154":{},"160":{},"161":{},"167":{},"168":{},"175":{},"176":{},"177":{},"181":{},"184":{},"193":{},"195":{},"197":{},"205":{},"209":{},"211":{},"212":{},"216":{},"217":{},"218":{},"223":{},"227":{},"237":{},"242":{},"244":{},"246":{},"251":{},"253":{},"254":{},"258":{},"260":{},"264":{}},"component":{}}],["automaticallu",{"_index":6598,"title":{},"name":{},"text":{"260":{}},"component":{}}],["automation.adoc",{"_index":4438,"title":{},"name":{},"text":{"110":{}},"component":{}}],["autonomi",{"_index":4482,"title":{},"name":{},"text":{"117":{}},"component":{}}],["autosc",{"_index":3927,"title":{},"name":{},"text":{"80":{},"81":{}},"component":{}}],["autoscal",{"_index":3924,"title":{},"name":{},"text":{"80":{}},"component":{}}],["autoscaling.openshift.io/v1",{"_index":3954,"title":{},"name":{},"text":{"80":{}},"component":{}}],["autoscaling.openshift.io/v1beta1",{"_index":3969,"title":{},"name":{},"text":{"80":{}},"component":{}}],["autoscaling/v1",{"_index":3928,"title":{},"name":{},"text":{"80":{}},"component":{}}],["autotest",{"_index":6049,"title":{},"name":{},"text":{"202":{}},"component":{}}],["autotip",{"_index":6766,"title":{},"name":{},"text":{"270":{}},"component":{}}],["autouns",{"_index":762,"title":{},"name":{},"text":{"4":{}},"component":{}}],["autowir",{"_index":6815,"title":{},"name":{},"text":{"271":{}},"component":{}}],["auxiliari",{"_index":1996,"title":{},"name":{},"text":{"31":{},"86":{},"191":{}},"component":{}}],["avail",{"_index":386,"title":{"237":{},"69-3":{},"70-3":{},"81-5":{},"229-3":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"10":{},"12":{},"19":{},"21":{},"23":{},"24":{},"25":{},"28":{},"30":{},"32":{},"34":{},"42":{},"43":{},"44":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"79":{},"80":{},"81":{},"86":{},"99":{},"100":{},"101":{},"103":{},"105":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"124":{},"125":{},"129":{},"131":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"145":{},"148":{},"149":{},"152":{},"155":{},"159":{},"160":{},"167":{},"173":{},"175":{},"182":{},"188":{},"192":{},"193":{},"194":{},"195":{},"197":{},"208":{},"214":{},"226":{},"229":{},"233":{},"235":{},"237":{},"238":{},"240":{},"241":{},"242":{},"244":{},"249":{},"250":{},"253":{},"254":{},"255":{},"262":{},"264":{},"265":{},"267":{},"268":{},"269":{},"272":{}},"component":{}}],["availabilityzon",{"_index":3991,"title":{},"name":{},"text":{"80":{}},"component":{}}],["averag",{"_index":2486,"title":{},"name":{},"text":{"50":{},"230":{},"253":{},"272":{}},"component":{}}],["avg",{"_index":5560,"title":{},"name":{},"text":{"167":{}},"component":{}}],["aviat",{"_index":2960,"title":{},"name":{},"text":{"59":{}},"component":{}}],["avoid",{"_index":1121,"title":{},"name":{},"text":{"6":{},"8":{},"35":{},"52":{},"73":{},"108":{},"119":{},"122":{},"131":{},"210":{},"217":{},"238":{},"244":{}},"component":{}}],["avro",{"_index":2369,"title":{},"name":{},"text":{"49":{}},"component":{}}],["aw",{"_index":640,"title":{"39":{},"73":{},"25-5":{},"73-3":{},"73-4":{},"73-7":{},"73-9":{},"73-13":{},"73-19":{},"73-23":{},"73-25":{}},"name":{"73":{}},"text":{"4":{},"14":{},"21":{},"22":{},"25":{},"26":{},"27":{},"38":{},"39":{},"72":{},"73":{},"74":{},"80":{},"87":{},"258":{}},"component":{}}],["await",{"_index":1534,"title":{},"name":{},"text":{"13":{},"125":{},"152":{},"213":{},"216":{},"218":{}},"component":{}}],["awar",{"_index":4182,"title":{"99-22":{}},"name":{},"text":{"99":{},"238":{}},"component":{}}],["away",{"_index":4019,"title":{},"name":{},"text":{"81":{}},"component":{}}],["aws/config",{"_index":3726,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws/instal",{"_index":3668,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_access_key_id",{"_index":3724,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_access_key_id=$(oc",{"_index":3857,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_access_key_id=\\\"${aws_access_key_id",{"_index":3784,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_caller_ident",{"_index":3485,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_eip",{"_index":3602,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_iam_instance_profil",{"_index":3598,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_iam_instance_profile.node_profile.nam",{"_index":3560,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_iam_policy_docu",{"_index":3585,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_iam_rol",{"_index":3590,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_iam_role.node_role.nam",{"_index":3600,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_secret_access_key",{"_index":3725,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_secret_access_key=$(oc",{"_index":3861,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_secret_access_key=\\\"${aws_secret_access_key",{"_index":3787,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_security_group",{"_index":3606,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_security_group.sg_private.id",{"_index":3552,"title":{},"name":{},"text":{"73":{}},"component":{}}],["aws_security_group.sg_public.id",{"_index":3569,"title":{},"name":{},"text":{"73":{}},"component":{}}],["awscliv2.zip",{"_index":3667,"title":{},"name":{},"text":{"73":{}},"component":{}}],["awsmachineproviderconfig",{"_index":3989,"title":{},"name":{},"text":{"80":{}},"component":{}}],["awsproviderconfig.openshift.io/v1beta1",{"_index":3977,"title":{},"name":{},"text":{"80":{}},"component":{}}],["az",{"_index":3529,"title":{},"name":{},"text":{"73":{}},"component":{}}],["azur",{"_index":1695,"title":{},"name":{},"text":{"21":{},"258":{}},"component":{}}],["b",{"_index":592,"title":{"4-4":{},"4-5":{},"4-6":{}},"name":{},"text":{"4":{},"166":{},"177":{},"210":{},"216":{},"269":{}},"component":{}}],["b.dns.wildcard.com/g",{"_index":925,"title":{},"name":{},"text":{"4":{}},"component":{}}],["b3",{"_index":4595,"title":{},"name":{},"text":{"127":{}},"component":{}}],["b3fc",{"_index":5596,"title":{},"name":{},"text":{"167":{}},"component":{}}],["b64dec",{"_index":857,"title":{},"name":{},"text":{"4":{}},"component":{}}],["b80f",{"_index":5411,"title":{},"name":{},"text":{"161":{}},"component":{}}],["b84ceb8f",{"_index":5788,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["b_cluster_login=\"oc",{"_index":749,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ba",{"_index":1269,"title":{},"name":{},"text":{"6":{}},"component":{}}],["back",{"_index":719,"title":{"17":{},"20":{},"21":{},"17-1":{},"49-63":{}},"name":{},"text":{"4":{},"8":{},"15":{},"16":{},"17":{},"20":{},"21":{},"30":{},"34":{},"36":{},"49":{},"52":{},"66":{},"73":{},"100":{},"115":{},"117":{},"118":{},"129":{},"152":{},"174":{},"191":{}},"component":{}}],["backdoor",{"_index":5929,"title":{},"name":{},"text":{"195":{}},"component":{}}],["backend",{"_index":2166,"title":{},"name":{},"text":{"47":{},"55":{},"73":{},"87":{},"229":{},"253":{},"270":{}},"component":{}}],["backend_clustering_mod",{"_index":6572,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_flag0",{"_index":6563,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_flag1",{"_index":6568,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_hostname0",{"_index":6560,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_hostname1",{"_index":6565,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_port0",{"_index":6561,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_port1",{"_index":6566,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_weight0",{"_index":6562,"title":{},"name":{},"text":{"258":{}},"component":{}}],["backend_weight1",{"_index":6567,"title":{},"name":{},"text":{"258":{}},"component":{}}],["background",{"_index":5764,"title":{},"name":{},"text":{"183":{}},"component":{}}],["backlog",{"_index":1218,"title":{},"name":{},"text":{"6":{}},"component":{}}],["backup",{"_index":398,"title":{"15":{},"16":{},"18":{},"85":{},"253":{},"4-4":{},"15-3":{},"16-3":{},"18-1":{},"18-2":{},"21-1":{},"21-2":{},"21-3":{},"21-4":{},"21-6":{},"21-7":{},"30-11":{}},"name":{"15":{},"16":{},"17":{},"18":{},"21":{},"253":{}},"text":{"2":{},"4":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"30":{},"31":{},"44":{},"45":{},"49":{},"50":{},"65":{},"81":{},"85":{},"86":{},"87":{},"153":{},"194":{},"195":{},"253":{},"258":{}},"component":{}}],["backup/restor",{"_index":2451,"title":{},"name":{},"text":{"49":{}},"component":{}}],["backup/source_system/oper",{"_index":1759,"title":{},"name":{},"text":{"21":{}},"component":{}}],["backup=\"$(d",{"_index":1734,"title":{},"name":{},"text":{"21":{}},"component":{}}],["backup_nam",{"_index":752,"title":{},"name":{},"text":{"4":{}},"component":{}}],["backups/backup",{"_index":695,"title":{},"name":{},"text":{"4":{}},"component":{}}],["backups/rest",{"_index":696,"title":{},"name":{},"text":{"4":{}},"component":{}}],["backward",{"_index":1300,"title":{},"name":{},"text":{"6":{},"73":{},"87":{},"256":{}},"component":{}}],["bad",{"_index":1109,"title":{},"name":{},"text":{"6":{},"25":{}},"component":{}}],["balanc",{"_index":36,"title":{},"name":{},"text":{"1":{},"29":{},"44":{},"49":{},"75":{},"76":{},"81":{},"99":{},"188":{},"197":{},"199":{},"213":{},"247":{},"258":{}},"component":{}}],["bandwidth",{"_index":637,"title":{},"name":{},"text":{"4":{},"23":{}},"component":{}}],["bandwidth_metr",{"_index":6851,"title":{},"name":{},"text":{"272":{}},"component":{}}],["bank",{"_index":478,"title":{},"name":{},"text":{"2":{},"78":{},"111":{},"213":{}},"component":{}}],["bank_id",{"_index":4473,"title":{},"name":{},"text":{"115":{}},"component":{}}],["bankid",{"_index":476,"title":{},"name":{},"text":{"2":{},"115":{}},"component":{}}],["bar",{"_index":3160,"title":{},"name":{},"text":{"63":{}},"component":{}}],["bare",{"_index":4211,"title":{},"name":{},"text":{"99":{}},"component":{}}],["barrier",{"_index":355,"title":{},"name":{},"text":{"2":{}},"component":{}}],["base",{"_index":100,"title":{"111":{},"162":{},"214":{},"141-22":{},"214-2":{}},"name":{"111":{},"214":{}},"text":{"1":{},"2":{},"6":{},"9":{},"14":{},"16":{},"21":{},"29":{},"32":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"58":{},"59":{},"61":{},"66":{},"68":{},"69":{},"73":{},"78":{},"80":{},"81":{},"99":{},"108":{},"110":{},"111":{},"119":{},"120":{},"122":{},"123":{},"124":{},"132":{},"134":{},"135":{},"136":{},"138":{},"141":{},"142":{},"148":{},"149":{},"150":{},"154":{},"155":{},"159":{},"167":{},"168":{},"171":{},"175":{},"179":{},"184":{},"186":{},"195":{},"204":{},"205":{},"208":{},"209":{},"214":{},"215":{},"216":{},"230":{},"234":{},"237":{},"242":{},"244":{},"254":{},"258":{},"262":{},"264":{},"267":{},"271":{},"272":{}},"component":{}}],["base/pad",{"_index":6673,"title":{},"name":{},"text":{"269":{}},"component":{}}],["base64",{"_index":3290,"title":{},"name":{},"text":{"67":{},"73":{},"203":{},"206":{},"269":{}},"component":{}}],["base64.decode(originrequestd",{"_index":6704,"title":{},"name":{},"text":{"269":{}},"component":{}}],["base64data",{"_index":6719,"title":{},"name":{},"text":{"269":{}},"component":{}}],["base64url",{"_index":5693,"title":{},"name":{},"text":{"179":{}},"component":{}}],["basedomain",{"_index":3744,"title":{},"name":{},"text":{"73":{}},"component":{}}],["basedomain=\"${route53hostedzon",{"_index":3872,"title":{},"name":{},"text":{"73":{}},"component":{}}],["basedomain=$(oc",{"_index":3868,"title":{},"name":{},"text":{"73":{}},"component":{}}],["bash",{"_index":607,"title":{},"name":{},"text":{"4":{},"18":{},"49":{},"56":{},"57":{},"66":{},"73":{},"87":{},"129":{}},"component":{}}],["basi",{"_index":3227,"title":{},"name":{},"text":{"67":{},"81":{},"99":{},"191":{},"205":{},"209":{},"272":{}},"component":{}}],["basic",{"_index":1549,"title":{"50-5":{}},"name":{},"text":{"14":{},"31":{},"50":{},"52":{},"57":{},"58":{},"86":{},"104":{},"116":{},"122":{},"195":{},"213":{},"227":{},"242":{}},"component":{}}],["bastion",{"_index":3380,"title":{"73-17":{}},"name":{},"text":{"73":{}},"component":{}}],["bastion_ip",{"_index":3603,"title":{},"name":{},"text":{"73":{}},"component":{}}],["batch",{"_index":4270,"title":{},"name":{},"text":{"103":{},"119":{},"141":{},"204":{},"205":{}},"component":{}}],["bd",{"_index":2287,"title":{},"name":{},"text":{"49":{}},"component":{}}],["bd53",{"_index":5619,"title":{},"name":{},"text":{"167":{}},"component":{}}],["bdd",{"_index":2426,"title":{},"name":{},"text":{"49":{},"202":{}},"component":{}}],["be",{"_index":514,"title":{},"name":{},"text":{"2":{},"4":{},"9":{},"18":{},"52":{},"58":{},"60":{},"84":{},"108":{},"115":{},"119":{},"157":{},"167":{},"210":{},"229":{},"242":{},"244":{},"259":{},"272":{}},"component":{}}],["bearer",{"_index":4548,"title":{},"name":{},"text":{"122":{},"179":{},"195":{},"196":{}},"component":{}}],["beat",{"_index":1089,"title":{},"name":{},"text":{"6":{}},"component":{}}],["beauti",{"_index":1073,"title":{},"name":{},"text":{"6":{}},"component":{}}],["becam",{"_index":6777,"title":{},"name":{},"text":{"271":{}},"component":{}}],["becom",{"_index":1794,"title":{},"name":{},"text":{"21":{},"23":{},"43":{},"56":{},"57":{},"75":{},"76":{},"99":{},"111":{},"120":{},"129":{},"144":{},"148":{},"149":{},"154":{},"160":{},"237":{},"271":{}},"component":{}}],["befor",{"_index":512,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"18":{},"21":{},"40":{},"42":{},"47":{},"50":{},"52":{},"57":{},"58":{},"67":{},"73":{},"100":{},"103":{},"104":{},"107":{},"108":{},"118":{},"119":{},"125":{},"128":{},"131":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"148":{},"155":{},"158":{},"160":{},"161":{},"162":{},"177":{},"179":{},"183":{},"186":{},"196":{},"204":{},"213":{},"218":{},"221":{},"222":{},"223":{},"226":{},"238":{},"255":{},"257":{}},"component":{}}],["beforehand",{"_index":2042,"title":{},"name":{},"text":{"33":{}},"component":{}}],["begin",{"_index":1143,"title":{},"name":{},"text":{"6":{},"52":{},"73":{},"119":{},"138":{},"152":{},"167":{},"188":{},"234":{},"248":{}},"component":{}}],["behalf",{"_index":4532,"title":{},"name":{},"text":{"119":{},"155":{},"161":{},"255":{},"272":{}},"component":{}}],["behavior",{"_index":1822,"title":{"167-8":{}},"name":{},"text":{"23":{},"34":{},"49":{},"56":{},"67":{},"81":{},"161":{},"167":{},"197":{},"229":{},"257":{}},"component":{}}],["behaviour",{"_index":4030,"title":{},"name":{},"text":{"82":{},"84":{}},"component":{}}],["behind",{"_index":6763,"title":{},"name":{},"text":{"270":{}},"component":{}}],["belief",{"_index":4539,"title":{},"name":{},"text":{"120":{}},"component":{}}],["belong",{"_index":473,"title":{},"name":{},"text":{"2":{},"59":{},"78":{},"127":{},"154":{},"164":{},"167":{},"201":{},"205":{},"231":{}},"component":{}}],["below",{"_index":951,"title":{},"name":{},"text":{"5":{},"6":{},"9":{},"17":{},"21":{},"26":{},"52":{},"73":{},"99":{},"103":{},"105":{},"115":{},"119":{},"123":{},"127":{},"138":{},"140":{},"142":{},"154":{},"160":{},"164":{},"167":{},"192":{},"202":{},"218":{},"227":{},"237":{},"254":{}},"component":{}}],["bench",{"_index":3246,"title":{},"name":{},"text":{"67":{}},"component":{}}],["besid",{"_index":4143,"title":{},"name":{},"text":{"84":{}},"component":{}}],["best",{"_index":1117,"title":{},"name":{},"text":{"6":{},"21":{},"52":{},"59":{},"67":{}},"component":{}}],["better",{"_index":1074,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"51":{},"139":{},"163":{},"226":{}},"component":{}}],["between",{"_index":37,"title":{"124":{},"124-5":{},"155-7":{}},"name":{},"text":{"1":{},"2":{},"9":{},"16":{},"21":{},"28":{},"29":{},"30":{},"32":{},"33":{},"36":{},"45":{},"49":{},"56":{},"58":{},"60":{},"66":{},"67":{},"81":{},"84":{},"87":{},"99":{},"107":{},"108":{},"115":{},"122":{},"123":{},"124":{},"125":{},"131":{},"139":{},"142":{},"154":{},"155":{},"157":{},"161":{},"162":{},"164":{},"167":{},"168":{},"177":{},"191":{},"192":{},"193":{},"195":{},"197":{},"201":{},"202":{},"205":{},"211":{},"212":{},"216":{},"217":{},"220":{},"229":{},"231":{},"252":{},"253":{},"254":{},"257":{},"258":{},"269":{},"271":{}},"component":{}}],["beyond",{"_index":3953,"title":{},"name":{},"text":{"80":{},"99":{},"104":{},"105":{},"108":{},"123":{}},"component":{}}],["billing_mod",{"_index":3502,"title":{},"name":{},"text":{"73":{}},"component":{}}],["bin",{"_index":3886,"title":{},"name":{},"text":{"75":{},"104":{},"195":{}},"component":{}}],["bin/bash",{"_index":3632,"title":{},"name":{},"text":{"73":{}},"component":{}}],["bin/sh",{"_index":3831,"title":{},"name":{},"text":{"73":{}},"component":{}}],["binari",{"_index":6032,"title":{},"name":{},"text":{"201":{}},"component":{}}],["bind",{"_index":5916,"title":{},"name":{},"text":{"195":{}},"component":{}}],["bionic",{"_index":3635,"title":{},"name":{},"text":{"73":{}},"component":{}}],["birth",{"_index":2744,"title":{},"name":{},"text":{"57":{},"135":{},"161":{},"269":{}},"component":{}}],["birth_cert_foreign",{"_index":4724,"title":{},"name":{},"text":{"135":{}},"component":{}}],["birth_cert_ukrain",{"_index":4723,"title":{},"name":{},"text":{"135":{}},"component":{}}],["birthday",{"_index":3138,"title":{},"name":{},"text":{"61":{},"135":{},"161":{}},"component":{}}],["birthday\":\"2020",{"_index":5418,"title":{},"name":{},"text":{"161":{}},"component":{}}],["birthday_doc_numb",{"_index":4688,"title":{},"name":{},"text":{"135":{}},"component":{}}],["birthday_doc_seri",{"_index":4687,"title":{},"name":{},"text":{"135":{}},"component":{}}],["blacklist",{"_index":6836,"title":{},"name":{},"text":{"272":{}},"component":{}}],["blame",{"_index":6435,"title":{},"name":{},"text":{"244":{}},"component":{}}],["blob",{"_index":1696,"title":{},"name":{},"text":{"21":{}},"component":{}}],["block",{"_index":1250,"title":{},"name":{},"text":{"6":{},"25":{},"29":{},"33":{},"48":{},"52":{},"55":{},"67":{},"73":{},"104":{},"159":{},"167":{},"183":{},"186":{},"193":{},"211":{},"212":{},"218":{},"251":{},"260":{},"262":{},"270":{}},"component":{}}],["block_public_acl",{"_index":3492,"title":{},"name":{},"text":{"73":{}},"component":{}}],["block_public_polici",{"_index":3493,"title":{},"name":{},"text":{"73":{}},"component":{}}],["blockdevic",{"_index":3978,"title":{},"name":{},"text":{"80":{}},"component":{}}],["blog",{"_index":5341,"title":{},"name":{},"text":{"160":{}},"component":{}}],["blue",{"_index":4246,"title":{},"name":{},"text":{"100":{}},"component":{}}],["blur",{"_index":6266,"title":{},"name":{},"text":{"226":{}},"component":{}}],["board",{"_index":3088,"title":{},"name":{},"text":{"60":{}},"component":{}}],["bodi",{"_index":337,"title":{},"name":{},"text":{"2":{},"10":{},"25":{},"46":{},"99":{},"105":{},"154":{},"159":{},"161":{},"162":{},"179":{},"183":{},"184":{},"186":{},"202":{},"205":{},"231":{},"269":{},"271":{},"272":{}},"component":{}}],["book",{"_index":5332,"title":{},"name":{},"text":{"160":{}},"component":{}}],["bookmark",{"_index":6464,"title":{},"name":{},"text":{"254":{}},"component":{}}],["boolean",{"_index":2989,"title":{},"name":{},"text":{"59":{},"134":{},"269":{},"270":{}},"component":{}}],["boost",{"_index":2328,"title":{},"name":{},"text":{"49":{}},"component":{}}],["boot",{"_index":1343,"title":{},"name":{},"text":{"6":{},"19":{},"49":{},"204":{},"208":{}},"component":{}}],["bootstrap",{"_index":3395,"title":{"73-43":{}},"name":{},"text":{"73":{}},"component":{}}],["border",{"_index":2935,"title":{},"name":{},"text":{"59":{},"99":{}},"component":{}}],["both",{"_index":104,"title":{},"name":{},"text":{"1":{},"4":{},"8":{},"9":{},"21":{},"34":{},"46":{},"58":{},"66":{},"67":{},"87":{},"99":{},"100":{},"105":{},"108":{},"123":{},"131":{},"139":{},"143":{},"150":{},"154":{},"155":{},"167":{},"177":{},"194":{},"195":{},"199":{},"205":{},"208":{},"209":{},"232":{},"239":{},"240":{},"242":{},"258":{},"264":{},"267":{},"268":{}},"component":{}}],["bottom",{"_index":1928,"title":{},"name":{},"text":{"28":{},"57":{},"60":{},"61":{},"103":{},"118":{},"127":{},"129":{},"131":{},"150":{},"183":{},"224":{},"226":{},"237":{},"246":{}},"component":{}}],["bound",{"_index":3888,"title":{},"name":{},"text":{"75":{},"76":{},"195":{}},"component":{}}],["bound_service_account_nam",{"_index":5917,"title":{},"name":{},"text":{"195":{},"255":{}},"component":{}}],["bound_service_account_namespac",{"_index":5918,"title":{},"name":{},"text":{"195":{},"255":{}},"component":{}}],["boundari",{"_index":2508,"title":{"211-4":{},"213-3":{},"259-4":{},"260-4":{}},"name":{},"text":{"51":{},"73":{},"123":{},"141":{},"159":{},"211":{},"213":{},"259":{},"260":{},"261":{}},"component":{}}],["box",{"_index":388,"title":{},"name":{},"text":{"2":{},"4":{},"31":{},"103":{},"120":{},"142":{},"168":{},"264":{}},"component":{}}],["bp",{"_index":2488,"title":{"269-7":{},"269-8":{}},"name":{"51":{},"60":{},"100":{},"106":{},"139":{},"140":{},"141":{},"143":{},"150":{},"151":{},"154":{},"155":{},"159":{},"160":{},"186":{},"210":{},"222":{},"231":{}},"text":{"52":{},"57":{},"58":{},"59":{},"66":{},"100":{},"104":{},"105":{},"117":{},"122":{},"124":{},"131":{},"132":{},"139":{},"140":{},"141":{},"155":{},"156":{},"159":{},"160":{},"179":{},"181":{},"193":{},"195":{},"198":{},"201":{},"202":{},"205":{},"212":{},"216":{},"217":{},"222":{},"227":{},"233":{},"237":{},"250":{},"262":{},"264":{},"269":{},"271":{}},"component":{}}],["bp1",{"_index":5227,"title":{},"name":{},"text":{"155":{}},"component":{}}],["bpm",{"_index":823,"title":{},"name":{"205":{}},"text":{"4":{},"31":{},"49":{},"51":{},"52":{},"65":{},"78":{},"122":{},"160":{},"183":{},"186":{},"195":{},"198":{},"205":{},"222":{},"258":{},"267":{},"268":{}},"component":{}}],["bpm_history_process",{"_index":6080,"title":{},"name":{},"text":{"205":{}},"component":{}}],["bpm_history_task",{"_index":6082,"title":{},"name":{},"text":{"205":{}},"component":{}}],["bpmn",{"_index":179,"title":{"264":{}},"name":{"264":{}},"text":{"1":{},"2":{},"45":{},"49":{},"51":{},"52":{},"57":{},"65":{},"66":{},"103":{},"105":{},"124":{},"132":{},"139":{},"140":{},"141":{},"154":{},"158":{},"159":{},"160":{},"161":{},"181":{},"183":{},"186":{},"202":{},"204":{},"205":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"234":{},"236":{},"237":{},"238":{},"241":{},"262":{},"263":{},"264":{},"265":{},"270":{}},"component":{}}],["bpmn.io",{"_index":6363,"title":{},"name":{},"text":{"234":{},"262":{},"264":{}},"component":{}}],["bpmn.j",{"_index":2380,"title":{},"name":{},"text":{"49":{}},"component":{}}],["bpmn/camunda",{"_index":6764,"title":{},"name":{},"text":{"270":{}},"component":{}}],["bp—​anoth",{"_index":6252,"title":{},"name":{},"text":{"222":{}},"component":{}}],["br",{"_index":1662,"title":{},"name":{},"text":{"19":{}},"component":{}}],["brace",{"_index":1125,"title":{},"name":{},"text":{"6":{}},"component":{}}],["bracket",{"_index":1145,"title":{},"name":{},"text":{"6":{},"107":{},"257":{}},"component":{}}],["brain",{"_index":1791,"title":{},"name":{},"text":{"21":{}},"component":{}}],["branch",{"_index":308,"title":{"100":{},"100-2":{},"100-6":{},"140-12":{},"140-13":{}},"name":{"100":{}},"text":{"2":{},"4":{},"6":{},"28":{},"30":{},"31":{},"33":{},"42":{},"43":{},"52":{},"56":{},"57":{},"58":{},"66":{},"100":{},"101":{},"129":{},"131":{},"140":{},"159":{},"175":{},"176":{},"177":{},"213":{},"214":{},"242":{},"244":{},"246":{},"259":{},"260":{}},"component":{}}],["breach",{"_index":4024,"title":{},"name":{},"text":{"81":{}},"component":{}}],["break",{"_index":353,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"67":{},"258":{}},"component":{}}],["breakdown",{"_index":2479,"title":{},"name":{},"text":{"50":{},"143":{}},"component":{}}],["bridg",{"_index":458,"title":{},"name":{},"text":{"2":{}},"component":{}}],["brief",{"_index":1995,"title":{"51-3":{}},"name":{},"text":{"31":{},"32":{},"51":{},"66":{}},"component":{}}],["briefli",{"_index":2584,"title":{},"name":{},"text":{"52":{},"175":{}},"component":{}}],["bring",{"_index":349,"title":{},"name":{},"text":{"2":{},"21":{},"23":{}},"component":{}}],["broken",{"_index":3285,"title":{},"name":{},"text":{"67":{},"258":{}},"component":{}}],["broker",{"_index":1563,"title":{"49-28":{}},"name":{},"text":{"14":{},"47":{},"49":{},"205":{},"271":{}},"component":{}}],["brought",{"_index":6212,"title":{},"name":{},"text":{"216":{},"272":{}},"component":{}}],["brows",{"_index":670,"title":{},"name":{},"text":{"4":{},"30":{},"57":{},"67":{},"76":{},"129":{}},"component":{}}],["browser",{"_index":1459,"title":{},"name":{},"text":{"9":{},"32":{},"67":{},"68":{},"139":{},"141":{},"191":{},"194":{},"229":{},"234":{},"264":{}},"component":{}}],["browserflow",{"_index":4465,"title":{},"name":{},"text":{"115":{},"117":{}},"component":{}}],["browser—​for",{"_index":6285,"title":{},"name":{},"text":{"229":{}},"component":{}}],["browser’",{"_index":1412,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bsd",{"_index":2323,"title":{},"name":{},"text":{"49":{}},"component":{}}],["bu",{"_index":2140,"title":{},"name":{},"text":{"46":{}},"component":{}}],["bucket",{"_index":694,"title":{"23-5":{},"206-3":{},"206-4":{},"206-5":{}},"name":{},"text":{"4":{},"21":{},"23":{},"30":{},"72":{},"73":{},"203":{},"206":{},"207":{},"208":{}},"component":{}}],["bucket/aw",{"_index":3488,"title":{},"name":{},"text":{"73":{}},"component":{}}],["bucketnam",{"_index":1762,"title":{},"name":{},"text":{"21":{}},"component":{}}],["buffer",{"_index":1230,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["bug",{"_index":371,"title":{},"name":{},"text":{"2":{}},"component":{}}],["build",{"_index":725,"title":{"33-4":{},"42-4":{},"43-4":{},"59-3":{},"59-4":{}},"name":{},"text":{"4":{},"15":{},"16":{},"17":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"41":{},"42":{},"43":{},"44":{},"49":{},"57":{},"58":{},"59":{},"62":{},"66":{},"67":{},"73":{},"75":{},"81":{},"101":{},"104":{},"105":{},"115":{},"117":{},"118":{},"119":{},"122":{},"128":{},"129":{},"131":{},"132":{},"138":{},"139":{},"141":{},"142":{},"164":{},"167":{},"177":{},"242":{},"244":{},"270":{}},"component":{}}],["buildconfig",{"_index":4617,"title":{},"name":{},"text":{"128":{}},"component":{}}],["builder",{"_index":2640,"title":{},"name":{},"text":{"52":{},"103":{},"105":{},"124":{},"163":{},"223":{},"224":{},"225":{},"230":{},"234":{},"262":{},"263":{},"264":{},"265":{}},"component":{}}],["built",{"_index":264,"title":{"205-3":{}},"name":{},"text":{"2":{},"23":{},"45":{},"48":{},"52":{},"81":{},"99":{},"115":{},"168":{},"195":{},"209":{},"216":{},"218":{},"234":{},"244":{},"262":{},"264":{},"269":{},"271":{}},"component":{}}],["bulk",{"_index":279,"title":{"227-1":{},"227-2":{}},"name":{},"text":{"2":{},"167":{},"227":{}},"component":{}}],["bulkload",{"_index":4031,"title":{"167-5":{}},"name":{},"text":{"82":{},"83":{},"167":{}},"component":{}}],["bulkload=\"tru",{"_index":5541,"title":{},"name":{},"text":{"167":{}},"component":{}}],["bureau",{"_index":5743,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["busi",{"_index":175,"title":{"51":{},"53":{},"60":{},"100":{},"102":{},"103":{},"106":{},"125":{},"139":{},"140":{},"141":{},"154":{},"155":{},"157":{},"159":{},"160":{},"205":{},"220":{},"222":{},"233":{},"234":{},"235":{},"236":{},"238":{},"240":{},"241":{},"262":{},"263":{},"264":{},"266":{},"268":{},"269":{},"270":{},"12-2":{},"32-9":{},"44-3":{},"44-4":{},"49-34":{},"52-2":{},"52-14":{},"58-5":{},"58-7":{},"58-9":{},"58-12":{},"58-15":{},"58-18":{},"59-8":{},"60-4":{},"60-6":{},"60-7":{},"60-9":{},"60-10":{},"60-11":{},"60-16":{},"66-10":{},"66-11":{},"66-12":{},"66-13":{},"66-15":{},"100-2":{},"100-6":{},"103-1":{},"103-5":{},"104-4":{},"105-3":{},"105-5":{},"125-5":{},"125-6":{},"125-7":{},"125-8":{},"131-4":{},"131-5":{},"131-6":{},"138-10":{},"139-4":{},"139-5":{},"139-6":{},"139-10":{},"139-12":{},"139-18":{},"139-19":{},"140-4":{},"140-5":{},"140-6":{},"140-9":{},"140-13":{},"140-18":{},"140-19":{},"140-20":{},"140-24":{},"140-25":{},"141-4":{},"141-5":{},"141-6":{},"141-16":{},"141-24":{},"141-25":{},"151-2":{},"151-3":{},"151-4":{},"151-5":{},"154-2":{},"154-3":{},"154-10":{},"155-3":{},"155-5":{},"155-6":{},"155-7":{},"158-2":{},"159-1":{},"159-6":{},"159-7":{},"159-11":{},"160-2":{},"160-3":{},"160-4":{},"160-5":{},"160-6":{},"160-7":{},"160-8":{},"161-2":{},"161-3":{},"162-5":{},"165-3":{},"181-1":{},"181-3":{},"183-3":{},"195-28":{},"202-8":{},"202-9":{},"202-11":{},"205-10":{},"205-11":{},"205-12":{},"205-13":{},"205-14":{},"205-15":{},"205-17":{},"213-5":{},"216-3":{},"216-17":{},"217-4":{},"237-3":{},"237-5":{},"237-6":{},"237-7":{},"237-8":{},"237-10":{},"237-11":{},"237-12":{},"253-13":{},"255-18":{},"271-14":{}},"name":{"160":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"10":{},"12":{},"13":{},"30":{},"31":{},"32":{},"44":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"61":{},"65":{},"66":{},"68":{},"69":{},"70":{},"78":{},"99":{},"100":{},"103":{},"104":{},"105":{},"106":{},"107":{},"117":{},"118":{},"123":{},"124":{},"125":{},"131":{},"132":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"143":{},"145":{},"148":{},"149":{},"150":{},"151":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"177":{},"179":{},"181":{},"183":{},"186":{},"193":{},"195":{},"198":{},"201":{},"202":{},"205":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"224":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"245":{},"250":{},"253":{},"255":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["business_process_id",{"_index":6157,"title":{},"name":{},"text":{"209":{}},"component":{}}],["business_process_nam",{"_index":6158,"title":{},"name":{},"text":{"209":{}},"component":{}}],["businessact",{"_index":5790,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["businessactivityinstanceid",{"_index":5792,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["businesskey",{"_index":4679,"title":{},"name":{},"text":{"134":{},"135":{},"136":{},"205":{}},"component":{}}],["businesskeyexpress",{"_index":5342,"title":{},"name":{},"text":{"160":{}},"component":{}}],["businessprocess",{"_index":5780,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["businessprocessdefinitionid",{"_index":5781,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["businessprocessetaginterceptor",{"_index":6656,"title":{},"name":{},"text":{"268":{}},"component":{}}],["businessprocessinstanceid",{"_index":5787,"title":{},"name":{},"text":{"183":{},"186":{},"271":{}},"component":{}}],["bussi",{"_index":4221,"title":{},"name":{},"text":{"99":{}},"component":{}}],["button",{"_index":807,"title":{"223":{},"100-2":{},"100-3":{},"100-4":{},"100-5":{}},"name":{"223":{}},"text":{"4":{},"8":{},"10":{},"16":{},"18":{},"25":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{},"42":{},"43":{},"52":{},"57":{},"68":{},"70":{},"75":{},"76":{},"100":{},"103":{},"104":{},"111":{},"113":{},"117":{},"118":{},"119":{},"120":{},"128":{},"139":{},"140":{},"141":{},"142":{},"148":{},"149":{},"150":{},"158":{},"160":{},"173":{},"177":{},"182":{},"183":{},"186":{},"212":{},"214":{},"221":{},"222":{},"223":{},"234":{},"236":{},"244":{},"268":{}},"component":{}}],["by=/etc/apt/keyrings/docker.gpg",{"_index":3652,"title":{},"name":{},"text":{"73":{}},"component":{}}],["byhead",{"_index":2682,"title":{},"name":{},"text":{"55":{}},"component":{}}],["byip",{"_index":2684,"title":{},"name":{},"text":{"55":{}},"component":{}}],["bypass",{"_index":3319,"title":{},"name":{},"text":{"67":{},"177":{}},"component":{}}],["bysi",{"_index":6226,"title":{},"name":{},"text":{"216":{}},"component":{}}],["byte",{"_index":6130,"title":{},"name":{},"text":{"206":{},"269":{}},"component":{}}],["b’",{"_index":830,"title":{},"name":{},"text":{"4":{}},"component":{}}],["c",{"_index":2281,"title":{},"name":{},"text":{"49":{},"73":{},"216":{}},"component":{}}],["c2cebd508f24",{"_index":4708,"title":{},"name":{},"text":{"135":{}},"component":{}}],["c2cebd508f25",{"_index":4716,"title":{},"name":{},"text":{"135":{}},"component":{}}],["c3007991c811",{"_index":5629,"title":{},"name":{},"text":{"167":{}},"component":{}}],["c8",{"_index":5984,"title":{},"name":{},"text":{"196":{}},"component":{}}],["c860e2e2f8db",{"_index":5446,"title":{},"name":{},"text":{"162":{}},"component":{}}],["c8][s790218861205563098",{"_index":5967,"title":{},"name":{},"text":{"196":{}},"component":{}}],["c8b9695d6",{"_index":3174,"title":{},"name":{},"text":{"63":{}},"component":{}}],["ca",{"_index":1788,"title":{},"name":{},"text":{"21":{},"73":{},"76":{},"78":{},"188":{},"192":{},"248":{}},"component":{}}],["cabinet",{"_index":1470,"title":{},"name":{},"text":{"9":{},"12":{},"99":{},"115":{},"116":{},"173":{},"195":{},"205":{},"255":{}},"component":{}}],["cacertif",{"_index":5824,"title":{},"name":{},"text":{"188":{},"192":{},"248":{}},"component":{}}],["cacertificates.p7b",{"_index":1975,"title":{},"name":{},"text":{"30":{},"73":{},"256":{}},"component":{}}],["cach",{"_index":2335,"title":{},"name":{},"text":{"49":{},"122":{},"196":{},"272":{}},"component":{}}],["cade",{"_index":6667,"title":{},"name":{},"text":{"269":{}},"component":{}}],["cades/asic/xd",{"_index":6711,"title":{},"name":{},"text":{"269":{}},"component":{}}],["calcul",{"_index":1967,"title":{"50":{},"50-2":{}},"name":{},"text":{"30":{},"44":{},"50":{},"55":{},"78":{},"164":{},"229":{},"267":{}},"component":{}}],["call",{"_index":1426,"title":{"179":{},"216":{},"52-8":{},"66-15":{},"107-2":{},"181-3":{},"216-2":{},"216-3":{},"216-8":{},"216-16":{}},"name":{"216":{}},"text":{"9":{},"15":{},"30":{},"49":{},"52":{},"58":{},"59":{},"66":{},"84":{},"107":{},"108":{},"119":{},"122":{},"123":{},"124":{},"129":{},"138":{},"140":{},"159":{},"162":{},"166":{},"167":{},"168":{},"180":{},"181":{},"183":{},"186":{},"195":{},"196":{},"198":{},"201":{},"202":{},"205":{},"211":{},"216":{},"217":{},"222":{},"229":{},"231":{},"257":{}},"component":{}}],["call/trembita/overview.adoc",{"_index":5864,"title":{},"name":{},"text":{"195":{}},"component":{}}],["callactivity.json",{"_index":6215,"title":{},"name":{},"text":{"216":{}},"component":{}}],["callactivityoutput",{"_index":6220,"title":{},"name":{},"text":{"216":{}},"component":{}}],["camel",{"_index":6780,"title":{},"name":{},"text":{"271":{}},"component":{}}],["camunda",{"_index":1366,"title":{"60":{},"60-4":{},"60-5":{}},"name":{"125":{}},"text":{"6":{},"47":{},"49":{},"51":{},"52":{},"60":{},"65":{},"66":{},"103":{},"104":{},"118":{},"125":{},"139":{},"140":{},"141":{},"154":{},"155":{},"158":{},"160":{},"161":{},"162":{},"183":{},"186":{},"201":{},"205":{},"210":{},"213":{},"214":{},"216":{},"217":{},"221":{},"222":{},"258":{},"264":{},"265":{},"270":{}},"component":{}}],["camunda.bpm.databas",{"_index":6113,"title":{},"name":{},"text":{"205":{}},"component":{}}],["camunda.bpm.histori",{"_index":6074,"title":{},"name":{},"text":{"205":{}},"component":{}}],["can't",{"_index":5879,"title":{},"name":{},"text":{"195":{}},"component":{}}],["cancel",{"_index":1409,"title":{"259":{},"52-8":{},"52-9":{},"100-5":{},"100-9":{},"259-2":{},"259-3":{},"259-4":{}},"name":{"259":{}},"text":{"8":{},"33":{},"52":{},"59":{},"75":{},"84":{},"100":{},"122":{},"177":{},"213":{},"223":{},"226":{},"237":{},"244":{},"259":{},"260":{},"261":{},"262":{}},"component":{}}],["canceledlicens",{"_index":2623,"title":{},"name":{},"text":{"52":{}},"component":{}}],["canceledlicense.prop('licensingstatu",{"_index":2625,"title":{},"name":{},"text":{"52":{}},"component":{}}],["cancellicenseact",{"_index":2622,"title":{},"name":{},"text":{"52":{}},"component":{}}],["candid",{"_index":305,"title":{"177":{},"177-6":{},"242-8":{}},"name":{},"text":{"2":{},"14":{},"52":{},"128":{},"139":{},"140":{},"141":{},"154":{},"155":{},"167":{},"173":{},"175":{},"176":{},"177":{},"178":{},"223":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"246":{},"262":{},"265":{},"267":{},"268":{},"270":{}},"component":{}}],["canon",{"_index":3889,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{}},"component":{}}],["canva",{"_index":4903,"title":{},"name":{},"text":{"139":{},"141":{},"160":{},"161":{},"162":{},"210":{},"213":{},"214":{},"216":{},"217":{},"218":{},"223":{},"224":{},"225":{},"227":{},"230":{},"232":{},"261":{}},"component":{}}],["can’t",{"_index":3096,"title":{},"name":{},"text":{"60":{},"188":{},"210":{},"213":{},"216":{},"218":{},"247":{}},"component":{}}],["capabl",{"_index":1244,"title":{"44-5":{},"44-6":{},"244-3":{},"262-2":{}},"name":{},"text":{"6":{},"12":{},"23":{},"44":{},"49":{},"52":{},"55":{},"58":{},"67":{},"69":{},"70":{},"81":{},"99":{},"123":{},"143":{},"145":{},"150":{},"151":{},"152":{},"155":{},"195":{},"204":{},"234":{},"244":{},"255":{},"262":{},"264":{},"265":{}},"component":{}}],["capac",{"_index":876,"title":{"188-3":{},"193-2":{},"248-1":{},"251-1":{}},"name":{},"text":{"4":{},"22":{},"23":{},"50":{}},"component":{}}],["captur",{"_index":6133,"title":{},"name":{},"text":{"208":{}},"component":{}}],["card",{"_index":448,"title":{},"name":{},"text":{"2":{},"119":{},"120":{},"213":{},"260":{}},"component":{}}],["cardnotvalid",{"_index":6596,"title":{},"name":{},"text":{"260":{}},"component":{}}],["care",{"_index":4434,"title":{},"name":{},"text":{"108":{},"155":{},"238":{}},"component":{}}],["carefulli",{"_index":2091,"title":{},"name":{},"text":{"41":{},"99":{}},"component":{}}],["carri",{"_index":1344,"title":{},"name":{},"text":{"6":{},"26":{},"45":{},"74":{},"108":{},"216":{},"271":{},"272":{}},"component":{}}],["carrier",{"_index":220,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cart",{"_index":6216,"title":{},"name":{},"text":{"216":{}},"component":{}}],["cartograph",{"_index":2156,"title":{},"name":{},"text":{"46":{}},"component":{}}],["cas.json",{"_index":1978,"title":{},"name":{},"text":{"30":{},"73":{},"256":{}},"component":{}}],["cascad",{"_index":1772,"title":{},"name":{},"text":{"21":{}},"component":{}}],["case",{"_index":82,"title":{"10":{},"58-2":{},"131-2":{},"131-3":{}},"name":{},"text":{"1":{},"4":{},"6":{},"12":{},"21":{},"25":{},"28":{},"30":{},"34":{},"51":{},"52":{},"55":{},"57":{},"58":{},"60":{},"67":{},"69":{},"70":{},"100":{},"103":{},"108":{},"113":{},"115":{},"119":{},"125":{},"131":{},"138":{},"141":{},"152":{},"154":{},"155":{},"159":{},"160":{},"162":{},"165":{},"166":{},"167":{},"168":{},"175":{},"177":{},"183":{},"186":{},"189":{},"193":{},"194":{},"207":{},"209":{},"210":{},"211":{},"213":{},"216":{},"217":{},"230":{},"231":{},"237":{},"244":{},"245":{},"250":{},"254":{},"255":{},"257":{},"258":{},"260":{},"261":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["cat",{"_index":3672,"title":{},"name":{},"text":{"73":{},"166":{}},"component":{}}],["cat.cod",{"_index":5510,"title":{},"name":{},"text":{"166":{}},"component":{}}],["cat.nam",{"_index":5508,"title":{},"name":{},"text":{"166":{}},"component":{}}],["catalog",{"_index":2106,"title":{},"name":{},"text":{"43":{},"55":{},"57":{},"58":{},"86":{},"103":{},"104":{},"139":{},"140":{},"141":{},"154":{},"158":{},"160":{},"161":{},"162":{},"183":{},"186":{},"209":{},"216":{},"217":{},"221":{},"222":{},"264":{}},"component":{}}],["catalogu",{"_index":5871,"title":{},"name":{},"text":{"195":{}},"component":{}}],["catch",{"_index":6161,"title":{"210-3":{},"212-5":{},"213-4":{}},"name":{},"text":{"210":{},"212":{},"213":{},"214":{},"218":{},"259":{},"260":{}},"component":{}}],["categor",{"_index":6371,"title":{"237":{}},"name":{},"text":{"237":{},"238":{}},"component":{}}],["categori",{"_index":1348,"title":{},"name":{},"text":{"6":{},"14":{},"44":{},"46":{},"50":{},"107":{},"125":{},"166":{},"167":{},"168":{},"177":{},"193":{},"195":{},"251":{},"253":{},"255":{}},"component":{}}],["caught",{"_index":6592,"title":{},"name":{},"text":{"259":{},"260":{}},"component":{}}],["caus",{"_index":1877,"title":{},"name":{},"text":{"25":{},"55":{},"60":{},"73":{},"113":{},"129":{},"131":{},"218":{},"254":{},"258":{},"270":{}},"component":{}}],["caution",{"_index":6382,"title":{},"name":{},"text":{"238":{}},"component":{}}],["cc",{"_index":365,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cc0",{"_index":2330,"title":{},"name":{},"text":{"49":{}},"component":{}}],["cd",{"_index":770,"title":{},"name":{},"text":{"4":{},"57":{},"73":{}},"component":{}}],["ce",{"_index":3660,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ce=$version_str",{"_index":3659,"title":{},"name":{},"text":{"73":{}},"component":{}}],["center",{"_index":216,"title":{"46-4":{},"195-11":{}},"name":{},"text":{"2":{},"6":{},"9":{},"21":{},"30":{},"46":{},"59":{},"60":{},"67":{},"73":{},"78":{},"99":{},"195":{},"199":{}},"component":{}}],["centr",{"_index":6498,"title":{},"name":{},"text":{"256":{}},"component":{}}],["central",{"_index":323,"title":{"15":{},"18":{},"88":{},"18-1":{},"18-3":{},"48-6":{}},"name":{},"text":{"2":{},"4":{},"15":{},"18":{},"20":{},"21":{},"31":{},"44":{},"48":{},"50":{},"55":{},"56":{},"57":{},"65":{},"70":{},"73":{},"76":{},"85":{},"86":{},"87":{},"88":{},"99":{},"100":{},"123":{},"138":{},"188":{},"191":{},"194":{},"195":{},"248":{},"253":{},"255":{},"270":{}},"component":{}}],["centralvaulturl",{"_index":856,"title":{},"name":{},"text":{"4":{}},"component":{}}],["cep",{"_index":2633,"title":{},"name":{},"text":{"52":{}},"component":{}}],["ceph",{"_index":861,"title":{"22":{},"23":{},"72":{},"23-2":{},"23-4":{},"23-5":{},"72-1":{},"206-3":{},"206-4":{},"206-5":{}},"name":{"22":{},"203":{},"206":{}},"text":{"4":{},"14":{},"22":{},"23":{},"47":{},"49":{},"50":{},"58":{},"72":{},"105":{},"119":{},"155":{},"161":{},"203":{},"206":{},"207":{},"208":{}},"component":{}}],["ceph:datafactori",{"_index":6135,"title":{},"name":{},"text":{"208":{}},"component":{}}],["ceph:fil",{"_index":6134,"title":{},"name":{},"text":{"208":{}},"component":{}}],["ceph:respons",{"_index":6136,"title":{},"name":{},"text":{"208":{}},"component":{}}],["ceph:us",{"_index":6064,"title":{},"name":{},"text":{"204":{}},"component":{}}],["ceph_scal",{"_index":1813,"title":{},"name":{"23":{}},"text":{},"component":{}}],["cephblockpool",{"_index":1841,"title":{},"name":{},"text":{"23":{}},"component":{}}],["cephdata",{"_index":5002,"title":{},"name":{},"text":{"141":{},"161":{}},"component":{}}],["cephdata['birthday",{"_index":5388,"title":{},"name":{},"text":{"161":{}},"component":{}}],["cephdata['firstnam",{"_index":5386,"title":{},"name":{},"text":{"161":{}},"component":{}}],["cephdata['lastnam",{"_index":5384,"title":{},"name":{},"text":{"161":{}},"component":{}}],["cephdata['secondnam",{"_index":5382,"title":{},"name":{},"text":{"161":{}},"component":{}}],["cephf",{"_index":1838,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ceph’",{"_index":1812,"title":{"23-6":{}},"name":{},"text":{"23":{}},"component":{}}],["cert",{"_index":2088,"title":{},"name":{"256":{}},"text":{"40":{},"42":{},"73":{}},"component":{}}],["cert=${certdir}/fullchain.pem",{"_index":3806,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cert_hom",{"_index":3781,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cert_home=./certif",{"_index":3779,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cert_home}/acme.sh/acme.sh",{"_index":3794,"title":{},"name":{},"text":{"73":{}},"component":{}}],["certain",{"_index":286,"title":{},"name":{},"text":{"2":{},"12":{},"21":{},"32":{},"55":{},"73":{},"84":{},"99":{},"105":{},"111":{},"125":{},"128":{},"140":{},"154":{},"161":{},"167":{},"211":{},"212":{},"213":{},"214":{},"216":{},"218":{},"230":{}},"component":{}}],["certbot",{"_index":2073,"title":{},"name":{},"text":{"40":{}},"component":{}}],["certdir",{"_index":3800,"title":{},"name":{},"text":{"73":{}},"component":{}}],["certdir=$cert_home/certif",{"_index":3799,"title":{},"name":{},"text":{"73":{}},"component":{}}],["certdir}/ca.c",{"_index":3805,"title":{},"name":{},"text":{"73":{}},"component":{}}],["certdir}/cert.pem",{"_index":3801,"title":{},"name":{},"text":{"73":{}},"component":{}}],["certdir}/fullchain.pem",{"_index":3804,"title":{},"name":{},"text":{"73":{}},"component":{}}],["certdir}/key.pem",{"_index":3802,"title":{},"name":{},"text":{"73":{}},"component":{}}],["certif",{"_index":215,"title":{"40":{},"78":{},"256":{},"40-2":{},"46-4":{},"73-27":{},"73-49":{},"75-6":{}},"name":{"40":{}},"text":{"2":{},"9":{},"30":{},"37":{},"40":{},"41":{},"46":{},"65":{},"67":{},"73":{},"75":{},"76":{},"78":{},"81":{},"86":{},"99":{},"108":{},"135":{},"138":{},"165":{},"167":{},"188":{},"197":{},"248":{},"255":{},"256":{},"269":{}},"component":{}}],["certifi",{"_index":4421,"title":{},"name":{},"text":{"108":{},"135":{},"159":{}},"component":{}}],["certificatepath",{"_index":3899,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["certonli",{"_index":2076,"title":{},"name":{},"text":{"40":{}},"component":{}}],["chain",{"_index":2087,"title":{},"name":{},"text":{"40":{},"46":{},"67":{},"99":{}},"component":{}}],["challeng",{"_index":6625,"title":{},"name":{},"text":{"265":{}},"component":{}}],["chang",{"_index":252,"title":{"19":{},"24":{},"56":{},"131":{},"176":{},"268":{},"23-6":{},"31-3":{},"32-5":{},"32-18":{},"33-5":{},"42-3":{},"43-3":{},"56-2":{},"58-14":{},"75-5":{},"118-2":{},"142-9":{},"161-13":{},"167-8":{},"177-2":{},"177-3":{},"177-4":{},"177-5":{},"177-6":{},"195-13":{},"195-14":{},"195-15":{},"195-16":{},"195-23":{},"195-24":{},"207-5":{},"217-9":{},"267-11":{},"268-9":{}},"name":{"24":{},"56":{},"169":{},"175":{},"177":{}},"text":{"2":{},"4":{},"6":{},"9":{},"13":{},"15":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"39":{},"42":{},"43":{},"44":{},"45":{},"49":{},"52":{},"55":{},"56":{},"57":{},"58":{},"60":{},"61":{},"65":{},"66":{},"67":{},"68":{},"73":{},"75":{},"76":{},"81":{},"82":{},"83":{},"84":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"112":{},"115":{},"117":{},"118":{},"120":{},"122":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"153":{},"159":{},"160":{},"161":{},"162":{},"165":{},"167":{},"168":{},"170":{},"173":{},"175":{},"176":{},"177":{},"178":{},"179":{},"184":{},"188":{},"190":{},"191":{},"192":{},"193":{},"195":{},"202":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"212":{},"213":{},"214":{},"217":{},"218":{},"223":{},"226":{},"227":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"246":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["change_nam",{"_index":4040,"title":{},"name":{},"text":{"82":{},"83":{},"84":{},"209":{}},"component":{}}],["change_typ",{"_index":4039,"title":{},"name":{},"text":{"82":{},"84":{},"209":{}},"component":{}}],["changed/cr",{"_index":5816,"title":{},"name":{},"text":{"188":{},"189":{},"192":{},"193":{},"201":{},"249":{},"250":{},"257":{},"267":{}},"component":{}}],["changelog",{"_index":5647,"title":{"168-5":{}},"name":{},"text":{"168":{},"242":{},"244":{}},"component":{}}],["changelog.xml",{"_index":5665,"title":{},"name":{},"text":{"168":{}},"component":{}}],["changelogfile=changelog.xml",{"_index":5656,"title":{},"name":{},"text":{"168":{}},"component":{}}],["changeset",{"_index":2994,"title":{"168-5":{},"168-6":{}},"name":{},"text":{"59":{},"82":{},"138":{},"161":{},"165":{},"167":{},"168":{},"244":{}},"component":{}}],["channel",{"_index":2172,"title":{"144-1":{},"144-2":{}},"name":{"184":{}},"text":{"47":{},"66":{},"75":{},"76":{},"133":{},"144":{},"146":{},"182":{},"183":{},"184":{},"186":{},"188":{},"192":{},"193":{},"195":{},"197":{},"202":{},"247":{},"249":{},"250":{}},"component":{}}],["char(1",{"_index":4066,"title":{},"name":{},"text":{"83":{}},"component":{}}],["charact",{"_index":583,"title":{},"name":{},"text":{"2":{},"9":{},"15":{},"16":{},"25":{},"28":{},"29":{},"30":{},"33":{},"66":{},"75":{},"115":{},"118":{},"119":{},"120":{},"122":{},"138":{},"142":{},"165":{},"173":{},"175":{},"226":{},"229":{},"234":{},"237":{},"239":{},"242":{},"253":{},"255":{},"262":{}},"component":{}}],["character",{"_index":103,"title":{},"name":{},"text":{"1":{},"127":{}},"component":{}}],["characterstringtoolong",{"_index":1881,"title":{},"name":{},"text":{"25":{}},"component":{}}],["characters—​for",{"_index":4433,"title":{},"name":{},"text":{"108":{}},"component":{}}],["charg",{"_index":6599,"title":{},"name":{},"text":{"260":{}},"component":{}}],["chart",{"_index":2703,"title":{"127-6":{}},"name":{},"text":{"56":{},"60":{},"67":{},"115":{},"127":{},"128":{},"193":{},"195":{},"204":{},"251":{},"255":{},"268":{},"272":{}},"component":{}}],["chart.git",{"_index":2712,"title":{},"name":{},"text":{"56":{}},"component":{}}],["chart/deploy",{"_index":2717,"title":{},"name":{},"text":{"56":{}},"component":{}}],["chat",{"_index":6627,"title":{},"name":{},"text":{"265":{}},"component":{}}],["check",{"_index":604,"title":{"269":{},"270":{},"15-3":{},"16-3":{},"25-4":{},"25-6":{},"119-5":{},"131-2":{},"131-3":{},"131-4":{},"131-5":{},"131-6":{},"159-4":{},"262-7":{}},"name":{},"text":{"4":{},"6":{},"15":{},"16":{},"17":{},"18":{},"19":{},"23":{},"25":{},"29":{},"30":{},"32":{},"33":{},"39":{},"46":{},"47":{},"55":{},"56":{},"57":{},"59":{},"60":{},"62":{},"66":{},"67":{},"72":{},"73":{},"75":{},"78":{},"81":{},"84":{},"86":{},"100":{},"104":{},"105":{},"108":{},"115":{},"118":{},"119":{},"120":{},"122":{},"127":{},"131":{},"135":{},"136":{},"142":{},"159":{},"168":{},"175":{},"179":{},"195":{},"196":{},"204":{},"206":{},"208":{},"210":{},"216":{},"223":{},"226":{},"227":{},"229":{},"230":{},"234":{},"238":{},"242":{},"244":{},"245":{},"254":{},"262":{},"268":{},"269":{},"272":{}},"component":{}}],["check_column",{"_index":4153,"title":{},"name":{},"text":{"84":{},"209":{}},"component":{}}],["check_tabl",{"_index":4154,"title":{},"name":{},"text":{"84":{},"209":{}},"component":{}}],["checkbox",{"_index":2603,"title":{},"name":{},"text":{"52":{},"103":{},"128":{},"139":{},"140":{},"141":{},"163":{},"182":{},"223":{},"224":{},"227":{},"231":{},"232":{},"242":{}},"component":{}}],["checklist",{"_index":4398,"title":{"108-3":{}},"name":{},"text":{"108":{},"141":{}},"component":{}}],["checkmarx",{"_index":1320,"title":{},"name":{},"text":{"6":{}},"component":{}}],["checkpoint",{"_index":5006,"title":{},"name":{},"text":{"141":{}},"component":{}}],["checksum",{"_index":4305,"title":{"168-8":{}},"name":{},"text":{"105":{},"119":{},"168":{},"207":{},"271":{}},"component":{}}],["child",{"_index":4745,"title":{},"name":{},"text":{"135":{},"136":{},"216":{},"217":{},"218":{},"257":{},"259":{},"261":{}},"component":{}}],["child_life_tim",{"_index":6577,"title":{},"name":{},"text":{"258":{}},"component":{}}],["child_max_connect",{"_index":6578,"title":{},"name":{},"text":{"258":{}},"component":{}}],["childdatainput",{"_index":6256,"title":{},"name":{},"text":{"222":{}},"component":{}}],["childelement(\"http://nais.gov.ua/api/sevdeir/edr",{"_index":5467,"title":{},"name":{},"text":{"162":{}},"component":{}}],["childelement(\"subjectinfo",{"_index":5470,"title":{},"name":{},"text":{"162":{}},"component":{}}],["childelement(\"subjectlist",{"_index":5469,"title":{},"name":{},"text":{"162":{}},"component":{}}],["childelement(propnam",{"_index":5471,"title":{},"name":{},"text":{"162":{}},"component":{}}],["children",{"_index":4743,"title":{},"name":{},"text":{"135":{}},"component":{}}],["child’",{"_index":4684,"title":{},"name":{},"text":{"135":{},"136":{}},"component":{}}],["chmod",{"_index":771,"title":{},"name":{},"text":{"4":{},"73":{}},"component":{}}],["choos",{"_index":1135,"title":{},"name":{},"text":{"6":{},"9":{},"13":{},"30":{},"34":{},"40":{},"52":{},"58":{},"63":{},"66":{},"68":{},"108":{},"119":{},"120":{},"140":{},"155":{},"159":{},"165":{},"224":{},"244":{},"255":{},"270":{}},"component":{}}],["chosen",{"_index":1504,"title":{},"name":{},"text":{"10":{},"101":{},"246":{}},"component":{}}],["chrome",{"_index":4901,"title":{},"name":{},"text":{"139":{},"141":{},"229":{}},"component":{}}],["chronolog",{"_index":6434,"title":{},"name":{},"text":{"244":{}},"component":{}}],["ci",{"_index":886,"title":{},"name":{},"text":{"4":{},"5":{},"15":{},"17":{},"28":{},"30":{},"31":{},"33":{},"42":{},"43":{},"67":{},"99":{},"115":{},"118":{},"122":{},"129":{},"166":{}},"component":{}}],["ci.city_id",{"_index":5521,"title":{},"name":{},"text":{"166":{}},"component":{}}],["ci.katottg",{"_index":5523,"title":{},"name":{},"text":{"166":{}},"component":{}}],["ci.nam",{"_index":5522,"title":{},"name":{},"text":{"166":{}},"component":{}}],["ci/cd",{"_index":1291,"title":{},"name":{},"text":{"6":{},"14":{},"31":{},"49":{},"65":{},"66":{},"67":{},"132":{},"191":{}},"component":{}}],["ci[2",{"_index":1993,"title":{},"name":{},"text":{"31":{}},"component":{}}],["cicd",{"_index":2015,"title":{},"name":{},"text":{"32":{},"167":{},"196":{},"201":{}},"component":{}}],["cicd.apps.cicd2.mdtu",{"_index":6429,"title":{},"name":{},"text":{"244":{}},"component":{}}],["cicd:32114/mdtu",{"_index":2708,"title":{},"name":{},"text":{"56":{}},"component":{}}],["cidr",{"_index":651,"title":{"29-3":{},"29-4":{}},"name":{"29":{}},"text":{"4":{},"29":{},"30":{},"37":{},"65":{},"73":{},"193":{},"251":{},"252":{}},"component":{}}],["cidr[2",{"_index":1931,"title":{},"name":{},"text":{"29":{}},"component":{}}],["cidr_block",{"_index":3614,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cipher",{"_index":6006,"title":{},"name":{},"text":{"197":{}},"component":{}}],["circl",{"_index":3090,"title":{},"name":{},"text":{"60":{},"139":{},"140":{},"141":{},"154":{},"160":{}},"component":{}}],["circul",{"_index":6364,"title":{},"name":{},"text":{"234":{}},"component":{}}],["circumst",{"_index":4230,"title":{},"name":{},"text":{"99":{}},"component":{}}],["citadel",{"_index":6002,"title":{},"name":{},"text":{"197":{}},"component":{}}],["citi",{"_index":2885,"title":{},"name":{},"text":{"58":{},"166":{},"272":{}},"component":{}}],["citizen",{"_index":201,"title":{"68":{},"69":{},"143":{},"187":{},"32-14":{},"76-5":{},"155-2":{},"195-5":{}},"name":{"9":{},"68":{},"69":{},"143":{}},"text":{"1":{},"2":{},"8":{},"9":{},"12":{},"13":{},"29":{},"32":{},"44":{},"46":{},"47":{},"50":{},"55":{},"56":{},"57":{},"60":{},"61":{},"68":{},"69":{},"75":{},"76":{},"101":{},"113":{},"116":{},"117":{},"132":{},"133":{},"135":{},"139":{},"143":{},"144":{},"145":{},"150":{},"152":{},"154":{},"155":{},"160":{},"173":{},"183":{},"184":{},"186":{},"187":{},"188":{},"189":{},"193":{},"195":{},"196":{},"202":{},"216":{},"234":{},"237":{},"248":{},"249":{},"251":{},"255":{},"267":{}},"component":{}}],["citizen.example.com",{"_index":3912,"title":{},"name":{},"text":{"76":{},"188":{},"248":{}},"component":{}}],["citizen.yml",{"_index":4654,"title":{},"name":{},"text":{"132":{}},"component":{}}],["citizen/us",{"_index":5152,"title":{},"name":{},"text":{"146":{}},"component":{}}],["citizen@inbucket.inbucket.svc.cluster.loc",{"_index":5798,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["citizenport",{"_index":1953,"title":{},"name":{},"text":{"29":{},"76":{},"188":{},"193":{},"248":{},"251":{}},"component":{}}],["citizens.adoc",{"_index":937,"title":{},"name":{},"text":{"4":{},"30":{}},"component":{}}],["citizen’",{"_index":5225,"title":{},"name":{},"text":{"155":{}},"component":{}}],["citu",{"_index":6519,"title":{},"name":{},"text":{"258":{}},"component":{}}],["civil",{"_index":4744,"title":{},"name":{},"text":{"135":{},"195":{}},"component":{}}],["claim",{"_index":1801,"title":{},"name":{},"text":{"22":{},"52":{},"55":{},"122":{}},"component":{}}],["clamav",{"_index":2414,"title":{},"name":{},"text":{"49":{}},"component":{}}],["clarifi",{"_index":1248,"title":{},"name":{},"text":{"6":{}},"component":{}}],["class",{"_index":1134,"title":{},"name":{},"text":{"6":{},"47":{},"52":{},"84":{},"111":{},"118":{},"135":{},"136":{},"195":{},"262":{},"271":{}},"component":{}}],["classif",{"_index":2110,"title":{"90":{}},"name":{"90":{}},"text":{"44":{}},"component":{}}],["classifi",{"_index":522,"title":{},"name":{},"text":{"2":{},"83":{},"138":{}},"component":{}}],["classless",{"_index":1961,"title":{},"name":{},"text":{"29":{}},"component":{}}],["classpath=postgresql",{"_index":5653,"title":{},"name":{},"text":{"168":{}},"component":{}}],["claus",{"_index":2322,"title":{},"name":{},"text":{"49":{}},"component":{}}],["clean",{"_index":1021,"title":{"6-9":{}},"name":{},"text":{"6":{},"21":{},"47":{},"118":{},"128":{}},"component":{}}],["cleanli",{"_index":1334,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cleanup",{"_index":819,"title":{"128":{},"5-2":{},"128-2":{},"128-3":{},"205-16":{}},"name":{"128":{}},"text":{"4":{},"5":{},"47":{},"128":{},"130":{},"205":{},"242":{}},"component":{}}],["cleanupstag",{"_index":990,"title":{},"name":{},"text":{"5":{}},"component":{}}],["clear",{"_index":143,"title":{},"name":{},"text":{"1":{},"6":{},"65":{},"87":{},"107":{},"113":{},"128":{},"140":{},"141":{},"154":{},"226":{},"231":{},"232":{},"262":{},"270":{}},"component":{}}],["clearli",{"_index":1179,"title":{},"name":{},"text":{"6":{},"59":{},"155":{}},"component":{}}],["cli",{"_index":773,"title":{},"name":{},"text":{"4":{},"22":{},"40":{},"47":{},"66":{},"72":{},"73":{},"270":{}},"component":{}}],["cli=$version_str",{"_index":3661,"title":{},"name":{},"text":{"73":{}},"component":{}}],["click",{"_index":729,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"42":{},"43":{},"57":{},"60":{},"63":{},"68":{},"75":{},"76":{},"100":{},"103":{},"104":{},"105":{},"111":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"127":{},"128":{},"129":{},"131":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"148":{},"149":{},"150":{},"152":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"165":{},"173":{},"175":{},"177":{},"179":{},"182":{},"183":{},"186":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"227":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"244":{},"245":{},"259":{},"260":{},"261":{},"262":{},"268":{}},"component":{}}],["client",{"_index":240,"title":{"49-2":{},"124-7":{}},"name":{},"text":{"2":{},"6":{},"9":{},"10":{},"25":{},"33":{},"47":{},"49":{},"55":{},"65":{},"73":{},"115":{},"119":{},"122":{},"123":{},"124":{},"144":{},"179":{},"181":{},"195":{},"204":{},"213":{},"226":{},"255":{},"260":{},"270":{},"271":{},"272":{}},"component":{}}],["client_credenti",{"_index":5689,"title":{},"name":{},"text":{"179":{}},"component":{}}],["client_id",{"_index":4469,"title":{},"name":{},"text":{"115":{},"179":{}},"component":{}}],["client_idle_limit",{"_index":6580,"title":{},"name":{},"text":{"258":{}},"component":{}}],["client_secret",{"_index":5690,"title":{},"name":{},"text":{"179":{}},"component":{}}],["clientid",{"_index":4530,"title":{},"name":{},"text":{"119":{},"272":{}},"component":{}}],["client’",{"_index":5720,"title":{},"name":{},"text":{"181":{},"213":{}},"component":{}}],["clipboard",{"_index":801,"title":{},"name":{},"text":{"4":{}},"component":{}}],["clock",{"_index":6188,"title":{},"name":{},"text":{"213":{}},"component":{}}],["clone",{"_index":888,"title":{"21-7":{}},"name":{},"text":{"4":{},"21":{},"31":{},"57":{},"73":{},"129":{}},"component":{}}],["close",{"_index":1293,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"13":{},"23":{},"40":{},"67":{},"75":{},"113":{},"164":{},"177":{},"191":{},"223":{},"230":{},"244":{},"257":{},"262":{}},"component":{}}],["closer",{"_index":350,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cloud",{"_index":99,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"14":{},"21":{},"22":{},"25":{},"26":{},"44":{},"45":{},"48":{},"49":{},"50":{},"67":{},"74":{},"80":{},"81":{},"87":{},"191":{},"194":{},"199":{},"208":{}},"component":{}}],["cloud.openshift.com",{"_index":3757,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cloud_n",{"_index":2210,"title":{},"name":{},"text":{"48":{}},"component":{}}],["cloudview",{"_index":3248,"title":{},"name":{},"text":{"67":{}},"component":{}}],["cluster",{"_index":326,"title":{"19":{},"24":{},"26":{},"40":{},"80":{},"193":{},"4-4":{},"4-5":{},"4-6":{},"21-8":{},"21-9":{},"21-10":{},"21-11":{},"32-17":{},"73-13":{},"73-25":{},"73-26":{},"73-28":{},"73-43":{},"75-4":{},"76-6":{},"80-1":{},"188-6":{},"247-1":{},"258-1":{},"258-3":{}},"name":{"15":{}},"text":{"2":{},"4":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"40":{},"41":{},"43":{},"45":{},"49":{},"56":{},"66":{},"73":{},"74":{},"75":{},"76":{},"80":{},"81":{},"86":{},"104":{},"105":{},"124":{},"138":{},"159":{},"182":{},"188":{},"192":{},"193":{},"194":{},"196":{},"201":{},"221":{},"222":{},"247":{},"248":{},"251":{},"254":{},"255":{},"258":{},"272":{}},"component":{}}],["cluster/clust",{"_index":3768,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cluster_address",{"_index":845,"title":{},"name":{},"text":{"4":{}},"component":{}}],["cluster_name=\"${clusternameshort",{"_index":3871,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cluster_name=$(oc",{"_index":3863,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cluster_node_autoscal",{"_index":3922,"title":{},"name":{"80":{}},"text":{},"component":{}}],["clusterautoscal",{"_index":3951,"title":{},"name":{},"text":{"80":{}},"component":{}}],["clusterip",{"_index":6466,"title":{},"name":{},"text":{"254":{},"272":{}},"component":{}}],["clusternameshort=\"${cluster_nam",{"_index":3867,"title":{},"name":{},"text":{"73":{}},"component":{}}],["clusternetwork",{"_index":3749,"title":{},"name":{},"text":{"73":{}},"component":{}}],["clusteroper",{"_index":3847,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cluster’",{"_index":1657,"title":{},"name":{},"text":{"19":{},"25":{},"29":{},"40":{},"73":{}},"component":{}}],["cmd",{"_index":3162,"title":{},"name":{},"text":{"63":{}},"component":{}}],["cname",{"_index":3887,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{}},"component":{}}],["cnt",{"_index":4854,"title":{},"name":{},"text":{"138":{}},"component":{}}],["coalesce(categori",{"_index":4353,"title":{},"name":{},"text":{"107":{}},"component":{}}],["coatsu",{"_index":4793,"title":{},"name":{},"text":{"138":{}},"component":{}}],["cockpit",{"_index":3066,"title":{"60":{},"60-4":{},"60-5":{}},"name":{"60":{}},"text":{"60":{},"118":{},"205":{}},"component":{}}],["code",{"_index":445,"title":{"144":{},"184":{},"244":{},"262":{},"265":{},"6-3":{},"6-5":{},"6-9":{},"6-21":{},"6-22":{},"6-23":{},"6-27":{},"6-28":{},"6-29":{},"42-3":{},"43-3":{},"73-14":{},"73-15":{},"73-16":{},"138-12":{},"138-14":{},"142-5":{},"167-42":{},"207-1":{},"244-5":{},"262-4":{},"262-5":{},"262-7":{},"262-10":{},"262-13":{}},"name":{"6":{},"245":{},"265":{}},"text":{"2":{},"4":{},"6":{},"14":{},"15":{},"16":{},"28":{},"31":{},"32":{},"33":{},"42":{},"43":{},"44":{},"45":{},"47":{},"49":{},"51":{},"52":{},"57":{},"59":{},"62":{},"65":{},"66":{},"67":{},"73":{},"81":{},"82":{},"99":{},"100":{},"105":{},"107":{},"108":{},"111":{},"115":{},"118":{},"119":{},"122":{},"126":{},"127":{},"128":{},"129":{},"131":{},"134":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"146":{},"154":{},"162":{},"165":{},"166":{},"167":{},"168":{},"177":{},"183":{},"184":{},"185":{},"186":{},"191":{},"195":{},"202":{},"204":{},"205":{},"207":{},"211":{},"218":{},"229":{},"233":{},"234":{},"236":{},"238":{},"241":{},"243":{},"244":{},"245":{},"254":{},"260":{},"262":{},"263":{},"264":{},"265":{},"269":{},"270":{},"272":{}},"component":{}}],["code=codeerrornovalid",{"_index":6170,"title":{},"name":{},"text":{"211":{}},"component":{}}],["code=java.lang.except",{"_index":6242,"title":{},"name":{},"text":{"218":{}},"component":{}}],["codebas",{"_index":786,"title":{},"name":{},"text":{"4":{},"49":{},"128":{},"191":{},"253":{}},"component":{}}],["codebase.yaml",{"_index":787,"title":{},"name":{},"text":{"4":{}},"component":{}}],["codebase_history_nam",{"_index":4625,"title":{},"name":{},"text":{"128":{}},"component":{}}],["codebase_nam",{"_index":4624,"title":{},"name":{},"text":{"128":{}},"component":{}}],["codebasehistorynam",{"_index":992,"title":{},"name":{},"text":{"5":{}},"component":{}}],["codebasenam",{"_index":989,"title":{},"name":{},"text":{"5":{}},"component":{}}],["codeerrornovalid",{"_index":6169,"title":{},"name":{},"text":{"211":{}},"component":{}}],["codifi",{"_index":4791,"title":{},"name":{},"text":{"138":{},"158":{},"166":{}},"component":{}}],["coexist",{"_index":4464,"title":{},"name":{},"text":{"115":{}},"component":{}}],["collabor",{"_index":1033,"title":{"6-15":{}},"name":{},"text":{"6":{},"28":{},"31":{}},"component":{}}],["collaps",{"_index":5151,"title":{},"name":{},"text":{"145":{}},"component":{}}],["collect",{"_index":113,"title":{"99-12":{}},"name":{},"text":{"1":{},"6":{},"49":{},"52":{},"58":{},"66":{},"81":{},"99":{},"128":{},"168":{},"183":{},"186":{},"191":{},"194":{},"197":{},"199":{},"208":{},"244":{},"272":{}},"component":{}}],["collect(collectors.tolist",{"_index":6744,"title":{},"name":{},"text":{"269":{}},"component":{}}],["colon",{"_index":5838,"title":{},"name":{},"text":{"192":{}},"component":{}}],["color",{"_index":5752,"title":{},"name":{},"text":{"183":{}},"component":{}}],["column",{"_index":1862,"title":{"224":{},"84-11":{},"84-14":{},"84-17":{},"242-7":{}},"name":{"224":{}},"text":{"25":{},"28":{},"30":{},"31":{},"33":{},"42":{},"43":{},"52":{},"58":{},"59":{},"60":{},"61":{},"73":{},"83":{},"84":{},"103":{},"108":{},"119":{},"122":{},"129":{},"138":{},"139":{},"141":{},"150":{},"151":{},"152":{},"163":{},"164":{},"165":{},"167":{},"168":{},"209":{},"224":{},"240":{},"242":{},"244":{},"246":{},"257":{}},"component":{}}],["column_nam",{"_index":4163,"title":{},"name":{},"text":{"84":{},"167":{},"209":{}},"component":{}}],["column_name1",{"_index":5611,"title":{},"name":{},"text":{"167":{}},"component":{}}],["column_name2",{"_index":5612,"title":{},"name":{},"text":{"167":{}},"component":{}}],["column_name3",{"_index":5613,"title":{},"name":{},"text":{"167":{}},"component":{}}],["columnnam",{"_index":4819,"title":{},"name":{},"text":{"138":{}},"component":{}}],["com.epam.digital.data.platform.bpms.extension.delegate.connector.registry.edr.searchsubjectsedrregistryconnectordeleg",{"_index":5922,"title":{},"name":{},"text":{"195":{}},"component":{}}],["com.epam.digital.data.platform.bpms.extension.delegate.connector.registry.edr.subjectdetailedrregistryconnectordeleg",{"_index":5923,"title":{},"name":{},"text":{"195":{}},"component":{}}],["com.epam.digital.data.platform.bpms.extension.delegate.connector.rest.externalsystemconnectordeleg",{"_index":5925,"title":{},"name":{},"text":{"195":{}},"component":{}}],["combin",{"_index":2812,"title":{"166":{}},"name":{},"text":{"58":{},"66":{},"67":{},"73":{},"81":{},"122":{},"138":{},"148":{},"149":{},"158":{},"160":{},"166":{},"167":{},"170":{},"213":{},"225":{},"256":{},"257":{},"270":{}},"component":{}}],["come",{"_index":3882,"title":{},"name":{},"text":{"75":{},"122":{},"174":{},"196":{},"213":{}},"component":{}}],["comma",{"_index":1925,"title":{},"name":{},"text":{"28":{},"30":{},"107":{},"108":{},"119":{},"154":{},"155":{},"183":{},"186":{},"227":{}},"component":{}}],["command",{"_index":630,"title":{"168-4":{}},"name":{},"text":{"4":{},"6":{},"15":{},"18":{},"19":{},"21":{},"22":{},"23":{},"40":{},"47":{},"49":{},"57":{},"63":{},"66":{},"67":{},"72":{},"73":{},"129":{},"168":{},"253":{}},"component":{}}],["command—click",{"_index":1628,"title":{},"name":{},"text":{"18":{}},"component":{}}],["comment",{"_index":1158,"title":{"262-10":{},"262-11":{},"262-12":{}},"name":{},"text":{"6":{},"62":{},"73":{},"83":{},"101":{},"108":{},"129":{},"138":{},"167":{},"231":{},"258":{},"262":{}},"component":{}}],["commerci",{"_index":2398,"title":{},"name":{},"text":{"49":{}},"component":{}}],["commiss",{"_index":1522,"title":{},"name":{},"text":{"12":{}},"component":{}}],["commit",{"_index":890,"title":{},"name":{},"text":{"4":{},"6":{},"55":{},"56":{},"57":{},"66":{},"99":{},"129":{},"138":{},"142":{},"165":{},"253":{}},"component":{}}],["common",{"_index":585,"title":{"73-42":{}},"name":{},"text":{"2":{},"21":{},"25":{},"49":{},"57":{},"73":{},"99":{},"164":{},"255":{},"267":{},"270":{}},"component":{}}],["commonli",{"_index":2300,"title":{},"name":{},"text":{"49":{},"108":{},"196":{}},"component":{}}],["commun",{"_index":230,"title":{"144-1":{},"144-2":{}},"name":{},"text":{"2":{},"14":{},"32":{},"47":{},"49":{},"59":{},"66":{},"67":{},"119":{},"122":{},"133":{},"138":{},"144":{},"146":{},"154":{},"158":{},"162":{},"164":{},"173":{},"182":{},"183":{},"184":{},"186":{},"188":{},"192":{},"193":{},"195":{},"197":{},"202":{},"231":{},"249":{},"250":{},"253":{},"265":{},"271":{}},"component":{}}],["compact",{"_index":581,"title":{},"name":{},"text":{"2":{}},"component":{}}],["compani",{"_index":3914,"title":{},"name":{},"text":{"78":{},"111":{}},"component":{}}],["compar",{"_index":1601,"title":{},"name":{},"text":{"15":{},"16":{},"28":{},"29":{},"33":{},"34":{},"36":{},"59":{},"78":{},"115":{},"118":{},"270":{}},"component":{}}],["comparison",{"_index":1435,"title":{},"name":{},"text":{"9":{},"15":{},"16":{},"33":{},"36":{},"115":{},"118":{},"122":{}},"component":{}}],["compat",{"_index":622,"title":{},"name":{},"text":{"4":{},"6":{},"21":{},"26":{},"30":{},"47":{},"49":{},"74":{},"85":{},"87":{},"202":{},"256":{},"257":{},"258":{},"270":{}},"component":{}}],["compens",{"_index":4584,"title":{},"name":{},"text":{"125":{},"260":{},"261":{}},"component":{}}],["compet",{"_index":364,"title":{},"name":{},"text":{"2":{},"6":{}},"component":{}}],["compil",{"_index":4415,"title":{},"name":{},"text":{"108":{},"168":{},"177":{},"262":{}},"component":{}}],["complet",{"_index":296,"title":{"13":{},"52-13":{},"70-9":{},"140-19":{},"151-3":{},"152-3":{},"152-5":{},"205-13":{},"244-5":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"13":{},"15":{},"16":{},"18":{},"21":{},"23":{},"28":{},"29":{},"30":{},"33":{},"42":{},"43":{},"51":{},"52":{},"57":{},"60":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"99":{},"108":{},"115":{},"117":{},"118":{},"119":{},"122":{},"125":{},"127":{},"128":{},"129":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"145":{},"148":{},"149":{},"151":{},"152":{},"155":{},"159":{},"161":{},"164":{},"165":{},"167":{},"177":{},"183":{},"186":{},"188":{},"194":{},"196":{},"204":{},"205":{},"214":{},"218":{},"226":{},"229":{},"233":{},"242":{},"244":{},"247":{},"260":{},"262":{}},"component":{}}],["completer('').usernam",{"_index":5811,"title":{},"name":{},"text":{"186":{}},"component":{}}],["completer('addlabformactivity').accesstoken",{"_index":4928,"title":{},"name":{},"text":{"140":{}},"component":{}}],["completer('id",{"_index":2833,"title":{},"name":{},"text":{"58":{}},"component":{}}],["completer('signcanceledlicenseactivity').accesstoken",{"_index":2632,"title":{},"name":{},"text":{"52":{}},"component":{}}],["completer('signcsvfileactivity').accesstoken",{"_index":4276,"title":{},"name":{},"text":{"103":{}},"component":{}}],["completer('signeditedpersonalprofile').accesstoken",{"_index":5413,"title":{},"name":{},"text":{"161":{}},"component":{}}],["completer('signgeoactivity').accesstoken",{"_index":2816,"title":{},"name":{},"text":{"58":{}},"component":{}}],["completer('signlabformactivity').accesstoken",{"_index":4967,"title":{},"name":{},"text":{"140":{}},"component":{}}],["completer('signpersonalprofile').accesstoken",{"_index":5393,"title":{},"name":{},"text":{"161":{}},"component":{}}],["completer('signpersonnelformactivity').accesstoken",{"_index":5034,"title":{},"name":{},"text":{"141":{}},"component":{}}],["completer('task_definition_id",{"_index":5232,"title":{},"name":{},"text":{"155":{}},"component":{}}],["completer('taskdefinitionid').accesstoken",{"_index":4930,"title":{},"name":{},"text":{"140":{},"141":{},"161":{},"221":{},"222":{}},"component":{}}],["completer_user_id",{"_index":5234,"title":{},"name":{},"text":{"155":{}},"component":{}}],["completionresult",{"_index":6103,"title":{},"name":{},"text":{"205":{}},"component":{}}],["complex",{"_index":76,"title":{"107-4":{},"107-5":{}},"name":{},"text":{"1":{},"6":{},"32":{},"44":{},"52":{},"55":{},"66":{},"107":{},"137":{},"140":{},"154":{},"160":{},"166":{},"167":{},"210":{},"271":{}},"component":{}}],["compli",{"_index":123,"title":{},"name":{},"text":{"1":{},"99":{},"103":{},"108":{},"227":{},"271":{}},"component":{}}],["complianc",{"_index":1062,"title":{"99":{},"6-30":{},"99-3":{},"253-15":{},"255-20":{}},"name":{"99":{}},"text":{"6":{},"44":{},"48":{},"67":{},"99":{},"105":{},"196":{},"227":{},"253":{},"254":{},"255":{}},"component":{}}],["complic",{"_index":1079,"title":{},"name":{},"text":{"6":{},"41":{},"44":{}},"component":{}}],["compon",{"_index":324,"title":{"15":{},"18":{},"29":{},"42":{},"43":{},"87":{},"141":{},"163":{},"198":{},"223":{},"224":{},"226":{},"227":{},"230":{},"231":{},"232":{},"263":{},"18-1":{},"18-3":{},"29-2":{},"29-5":{},"48-6":{},"48-8":{},"51-3":{},"66-12":{},"75-2":{},"75-3":{},"84-5":{},"85-2":{},"85-3":{},"85-4":{},"85-6":{},"87-2":{},"87-3":{},"87-5":{},"88-2":{},"88-3":{},"88-5":{},"88-6":{},"100-3":{},"100-4":{},"100-5":{},"141-22":{},"188-2":{},"191-5":{},"193-3":{},"193-4":{},"193-5":{},"194-4":{},"197-4":{},"199-4":{},"201-4":{},"202-5":{},"204-4":{},"205-5":{},"205-9":{},"208-4":{},"226-1":{},"227-1":{},"230-1":{},"231-1":{},"231-2":{},"249-2":{},"250-1":{},"251-2":{},"251-3":{},"254-6":{},"255-12":{},"257-9":{},"266-7":{},"267-6":{},"272-13":{}},"name":{"16":{},"18":{},"42":{},"141":{},"198":{},"227":{},"231":{},"250":{},"263":{}},"text":{"2":{},"4":{},"6":{},"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"37":{},"41":{},"42":{},"43":{},"44":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"65":{},"66":{},"67":{},"73":{},"75":{},"78":{},"81":{},"85":{},"86":{},"87":{},"88":{},"100":{},"103":{},"105":{},"106":{},"113":{},"124":{},"125":{},"128":{},"134":{},"138":{},"139":{},"140":{},"141":{},"160":{},"163":{},"173":{},"183":{},"186":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"201":{},"202":{},"204":{},"205":{},"208":{},"223":{},"224":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"233":{},"235":{},"236":{},"238":{},"241":{},"244":{},"245":{},"249":{},"250":{},"251":{},"252":{},"254":{},"255":{},"256":{},"257":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["components/registri",{"_index":2713,"title":{},"name":{},"text":{"56":{}},"component":{}}],["component’",{"_index":1969,"title":{},"name":{},"text":{"30":{},"223":{},"224":{},"227":{},"230":{},"232":{}},"component":{}}],["compos",{"_index":1503,"title":{},"name":{},"text":{"10":{},"25":{},"48":{},"73":{},"113":{}},"component":{}}],["composit",{"_index":2105,"title":{"138-9":{},"138-17":{},"167-24":{}},"name":{},"text":{"43":{},"67":{},"136":{},"138":{},"167":{}},"component":{}}],["comprehens",{"_index":372,"title":{},"name":{},"text":{"2":{},"41":{},"67":{},"99":{},"108":{}},"component":{}}],["compris",{"_index":2216,"title":{},"name":{},"text":{"48":{},"67":{},"84":{},"100":{},"261":{}},"component":{}}],["compromis",{"_index":3236,"title":{},"name":{},"text":{"67":{},"99":{},"195":{}},"component":{}}],["comput",{"_index":1834,"title":{},"name":{},"text":{"23":{},"30":{},"39":{},"50":{},"67":{},"73":{},"78":{},"168":{},"267":{}},"component":{}}],["concat(submission('addlabformactivity').formdata.prop('edrpou').valu",{"_index":4924,"title":{},"name":{},"text":{"140":{}},"component":{}}],["concaten",{"_index":2897,"title":{},"name":{},"text":{"59":{},"160":{},"192":{}},"component":{}}],["concept",{"_index":10,"title":{"1-4":{},"164-1":{},"270-2":{}},"name":{},"text":{"1":{},"2":{},"6":{},"65":{},"81":{},"99":{},"154":{},"164":{},"270":{}},"component":{}}],["conceptu",{"_index":2120,"title":{"46":{}},"name":{"46":{}},"text":{"44":{},"164":{}},"component":{}}],["concis",{"_index":4171,"title":{},"name":{},"text":{"87":{}},"component":{}}],["conclud",{"_index":4467,"title":{},"name":{},"text":{"115":{}},"component":{}}],["conclus",{"_index":4468,"title":{},"name":{},"text":{"115":{}},"component":{}}],["condit",{"_index":7,"title":{"166":{},"1-3":{},"52-4":{},"52-7":{},"138-10":{},"138-15":{},"138-16":{},"159-4":{},"166-5":{},"166-6":{},"166-7":{},"166-8":{},"166-10":{},"166-11":{},"167-9":{},"167-11":{},"167-13":{},"167-19":{},"167-20":{}},"name":{},"text":{"1":{},"5":{},"6":{},"52":{},"58":{},"59":{},"66":{},"67":{},"84":{},"99":{},"100":{},"124":{},"125":{},"134":{},"135":{},"136":{},"138":{},"140":{},"141":{},"142":{},"158":{},"159":{},"161":{},"166":{},"167":{},"170":{},"171":{},"179":{},"181":{},"214":{},"221":{},"229":{},"257":{},"264":{},"267":{},"272":{}},"component":{}}],["conditionintermediatecatchev",{"_index":6204,"title":{},"name":{},"text":{"214":{}},"component":{}}],["conduct",{"_index":1221,"title":{},"name":{},"text":{"6":{},"67":{},"99":{},"108":{},"119":{},"126":{},"270":{}},"component":{}}],["conf",{"_index":1758,"title":{},"name":{},"text":{"21":{}},"component":{}}],["conf=/var/lib/rook/openshift",{"_index":1829,"title":{},"name":{},"text":{"23":{}},"component":{}}],["confid",{"_index":1430,"title":{},"name":{},"text":{"9":{}},"component":{}}],["confidenti",{"_index":72,"title":{},"name":{},"text":{"1":{},"2":{},"45":{},"72":{},"78":{},"99":{},"123":{},"195":{},"253":{},"255":{}},"component":{}}],["config",{"_index":760,"title":{"141-26":{}},"name":{"182":{}},"text":{"4":{},"40":{},"55":{},"73":{},"104":{},"141":{},"153":{},"195":{},"196":{},"253":{},"255":{},"258":{},"272":{}},"component":{}}],["config.limit_bi",{"_index":2649,"title":{},"name":{},"text":{"55":{}},"component":{}}],["config.yaml",{"_index":3741,"title":{},"name":{},"text":{"73":{}},"component":{}}],["config/dso",{"_index":5840,"title":{},"name":{},"text":{"192":{}},"component":{}}],["config/instal",{"_index":2700,"title":{},"name":{},"text":{"56":{}},"component":{}}],["config/pool_passwd",{"_index":6553,"title":{},"name":{},"text":{"258":{}},"component":{}}],["configmap",{"_index":758,"title":{"195-13":{},"195-14":{}},"name":{},"text":{"4":{},"49":{},"195":{},"255":{},"258":{},"270":{},"272":{}},"component":{}}],["configmapnam",{"_index":6867,"title":{},"name":{},"text":{"272":{}},"component":{}}],["configur",{"_index":247,"title":{"25":{},"27":{},"31":{},"33":{},"36":{},"75":{},"76":{},"77":{},"78":{},"115":{},"116":{},"117":{},"122":{},"160":{},"173":{},"176":{},"181":{},"182":{},"186":{},"188":{},"191":{},"192":{},"231":{},"255":{},"4-8":{},"21-1":{},"32-18":{},"32-19":{},"50-1":{},"55-5":{},"55-6":{},"55-7":{},"61-2":{},"73-5":{},"73-6":{},"73-19":{},"73-20":{},"73-31":{},"73-32":{},"73-38":{},"73-39":{},"75-2":{},"75-3":{},"75-4":{},"75-5":{},"76-2":{},"76-4":{},"76-5":{},"76-6":{},"100-2":{},"100-3":{},"100-4":{},"100-5":{},"100-6":{},"104-3":{},"115-5":{},"119-2":{},"122-2":{},"124-6":{},"124-7":{},"125-2":{},"126-2":{},"128-3":{},"139-20":{},"140-11":{},"140-13":{},"140-26":{},"141-22":{},"154-2":{},"155-1":{},"158-2":{},"160-2":{},"160-3":{},"160-4":{},"160-5":{},"160-6":{},"160-7":{},"161-2":{},"162-4":{},"165-2":{},"167-43":{},"181-2":{},"182-2":{},"182-3":{},"183-2":{},"188-5":{},"188-6":{},"191-4":{},"195-5":{},"195-6":{},"195-11":{},"195-12":{},"196-2":{},"205-14":{},"210-2":{},"210-3":{},"212-2":{},"212-3":{},"212-4":{},"212-5":{},"213-2":{},"227-1":{},"231-1":{},"231-2":{},"237-3":{},"242-10":{},"247-1":{},"248-3":{},"259-2":{},"259-3":{},"259-4":{},"260-2":{},"260-3":{},"260-4":{},"272-11":{},"272-17":{},"272-19":{},"272-20":{}},"name":{"247":{}},"text":{"2":{},"4":{},"6":{},"8":{},"9":{},"10":{},"14":{},"15":{},"16":{},"17":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"39":{},"42":{},"43":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"82":{},"84":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"115":{},"116":{},"117":{},"118":{},"119":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"135":{},"138":{},"139":{},"140":{},"141":{},"143":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"165":{},"167":{},"171":{},"173":{},"176":{},"178":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"201":{},"202":{},"204":{},"205":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"223":{},"227":{},"230":{},"231":{},"234":{},"237":{},"242":{},"244":{},"248":{},"249":{},"250":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"264":{},"266":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["configuration.adoc",{"_index":2612,"title":{},"name":{},"text":{"52":{},"58":{},"157":{}},"component":{}}],["configuration.adoc#_налаштування_каналу_звязку_для_відправки_push_повідомлень_у_мобільний_додаток_ді",{"_index":5873,"title":{},"name":{},"text":{"195":{}},"component":{}}],["configuration.konghq.com/v1",{"_index":6846,"title":{},"name":{},"text":{"272":{}},"component":{}}],["configuration.yml",{"_index":5894,"title":{},"name":{},"text":{"195":{}},"component":{}}],["configuration/blob/main/deploy",{"_index":6065,"title":{},"name":{},"text":{"204":{}},"component":{}}],["configuration/values.yaml",{"_index":6873,"title":{},"name":{},"text":{"272":{}},"component":{}}],["confirm",{"_index":483,"title":{"8":{},"144":{},"184":{},"223":{},"30-12":{},"118-2":{},"216-11":{}},"name":{"184":{}},"text":{"2":{},"4":{},"8":{},"9":{},"15":{},"16":{},"28":{},"29":{},"30":{},"33":{},"34":{},"35":{},"36":{},"42":{},"43":{},"45":{},"57":{},"58":{},"60":{},"65":{},"67":{},"75":{},"76":{},"104":{},"115":{},"117":{},"118":{},"120":{},"122":{},"140":{},"144":{},"145":{},"146":{},"154":{},"158":{},"160":{},"161":{},"177":{},"182":{},"183":{},"184":{},"185":{},"186":{},"216":{},"217":{},"221":{},"222":{},"223":{},"237":{}},"component":{}}],["confirmation/css/style.css",{"_index":5802,"title":{},"name":{},"text":{"184":{}},"component":{}}],["confirmation/imag",{"_index":5803,"title":{},"name":{},"text":{"184":{}},"component":{}}],["confirmation/notification.ftlh",{"_index":5804,"title":{},"name":{},"text":{"184":{}},"component":{}}],["confirmation/notification.yml",{"_index":5806,"title":{},"name":{},"text":{"184":{}},"component":{}}],["conflict",{"_index":3120,"title":{"177-2":{}},"name":{},"text":{"61":{},"177":{},"254":{},"268":{}},"component":{}}],["confluenc",{"_index":1234,"title":{},"name":{},"text":{"6":{}},"component":{}}],["confluent",{"_index":2368,"title":{},"name":{},"text":{"49":{}},"component":{}}],["conform",{"_index":6457,"title":{},"name":{},"text":{"253":{}},"component":{}}],["congratul",{"_index":1539,"title":{},"name":{},"text":{"13":{}},"component":{}}],["connect",{"_index":122,"title":{"63":{},"73-21":{},"104-4":{},"182-2":{},"182-3":{}},"name":{},"text":{"1":{},"2":{},"4":{},"19":{},"21":{},"25":{},"30":{},"46":{},"47":{},"49":{},"52":{},"57":{},"58":{},"60":{},"63":{},"65":{},"73":{},"83":{},"84":{},"104":{},"105":{},"106":{},"107":{},"108":{},"122":{},"123":{},"124":{},"139":{},"141":{},"154":{},"159":{},"161":{},"162":{},"168":{},"179":{},"182":{},"186":{},"194":{},"195":{},"197":{},"199":{},"204":{},"211":{},"218":{},"230":{},"232":{},"242":{},"255":{},"258":{},"260":{},"267":{},"269":{}},"component":{}}],["connect/cert",{"_index":5950,"title":{},"name":{},"text":{"196":{}},"component":{}}],["connect/token",{"_index":5683,"title":{},"name":{},"text":{"179":{}},"component":{}}],["connection_cach",{"_index":6581,"title":{},"name":{},"text":{"258":{}},"component":{}}],["connection_life_tim",{"_index":6579,"title":{},"name":{},"text":{"258":{}},"component":{}}],["connector",{"_index":2016,"title":{"104":{},"162-2":{},"162-3":{},"162-4":{},"162-7":{},"195-23":{},"195-24":{}},"name":{"104":{},"162":{}},"text":{"32":{},"52":{},"58":{},"59":{},"66":{},"104":{},"122":{},"123":{},"124":{},"155":{},"162":{},"195":{},"220":{},"264":{}},"component":{}}],["connectors/extens",{"_index":5237,"title":{},"name":{},"text":{"157":{}},"component":{}}],["consensu",{"_index":1226,"title":{},"name":{},"text":{"6":{}},"component":{}}],["consent",{"_index":2491,"title":{},"name":{"57":{}},"text":{"51":{},"52":{},"57":{},"124":{},"179":{},"181":{},"184":{},"266":{},"267":{}},"component":{}}],["consent_d",{"_index":4058,"title":{},"name":{},"text":{"83":{},"167":{}},"component":{}}],["consent_data_person",{"_index":5576,"title":{},"name":{},"text":{"167":{}},"component":{}}],["consent_id",{"_index":4057,"title":{},"name":{},"text":{"83":{}},"component":{}}],["consent_subject",{"_index":5578,"title":{},"name":{},"text":{"167":{}},"component":{}}],["consequ",{"_index":73,"title":{},"name":{},"text":{"1":{},"100":{},"193":{},"223":{},"238":{}},"component":{}}],["consid",{"_index":1128,"title":{"108-2":{}},"name":{},"text":{"6":{},"9":{},"13":{},"16":{},"30":{},"52":{},"58":{},"59":{},"105":{},"108":{},"131":{},"138":{},"154":{},"158":{},"160":{},"162":{},"165":{},"166":{},"167":{},"195":{},"205":{},"244":{},"253":{},"254":{},"261":{},"262":{},"272":{}},"component":{}}],["consider",{"_index":4233,"title":{},"name":{},"text":{"99":{},"108":{},"205":{}},"component":{}}],["consist",{"_index":552,"title":{},"name":{},"text":{"2":{},"21":{},"33":{},"52":{},"59":{},"66":{},"68":{},"69":{},"70":{},"81":{},"108":{},"119":{},"123":{},"139":{},"140":{},"191":{},"194":{},"196":{},"197":{},"202":{},"237":{},"268":{},"269":{},"271":{}},"component":{}}],["consol",{"_index":236,"title":{"32-17":{},"255-10":{},"256-7":{}},"name":{"254":{}},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"17":{},"21":{},"22":{},"23":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"35":{},"36":{},"37":{},"39":{},"40":{},"42":{},"43":{},"56":{},"57":{},"59":{},"60":{},"63":{},"65":{},"66":{},"73":{},"75":{},"76":{},"78":{},"81":{},"104":{},"105":{},"115":{},"116":{},"118":{},"119":{},"122":{},"123":{},"127":{},"128":{},"129":{},"131":{},"139":{},"142":{},"171":{},"181":{},"182":{},"188":{},"192":{},"193":{},"194":{},"195":{},"198":{},"220":{},"221":{},"222":{},"229":{},"242":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"272":{}},"component":{}}],["console.app",{"_index":6469,"title":{},"name":{},"text":{"254":{}},"component":{}}],["console.apps.envone.dev.registry.eua.gov.ua",{"_index":2014,"title":{},"name":{},"text":{"32":{}},"component":{}}],["console.control",{"_index":6472,"title":{},"name":{},"text":{"254":{}},"component":{}}],["console.log",{"_index":6283,"title":{},"name":{},"text":{"229":{}},"component":{}}],["consolid",{"_index":4598,"title":{},"name":{},"text":{"127":{},"237":{}},"component":{}}],["constant",{"_index":4672,"title":{},"name":{},"text":{"134":{},"135":{},"136":{},"165":{},"218":{},"260":{},"267":{}},"component":{}}],["constant_cod",{"_index":4670,"title":{},"name":{},"text":{"134":{},"135":{},"136":{}},"component":{}}],["constant_code=$6",{"_index":6513,"title":{},"name":{},"text":{"257":{}},"component":{}}],["constant_code='initial_onboard",{"_index":4780,"title":{},"name":{},"text":{"136":{}},"component":{}}],["constantcode\":\"1100",{"_index":5635,"title":{},"name":{},"text":{"167":{}},"component":{}}],["constantcode\":\"1200",{"_index":5638,"title":{},"name":{},"text":{"167":{}},"component":{}}],["constantli",{"_index":5670,"title":{},"name":{},"text":{"168":{}},"component":{}}],["constant—​for",{"_index":6248,"title":{},"name":{},"text":{"221":{}},"component":{}}],["constitu",{"_index":4166,"title":{"85-4":{},"87-3":{},"88-5":{}},"name":{},"text":{"85":{},"88":{}},"component":{}}],["constitut",{"_index":1188,"title":{},"name":{},"text":{"6":{},"195":{},"202":{}},"component":{}}],["constraint",{"_index":411,"title":{"167-26":{}},"name":{},"text":{"2":{},"81":{},"83":{},"84":{},"123":{},"125":{},"138":{},"164":{},"167":{},"168":{},"209":{},"270":{}},"component":{}}],["constraint_viol",{"_index":6782,"title":{},"name":{},"text":{"271":{}},"component":{}}],["construct",{"_index":1122,"title":{},"name":{},"text":{"6":{},"58":{},"84":{},"168":{},"174":{}},"component":{}}],["constructor",{"_index":4972,"title":{},"name":{},"text":{"140":{},"168":{},"238":{},"245":{},"264":{},"265":{}},"component":{}}],["consult",{"_index":366,"title":{},"name":{},"text":{"2":{}},"component":{}}],["consum",{"_index":3340,"title":{"124-7":{}},"name":{},"text":{"67":{},"124":{},"242":{},"268":{}},"component":{}}],["consumer/request",{"_index":4563,"title":{},"name":{},"text":{"124":{}},"component":{}}],["contact",{"_index":653,"title":{"10":{},"113":{}},"name":{},"text":{"4":{},"9":{},"10":{},"28":{},"69":{},"70":{},"113":{},"119":{},"138":{},"142":{},"144":{},"173":{},"183":{},"184":{},"244":{},"254":{},"269":{}},"component":{}}],["contain",{"_index":157,"title":{"48-5":{},"49-12":{},"73-24":{},"81-2":{},"207-5":{},"267-5":{},"269-7":{},"269-8":{}},"name":{"81":{}},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"9":{},"14":{},"15":{},"16":{},"21":{},"23":{},"25":{},"29":{},"30":{},"31":{},"34":{},"40":{},"47":{},"48":{},"49":{},"50":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"67":{},"72":{},"73":{},"78":{},"80":{},"81":{},"84":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"119":{},"122":{},"123":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"158":{},"159":{},"160":{},"162":{},"164":{},"167":{},"168":{},"175":{},"176":{},"179":{},"181":{},"183":{},"184":{},"186":{},"190":{},"191":{},"192":{},"194":{},"195":{},"196":{},"197":{},"199":{},"201":{},"202":{},"203":{},"204":{},"205":{},"207":{},"208":{},"209":{},"211":{},"213":{},"217":{},"218":{},"221":{},"222":{},"226":{},"229":{},"230":{},"231":{},"232":{},"237":{},"242":{},"244":{},"253":{},"255":{},"257":{},"258":{},"260":{},"261":{},"262":{},"265":{},"266":{},"267":{},"268":{},"269":{}},"component":{}}],["container",{"_index":504,"title":{},"name":{},"text":{"2":{},"34":{},"81":{}},"component":{}}],["containerd.io",{"_index":3662,"title":{},"name":{},"text":{"73":{}},"component":{}}],["containertyp",{"_index":6695,"title":{},"name":{},"text":{"269":{}},"component":{}}],["containertype).getcontent().getdata",{"_index":6702,"title":{},"name":{},"text":{"269":{}},"component":{}}],["containertype).getsigninfo",{"_index":6698,"title":{},"name":{},"text":{"269":{}},"component":{}}],["content",{"_index":410,"title":{"269":{},"7-1":{},"37-2":{},"57-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"12":{},"32":{},"37":{},"49":{},"52":{},"57":{},"60":{},"61":{},"67":{},"73":{},"103":{},"105":{},"145":{},"163":{},"167":{},"192":{},"194":{},"203":{},"206":{},"209":{},"210":{},"227":{},"244":{},"266":{},"268":{},"269":{},"271":{}},"component":{}}],["contenttyp",{"_index":4313,"title":{},"name":{},"text":{"105":{}},"component":{}}],["context",{"_index":46,"title":{"6-28":{},"195-1":{},"205-1":{}},"name":{"111":{}},"text":{"1":{},"2":{},"6":{},"22":{},"51":{},"52":{},"58":{},"66":{},"73":{},"81":{},"83":{},"99":{},"103":{},"111":{},"138":{},"140":{},"166":{},"167":{},"183":{},"186":{},"195":{},"207":{},"226":{},"262":{},"271":{}},"component":{}}],["context=\"!cod",{"_index":5646,"title":{},"name":{},"text":{"167":{}},"component":{}}],["context=\"pub",{"_index":4877,"title":{},"name":{},"text":{"138":{},"167":{}},"component":{}}],["contextu",{"_index":2137,"title":{},"name":{},"text":{"46":{}},"component":{}}],["contin",{"_index":1373,"title":{},"name":{},"text":{"6":{}},"component":{}}],["contini",{"_index":3249,"title":{},"name":{},"text":{"67":{}},"component":{}}],["continu",{"_index":467,"title":{"21-9":{},"140-13":{}},"name":{},"text":{"2":{},"6":{},"14":{},"21":{},"31":{},"49":{},"52":{},"57":{},"65":{},"67":{},"108":{},"118":{},"125":{},"127":{},"129":{},"140":{},"148":{},"149":{},"167":{},"177":{},"191":{},"213":{},"216":{},"217":{},"218":{},"221":{},"222":{},"242":{},"244":{},"260":{},"261":{}},"component":{}}],["contract",{"_index":1353,"title":{},"name":{},"text":{"6":{},"67":{},"80":{},"141":{},"162":{},"181":{},"217":{},"257":{},"269":{},"270":{}},"component":{}}],["contractendd",{"_index":5063,"title":{},"name":{},"text":{"141":{}},"component":{}}],["contrari",{"_index":6521,"title":{},"name":{},"text":{"258":{}},"component":{}}],["control",{"_index":238,"title":{"6":{},"37":{},"89":{},"122":{},"155":{},"6-21":{},"42-2":{},"43-2":{},"49-53":{},"99-6":{},"99-17":{},"122-2":{}},"name":{"17":{},"18":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"89":{},"134":{},"135":{},"136":{},"178":{}},"text":{"2":{},"4":{},"6":{},"9":{},"14":{},"15":{},"16":{},"17":{},"18":{},"23":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"43":{},"49":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"65":{},"66":{},"67":{},"72":{},"73":{},"75":{},"76":{},"78":{},"80":{},"81":{},"84":{},"86":{},"87":{},"99":{},"104":{},"105":{},"115":{},"116":{},"117":{},"118":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"139":{},"142":{},"153":{},"154":{},"155":{},"167":{},"171":{},"173":{},"175":{},"176":{},"177":{},"179":{},"181":{},"182":{},"188":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"202":{},"205":{},"209":{},"214":{},"220":{},"221":{},"222":{},"249":{},"250":{},"253":{},"254":{},"255":{},"257":{},"258":{},"266":{},"271":{},"272":{}},"component":{}}],["controlplan",{"_index":3748,"title":{},"name":{},"text":{"73":{}},"component":{}}],["conveni",{"_index":416,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"18":{},"21":{},"32":{},"33":{},"36":{},"47":{},"56":{},"66":{},"73":{},"75":{},"101":{},"115":{},"116":{},"118":{},"122":{},"124":{},"168":{},"179":{},"194":{},"232":{},"234":{},"237":{},"242":{},"244":{},"246":{},"262":{}},"component":{}}],["convent",{"_index":3879,"title":{"75-6":{}},"name":{},"text":{"75":{},"195":{},"255":{}},"component":{}}],["convention—​for",{"_index":5551,"title":{},"name":{},"text":{"167":{}},"component":{}}],["convers",{"_index":4426,"title":{},"name":{},"text":{"108":{},"199":{}},"component":{}}],["convert",{"_index":440,"title":{},"name":{},"text":{"2":{},"9":{},"58":{},"76":{},"154":{},"168":{},"230":{}},"component":{}}],["convertsignformdatatodatafactoryformatact",{"_index":4945,"title":{},"name":{},"text":{"140":{},"141":{}},"component":{}}],["convey",{"_index":4390,"title":{},"name":{},"text":{"107":{}},"component":{}}],["cooki",{"_index":3289,"title":{},"name":{},"text":{"67":{}},"component":{}}],["coord",{"_index":2852,"title":{},"name":{},"text":{"58":{}},"component":{}}],["coord').formdata",{"_index":2851,"title":{},"name":{},"text":{"58":{}},"component":{}}],["coordin",{"_index":2760,"title":{"58-8":{},"58-11":{},"58-14":{}},"name":{},"text":{"58":{},"125":{},"230":{}},"component":{}}],["coordinates').formdata.prop('entityid').valu",{"_index":2861,"title":{},"name":{},"text":{"58":{}},"component":{}}],["copi",{"_index":328,"title":{"85":{},"233":{},"4-4":{},"21-6":{}},"name":{"233":{}},"text":{"2":{},"4":{},"15":{},"16":{},"18":{},"19":{},"21":{},"28":{},"30":{},"31":{},"33":{},"50":{},"57":{},"59":{},"63":{},"73":{},"85":{},"87":{},"105":{},"118":{},"126":{},"127":{},"129":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"233":{},"238":{},"241":{},"242":{},"253":{},"265":{},"268":{}},"component":{}}],["copy_",{"_index":6361,"title":{},"name":{},"text":{"233":{}},"component":{}}],["copyright",{"_index":2280,"title":{},"name":{},"text":{"49":{}},"component":{}}],["core",{"_index":533,"title":{},"name":{},"text":{"2":{},"57":{},"58":{},"80":{},"205":{},"208":{}},"component":{}}],["corner",{"_index":733,"title":{},"name":{},"text":{"4":{},"12":{},"13":{},"16":{},"25":{},"28":{},"29":{},"31":{},"36":{},"42":{},"43":{},"60":{},"63":{},"75":{},"76":{},"113":{},"118":{},"139":{},"140":{},"141":{},"154":{},"160":{},"161":{},"175":{},"176":{},"177":{},"182":{},"217":{},"234":{},"245":{}},"component":{}}],["corpor",{"_index":4676,"title":{},"name":{},"text":{"134":{}},"component":{}}],["correct",{"_index":1390,"title":{},"name":{},"text":{"6":{},"12":{},"13":{},"15":{},"16":{},"19":{},"25":{},"28":{},"29":{},"33":{},"34":{},"36":{},"67":{},"75":{},"84":{},"99":{},"100":{},"115":{},"118":{},"125":{},"126":{},"131":{},"139":{},"140":{},"141":{},"164":{},"196":{},"244":{},"245":{},"255":{},"267":{},"268":{}},"component":{}}],["correctli",{"_index":120,"title":{"266":{}},"name":{},"text":{"1":{},"4":{},"25":{},"59":{},"73":{},"81":{},"108":{},"115":{},"128":{},"131":{},"138":{},"141":{},"142":{},"144":{},"164":{},"244":{},"245":{},"255":{}},"component":{}}],["correl",{"_index":6812,"title":{},"name":{},"text":{"271":{}},"component":{}}],["correspond",{"_index":624,"title":{"155-7":{}},"name":{},"text":{"4":{},"6":{},"9":{},"12":{},"15":{},"16":{},"17":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"40":{},"43":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"66":{},"72":{},"75":{},"76":{},"80":{},"83":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"118":{},"119":{},"120":{},"122":{},"126":{},"127":{},"128":{},"129":{},"131":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"148":{},"149":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"167":{},"171":{},"173":{},"177":{},"179":{},"181":{},"183":{},"184":{},"186":{},"189":{},"190":{},"191":{},"192":{},"193":{},"195":{},"197":{},"199":{},"202":{},"205":{},"208":{},"209":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"221":{},"222":{},"225":{},"226":{},"227":{},"232":{},"237":{},"242":{},"244":{},"251":{},"253":{},"254":{},"255":{},"260":{},"262":{},"263":{},"265":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["corresponf",{"_index":3079,"title":{},"name":{},"text":{"60":{}},"component":{}}],["corrupt",{"_index":2117,"title":{},"name":{},"text":{"44":{}},"component":{}}],["cost",{"_index":43,"title":{"50":{},"50-2":{}},"name":{"50":{}},"text":{"1":{},"30":{},"44":{},"50":{},"72":{},"81":{}},"component":{}}],["couldn’t",{"_index":4512,"title":{},"name":{},"text":{"119":{}},"component":{}}],["count",{"_index":1085,"title":{},"name":{},"text":{"6":{},"21":{},"23":{},"119":{},"125":{},"136":{},"138":{},"140":{},"167":{},"179":{}},"component":{}}],["count\":172",{"_index":5133,"title":{},"name":{},"text":{"142":{}},"component":{}}],["count(laboratory.laboratory_id",{"_index":4853,"title":{},"name":{},"text":{"138":{}},"component":{}}],["countdown",{"_index":5143,"title":{},"name":{},"text":{"144":{}},"component":{}}],["counter",{"_index":5860,"title":{"195-30":{}},"name":{},"text":{"195":{},"271":{},"272":{}},"component":{}}],["countinu",{"_index":6595,"title":{},"name":{},"text":{"260":{}},"component":{}}],["countri",{"_index":50,"title":{},"name":{},"text":{"1":{}},"component":{}}],["coupl",{"_index":1926,"title":{},"name":{},"text":{"28":{},"204":{}},"component":{}}],["cours",{"_index":190,"title":{"64":{},"66":{}},"name":{},"text":{"1":{},"57":{},"66":{},"191":{}},"component":{}}],["cover",{"_index":1325,"title":{},"name":{},"text":{"6":{},"37":{},"66":{},"67":{},"84":{},"99":{},"137":{},"139":{},"141":{},"164":{},"167":{},"257":{},"268":{}},"component":{}}],["coverag",{"_index":1051,"title":{"6-23":{},"6-25":{}},"name":{},"text":{"6":{}},"component":{}}],["cp",{"_index":1927,"title":{},"name":{"57":{},"75":{},"76":{},"115":{},"116":{},"117":{},"122":{},"254":{}},"text":{"28":{},"30":{},"36":{},"73":{},"118":{},"254":{}},"component":{}}],["cpu",{"_index":1395,"title":{},"name":{},"text":{"6":{},"30":{},"34":{},"65":{},"73":{},"80":{},"81":{}},"component":{}}],["cr",{"_index":382,"title":{},"name":{},"text":{"2":{},"22":{},"75":{},"253":{},"255":{}},"component":{}}],["crash",{"_index":3180,"title":{"64":{}},"name":{},"text":{},"component":{}}],["crd",{"_index":815,"title":{},"name":{},"text":{"4":{},"22":{},"81":{},"86":{},"195":{},"258":{}},"component":{}}],["crds/$file",{"_index":817,"title":{},"name":{},"text":{"4":{}},"component":{}}],["creat",{"_index":56,"title":{"28":{},"118":{},"120":{},"121":{},"164":{},"170":{},"175":{},"234":{},"15-3":{},"16-3":{},"21-4":{},"21-10":{},"29-3":{},"30-2":{},"33-2":{},"52-3":{},"58-6":{},"59-5":{},"59-7":{},"66-9":{},"73-3":{},"73-8":{},"73-10":{},"73-11":{},"73-12":{},"104-1":{},"104-2":{},"111-2":{},"118-1":{},"118-3":{},"120-1":{},"138-4":{},"138-6":{},"138-7":{},"138-8":{},"138-9":{},"138-10":{},"138-15":{},"138-16":{},"139-6":{},"139-7":{},"139-8":{},"139-9":{},"139-10":{},"139-11":{},"139-16":{},"139-17":{},"140-6":{},"140-7":{},"140-8":{},"140-9":{},"140-10":{},"140-11":{},"140-12":{},"140-14":{},"140-15":{},"140-17":{},"140-18":{},"140-19":{},"140-22":{},"140-23":{},"141-6":{},"141-7":{},"141-8":{},"141-9":{},"141-10":{},"141-11":{},"141-12":{},"141-13":{},"141-14":{},"141-15":{},"141-16":{},"141-17":{},"141-19":{},"141-21":{},"141-23":{},"142-3":{},"142-4":{},"142-5":{},"142-6":{},"142-10":{},"142-11":{},"142-12":{},"142-13":{},"142-14":{},"154-3":{},"154-10":{},"159-1":{},"161-3":{},"164-4":{},"164-5":{},"167-3":{},"167-10":{},"167-11":{},"167-23":{},"167-24":{},"167-26":{},"167-28":{},"167-32":{},"167-34":{},"175-1":{},"195-13":{},"195-14":{},"195-15":{},"216-5":{},"216-9":{},"217-4":{},"217-9":{},"237-5":{},"272-16":{}},"name":{"30":{},"83":{},"118":{},"175":{},"234":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"12":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"36":{},"37":{},"40":{},"42":{},"43":{},"44":{},"47":{},"49":{},"51":{},"52":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"65":{},"66":{},"70":{},"72":{},"73":{},"75":{},"76":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"99":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"112":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"148":{},"150":{},"152":{},"154":{},"155":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"175":{},"176":{},"177":{},"178":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"188":{},"189":{},"190":{},"193":{},"194":{},"195":{},"196":{},"197":{},"204":{},"205":{},"208":{},"209":{},"210":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"230":{},"231":{},"232":{},"233":{},"234":{},"236":{},"237":{},"238":{},"240":{},"242":{},"244":{},"246":{},"247":{},"248":{},"251":{},"253":{},"254":{},"255":{},"256":{},"258":{},"260":{},"261":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["create/edit",{"_index":6655,"title":{},"name":{},"text":{"268":{}},"component":{}}],["create_inst",{"_index":5221,"title":{},"name":{},"text":{"155":{}},"component":{}}],["create_vpc",{"_index":3680,"title":{},"name":{},"text":{"73":{}},"component":{}}],["createanalyticsindex",{"_index":4111,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["createanalyticsview",{"_index":4112,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["createanalyticsviews.xml",{"_index":5073,"title":{},"name":{},"text":{"142":{}},"component":{}}],["createasyncload",{"_index":6779,"title":{},"name":{},"text":{"271":{}},"component":{}}],["createcleanuppipelin",{"_index":986,"title":{},"name":{},"text":{"5":{}},"component":{}}],["createcleanuppipeline(\"cleanup",{"_index":988,"title":{},"name":{},"text":{"5":{}},"component":{}}],["createcompositeent",{"_index":4113,"title":{},"name":{},"text":{"84":{},"167":{},"271":{}},"component":{}}],["created_at",{"_index":4147,"title":{},"name":{},"text":{"84":{},"209":{}},"component":{}}],["created_bi",{"_index":6156,"title":{},"name":{},"text":{"209":{}},"component":{}}],["createdomain",{"_index":4114,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["createent",{"_index":6811,"title":{},"name":{},"text":{"271":{}},"component":{}}],["creategeorespons",{"_index":2820,"title":{},"name":{},"text":{"58":{}},"component":{}}],["createindex",{"_index":5666,"title":{},"name":{},"text":{"168":{},"169":{}},"component":{}}],["createmany2mani",{"_index":4115,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["createpersonpayload",{"_index":5380,"title":{},"name":{},"text":{"161":{}},"component":{}}],["createpersonpayloadderivedkey",{"_index":5395,"title":{},"name":{},"text":{"161":{}},"component":{}}],["createprocessinstancequeri",{"_index":5337,"title":{},"name":{},"text":{"160":{}},"component":{}}],["createsearchcondit",{"_index":4116,"title":{},"name":{},"text":{"84":{},"167":{},"257":{}},"component":{}}],["createsearchconditions.xml",{"_index":4822,"title":{},"name":{},"text":{"138":{},"161":{}},"component":{}}],["createsimplesearchcondit",{"_index":4117,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["createstaffindatafactoryact",{"_index":5033,"title":{},"name":{},"text":{"141":{}},"component":{}}],["createstartev",{"_index":4891,"title":{},"name":{},"text":{"139":{},"140":{},"141":{},"154":{},"161":{},"216":{},"217":{}},"component":{}}],["createt",{"_index":4044,"title":{"83":{}},"name":{},"text":{"83":{},"84":{},"138":{},"167":{},"169":{}},"component":{}}],["createtablechang",{"_index":4142,"title":{},"name":{},"text":{"84":{}},"component":{}}],["createtables.xml",{"_index":4787,"title":{},"name":{},"text":{"138":{},"244":{}},"component":{}}],["createtyp",{"_index":4118,"title":{},"name":{},"text":{"84":{}},"component":{}}],["creation",{"_index":30,"title":{"16":{},"168":{},"138-5":{},"152-4":{},"152-5":{},"161-7":{},"167-4":{},"167-8":{},"246-2":{}},"name":{"120":{}},"text":{"1":{},"4":{},"15":{},"16":{},"18":{},"20":{},"29":{},"30":{},"44":{},"51":{},"66":{},"83":{},"84":{},"103":{},"115":{},"119":{},"131":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"152":{},"159":{},"161":{},"167":{},"170":{},"177":{},"193":{},"209":{},"210":{},"233":{},"234":{},"236":{},"237":{},"240":{},"242":{},"244":{},"245":{},"246":{},"251":{},"253":{},"254":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["creation.adoc",{"_index":4436,"title":{},"name":{},"text":{"110":{},"142":{}},"component":{}}],["creation/delet",{"_index":4104,"title":{},"name":{},"text":{"84":{}},"component":{}}],["creatnig",{"_index":5207,"title":{},"name":{},"text":{"154":{}},"component":{}}],["cred",{"_index":3859,"title":{},"name":{},"text":{"73":{}},"component":{}}],["credenti",{"_index":535,"title":{},"name":{},"text":{"2":{},"4":{},"25":{},"28":{},"57":{},"73":{},"80":{},"86":{},"120":{},"122":{},"129":{},"154":{},"179":{},"181":{},"195":{}},"component":{}}],["credential_sourc",{"_index":3674,"title":{},"name":{},"text":{"73":{}},"component":{}}],["credentialssecret",{"_index":3984,"title":{},"name":{},"text":{"80":{}},"component":{}}],["credit",{"_index":5744,"title":{},"name":{},"text":{"183":{},"186":{},"260":{}},"component":{}}],["creditor",{"_index":5772,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["creditor'",{"_index":5775,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["credits/hr",{"_index":3713,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cri",{"_index":1545,"title":{},"name":{},"text":{"14":{},"49":{}},"component":{}}],["crictl",{"_index":1672,"title":{},"name":{},"text":{"19":{}},"component":{}}],["criteria",{"_index":1236,"title":{"257":{},"167-10":{},"257-11":{}},"name":{},"text":{"6":{},"59":{},"67":{},"119":{},"131":{},"158":{},"159":{},"164":{},"167":{},"209":{},"237":{},"254":{},"257":{},"272":{}},"component":{}}],["criterion",{"_index":2590,"title":{},"name":{},"text":{"52":{},"205":{},"254":{},"257":{}},"component":{}}],["critic",{"_index":393,"title":{"10":{},"113":{},"262-8":{},"262-9":{}},"name":{"113":{}},"text":{"2":{},"6":{},"10":{},"19":{},"41":{},"44":{},"45":{},"48":{},"69":{},"70":{},"99":{},"101":{},"113":{},"123":{},"127":{},"168":{},"173":{},"195":{},"253":{},"262":{},"269":{}},"component":{}}],["crlf",{"_index":3256,"title":{},"name":{},"text":{"67":{}},"component":{}}],["cron",{"_index":1577,"title":{},"name":{},"text":{"15":{},"16":{},"21":{},"30":{},"51":{},"242":{},"253":{}},"component":{}}],["cronjob",{"_index":1712,"title":{},"name":{},"text":{"21":{}},"component":{}}],["cross",{"_index":1202,"title":{"73-19":{},"73-23":{}},"name":{},"text":{"6":{},"60":{},"67":{},"73":{},"78":{},"99":{},"227":{}},"component":{}}],["cross_account_rol",{"_index":3557,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cross_account_role_arn",{"_index":3704,"title":{},"name":{},"text":{"73":{}},"component":{}}],["crossaccountpolici",{"_index":3596,"title":{},"name":{},"text":{"73":{}},"component":{}}],["crucial",{"_index":62,"title":{},"name":{},"text":{"1":{},"6":{},"67":{},"99":{}},"component":{}}],["crud",{"_index":2173,"title":{},"name":{},"text":{"47":{}},"component":{}}],["crunchi",{"_index":1690,"title":{},"name":{},"text":{"21":{},"258":{}},"component":{}}],["crunchydata",{"_index":1561,"title":{},"name":{},"text":{"14":{},"49":{}},"component":{}}],["crypto",{"_index":1972,"title":{},"name":{},"text":{"30":{},"48":{},"78":{},"269":{}},"component":{}}],["cryptograph",{"_index":434,"title":{},"name":{},"text":{"2":{},"9":{},"78":{},"99":{}},"component":{}}],["cryptomodul",{"_index":2206,"title":{"48-10":{}},"name":{},"text":{"48":{},"73":{}},"component":{}}],["cryptoresist",{"_index":6005,"title":{},"name":{},"text":{"197":{}},"component":{}}],["cryptoservic",{"_index":3920,"title":{},"name":{},"text":{"78":{},"126":{}},"component":{}}],["cs",{"_index":3655,"title":{},"name":{},"text":{"73":{}},"component":{}}],["csp",{"_index":3279,"title":{},"name":{},"text":{"67":{}},"component":{}}],["csrf",{"_index":3288,"title":{},"name":{},"text":{"67":{}},"component":{}}],["css",{"_index":3114,"title":{},"name":{},"text":{"61":{},"183":{},"184":{}},"component":{}}],["css/style.css",{"_index":5732,"title":{},"name":{},"text":{"183":{}},"component":{}}],["csv",{"_index":282,"title":{"61":{},"103":{},"148":{},"159":{},"61-5":{},"148-1":{},"148-2":{}},"name":{"61":{},"103":{},"148":{},"159":{}},"text":{"2":{},"12":{},"52":{},"59":{},"61":{},"103":{},"105":{},"107":{},"108":{},"112":{},"119":{},"132":{},"138":{},"147":{},"148":{},"159":{},"167":{},"198":{},"202":{},"203":{},"227":{},"271":{}},"component":{}}],["csv.csv",{"_index":3104,"title":{},"name":{},"text":{"61":{},"159":{}},"component":{}}],["csv/mi",{"_index":3103,"title":{},"name":{},"text":{"61":{}},"component":{}}],["csvfile",{"_index":4280,"title":{},"name":{},"text":{"103":{}},"component":{}}],["cte",{"_index":5107,"title":{},"name":{},"text":{"142":{},"257":{}},"component":{}}],["ctrl",{"_index":5154,"title":{},"name":{},"text":{"148":{},"149":{},"229":{}},"component":{}}],["cucumb",{"_index":1362,"title":{},"name":{},"text":{"6":{},"49":{}},"component":{}}],["curdir",{"_index":3788,"title":{},"name":{},"text":{"73":{}},"component":{}}],["curdir=$(pwd",{"_index":3780,"title":{},"name":{},"text":{"73":{}},"component":{}}],["curl",{"_index":3638,"title":{},"name":{},"text":{"73":{}},"component":{}}],["curli",{"_index":1124,"title":{},"name":{},"text":{"6":{},"107":{}},"component":{}}],["current",{"_index":6,"title":{"1-3":{},"23-3":{},"195-4":{},"195-7":{},"205-11":{},"253-5":{},"255-8":{},"256-5":{},"257-5":{},"270-7":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"9":{},"12":{},"15":{},"16":{},"19":{},"23":{},"29":{},"32":{},"33":{},"36":{},"39":{},"42":{},"43":{},"44":{},"52":{},"57":{},"60":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"80":{},"83":{},"99":{},"101":{},"103":{},"105":{},"108":{},"115":{},"118":{},"122":{},"125":{},"131":{},"135":{},"136":{},"138":{},"140":{},"141":{},"148":{},"149":{},"152":{},"167":{},"169":{},"173":{},"174":{},"175":{},"177":{},"179":{},"188":{},"189":{},"192":{},"195":{},"202":{},"205":{},"209":{},"213":{},"216":{},"223":{},"229":{},"231":{},"234":{},"237":{},"242":{},"245":{},"247":{},"253":{},"254":{},"255":{},"256":{},"257":{},"261":{},"262":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["currentreplica",{"_index":3937,"title":{},"name":{},"text":{"80":{}},"component":{}}],["currentus",{"_index":6280,"title":{"229-9":{}},"name":{},"text":{"229":{}},"component":{}}],["cursor",{"_index":1542,"title":{},"name":{},"text":{"13":{},"113":{},"142":{},"262":{}},"component":{}}],["custom",{"_index":381,"title":{"75":{},"76":{},"77":{},"188":{},"255":{},"167-22":{},"167-26":{},"167-27":{},"262-4":{},"262-6":{}},"name":{"75":{},"76":{},"77":{},"188":{},"247":{},"248":{},"249":{},"255":{}},"text":{"2":{},"4":{},"21":{},"22":{},"23":{},"25":{},"30":{},"31":{},"34":{},"37":{},"45":{},"47":{},"49":{},"52":{},"66":{},"73":{},"75":{},"76":{},"77":{},"81":{},"101":{},"119":{},"120":{},"124":{},"158":{},"159":{},"160":{},"166":{},"167":{},"168":{},"188":{},"195":{},"196":{},"199":{},"200":{},"202":{},"205":{},"226":{},"229":{},"230":{},"237":{},"247":{},"248":{},"253":{},"255":{},"262":{},"264":{},"267":{},"270":{}},"component":{}}],["custom_ingress_cidrs='[\"0.0.0.0/0",{"_index":3828,"title":{},"name":{},"text":{"73":{}},"component":{}}],["customattribut",{"_index":4527,"title":{},"name":{},"text":{"119":{}},"component":{}}],["customdn",{"_index":3910,"title":{},"name":{},"text":{"76":{},"188":{},"248":{}},"component":{}}],["customec2rol",{"_index":3703,"title":{},"name":{},"text":{"73":{}},"component":{}}],["customer’",{"_index":4406,"title":{},"name":{},"text":{"108":{}},"component":{}}],["customhost",{"_index":3897,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["customresourcedefinit",{"_index":809,"title":{},"name":{},"text":{"4":{}},"component":{}}],["customresourcedefintit",{"_index":808,"title":{},"name":{},"text":{"4":{}},"component":{}}],["cut",{"_index":3361,"title":{},"name":{},"text":{"72":{},"73":{},"213":{},"260":{}},"component":{}}],["cve",{"_index":3262,"title":{},"name":{},"text":{"67":{}},"component":{}}],["cyber",{"_index":3335,"title":{},"name":{},"text":{"67":{}},"component":{}}],["cyberattack",{"_index":3233,"title":{},"name":{},"text":{"67":{}},"component":{}}],["cycl",{"_index":2505,"title":{},"name":{},"text":{"51":{},"67":{},"191":{},"213":{}},"component":{}}],["cyclic",{"_index":2507,"title":{},"name":{},"text":{"51":{},"67":{}},"component":{}}],["cyclonedx",{"_index":3243,"title":{},"name":{},"text":{"67":{}},"component":{}}],["cyril",{"_index":1451,"title":{},"name":{},"text":{"9":{}},"component":{}}],["d",{"_index":769,"title":{},"name":{},"text":{"4":{},"73":{},"84":{},"209":{},"271":{}},"component":{}}],["d6a4",{"_index":5631,"title":{},"name":{},"text":{"167":{}},"component":{}}],["d:\\postgresql\\csv\\uuid\\01",{"_index":4337,"title":{},"name":{},"text":{"107":{}},"component":{}}],["daemon",{"_index":1818,"title":{},"name":{},"text":{"23":{}},"component":{}}],["daili",{"_index":1721,"title":{},"name":{},"text":{"21":{},"51":{},"205":{}},"component":{}}],["damag",{"_index":1519,"title":{},"name":{},"text":{"12":{},"104":{},"195":{}},"component":{}}],["dark",{"_index":4266,"title":{},"name":{},"text":{"101":{},"173":{},"244":{},"262":{}},"component":{}}],["dash",{"_index":1443,"title":{},"name":{},"text":{"9":{},"140":{},"141":{},"167":{},"192":{}},"component":{}}],["dashboard",{"_index":390,"title":{"58-20":{},"60-5":{},"125-3":{},"127-5":{},"142-14":{}},"name":{"126":{}},"text":{"2":{},"4":{},"32":{},"57":{},"58":{},"60":{},"66":{},"125":{},"126":{},"127":{},"132":{},"142":{},"202":{},"204":{},"272":{}},"component":{}}],["dashboard.json",{"_index":4586,"title":{},"name":{},"text":{"126":{},"127":{}},"component":{}}],["dashboard_1.json",{"_index":5128,"title":{},"name":{},"text":{"142":{}},"component":{}}],["dashboard_2.json",{"_index":5129,"title":{},"name":{},"text":{"142":{}},"component":{}}],["dashboard_3.json",{"_index":5130,"title":{},"name":{},"text":{"142":{}},"component":{}}],["dashboardsconfigmap",{"_index":6866,"title":{},"name":{},"text":{"272":{}},"component":{}}],["dast",{"_index":1288,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["dat",{"_index":1974,"title":{},"name":{},"text":{"30":{},"78":{},"192":{}},"component":{}}],["data",{"_index":38,"title":{"52":{},"54":{},"90":{},"91":{},"92":{},"93":{},"94":{},"103":{},"107":{},"108":{},"109":{},"111":{},"161":{},"164":{},"168":{},"170":{},"181":{},"200":{},"203":{},"206":{},"208":{},"221":{},"225":{},"231":{},"242":{},"271":{},"272":{},"21-8":{},"32-7":{},"32-10":{},"49-5":{},"49-39":{},"49-43":{},"52-1":{},"52-5":{},"52-6":{},"52-10":{},"52-11":{},"52-12":{},"58-5":{},"58-6":{},"58-10":{},"58-13":{},"58-16":{},"59-4":{},"59-5":{},"59-6":{},"66-9":{},"67-10":{},"78-2":{},"78-7":{},"99-4":{},"99-7":{},"99-10":{},"99-11":{},"99-18":{},"100-5":{},"100-9":{},"103-3":{},"103-4":{},"107-6":{},"107-7":{},"107-9":{},"108-3":{},"108-4":{},"108-5":{},"108-6":{},"108-7":{},"108-8":{},"108-15":{},"119-5":{},"123-3":{},"124-6":{},"124-7":{},"125-8":{},"127-3":{},"127-4":{},"138-3":{},"138-18":{},"139-8":{},"139-9":{},"139-16":{},"139-17":{},"140-8":{},"140-10":{},"140-14":{},"140-15":{},"140-16":{},"140-17":{},"140-22":{},"140-23":{},"141-9":{},"141-10":{},"141-12":{},"141-13":{},"141-14":{},"141-15":{},"141-19":{},"141-21":{},"141-23":{},"154-5":{},"154-6":{},"154-13":{},"155-4":{},"155-7":{},"159-2":{},"159-10":{},"161-5":{},"161-6":{},"161-9":{},"161-10":{},"161-11":{},"161-12":{},"161-16":{},"162-6":{},"162-9":{},"162-10":{},"164-1":{},"164-2":{},"164-3":{},"164-7":{},"167-22":{},"167-23":{},"167-24":{},"167-25":{},"167-26":{},"167-27":{},"167-35":{},"167-43":{},"181-2":{},"195-28":{},"200-2":{},"202-7":{},"203-2":{},"205-8":{},"205-10":{},"205-14":{},"205-17":{},"206-2":{},"207-3":{},"209-3":{},"216-7":{},"216-12":{},"217-6":{},"226-3":{},"229-4":{},"231-1":{},"231-2":{},"253-11":{},"253-13":{},"254-10":{},"255-16":{},"255-18":{},"256-8":{},"269-8":{},"271-12":{},"271-13":{},"271-14":{}},"name":{"57":{},"90":{},"91":{},"92":{},"93":{},"94":{},"103":{},"107":{},"108":{},"111":{},"164":{},"225":{},"242":{}},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"21":{},"22":{},"23":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"54":{},"55":{},"57":{},"58":{},"59":{},"61":{},"62":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"99":{},"100":{},"103":{},"105":{},"106":{},"107":{},"108":{},"110":{},"111":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"145":{},"148":{},"149":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"170":{},"171":{},"179":{},"180":{},"181":{},"183":{},"184":{},"186":{},"188":{},"192":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"212":{},"216":{},"217":{},"218":{},"220":{},"221":{},"223":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"237":{},"238":{},"242":{},"243":{},"244":{},"245":{},"248":{},"253":{},"254":{},"255":{},"256":{},"258":{},"260":{},"262":{},"266":{},"267":{},"269":{},"271":{},"272":{}},"component":{}}],["data.apps.envone.dev.registry.eua.gov.ua/gerrit",{"_index":2492,"title":{},"name":{},"text":{"51":{},"52":{},"124":{},"181":{}},"component":{}}],["data.aws_caller_identity.current.account_id",{"_index":3490,"title":{},"name":{},"text":{"73":{}},"component":{}}],["data.aws_iam_policy_document.assume_role_policy.json",{"_index":3593,"title":{},"name":{},"text":{"73":{}},"component":{}}],["data.json",{"_index":4971,"title":{},"name":{},"text":{"140":{}},"component":{}}],["data.oblast.cod",{"_index":4987,"title":{},"name":{},"text":{"140":{}},"component":{}}],["data.prop(\"address",{"_index":2826,"title":{},"name":{},"text":{"58":{}},"component":{}}],["data.prop(\"entityid",{"_index":2841,"title":{},"name":{},"text":{"58":{}},"component":{}}],["data.prop(\"entityloc",{"_index":2828,"title":{},"name":{},"text":{"58":{}},"component":{}}],["data.prop(\"nam",{"_index":2824,"title":{},"name":{},"text":{"58":{}},"component":{}}],["data.properti",{"_index":4988,"title":{},"name":{},"text":{"140":{}},"component":{}}],["data.selectprocessinstanceid",{"_index":6357,"title":{},"name":{},"text":{"231":{}},"component":{}}],["data/cp",{"_index":2734,"title":{},"name":{},"text":{"57":{}},"component":{}}],["databas",{"_index":254,"title":{"21":{},"103":{},"138":{},"209":{},"225":{},"244":{},"49-49":{},"52-4":{},"52-12":{},"58-8":{},"58-11":{},"58-23":{},"105-7":{},"107-1":{},"107-6":{},"107-8":{},"138-19":{},"142-3":{},"142-9":{},"161-7":{},"167-30":{},"167-40":{},"168-7":{},"209-2":{},"242-10":{},"242-11":{},"244-6":{}},"name":{},"text":{"2":{},"9":{},"12":{},"14":{},"20":{},"21":{},"31":{},"45":{},"47":{},"49":{},"51":{},"52":{},"56":{},"58":{},"59":{},"62":{},"65":{},"66":{},"84":{},"103":{},"105":{},"106":{},"107":{},"108":{},"119":{},"124":{},"125":{},"128":{},"132":{},"136":{},"138":{},"140":{},"142":{},"160":{},"161":{},"164":{},"165":{},"167":{},"168":{},"169":{},"179":{},"181":{},"183":{},"186":{},"195":{},"198":{},"200":{},"202":{},"205":{},"207":{},"208":{},"209":{},"220":{},"221":{},"225":{},"227":{},"230":{},"242":{},"243":{},"244":{},"257":{},"258":{},"260":{},"271":{}},"component":{}}],["database—​for",{"_index":6267,"title":{},"name":{},"text":{"226":{}},"component":{}}],["datafactori",{"_index":6129,"title":{"206-3":{}},"name":{},"text":{"206":{}},"component":{}}],["datafactoryconnectorbatchcreatedelegatev2.json",{"_index":4271,"title":{},"name":{},"text":{"103":{}},"component":{}}],["datafactoryconnectorpartialupdatedeleg",{"_index":5365,"title":{},"name":{},"text":{"161":{}},"component":{}}],["datafactoryconnectorpartialupdatedelegate.json",{"_index":5366,"title":{},"name":{},"text":{"161":{}},"component":{}}],["datafrom",{"_index":5899,"title":{},"name":{},"text":{"195":{}},"component":{}}],["dataloadcsv",{"_index":6814,"title":{},"name":{},"text":{"271":{}},"component":{}}],["dataloadpath",{"_index":2581,"title":{},"name":{},"text":{"52":{}},"component":{}}],["dataloadpath}dict_typy_doslidzhen.csv",{"_index":4868,"title":{},"name":{},"text":{"138":{}},"component":{}}],["datamodel",{"_index":5480,"title":{},"name":{"164":{}},"text":{},"component":{}}],["datamodelsnapshot",{"_index":6402,"title":{},"name":{},"text":{"242":{}},"component":{}}],["datapayload",{"_index":4966,"title":{},"name":{},"text":{"140":{},"141":{}},"component":{}}],["dataplatform",{"_index":4108,"title":{},"name":{},"text":{"84":{}},"component":{}}],["dataset",{"_index":2781,"title":{},"name":{},"text":{"58":{},"132":{},"151":{},"152":{},"167":{}},"component":{}}],["datasourc",{"_index":1756,"title":{},"name":{},"text":{"21":{}},"component":{}}],["datastorag",{"_index":858,"title":{},"name":{},"text":{"4":{}},"component":{}}],["data—​for",{"_index":6359,"title":{},"name":{},"text":{"232":{}},"component":{}}],["data’",{"_index":6078,"title":{},"name":{},"text":{"205":{}},"component":{}}],["date",{"_index":781,"title":{"151-4":{},"151-5":{},"152-4":{},"152-5":{},"246-2":{},"271-10":{}},"name":{},"text":{"4":{},"9":{},"15":{},"16":{},"18":{},"21":{},"40":{},"51":{},"52":{},"59":{},"60":{},"67":{},"69":{},"70":{},"78":{},"108":{},"119":{},"122":{},"134":{},"135":{},"136":{},"141":{},"143":{},"150":{},"151":{},"152":{},"161":{},"163":{},"165":{},"167":{},"176":{},"177":{},"183":{},"186":{},"192":{},"213":{},"225":{},"226":{},"235":{},"244":{},"246":{},"253":{},"256":{},"269":{},"271":{},"272":{}},"component":{}}],["date())).concat('.jpeg",{"_index":2540,"title":{},"name":{},"text":{"51":{}},"component":{}}],["date/tim",{"_index":5052,"title":{},"name":{},"text":{"141":{},"163":{}},"component":{}}],["date_of_accredit",{"_index":4669,"title":{},"name":{},"text":{"134":{}},"component":{}}],["date_receiv",{"_index":2572,"title":{},"name":{},"text":{"52":{}},"component":{}}],["date_termin",{"_index":2573,"title":{},"name":{},"text":{"52":{}},"component":{}}],["datecredopen",{"_index":5799,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["dateexecut",{"_index":4089,"title":{},"name":{},"text":{"83":{}},"component":{}}],["day",{"_index":1266,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"21":{},"50":{},"51":{},"62":{},"72":{},"73":{},"141":{},"165":{},"167":{},"213":{},"242":{},"253":{},"261":{},"269":{}},"component":{}}],["day.th",{"_index":1700,"title":{},"name":{},"text":{"21":{}},"component":{}}],["days.read",{"_index":3156,"title":{},"name":{},"text":{"62":{}},"component":{}}],["days.writ",{"_index":3158,"title":{},"name":{},"text":{"62":{}},"component":{}}],["daysafteriniti",{"_index":3365,"title":{},"name":{},"text":{"72":{}},"component":{}}],["db",{"_index":1271,"title":{"82-5":{},"83-5":{},"84-8":{},"207-3":{}},"name":{"138":{},"209":{}},"text":{"6":{},"21":{},"82":{},"83":{},"84":{},"128":{},"161":{},"183":{},"186":{},"207":{},"221":{},"230":{},"242":{},"258":{}},"component":{}}],["db.adoc",{"_index":6145,"title":{},"name":{},"text":{"209":{}},"component":{}}],["db_scale",{"_index":6514,"title":{},"name":{"258":{}},"text":{},"component":{}}],["dbeaver",{"_index":3203,"title":{},"name":{},"text":{"66":{}},"component":{}}],["dbm",{"_index":5487,"title":{},"name":{},"text":{"164":{},"168":{}},"component":{}}],["dbms=\"postgresql",{"_index":4865,"title":{},"name":{},"text":{"138":{}},"component":{}}],["dbname=registri",{"_index":1777,"title":{},"name":{},"text":{"21":{}},"component":{}}],["dbname={db_nam",{"_index":5661,"title":{},"name":{},"text":{"168":{}},"component":{}}],["dc",{"_index":4000,"title":{},"name":{},"text":{"80":{}},"component":{}}],["dd",{"_index":4052,"title":{},"name":{},"text":{"83":{},"141":{},"165":{},"167":{}},"component":{}}],["dd/mm/yyyi",{"_index":5499,"title":{},"name":{},"text":{"165":{}},"component":{}}],["ddf4a935ec35",{"_index":5634,"title":{},"name":{},"text":{"167":{}},"component":{}}],["ddm",{"_index":2161,"title":{"84":{}},"name":{"167":{}},"text":{"47":{},"56":{},"73":{},"83":{},"84":{},"167":{},"168":{},"183":{},"186":{},"189":{},"191":{},"193":{},"194":{},"195":{},"196":{},"198":{},"204":{},"208":{},"244":{},"250":{},"257":{},"266":{}},"component":{}}],["ddm.projects.epam.com",{"_index":5881,"title":{},"name":{},"text":{"195":{}},"component":{}}],["ddm.projects.epam.com/api/gateway/busi",{"_index":5714,"title":{},"name":{},"text":{"179":{}},"component":{}}],["ddm.projects.epam.com/api/process",{"_index":6350,"title":{},"name":{},"text":{"231":{}},"component":{}}],["ddm.projects.epam.com/api/task",{"_index":6355,"title":{},"name":{},"text":{"231":{}},"component":{}}],["ddm.projects.epam.com/auth/realms/cons",{"_index":5686,"title":{},"name":{},"text":{"179":{}},"component":{}}],["ddm.projects.epam.com/auth/realms/mdtu",{"_index":5946,"title":{},"name":{},"text":{"196":{}},"component":{}}],["ddm.projects.epam.com/get",{"_index":5588,"title":{},"name":{},"text":{"167":{}},"component":{}}],["ddm.projects.epam.com/repository/extensions/com/epam/digital/data/platform/liquibas",{"_index":6430,"title":{},"name":{},"text":{"244":{}},"component":{}}],["ddm.projects.epam.com:6443",{"_index":1634,"title":{},"name":{},"text":{"18":{},"63":{}},"component":{}}],["ddm/data",{"_index":2709,"title":{},"name":{},"text":{"56":{},"204":{}},"component":{}}],["ddm/devops/operators/gerrit",{"_index":6060,"title":{},"name":{},"text":{"204":{}},"component":{}}],["ddm/general/ddm",{"_index":5849,"title":{},"name":{},"text":{"194":{}},"component":{}}],["ddm/general/kong",{"_index":6018,"title":{},"name":{},"text":{"199":{}},"component":{}}],["ddm/infrastructure/servic",{"_index":6000,"title":{},"name":{},"text":{"197":{}},"component":{}}],["ddm/low",{"_index":6055,"title":{},"name":{},"text":{"204":{}},"component":{}}],["ddm_application_id",{"_index":4068,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_business_act",{"_index":4072,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_business_activity_instance_id",{"_index":4073,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_business_process_definition_id",{"_index":4070,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_business_process_id",{"_index":4069,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_business_process_instance_id",{"_index":4071,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_created_at",{"_index":961,"title":{},"name":{},"text":{"5":{},"83":{}},"component":{}}],["ddm_created_bi",{"_index":4064,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_db_change_loglock",{"_index":5668,"title":{},"name":{},"text":{"168":{}},"component":{}}],["ddm_db_changelog",{"_index":5667,"title":{},"name":{},"text":{"168":{}},"component":{}}],["ddm_digital_sign",{"_index":4074,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_digital_sign_checksum",{"_index":4076,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_digital_sign_deriv",{"_index":4075,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_digital_sign_derived_checksum",{"_index":4077,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_dml_op",{"_index":4065,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_liquibas",{"_index":4144,"title":{},"name":{},"text":{"84":{}},"component":{}}],["ddm_liquibase_metadata",{"_index":4101,"title":{"84-9":{},"209-4":{}},"name":{},"text":{"167":{},"209":{},"257":{}},"component":{}}],["ddm_liquibase_metadata(change_typ",{"_index":4086,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_rls_metadata",{"_index":4102,"title":{"84-12":{},"209-5":{}},"name":{},"text":{"84":{},"209":{}},"component":{}}],["ddm_role_permiss",{"_index":4103,"title":{"84-15":{},"209-6":{}},"name":{},"text":{"84":{},"209":{}},"component":{}}],["ddm_source_appl",{"_index":6137,"title":{"209-7":{}},"name":{},"text":{"209":{}},"component":{}}],["ddm_source_business_process",{"_index":6138,"title":{"209-8":{}},"name":{},"text":{"209":{}},"component":{}}],["ddm_source_system",{"_index":6139,"title":{"209-9":{}},"name":{},"text":{"209":{}},"component":{}}],["ddm_system_id",{"_index":4067,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddm_updated_at",{"_index":962,"title":{},"name":{},"text":{"5":{},"83":{}},"component":{}}],["ddm_updated_bi",{"_index":4083,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddmmyyyi",{"_index":4087,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ddo",{"_index":6838,"title":{},"name":{},"text":{"272":{}},"component":{}}],["deactiv",{"_index":5139,"title":{"144-2":{}},"name":{},"text":{"144":{}},"component":{}}],["deadlin",{"_index":1229,"title":{},"name":{},"text":{"6":{}},"component":{}}],["deal",{"_index":6140,"title":{},"name":{},"text":{"209":{}},"component":{}}],["dearmor",{"_index":3647,"title":{},"name":{},"text":{"73":{}},"component":{}}],["death",{"_index":2742,"title":{},"name":{},"text":{"57":{}},"component":{}}],["deb",{"_index":3649,"title":{},"name":{},"text":{"73":{}},"component":{}}],["debit",{"_index":6603,"title":{},"name":{},"text":{"260":{}},"component":{}}],["debt",{"_index":1025,"title":{"6-10":{}},"name":{},"text":{"6":{}},"component":{}}],["debug",{"_index":1572,"title":{"229-2":{}},"name":{},"text":{"14":{},"56":{},"63":{},"65":{},"66":{},"128":{},"196":{},"229":{}},"component":{}}],["decentr",{"_index":105,"title":{},"name":{},"text":{"1":{},"44":{}},"component":{}}],["decid",{"_index":2651,"title":{},"name":{},"text":{"55":{},"80":{},"254":{},"270":{},"272":{}},"component":{}}],["decis",{"_index":414,"title":{"102":{},"60-14":{},"216-11":{},"270-9":{}},"name":{},"text":{"2":{},"6":{},"59":{},"60":{},"67":{},"108":{},"125":{},"132":{},"214":{},"216":{},"217":{},"223":{},"270":{}},"component":{}}],["declar",{"_index":171,"title":{},"name":{},"text":{"1":{},"6":{},"45":{},"81":{},"167":{},"202":{},"204":{},"258":{}},"component":{}}],["decod",{"_index":2175,"title":{},"name":{},"text":{"47":{},"67":{},"179":{},"269":{}},"component":{}}],["decodehead",{"_index":5971,"title":{},"name":{},"text":{"196":{}},"component":{}}],["decommiss",{"_index":5930,"title":{},"name":{},"text":{"195":{}},"component":{}}],["decompos",{"_index":1337,"title":{},"name":{},"text":{"6":{}},"component":{}}],["decomposit",{"_index":1066,"title":{"268-8":{},"270-11":{}},"name":{},"text":{"6":{},"44":{},"48":{},"268":{},"270":{}},"component":{}}],["decreas",{"_index":4007,"title":{},"name":{},"text":{"81":{},"115":{},"258":{}},"component":{}}],["decrypt",{"_index":3918,"title":{},"name":{},"text":{"78":{}},"component":{}}],["dedic",{"_index":94,"title":{},"name":{},"text":{"1":{},"47":{},"55":{},"58":{},"67":{},"73":{},"99":{},"125":{},"127":{},"161":{},"195":{},"205":{},"217":{}},"component":{}}],["dedupl",{"_index":3346,"title":{},"name":{},"text":{"67":{}},"component":{}}],["deep",{"_index":185,"title":{},"name":{},"text":{"1":{},"81":{}},"component":{}}],["deepen",{"_index":3216,"title":{},"name":{},"text":{"66":{},"135":{},"136":{},"137":{}},"component":{}}],["deepli",{"_index":3347,"title":{},"name":{},"text":{"67":{}},"component":{}}],["def",{"_index":2541,"title":{},"name":{},"text":{"51":{},"52":{},"58":{},"140":{},"141":{},"154":{},"159":{},"161":{},"162":{},"262":{},"269":{}},"component":{}}],["default",{"_index":1480,"title":{},"name":{},"text":{"9":{},"10":{},"16":{},"21":{},"30":{},"31":{},"34":{},"55":{},"56":{},"57":{},"59":{},"61":{},"62":{},"73":{},"75":{},"76":{},"80":{},"83":{},"84":{},"99":{},"101":{},"103":{},"104":{},"107":{},"115":{},"119":{},"120":{},"125":{},"126":{},"127":{},"128":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"151":{},"152":{},"154":{},"159":{},"161":{},"165":{},"167":{},"173":{},"179":{},"186":{},"189":{},"196":{},"205":{},"211":{},"212":{},"216":{},"218":{},"221":{},"222":{},"227":{},"229":{},"230":{},"232":{},"233":{},"237":{},"242":{},"253":{},"254":{},"255":{},"259":{},"260":{},"267":{},"269":{},"272":{}},"component":{}}],["default[1",{"_index":1890,"title":{},"name":{},"text":{"25":{}},"component":{}}],["defaultcertif",{"_index":3810,"title":{},"name":{},"text":{"73":{}},"component":{}}],["defaultvaluecomput",{"_index":4811,"title":{},"name":{},"text":{"138":{}},"component":{}}],["defect",{"_index":1294,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["defectdojo",{"_index":3345,"title":{},"name":{},"text":{"67":{}},"component":{}}],["defin",{"_index":133,"title":{"155-2":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"12":{},"16":{},"21":{},"30":{},"43":{},"48":{},"49":{},"51":{},"52":{},"55":{},"57":{},"58":{},"59":{},"66":{},"69":{},"70":{},"72":{},"75":{},"81":{},"83":{},"84":{},"99":{},"105":{},"108":{},"115":{},"118":{},"119":{},"123":{},"125":{},"127":{},"128":{},"131":{},"132":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"154":{},"155":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"181":{},"186":{},"188":{},"189":{},"195":{},"202":{},"205":{},"210":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"221":{},"225":{},"226":{},"227":{},"229":{},"231":{},"247":{},"254":{},"257":{},"260":{},"261":{}},"component":{}}],["defineactionact",{"_index":2601,"title":{},"name":{},"text":{"52":{}},"component":{}}],["definebusinessprocessstatusact",{"_index":5036,"title":{},"name":{},"text":{"141":{}},"component":{}}],["defineprocessexcerptiddeleg",{"_index":5327,"title":{},"name":{},"text":{"159":{}},"component":{}}],["definit",{"_index":1038,"title":{"6-17":{},"6-18":{},"86-1":{}},"name":{},"text":{"6":{},"22":{},"44":{},"51":{},"60":{},"73":{},"80":{},"81":{},"125":{},"154":{},"155":{},"159":{},"161":{},"195":{},"213":{},"218":{},"222":{},"258":{}},"component":{}}],["degrad",{"_index":6854,"title":{},"name":{},"text":{"272":{}},"component":{}}],["degre",{"_index":6127,"title":{},"name":{},"text":{"205":{}},"component":{}}],["delay",{"_index":2615,"title":{},"name":{},"text":{"52":{}},"component":{}}],["delayafteradd",{"_index":3963,"title":{},"name":{},"text":{"80":{}},"component":{}}],["delayafterdelet",{"_index":3965,"title":{},"name":{},"text":{"80":{}},"component":{}}],["delayafterfailur",{"_index":3967,"title":{},"name":{},"text":{"80":{}},"component":{}}],["deleg",{"_index":2181,"title":{"104-4":{},"183-6":{},"186-6":{},"269-9":{},"269-10":{},"271-11":{}},"name":{},"text":{"47":{},"52":{},"57":{},"58":{},"59":{},"73":{},"103":{},"104":{},"105":{},"124":{},"140":{},"154":{},"155":{},"158":{},"159":{},"161":{},"181":{},"183":{},"186":{},"212":{},"216":{},"220":{},"221":{},"222":{},"260":{},"264":{},"269":{},"271":{}},"component":{}}],["delet",{"_index":662,"title":{"35":{},"235":{},"18-2":{},"60-11":{},"125-8":{},"167-20":{},"167-25":{},"167-27":{},"167-33":{},"237-7":{}},"name":{"235":{}},"text":{"4":{},"15":{},"16":{},"18":{},"21":{},"28":{},"29":{},"31":{},"35":{},"37":{},"40":{},"45":{},"57":{},"59":{},"60":{},"72":{},"73":{},"75":{},"80":{},"81":{},"84":{},"99":{},"101":{},"105":{},"115":{},"122":{},"124":{},"125":{},"128":{},"141":{},"142":{},"161":{},"163":{},"167":{},"168":{},"193":{},"205":{},"207":{},"208":{},"209":{},"223":{},"226":{},"227":{},"232":{},"235":{},"237":{},"238":{},"242":{},"251":{},"253":{},"254":{},"255":{},"258":{},"268":{},"272":{}},"component":{}}],["delete_registry_regulations_gerrit_repositori",{"_index":4619,"title":{},"name":{},"text":{"128":{}},"component":{}}],["deleteasyncload",{"_index":6786,"title":{},"name":{},"text":{"271":{}},"component":{}}],["delim",{"_index":4335,"title":{},"name":{},"text":{"107":{}},"component":{}}],["delimit",{"_index":4206,"title":{},"name":{},"text":{"99":{},"108":{}},"component":{}}],["delin",{"_index":4201,"title":{},"name":{},"text":{"99":{}},"component":{}}],["deliv",{"_index":22,"title":{},"name":{},"text":{"1":{},"2":{},"25":{},"44":{},"86":{}},"component":{}}],["deliveri",{"_index":338,"title":{"6-12":{}},"name":{},"text":{"2":{},"6":{},"183":{},"186":{}},"component":{}}],["demand",{"_index":2115,"title":{},"name":{},"text":{"44":{},"49":{},"73":{},"81":{},"99":{}},"component":{}}],["demarc",{"_index":4207,"title":{},"name":{},"text":{"99":{}},"component":{}}],["demo",{"_index":2011,"title":{"57":{},"266":{},"57-1":{},"57-2":{},"266-6":{}},"name":{"266":{}},"text":{"32":{},"51":{},"52":{},"57":{},"59":{},"124":{},"131":{},"179":{},"181":{},"266":{}},"component":{}}],["demo.apps.cicd2.mdtu",{"_index":5587,"title":{},"name":{},"text":{"167":{}},"component":{}}],["demonstr",{"_index":1292,"title":{},"name":{},"text":{"6":{},"51":{},"52":{},"141":{},"144":{},"145":{},"225":{},"238":{}},"component":{}}],["demot",{"_index":2055,"title":{},"name":{},"text":{"34":{}},"component":{}}],["deni",{"_index":3360,"title":{},"name":{},"text":{"72":{},"196":{}},"component":{}}],["denorm",{"_index":6079,"title":{},"name":{},"text":{"205":{}},"component":{}}],["denot",{"_index":4392,"title":{},"name":{},"text":{"107":{}},"component":{}}],["dens",{"_index":1083,"title":{},"name":{},"text":{"6":{}},"component":{}}],["depart",{"_index":2909,"title":{},"name":{},"text":{"59":{},"73":{},"108":{}},"component":{}}],["depend",{"_index":432,"title":{"141":{},"254":{},"66-12":{},"231-2":{}},"name":{"141":{}},"text":{"2":{},"6":{},"30":{},"32":{},"46":{},"52":{},"59":{},"66":{},"67":{},"70":{},"73":{},"78":{},"81":{},"108":{},"120":{},"124":{},"128":{},"140":{},"141":{},"150":{},"155":{},"164":{},"165":{},"166":{},"167":{},"182":{},"183":{},"186":{},"191":{},"195":{},"205":{},"229":{},"231":{},"254":{},"264":{},"271":{},"272":{}},"component":{}}],["depict",{"_index":5830,"title":{},"name":{},"text":{"190":{},"194":{},"253":{}},"component":{}}],["deploy",{"_index":11,"title":{"30":{},"56":{},"57":{},"73":{},"74":{},"129":{},"189":{},"191":{},"266":{},"1-4":{},"30-3":{},"30-12":{},"31-3":{},"32-6":{},"32-19":{},"49-14":{},"56-2":{},"57-1":{},"58-4":{},"60-16":{},"66-3":{},"73-13":{},"73-26":{},"73-28":{},"73-29":{},"73-33":{},"73-34":{},"73-35":{},"73-42":{},"73-43":{},"73-46":{},"73-49":{},"73-52":{},"86-2":{},"242-9":{},"242-10":{},"266-6":{},"272-10":{}},"name":{"57":{},"73":{},"74":{},"129":{},"189":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"14":{},"16":{},"17":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"41":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"73":{},"74":{},"75":{},"78":{},"80":{},"81":{},"84":{},"85":{},"86":{},"87":{},"104":{},"115":{},"117":{},"118":{},"122":{},"124":{},"125":{},"128":{},"129":{},"130":{},"131":{},"132":{},"138":{},"139":{},"140":{},"141":{},"142":{},"153":{},"162":{},"164":{},"165":{},"167":{},"168":{},"175":{},"176":{},"177":{},"179":{},"181":{},"184":{},"186":{},"188":{},"189":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"201":{},"202":{},"204":{},"205":{},"208":{},"209":{},"220":{},"221":{},"222":{},"237":{},"242":{},"244":{},"249":{},"250":{},"251":{},"254":{},"255":{},"257":{},"258":{},"266":{},"270":{},"272":{}},"component":{}}],["deploy/registri",{"_index":4635,"title":{},"name":{},"text":{"129":{},"130":{}},"component":{}}],["deployment.adoc",{"_index":2122,"title":{},"name":{},"text":{"44":{},"66":{},"74":{},"132":{}},"component":{}}],["deployment/platform",{"_index":3878,"title":{},"name":{},"text":{"74":{}},"component":{}}],["deployment_id",{"_index":4093,"title":{},"name":{},"text":{"83":{}},"component":{}}],["deployment_mod",{"_index":3834,"title":{},"name":{},"text":{"73":{},"128":{}},"component":{}}],["deploymentconfig",{"_index":3934,"title":{},"name":{},"text":{"80":{}},"component":{}}],["deploymentmod",{"_index":2697,"title":{},"name":{},"text":{"56":{},"73":{},"189":{}},"component":{}}],["deprec",{"_index":2046,"title":{},"name":{},"text":{"33":{},"47":{}},"component":{}}],["depth",{"_index":1722,"title":{},"name":{},"text":{"21":{},"41":{},"66":{},"134":{},"137":{}},"component":{}}],["deriv",{"_index":309,"title":{},"name":{},"text":{"2":{},"52":{},"140":{},"159":{},"161":{},"271":{}},"component":{}}],["derivedfil",{"_index":6789,"title":{},"name":{},"text":{"271":{}},"component":{}}],["desc",{"_index":6090,"title":{},"name":{},"text":{"205":{},"242":{}},"component":{}}],["desc(endtim",{"_index":6089,"title":{},"name":{},"text":{"205":{}},"component":{}}],["descend",{"_index":5162,"title":{},"name":{},"text":{"150":{},"151":{},"152":{},"224":{},"240":{},"242":{},"246":{}},"component":{}}],["describ",{"_index":717,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"22":{},"23":{},"30":{},"37":{},"44":{},"49":{},"52":{},"55":{},"57":{},"59":{},"65":{},"73":{},"75":{},"84":{},"99":{},"103":{},"104":{},"107":{},"108":{},"113":{},"116":{},"119":{},"125":{},"139":{},"141":{},"155":{},"159":{},"162":{},"164":{},"167":{},"175":{},"202":{},"204":{},"211":{},"258":{},"261":{},"262":{},"270":{}},"component":{}}],["descrip",{"_index":6177,"title":{},"name":{},"text":{"212":{}},"component":{}}],["descript",{"_index":172,"title":{"86":{},"14-1":{},"15-1":{},"16-1":{},"19-1":{},"19-2":{},"56-1":{},"57-2":{},"58-1":{},"61-1":{},"65-1":{},"67-8":{},"73-14":{},"73-44":{},"73-47":{},"73-50":{},"73-53":{},"81-1":{},"82-4":{},"83-4":{},"85-1":{},"86-4":{},"87-1":{},"88-1":{},"115-1":{},"117-1":{},"119-1":{},"123-1":{},"124-1":{},"177-1":{},"194-1":{},"197-1":{},"199-1":{},"200-1":{},"201-1":{},"206-1":{},"208-1":{},"209-1":{},"226-1":{},"253-1":{},"254-1":{},"255-1":{},"262-1":{},"266-1":{},"271-1":{},"272-1":{}},"name":{"106":{}},"text":{"1":{},"2":{},"4":{},"6":{},"14":{},"15":{},"16":{},"23":{},"25":{},"30":{},"31":{},"32":{},"44":{},"45":{},"49":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"65":{},"66":{},"67":{},"70":{},"73":{},"81":{},"82":{},"83":{},"84":{},"85":{},"88":{},"100":{},"103":{},"105":{},"107":{},"108":{},"113":{},"115":{},"117":{},"119":{},"120":{},"123":{},"124":{},"128":{},"132":{},"134":{},"135":{},"136":{},"139":{},"141":{},"142":{},"143":{},"151":{},"155":{},"159":{},"163":{},"167":{},"168":{},"169":{},"175":{},"176":{},"177":{},"179":{},"181":{},"191":{},"194":{},"195":{},"197":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"208":{},"209":{},"211":{},"218":{},"223":{},"226":{},"230":{},"242":{},"244":{},"253":{},"254":{},"255":{},"258":{},"262":{},"264":{},"265":{},"266":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["design",{"_index":21,"title":{"98":{},"6-4":{},"85-3":{},"87-2":{},"88-3":{},"153-2":{},"164-7":{},"188-1":{},"188-2":{},"189-2":{},"190-2":{},"191-3":{},"192-2":{},"193-1":{},"193-5":{},"194-3":{},"195-4":{},"195-8":{},"195-10":{},"197-3":{},"199-3":{},"201-2":{},"201-4":{},"204-3":{},"205-3":{},"205-4":{},"208-3":{},"249-1":{},"249-2":{},"250-1":{},"252-1":{},"253-5":{},"253-6":{},"254-5":{},"254-6":{},"255-5":{},"255-9":{},"255-10":{},"255-12":{},"256-4":{},"256-6":{},"256-7":{},"257-6":{},"257-9":{},"266-4":{},"266-7":{},"267-4":{},"267-6":{},"268-5":{},"269-12":{},"269-16":{},"269-20":{},"270-8":{},"271-5":{},"271-9":{},"272-5":{},"272-12":{}},"name":{"98":{},"249":{},"252":{}},"text":{"1":{},"2":{},"6":{},"44":{},"46":{},"48":{},"49":{},"67":{},"81":{},"85":{},"87":{},"88":{},"99":{},"124":{},"128":{},"140":{},"145":{},"153":{},"164":{},"186":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"199":{},"201":{},"202":{},"204":{},"208":{},"209":{},"242":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["desir",{"_index":877,"title":{},"name":{},"text":{"4":{},"19":{},"21":{},"23":{},"59":{},"70":{},"115":{},"173":{},"233":{},"235":{},"237":{},"240":{},"242":{}},"component":{}}],["desiredreplica",{"_index":3938,"title":{},"name":{},"text":{"80":{}},"component":{}}],["desktop",{"_index":1365,"title":{},"name":{},"text":{"6":{},"66":{},"262":{}},"component":{}}],["destin",{"_index":4238,"title":{},"name":{},"text":{"100":{},"254":{}},"component":{}}],["destinationrul",{"_index":6471,"title":{},"name":{},"text":{"254":{}},"component":{}}],["destroy",{"_index":1520,"title":{},"name":{},"text":{"12":{},"73":{}},"component":{}}],["destruct",{"_index":2131,"title":{},"name":{},"text":{"45":{}},"component":{}}],["detach",{"_index":6674,"title":{},"name":{},"text":{"269":{}},"component":{}}],["detail",{"_index":618,"title":{"31-2":{},"60-7":{},"142-4":{},"266-6":{}},"name":{},"text":{"4":{},"6":{},"12":{},"14":{},"16":{},"17":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"37":{},"50":{},"51":{},"52":{},"55":{},"58":{},"59":{},"60":{},"61":{},"65":{},"66":{},"68":{},"69":{},"73":{},"75":{},"81":{},"84":{},"100":{},"101":{},"104":{},"105":{},"107":{},"108":{},"111":{},"112":{},"113":{},"115":{},"117":{},"118":{},"119":{},"122":{},"123":{},"124":{},"127":{},"128":{},"131":{},"132":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"149":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"162":{},"164":{},"165":{},"167":{},"168":{},"171":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"195":{},"200":{},"205":{},"206":{},"211":{},"212":{},"218":{},"220":{},"229":{},"230":{},"234":{},"236":{},"240":{},"241":{},"242":{},"244":{},"260":{},"262":{},"264":{},"266":{},"269":{},"270":{},"271":{}},"component":{}}],["detaul",{"_index":6219,"title":{},"name":{},"text":{"216":{}},"component":{}}],["detect",{"_index":1295,"title":{},"name":{},"text":{"6":{},"21":{},"49":{},"67":{},"99":{},"119":{},"131":{},"195":{},"197":{},"208":{},"244":{}},"component":{}}],["deterior",{"_index":6853,"title":{},"name":{},"text":{"272":{}},"component":{}}],["determin",{"_index":1238,"title":{},"name":{},"text":{"6":{},"15":{},"44":{},"52":{},"59":{},"108":{},"113":{},"122":{},"128":{},"135":{},"136":{},"138":{},"140":{},"152":{},"159":{},"160":{},"167":{},"168":{},"195":{},"196":{},"197":{},"214":{},"224":{},"226":{},"227":{},"242":{},"244":{},"257":{}},"component":{}}],["dev",{"_index":2663,"title":{},"name":{"56":{},"189":{}},"text":{"55":{},"193":{},"242":{},"250":{}},"component":{}}],["dev/nul",{"_index":3658,"title":{},"name":{},"text":{"73":{}},"component":{}}],["develop",{"_index":64,"title":{"6":{},"66":{},"142":{},"189":{},"268":{},"6-1":{},"6-2":{},"6-11":{},"6-13":{},"6-28":{},"66-6":{},"99-9":{},"138-3":{},"138-19":{},"229-1":{},"253-8":{},"253-10":{},"254-7":{},"254-9":{},"255-13":{},"255-15":{},"256-9":{},"256-11":{},"257-13":{},"257-15":{},"266-8":{},"266-10":{},"267-15":{},"269-22":{},"269-24":{},"271-15":{},"271-17":{},"272-22":{},"272-24":{}},"name":{"268":{}},"text":{"1":{},"2":{},"6":{},"7":{},"23":{},"31":{},"44":{},"45":{},"46":{},"48":{},"49":{},"51":{},"52":{},"56":{},"57":{},"58":{},"59":{},"66":{},"67":{},"73":{},"81":{},"84":{},"85":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"105":{},"108":{},"111":{},"119":{},"125":{},"128":{},"131":{},"134":{},"135":{},"136":{},"137":{},"138":{},"142":{},"143":{},"150":{},"151":{},"152":{},"154":{},"155":{},"161":{},"163":{},"164":{},"167":{},"168":{},"179":{},"189":{},"191":{},"194":{},"197":{},"199":{},"202":{},"204":{},"208":{},"212":{},"216":{},"226":{},"229":{},"236":{},"237":{},"242":{},"244":{},"246":{},"253":{},"254":{},"255":{},"256":{},"257":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["develop:best",{"_index":2757,"title":{},"name":{},"text":{"57":{}},"component":{}}],["develop:bp",{"_index":4248,"title":{},"name":{},"text":{"100":{},"139":{},"140":{},"141":{},"157":{},"216":{}},"component":{}}],["develop:data",{"_index":4799,"title":{},"name":{},"text":{"138":{},"142":{},"167":{},"168":{},"170":{}},"component":{}}],["develop:registri",{"_index":932,"title":{},"name":{},"text":{"4":{},"30":{},"31":{},"66":{},"130":{},"132":{},"195":{}},"component":{}}],["developer’",{"_index":1315,"title":{},"name":{},"text":{"6":{},"78":{}},"component":{}}],["development,101.201",{"_index":3017,"title":{},"name":{},"text":{"59":{}},"component":{}}],["deviat",{"_index":6235,"title":{},"name":{},"text":{"218":{}},"component":{}}],["devic",{"_index":1665,"title":{},"name":{},"text":{"19":{},"73":{},"99":{},"188":{},"269":{}},"component":{}}],["deviceindex",{"_index":3985,"title":{},"name":{},"text":{"80":{}},"component":{}}],["deviceset",{"_index":1803,"title":{},"name":{},"text":{"22":{}},"component":{}}],["device|grep",{"_index":1660,"title":{},"name":{},"text":{"19":{}},"component":{}}],["devop",{"_index":1272,"title":{},"name":{},"text":{"6":{},"253":{},"254":{},"255":{},"256":{},"266":{},"267":{},"268":{},"270":{}},"component":{}}],["devot",{"_index":2096,"title":{},"name":{},"text":{"41":{}},"component":{}}],["devsecop",{"_index":1570,"title":{},"name":{},"text":{"14":{}},"component":{}}],["devtool",{"_index":6284,"title":{},"name":{},"text":{"229":{}},"component":{}}],["df5ce42cebb9",{"_index":5412,"title":{},"name":{},"text":{"161":{}},"component":{}}],["dgvzdcbkyxrh",{"_index":6692,"title":{},"name":{},"text":{"269":{}},"component":{}}],["dhcp",{"_index":1647,"title":{},"name":{},"text":{"19":{}},"component":{}}],["diagnos",{"_index":4447,"title":{},"name":{},"text":{"113":{}},"component":{}}],["diagram",{"_index":47,"title":{"84-7":{},"86-2":{},"86-3":{},"272-6":{}},"name":{},"text":{"1":{},"44":{},"46":{},"48":{},"52":{},"55":{},"59":{},"66":{},"84":{},"87":{},"103":{},"105":{},"108":{},"119":{},"132":{},"139":{},"140":{},"141":{},"153":{},"154":{},"159":{},"160":{},"161":{},"164":{},"188":{},"190":{},"191":{},"192":{},"193":{},"194":{},"201":{},"202":{},"204":{},"205":{},"210":{},"213":{},"214":{},"216":{},"217":{},"233":{},"234":{},"236":{},"238":{},"239":{},"241":{},"249":{},"252":{},"253":{},"254":{},"255":{},"262":{},"264":{},"265":{},"268":{},"270":{},"272":{}},"component":{}}],["dial",{"_index":3849,"title":{},"name":{},"text":{"73":{}},"component":{}}],["dialog",{"_index":4632,"title":{},"name":{},"text":{"129":{},"139":{},"141":{}},"component":{}}],["dialogu",{"_index":1414,"title":{"223":{}},"name":{},"text":{"8":{},"223":{}},"component":{}}],["dict_formy_vlasnosti.csv",{"_index":4874,"title":{},"name":{},"text":{"138":{}},"component":{}}],["dict_koatuu_workshop.csv",{"_index":4873,"title":{},"name":{},"text":{"138":{}},"component":{}}],["dict_status_spivrobitnyka.csv",{"_index":4875,"title":{},"name":{},"text":{"138":{}},"component":{}}],["dictionari",{"_index":2599,"title":{},"name":{},"text":{"52":{},"58":{},"138":{}},"component":{}}],["didn't",{"_index":3948,"title":{},"name":{},"text":{"80":{}},"component":{}}],["diff",{"_index":1724,"title":{},"name":{},"text":{"21":{}},"component":{}}],["differ",{"_index":110,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"9":{},"19":{},"21":{},"33":{},"36":{},"40":{},"41":{},"44":{},"52":{},"57":{},"58":{},"59":{},"61":{},"66":{},"67":{},"73":{},"75":{},"76":{},"78":{},"81":{},"87":{},"99":{},"107":{},"108":{},"115":{},"119":{},"122":{},"123":{},"125":{},"127":{},"135":{},"142":{},"152":{},"154":{},"164":{},"166":{},"167":{},"177":{},"188":{},"191":{},"194":{},"197":{},"199":{},"207":{},"210":{},"211":{},"216":{},"220":{},"225":{},"226":{},"227":{},"229":{},"231":{},"237":{},"244":{},"246":{},"247":{},"254":{},"255":{},"257":{},"258":{},"269":{}},"component":{}}],["differenti",{"_index":1705,"title":{},"name":{},"text":{"21":{},"44":{},"125":{},"140":{},"195":{},"213":{},"216":{}},"component":{}}],["dig_sign",{"_index":4472,"title":{},"name":{},"text":{"115":{}},"component":{}}],["digit",{"_index":25,"title":{"78":{},"105":{},"192":{},"202":{},"46-5":{},"52-11":{},"78-3":{},"78-4":{},"78-5":{},"78-6":{},"105-6":{}},"name":{"105":{}},"text":{"1":{},"2":{},"9":{},"12":{},"13":{},"28":{},"29":{},"30":{},"33":{},"37":{},"44":{},"45":{},"46":{},"47":{},"48":{},"52":{},"57":{},"58":{},"59":{},"65":{},"73":{},"75":{},"76":{},"78":{},"81":{},"86":{},"99":{},"103":{},"105":{},"108":{},"115":{},"119":{},"120":{},"140":{},"141":{},"144":{},"158":{},"159":{},"161":{},"184":{},"188":{},"192":{},"196":{},"198":{},"202":{},"204":{},"206":{},"208":{},"225":{},"227":{},"234":{},"247":{},"271":{}},"component":{}}],["digitaldocuments.maxfiles",{"_index":4314,"title":{},"name":{},"text":{"105":{}},"component":{}}],["diia",{"_index":344,"title":{"46-7":{}},"name":{},"text":{"2":{},"46":{},"57":{},"59":{},"104":{},"183":{},"186":{},"195":{},"202":{}},"component":{}}],["diia\",102.205",{"_index":3029,"title":{},"name":{},"text":{"59":{}},"component":{}}],["diia.gov.ua",{"_index":2135,"title":{"46-7":{}},"name":{},"text":{"46":{}},"component":{}}],["diia.sign",{"_index":4475,"title":{},"name":{},"text":{"115":{}},"component":{}}],["diia.signatur",{"_index":475,"title":{},"name":{},"text":{"2":{}},"component":{}}],["diia_id",{"_index":4474,"title":{},"name":{},"text":{"115":{}},"component":{}}],["diploma",{"_index":4269,"title":{},"name":{},"text":{"103":{},"242":{}},"component":{}}],["dir",{"_index":3767,"title":{},"name":{},"text":{"73":{}},"component":{}}],["direct",{"_index":335,"title":{},"name":{},"text":{"2":{},"46":{},"52":{},"58":{},"113":{},"123":{},"124":{},"138":{},"168":{},"176":{},"188":{},"209":{},"214":{},"241":{},"247":{},"264":{}},"component":{}}],["directli",{"_index":545,"title":{},"name":{},"text":{"2":{},"4":{},"45":{},"58":{},"59":{},"67":{},"99":{},"128":{},"140":{},"154":{},"155":{},"160":{},"168":{},"177":{},"205":{},"207":{},"208":{},"221":{},"222":{},"230":{},"244":{},"264":{},"265":{},"268":{},"270":{}},"component":{}}],["directori",{"_index":679,"title":{"140-24":{},"142-5":{},"142-6":{}},"name":{},"text":{"4":{},"12":{},"17":{},"52":{},"57":{},"61":{},"66":{},"67":{},"73":{},"103":{},"107":{},"108":{},"119":{},"129":{},"131":{},"132":{},"133":{},"138":{},"140":{},"141":{},"142":{},"159":{},"165":{},"183":{},"184":{},"186":{},"202":{},"209":{},"222":{},"237":{},"244":{}},"component":{}}],["directory/fil",{"_index":4651,"title":{},"name":{},"text":{"132":{}},"component":{}}],["directremoteip",{"_index":5992,"title":{},"name":{},"text":{"196":{}},"component":{}}],["disabl",{"_index":728,"title":{"32-27":{}},"name":{},"text":{"4":{},"21":{},"25":{},"30":{},"32":{},"76":{},"99":{},"103":{},"117":{},"139":{},"140":{},"141":{},"144":{},"167":{},"230":{},"244":{},"253":{},"258":{},"272":{}},"component":{}}],["disable_renew",{"_index":849,"title":{},"name":{},"text":{"4":{}},"component":{}}],["disadvantag",{"_index":5851,"title":{"195-7":{},"255-8":{},"256-5":{}},"name":{},"text":{"195":{},"255":{},"256":{}},"component":{}}],["disallow",{"_index":4485,"title":{},"name":{},"text":{"117":{}},"component":{}}],["disallow_to_failov",{"_index":6569,"title":{},"name":{},"text":{"258":{}},"component":{}}],["disappear",{"_index":4444,"title":{},"name":{},"text":{"113":{}},"component":{}}],["disast",{"_index":1551,"title":{},"name":{},"text":{"14":{},"21":{}},"component":{}}],["discard",{"_index":6415,"title":{},"name":{},"text":{"244":{}},"component":{}}],["disclaim",{"_index":6454,"title":{},"name":{},"text":{"253":{}},"component":{}}],["disclosur",{"_index":3270,"title":{},"name":{},"text":{"67":{}},"component":{}}],["discov",{"_index":3303,"title":{},"name":{},"text":{"67":{},"108":{},"119":{},"127":{}},"component":{}}],["discoveri",{"_index":6494,"title":{},"name":{},"text":{"255":{}},"component":{}}],["discrep",{"_index":1439,"title":{},"name":{},"text":{"9":{}},"component":{}}],["discret",{"_index":3154,"title":{},"name":{},"text":{"62":{}},"component":{}}],["discrimin",{"_index":6152,"title":{},"name":{},"text":{"209":{}},"component":{}}],["discuss",{"_index":1391,"title":{},"name":{},"text":{"6":{},"52":{}},"component":{}}],["disk",{"_index":867,"title":{"23-3":{}},"name":{},"text":{"4":{},"22":{},"23":{},"50":{},"128":{}},"component":{}}],["dismissald",{"_index":5058,"title":{},"name":{},"text":{"141":{}},"component":{}}],["dispatch",{"_index":2740,"title":{},"name":{},"text":{"57":{}},"component":{}}],["displac",{"_index":5866,"title":{},"name":{},"text":{"195":{}},"component":{}}],["display",{"_index":1350,"title":{"52-5":{},"55-8":{},"141-10":{},"141-22":{},"159-10":{},"160-8":{},"216-17":{},"244-6":{}},"name":{},"text":{"6":{},"13":{},"15":{},"18":{},"30":{},"32":{},"46":{},"52":{},"55":{},"58":{},"63":{},"69":{},"70":{},"73":{},"75":{},"84":{},"86":{},"100":{},"103":{},"105":{},"119":{},"120":{},"131":{},"135":{},"139":{},"140":{},"141":{},"142":{},"143":{},"150":{},"151":{},"152":{},"154":{},"159":{},"160":{},"163":{},"173":{},"182":{},"188":{},"193":{},"197":{},"202":{},"216":{},"223":{},"224":{},"226":{},"227":{},"230":{},"231":{},"234":{},"237":{},"242":{},"244":{},"249":{},"251":{},"252":{},"254":{},"262":{},"270":{},"272":{}},"component":{}}],["displaynam",{"_index":1162,"title":{},"name":{},"text":{"6":{}},"component":{}}],["dispos",{"_index":1735,"title":{"99-16":{}},"name":{},"text":{"21":{},"67":{},"99":{}},"component":{}}],["disput",{"_index":5776,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["disrupt",{"_index":4174,"title":{},"name":{},"text":{"87":{},"238":{}},"component":{}}],["distinct",{"_index":88,"title":{},"name":{},"text":{"1":{},"107":{}},"component":{}}],["distinguish",{"_index":2690,"title":{},"name":{},"text":{"56":{},"160":{},"269":{}},"component":{}}],["distribut",{"_index":298,"title":{},"name":{},"text":{"2":{},"14":{},"21":{},"22":{},"23":{},"24":{},"29":{},"30":{},"32":{},"34":{},"44":{},"45":{},"48":{},"49":{},"50":{},"52":{},"73":{},"76":{},"81":{},"84":{},"104":{},"154":{},"168":{},"182":{},"191":{},"195":{},"197":{},"200":{},"203":{},"206":{},"258":{}},"component":{}}],["distributet",{"_index":4120,"title":{},"name":{},"text":{"84":{}},"component":{}}],["district",{"_index":4505,"title":{},"name":{},"text":{"119":{},"120":{},"158":{}},"component":{}}],["dive",{"_index":186,"title":{},"name":{},"text":{"1":{}},"component":{}}],["divid",{"_index":1216,"title":{},"name":{},"text":{"6":{},"25":{},"32":{},"42":{},"43":{},"46":{},"69":{},"70":{},"78":{},"124":{},"143":{},"145":{},"151":{},"152":{},"188":{},"204":{},"237":{},"248":{},"256":{}},"component":{}}],["divis",{"_index":2914,"title":{},"name":{},"text":{"59":{},"151":{},"152":{}},"component":{}}],["diya",{"_index":6045,"title":{},"name":{},"text":{"202":{}},"component":{}}],["dkim",{"_index":1878,"title":{},"name":{},"text":{"25":{}},"component":{}}],["dmn",{"_index":180,"title":{},"name":{},"text":{"1":{},"2":{},"49":{},"132":{},"202":{}},"component":{}}],["dmytro",{"_index":4741,"title":{},"name":{},"text":{"135":{}},"component":{}}],["dn",{"_index":439,"title":{"75":{},"76":{},"77":{},"188":{},"25-2":{},"25-3":{},"25-4":{},"30-7":{},"75-2":{},"75-3":{},"76-2":{},"76-4":{},"76-5":{},"255-6":{},"255-7":{}},"name":{"75":{},"76":{},"77":{},"188":{},"247":{},"248":{},"249":{}},"text":{"2":{},"4":{},"25":{},"30":{},"31":{},"32":{},"37":{},"40":{},"65":{},"73":{},"75":{},"76":{},"77":{},"188":{},"194":{},"247":{},"248":{},"255":{},"258":{},"269":{}},"component":{}}],["dn_edrpou",{"_index":4659,"title":{},"name":{},"text":{"134":{}},"component":{}}],["dns.googl",{"_index":5827,"title":{},"name":{},"text":{"188":{},"247":{}},"component":{}}],["dns_aw",{"_index":3798,"title":{},"name":{},"text":{"73":{}},"component":{}}],["dns_wildcard",{"_index":1858,"title":{},"name":{},"text":{"25":{},"40":{}},"component":{}}],["dnswildcard/report",{"_index":2020,"title":{},"name":{},"text":{"32":{}},"component":{}}],["do",{"_index":4210,"title":{},"name":{},"text":{"99":{},"253":{}},"component":{}}],["doc",{"_index":4297,"title":{},"name":{"105":{}},"text":{"141":{},"169":{}},"component":{}}],["doc_typ",{"_index":4686,"title":{},"name":{},"text":{"135":{}},"component":{}}],["doc_type_contain",{"_index":4722,"title":{},"name":{},"text":{"135":{}},"component":{}}],["doc_type_id",{"_index":4685,"title":{},"name":{},"text":{"135":{}},"component":{}}],["docker",{"_index":485,"title":{"73-11":{}},"name":{},"text":{"2":{},"6":{},"73":{},"86":{},"193":{},"250":{}},"component":{}}],["document",{"_index":205,"title":{"11":{},"44":{},"68":{},"105":{},"32-7":{},"44-7":{},"49-65":{},"105-6":{},"141-10":{},"272-15":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"12":{},"14":{},"19":{},"22":{},"24":{},"26":{},"31":{},"32":{},"40":{},"44":{},"47":{},"49":{},"57":{},"58":{},"59":{},"61":{},"66":{},"68":{},"69":{},"72":{},"73":{},"74":{},"78":{},"79":{},"83":{},"99":{},"105":{},"106":{},"124":{},"125":{},"131":{},"135":{},"138":{},"140":{},"141":{},"148":{},"149":{},"155":{},"159":{},"161":{},"164":{},"165":{},"167":{},"173":{},"183":{},"184":{},"186":{},"189":{},"190":{},"192":{},"194":{},"198":{},"200":{},"201":{},"202":{},"203":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"225":{},"227":{},"234":{},"244":{},"266":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["document_registr",{"_index":2991,"title":{},"name":{},"text":{"59":{}},"component":{}}],["document_series_numb",{"_index":4689,"title":{},"name":{},"text":{"135":{}},"component":{}}],["documentmetadata",{"_index":2542,"title":{},"name":{},"text":{"51":{},"105":{}},"component":{}}],["documentmetadata.checksum",{"_index":2550,"title":{},"name":{},"text":{"51":{}},"component":{}}],["documentmetadata.id",{"_index":2548,"title":{},"name":{},"text":{"51":{}},"component":{}}],["documents.adoc",{"_index":4323,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["docx",{"_index":1523,"title":{"61":{},"149":{},"159":{},"61-4":{},"149-1":{},"149-2":{}},"name":{"61":{},"149":{},"159":{}},"text":{"12":{},"61":{},"132":{},"147":{},"149":{},"159":{},"198":{},"202":{}},"component":{}}],["docx.docx",{"_index":3102,"title":{},"name":{},"text":{"61":{}},"component":{}}],["docx/mi",{"_index":3101,"title":{},"name":{},"text":{"61":{}},"component":{}}],["dod",{"_index":1042,"title":{"6-18":{}},"name":{},"text":{"6":{}},"component":{}}],["doe",{"_index":901,"title":{},"name":{},"text":{"4":{}},"component":{}}],["doesn’t",{"_index":1728,"title":{},"name":{},"text":{"21":{},"84":{},"99":{},"260":{}},"component":{}}],["dolor",{"_index":6329,"title":{},"name":{},"text":{"231":{}},"component":{}}],["domain",{"_index":437,"title":{"73-6":{}},"name":{},"text":{"2":{},"6":{},"25":{},"29":{},"40":{},"47":{},"65":{},"73":{},"75":{},"76":{},"84":{},"141":{},"160":{},"164":{},"167":{},"173":{},"182":{},"188":{},"247":{},"248":{},"253":{},"255":{}},"component":{}}],["domain/subdomain",{"_index":5817,"title":{},"name":{},"text":{"188":{},"248":{}},"component":{}}],["done",{"_index":706,"title":{"6-18":{}},"name":{},"text":{"4":{},"6":{},"16":{},"22":{},"29":{},"33":{},"39":{},"52":{},"55":{},"105":{},"108":{},"111":{},"119":{},"124":{},"127":{},"142":{},"154":{},"161":{},"171":{},"173":{},"177":{},"181":{},"207":{},"255":{}},"component":{}}],["don’t",{"_index":882,"title":{},"name":{},"text":{"4":{},"21":{},"48":{},"52":{},"127":{},"138":{},"139":{},"141":{},"142":{},"161":{},"167":{},"168":{}},"component":{}}],["dor",{"_index":1040,"title":{"6-17":{}},"name":{},"text":{"6":{}},"component":{}}],["doslidgen.csv",{"_index":4366,"title":{},"name":{},"text":{"107":{}},"component":{}}],["dot",{"_index":1924,"title":{},"name":{},"text":{"28":{},"30":{},"52":{},"226":{}},"component":{}}],["doubl",{"_index":746,"title":{},"name":{},"text":{"4":{},"25":{},"30":{},"175":{},"262":{}},"component":{}}],["dovecot",{"_index":2410,"title":{},"name":{},"text":{"49":{}},"component":{}}],["dovilni.csv",{"_index":4387,"title":{},"name":{},"text":{"107":{}},"component":{}}],["down",{"_index":354,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"16":{},"21":{},"30":{},"31":{},"34":{},"36":{},"42":{},"43":{},"58":{},"67":{},"73":{},"81":{},"118":{},"122":{},"145":{},"148":{},"151":{},"152":{},"175":{},"177":{}},"component":{}}],["download",{"_index":420,"title":{"105":{},"207":{},"154-12":{}},"name":{},"text":{"2":{},"4":{},"30":{},"46":{},"50":{},"57":{},"60":{},"61":{},"63":{},"66":{},"68":{},"73":{},"75":{},"86":{},"103":{},"105":{},"108":{},"119":{},"126":{},"127":{},"128":{},"139":{},"141":{},"142":{},"148":{},"149":{},"154":{},"158":{},"159":{},"162":{},"179":{},"193":{},"202":{},"203":{},"204":{},"227":{},"230":{},"250":{},"255":{},"269":{},"271":{},"272":{}},"component":{}}],["downward",{"_index":6856,"title":{},"name":{},"text":{"272":{}},"component":{}}],["dozen",{"_index":2460,"title":{},"name":{},"text":{"50":{}},"component":{}}],["drac",{"_index":5844,"title":{},"name":{},"text":{"193":{},"195":{},"250":{}},"component":{}}],["draft",{"_index":3131,"title":{"149":{},"149-1":{},"149-2":{}},"name":{},"text":{"61":{},"147":{},"149":{},"159":{}},"component":{}}],["drag",{"_index":1526,"title":{},"name":{},"text":{"12":{},"100":{},"103":{},"119":{},"139":{},"140":{},"141":{},"154":{},"160":{},"161":{},"210":{},"213":{},"214":{},"216":{},"217":{},"218":{},"223":{},"224":{},"225":{},"227":{},"230":{},"232":{},"241":{},"261":{}},"component":{}}],["drag&drop",{"_index":2387,"title":{},"name":{},"text":{"49":{}},"component":{}}],["draw",{"_index":2786,"title":{},"name":{},"text":{"58":{},"108":{}},"component":{}}],["drfo",{"_index":443,"title":{},"name":{},"text":{"2":{},"59":{},"115":{},"119":{},"120":{},"154":{},"158":{},"269":{}},"component":{}}],["drfo\":\"drfo",{"_index":5213,"title":{},"name":{},"text":{"154":{}},"component":{}}],["drive",{"_index":224,"title":{},"name":{},"text":{"2":{}},"component":{}}],["driven",{"_index":2425,"title":{},"name":{},"text":{"49":{},"214":{}},"component":{}}],["driver",{"_index":2107,"title":{"44-3":{}},"name":{},"text":{"44":{},"49":{},"78":{},"168":{}},"component":{}}],["driver=org.postgresql.driv",{"_index":5652,"title":{},"name":{},"text":{"168":{}},"component":{}}],["drop",{"_index":1527,"title":{},"name":{},"text":{"12":{},"21":{},"58":{},"83":{},"100":{},"148":{},"175":{},"177":{},"227":{},"241":{},"258":{}},"component":{}}],["dropanalyticsview",{"_index":4121,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["dropcolumn",{"_index":4122,"title":{},"name":{},"text":{"84":{}},"component":{}}],["dropdomain",{"_index":4124,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["dropdown",{"_index":1484,"title":{},"name":{},"text":{"9":{},"33":{},"43":{},"60":{},"63":{},"68":{},"100":{},"104":{},"122":{},"141":{},"142":{},"149":{},"152":{},"158":{},"159":{},"176":{},"177":{},"182":{},"212":{},"213":{},"218":{},"221":{},"222":{},"231":{},"232":{},"255":{},"262":{},"270":{}},"component":{}}],["dropindex",{"_index":5674,"title":{},"name":{},"text":{"169":{}},"component":{}}],["dropsearchcondit",{"_index":4125,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["droptyp",{"_index":4126,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["dropuniqueconstraint",{"_index":5673,"title":{},"name":{},"text":{"169":{}},"component":{}}],["ds",{"_index":1433,"title":{},"name":{},"text":{"9":{},"47":{}},"component":{}}],["dsl",{"_index":1133,"title":{},"name":{},"text":{"6":{},"49":{}},"component":{}}],["dso",{"_index":2201,"title":{},"name":{},"text":{"47":{},"52":{},"58":{},"115":{},"117":{},"140":{},"195":{},"256":{},"269":{}},"component":{}}],["due",{"_index":2702,"title":{},"name":{},"text":{"56":{},"80":{},"99":{},"108":{},"115":{},"119":{},"120":{},"124":{},"125":{},"167":{},"173":{},"175":{},"177":{},"195":{},"205":{},"213":{},"232":{},"254":{},"270":{},"271":{}},"component":{}}],["dummi",{"_index":6303,"title":{},"name":{},"text":{"231":{}},"component":{}}],["duplic",{"_index":1182,"title":{},"name":{},"text":{"6":{},"70":{},"108":{},"119":{},"123":{},"127":{},"131":{},"195":{},"233":{},"267":{},"268":{}},"component":{}}],["durat",{"_index":1212,"title":{},"name":{},"text":{"6":{},"127":{},"159":{},"196":{},"213":{}},"component":{}}],["dure",{"_index":541,"title":{"126":{},"73-42":{},"108-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"10":{},"19":{},"21":{},"25":{},"34":{},"41":{},"47":{},"50":{},"52":{},"56":{},"58":{},"60":{},"62":{},"67":{},"72":{},"73":{},"78":{},"81":{},"87":{},"99":{},"103":{},"108":{},"111":{},"113":{},"115":{},"119":{},"120":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"160":{},"161":{},"167":{},"179":{},"189":{},"191":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"205":{},"206":{},"208":{},"211":{},"212":{},"213":{},"216":{},"218":{},"234":{},"237":{},"242":{},"244":{},"245":{},"251":{},"253":{},"255":{},"257":{},"258":{},"259":{},"260":{},"262":{},"271":{}},"component":{}}],["dutch",{"_index":1104,"title":{},"name":{},"text":{"6":{}},"component":{}}],["duti",{"_index":569,"title":{"14":{},"65":{}},"name":{},"text":{"2":{},"28":{},"46":{},"64":{}},"component":{}}],["dymic",{"_index":3326,"title":{},"name":{},"text":{"67":{}},"component":{}}],["dynam",{"_index":1653,"title":{},"name":{},"text":{"19":{},"23":{},"34":{},"49":{},"67":{},"126":{},"135":{},"226":{},"271":{}},"component":{}}],["dynamicconfigur",{"_index":6537,"title":{},"name":{},"text":{"258":{}},"component":{}}],["dynamodb",{"_index":3482,"title":{},"name":{},"text":{"73":{}},"component":{}}],["dynamodb_t",{"_index":3497,"title":{},"name":{},"text":{"73":{}},"component":{}}],["e",{"_index":528,"title":{"161-11":{}},"name":{"183":{}},"text":{"2":{},"4":{},"47":{},"49":{},"126":{},"161":{},"183":{}},"component":{}}],["e.g",{"_index":1169,"title":{},"name":{},"text":{"6":{},"9":{},"58":{},"67":{},"73":{},"99":{},"119":{},"120":{},"138":{},"140":{},"144":{},"150":{},"177":{}},"component":{}}],["each",{"_index":87,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"21":{},"23":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"39":{},"42":{},"43":{},"44":{},"45":{},"48":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"66":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"84":{},"103":{},"108":{},"113":{},"118":{},"119":{},"120":{},"123":{},"131":{},"133":{},"138":{},"139":{},"141":{},"142":{},"150":{},"154":{},"155":{},"161":{},"165":{},"167":{},"168":{},"175":{},"186":{},"188":{},"193":{},"194":{},"195":{},"196":{},"202":{},"204":{},"207":{},"209":{},"212":{},"213":{},"217":{},"224":{},"226":{},"227":{},"229":{},"242":{},"244":{},"247":{},"251":{},"252":{},"254":{},"255":{},"256":{},"258":{},"269":{},"272":{}},"component":{}}],["eam",{"_index":1204,"title":{},"name":{},"text":{"6":{}},"component":{}}],["earli",{"_index":1118,"title":{},"name":{},"text":{"6":{},"23":{},"67":{}},"component":{}}],["earlier",{"_index":715,"title":{},"name":{},"text":{"4":{},"13":{},"23":{},"33":{},"73":{},"104":{},"113":{},"115":{},"122":{},"142":{},"150":{},"161":{},"196":{}},"component":{}}],["earth’",{"_index":2878,"title":{},"name":{},"text":{"58":{}},"component":{}}],["earum",{"_index":6325,"title":{},"name":{},"text":{"231":{}},"component":{}}],["eas",{"_index":6459,"title":{},"name":{},"text":{"254":{}},"component":{}}],["easi",{"_index":244,"title":{},"name":{},"text":{"2":{},"6":{},"75":{},"87":{},"113":{},"191":{},"234":{},"245":{},"264":{}},"component":{}}],["easier",{"_index":3881,"title":{},"name":{},"text":{"75":{},"125":{},"233":{},"237":{},"244":{},"262":{}},"component":{}}],["easili",{"_index":3199,"title":{},"name":{},"text":{"66":{},"67":{},"81":{},"122":{},"177":{},"230":{},"237":{}},"component":{}}],["east",{"_index":1764,"title":{},"name":{},"text":{"21":{},"73":{},"80":{}},"component":{}}],["eb",{"_index":3979,"title":{},"name":{},"text":{"80":{}},"component":{}}],["ec2",{"_index":1902,"title":{},"name":{},"text":{"25":{},"39":{},"73":{}},"component":{}}],["ec2.amazonaws.com",{"_index":3589,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ec2_bast",{"_index":3567,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ec2_inst",{"_index":3541,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ec2instancemetadata",{"_index":3675,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ecdsa",{"_index":5939,"title":{},"name":{},"text":{"196":{}},"component":{}}],["echo",{"_index":3627,"title":{},"name":{},"text":{"73":{}},"component":{}}],["eclips",{"_index":2349,"title":{},"name":{},"text":{"49":{}},"component":{}}],["economi",{"_index":2907,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ecosystem",{"_index":2138,"title":{},"name":{},"text":{"46":{},"202":{}},"component":{}}],["ecr",{"_index":3727,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ed",{"_index":429,"title":{},"name":{},"text":{"2":{}},"component":{}}],["edebo",{"_index":4657,"title":{},"name":{},"text":{"134":{}},"component":{}}],["edg",{"_index":5823,"title":{},"name":{},"text":{"188":{},"248":{}},"component":{}}],["edit",{"_index":312,"title":{"31":{},"224":{},"226":{},"236":{},"245":{},"254":{},"262":{},"263":{},"265":{},"29-4":{},"31-1":{},"60-12":{},"141-20":{},"161-10":{}},"name":{"31":{},"52":{},"224":{},"225":{},"226":{},"236":{},"245":{},"262":{}},"text":{"2":{},"4":{},"8":{},"12":{},"15":{},"16":{},"23":{},"28":{},"29":{},"30":{},"31":{},"34":{},"36":{},"37":{},"40":{},"42":{},"43":{},"51":{},"52":{},"55":{},"57":{},"59":{},"60":{},"63":{},"66":{},"75":{},"76":{},"78":{},"103":{},"115":{},"117":{},"118":{},"122":{},"123":{},"125":{},"139":{},"140":{},"141":{},"142":{},"144":{},"161":{},"163":{},"167":{},"173":{},"182":{},"186":{},"188":{},"192":{},"193":{},"195":{},"204":{},"223":{},"224":{},"225":{},"226":{},"229":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"240":{},"241":{},"244":{},"245":{},"246":{},"248":{},"251":{},"254":{},"255":{},"256":{},"262":{},"263":{},"264":{},"265":{},"268":{}},"component":{}}],["edit/create/delet",{"_index":6647,"title":{},"name":{},"text":{"268":{}},"component":{}}],["editgrid",{"_index":2642,"title":{},"name":{},"text":{"52":{}},"component":{}}],["editor",{"_index":740,"title":{"244":{},"262":{},"264":{}},"name":{"244":{},"264":{}},"text":{"4":{},"15":{},"16":{},"51":{},"63":{},"66":{},"105":{},"126":{},"129":{},"162":{},"234":{},"243":{},"244":{},"262":{},"263":{},"264":{},"265":{}},"component":{}}],["editpersonalprofil",{"_index":5402,"title":{},"name":{},"text":{"161":{}},"component":{}}],["edp",{"_index":1305,"title":{},"name":{},"text":{"6":{},"47":{},"49":{},"56":{},"167":{},"188":{},"191":{},"192":{},"193":{},"196":{},"204":{},"244":{},"249":{},"250":{},"254":{},"255":{}},"component":{}}],["edr",{"_index":1985,"title":{"162-5":{}},"name":{},"text":{"30":{},"162":{},"193":{},"195":{},"250":{}},"component":{}}],["edr.bpmn",{"_index":5432,"title":{},"name":{},"text":{"162":{}},"component":{}}],["edr.json",{"_index":5433,"title":{},"name":{},"text":{"162":{}},"component":{}}],["edrpou",{"_index":449,"title":{"138-14":{}},"name":{},"text":{"2":{},"59":{},"111":{},"115":{},"119":{},"120":{},"134":{},"135":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"158":{},"162":{},"167":{},"269":{}},"component":{}}],["edrpou\":\"11111111",{"_index":5209,"title":{},"name":{},"text":{"154":{}},"component":{}}],["edrpou\":\"edrp",{"_index":5212,"title":{},"name":{},"text":{"154":{}},"component":{}}],["edrpou':edrpou,'name':nam",{"_index":5003,"title":{},"name":{},"text":{"141":{}},"component":{}}],["edrpou=34554362",{"_index":5257,"title":{},"name":{},"text":{"158":{}},"component":{}}],["edrpou={{data.edrp",{"_index":5040,"title":{},"name":{},"text":{"141":{}},"component":{}}],["edrresponsebodi",{"_index":5426,"title":{},"name":{},"text":{"162":{}},"component":{}}],["edu",{"_index":4571,"title":{},"name":{},"text":{"124":{},"221":{}},"component":{}}],["edu_organ",{"_index":4656,"title":{},"name":{},"text":{"134":{},"135":{},"136":{}},"component":{}}],["edu_organization_edrpou_equ",{"_index":4702,"title":{},"name":{},"text":{"135":{}},"component":{}}],["edu_organization_id",{"_index":4691,"title":{},"name":{},"text":{"135":{},"136":{}},"component":{}}],["edu_organization_id=’uuid",{"_index":4714,"title":{},"name":{},"text":{"135":{}},"component":{}}],["edu_organization_id_extern",{"_index":4658,"title":{},"name":{},"text":{"134":{}},"component":{}}],["edu_statu",{"_index":4662,"title":{},"name":{},"text":{"134":{}},"component":{}}],["edu_status_id",{"_index":4661,"title":{},"name":{},"text":{"134":{}},"component":{}}],["educ",{"_index":194,"title":{},"name":{},"text":{"1":{},"66":{},"135":{},"136":{},"154":{}},"component":{}}],["edunam",{"_index":5723,"title":{},"name":{},"text":{"181":{},"222":{}},"component":{}}],["effect",{"_index":1327,"title":{},"name":{},"text":{"6":{},"33":{},"34":{},"41":{},"51":{},"59":{},"67":{},"73":{},"75":{},"76":{},"99":{},"118":{},"183":{},"186":{},"188":{},"247":{}},"component":{}}],["effici",{"_index":27,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"28":{},"29":{},"30":{},"32":{},"34":{},"44":{},"52":{},"59":{},"75":{},"81":{},"117":{},"122":{},"163":{},"167":{},"191":{},"237":{},"242":{},"244":{}},"component":{}}],["effort",{"_index":1213,"title":{},"name":{},"text":{"6":{},"81":{},"99":{},"108":{},"117":{},"268":{}},"component":{}}],["egress",{"_index":3618,"title":{},"name":{},"text":{"73":{}},"component":{}}],["eip",{"_index":1898,"title":{},"name":{},"text":{"25":{}},"component":{}}],["elabor",{"_index":1146,"title":{},"name":{},"text":{"6":{}},"component":{}}],["elast",{"_index":1869,"title":{},"name":{},"text":{"25":{},"73":{}},"component":{}}],["elasticsearch",{"_index":1555,"title":{},"name":{},"text":{"14":{},"49":{},"119":{},"127":{}},"component":{}}],["electron",{"_index":33,"title":{"9-3":{},"49-45":{},"141-13":{},"161-5":{}},"name":{},"text":{"1":{},"2":{},"9":{},"12":{},"13":{},"30":{},"40":{},"44":{},"46":{},"49":{},"58":{},"65":{},"68":{},"69":{},"70":{},"78":{},"99":{},"115":{},"116":{},"120":{},"133":{},"141":{},"148":{},"149":{},"161":{},"162":{},"168":{},"195":{}},"component":{}}],["element",{"_index":549,"title":{"156":{},"270":{},"73-2":{},"216-2":{}},"name":{"157":{}},"text":{"2":{},"8":{},"47":{},"52":{},"57":{},"58":{},"60":{},"66":{},"72":{},"73":{},"75":{},"103":{},"107":{},"125":{},"129":{},"131":{},"132":{},"138":{},"140":{},"143":{},"150":{},"151":{},"152":{},"154":{},"155":{},"157":{},"159":{},"160":{},"161":{},"164":{},"167":{},"183":{},"186":{},"204":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"229":{},"236":{},"244":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"264":{},"265":{},"269":{},"270":{}},"component":{}}],["element’",{"_index":6214,"title":{},"name":{},"text":{"216":{}},"component":{}}],["elig",{"_index":6462,"title":{},"name":{},"text":{"254":{}},"component":{}}],["elimin",{"_index":5927,"title":{},"name":{},"text":{"195":{},"255":{}},"component":{}}],["eliseo@gardner.biz",{"_index":6310,"title":{},"name":{},"text":{"231":{}},"component":{}}],["ellipsi",{"_index":6374,"title":{},"name":{},"text":{"237":{}},"component":{}}],["email",{"_index":896,"title":{"144":{},"183":{},"184":{},"185":{},"25-5":{},"25-6":{},"49-51":{},"144-1":{},"144-2":{}},"name":{"10":{},"144":{},"184":{},"185":{}},"text":{"4":{},"10":{},"25":{},"28":{},"30":{},"40":{},"49":{},"52":{},"67":{},"69":{},"101":{},"113":{},"118":{},"120":{},"132":{},"133":{},"134":{},"144":{},"146":{},"163":{},"173":{},"179":{},"182":{},"183":{},"184":{},"185":{},"186":{},"202":{},"231":{},"265":{}},"component":{}}],["email\":\"test@example.com",{"_index":3759,"title":{},"name":{},"text":{"73":{}},"component":{}}],["embed",{"_index":6209,"title":{"217":{},"217-2":{},"217-7":{},"269-8":{}},"name":{"217":{}},"text":{"216":{},"217":{},"262":{},"269":{}},"component":{}}],["emerg",{"_index":2948,"title":{},"name":{},"text":{"59":{},"65":{}},"component":{}}],["emma",{"_index":1329,"title":{},"name":{},"text":{"6":{}},"component":{}}],["emphas",{"_index":1176,"title":{},"name":{},"text":{"6":{},"41":{},"99":{}},"component":{}}],["employ",{"_index":1306,"title":{},"name":{},"text":{"6":{},"9":{},"59":{},"99":{},"141":{}},"component":{}}],["employe",{"_index":1896,"title":{"138-8":{},"138-17":{}},"name":{},"text":{"25":{},"108":{},"138":{},"141":{},"148":{},"154":{},"159":{}},"component":{}}],["employment,101.203",{"_index":3021,"title":{},"name":{},"text":{"59":{}},"component":{}}],["empti",{"_index":1160,"title":{"270":{},"73-26":{}},"name":{},"text":{"6":{},"25":{},"31":{},"52":{},"57":{},"58":{},"73":{},"107":{},"108":{},"119":{},"128":{},"138":{},"139":{},"140":{},"141":{},"204":{},"207":{},"216":{},"217":{},"237":{},"265":{}},"component":{}}],["emul",{"_index":3202,"title":{},"name":{},"text":{"66":{}},"component":{}}],["enabl",{"_index":28,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"8":{},"21":{},"23":{},"25":{},"30":{},"31":{},"32":{},"34":{},"36":{},"44":{},"52":{},"58":{},"59":{},"66":{},"72":{},"73":{},"75":{},"76":{},"78":{},"80":{},"81":{},"106":{},"117":{},"119":{},"120":{},"122":{},"123":{},"125":{},"128":{},"133":{},"141":{},"162":{},"163":{},"164":{},"166":{},"167":{},"183":{},"184":{},"195":{},"205":{},"214":{},"223":{},"225":{},"226":{},"227":{},"230":{},"231":{},"232":{},"242":{},"244":{},"246":{},"253":{},"254":{},"255":{},"256":{},"258":{},"264":{},"266":{},"272":{}},"component":{}}],["enable_dns_hostnam",{"_index":3535,"title":{},"name":{},"text":{"73":{}},"component":{}}],["enable_dns_support",{"_index":3536,"title":{},"name":{},"text":{"73":{}},"component":{}}],["enable_nat_gateway",{"_index":3537,"title":{},"name":{},"text":{"73":{}},"component":{}}],["enable_pool_hba",{"_index":6571,"title":{},"name":{},"text":{"258":{}},"component":{}}],["enable_volume_tag",{"_index":3561,"title":{},"name":{},"text":{"73":{}},"component":{}}],["enablerbdstat",{"_index":1844,"title":{},"name":{},"text":{"23":{}},"component":{}}],["enclos",{"_index":5117,"title":{},"name":{},"text":{"142":{}},"component":{}}],["encod",{"_index":3119,"title":{},"name":{},"text":{"61":{},"103":{},"107":{},"119":{},"155":{},"167":{},"179":{},"188":{},"248":{},"269":{}},"component":{}}],["encompass",{"_index":1186,"title":{},"name":{},"text":{"6":{},"65":{},"99":{}},"component":{}}],["encount",{"_index":2301,"title":{},"name":{},"text":{"49":{},"113":{},"119":{},"173":{},"177":{},"218":{}},"component":{}}],["encrypt",{"_index":1461,"title":{"91":{},"92":{},"99-5":{}},"name":{"91":{},"92":{}},"text":{"9":{},"14":{},"30":{},"33":{},"40":{},"44":{},"48":{},"67":{},"73":{},"75":{},"78":{},"86":{},"88":{},"99":{},"105":{},"119":{},"122":{},"192":{},"195":{},"197":{},"203":{},"255":{}},"component":{}}],["end",{"_index":748,"title":{"139-11":{},"141-17":{},"151-5":{},"154-9":{},"154-14":{},"161-14":{},"211-2":{},"212-2":{},"216-13":{},"216-15":{},"217-10":{},"217-11":{},"259-3":{},"260-3":{}},"name":{},"text":{"4":{},"6":{},"9":{},"32":{},"33":{},"44":{},"46":{},"50":{},"51":{},"58":{},"65":{},"66":{},"69":{},"81":{},"107":{},"108":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"150":{},"151":{},"152":{},"154":{},"161":{},"162":{},"167":{},"188":{},"196":{},"202":{},"205":{},"208":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"234":{},"237":{},"248":{},"259":{},"260":{},"261":{},"262":{},"271":{}},"component":{}}],["endev",{"_index":4893,"title":{},"name":{},"text":{"139":{}},"component":{}}],["endpo",{"_index":5420,"title":{},"name":{},"text":{"161":{}},"component":{}}],["endpoint",{"_index":454,"title":{"180":{},"201":{},"167-30":{},"201-3":{},"231-1":{},"267-12":{},"267-14":{}},"name":{"29":{},"193":{},"250":{},"251":{},"252":{}},"text":{"2":{},"21":{},"32":{},"47":{},"52":{},"56":{},"58":{},"59":{},"65":{},"72":{},"73":{},"82":{},"83":{},"84":{},"100":{},"103":{},"104":{},"124":{},"134":{},"135":{},"136":{},"140":{},"141":{},"154":{},"159":{},"161":{},"166":{},"167":{},"171":{},"179":{},"189":{},"195":{},"201":{},"221":{},"226":{},"231":{},"258":{},"267":{},"272":{}},"component":{}}],["endpoint—​in",{"_index":5356,"title":{},"name":{},"text":{"160":{}},"component":{}}],["endpoint’",{"_index":6351,"title":{},"name":{},"text":{"231":{}},"component":{}}],["endtim",{"_index":6102,"title":{},"name":{},"text":{"205":{}},"component":{}}],["enduser.asicgetsignscount(data",{"_index":6741,"title":{},"name":{},"text":{"269":{}},"component":{}}],["enduser.asicverify(index",{"_index":6743,"title":{},"name":{},"text":{"269":{}},"component":{}}],["enduser::asicgetreference(refer",{"_index":6750,"title":{},"name":{},"text":{"269":{}},"component":{}}],["enduser::asicgetsignreferences(index",{"_index":6749,"title":{},"name":{},"text":{"269":{}},"component":{}}],["enduser::asicgetsignscount(base64data",{"_index":6717,"title":{},"name":{},"text":{"269":{}},"component":{}}],["enduser::asicverify(index",{"_index":6718,"title":{},"name":{},"text":{"269":{}},"component":{}}],["enduser::verifyinternal(base64data",{"_index":6720,"title":{},"name":{},"text":{"269":{}},"component":{}}],["enduser::verifyinternal(base64data)::getdata",{"_index":6751,"title":{},"name":{},"text":{"269":{}},"component":{}}],["endusersigninfo",{"_index":6745,"title":{},"name":{},"text":{"269":{}},"component":{}}],["energi",{"_index":2957,"title":{},"name":{},"text":{"59":{}},"component":{}}],["enforc",{"_index":4023,"title":{},"name":{},"text":{"81":{},"196":{}},"component":{}}],["eng",{"_index":5936,"title":{},"name":{},"text":{"196":{}},"component":{}}],["engag",{"_index":5836,"title":{},"name":{},"text":{"192":{},"257":{}},"component":{}}],["engin",{"_index":374,"title":{"125-4":{}},"name":{},"text":{"2":{},"49":{},"61":{},"67":{},"76":{},"125":{},"164":{},"188":{},"205":{},"216":{},"248":{},"264":{}},"component":{}}],["enhanc",{"_index":148,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"25":{},"67":{},"113":{},"143":{},"150":{},"204":{},"223":{},"232":{},"262":{}},"component":{}}],["enim",{"_index":6312,"title":{},"name":{},"text":{"231":{}},"component":{}}],["enough",{"_index":1087,"title":{},"name":{},"text":{"6":{},"220":{}},"component":{}}],["enrich",{"_index":6610,"title":{},"name":{},"text":{"262":{}},"component":{}}],["enrol",{"_index":4701,"title":{},"name":{},"text":{"135":{},"136":{},"154":{}},"component":{}}],["enrollment_d",{"_index":4753,"title":{},"name":{},"text":{"136":{}},"component":{}}],["ensur",{"_index":231,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"14":{},"18":{},"19":{},"21":{},"23":{},"26":{},"28":{},"29":{},"30":{},"34":{},"44":{},"46":{},"48":{},"49":{},"51":{},"52":{},"59":{},"66":{},"67":{},"74":{},"75":{},"78":{},"80":{},"81":{},"87":{},"99":{},"107":{},"108":{},"115":{},"118":{},"122":{},"123":{},"124":{},"125":{},"128":{},"129":{},"131":{},"138":{},"148":{},"158":{},"161":{},"162":{},"164":{},"167":{},"168":{},"191":{},"197":{},"202":{},"221":{},"222":{},"223":{},"227":{},"237":{},"244":{},"245":{},"268":{},"269":{},"272":{}},"component":{}}],["entail",{"_index":1225,"title":{},"name":{},"text":{"6":{}},"component":{}}],["enter",{"_index":895,"title":{"58-8":{},"100-5":{},"100-9":{},"140-8":{},"141-21":{},"154-5":{},"162-6":{},"216-7":{},"217-6":{}},"name":{},"text":{"4":{},"8":{},"9":{},"13":{},"15":{},"16":{},"18":{},"25":{},"28":{},"29":{},"30":{},"33":{},"34":{},"36":{},"40":{},"46":{},"47":{},"51":{},"52":{},"57":{},"58":{},"60":{},"63":{},"66":{},"75":{},"100":{},"101":{},"103":{},"104":{},"105":{},"106":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"124":{},"127":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"148":{},"149":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"173":{},"175":{},"183":{},"184":{},"186":{},"188":{},"193":{},"195":{},"204":{},"206":{},"208":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"226":{},"229":{},"230":{},"231":{},"232":{},"234":{},"236":{},"237":{},"239":{},"242":{},"248":{},"251":{},"253":{},"255":{},"259":{},"260":{},"267":{},"268":{}},"component":{}}],["entero",{"_index":5375,"title":{},"name":{},"text":{"161":{}},"component":{}}],["enterpris",{"_index":453,"title":{},"name":{},"text":{"2":{},"59":{},"119":{},"120":{},"154":{}},"component":{}}],["entir",{"_index":737,"title":{},"name":{},"text":{"4":{},"21":{},"29":{},"45":{},"60":{},"67":{},"108":{},"113":{},"119":{},"127":{},"129":{},"167":{},"227":{},"233":{},"244":{},"255":{},"271":{}},"component":{}}],["entiti",{"_index":313,"title":{"161":{},"165":{},"221":{},"141-20":{},"161-7":{},"161-8":{},"161-13":{},"167-29":{},"167-30":{}},"name":{"221":{}},"text":{"2":{},"9":{},"44":{},"46":{},"50":{},"51":{},"52":{},"57":{},"58":{},"66":{},"68":{},"73":{},"82":{},"83":{},"84":{},"103":{},"118":{},"119":{},"120":{},"124":{},"129":{},"132":{},"134":{},"135":{},"136":{},"137":{},"138":{},"140":{},"141":{},"154":{},"159":{},"161":{},"164":{},"165":{},"167":{},"170":{},"173":{},"220":{},"221":{},"268":{},"271":{}},"component":{}}],["entity_loc",{"_index":2815,"title":{},"name":{},"text":{"58":{}},"component":{}}],["entity_with_geo_typ",{"_index":2794,"title":{},"name":{},"text":{"58":{}},"component":{}}],["entityid",{"_index":2838,"title":{},"name":{},"text":{"58":{}},"component":{}}],["entityloc",{"_index":2802,"title":{},"name":{},"text":{"58":{},"230":{}},"component":{}}],["entitylocation.latitud",{"_index":2804,"title":{},"name":{},"text":{"58":{}},"component":{}}],["entitylocation.longitud",{"_index":2806,"title":{},"name":{},"text":{"58":{}},"component":{}}],["entitylocation.typ",{"_index":2803,"title":{},"name":{},"text":{"58":{}},"component":{}}],["entitynam",{"_index":6802,"title":{},"name":{},"text":{"271":{}},"component":{}}],["entity–relationship",{"_index":5486,"title":{},"name":{},"text":{"164":{}},"component":{}}],["entity’",{"_index":427,"title":{},"name":{},"text":{"2":{}},"component":{}}],["entrepreneur",{"_index":579,"title":{},"name":{},"text":{"2":{},"9":{},"173":{}},"component":{}}],["entri",{"_index":1349,"title":{"104-1":{},"139-16":{},"140-22":{}},"name":{},"text":{"6":{},"30":{},"58":{},"59":{},"66":{},"103":{},"104":{},"105":{},"118":{},"119":{},"122":{},"124":{},"139":{},"140":{},"144":{},"145":{},"154":{},"159":{},"161":{},"162":{},"195":{},"208":{},"209":{},"212":{},"221":{},"222":{},"223":{},"231":{},"253":{},"262":{},"269":{},"272":{}},"component":{}}],["entrust",{"_index":4190,"title":{},"name":{},"text":{"99":{}},"component":{}}],["entrypoint",{"_index":3830,"title":{},"name":{},"text":{"73":{}},"component":{}}],["enum",{"_index":4119,"title":{"167-23":{}},"name":{},"text":{"84":{},"135":{},"167":{},"206":{},"209":{},"269":{}},"component":{}}],["enumer",{"_index":2588,"title":{"167-23":{}},"name":{},"text":{"52":{},"135":{},"167":{}},"component":{}}],["enum|dataformat",{"_index":6662,"title":{"269-13":{},"269-17":{}},"name":{},"text":{},"component":{}}],["env",{"_index":854,"title":{},"name":{},"text":{"4":{},"56":{},"73":{},"192":{},"258":{}},"component":{}}],["envelop",{"_index":6675,"title":{},"name":{},"text":{"269":{}},"component":{}}],["environ",{"_index":489,"title":{"73":{},"74":{},"66-5":{},"66-6":{},"67-8":{}},"name":{},"text":{"2":{},"6":{},"14":{},"16":{},"26":{},"27":{},"28":{},"30":{},"32":{},"34":{},"44":{},"48":{},"49":{},"55":{},"56":{},"57":{},"58":{},"65":{},"66":{},"67":{},"73":{},"74":{},"81":{},"87":{},"118":{},"123":{},"127":{},"128":{},"131":{},"139":{},"140":{},"141":{},"142":{},"149":{},"168":{},"188":{},"191":{},"192":{},"193":{},"194":{},"195":{},"199":{},"221":{},"222":{},"237":{},"244":{},"249":{},"250":{},"253":{},"255":{},"261":{},"262":{},"270":{}},"component":{}}],["envon",{"_index":5716,"title":{},"name":{},"text":{"179":{}},"component":{}}],["envoy",{"_index":5935,"title":{"196-3":{}},"name":{},"text":{"196":{},"197":{},"254":{}},"component":{}}],["envoy.filters.http.jwt_authn",{"_index":5957,"title":{},"name":{},"text":{"196":{}},"component":{}}],["eos\\ntempora",{"_index":6319,"title":{},"name":{},"text":{"231":{}},"component":{}}],["eot",{"_index":3676,"title":{},"name":{},"text":{"73":{}},"component":{}}],["epam",{"_index":3515,"title":{},"name":{},"text":{"73":{},"75":{},"76":{},"188":{},"191":{},"194":{},"247":{}},"component":{}}],["epic",{"_index":1251,"title":{},"name":{},"text":{"6":{}},"component":{}}],["eq",{"_index":5555,"title":{},"name":{},"text":{"167":{}},"component":{}}],["equal",{"_index":1578,"title":{"158":{}},"name":{"158":{}},"text":{"15":{},"16":{},"21":{},"52":{},"100":{},"127":{},"135":{},"136":{},"138":{},"140":{},"157":{},"158":{},"159":{},"161":{},"166":{},"167":{},"253":{}},"component":{}}],["equip",{"_index":394,"title":{},"name":{},"text":{"2":{},"28":{},"41":{},"87":{}},"component":{}}],["equival",{"_index":6505,"title":{},"name":{},"text":{"257":{}},"component":{}}],["er",{"_index":5485,"title":{},"name":{},"text":{"164":{}},"component":{}}],["eras",{"_index":4203,"title":{},"name":{},"text":{"99":{}},"component":{}}],["erasur",{"_index":4180,"title":{"99-20":{}},"name":{},"text":{"99":{}},"component":{}}],["erd",{"_index":2981,"title":{},"name":{},"text":{"59":{},"66":{}},"component":{}}],["err",{"_index":4611,"title":{},"name":{},"text":{"127":{}},"component":{}}],["erron",{"_index":4498,"title":{},"name":{},"text":{"119":{}},"component":{}}],["error",{"_index":811,"title":{"10":{},"113":{},"211":{},"55-8":{},"60-8":{},"73-42":{},"73-43":{},"73-46":{},"73-49":{},"73-52":{},"119-6":{},"127-2":{},"140-12":{},"141-11":{},"211-2":{},"211-3":{},"211-4":{},"218-6":{},"260-2":{},"260-3":{},"260-4":{},"262-7":{},"262-8":{},"262-9":{}},"name":{"10":{},"113":{},"211":{},"260":{}},"text":{"4":{},"6":{},"9":{},"10":{},"12":{},"14":{},"25":{},"29":{},"41":{},"47":{},"55":{},"60":{},"61":{},"66":{},"67":{},"69":{},"70":{},"73":{},"101":{},"103":{},"108":{},"112":{},"113":{},"117":{},"119":{},"122":{},"126":{},"127":{},"128":{},"129":{},"131":{},"135":{},"140":{},"141":{},"144":{},"164":{},"167":{},"168":{},"173":{},"175":{},"177":{},"191":{},"195":{},"205":{},"211":{},"218":{},"225":{},"226":{},"227":{},"229":{},"236":{},"237":{},"244":{},"245":{},"253":{},"258":{},"260":{},"261":{},"262":{},"265":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["error.cod",{"_index":6714,"title":{},"name":{},"text":{"269":{}},"component":{}}],["error.localizedmessag",{"_index":6716,"title":{},"name":{},"text":{"269":{}},"component":{}}],["error.messag",{"_index":6715,"title":{},"name":{},"text":{"269":{}},"component":{}}],["errornovalid",{"_index":6168,"title":{},"name":{},"text":{"211":{}},"component":{}}],["especi",{"_index":4411,"title":{},"name":{},"text":{"108":{},"117":{}},"component":{}}],["essenc",{"_index":6477,"title":{},"name":{},"text":{"254":{},"255":{},"266":{},"267":{}},"component":{}}],["essenti",{"_index":547,"title":{},"name":{},"text":{"2":{},"32":{},"37":{},"66":{},"67":{},"69":{},"99":{},"122":{},"138":{},"164":{},"218":{},"262":{}},"component":{}}],["est",{"_index":6314,"title":{},"name":{},"text":{"231":{}},"component":{}}],["establish",{"_index":142,"title":{},"name":{},"text":{"1":{},"33":{},"44":{},"51":{},"108":{},"154":{},"168":{},"181":{},"196":{},"244":{}},"component":{}}],["estim",{"_index":1214,"title":{},"name":{},"text":{"6":{},"50":{}},"component":{}}],["et",{"_index":6307,"title":{},"name":{},"text":{"231":{}},"component":{}}],["etag",{"_index":6657,"title":{},"name":{},"text":{"268":{}},"component":{}}],["etc",{"_index":314,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"12":{},"44":{},"45":{},"46":{},"47":{},"55":{},"58":{},"67":{},"84":{},"99":{},"105":{},"118":{},"119":{},"120":{},"123":{},"148":{},"149":{},"150":{},"154":{},"194":{},"202":{},"211":{},"213":{},"218":{},"237":{},"244":{},"255":{},"265":{},"266":{},"270":{}},"component":{}}],["etc/apt/keyr",{"_index":3643,"title":{},"name":{},"text":{"73":{}},"component":{}}],["etc/apt/keyrings/docker.gpg",{"_index":3648,"title":{},"name":{},"text":{"73":{}},"component":{}}],["etc/apt/sources.list.d/docker.list",{"_index":3657,"title":{},"name":{},"text":{"73":{}},"component":{}}],["etcd",{"_index":1650,"title":{},"name":{},"text":{"19":{},"86":{}},"component":{}}],["ethic",{"_index":3231,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["eu",{"_index":3513,"title":{},"name":{},"text":{"73":{},"99":{}},"component":{}}],["eu.iit.com.ua",{"_index":3895,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{}},"component":{}}],["europe/kiev",{"_index":1618,"title":{},"name":{},"text":{"16":{},"253":{}},"component":{}}],["eusign.j",{"_index":2400,"title":{},"name":{},"text":{"49":{}},"component":{}}],["eusigncp",{"_index":2396,"title":{},"name":{},"text":{"49":{}},"component":{}}],["eval",{"_index":6281,"title":{},"name":{"229":{}},"text":{},"component":{}}],["evalu",{"_index":1326,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["evas",{"_index":5932,"title":{},"name":{},"text":{"195":{}},"component":{}}],["even",{"_index":1767,"title":{},"name":{},"text":{"21":{},"30":{},"34":{},"58":{},"66":{},"73":{},"81":{},"103":{},"108":{},"137":{},"155":{},"161":{},"164":{},"175":{},"262":{},"267":{}},"component":{}}],["event",{"_index":294,"title":{"211":{},"212":{},"213":{},"214":{},"259":{},"32-22":{},"49-56":{},"49-60":{},"139-7":{},"139-11":{},"140-7":{},"140-19":{},"141-7":{},"141-11":{},"141-17":{},"154-4":{},"154-9":{},"154-11":{},"154-14":{},"160-3":{},"161-14":{},"205-6":{},"205-7":{},"205-15":{},"210-2":{},"210-3":{},"211-2":{},"211-3":{},"211-4":{},"212-2":{},"212-3":{},"212-4":{},"212-5":{},"213-3":{},"213-4":{},"213-5":{},"214-2":{},"216-6":{},"216-10":{},"216-13":{},"216-15":{},"217-5":{},"217-8":{},"217-10":{},"217-11":{},"218-2":{},"218-3":{},"218-6":{},"259-2":{},"259-3":{},"259-4":{},"260-2":{},"260-3":{},"260-4":{},"271-14":{}},"name":{"210":{},"211":{},"212":{},"213":{},"214":{},"218":{},"259":{},"260":{}},"text":{"2":{},"32":{},"44":{},"48":{},"49":{},"50":{},"51":{},"52":{},"57":{},"80":{},"99":{},"103":{},"113":{},"119":{},"125":{},"127":{},"139":{},"140":{},"141":{},"142":{},"154":{},"155":{},"159":{},"160":{},"161":{},"162":{},"177":{},"183":{},"186":{},"191":{},"194":{},"198":{},"202":{},"205":{},"208":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"259":{},"260":{},"261":{},"271":{}},"component":{}}],["event.adoc[messag",{"_index":6238,"title":{},"name":{},"text":{"218":{}},"component":{}}],["event[1",{"_index":6229,"title":{},"name":{},"text":{"217":{}},"component":{}}],["events.adoc",{"_index":2639,"title":{},"name":{},"text":{"52":{}},"component":{}}],["eventu",{"_index":3354,"title":{},"name":{},"text":{"67":{}},"component":{}}],["event’",{"_index":4993,"title":{},"name":{},"text":{"141":{},"160":{}},"component":{}}],["everyth",{"_index":1981,"title":{},"name":{},"text":{"30":{},"195":{},"217":{}},"component":{}}],["evolut",{"_index":2113,"title":{"49-49":{}},"name":{},"text":{"44":{},"49":{}},"component":{}}],["evolv",{"_index":1201,"title":{},"name":{},"text":{"6":{},"168":{}},"component":{}}],["ew7uoirlufy0kmjfgy0tfcg1gj2nm6exmaw1_xdcvhb_ygm",{"_index":5696,"title":{},"name":{},"text":{"179":{}},"component":{}}],["ex",{"_index":1663,"title":{},"name":{},"text":{"19":{},"73":{},"231":{}},"component":{}}],["exact",{"_index":5488,"title":{},"name":{},"text":{"164":{},"254":{}},"component":{}}],["exactli",{"_index":2080,"title":{},"name":{},"text":{"40":{},"51":{},"108":{},"113":{},"158":{},"167":{}},"component":{}}],["examin",{"_index":1383,"title":{"253-9":{},"254-8":{},"255-14":{},"256-10":{},"266-9":{},"271-16":{},"272-23":{}},"name":{},"text":{"6":{},"52":{},"67":{},"99":{},"253":{},"254":{},"255":{},"256":{},"266":{},"271":{},"272":{}},"component":{}}],["exampl",{"_index":342,"title":{"57":{},"266":{},"51-2":{},"57-3":{},"82-3":{},"83-3":{},"103-5":{},"107-2":{},"107-7":{},"138-15":{},"138-16":{},"155-8":{},"159-11":{},"160-5":{},"162-5":{},"166-2":{},"166-9":{},"213-5":{},"258-2":{},"266-5":{},"267-5":{},"269-6":{},"269-7":{},"269-8":{}},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"21":{},"22":{},"23":{},"25":{},"29":{},"30":{},"32":{},"33":{},"34":{},"36":{},"39":{},"40":{},"42":{},"45":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"66":{},"73":{},"75":{},"76":{},"78":{},"80":{},"83":{},"84":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"113":{},"115":{},"117":{},"119":{},"122":{},"124":{},"126":{},"127":{},"129":{},"131":{},"132":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"148":{},"149":{},"151":{},"152":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"171":{},"173":{},"175":{},"177":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"188":{},"189":{},"193":{},"195":{},"196":{},"203":{},"205":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"234":{},"237":{},"242":{},"245":{},"248":{},"251":{},"253":{},"254":{},"255":{},"257":{},"258":{},"259":{},"260":{},"262":{},"265":{},"266":{},"267":{},"269":{},"271":{},"272":{}},"component":{}}],["example.com",{"_index":3893,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{},"248":{}},"component":{}}],["exce",{"_index":1324,"title":{},"name":{},"text":{"6":{},"21":{},"23":{},"108":{},"227":{},"242":{}},"component":{}}],["exceed",{"_index":2644,"title":{"55-8":{}},"name":{},"text":{"55":{},"120":{},"272":{}},"component":{}}],["excel",{"_index":2108,"title":{},"name":{},"text":{"44":{},"108":{},"148":{}},"component":{}}],["except",{"_index":1165,"title":{},"name":{},"text":{"6":{},"9":{},"19":{},"21":{},"67":{},"99":{},"100":{},"103":{},"117":{},"120":{},"127":{},"159":{},"168":{},"175":{},"211":{},"218":{},"260":{}},"component":{}}],["excerpt",{"_index":461,"title":{"61":{},"68":{},"68-1":{},"68-2":{},"202-13":{}},"name":{"68":{},"159":{}},"text":{"2":{},"30":{},"47":{},"50":{},"61":{},"66":{},"68":{},"69":{},"78":{},"128":{},"132":{},"148":{},"149":{},"159":{},"198":{},"202":{},"205":{},"216":{},"255":{}},"component":{}}],["excerptid",{"_index":5328,"title":{},"name":{},"text":{"159":{},"205":{}},"component":{}}],["excerptidentifi",{"_index":5323,"title":{},"name":{},"text":{"159":{}},"component":{}}],["excerptinputdata",{"_index":5290,"title":{},"name":{},"text":{"159":{}},"component":{}}],["excerptinputdata['request",{"_index":5311,"title":{},"name":{},"text":{"159":{}},"component":{}}],["excerptor",{"_index":4618,"title":{},"name":{},"text":{"128":{}},"component":{}}],["excerpts/mi",{"_index":3099,"title":{},"name":{},"text":{"61":{}},"component":{}}],["excerptstatu",{"_index":5324,"title":{},"name":{},"text":{"159":{}},"component":{}}],["excerptstatus.equals('complet",{"_index":5329,"title":{},"name":{},"text":{"159":{}},"component":{}}],["excerptstatus.equals('fail",{"_index":5330,"title":{},"name":{},"text":{"159":{}},"component":{}}],["excess",{"_index":4212,"title":{},"name":{},"text":{"99":{},"115":{}},"component":{}}],["exchang",{"_index":44,"title":{"48-9":{},"49-51":{},"123-3":{},"125-6":{},"195-2":{}},"name":{},"text":{"1":{},"2":{},"6":{},"30":{},"46":{},"48":{},"49":{},"50":{},"58":{},"65":{},"99":{},"122":{},"123":{},"125":{},"162":{},"181":{},"184":{},"195":{},"196":{},"212":{},"231":{}},"component":{}}],["exchange/overview.adoc",{"_index":2154,"title":{},"name":{},"text":{"46":{},"48":{}},"component":{}}],["exclud",{"_index":1441,"title":{},"name":{},"text":{"9":{},"19":{},"56":{},"136":{},"154":{},"167":{},"189":{},"237":{},"268":{},"270":{}},"component":{}}],["excludeport",{"_index":2698,"title":{},"name":{},"text":{"56":{},"189":{}},"component":{}}],["exclus",{"_index":1820,"title":{"214":{},"214-2":{}},"name":{},"text":{"23":{},"50":{},"56":{},"99":{},"142":{},"210":{},"214":{},"215":{}},"component":{}}],["exec",{"_index":3626,"title":{},"name":{},"text":{"73":{}},"component":{}}],["exectyp",{"_index":4092,"title":{},"name":{},"text":{"83":{},"168":{}},"component":{}}],["execut",{"_index":293,"title":{"125":{},"150":{},"60-10":{},"67-11":{},"119-4":{},"125-7":{},"125-8":{},"140-3":{},"152-5":{},"159-5":{},"159-6":{},"159-7":{},"160-4":{},"271-14":{}},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"41":{},"47":{},"49":{},"51":{},"52":{},"55":{},"56":{},"57":{},"60":{},"63":{},"67":{},"69":{},"70":{},"71":{},"73":{},"83":{},"84":{},"99":{},"103":{},"105":{},"111":{},"112":{},"113":{},"115":{},"118":{},"119":{},"124":{},"125":{},"126":{},"128":{},"129":{},"135":{},"138":{},"139":{},"140":{},"141":{},"142":{},"150":{},"152":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"165":{},"167":{},"168":{},"198":{},"205":{},"211":{},"213":{},"216":{},"218":{},"229":{},"242":{},"253":{},"255":{},"260":{},"261":{},"262":{},"264":{},"267":{},"270":{},"271":{}},"component":{}}],["execution.removevariable('createpersonpayload",{"_index":5390,"title":{},"name":{},"text":{"161":{}},"component":{}}],["execution.removevariable('datapayload",{"_index":5031,"title":{},"name":{},"text":{"141":{}},"component":{}}],["execution.removevariable('excerpt",{"_index":5317,"title":{},"name":{},"text":{"159":{}},"component":{}}],["execution.removevariable('outputpayload",{"_index":6222,"title":{},"name":{},"text":{"216":{}},"component":{}}],["execution.removevariable('payload",{"_index":2831,"title":{},"name":{},"text":{"58":{},"141":{},"159":{}},"component":{}}],["executor",{"_index":1267,"title":{},"name":{},"text":{"6":{},"58":{},"140":{},"205":{},"221":{},"222":{}},"component":{}}],["exercis",{"_index":6381,"title":{},"name":{},"text":{"238":{}},"component":{}}],["exist",{"_index":84,"title":{"131-6":{},"255-5":{},"256-4":{}},"name":{},"text":{"1":{},"4":{},"18":{},"29":{},"39":{},"40":{},"46":{},"52":{},"57":{},"67":{},"72":{},"73":{},"76":{},"80":{},"83":{},"84":{},"87":{},"100":{},"119":{},"131":{},"135":{},"136":{},"138":{},"140":{},"142":{},"148":{},"167":{},"168":{},"193":{},"207":{},"234":{},"236":{},"237":{},"242":{},"245":{},"246":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"264":{},"266":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["exit",{"_index":3811,"title":{},"name":{},"text":{"73":{},"105":{},"210":{},"244":{}},"component":{}}],["exp",{"_index":4553,"title":{},"name":{},"text":{"122":{}},"component":{}}],["expand",{"_index":1800,"title":{},"name":{},"text":{"22":{},"23":{},"80":{},"84":{},"104":{},"122":{},"138":{},"140":{},"143":{},"145":{},"151":{},"152":{},"159":{},"161":{},"163":{},"173":{},"175":{},"176":{},"177":{},"211":{},"212":{},"217":{},"218":{},"221":{},"222":{},"244":{},"253":{},"260":{},"261":{},"262":{},"271":{}},"component":{}}],["expandi",{"_index":5161,"title":{},"name":{},"text":{"150":{}},"component":{}}],["expect",{"_index":1279,"title":{"134-3":{},"135-3":{},"136-3":{}},"name":{},"text":{"6":{},"19":{},"30":{},"56":{},"57":{},"124":{},"134":{},"135":{},"136":{},"181":{}},"component":{}}],["expedit",{"_index":1508,"title":{},"name":{},"text":{"10":{},"239":{}},"component":{}}],["expedita",{"_index":6343,"title":{},"name":{},"text":{"231":{}},"component":{}}],["experi",{"_index":1553,"title":{},"name":{},"text":{"14":{},"46":{},"57":{},"65":{},"116":{},"163":{},"223":{},"237":{},"240":{},"246":{},"268":{}},"component":{}}],["expert",{"_index":4405,"title":{},"name":{},"text":{"108":{}},"component":{}}],["expertis",{"_index":6071,"title":{"269-23":{}},"name":{},"text":{"204":{},"269":{}},"component":{}}],["expir",{"_index":1610,"title":{},"name":{},"text":{"15":{},"16":{},"21":{},"67":{},"72":{},"75":{},"78":{},"122":{},"140":{},"141":{},"144":{},"159":{},"196":{},"226":{},"253":{},"255":{}},"component":{}}],["expires_in",{"_index":5703,"title":{},"name":{},"text":{"179":{}},"component":{}}],["expiresinday",{"_index":6445,"title":{},"name":{},"text":{"253":{}},"component":{}}],["expiri",{"_index":2082,"title":{},"name":{},"text":{"40":{},"52":{}},"component":{}}],["explain",{"_index":1107,"title":{},"name":{},"text":{"6":{},"25":{},"132":{},"223":{}},"component":{}}],["explan",{"_index":4254,"title":{},"name":{},"text":{"100":{},"138":{},"262":{}},"component":{}}],["explicit",{"_index":1076,"title":{},"name":{},"text":{"6":{}},"component":{}}],["explicitli",{"_index":1093,"title":{},"name":{},"text":{"6":{},"67":{},"105":{},"167":{},"168":{},"195":{},"242":{},"244":{}},"component":{}}],["exploit",{"_index":3235,"title":{},"name":{},"text":{"67":{}},"component":{}}],["explor",{"_index":674,"title":{},"name":{},"text":{"4":{},"12":{},"104":{},"240":{},"242":{},"246":{}},"component":{}}],["export",{"_index":741,"title":{"61-2":{}},"name":{},"text":{"4":{},"12":{},"47":{},"48":{},"56":{},"59":{},"61":{},"73":{},"110":{},"119":{},"189":{},"198":{},"204":{}},"component":{}}],["expos",{"_index":4565,"title":{},"name":{"181":{}},"text":{"124":{},"271":{},"272":{}},"component":{}}],["exposesearchcondit",{"_index":4127,"title":{},"name":{},"text":{"84":{},"167":{},"272":{}},"component":{}}],["exposur",{"_index":3344,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["express",{"_index":1180,"title":{"52-7":{}},"name":{},"text":{"6":{},"15":{},"16":{},"51":{},"52":{},"100":{},"104":{},"107":{},"140":{},"142":{},"154":{},"159":{},"160":{},"161":{},"212":{},"221":{},"222":{},"262":{}},"component":{}}],["ext",{"_index":2182,"title":{"84":{}},"name":{"122":{},"123":{},"167":{}},"text":{"47":{},"83":{},"84":{},"105":{},"124":{},"138":{},"167":{},"168":{},"179":{},"198":{},"244":{},"257":{}},"component":{}}],["ext.adoc",{"_index":4803,"title":{},"name":{},"text":{"138":{},"168":{},"170":{}},"component":{}}],["ext.adoc#cr",{"_index":5539,"title":{},"name":{},"text":{"167":{}},"component":{}}],["ext.jar",{"_index":5651,"title":{},"name":{},"text":{"168":{}},"component":{}}],["ext:altertableapi",{"_index":5544,"title":{},"name":{},"text":{"167":{}},"component":{}}],["ext:attribut",{"_index":5545,"title":{},"name":{},"text":{"167":{}},"component":{}}],["ext:autogener",{"_index":5491,"title":{"165-3":{},"167-7":{}},"name":{},"text":{"165":{},"167":{}},"component":{}}],["ext:bulkload=\"tru",{"_index":4272,"title":{},"name":{},"text":{"103":{}},"component":{}}],["ext:column",{"_index":6500,"title":{},"name":{},"text":{"257":{}},"component":{}}],["ext:createsearchcondit",{"_index":4821,"title":{},"name":{},"text":{"138":{}},"component":{}}],["ext:historyflag",{"_index":4797,"title":{},"name":{},"text":{"138":{},"167":{},"169":{}},"component":{}}],["ext:logicoper",{"_index":6501,"title":{},"name":{},"text":{"257":{}},"component":{}}],["ext:tabl",{"_index":6503,"title":{},"name":{},"text":{"257":{}},"component":{}}],["ext:wher",{"_index":5533,"title":{"167-12":{}},"name":{},"text":{},"component":{}}],["extend",{"_index":383,"title":{"22":{},"167":{}},"name":{},"text":{"2":{},"22":{},"23":{},"47":{},"49":{},"58":{},"66":{},"81":{},"84":{},"99":{},"123":{},"138":{},"142":{},"167":{},"168":{},"170":{},"171":{},"244":{},"253":{},"254":{},"257":{},"268":{}},"component":{}}],["extens",{"_index":1304,"title":{"157":{},"220":{},"49-7":{},"49-41":{},"49-58":{},"81-10":{},"84-6":{},"168-2":{},"168-4":{},"216-2":{},"216-3":{},"257-7":{},"271-8":{},"271-10":{},"272-9":{}},"name":{},"text":{"6":{},"19":{},"23":{},"47":{},"49":{},"66":{},"76":{},"81":{},"82":{},"84":{},"99":{},"103":{},"122":{},"123":{},"124":{},"138":{},"139":{},"140":{},"141":{},"154":{},"157":{},"158":{},"160":{},"161":{},"162":{},"166":{},"167":{},"168":{},"183":{},"184":{},"186":{},"195":{},"202":{},"216":{},"220":{},"221":{},"222":{},"226":{},"227":{},"244":{},"253":{},"254":{},"257":{},"264":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["extenst",{"_index":2179,"title":{},"name":{},"text":{"47":{}},"component":{}}],["extern",{"_index":494,"title":{"104":{},"105":{},"122":{},"123":{},"124":{},"179":{},"195":{},"199":{},"201":{},"267":{},"31-2":{},"46-3":{},"46-8":{},"46-9":{},"49-20":{},"73-6":{},"104-4":{},"105-2":{},"105-6":{},"122-2":{},"124-3":{},"124-8":{},"124-9":{},"167-21":{},"182-2":{},"188-6":{},"195-2":{},"195-6":{},"195-11":{},"195-12":{},"195-16":{},"195-26":{},"202-15":{},"216-8":{},"247-1":{},"267-5":{},"269-8":{}},"name":{"162":{},"247":{}},"text":{"2":{},"9":{},"10":{},"16":{},"21":{},"25":{},"29":{},"30":{},"31":{},"33":{},"44":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"55":{},"56":{},"57":{},"65":{},"66":{},"67":{},"73":{},"75":{},"76":{},"78":{},"81":{},"84":{},"99":{},"104":{},"105":{},"115":{},"116":{},"122":{},"123":{},"124":{},"125":{},"126":{},"132":{},"133":{},"138":{},"140":{},"154":{},"159":{},"162":{},"167":{},"168":{},"171":{},"179":{},"180":{},"181":{},"182":{},"183":{},"185":{},"188":{},"189":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"216":{},"227":{},"231":{},"248":{},"250":{},"251":{},"253":{},"255":{},"258":{},"262":{},"267":{},"269":{},"272":{}},"component":{}}],["external/intern",{"_index":5998,"title":{},"name":{},"text":{"197":{}},"component":{}}],["externally_termin",{"_index":6107,"title":{},"name":{},"text":{"205":{}},"component":{}}],["externalsecret",{"_index":5852,"title":{"195-15":{}},"name":{},"text":{"195":{}},"component":{}}],["externalsystem",{"_index":5607,"title":{},"name":{},"text":{"167":{},"171":{}},"component":{}}],["extra",{"_index":4264,"title":{},"name":{},"text":{"101":{}},"component":{}}],["extract",{"_index":767,"title":{"159":{},"108-7":{},"108-14":{}},"name":{},"text":{"4":{},"44":{},"52":{},"58":{},"61":{},"76":{},"108":{},"118":{},"159":{},"166":{},"167":{},"195":{},"196":{},"198":{}},"component":{}}],["extractaddpersonnelformprepopulationact",{"_index":4999,"title":{},"name":{},"text":{"141":{}},"component":{}}],["extractlabidfromformact",{"_index":4994,"title":{},"name":{},"text":{"141":{}},"component":{}}],["eyjhbgcioijsuzi1niisinr5ccigoiaislduiiwia2lkiia6icjxdk4waljlnzjjnzbwql9rdjbwvkzhr0lwsk50of9mn3atdzhkrhe2slzvin0.eyjlehaioje2ntcyotuzmjusimlhdci6mty1nzi5ntaynswianrpijoindy5nda3mdytmzq0ms00zwmylwjmndutyzhiywrjzgm3zdiyiiwiaxnzijoiahr0chm6ly9wbgf0zm9ybs1rzxljbg9hay5hchbzlmnpy2qylm1kdhutzgrtlnbyb2ply3rzlmvwyw0uy29tl2f1dggvcmvhbg1zl21kdhutzgrtlwvkcc1jawnklwxvd2nvzgutzgv2lwrldi1lehrlcm5hbc1zexn0zw0ilcjzdwiioii0ytyymmy0yy1hoge4ltq5m2utogq4zs03mjmyngjlodewzgmilcj0exaioijczwfyzxiilcjhenaioij0cmvtyml0ys1pbnzva2vyiiwiywnyijoimsisimfsbg93zwqtb3jpz2lucyi6wyiixswicmvhbg1fywnjzxnzijp7injvbgvzijpbinryzw1iaxrhlwludm9rzxiixx0sinnjb3blijoichjvzmlszsblbwfpbcisimvkcnbvdsi6ijailcjlbwfpbf92zxjpzmllzci6zmfsc2usimnsawvudehvc3qioii4ns4ymjmumja5lje4iiwiy2xpzw50swqioij0cmvtyml0ys1pbnzva2vyiiwizhjmbyi6ijailcjmdwxstmftzsi6itch0lxrgncy0zbrgdc90ljqusdqutc",{"_index":5694,"title":{},"name":{},"text":{"179":{}},"component":{}}],["f",{"_index":816,"title":{},"name":{},"text":{"4":{},"73":{},"148":{},"149":{},"183":{},"186":{}},"component":{}}],["f278366",{"_index":5773,"title":{},"name":{},"text":{"183":{}},"component":{}}],["f278366.\\nin",{"_index":5815,"title":{},"name":{},"text":{"186":{}},"component":{}}],["f7dc68fe",{"_index":5408,"title":{},"name":{},"text":{"161":{}},"component":{}}],["f@inbucket.inbucket.svc.cluster.loc",{"_index":5777,"title":{},"name":{},"text":{"183":{}},"component":{}}],["fabric",{"_index":6526,"title":{},"name":{},"text":{"258":{}},"component":{}}],["face",{"_index":332,"title":{},"name":{},"text":{"2":{},"6":{}},"component":{}}],["facil",{"_index":391,"title":{},"name":{},"text":{"2":{},"59":{}},"component":{}}],["facilit",{"_index":334,"title":{},"name":{},"text":{"2":{},"9":{},"21":{},"32":{},"41":{},"44":{},"65":{},"81":{},"99":{},"113":{},"123":{},"237":{},"244":{},"262":{},"264":{}},"component":{}}],["facilitation/model",{"_index":4250,"title":{},"name":{},"text":{"100":{},"139":{},"140":{},"141":{},"212":{},"216":{},"227":{},"262":{},"264":{}},"component":{}}],["fact",{"_index":4477,"title":{},"name":{},"text":{"115":{},"218":{}},"component":{}}],["factor",{"_index":1257,"title":{"23-6":{}},"name":{},"text":{"6":{},"23":{},"108":{},"125":{},"149":{}},"component":{}}],["factori",{"_index":407,"title":{"161":{},"221":{},"140-17":{},"141-15":{},"155-7":{}},"name":{},"text":{"2":{},"12":{},"31":{},"47":{},"52":{},"58":{},"59":{},"66":{},"78":{},"103":{},"106":{},"107":{},"124":{},"126":{},"131":{},"138":{},"139":{},"140":{},"141":{},"155":{},"157":{},"159":{},"161":{},"166":{},"179":{},"207":{},"220":{},"221":{},"225":{},"231":{},"272":{}},"component":{}}],["factory/count",{"_index":5718,"title":{},"name":{},"text":{"179":{}},"component":{}}],["factory/koatuu",{"_index":4984,"title":{},"name":{},"text":{"140":{}},"component":{}}],["factory/laboratori",{"_index":5038,"title":{},"name":{},"text":{"141":{}},"component":{}}],["factory/ownership",{"_index":4979,"title":{},"name":{},"text":{"140":{}},"component":{}}],["factory/search",{"_index":6877,"title":{},"name":{},"text":{"272":{}},"component":{}}],["factory/staff",{"_index":5059,"title":{},"name":{},"text":{"141":{}},"component":{}}],["factory/test",{"_index":4568,"title":{},"name":{},"text":{"124":{}},"component":{}}],["fail",{"_index":1115,"title":{},"name":{},"text":{"6":{},"19":{},"56":{},"57":{},"60":{},"66":{},"73":{},"81":{},"119":{},"127":{},"131":{},"183":{},"186":{},"242":{}},"component":{}}],["failov",{"_index":4013,"title":{},"name":{},"text":{"81":{}},"component":{}}],["failover_on_backend_error",{"_index":6584,"title":{},"name":{},"text":{"258":{}},"component":{}}],["failur",{"_index":2643,"title":{},"name":{},"text":{"52":{},"60":{},"67":{},"73":{},"131":{},"183":{},"186":{},"197":{}},"component":{}}],["failuredomain",{"_index":1845,"title":{},"name":{},"text":{"23":{}},"component":{}}],["failurereason",{"_index":5778,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["fall",{"_index":2292,"title":{},"name":{},"text":{"49":{},"99":{}},"component":{}}],["fals",{"_index":850,"title":{},"name":{},"text":{"4":{},"21":{},"55":{},"67":{},"73":{},"117":{},"138":{},"140":{},"141":{},"159":{},"167":{},"171":{},"183":{},"186":{},"258":{},"272":{}},"component":{}}],["famili",{"_index":3116,"title":{},"name":{},"text":{"61":{},"167":{},"183":{}},"component":{}}],["familiar",{"_index":1413,"title":{},"name":{},"text":{"8":{},"119":{},"136":{},"139":{},"140":{},"141":{}},"component":{}}],["faq",{"_index":211,"title":{"5":{}},"name":{"5":{}},"text":{"1":{}},"component":{}}],["far",{"_index":4231,"title":{},"name":{},"text":{"99":{}},"component":{}}],["fast",{"_index":1116,"title":{},"name":{},"text":{"6":{},"60":{},"123":{}},"component":{}}],["faster",{"_index":638,"title":{},"name":{},"text":{"4":{},"233":{}},"component":{}}],["fastest",{"_index":6872,"title":{},"name":{},"text":{"272":{}},"component":{}}],["fault",{"_index":2038,"title":{},"name":{},"text":{"32":{},"44":{},"45":{},"48":{},"272":{}},"component":{}}],["favour",{"_index":4216,"title":{},"name":{},"text":{"99":{}},"component":{}}],["fe",{"_index":1270,"title":{},"name":{},"text":{"6":{},"254":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["feasibl",{"_index":4412,"title":{},"name":{},"text":{"108":{},"242":{}},"component":{}}],["featur",{"_index":163,"title":{"81-2":{},"226-2":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"32":{},"36":{},"52":{},"57":{},"58":{},"66":{},"67":{},"75":{},"76":{},"81":{},"87":{},"108":{},"143":{},"150":{},"151":{},"152":{},"163":{},"165":{},"194":{},"226":{},"230":{},"232":{},"235":{},"253":{},"258":{},"262":{},"269":{}},"component":{}}],["featurecollect",{"_index":2882,"title":{},"name":{},"text":{"58":{}},"component":{}}],["feedback",{"_index":3315,"title":{},"name":{},"text":{"67":{},"270":{}},"component":{}}],["feign",{"_index":2174,"title":{},"name":{},"text":{"47":{}},"component":{}}],["femal",{"_index":5608,"title":{},"name":{},"text":{"167":{}},"component":{}}],["fet",{"_index":5398,"title":{},"name":{},"text":{"161":{}},"component":{}}],["fetch",{"_index":480,"title":{},"name":{},"text":{"2":{},"122":{},"167":{},"192":{},"195":{}},"component":{}}],["fetchtyp",{"_index":5614,"title":{},"name":{},"text":{"167":{}},"component":{}}],["few",{"_index":1603,"title":{},"name":{},"text":{"15":{},"16":{},"25":{},"29":{},"117":{},"118":{},"119":{},"234":{},"236":{}},"component":{}}],["fff;\\n",{"_index":5765,"title":{},"name":{},"text":{"183":{}},"component":{}}],["field",{"_index":576,"title":{"227":{},"270":{},"108-10":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"15":{},"16":{},"23":{},"25":{},"29":{},"30":{},"33":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"63":{},"66":{},"72":{},"75":{},"76":{},"84":{},"99":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"115":{},"118":{},"119":{},"120":{},"124":{},"127":{},"129":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"167":{},"173":{},"175":{},"181":{},"182":{},"183":{},"186":{},"196":{},"205":{},"210":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"234":{},"239":{},"242":{},"245":{},"256":{},"257":{},"259":{},"260":{},"265":{},"270":{},"271":{}},"component":{}}],["field1\":\"value1",{"_index":5320,"title":{},"name":{},"text":{"159":{}},"component":{}}],["field2\":\"value2",{"_index":5321,"title":{},"name":{},"text":{"159":{}},"component":{}}],["fieldnam",{"_index":5303,"title":{},"name":{},"text":{"159":{}},"component":{}}],["field—​for",{"_index":6300,"title":{},"name":{},"text":{"230":{},"231":{},"232":{}},"component":{}}],["field’",{"_index":5066,"title":{},"name":{},"text":{"141":{},"230":{},"232":{}},"component":{}}],["figur",{"_index":45,"title":{},"name":{},"text":{"1":{},"8":{},"25":{},"29":{},"40":{},"52":{},"58":{},"59":{},"62":{},"73":{},"105":{},"124":{},"126":{},"142":{},"166":{},"167":{},"179":{},"181":{},"185":{},"187":{},"191":{},"194":{},"195":{},"204":{},"205":{},"227":{},"237":{},"241":{},"246":{},"254":{},"255":{},"256":{},"257":{},"264":{},"265":{},"267":{},"268":{},"269":{},"270":{},"271":{}},"component":{}}],["file",{"_index":283,"title":{"12":{},"23":{},"103":{},"119":{},"207":{},"227":{},"228":{},"12-2":{},"23-2":{},"72-1":{},"99-15":{},"105-7":{},"107-8":{},"108-12":{},"108-13":{},"119-5":{},"139-21":{},"140-26":{},"140-27":{},"141-26":{},"141-27":{},"195-17":{},"206-4":{},"207-3":{},"207-4":{},"207-5":{},"207-6":{},"227-1":{},"227-2":{},"228-3":{},"244-6":{},"267-5":{},"269-7":{}},"name":{"12":{},"207":{},"227":{},"228":{}},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"14":{},"15":{},"16":{},"19":{},"21":{},"22":{},"23":{},"28":{},"29":{},"30":{},"33":{},"34":{},"36":{},"40":{},"47":{},"49":{},"50":{},"52":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"66":{},"67":{},"68":{},"72":{},"73":{},"75":{},"76":{},"78":{},"84":{},"99":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"112":{},"115":{},"117":{},"118":{},"119":{},"121":{},"122":{},"126":{},"127":{},"129":{},"131":{},"132":{},"138":{},"139":{},"140":{},"141":{},"142":{},"148":{},"149":{},"154":{},"155":{},"158":{},"159":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"177":{},"181":{},"182":{},"183":{},"184":{},"186":{},"192":{},"193":{},"195":{},"202":{},"203":{},"204":{},"206":{},"207":{},"208":{},"212":{},"216":{},"217":{},"221":{},"222":{},"227":{},"228":{},"234":{},"237":{},"241":{},"242":{},"244":{},"251":{},"256":{},"267":{},"268":{},"269":{},"270":{},"271":{}},"component":{}}],["file=\"data",{"_index":5101,"title":{},"name":{},"text":{"142":{}},"component":{}}],["file_'.concat(date.format(new",{"_index":2539,"title":{},"name":{},"text":{"51":{}},"component":{}}],["filenam",{"_index":2538,"title":{},"name":{},"text":{"51":{},"83":{},"105":{},"168":{},"272":{}},"component":{}}],["fileobj",{"_index":2546,"title":{},"name":{},"text":{"51":{}},"component":{}}],["fileobj.checksum",{"_index":2549,"title":{},"name":{},"text":{"51":{}},"component":{}}],["fileobj.id",{"_index":2547,"title":{},"name":{},"text":{"51":{}},"component":{}}],["files/user_data.sh.tpl",{"_index":3631,"title":{},"name":{},"text":{"73":{}},"component":{}}],["files—​for",{"_index":6272,"title":{},"name":{},"text":{"227":{}},"component":{}}],["file’",{"_index":4510,"title":{},"name":{},"text":{"119":{},"227":{}},"component":{}}],["fill",{"_index":1438,"title":{},"name":{},"text":{"9":{},"52":{},"57":{},"59":{},"61":{},"73":{},"84":{},"103":{},"108":{},"118":{},"119":{},"134":{},"135":{},"136":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"149":{},"154":{},"161":{},"164":{},"165":{},"175":{},"212":{},"216":{},"217":{},"218":{},"223":{},"224":{},"225":{},"234":{},"237":{},"260":{},"270":{},"271":{}},"component":{}}],["filter",{"_index":676,"title":{"231":{},"60-13":{},"127-3":{},"231-2":{}},"name":{},"text":{"4":{},"39":{},"49":{},"52":{},"57":{},"60":{},"63":{},"80":{},"104":{},"119":{},"126":{},"127":{},"140":{},"141":{},"142":{},"194":{},"195":{},"196":{},"205":{},"209":{},"226":{},"231":{},"267":{}},"component":{}}],["final",{"_index":1675,"title":{},"name":{},"text":{"19":{},"52":{},"73":{},"108":{},"142":{},"162":{},"164":{},"217":{},"271":{}},"component":{}}],["find",{"_index":682,"title":{},"name":{},"text":{"4":{},"5":{},"9":{},"13":{},"15":{},"16":{},"17":{},"19":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"37":{},"42":{},"43":{},"46":{},"51":{},"52":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"66":{},"67":{},"70":{},"73":{},"100":{},"104":{},"105":{},"115":{},"118":{},"119":{},"124":{},"127":{},"128":{},"129":{},"131":{},"139":{},"140":{},"141":{},"142":{},"144":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"161":{},"165":{},"167":{},"177":{},"181":{},"182":{},"183":{},"186":{},"191":{},"202":{},"205":{},"212":{},"216":{},"217":{},"224":{},"225":{},"227":{},"229":{},"230":{},"232":{},"237":{},"242":{},"244":{},"262":{}},"component":{}}],["find_all_unit",{"_index":2996,"title":{},"name":{},"text":{"59":{}},"component":{}}],["find_all_units_v",{"_index":3003,"title":{},"name":{},"text":{"59":{}},"component":{}}],["finder",{"_index":3260,"title":{},"name":{},"text":{"67":{}},"component":{}}],["finish",{"_index":1946,"title":{},"name":{},"text":{"29":{},"75":{},"99":{},"105":{},"131":{},"139":{},"154":{},"165":{},"205":{},"234":{},"236":{},"259":{},"261":{}},"component":{}}],["first",{"_index":601,"title":{"19-5":{},"154-3":{}},"name":{},"text":{"4":{},"6":{},"9":{},"19":{},"21":{},"28":{},"30":{},"40":{},"52":{},"57":{},"58":{},"59":{},"61":{},"66":{},"67":{},"68":{},"70":{},"73":{},"75":{},"76":{},"100":{},"107":{},"108":{},"117":{},"118":{},"119":{},"120":{},"122":{},"135":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"152":{},"154":{},"155":{},"161":{},"162":{},"164":{},"166":{},"167":{},"168":{},"177":{},"179":{},"184":{},"186":{},"188":{},"209":{},"213":{},"214":{},"222":{},"239":{},"248":{},"255":{},"257":{},"258":{},"262":{},"272":{}},"component":{}}],["first_nam",{"_index":4682,"title":{},"name":{},"text":{"135":{}},"component":{}}],["firstli",{"_index":1495,"title":{},"name":{},"text":{"10":{}},"component":{}}],["firstnam",{"_index":3134,"title":{},"name":{},"text":{"61":{},"161":{}},"component":{}}],["firstname\":\"firstnam",{"_index":5216,"title":{},"name":{},"text":{"154":{}},"component":{}}],["firstname\":\"john",{"_index":5416,"title":{},"name":{},"text":{"161":{}},"component":{}}],["firstname=$3",{"_index":6510,"title":{},"name":{},"text":{"257":{}},"component":{}}],["firstversa",{"_index":5180,"title":{},"name":{},"text":{"154":{}},"component":{}}],["fiscal",{"_index":551,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fit",{"_index":5119,"title":{},"name":{},"text":{"142":{},"217":{}},"component":{}}],["five",{"_index":5361,"title":{},"name":{},"text":{"161":{}},"component":{}}],["fix",{"_index":824,"title":{},"name":{},"text":{"4":{},"6":{},"66":{},"67":{},"108":{},"141":{},"218":{}},"component":{}}],["fixabl",{"_index":3190,"title":{},"name":{},"text":{"66":{}},"component":{}}],["fixat",{"_index":3287,"title":{},"name":{},"text":{"67":{}},"component":{}}],["fixedtermcontractflag",{"_index":5062,"title":{},"name":{},"text":{"141":{}},"component":{}}],["fk",{"_index":4637,"title":{},"name":{},"text":{"129":{}},"component":{}}],["fk_",{"_index":4816,"title":{},"name":{},"text":{"138":{}},"component":{}}],["fk_subject_subject_id",{"_index":4648,"title":{},"name":{},"text":{"131":{}},"component":{}}],["flag",{"_index":1740,"title":{},"name":{},"text":{"21":{},"73":{},"140":{},"167":{}},"component":{}}],["flash",{"_index":223,"title":{},"name":{},"text":{"2":{}},"component":{}}],["flat",{"_index":1080,"title":{},"name":{},"text":{"6":{}},"component":{}}],["flexibl",{"_index":1206,"title":{},"name":{},"text":{"6":{},"34":{},"66":{},"81":{},"123":{},"163":{},"226":{}},"component":{}}],["float",{"_index":1415,"title":{},"name":{},"text":{"8":{},"183":{}},"component":{}}],["flow",{"_index":1275,"title":{"145-2":{}},"name":{},"text":{"6":{},"52":{},"67":{},"68":{},"115":{},"117":{},"145":{},"159":{},"183":{},"186":{},"193":{},"210":{},"213":{},"214":{},"216":{},"217":{},"252":{},"260":{},"262":{}},"component":{}}],["flow(",{"_index":6605,"title":{},"name":{},"text":{"261":{}},"component":{}}],["flowchart",{"_index":6035,"title":{},"name":{},"text":{"202":{}},"component":{}}],["fluentd",{"_index":1556,"title":{},"name":{},"text":{"14":{},"49":{}},"component":{}}],["focu",{"_index":367,"title":{},"name":{},"text":{"2":{},"6":{},"99":{}},"component":{}}],["focus",{"_index":3220,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["fold",{"_index":6608,"title":{"262-13":{}},"name":{},"text":{"262":{}},"component":{}}],["folder",{"_index":818,"title":{},"name":{},"text":{"4":{},"16":{},"18":{},"35":{},"59":{},"66":{},"67":{},"73":{},"103":{},"125":{},"127":{},"138":{},"139":{},"140":{},"141":{},"142":{},"158":{},"161":{},"162":{},"183":{},"184":{},"186":{},"221":{},"222":{},"237":{},"260":{},"267":{},"269":{}},"component":{}}],["follow",{"_index":158,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"33":{},"39":{},"40":{},"42":{},"43":{},"44":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"78":{},"81":{},"82":{},"84":{},"85":{},"87":{},"88":{},"99":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"112":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"148":{},"149":{},"151":{},"152":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"173":{},"175":{},"177":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"188":{},"189":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"204":{},"205":{},"208":{},"210":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"220":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"233":{},"234":{},"235":{},"237":{},"240":{},"242":{},"244":{},"245":{},"248":{},"249":{},"251":{},"252":{},"254":{},"255":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"265":{},"266":{},"267":{},"269":{},"270":{},"272":{}},"component":{}}],["followig",{"_index":2725,"title":{},"name":{},"text":{"57":{}},"component":{}}],["font",{"_index":3115,"title":{},"name":{},"text":{"61":{},"183":{}},"component":{}}],["footprint",{"_index":4220,"title":{},"name":{},"text":{"99":{}},"component":{}}],["forbidden",{"_index":4509,"title":{},"name":{},"text":{"119":{}},"component":{}}],["forc",{"_index":1809,"title":{},"name":{},"text":{"22":{}},"component":{}}],["force_detach_polici",{"_index":3594,"title":{},"name":{},"text":{"73":{}},"component":{}}],["forcibl",{"_index":2054,"title":{},"name":{},"text":{"34":{}},"component":{}}],["forecast",{"_index":2888,"title":{},"name":{},"text":{"58":{}},"component":{}}],["foreign",{"_index":2942,"title":{"131-2":{}},"name":{},"text":{"59":{},"107":{},"131":{},"135":{},"138":{},"167":{}},"component":{}}],["foreigners,103.208.303",{"_index":3039,"title":{},"name":{},"text":{"59":{}},"component":{}}],["foreignkeynam",{"_index":4644,"title":{},"name":{},"text":{"131":{},"138":{}},"component":{}}],["foreignkeyname=\"fk_subject_subject_id",{"_index":4647,"title":{},"name":{},"text":{"131":{}},"component":{}}],["foremost",{"_index":3359,"title":{},"name":{},"text":{"70":{}},"component":{}}],["forest",{"_index":2886,"title":{},"name":{},"text":{"58":{}},"component":{}}],["forgotten",{"_index":4181,"title":{"99-20":{}},"name":{},"text":{},"component":{}}],["fork",{"_index":2203,"title":{},"name":{},"text":{"47":{},"188":{},"192":{},"193":{},"204":{},"249":{},"250":{},"254":{},"255":{},"270":{}},"component":{}}],["form",{"_index":178,"title":{"68":{},"106":{},"141":{},"163":{},"225":{},"245":{},"246":{},"267":{},"268":{},"49-37":{},"52-5":{},"52-12":{},"52-13":{},"52-14":{},"55-8":{},"58-7":{},"58-10":{},"58-13":{},"58-16":{},"58-19":{},"66-12":{},"100-2":{},"100-3":{},"100-4":{},"100-5":{},"100-7":{},"100-8":{},"100-9":{},"103-2":{},"103-3":{},"103-4":{},"105-7":{},"105-8":{},"131-4":{},"138-10":{},"139-13":{},"139-15":{},"139-16":{},"139-17":{},"139-18":{},"140-21":{},"140-22":{},"140-23":{},"140-24":{},"141-18":{},"141-19":{},"141-20":{},"141-21":{},"141-23":{},"141-24":{},"159-8":{},"159-9":{},"159-10":{},"160-7":{},"161-4":{},"161-5":{},"161-10":{},"161-11":{},"161-12":{},"162-9":{},"162-10":{},"202-9":{},"246-1":{},"246-2":{},"267-10":{}},"name":{"106":{},"141":{},"231":{},"246":{},"267":{}},"text":{"1":{},"2":{},"6":{},"8":{},"9":{},"12":{},"13":{},"45":{},"46":{},"47":{},"49":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"61":{},"66":{},"69":{},"73":{},"78":{},"84":{},"86":{},"99":{},"100":{},"103":{},"105":{},"106":{},"115":{},"118":{},"122":{},"123":{},"124":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"181":{},"183":{},"186":{},"189":{},"195":{},"198":{},"201":{},"202":{},"204":{},"205":{},"213":{},"216":{},"217":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"234":{},"238":{},"240":{},"242":{},"245":{},"246":{},"253":{},"255":{},"264":{},"267":{},"268":{},"271":{}},"component":{}}],["form.io",{"_index":2385,"title":{},"name":{},"text":{"49":{},"106":{},"204":{},"231":{}},"component":{}}],["form.json",{"_index":3187,"title":{},"name":{},"text":{"66":{}},"component":{}}],["form.ui",{"_index":6043,"title":{},"name":{},"text":{"202":{}},"component":{}}],["form/busi",{"_index":6654,"title":{},"name":{},"text":{"268":{}},"component":{}}],["form:2:1f54abab",{"_index":5782,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["formal",{"_index":574,"title":{},"name":{},"text":{"2":{},"164":{},"272":{}},"component":{}}],["format",{"_index":26,"title":{"12":{},"61":{},"148":{},"149":{},"159":{},"12-2":{},"61-3":{},"61-4":{},"61-5":{},"108-12":{},"148-1":{},"148-2":{},"149-1":{},"149-2":{},"226-3":{}},"name":{},"text":{"1":{},"2":{},"6":{},"12":{},"15":{},"16":{},"21":{},"29":{},"30":{},"44":{},"51":{},"52":{},"58":{},"61":{},"66":{},"67":{},"72":{},"75":{},"76":{},"79":{},"101":{},"103":{},"105":{},"107":{},"108":{},"111":{},"113":{},"115":{},"119":{},"123":{},"124":{},"128":{},"132":{},"134":{},"135":{},"136":{},"140":{},"141":{},"144":{},"147":{},"148":{},"149":{},"154":{},"155":{},"159":{},"161":{},"162":{},"164":{},"165":{},"167":{},"173":{},"175":{},"179":{},"188":{},"192":{},"193":{},"196":{},"200":{},"201":{},"202":{},"204":{},"205":{},"207":{},"209":{},"212":{},"213":{},"216":{},"226":{},"227":{},"231":{},"234":{},"237":{},"242":{},"245":{},"248":{},"251":{},"253":{},"255":{},"267":{},"269":{},"271":{}},"component":{}}],["formdata",{"_index":2813,"title":{},"name":{},"text":{"58":{},"161":{},"222":{},"269":{}},"component":{}}],["formdata.prop('birthday').valu",{"_index":5389,"title":{},"name":{},"text":{"161":{}},"component":{}}],["formdata.prop('firstname').valu",{"_index":5387,"title":{},"name":{},"text":{"161":{}},"component":{}}],["formdata.prop('lastname').valu",{"_index":5385,"title":{},"name":{},"text":{"161":{}},"component":{}}],["formdata.prop('signed_data').valu",{"_index":6678,"title":{},"name":{},"text":{"269":{}},"component":{}}],["formdataform",{"_index":2821,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop(\"address",{"_index":2827,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop(\"entityid",{"_index":2853,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop(\"nam",{"_index":2825,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop('entitylocation').prop('geometri",{"_index":2832,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop('entitylocation').prop('geometry').tostr",{"_index":2829,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop('map').prop('properties').prop(\"address\").valu",{"_index":2844,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop('map').prop('properties').prop(\"id\").valu",{"_index":2842,"title":{},"name":{},"text":{"58":{}},"component":{}}],["formdataform.prop('map').prop('properties').prop(\"name\").valu",{"_index":2843,"title":{},"name":{},"text":{"58":{}},"component":{}}],["former",{"_index":4610,"title":{},"name":{},"text":{"127":{}},"component":{}}],["formio",{"_index":2864,"title":{},"name":{},"text":{"58":{},"139":{},"140":{},"141":{},"267":{}},"component":{}}],["formkey",{"_index":5262,"title":{},"name":{},"text":{"159":{},"231":{}},"component":{}}],["forms.adoc",{"_index":4237,"title":{},"name":{},"text":{"100":{},"139":{},"160":{}},"component":{}}],["formscriptlist",{"_index":6641,"title":{},"name":{},"text":{"267":{}},"component":{}}],["formvari",{"_index":3210,"title":{"229-8":{}},"name":{},"text":{"66":{},"229":{}},"component":{}}],["form’",{"_index":575,"title":{},"name":{},"text":{"2":{},"58":{},"103":{},"139":{},"141":{},"160":{},"227":{},"232":{},"246":{}},"component":{}}],["forth",{"_index":155,"title":{},"name":{},"text":{"1":{}},"component":{}}],["forward",{"_index":1942,"title":{},"name":{},"text":{"29":{},"63":{},"67":{},"152":{},"182":{},"195":{},"196":{},"254":{},"262":{}},"component":{}}],["forwardoriginaltoken",{"_index":5943,"title":{},"name":{},"text":{"196":{},"255":{}},"component":{}}],["found",{"_index":757,"title":{},"name":{},"text":{"4":{},"6":{},"51":{},"52":{},"57":{},"60":{},"67":{},"73":{},"119":{},"124":{},"141":{},"183":{},"186":{},"200":{},"258":{},"264":{},"270":{}},"component":{}}],["foundat",{"_index":1421,"title":{},"name":{},"text":{"9":{},"40":{}},"component":{}}],["four",{"_index":1127,"title":{},"name":{},"text":{"6":{},"21":{},"32":{},"58":{}},"component":{}}],["fragment",{"_index":4547,"title":{},"name":{},"text":{"122":{}},"component":{}}],["framework",{"_index":1235,"title":{"49-2":{},"49-3":{}},"name":{},"text":{"6":{},"12":{},"45":{},"49":{},"58":{},"66":{},"67":{},"138":{},"194":{},"201":{},"253":{},"257":{}},"component":{}}],["fraud",{"_index":5774,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["free",{"_index":517,"title":{},"name":{},"text":{"2":{},"66":{},"73":{},"80":{},"125":{},"128":{}},"component":{}}],["freebsd",{"_index":2363,"title":{},"name":{},"text":{"49":{}},"component":{}}],["freemark",{"_index":3108,"title":{},"name":{},"text":{"61":{},"183":{},"184":{},"186":{}},"component":{}}],["frequenc",{"_index":6407,"title":{},"name":{},"text":{"242":{}},"component":{}}],["frequent",{"_index":953,"title":{},"name":{},"text":{"5":{},"31":{}},"component":{}}],["fri",{"_index":1590,"title":{},"name":{},"text":{"15":{},"16":{},"51":{}},"component":{}}],["friday",{"_index":1592,"title":{},"name":{},"text":{"15":{},"16":{},"51":{}},"component":{}}],["friendli",{"_index":2394,"title":{},"name":{},"text":{"49":{},"165":{},"167":{}},"component":{}}],["from/to",{"_index":5567,"title":{},"name":{},"text":{"167":{}},"component":{}}],["from_head",{"_index":5963,"title":{},"name":{},"text":{"196":{}},"component":{}}],["from_port",{"_index":3611,"title":{},"name":{},"text":{"73":{}},"component":{}}],["fromhead",{"_index":5944,"title":{},"name":{},"text":{"196":{},"255":{}},"component":{}}],["front",{"_index":5956,"title":{},"name":{},"text":{"196":{},"212":{}},"component":{}}],["frontend",{"_index":6452,"title":{},"name":{},"text":{"253":{},"255":{}},"component":{}}],["frontend/b",{"_index":6499,"title":{},"name":{},"text":{"256":{}},"component":{}}],["frontendurl",{"_index":6490,"title":{},"name":{},"text":{"255":{}},"component":{}}],["frontier",{"_index":2077,"title":{},"name":{},"text":{"40":{}},"component":{}}],["fssl",{"_index":3644,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ftl",{"_index":5731,"title":{},"name":{},"text":{"183":{},"184":{},"202":{}},"component":{}}],["ftlh",{"_index":5730,"title":{},"name":{},"text":{"183":{},"184":{},"202":{}},"component":{}}],["fulfil",{"_index":1237,"title":{},"name":{},"text":{"6":{},"99":{},"140":{},"159":{},"162":{},"253":{}},"component":{}}],["full",{"_index":1437,"title":{"173-2":{}},"name":{},"text":{"9":{},"21":{},"23":{},"28":{},"30":{},"49":{},"52":{},"55":{},"58":{},"59":{},"73":{},"81":{},"105":{},"107":{},"108":{},"119":{},"132":{},"134":{},"135":{},"136":{},"138":{},"141":{},"142":{},"145":{},"148":{},"149":{},"154":{},"158":{},"173":{},"202":{},"205":{},"230":{},"244":{},"261":{},"262":{},"269":{}},"component":{}}],["full_deploy",{"_index":4620,"title":{},"name":{},"text":{"128":{}},"component":{}}],["full_nam",{"_index":2574,"title":{},"name":{},"text":{"52":{},"59":{},"134":{},"135":{}},"component":{}}],["full_name','hygienist_flag','full_time_flag','salary','fixed_term_contract_flag','contract_end_date','specialization_date','specialization_end_date','dismissal_flag','dismissal_d",{"_index":4363,"title":{},"name":{},"text":{"107":{}},"component":{}}],["fullchain",{"_index":3803,"title":{},"name":{},"text":{"73":{}},"component":{}}],["fulli",{"_index":4209,"title":{},"name":{},"text":{"99":{},"138":{},"197":{},"205":{}},"component":{}}],["fullnam",{"_index":1436,"title":{},"name":{},"text":{"9":{},"115":{},"119":{},"120":{},"141":{},"158":{},"159":{}},"component":{}}],["fulltimeflag",{"_index":5056,"title":{},"name":{},"text":{"141":{},"159":{}},"component":{}}],["function",{"_index":409,"title":{"158":{},"232":{},"6-30":{},"44-5":{},"44-6":{},"58-17":{},"84-11":{},"84-14":{},"84-17":{},"85-2":{},"88-2":{},"160-6":{},"188-3":{},"191-2":{},"193-2":{},"193-5":{},"194-2":{},"197-2":{},"199-2":{},"204-2":{},"208-2":{},"244-3":{},"248-1":{},"250-1":{},"251-1":{},"253-3":{},"254-3":{},"255-3":{},"256-2":{},"257-4":{},"262-2":{},"262-4":{},"262-6":{},"267-3":{},"268-2":{},"269-2":{},"269-14":{},"269-18":{},"270-3":{},"271-2":{},"272-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"9":{},"12":{},"19":{},"25":{},"26":{},"28":{},"31":{},"44":{},"47":{},"48":{},"49":{},"52":{},"55":{},"57":{},"58":{},"59":{},"66":{},"67":{},"68":{},"69":{},"70":{},"74":{},"75":{},"78":{},"81":{},"84":{},"85":{},"87":{},"88":{},"99":{},"100":{},"105":{},"107":{},"117":{},"118":{},"119":{},"123":{},"124":{},"125":{},"138":{},"139":{},"140":{},"141":{},"143":{},"144":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"167":{},"168":{},"183":{},"186":{},"188":{},"189":{},"191":{},"192":{},"193":{},"194":{},"197":{},"199":{},"201":{},"202":{},"204":{},"208":{},"212":{},"216":{},"218":{},"221":{},"222":{},"224":{},"227":{},"229":{},"230":{},"232":{},"233":{},"234":{},"238":{},"239":{},"240":{},"242":{},"244":{},"245":{},"249":{},"250":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"260":{},"262":{},"264":{},"265":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["functions.adoc",{"_index":4251,"title":{},"name":{},"text":{"100":{},"139":{},"140":{},"141":{},"212":{},"216":{},"227":{},"262":{},"264":{}},"component":{}}],["functions.sh",{"_index":4167,"title":{"86-4":{}},"name":{},"text":{},"component":{}}],["fund",{"_index":4011,"title":{},"name":{},"text":{"81":{}},"component":{}}],["fundament",{"_index":2207,"title":{},"name":{},"text":{"48":{},"99":{}},"component":{}}],["further",{"_index":147,"title":{},"name":{},"text":{"1":{},"6":{},"12":{},"33":{},"42":{},"43":{},"51":{},"52":{},"55":{},"57":{},"58":{},"66":{},"67":{},"68":{},"73":{},"84":{},"103":{},"105":{},"108":{},"122":{},"124":{},"137":{},"138":{},"139":{},"140":{},"148":{},"149":{},"154":{},"160":{},"161":{},"162":{},"191":{},"193":{},"194":{},"195":{},"199":{},"202":{},"205":{},"208":{},"216":{},"251":{},"269":{},"270":{},"272":{}},"component":{}}],["furthermor",{"_index":1427,"title":{},"name":{},"text":{"9":{}},"component":{}}],["futur",{"_index":1736,"title":{},"name":{},"text":{"21":{},"73":{},"105":{},"119":{},"120":{},"173":{},"176":{}},"component":{}}],["fuzz",{"_index":3273,"title":{},"name":{},"text":{"67":{}},"component":{}}],["fuzzi",{"_index":1448,"title":{},"name":{},"text":{"9":{}},"component":{}}],["g",{"_index":918,"title":{},"name":{},"text":{"4":{},"73":{}},"component":{}}],["gain",{"_index":198,"title":{},"name":{},"text":{"1":{},"9":{},"36":{},"66":{},"81":{},"131":{},"137":{},"140":{},"164":{},"168":{}},"component":{}}],["galicia",{"_index":4711,"title":{},"name":{},"text":{"135":{}},"component":{}}],["galley",{"_index":6003,"title":{},"name":{},"text":{"197":{}},"component":{}}],["gap",{"_index":3578,"title":{},"name":{},"text":{"73":{},"164":{}},"component":{}}],["gate",{"_index":3318,"title":{},"name":{},"text":{"67":{},"118":{}},"component":{}}],["gateway",{"_index":496,"title":{"201":{},"214":{},"215":{},"48-9":{},"52-7":{},"140-11":{},"214-2":{}},"name":{"214":{}},"text":{"2":{},"9":{},"19":{},"25":{},"48":{},"50":{},"52":{},"55":{},"65":{},"99":{},"100":{},"122":{},"124":{},"126":{},"140":{},"141":{},"156":{},"159":{},"162":{},"188":{},"193":{},"195":{},"198":{},"199":{},"201":{},"214":{},"215":{},"248":{},"250":{},"254":{},"255":{},"272":{}},"component":{}}],["gather",{"_index":368,"title":{},"name":{},"text":{"2":{},"67":{},"73":{},"99":{},"125":{},"244":{}},"component":{}}],["gatl",{"_index":1370,"title":{},"name":{},"text":{"6":{}},"component":{}}],["gb",{"_index":2485,"title":{},"name":{},"text":{"50":{},"73":{}},"component":{}}],["gc",{"_index":1694,"title":{},"name":{},"text":{"21":{},"258":{}},"component":{}}],["gdpr",{"_index":4198,"title":{},"name":{},"text":{"99":{}},"component":{}}],["ge",{"_index":5558,"title":{},"name":{},"text":{"167":{}},"component":{}}],["gear",{"_index":6345,"title":{},"name":{},"text":{"231":{}},"component":{}}],["gender",{"_index":3144,"title":{},"name":{},"text":{"61":{},"135":{}},"component":{}}],["gener",{"_index":304,"title":{"61":{},"69":{},"70":{},"147":{},"148":{},"149":{},"159":{},"165":{},"9-1":{},"12-1":{},"15-1":{},"16-1":{},"23-1":{},"25-3":{},"30-1":{},"31-1":{},"44-1":{},"51-1":{},"56-1":{},"58-1":{},"61-1":{},"61-3":{},"61-4":{},"61-5":{},"81-1":{},"82-5":{},"83-5":{},"85-1":{},"87-1":{},"88-1":{},"105-4":{},"115-1":{},"117-1":{},"119-1":{},"119-5":{},"123-1":{},"124-1":{},"125-3":{},"125-4":{},"125-5":{},"125-6":{},"125-7":{},"151-1":{},"152-1":{},"153-1":{},"159-3":{},"159-4":{},"162-3":{},"167-30":{},"177-1":{},"189-1":{},"190-1":{},"192-1":{},"194-1":{},"195-9":{},"197-1":{},"199-1":{},"200-1":{},"201-1":{},"202-6":{},"205-1":{},"206-1":{},"208-1":{},"209-1":{},"237-2":{},"242-1":{},"242-5":{},"244-1":{},"244-4":{},"253-1":{},"253-4":{},"254-1":{},"254-4":{},"255-1":{},"255-4":{},"256-3":{},"257-3":{},"257-8":{},"262-1":{},"262-3":{},"266-1":{},"266-3":{},"268-4":{},"269-4":{},"270-5":{},"271-1":{},"271-4":{},"272-1":{},"272-4":{}},"name":{"106":{},"165":{}},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"15":{},"16":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"42":{},"43":{},"44":{},"47":{},"48":{},"49":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"78":{},"81":{},"82":{},"83":{},"84":{},"85":{},"88":{},"99":{},"103":{},"105":{},"108":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"131":{},"132":{},"135":{},"136":{},"138":{},"140":{},"141":{},"142":{},"144":{},"147":{},"148":{},"149":{},"151":{},"152":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"170":{},"171":{},"177":{},"179":{},"183":{},"184":{},"186":{},"188":{},"189":{},"190":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"204":{},"205":{},"206":{},"208":{},"209":{},"210":{},"211":{},"212":{},"216":{},"218":{},"234":{},"237":{},"238":{},"242":{},"244":{},"245":{},"246":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"259":{},"260":{},"262":{},"263":{},"264":{},"265":{},"266":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["general/kong",{"_index":6845,"title":{},"name":{},"text":{"272":{}},"component":{}}],["general/registri",{"_index":6844,"title":{},"name":{},"text":{"272":{}},"component":{}}],["general_typ",{"_index":4718,"title":{},"name":{},"text":{"135":{}},"component":{}}],["geo",{"_index":2390,"title":{},"name":{},"text":{"49":{},"58":{},"198":{}},"component":{}}],["geocod",{"_index":2158,"title":{"58-17":{}},"name":{},"text":{"46":{},"58":{},"230":{}},"component":{}}],["geodata",{"_index":2004,"title":{"58":{},"32-11":{},"58-20":{}},"name":{},"text":{"32":{},"58":{},"198":{},"230":{}},"component":{}}],["geodata)[1",{"_index":2772,"title":{},"name":{},"text":{"58":{}},"component":{}}],["geograph",{"_index":2024,"title":{"58-17":{}},"name":{},"text":{"32":{},"58":{},"163":{},"230":{}},"component":{}}],["geoip",{"_index":6837,"title":{},"name":{},"text":{"272":{}},"component":{}}],["geojson",{"_index":2775,"title":{},"name":{},"text":{"58":{}},"component":{}}],["geometr",{"_index":2876,"title":{},"name":{},"text":{"58":{}},"component":{}}],["geometri",{"_index":2778,"title":{},"name":{},"text":{"58":{}},"component":{}}],["geomodul",{"_index":2040,"title":{},"name":{},"text":{"32":{}},"component":{}}],["geoserv",{"_index":1966,"title":{"32-11":{},"58-2":{},"58-3":{},"58-4":{},"58-21":{},"58-22":{}},"name":{"58":{}},"text":{"30":{},"32":{},"47":{},"49":{},"58":{},"230":{}},"component":{}}],["geoserver/registry/ow",{"_index":6294,"title":{},"name":{},"text":{"230":{}},"component":{}}],["geoserver’",{"_index":6293,"title":{},"name":{},"text":{"230":{}},"component":{}}],["geospati",{"_index":2157,"title":{"49-39":{},"58-5":{}},"name":{},"text":{"46":{},"49":{},"58":{},"230":{}},"component":{}}],["gerrit",{"_index":619,"title":{"129":{},"130":{},"32-5":{},"32-18":{},"42-3":{},"43-3":{},"118-2":{},"139-21":{},"140-27":{},"141-27":{}},"name":{},"text":{"4":{},"14":{},"28":{},"30":{},"31":{},"32":{},"33":{},"42":{},"43":{},"49":{},"55":{},"56":{},"57":{},"61":{},"65":{},"66":{},"101":{},"118":{},"129":{},"130":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"155":{},"165":{},"188":{},"191":{},"192":{},"193":{},"195":{},"201":{},"202":{},"204":{},"234":{},"235":{},"236":{},"237":{},"242":{},"244":{},"249":{},"250":{},"254":{},"256":{},"266":{},"267":{},"268":{},"270":{},"272":{}},"component":{}}],["gerrit:.git/bp",{"_index":5869,"title":{},"name":{},"text":{"195":{}},"component":{}}],["gerrit:.git/deploy",{"_index":5875,"title":{},"name":{},"text":{"195":{}},"component":{}}],["gerrit:/googlesource/gerrit",{"_index":6061,"title":{},"name":{},"text":{"204":{}},"component":{}}],["gerrit:/mdtu",{"_index":5848,"title":{},"name":{},"text":{"194":{},"197":{},"199":{},"204":{}},"component":{}}],["gerrit:registri",{"_index":6067,"title":{},"name":{},"text":{"204":{}},"component":{}}],["gerritgroupmemb",{"_index":879,"title":{},"name":{},"text":{"4":{}},"component":{}}],["gerritproject",{"_index":675,"title":{},"name":{},"text":{"4":{}},"component":{}}],["get",{"_index":14,"title":{"179":{},"1-5":{},"66-4":{},"154-8":{},"161-9":{},"177-4":{},"183-6":{},"186-6":{}},"name":{},"text":{"1":{},"23":{},"28":{},"55":{},"59":{},"66":{},"75":{},"124":{},"125":{},"142":{},"154":{},"161":{},"177":{},"180":{},"183":{},"186":{},"196":{},"205":{},"257":{},"267":{},"269":{},"272":{}},"component":{}}],["get_content(fil",{"_index":6685,"title":{},"name":{},"text":{"269":{}},"component":{}}],["get_entity_with_geo_type_not_equals_v",{"_index":2795,"title":{},"name":{},"text":{"58":{}},"component":{}}],["get_regions_or_city_region",{"_index":5504,"title":{},"name":{},"text":{"166":{}},"component":{}}],["get_requests_by_search_param_nopag",{"_index":5606,"title":{},"name":{},"text":{"167":{}},"component":{}}],["get_requests_by_search_param_offset",{"_index":5584,"title":{},"name":{},"text":{"167":{}},"component":{}}],["get_requests_by_search_param_pag",{"_index":5599,"title":{},"name":{},"text":{"167":{}},"component":{}}],["get_trembita_auth_token",{"_index":6618,"title":{},"name":{},"text":{"262":{}},"component":{}}],["get_vari",{"_index":6613,"title":{},"name":{},"text":{"262":{}},"component":{}}],["getcitizenusersbyattributesfromkeycloak",{"_index":5742,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["getusersbyattributesfromkeycloak",{"_index":5173,"title":{},"name":{},"text":{"154":{}},"component":{}}],["getusersbyattributesfromkeycloak.json",{"_index":5174,"title":{},"name":{},"text":{"154":{}},"component":{}}],["getvaluebypropertyname(\"cod",{"_index":5460,"title":{},"name":{},"text":{"162":{}},"component":{}}],["getvaluebypropertyname(\"id",{"_index":5462,"title":{},"name":{},"text":{"162":{}},"component":{}}],["getvaluebypropertyname(\"nam",{"_index":5458,"title":{},"name":{},"text":{"162":{}},"component":{}}],["getvaluebypropertyname(\"state_text",{"_index":5457,"title":{},"name":{},"text":{"162":{}},"component":{}}],["getvaluebypropertyname(str",{"_index":5463,"title":{},"name":{},"text":{"162":{}},"component":{}}],["gexec",{"_index":1774,"title":{},"name":{},"text":{"21":{}},"component":{}}],["gi",{"_index":2887,"title":{},"name":{},"text":{"58":{}},"component":{}}],["gib",{"_index":3712,"title":{},"name":{},"text":{"73":{}},"component":{}}],["gin",{"_index":2310,"title":{},"name":{},"text":{"49":{},"194":{}},"component":{}}],["gis[2",{"_index":2773,"title":{},"name":{},"text":{"58":{}},"component":{}}],["git",{"_index":321,"title":{"6-6":{}},"name":{},"text":{"2":{},"4":{},"6":{},"14":{},"18":{},"31":{},"32":{},"33":{},"36":{},"42":{},"43":{},"49":{},"56":{},"57":{},"65":{},"66":{},"73":{},"118":{},"129":{},"131":{},"142":{},"176":{},"177":{},"191":{},"195":{},"202":{},"204":{},"244":{}},"component":{}}],["git/deploy",{"_index":2665,"title":{},"name":{},"text":{"55":{}},"component":{}}],["github",{"_index":3192,"title":{},"name":{},"text":{"66":{},"73":{}},"component":{}}],["github:/epam/edp",{"_index":5832,"title":{},"name":{},"text":{"191":{},"194":{},"204":{},"208":{}},"component":{}}],["github:/getredash/redash",{"_index":6059,"title":{},"name":{},"text":{"204":{}},"component":{}}],["github:/istio/proxi",{"_index":6022,"title":{},"name":{},"text":{"199":{}},"component":{}}],["github:/mdtu",{"_index":6054,"title":{},"name":{},"text":{"204":{}},"component":{}}],["github:/openshift/consol",{"_index":5847,"title":{},"name":{},"text":{"194":{}},"component":{}}],["gitlab",{"_index":3193,"title":{},"name":{},"text":{"66":{}},"component":{}}],["gitop",{"_index":465,"title":{},"name":{"190":{}},"text":{"2":{},"6":{},"31":{},"42":{},"43":{},"48":{},"67":{},"153":{},"190":{},"191":{}},"component":{}}],["gitsourc",{"_index":6630,"title":{},"name":{},"text":{"266":{}},"component":{}}],["give",{"_index":1864,"title":{},"name":{},"text":{"25":{},"41":{},"57":{},"134":{},"171":{},"195":{},"205":{},"229":{},"257":{}},"component":{}}],["given",{"_index":129,"title":{},"name":{},"text":{"1":{},"6":{},"55":{},"80":{},"81":{},"111":{},"127":{},"131":{},"159":{},"167":{},"183":{},"186":{},"242":{},"255":{},"269":{}},"component":{}}],["global",{"_index":897,"title":{"101":{},"173":{},"216-9":{},"216-10":{},"216-13":{}},"name":{"101":{},"173":{}},"text":{"4":{},"21":{},"29":{},"56":{},"75":{},"76":{},"101":{},"132":{},"139":{},"154":{},"173":{},"182":{},"188":{},"189":{},"193":{},"195":{},"202":{},"211":{},"212":{},"216":{},"218":{},"247":{},"248":{},"251":{},"253":{},"260":{},"272":{}},"component":{}}],["global.registri",{"_index":930,"title":{},"name":{},"text":{"4":{}},"component":{}}],["globe",{"_index":48,"title":{},"name":{},"text":{"1":{}},"component":{}}],["glossari",{"_index":212,"title":{"2":{},"253-16":{},"269-5":{}},"name":{"2":{}},"text":{"253":{},"269":{}},"component":{}}],["gmail",{"_index":1970,"title":{},"name":{},"text":{"30":{},"182":{}},"component":{}}],["gmbh",{"_index":2384,"title":{},"name":{},"text":{"49":{}},"component":{}}],["gmt+2",{"_index":6409,"title":{},"name":{},"text":{"242":{}},"component":{}}],["gnu",{"_index":2314,"title":{},"name":{},"text":{"49":{}},"component":{}}],["gnu/linux",{"_index":2317,"title":{},"name":{},"text":{"49":{}},"component":{}}],["gnupg",{"_index":3639,"title":{},"name":{},"text":{"73":{}},"component":{}}],["go",{"_index":669,"title":{"164-6":{}},"name":{},"text":{"4":{},"6":{},"12":{},"15":{},"16":{},"17":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"42":{},"43":{},"49":{},"52":{},"58":{},"63":{},"66":{},"67":{},"68":{},"69":{},"73":{},"75":{},"78":{},"100":{},"103":{},"104":{},"105":{},"115":{},"117":{},"118":{},"119":{},"120":{},"124":{},"125":{},"128":{},"129":{},"131":{},"137":{},"139":{},"140":{},"141":{},"142":{},"145":{},"148":{},"149":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"164":{},"177":{},"194":{},"195":{},"216":{},"217":{},"230":{},"237":{},"242":{},"244":{},"245":{},"254":{}},"component":{}}],["goal",{"_index":2600,"title":{"139-1":{},"141-1":{},"142-1":{}},"name":{},"text":{"52":{},"67":{},"108":{},"139":{},"141":{},"142":{},"162":{},"244":{}},"component":{}}],["goe",{"_index":2650,"title":{},"name":{},"text":{"55":{},"66":{},"84":{},"140":{},"254":{},"260":{}},"component":{}}],["good",{"_index":1110,"title":{},"name":{},"text":{"6":{},"66":{}},"component":{}}],["googl",{"_index":1693,"title":{},"name":{},"text":{"21":{},"49":{},"75":{},"76":{},"139":{},"141":{}},"component":{}}],["gov",{"_index":2185,"title":{},"name":{},"text":{"47":{},"115":{},"162":{},"195":{}},"component":{}}],["goverment",{"_index":4214,"title":{},"name":{},"text":{"99":{}},"component":{}}],["govern",{"_index":23,"title":{},"name":{},"text":{"1":{},"2":{},"44":{},"46":{},"65":{},"99":{}},"component":{}}],["government",{"_index":336,"title":{},"name":{},"text":{"2":{}},"component":{}}],["gp2",{"_index":1804,"title":{},"name":{},"text":{"22":{},"80":{}},"component":{}}],["gp3",{"_index":3700,"title":{},"name":{},"text":{"73":{}},"component":{}}],["gpg",{"_index":3646,"title":{},"name":{},"text":{"73":{}},"component":{}}],["gpl",{"_index":2273,"title":{},"name":{},"text":{"49":{}},"component":{}}],["grade",{"_index":4694,"title":{},"name":{},"text":{"135":{}},"component":{}}],["graduat",{"_index":4778,"title":{},"name":{},"text":{"136":{}},"component":{}}],["grafana",{"_index":1378,"title":{"32-23":{}},"name":{"125":{}},"text":{"6":{},"14":{},"32":{},"49":{},"65":{},"125":{},"193":{},"250":{},"272":{}},"component":{}}],["grant",{"_index":277,"title":{"119":{},"120":{},"154":{},"155-3":{},"155-4":{},"155-6":{},"167-36":{},"167-38":{}},"name":{"33":{}},"text":{"2":{},"9":{},"28":{},"33":{},"37":{},"57":{},"59":{},"60":{},"66":{},"70":{},"83":{},"84":{},"112":{},"117":{},"119":{},"121":{},"122":{},"124":{},"125":{},"131":{},"139":{},"141":{},"142":{},"154":{},"155":{},"167":{},"171":{},"179":{},"181":{},"209":{},"220":{}},"component":{}}],["grant_typ",{"_index":5688,"title":{},"name":{},"text":{"179":{}},"component":{}}],["grantal",{"_index":4128,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["grantall/revokeal",{"_index":5537,"title":{},"name":{},"text":{"167":{}},"component":{}}],["graph",{"_index":266,"title":{},"name":{},"text":{"2":{}},"component":{}}],["graphic",{"_index":289,"title":{},"name":{},"text":{"2":{}},"component":{}}],["graphql",{"_index":3200,"title":{},"name":{},"text":{"66":{}},"component":{}}],["grappl",{"_index":51,"title":{},"name":{},"text":{"1":{}},"component":{}}],["great",{"_index":1112,"title":{},"name":{},"text":{"6":{}},"component":{}}],["greater",{"_index":636,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"167":{},"253":{}},"component":{}}],["green",{"_index":1537,"title":{},"name":{},"text":{"13":{},"16":{},"30":{},"73":{},"100":{},"129":{}},"component":{}}],["griada",{"_index":2205,"title":{"48-10":{}},"name":{},"text":{"48":{},"73":{}},"component":{}}],["grid",{"_index":2563,"title":{"224":{},"226":{},"141-20":{}},"name":{"52":{},"224":{},"225":{},"226":{}},"text":{"52":{},"66":{},"141":{},"163":{},"224":{},"225":{},"226":{},"229":{}},"component":{}}],["grid.bpmn",{"_index":2586,"title":{},"name":{},"text":{"52":{}},"component":{}}],["groom",{"_index":1255,"title":{},"name":{},"text":{"6":{}},"component":{}}],["groovi",{"_index":181,"title":{},"name":{"262":{}},"text":{"1":{},"47":{},"49":{},"52":{},"58":{},"103":{},"105":{},"140":{},"141":{},"154":{},"159":{},"161":{},"162":{},"216":{},"253":{},"262":{},"264":{}},"component":{}}],["ground",{"_index":6132,"title":{},"name":{},"text":{"208":{}},"component":{}}],["groundwork",{"_index":146,"title":{},"name":{},"text":{"1":{},"44":{}},"component":{}}],["group",{"_index":472,"title":{"32-2":{},"237-3":{},"237-4":{},"237-5":{},"237-6":{},"237-7":{},"237-8":{},"237-10":{},"237-11":{},"237-12":{}},"name":{"237":{}},"text":{"2":{},"6":{},"28":{},"30":{},"32":{},"48":{},"49":{},"55":{},"59":{},"60":{},"66":{},"67":{},"78":{},"80":{},"108":{},"116":{},"118":{},"119":{},"125":{},"138":{},"150":{},"154":{},"163":{},"166":{},"167":{},"202":{},"205":{},"237":{},"256":{},"272":{}},"component":{}}],["grouping.yaml",{"_index":6377,"title":{},"name":{},"text":{"237":{}},"component":{}}],["grouping.yml",{"_index":6040,"title":{},"name":{},"text":{"202":{}},"component":{}}],["grouping/bp",{"_index":6039,"title":{},"name":{},"text":{"202":{},"237":{}},"component":{}}],["groups.tf",{"_index":3605,"title":{},"name":{},"text":{"73":{}},"component":{}}],["grow",{"_index":1814,"title":{},"name":{},"text":{"23":{}},"component":{}}],["gt",{"_index":5557,"title":{},"name":{},"text":{"167":{}},"component":{}}],["guarante",{"_index":118,"title":{},"name":{},"text":{"1":{},"9":{},"21":{},"34":{},"169":{},"244":{}},"component":{}}],["guard",{"_index":2936,"title":{},"name":{},"text":{"59":{}},"component":{}}],["guess",{"_index":1098,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["guid",{"_index":184,"title":{"53":{}},"name":{},"text":{"1":{},"4":{},"22":{},"41":{},"67":{},"73":{},"99":{},"104":{},"129":{},"144":{},"179":{}},"component":{}}],["guidanc",{"_index":5146,"title":{},"name":{},"text":{"145":{}},"component":{}}],["guide/integr",{"_index":5125,"title":{},"name":{},"text":{"142":{}},"component":{}}],["guidelin",{"_index":1910,"title":{},"name":{},"text":{"26":{},"74":{},"99":{}},"component":{}}],["guru",{"_index":208,"title":{},"name":{},"text":{"1":{}},"component":{}}],["hack",{"_index":3232,"title":{},"name":{},"text":{"67":{}},"component":{}}],["half",{"_index":1883,"title":{},"name":{},"text":{"25":{}},"component":{}}],["hand",{"_index":1501,"title":{},"name":{},"text":{"10":{},"81":{},"103":{},"123":{},"154":{},"159":{},"265":{}},"component":{}}],["handl",{"_index":1149,"title":{"141-11":{}},"name":{"254":{}},"text":{"6":{},"14":{},"78":{},"81":{},"99":{},"105":{},"108":{},"141":{},"142":{},"164":{},"195":{},"202":{},"205":{},"244":{},"268":{},"271":{}},"component":{}}],["handler",{"_index":2167,"title":{"271-14":{}},"name":{},"text":{"47":{},"271":{}},"component":{}}],["handov",{"_index":4404,"title":{},"name":{},"text":{"108":{}},"component":{}}],["happen",{"_index":1646,"title":{"168-3":{},"168-7":{}},"name":{},"text":{"19":{},"67":{},"73":{},"75":{},"139":{},"168":{},"223":{},"255":{},"260":{}},"component":{}}],["haproxi",{"_index":1958,"title":{},"name":{},"text":{"29":{},"49":{},"75":{},"76":{},"188":{},"193":{},"247":{},"251":{}},"component":{}}],["haproxy.router.openshift.io/ip_whitelist",{"_index":834,"title":{},"name":{},"text":{"4":{},"193":{},"251":{}},"component":{}}],["haproxy[1",{"_index":1930,"title":{},"name":{},"text":{"29":{}},"component":{}}],["hard",{"_index":1106,"title":{},"name":{},"text":{"6":{}},"component":{}}],["hardcod",{"_index":4322,"title":{},"name":{},"text":{"105":{}},"component":{}}],["hardwar",{"_index":98,"title":{"48-10":{}},"name":{},"text":{"1":{},"2":{},"39":{},"48":{},"73":{},"192":{},"256":{}},"component":{}}],["has_user=fals",{"_index":5987,"title":{},"name":{},"text":{"196":{}},"component":{}}],["hash",{"_index":3917,"title":{},"name":{},"text":{"78":{},"105":{},"168":{}},"component":{}}],["hash_key",{"_index":3505,"title":{},"name":{},"text":{"73":{}},"component":{}}],["hashicorp",{"_index":759,"title":{"195-18":{},"195-21":{},"255-11":{}},"name":{},"text":{"4":{},"14":{},"49":{},"65":{},"75":{},"76":{},"88":{},"123":{},"188":{},"192":{},"193":{},"195":{},"248":{},"250":{},"255":{}},"component":{}}],["hashicorp/aw",{"_index":3582,"title":{},"name":{},"text":{"73":{}},"component":{}}],["hasicorp",{"_index":6483,"title":{},"name":{},"text":{"255":{}},"component":{}}],["hat",{"_index":3379,"title":{"73-12":{}},"name":{},"text":{"73":{}},"component":{}}],["haus",{"_index":3323,"title":{},"name":{},"text":{"67":{}},"component":{}}],["have",{"_index":1240,"title":{},"name":{},"text":{"6":{},"14":{},"21":{},"100":{},"108":{},"154":{},"155":{},"205":{},"217":{},"257":{},"268":{}},"component":{}}],["he/sh",{"_index":5226,"title":{},"name":{},"text":{"155":{}},"component":{}}],["head",{"_index":2746,"title":{},"name":{},"text":{"57":{},"134":{}},"component":{}}],["head:refs/for/mast",{"_index":4630,"title":{},"name":{},"text":{"129":{}},"component":{}}],["head_nam",{"_index":4667,"title":{},"name":{},"text":{"134":{}},"component":{}}],["header",{"_index":2358,"title":{"55-4":{}},"name":{},"text":{"49":{},"55":{},"61":{},"67":{},"73":{},"104":{},"108":{},"122":{},"127":{},"162":{},"173":{},"179":{},"196":{},"205":{},"254":{},"271":{},"272":{}},"component":{}}],["header_nam",{"_index":2658,"title":{},"name":{},"text":{"55":{}},"component":{}}],["headfilerepositoryimpl",{"_index":6659,"title":{},"name":{},"text":{"268":{}},"component":{}}],["headlin",{"_index":1148,"title":{},"name":{},"text":{"6":{}},"component":{}}],["heal",{"_index":1826,"title":{},"name":{},"text":{"23":{}},"component":{}}],["health",{"_index":1836,"title":{"272-14":{}},"name":{},"text":{"23":{},"25":{},"81":{},"87":{},"194":{},"272":{}},"component":{}}],["healthi",{"_index":4015,"title":{},"name":{},"text":{"81":{}},"component":{}}],["heartble",{"_index":3257,"title":{},"name":{},"text":{"67":{}},"component":{}}],["height",{"_index":3127,"title":{},"name":{},"text":{"61":{},"115":{},"183":{}},"component":{}}],["helm",{"_index":1548,"title":{},"name":{},"text":{"14":{},"49":{},"67":{},"115":{},"128":{},"193":{},"195":{},"242":{},"251":{},"254":{},"272":{}},"component":{}}],["helmfil",{"_index":6481,"title":{},"name":{},"text":{"254":{}},"component":{}}],["help",{"_index":197,"title":{},"name":{},"text":{"1":{},"6":{},"10":{},"30":{},"32":{},"51":{},"59":{},"60":{},"66":{},"67":{},"108":{},"113":{},"128":{},"139":{},"141":{},"167":{},"197":{},"223":{},"226":{},"230":{},"237":{},"239":{},"244":{},"262":{}},"component":{}}],["help@support.com",{"_index":4265,"title":{},"name":{},"text":{"101":{},"139":{}},"component":{}}],["here",{"_index":751,"title":{},"name":{},"text":{"4":{},"16":{},"29":{},"30":{},"31":{},"37":{},"41":{},"43":{},"48":{},"52":{},"55":{},"58":{},"59":{},"67":{},"73":{},"75":{},"76":{},"78":{},"108":{},"122":{},"124":{},"125":{},"127":{},"128":{},"142":{},"148":{},"149":{},"162":{},"167":{},"168":{},"181":{},"183":{},"186":{},"193":{},"212":{},"216":{},"218":{},"231":{},"244":{},"251":{},"256":{},"267":{},"270":{}},"component":{}}],["herein",{"_index":5177,"title":{},"name":{},"text":{"154":{}},"component":{}}],["here’",{"_index":6305,"title":{},"name":{},"text":{"231":{}},"component":{}}],["herit",{"_index":6450,"title":{},"name":{},"text":{"253":{}},"component":{}}],["heterogen",{"_index":6496,"title":{},"name":{},"text":{"255":{}},"component":{}}],["hex",{"_index":3291,"title":{},"name":{},"text":{"67":{},"200":{}},"component":{}}],["hh:mm:ss",{"_index":5493,"title":{},"name":{},"text":{"165":{}},"component":{}}],["hidden",{"_index":3259,"title":{},"name":{},"text":{"67":{},"75":{},"226":{},"254":{},"270":{}},"component":{}}],["hide",{"_index":5150,"title":{},"name":{},"text":{"145":{},"226":{},"254":{},"262":{}},"component":{}}],["hierarch",{"_index":2892,"title":{"59":{},"59-2":{}},"name":{"59":{}},"text":{"59":{},"76":{},"99":{},"188":{}},"component":{}}],["hierarchi",{"_index":2736,"title":{"59-3":{}},"name":{},"text":{"57":{},"59":{},"168":{}},"component":{}}],["hierarchy_cod",{"_index":2896,"title":{},"name":{},"text":{"59":{}},"component":{}}],["high",{"_index":401,"title":{"48-3":{},"189-2":{},"190-2":{},"253-8":{},"257-13":{},"268-5":{},"269-22":{},"270-8":{},"271-5":{},"271-15":{},"272-5":{},"272-22":{}},"name":{},"text":{"2":{},"6":{},"21":{},"44":{},"49":{},"50":{},"55":{},"59":{},"66":{},"67":{},"78":{},"81":{},"99":{},"127":{},"190":{},"195":{},"253":{},"255":{},"257":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["higher",{"_index":2102,"title":{},"name":{},"text":{"42":{},"43":{},"55":{},"127":{},"166":{},"197":{}},"component":{}}],["highest",{"_index":6227,"title":{},"name":{},"text":{"216":{}},"component":{}}],["highli",{"_index":4425,"title":{},"name":{},"text":{"108":{}},"component":{}}],["highlight",{"_index":1309,"title":{},"name":{},"text":{"6":{},"16":{},"244":{},"262":{}},"component":{}}],["himichni",{"_index":4386,"title":{},"name":{},"text":{"107":{}},"component":{}}],["himichni_factory_obrv.csv",{"_index":4381,"title":{},"name":{},"text":{"107":{}},"component":{}}],["himself/herself",{"_index":5179,"title":{},"name":{},"text":{"154":{},"155":{}},"component":{}}],["hint",{"_index":1621,"title":{"244-5":{}},"name":{},"text":{"16":{},"204":{},"244":{}},"component":{}}],["hirestafffil",{"_index":5028,"title":{},"name":{},"text":{"141":{}},"component":{}}],["histor",{"_index":2178,"title":{"125-8":{},"205-7":{}},"name":{},"text":{"47":{},"50":{},"83":{},"99":{},"108":{},"125":{},"138":{},"167":{},"198":{},"205":{},"242":{}},"component":{}}],["histori",{"_index":290,"title":{"205":{},"205-2":{},"205-3":{},"205-5":{},"205-6":{},"205-8":{},"205-10":{},"205-12":{},"205-13":{},"205-14":{},"205-15":{},"205-16":{},"205-17":{}},"name":{"205":{}},"text":{"2":{},"30":{},"45":{},"47":{},"67":{},"128":{},"167":{},"168":{},"183":{},"186":{},"191":{},"198":{},"202":{},"204":{},"205":{},"207":{},"208":{},"240":{},"246":{}},"component":{}}],["history:\\neffect",{"_index":5814,"title":{},"name":{},"text":{"186":{}},"component":{}}],["historycleanupbatchs",{"_index":6128,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historycleanupbatchwindowendtim",{"_index":6124,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historycleanupbatchwindowstarttim",{"_index":6122,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historycleanupdegreeofparallel",{"_index":6126,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historycleanupen",{"_index":6116,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historycleanupstrategi",{"_index":6117,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historyflag",{"_index":4047,"title":{},"name":{},"text":{"83":{},"138":{},"167":{}},"component":{}}],["historyflag=\"tru",{"_index":5538,"title":{},"name":{},"text":{"167":{}},"component":{}}],["historyflag=“tru",{"_index":4798,"title":{},"name":{},"text":{"138":{}},"component":{}}],["historylevel",{"_index":6073,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historyremovaltimestrategi",{"_index":6119,"title":{},"name":{},"text":{"205":{}},"component":{}}],["historytimetol",{"_index":6120,"title":{},"name":{},"text":{"205":{}},"component":{}}],["hit",{"_index":2084,"title":{},"name":{},"text":{"40":{}},"component":{}}],["hmac",{"_index":5937,"title":{},"name":{},"text":{"196":{}},"component":{}}],["hna",{"_index":3949,"title":{},"name":{},"text":{"80":{}},"component":{}}],["hold",{"_index":4192,"title":{},"name":{},"text":{"99":{}},"component":{}}],["holm",{"_index":4420,"title":{},"name":{},"text":{"108":{}},"component":{}}],["home",{"_index":673,"title":{"70-2":{}},"name":{},"text":{"4":{},"28":{},"57":{},"70":{},"104":{},"176":{},"242":{}},"component":{}}],["home/ubuntu/.aw",{"_index":3669,"title":{},"name":{},"text":{"73":{}},"component":{}}],["home/ubuntu/.aws/config",{"_index":3671,"title":{},"name":{},"text":{"73":{}},"component":{}}],["homogen",{"_index":5167,"title":{},"name":{},"text":{"151":{},"152":{},"164":{}},"component":{}}],["honk",{"_index":1111,"title":{},"name":{},"text":{"6":{}},"component":{}}],["hook",{"_index":892,"title":{},"name":{},"text":{"4":{},"56":{},"57":{},"129":{}},"component":{}}],["horisont",{"_index":3996,"title":{},"name":{},"text":{"80":{}},"component":{}}],["horizont",{"_index":2483,"title":{"80":{},"80-1":{}},"name":{},"text":{"50":{},"61":{},"80":{},"194":{},"199":{},"208":{},"258":{}},"component":{}}],["horizontalpodautoscal",{"_index":3929,"title":{},"name":{},"text":{"80":{}},"component":{}}],["host",{"_index":600,"title":{},"name":{},"text":{"4":{},"40":{},"67":{},"73":{},"75":{},"182":{},"188":{},"201":{},"244":{},"248":{},"254":{},"255":{},"258":{}},"component":{}}],["host=operationalhost",{"_index":1775,"title":{},"name":{},"text":{"21":{}},"component":{}}],["hostprefix",{"_index":3751,"title":{},"name":{},"text":{"73":{}},"component":{}}],["hotfix",{"_index":1302,"title":{},"name":{},"text":{"6":{}},"component":{}}],["hour",{"_index":821,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"25":{},"50":{},"51":{},"55":{},"73":{},"75":{},"76":{},"188":{},"213":{},"247":{},"253":{},"272":{}},"component":{}}],["hous",{"_index":392,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hover",{"_index":6264,"title":{},"name":{},"text":{"226":{},"262":{}},"component":{}}],["hovew",{"_index":4208,"title":{},"name":{},"text":{"99":{}},"component":{}}],["hpa",{"_index":3923,"title":{},"name":{},"text":{"80":{},"81":{}},"component":{}}],["hpaspec",{"_index":6465,"title":{},"name":{},"text":{"254":{}},"component":{}}],["hst",{"_index":3280,"title":{},"name":{},"text":{"67":{},"167":{}},"component":{}}],["html",{"_index":2783,"title":{},"name":{},"text":{"58":{},"61":{},"163":{},"183":{},"184":{},"231":{}},"component":{}}],["html.ftl",{"_index":3106,"title":{},"name":{},"text":{"61":{}},"component":{}}],["html5",{"_index":2455,"title":{},"name":{},"text":{"49":{}},"component":{}}],["http",{"_index":848,"title":{"162-3":{}},"name":{},"text":{"4":{},"40":{},"47":{},"49":{},"55":{},"57":{},"66":{},"67":{},"104":{},"122":{},"123":{},"126":{},"127":{},"129":{},"154":{},"161":{},"162":{},"167":{},"179":{},"195":{},"196":{},"205":{},"254":{},"268":{},"272":{}},"component":{}}],["http/tcp",{"_index":6023,"title":{},"name":{},"text":{"199":{}},"component":{}}],["http2",{"_index":5822,"title":{},"name":{},"text":{"188":{},"248":{},"254":{}},"component":{}}],["http://api2.diia.gov.ua",{"_index":4292,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["http://citizen",{"_index":1474,"title":{},"name":{},"text":{"9":{}},"component":{}}],["http://httpbin.org",{"_index":4291,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["http://offic",{"_index":1477,"title":{},"name":{},"text":{"9":{}},"component":{}}],["http://secur",{"_index":5892,"title":{},"name":{},"text":{"195":{}},"component":{}}],["http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog",{"_index":6427,"title":{},"name":{},"text":{"244":{}},"component":{}}],["http://zqedr",{"_index":5429,"title":{},"name":{},"text":{"162":{}},"component":{}}],["httpbin",{"_index":4284,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["https://..../findbetweenage?agefrom=18&ageto=42",{"_index":5568,"title":{},"name":{},"text":{"167":{}},"component":{}}],["https://..../findinage?age=18,21,42",{"_index":5564,"title":{},"name":{},"text":{"167":{}},"component":{}}],["https://..../findnotinage?age=18,21,42",{"_index":5566,"title":{},"name":{},"text":{"167":{}},"component":{}}],["https:///auth/realms//protocol/openid",{"_index":5682,"title":{},"name":{},"text":{"179":{}},"component":{}}],["https:///nexus/repository/extensions/com/epam/digital/data/platform/liquibas",{"_index":4788,"title":{},"name":{},"text":{"138":{}},"component":{}}],["https://admin",{"_index":2010,"title":{},"name":{},"text":{"32":{},"51":{},"52":{},"57":{},"124":{},"128":{},"167":{},"181":{},"201":{},"244":{},"262":{}},"component":{}}],["https://api.:6443/apis/config.openshift.io/v1/clusteroper",{"_index":3848,"title":{},"name":{},"text":{"73":{}},"component":{}}],["https://api.:6443/vers",{"_index":3852,"title":{},"name":{},"text":{"73":{}},"component":{}}],["https://api2t",{"_index":5886,"title":{},"name":{},"text":{"195":{}},"component":{}}],["https://api2t.diia.gov.ua",{"_index":5885,"title":{},"name":{},"text":{"195":{}},"component":{}}],["https://api2t.diia.gov.ua/api/v1/auth/partn",{"_index":4295,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["https://awscli.amazonaws.com/awscli",{"_index":3665,"title":{},"name":{},"text":{"73":{}},"component":{}}],["https://busi",{"_index":2021,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://citizen",{"_index":2027,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://consol",{"_index":2013,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://crontab.guru",{"_index":1587,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{}}],["https://data.gov.ua/dataset",{"_index":3306,"title":{},"name":{},"text":{"67":{}},"component":{}}],["https://docs.camunda.org/manual/latest/webapps/cockpit",{"_index":3078,"title":{},"name":{},"text":{"60":{}},"component":{}}],["https://docs.openshift.com",{"_index":1850,"title":{},"name":{},"text":{"24":{}},"component":{}}],["https://download.docker.com/linux/ubuntu",{"_index":3653,"title":{},"name":{},"text":{"73":{}},"component":{}}],["https://download.docker.com/linux/ubuntu/gpg",{"_index":3645,"title":{},"name":{},"text":{"73":{}},"component":{}}],["https://endpoint.com:9001",{"_index":691,"title":{},"name":{},"text":{"4":{}},"component":{}}],["https://eu.iit.com.ua/sign",{"_index":3836,"title":{},"name":{},"text":{"73":{},"115":{}},"component":{}}],["https://extern",{"_index":5710,"title":{},"name":{},"text":{"179":{}},"component":{}}],["https://freemarker.apache.org",{"_index":3111,"title":{},"name":{},"text":{"61":{},"183":{},"184":{}},"component":{}}],["https://geo",{"_index":2025,"title":{},"name":{},"text":{"32":{},"58":{},"230":{}},"component":{}}],["https://gerrit",{"_index":2030,"title":{},"name":{},"text":{"32":{},"56":{}},"component":{}}],["https://github.com/neilpang/acme.sh",{"_index":3782,"title":{},"name":{},"text":{"73":{}},"component":{}}],["https://github.com/nokia/kong",{"_index":2359,"title":{},"name":{},"text":{"49":{}},"component":{}}],["https://github.com/orgs/liquibase/repositori",{"_index":4106,"title":{},"name":{},"text":{"84":{}},"component":{}}],["https://grafana",{"_index":2034,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://id.gov.ua",{"_index":1525,"title":{},"name":{},"text":{"12":{},"115":{}},"component":{}}],["https://id.gov.ua/connect",{"_index":4466,"title":{},"name":{},"text":{"115":{}},"component":{}}],["https://iit.com.ua",{"_index":4459,"title":{},"name":{},"text":{"115":{}},"component":{}}],["https://iit.com.ua/download",{"_index":1977,"title":{},"name":{},"text":{"30":{}},"component":{}}],["https://iit.com.ua/download/eusigncp",{"_index":6752,"title":{},"name":{},"text":{"269":{}},"component":{}}],["https://jaeger",{"_index":2039,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://jenkin",{"_index":2031,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://jsonplaceholder.typicode.com/com",{"_index":6301,"title":{},"name":{},"text":{"231":{}},"component":{}}],["https://jwt.io",{"_index":5706,"title":{},"name":{},"text":{"179":{}},"component":{}}],["https://kiali",{"_index":2037,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://kibana",{"_index":2033,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://mail",{"_index":1859,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://mail./admin",{"_index":1860,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://mailu.io",{"_index":1895,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://nexu",{"_index":2026,"title":{},"name":{},"text":{"32":{},"244":{}},"component":{}}],["https://nominatim.openstreetmap.org/search?format=json&q={",{"_index":6296,"title":{},"name":{},"text":{"230":{}},"component":{}}],["https://offic",{"_index":2028,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://pgadmin",{"_index":2023,"title":{},"name":{},"text":{"32":{}},"component":{}}],["https://platform",{"_index":2032,"title":{},"name":{},"text":{"32":{},"179":{},"196":{}},"component":{}}],["https://redash",{"_index":5122,"title":{},"name":{},"text":{"142":{}},"component":{}}],["https://redash.io/help/us",{"_index":5124,"title":{},"name":{},"text":{"142":{}},"component":{}}],["https://registri",{"_index":2017,"title":{},"name":{},"text":{"32":{},"58":{},"167":{}},"component":{}}],["https://test.id.gov.ua?auth_type=dig_sign",{"_index":4470,"title":{},"name":{},"text":{"115":{}},"component":{}}],["https://trembita",{"_index":5422,"title":{},"name":{},"text":{"162":{}},"component":{}}],["https://trembita.mdtu",{"_index":5880,"title":{},"name":{},"text":{"195":{}},"component":{}}],["https://user",{"_index":6347,"title":{},"name":{},"text":{"231":{}},"component":{}}],["https://wallpapercave.com",{"_index":4543,"title":{},"name":{},"text":{"122":{}},"component":{}}],["https://wallpapercave.com/wp/wp2601438.jpg",{"_index":2537,"title":{},"name":{},"text":{"51":{}},"component":{}}],["https://www.postman.com/download",{"_index":5681,"title":{},"name":{},"text":{"179":{}},"component":{}}],["https://www.uuidgenerator.net/version4",{"_index":4813,"title":{},"name":{},"text":{"138":{}},"component":{}}],["https://{domin}/api/public/data",{"_index":6876,"title":{},"name":{},"text":{"272":{}},"component":{}}],["https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":6291,"title":{},"name":{},"text":{"230":{}},"component":{}}],["hub",{"_index":3376,"title":{"73-11":{}},"name":{},"text":{"73":{}},"component":{}}],["human",{"_index":3076,"title":{"60-15":{}},"name":{},"text":{"60":{},"131":{},"191":{},"262":{}},"component":{}}],["hygienist",{"_index":5050,"title":{},"name":{},"text":{"141":{}},"component":{}}],["hygienistcertificatefil",{"_index":5018,"title":{},"name":{},"text":{"141":{}},"component":{}}],["hygienistflag",{"_index":5051,"title":{},"name":{},"text":{"141":{},"159":{}},"component":{}}],["hyperthread",{"_index":3745,"title":{},"name":{},"text":{"73":{}},"component":{}}],["hyphen",{"_index":1923,"title":{},"name":{},"text":{"28":{},"30":{},"33":{},"115":{},"142":{},"165":{},"237":{}},"component":{}}],["i.",{"_index":2516,"title":{},"name":{},"text":{"51":{},"52":{},"140":{},"152":{},"160":{},"177":{},"242":{},"257":{},"264":{}},"component":{}}],["i18next",{"_index":2402,"title":{},"name":{},"text":{"49":{},"204":{}},"component":{}}],["iaac",{"_index":1375,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["iac",{"_index":4021,"title":{},"name":{},"text":{"81":{}},"component":{}}],["iam",{"_index":1423,"title":{"73-8":{},"73-9":{}},"name":{},"text":{"9":{},"47":{},"73":{}},"component":{}}],["iam:addroletoinstanceprofil",{"_index":3435,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:addusertogroup",{"_index":3447,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:attachgrouppolici",{"_index":3456,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:attachrolepolici",{"_index":3460,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:attachuserpolici",{"_index":3455,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:changepassword",{"_index":3469,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createaccesskey",{"_index":3463,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:creategroup",{"_index":3445,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createinstanceprofil",{"_index":3427,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createloginprofil",{"_index":3466,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createpolici",{"_index":3428,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createpolicyvers",{"_index":3430,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createrol",{"_index":3459,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createservicelinkedrol",{"_index":3433,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createservicespecificcredenti",{"_index":3475,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:createvirtualmfadevic",{"_index":3470,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deactivatemfadevic",{"_index":3474,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleteaccesskey",{"_index":3464,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deletegroup",{"_index":3453,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deletegrouppolici",{"_index":3452,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleteinstanceprofil",{"_index":3436,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleteloginprofil",{"_index":3467,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deletepolici",{"_index":3429,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deletepolicyvers",{"_index":3431,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleterol",{"_index":3440,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleterolepolici",{"_index":3443,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleteservicelinkedrol",{"_index":3434,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleteservicespecificcredenti",{"_index":3478,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleteus",{"_index":3458,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deleteuserpolici",{"_index":3454,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:deletevirtualmfadevic",{"_index":3473,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:detachgrouppolici",{"_index":3450,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:detachrolepolici",{"_index":3442,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:detachuserpolici",{"_index":3451,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:enablemfadevic",{"_index":3471,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:generatecredentialreport",{"_index":3422,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:generateservicelastaccesseddetail",{"_index":3421,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:get",{"_index":3417,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:list",{"_index":3418,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:passrol",{"_index":3441,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:putgrouppolici",{"_index":3449,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:putrolepermissionsboundari",{"_index":3461,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:putrolepolici",{"_index":3462,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:putuserpolici",{"_index":3457,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:removerolefrominstanceprofil",{"_index":3437,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:removeuserfromgroup",{"_index":3448,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:resetservicespecificcredenti",{"_index":3477,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:resyncmfadevic",{"_index":3472,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:setdefaultpolicyvers",{"_index":3432,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:simulatecustompolici",{"_index":3423,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:simulateprincipalpolici",{"_index":3424,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:tag",{"_index":3419,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:untag",{"_index":3420,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updateaccesskey",{"_index":3465,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updateassumerolepolici",{"_index":3444,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updategroup",{"_index":3446,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updateloginprofil",{"_index":3468,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updaterol",{"_index":3438,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updateroledescript",{"_index":3439,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updateservercertif",{"_index":3426,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:updateservicespecificcredenti",{"_index":3476,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam:uploadsshpublickey",{"_index":3425,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iam_instance_profil",{"_index":3559,"title":{},"name":{},"text":{"73":{}},"component":{}}],["iaminstanceprofil",{"_index":3986,"title":{},"name":{},"text":{"80":{}},"component":{}}],["ibragymovych",{"_index":4742,"title":{},"name":{},"text":{"135":{}},"component":{}}],["icei",{"_index":1424,"title":{},"name":{},"text":{"9":{},"115":{},"116":{}},"component":{}}],["icmp",{"_index":3277,"title":{},"name":{},"text":{"67":{}},"component":{}}],["icon",{"_index":1500,"title":{},"name":{},"text":{"10":{},"15":{},"16":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"42":{},"43":{},"60":{},"63":{},"75":{},"115":{},"117":{},"118":{},"122":{},"127":{},"139":{},"140":{},"141":{},"142":{},"154":{},"158":{},"159":{},"160":{},"161":{},"210":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"227":{},"231":{},"233":{},"235":{},"236":{},"237":{},"259":{},"260":{},"261":{},"262":{}},"component":{}}],["ict",{"_index":3229,"title":{},"name":{},"text":{"67":{}},"component":{}}],["id",{"_index":451,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"47":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"66":{},"70":{},"72":{},"73":{},"80":{},"83":{},"105":{},"107":{},"113":{},"115":{},"119":{},"120":{},"126":{},"127":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"155":{},"159":{},"160":{},"161":{},"162":{},"167":{},"168":{},"181":{},"183":{},"186":{},"195":{},"205":{},"207":{},"209":{},"211":{},"212":{},"216":{},"217":{},"218":{},"221":{},"222":{},"231":{},"234":{},"257":{},"259":{},"260":{},"262":{},"271":{}},"component":{}}],["id\":\"0d756563",{"_index":5643,"title":{},"name":{},"text":{"167":{}},"component":{}}],["id\":\"2d89ffea",{"_index":5642,"title":{},"name":{},"text":{"167":{}},"component":{}}],["id\":\"userid",{"_index":5214,"title":{},"name":{},"text":{"154":{}},"component":{}}],["id').formdata",{"_index":2840,"title":{},"name":{},"text":{"58":{}},"component":{}}],["id').formdata.prop('').valu",{"_index":5346,"title":{},"name":{},"text":{"160":{}},"component":{}}],["id.gov.ua",{"_index":418,"title":{"46-5":{},"115-3":{}},"name":{},"text":{"2":{},"9":{},"30":{},"46":{},"78":{},"115":{},"116":{}},"component":{}}],["id/uuid",{"_index":6788,"title":{},"name":{},"text":{"271":{}},"component":{}}],["id_rsa",{"_index":885,"title":{},"name":{},"text":{"4":{}},"component":{}}],["idea",{"_index":469,"title":{},"name":{},"text":{"2":{},"6":{},"48":{},"63":{},"66":{},"244":{}},"component":{}}],["ideal",{"_index":4008,"title":{},"name":{},"text":{"81":{}},"component":{}}],["idempot",{"_index":5548,"title":{},"name":{},"text":{"167":{}},"component":{}}],["ident",{"_index":1422,"title":{},"name":{},"text":{"9":{},"14":{},"30":{},"33":{},"49":{},"52":{},"55":{},"58":{},"73":{},"84":{},"99":{},"100":{},"108":{},"111":{},"122":{},"135":{},"141":{},"143":{},"150":{},"151":{},"152":{},"154":{},"159":{},"179":{},"211":{},"212":{},"218":{},"260":{}},"component":{}}],["identif",{"_index":141,"title":{"46-5":{}},"name":{},"text":{"1":{},"2":{},"9":{},"46":{},"59":{},"65":{},"78":{},"113":{},"115":{},"119":{},"120":{},"131":{},"154":{},"155":{},"197":{},"211":{},"212":{},"213":{},"218":{}},"component":{}}],["identifi",{"_index":275,"title":{"108-6":{},"131-5":{}},"name":{},"text":{"2":{},"4":{},"6":{},"30":{},"31":{},"51":{},"52":{},"58":{},"59":{},"63":{},"66":{},"67":{},"69":{},"73":{},"99":{},"100":{},"105":{},"107":{},"108":{},"113":{},"115":{},"119":{},"125":{},"131":{},"138":{},"154":{},"155":{},"159":{},"160":{},"164":{},"167":{},"168":{},"179":{},"183":{},"186":{},"195":{},"197":{},"205":{},"234":{},"236":{},"242":{},"244":{},"272":{}},"component":{}}],["idgov_test_01",{"_index":5451,"title":{},"name":{},"text":{"162":{},"195":{}},"component":{}}],["idgovuaclientid=f90ab33dc272f047dc330c88e5663b75",{"_index":3826,"title":{},"name":{},"text":{"73":{}},"component":{}}],["idgovuaclientsecret=cba49c104faac8c718e6daf3253bc55f2bf11d9",{"_index":3827,"title":{},"name":{},"text":{"73":{}},"component":{}}],["idm",{"_index":2202,"title":{},"name":{},"text":{"47":{}},"component":{}}],["idor",{"_index":3297,"title":{},"name":{},"text":{"67":{}},"component":{}}],["idp",{"_index":5884,"title":{},"name":{},"text":{"195":{}},"component":{}}],["iei",{"_index":2149,"title":{},"name":{},"text":{"46":{}},"component":{}}],["if(signedformdata.hasprop('accreditationfil",{"_index":4960,"title":{},"name":{},"text":{"140":{}},"component":{}}],["ignor",{"_index":5224,"title":{},"name":{},"text":{"155":{},"161":{},"167":{},"214":{},"216":{},"262":{}},"component":{}}],["ignore_public_acl",{"_index":3494,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ignorechannelprefer",{"_index":5795,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["ii",{"_index":6528,"title":{},"name":{},"text":{"258":{}},"component":{}}],["iiit",{"_index":2399,"title":{},"name":{},"text":{"49":{}},"component":{}}],["iit",{"_index":1458,"title":{"115-2":{},"269-21":{}},"name":{},"text":{"9":{},"30":{},"73":{},"75":{},"76":{},"78":{},"115":{},"116":{},"188":{},"247":{},"269":{}},"component":{}}],["illeg",{"_index":2134,"title":{},"name":{},"text":{"45":{}},"component":{}}],["illustr",{"_index":4639,"title":{},"name":{},"text":{"131":{},"153":{},"164":{},"179":{},"264":{}},"component":{}}],["imag",{"_index":486,"title":{"73-52":{}},"name":{},"text":{"2":{},"6":{},"17":{},"21":{},"58":{},"61":{},"73":{},"80":{},"81":{},"86":{},"105":{},"142":{},"163":{},"167":{},"173":{},"183":{},"184":{},"208":{},"258":{}},"component":{}}],["image/jpeg",{"_index":4310,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["image/png",{"_index":4309,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["image::registri",{"_index":2733,"title":{},"name":{},"text":{"57":{}},"component":{}}],["image_checksum",{"_index":3823,"title":{},"name":{},"text":{"73":{}},"component":{}}],["image_checksum=$(sudo",{"_index":3819,"title":{},"name":{},"text":{"73":{}},"component":{}}],["imagepullbackoff",{"_index":829,"title":{},"name":{},"text":{"4":{}},"component":{}}],["imap",{"_index":2411,"title":{},"name":{},"text":{"49":{}},"component":{}}],["immedi",{"_index":795,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"103":{},"105":{},"115":{},"118":{},"155":{},"213":{},"268":{}},"component":{}}],["immers",{"_index":3356,"title":{},"name":{},"text":{"67":{}},"component":{}}],["immut",{"_index":1462,"title":{},"name":{},"text":{"9":{},"78":{}},"component":{}}],["impact",{"_index":3412,"title":{},"name":{},"text":{"73":{},"81":{},"113":{},"205":{}},"component":{}}],["imper",{"_index":2647,"title":{},"name":{},"text":{"55":{},"57":{},"99":{},"161":{}},"component":{}}],["implement",{"_index":151,"title":{"84-3":{},"154-16":{},"155-6":{},"161-15":{},"161-16":{},"195-7":{},"255-8":{},"256-5":{},"257-5":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"41":{},"44":{},"49":{},"51":{},"58":{},"73":{},"87":{},"99":{},"100":{},"108":{},"119":{},"124":{},"138":{},"150":{},"153":{},"154":{},"155":{},"159":{},"161":{},"164":{},"168":{},"190":{},"191":{},"192":{},"195":{},"197":{},"201":{},"202":{},"204":{},"205":{},"208":{},"212":{},"216":{},"220":{},"237":{},"242":{},"244":{},"253":{},"254":{},"255":{},"256":{},"257":{},"262":{},"264":{},"267":{},"268":{},"269":{},"270":{},"271":{}},"component":{}}],["implicit",{"_index":1077,"title":{},"name":{},"text":{"6":{}},"component":{}}],["import",{"_index":280,"title":{"119":{},"119-3":{},"119-6":{},"119-7":{},"127-5":{},"203-3":{},"203-4":{}},"name":{"119":{}},"text":{"2":{},"4":{},"6":{},"21":{},"30":{},"51":{},"52":{},"57":{},"59":{},"66":{},"67":{},"73":{},"84":{},"99":{},"103":{},"112":{},"119":{},"121":{},"124":{},"125":{},"126":{},"127":{},"128":{},"140":{},"165":{},"167":{},"194":{},"202":{},"203":{},"204":{},"205":{},"253":{}},"component":{}}],["impos",{"_index":5484,"title":{},"name":{},"text":{"164":{}},"component":{}}],["imposs",{"_index":6765,"title":{},"name":{},"text":{"270":{}},"component":{}}],["impract",{"_index":6520,"title":{},"name":{},"text":{"258":{},"265":{}},"component":{}}],["improv",{"_index":339,"title":{},"name":{},"text":{"2":{},"6":{},"29":{},"46":{},"67":{},"87":{},"116":{},"122":{},"125":{},"151":{},"152":{},"163":{},"197":{},"205":{},"223":{},"237":{},"240":{},"242":{},"244":{},"246":{},"253":{},"258":{},"268":{},"269":{},"272":{}},"component":{}}],["in",{"_index":3196,"title":{},"name":{},"text":{"66":{}},"component":{}}],["inabl",{"_index":3950,"title":{},"name":{},"text":{"80":{}},"component":{}}],["inaccess",{"_index":6373,"title":{},"name":{},"text":{"237":{}},"component":{}}],["inact",{"_index":1795,"title":{},"name":{},"text":{"21":{}},"component":{}}],["inadvert",{"_index":1319,"title":{},"name":{},"text":{"6":{}},"component":{}}],["inbound",{"_index":4561,"title":{},"name":{},"text":{"124":{}},"component":{}}],["inbox",{"_index":4652,"title":{"145":{},"187":{}},"name":{"145":{},"186":{},"187":{}},"text":{"132":{},"133":{},"145":{},"146":{},"183":{},"186":{},"187":{}},"component":{}}],["inbox/busi",{"_index":5808,"title":{},"name":{},"text":{"186":{}},"component":{}}],["inch",{"_index":3128,"title":{},"name":{},"text":{"61":{}},"component":{}}],["incid",{"_index":2143,"title":{"60-8":{}},"name":{},"text":{"46":{},"60":{},"99":{},"253":{}},"component":{}}],["includ",{"_index":265,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"10":{},"14":{},"15":{},"18":{},"19":{},"21":{},"26":{},"28":{},"30":{},"31":{},"41":{},"44":{},"48":{},"50":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"74":{},"80":{},"81":{},"84":{},"87":{},"99":{},"105":{},"108":{},"111":{},"112":{},"113":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"128":{},"131":{},"132":{},"138":{},"143":{},"148":{},"149":{},"155":{},"161":{},"164":{},"165":{},"167":{},"176":{},"177":{},"184":{},"186":{},"189":{},"193":{},"195":{},"197":{},"209":{},"213":{},"218":{},"237":{},"244":{},"246":{},"251":{},"257":{},"258":{},"259":{},"262":{},"264":{},"266":{},"267":{},"268":{},"269":{}},"component":{}}],["include::partial$architectur",{"_index":6146,"title":{},"name":{},"text":{"209":{}},"component":{}}],["inclus",{"_index":1239,"title":{},"name":{},"text":{"6":{},"135":{}},"component":{}}],["inclusive_typ",{"_index":4719,"title":{},"name":{},"text":{"135":{}},"component":{}}],["incom",{"_index":4599,"title":{},"name":{},"text":{"127":{},"145":{},"181":{},"191":{},"194":{},"199":{},"202":{},"212":{},"271":{}},"component":{}}],["incompat",{"_index":1299,"title":{},"name":{},"text":{"6":{},"73":{},"119":{},"254":{}},"component":{}}],["incomplet",{"_index":6772,"title":{},"name":{},"text":{"270":{}},"component":{}}],["inconsist",{"_index":58,"title":{},"name":{},"text":{"1":{},"103":{},"108":{},"164":{}},"component":{}}],["inconveni",{"_index":6372,"title":{},"name":{},"text":{"237":{}},"component":{}}],["incorpor",{"_index":318,"title":{},"name":{},"text":{"2":{},"6":{}},"component":{}}],["incorrect",{"_index":1486,"title":{},"name":{},"text":{"9":{},"12":{},"119":{},"195":{},"196":{},"205":{},"223":{},"244":{}},"component":{}}],["incorrectli",{"_index":5145,"title":{},"name":{},"text":{"144":{}},"component":{}}],["incr",{"_index":1723,"title":{},"name":{},"text":{"21":{}},"component":{}}],["increas",{"_index":75,"title":{},"name":{},"text":{"1":{},"22":{},"23":{},"73":{},"80":{},"81":{},"115":{},"125":{},"167":{},"197":{},"205":{},"258":{}},"component":{}}],["increment",{"_index":1706,"title":{},"name":{},"text":{"21":{},"49":{},"60":{},"67":{},"83":{},"165":{}},"component":{}}],["inde",{"_index":1531,"title":{},"name":{},"text":{"12":{}},"component":{}}],["indefinit",{"_index":2513,"title":{},"name":{},"text":{"51":{}},"component":{}}],["indent",{"_index":3191,"title":{},"name":{},"text":{"66":{}},"component":{}}],["independ",{"_index":1253,"title":{},"name":{},"text":{"6":{},"81":{},"112":{},"118":{},"205":{},"216":{},"254":{},"256":{},"258":{},"270":{}},"component":{}}],["index",{"_index":17,"title":{"167-16":{},"167-34":{},"242-6":{}},"name":{"1":{},"53":{},"54":{},"66":{},"102":{},"109":{},"110":{},"156":{},"163":{},"180":{}},"text":{"57":{},"84":{},"119":{},"126":{},"127":{},"138":{},"167":{},"242":{},"269":{}},"component":{}}],["index.docker.io/v2",{"_index":3765,"title":{},"name":{},"text":{"73":{}},"component":{}}],["index.html.ftl",{"_index":3105,"title":{},"name":{},"text":{"61":{}},"component":{}}],["indexing=\"fals",{"_index":5573,"title":{},"name":{},"text":{"167":{}},"component":{}}],["indexing=\"tru",{"_index":5572,"title":{},"name":{},"text":{"167":{}},"component":{}}],["indexpattern",{"_index":4588,"title":{},"name":{},"text":{"126":{}},"component":{}}],["indic",{"_index":270,"title":{"256-7":{}},"name":{},"text":{"2":{},"16":{},"34":{},"51":{},"52":{},"56":{},"58":{},"73":{},"80":{},"111":{},"119":{},"120":{},"125":{},"138":{},"139":{},"140":{},"141":{},"144":{},"145":{},"159":{},"164":{},"167":{},"183":{},"186":{},"226":{},"230":{},"242":{},"244":{},"256":{},"257":{},"265":{},"268":{},"269":{}},"component":{}}],["indirectli",{"_index":4219,"title":{},"name":{},"text":{"99":{}},"component":{}}],["individu",{"_index":89,"title":{"167-38":{},"167-39":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"12":{},"34":{},"44":{},"45":{},"46":{},"52":{},"55":{},"58":{},"75":{},"81":{},"99":{},"100":{},"108":{},"119":{},"120":{},"124":{},"150":{},"154":{},"155":{},"167":{},"168":{},"173":{},"191":{},"202":{},"204":{},"205":{},"229":{},"242":{},"255":{},"267":{},"272":{}},"component":{}}],["individual’",{"_index":425,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["industri",{"_index":1464,"title":{},"name":{},"text":{"9":{},"59":{},"99":{},"194":{}},"component":{}}],["infinit",{"_index":6192,"title":{},"name":{},"text":{"213":{}},"component":{}}],["influenc",{"_index":4029,"title":{},"name":{},"text":{"82":{},"167":{},"205":{},"210":{}},"component":{}}],["info",{"_index":705,"title":{"30-5":{}},"name":{},"text":{"4":{},"16":{},"21":{},"30":{},"55":{},"58":{},"60":{},"73":{},"125":{},"127":{},"128":{},"131":{},"210":{},"213":{},"269":{}},"component":{}}],["info.subjdrfocod",{"_index":6699,"title":{},"name":{},"text":{"269":{}},"component":{}}],["info/warning/error",{"_index":4594,"title":{},"name":{},"text":{"127":{}},"component":{}}],["inform",{"_index":19,"title":{"111":{},"6-19":{},"6-28":{},"58-14":{},"105-4":{},"124-3":{},"195-2":{},"202-14":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"9":{},"10":{},"13":{},"14":{},"16":{},"17":{},"21":{},"29":{},"30":{},"31":{},"32":{},"37":{},"41":{},"44":{},"45":{},"46":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"61":{},"65":{},"67":{},"69":{},"70":{},"73":{},"75":{},"78":{},"80":{},"81":{},"84":{},"86":{},"99":{},"100":{},"105":{},"108":{},"110":{},"111":{},"112":{},"113":{},"115":{},"118":{},"119":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"134":{},"135":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"148":{},"149":{},"153":{},"154":{},"161":{},"162":{},"164":{},"167":{},"168":{},"173":{},"177":{},"183":{},"184":{},"186":{},"189":{},"190":{},"192":{},"194":{},"195":{},"196":{},"199":{},"201":{},"202":{},"204":{},"208":{},"212":{},"218":{},"223":{},"229":{},"230":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"240":{},"241":{},"242":{},"244":{},"253":{},"255":{},"257":{},"262":{},"264":{},"265":{},"268":{},"269":{}},"component":{}}],["infrastructur",{"_index":95,"title":{"43":{},"29-5":{},"48-4":{},"49-10":{},"193-4":{},"251-3":{}},"name":{},"text":{"1":{},"6":{},"14":{},"26":{},"28":{},"29":{},"30":{},"32":{},"41":{},"43":{},"44":{},"45":{},"46":{},"48":{},"49":{},"59":{},"67":{},"73":{},"74":{},"81":{},"87":{},"191":{},"193":{},"194":{},"199":{},"250":{},"251":{}},"component":{}}],["infrastructure/monitor",{"_index":6842,"title":{},"name":{},"text":{"272":{}},"component":{}}],["ingest",{"_index":3330,"title":{},"name":{},"text":{"67":{}},"component":{}}],["ingress",{"_index":2089,"title":{},"name":{},"text":{"40":{},"49":{},"73":{},"188":{},"199":{},"201":{},"248":{}},"component":{}}],["ingress_cidr_block",{"_index":3691,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ingressclassparameterses.configuration.konghq.com",{"_index":810,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ingresscontrol",{"_index":3792,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ingressgateway",{"_index":5818,"title":{},"name":{},"text":{"188":{},"199":{},"248":{},"254":{}},"component":{}}],["inher",{"_index":3304,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["ini",{"_index":3408,"title":{},"name":{},"text":{"73":{}},"component":{}}],["init",{"_index":1843,"title":{},"name":{},"text":{"23":{},"73":{},"86":{},"195":{},"255":{}},"component":{}}],["initi",{"_index":295,"title":{"107":{},"109":{},"52-13":{},"73-2":{},"73-15":{},"138-18":{},"159-1":{},"160-3":{},"205-11":{},"205-12":{},"218-3":{},"218-6":{}},"name":{"107":{},"108":{}},"text":{"2":{},"6":{},"21":{},"22":{},"30":{},"50":{},"51":{},"52":{},"54":{},"56":{},"58":{},"59":{},"61":{},"66":{},"69":{},"70":{},"73":{},"86":{},"99":{},"103":{},"105":{},"107":{},"108":{},"117":{},"119":{},"124":{},"136":{},"138":{},"139":{},"140":{},"141":{},"145":{},"148":{},"149":{},"150":{},"151":{},"154":{},"155":{},"159":{},"160":{},"161":{},"162":{},"169":{},"181":{},"186":{},"191":{},"195":{},"196":{},"202":{},"205":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"231":{},"236":{},"242":{},"253":{},"255":{},"259":{},"260":{},"261":{},"262":{}},"component":{}}],["initiator().accesstoken",{"_index":4929,"title":{},"name":{},"text":{"140":{},"141":{},"159":{},"161":{},"221":{},"222":{}},"component":{}}],["initiator().usernam",{"_index":5738,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["inject",{"_index":3253,"title":{},"name":{},"text":{"67":{},"99":{},"254":{}},"component":{}}],["injector",{"_index":6004,"title":{},"name":{},"text":{"197":{}},"component":{}}],["inland",{"_index":2964,"title":{},"name":{},"text":{"59":{}},"component":{}}],["inlin",{"_index":3717,"title":{},"name":{},"text":{"73":{},"154":{},"159":{},"161":{},"216":{}},"component":{}}],["inline_polici",{"_index":3595,"title":{},"name":{},"text":{"73":{}},"component":{}}],["inline_str",{"_index":5962,"title":{},"name":{},"text":{"196":{}},"component":{}}],["inlinescript",{"_index":4274,"title":{},"name":{},"text":{"103":{},"140":{},"141":{}},"component":{}}],["inn",{"_index":2743,"title":{},"name":{},"text":{"57":{}},"component":{}}],["inner",{"_index":4763,"title":{"166-5":{},"166-6":{},"166-7":{},"166-8":{}},"name":{},"text":{"136":{},"166":{},"167":{}},"component":{}}],["innov",{"_index":1410,"title":{},"name":{},"text":{"8":{}},"component":{}}],["inprogress",{"_index":1640,"title":{},"name":{},"text":{"18":{}},"component":{}}],["input",{"_index":1119,"title":{"50-4":{},"58-10":{},"58-13":{},"58-16":{},"229-6":{},"269-7":{}},"name":{},"text":{"6":{},"17":{},"49":{},"50":{},"52":{},"58":{},"67":{},"73":{},"103":{},"104":{},"105":{},"124":{},"132":{},"134":{},"135":{},"136":{},"138":{},"140":{},"141":{},"154":{},"155":{},"159":{},"162":{},"163":{},"164":{},"208":{},"212":{},"216":{},"217":{},"221":{},"222":{},"229":{},"237":{},"269":{},"270":{}},"component":{}}],["input/output",{"_index":5194,"title":{},"name":{},"text":{"154":{},"159":{},"212":{}},"component":{}}],["input\\output",{"_index":6174,"title":{},"name":{},"text":{"212":{}},"component":{}}],["inquiri",{"_index":5190,"title":{},"name":{},"text":{"154":{}},"component":{}}],["insecureedgeterminationpolici",{"_index":5825,"title":{},"name":{},"text":{"188":{},"248":{}},"component":{}}],["insert",{"_index":4037,"title":{},"name":{},"text":{"82":{},"83":{},"140":{},"145":{},"159":{},"167":{},"205":{},"241":{},"254":{},"265":{},"267":{}},"component":{}}],["insid",{"_index":745,"title":{},"name":{},"text":{"4":{},"25":{},"32":{},"52":{},"73":{},"103":{},"105":{},"108":{},"124":{},"129":{},"138":{},"141":{},"142":{},"166":{},"167":{},"181":{},"186":{},"196":{},"205":{},"217":{},"218":{},"237":{},"257":{}},"component":{}}],["insight",{"_index":2095,"title":{},"name":{},"text":{"41":{},"67":{},"81":{}},"component":{}}],["inspect",{"_index":1332,"title":{},"name":{},"text":{"6":{},"73":{},"254":{},"266":{}},"component":{}}],["instal",{"_index":389,"title":{"27":{},"86":{},"73-13":{},"73-22":{},"73-24":{},"73-25":{},"73-26":{},"73-28":{},"73-33":{},"73-40":{},"86-4":{},"162-2":{}},"name":{"86":{}},"text":{"2":{},"9":{},"19":{},"25":{},"26":{},"28":{},"40":{},"46":{},"52":{},"56":{},"58":{},"66":{},"73":{},"74":{},"75":{},"81":{},"86":{},"87":{},"123":{},"139":{},"141":{},"157":{},"162":{},"179":{},"197":{},"205":{},"254":{},"255":{},"264":{},"266":{},"269":{},"271":{},"272":{}},"component":{}}],["install.sh",{"_index":3832,"title":{},"name":{},"text":{"73":{},"86":{}},"component":{}}],["install:v3",{"_index":3732,"title":{},"name":{},"text":{"73":{}},"component":{}}],["installer.img",{"_index":3820,"title":{},"name":{},"text":{"73":{}},"component":{}}],["installer//mdtu",{"_index":3814,"title":{},"name":{},"text":{"73":{}},"component":{}}],["installer/instal",{"_index":3838,"title":{},"name":{},"text":{"73":{}},"component":{}}],["instanc",{"_index":303,"title":{"80":{},"258":{},"60-7":{},"60-9":{},"60-10":{},"60-11":{},"229-5":{}},"name":{},"text":{"2":{},"4":{},"19":{},"21":{},"22":{},"23":{},"25":{},"30":{},"34":{},"39":{},"41":{},"44":{},"45":{},"46":{},"48":{},"49":{},"50":{},"52":{},"55":{},"60":{},"65":{},"67":{},"68":{},"73":{},"78":{},"80":{},"81":{},"87":{},"104":{},"122":{},"123":{},"124":{},"125":{},"138":{},"142":{},"153":{},"154":{},"160":{},"161":{},"165":{},"167":{},"168":{},"182":{},"183":{},"186":{},"191":{},"195":{},"202":{},"205":{},"216":{},"217":{},"218":{},"229":{},"231":{},"234":{},"236":{},"254":{},"258":{},"271":{},"272":{}},"component":{}}],["instance/aw",{"_index":3543,"title":{},"name":{},"text":{"73":{}},"component":{}}],["instance1",{"_index":6533,"title":{},"name":{},"text":{"258":{}},"component":{}}],["instance_typ",{"_index":3548,"title":{},"name":{},"text":{"73":{}},"component":{}}],["instancetyp",{"_index":3987,"title":{},"name":{},"text":{"80":{}},"component":{}}],["instance’",{"_index":1667,"title":{},"name":{},"text":{"19":{},"80":{}},"component":{}}],["instead",{"_index":753,"title":{},"name":{},"text":{"4":{},"9":{},"32":{},"52":{},"58":{},"73":{},"119":{},"140":{},"141":{},"167":{},"175":{},"195":{},"205":{},"270":{}},"component":{}}],["institut",{"_index":3919,"title":{},"name":{},"text":{"78":{},"111":{},"115":{},"134":{},"135":{},"136":{},"154":{}},"component":{}}],["instruct",{"_index":598,"title":{"266-6":{}},"name":{},"text":{"4":{},"9":{},"37":{},"40":{},"57":{},"73":{},"87":{},"103":{},"113":{},"119":{},"129":{},"131":{},"141":{},"159":{},"223":{},"257":{},"266":{}},"component":{}}],["instruction.adoc",{"_index":6624,"title":{},"name":{},"text":{"264":{}},"component":{}}],["instrument",{"_index":4105,"title":{},"name":{},"text":{"84":{},"130":{}},"component":{}}],["insuffici",{"_index":3946,"title":{},"name":{},"text":{"80":{},"84":{},"168":{}},"component":{}}],["int",{"_index":4805,"title":{},"name":{},"text":{"138":{}},"component":{}}],["intact",{"_index":2494,"title":{},"name":{},"text":{"51":{}},"component":{}}],["integ",{"_index":4146,"title":{},"name":{},"text":{"84":{},"209":{},"253":{}},"component":{}}],["integr",{"_index":228,"title":{"93":{},"104":{},"122":{},"123":{},"139":{},"140":{},"162":{},"180":{},"195":{},"220":{},"31-2":{},"49-45":{},"66-10":{},"66-11":{},"105-2":{},"122-2":{},"123-2":{},"124-9":{},"138-10":{},"162-2":{},"162-3":{},"167-21":{},"195-3":{},"195-6":{},"195-11":{},"195-12":{},"195-18":{},"195-19":{},"195-20":{},"195-23":{},"195-26":{},"202-15":{},"244-6":{}},"name":{"93":{},"122":{},"123":{},"139":{},"140":{},"220":{}},"text":{"2":{},"6":{},"9":{},"10":{},"14":{},"31":{},"32":{},"44":{},"46":{},"47":{},"48":{},"49":{},"56":{},"58":{},"59":{},"65":{},"66":{},"67":{},"73":{},"78":{},"81":{},"87":{},"99":{},"104":{},"105":{},"108":{},"113":{},"115":{},"116":{},"122":{},"123":{},"124":{},"138":{},"139":{},"140":{},"155":{},"157":{},"158":{},"162":{},"167":{},"181":{},"189":{},"191":{},"194":{},"195":{},"198":{},"202":{},"204":{},"206":{},"208":{},"220":{},"231":{},"242":{},"244":{},"253":{},"255":{},"264":{},"265":{},"268":{},"269":{},"272":{}},"component":{}}],["integrated/merg",{"_index":6406,"title":{},"name":{},"text":{"242":{}},"component":{}}],["integration/api",{"_index":5863,"title":{},"name":{},"text":{"195":{}},"component":{}}],["integration/cp",{"_index":1990,"title":{},"name":{},"text":{"31":{}},"component":{}}],["integrations/overview.adoc",{"_index":2152,"title":{},"name":{},"text":{"46":{}},"component":{}}],["integret",{"_index":3348,"title":{},"name":{},"text":{"67":{}},"component":{}}],["intel",{"_index":616,"title":{},"name":{},"text":{"4":{}},"component":{}}],["intellig",{"_index":6611,"title":{},"name":{},"text":{"262":{}},"component":{}}],["intellij",{"_index":1307,"title":{},"name":{},"text":{"6":{},"63":{},"66":{},"244":{}},"component":{}}],["intend",{"_index":1181,"title":{},"name":{},"text":{"6":{},"99":{},"115":{},"119":{},"124":{},"140":{},"164":{},"205":{},"223":{},"254":{}},"component":{}}],["intens",{"_index":2616,"title":{},"name":{},"text":{"52":{},"108":{}},"component":{}}],["intent",{"_index":6258,"title":{},"name":{},"text":{"223":{}},"component":{}}],["inter",{"_index":1032,"title":{"6-15":{},"124-2":{}},"name":{},"text":{"6":{},"14":{},"29":{},"44":{},"48":{},"84":{},"124":{},"198":{},"206":{},"255":{}},"component":{}}],["interact",{"_index":119,"title":{"124":{},"197":{},"46-3":{},"123-2":{},"124-2":{},"124-3":{},"124-4":{},"124-5":{},"205-9":{},"207-1":{},"271-6":{},"272-6":{}},"name":{},"text":{"1":{},"2":{},"8":{},"9":{},"30":{},"31":{},"32":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"57":{},"59":{},"65":{},"66":{},"75":{},"78":{},"87":{},"99":{},"104":{},"105":{},"108":{},"122":{},"123":{},"124":{},"125":{},"132":{},"139":{},"153":{},"155":{},"161":{},"162":{},"163":{},"179":{},"181":{},"188":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"201":{},"205":{},"206":{},"207":{},"208":{},"212":{},"214":{},"220":{},"226":{},"231":{},"237":{},"249":{},"252":{},"253":{},"255":{},"271":{},"272":{}},"component":{}}],["intercept",{"_index":3179,"title":{},"name":{},"text":{"63":{},"122":{},"196":{}},"component":{}}],["interchang",{"_index":6676,"title":{},"name":{},"text":{"269":{}},"component":{}}],["interconnect",{"_index":6162,"title":{},"name":{},"text":{"210":{},"212":{},"213":{},"218":{},"245":{}},"component":{}}],["interconnnect",{"_index":6163,"title":{},"name":{},"text":{"210":{}},"component":{}}],["interdepartment",{"_index":4227,"title":{},"name":{},"text":{"99":{}},"component":{}}],["interest",{"_index":4232,"title":{},"name":{},"text":{"99":{}},"component":{}}],["interf",{"_index":2000,"title":{},"name":{},"text":{"31":{}},"component":{}}],["interfac",{"_index":237,"title":{"69-2":{},"118-2":{},"173-4":{},"195-26":{},"237-14":{},"253-7":{},"255-7":{},"270-7":{},"272-21":{}},"name":{},"text":{"2":{},"4":{},"8":{},"9":{},"15":{},"16":{},"19":{},"22":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"36":{},"37":{},"42":{},"43":{},"44":{},"46":{},"47":{},"49":{},"58":{},"59":{},"60":{},"63":{},"65":{},"66":{},"67":{},"69":{},"70":{},"73":{},"76":{},"81":{},"101":{},"104":{},"111":{},"115":{},"116":{},"118":{},"123":{},"124":{},"125":{},"126":{},"132":{},"142":{},"143":{},"144":{},"148":{},"150":{},"151":{},"152":{},"153":{},"158":{},"160":{},"162":{},"173":{},"175":{},"183":{},"186":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"202":{},"204":{},"205":{},"208":{},"221":{},"222":{},"234":{},"237":{},"242":{},"244":{},"251":{},"253":{},"254":{},"255":{},"264":{},"268":{},"270":{},"272":{}},"component":{}}],["intermedi",{"_index":297,"title":{"210-2":{},"210-3":{},"211-4":{},"212-4":{},"212-5":{},"213-3":{},"213-4":{},"259-4":{},"260-4":{}},"name":{},"text":{"2":{},"47":{},"51":{},"105":{},"155":{},"210":{},"211":{},"212":{},"213":{},"214":{},"218":{},"259":{},"260":{},"261":{}},"component":{}}],["intermediari",{"_index":4226,"title":{},"name":{},"text":{"99":{}},"component":{}}],["intermediate/boundari",{"_index":5005,"title":{},"name":{},"text":{"141":{},"159":{},"210":{},"212":{},"213":{},"260":{}},"component":{}}],["intern",{"_index":1281,"title":{"25":{},"182-3":{}},"name":{"25":{}},"text":{"6":{},"10":{},"14":{},"25":{},"27":{},"33":{},"49":{},"58":{},"59":{},"65":{},"67":{},"120":{},"182":{},"183":{},"185":{},"195":{},"197":{},"204":{},"208":{},"231":{},"236":{},"253":{},"272":{}},"component":{}}],["internation",{"_index":2253,"title":{"49-47":{}},"name":{},"text":{"49":{}},"component":{}}],["internet",{"_index":584,"title":{},"name":{},"text":{"2":{},"4":{},"25":{},"67":{},"73":{},"99":{}},"component":{}}],["interoper",{"_index":71,"title":{},"name":{},"text":{"1":{},"6":{},"44":{},"46":{},"81":{},"124":{}},"component":{}}],["interpret",{"_index":2776,"title":{},"name":{},"text":{"58":{},"61":{},"262":{}},"component":{}}],["interrupt",{"_index":4017,"title":{"211-4":{},"213-3":{},"259-4":{},"260-4":{}},"name":{},"text":{"81":{},"119":{},"211":{},"213":{},"218":{},"259":{},"260":{},"261":{}},"component":{}}],["intersect",{"_index":5501,"title":{},"name":{},"text":{"166":{},"167":{}},"component":{}}],["interservic",{"_index":5997,"title":{"197":{},"272-6":{}},"name":{},"text":{"197":{},"206":{},"208":{},"253":{},"272":{}},"component":{}}],["interv",{"_index":1713,"title":{},"name":{},"text":{"21":{},"39":{},"51":{},"125":{},"184":{},"213":{}},"component":{}}],["interview",{"_index":4409,"title":{},"name":{},"text":{"108":{}},"component":{}}],["intra",{"_index":1232,"title":{},"name":{},"text":{"6":{}},"component":{}}],["introduc",{"_index":2290,"title":{},"name":{},"text":{"49":{},"66":{},"67":{},"119":{},"268":{}},"component":{}}],["introduct",{"_index":1853,"title":{"25-1":{},"33-1":{},"67-1":{},"75-1":{},"76-1":{},"78-1":{},"108-1":{},"168-1":{},"196-1":{}},"name":{"130":{},"168":{}},"text":{"25":{},"33":{},"67":{},"75":{},"76":{},"78":{},"108":{},"168":{},"196":{}},"component":{}}],["introspection_endpoint",{"_index":6495,"title":{},"name":{},"text":{"255":{}},"component":{}}],["intstream.rangeclosed(0",{"_index":6740,"title":{},"name":{},"text":{"269":{}},"component":{}}],["invalid",{"_index":4429,"title":{},"name":{},"text":{"108":{},"119":{},"144":{},"260":{}},"component":{}}],["invalidchangebatch",{"_index":1879,"title":{},"name":{},"text":{"25":{}},"component":{}}],["invalidcreditcard",{"_index":6597,"title":{},"name":{},"text":{"260":{}},"component":{}}],["invalu",{"_index":3198,"title":{},"name":{},"text":{"66":{}},"component":{}}],["invers",{"_index":5238,"title":{"158":{}},"name":{},"text":{"157":{},"158":{}},"component":{}}],["investig",{"_index":4602,"title":{},"name":{},"text":{"127":{},"205":{},"253":{}},"component":{}}],["invoc",{"_index":2617,"title":{},"name":{},"text":{"52":{},"123":{},"138":{},"140":{}},"component":{}}],["invocation.adoc",{"_index":3215,"title":{},"name":{},"text":{"66":{},"264":{}},"component":{}}],["invok",{"_index":2582,"title":{},"name":{},"text":{"52":{},"58":{},"124":{},"138":{},"179":{},"181":{}},"component":{}}],["involv",{"_index":251,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"12":{},"19":{},"21":{},"23":{},"30":{},"31":{},"44":{},"56":{},"67":{},"68":{},"70":{},"80":{},"108":{},"116":{},"117":{},"119":{},"122":{},"132":{},"140":{},"148":{},"149":{},"159":{},"160":{},"164":{},"188":{},"189":{},"190":{},"193":{},"195":{},"201":{},"205":{},"242":{},"249":{},"250":{},"252":{},"253":{},"258":{},"267":{}},"component":{}}],["io",{"_index":5479,"title":{},"name":{"231":{}},"text":{"163":{}},"component":{}}],["iop",{"_index":3980,"title":{},"name":{},"text":{"80":{}},"component":{}}],["ip",{"_index":441,"title":{"19":{}},"name":{},"text":{"2":{},"4":{},"19":{},"20":{},"25":{},"29":{},"49":{},"55":{},"73":{},"75":{},"76":{},"188":{},"193":{},"194":{},"247":{},"251":{},"272":{}},"component":{}}],["ip.tf",{"_index":3601,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ip4.address[1",{"_index":1664,"title":{},"name":{},"text":{"19":{}},"component":{}}],["ip4:12.34.56.78",{"_index":1873,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ipsam",{"_index":6318,"title":{},"name":{},"text":{"231":{}},"component":{}}],["ipv4",{"_index":1939,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ipv4.address",{"_index":1668,"title":{},"name":{},"text":{"19":{}},"component":{}}],["isc",{"_index":1655,"title":{},"name":{},"text":{"19":{}},"component":{}}],["islaboratoryalreadyexistflow",{"_index":4940,"title":{},"name":{},"text":{"140":{}},"component":{}}],["islaboratoryexistgateway",{"_index":4932,"title":{},"name":{},"text":{"140":{}},"component":{}}],["isn’t",{"_index":2081,"title":{},"name":{},"text":{"40":{}},"component":{}}],["iso",{"_index":2509,"title":{},"name":{},"text":{"51":{},"213":{}},"component":{}}],["iso8601",{"_index":5837,"title":{},"name":{},"text":{"192":{}},"component":{}}],["isobject",{"_index":4049,"title":{},"name":{},"text":{"83":{}},"component":{}}],["isobject=“tru",{"_index":6398,"title":{},"name":{},"text":{"242":{}},"component":{}}],["isol",{"_index":1856,"title":{},"name":{},"text":{"25":{},"48":{}},"component":{}}],["issu",{"_index":1282,"title":{"19-3":{},"108-2":{}},"name":{},"text":{"6":{},"9":{},"10":{},"12":{},"19":{},"30":{},"31":{},"40":{},"49":{},"56":{},"66":{},"67":{},"73":{},"78":{},"108":{},"113":{},"119":{},"125":{},"129":{},"179":{},"197":{},"209":{},"242":{},"244":{},"254":{},"258":{}},"component":{}}],["issuanc",{"_index":2587,"title":{},"name":{},"text":{"52":{}},"component":{}}],["issuer",{"_index":3402,"title":{},"name":{},"text":{"73":{},"196":{},"255":{},"269":{}},"component":{}}],["issuer.offic",{"_index":6487,"title":{},"name":{},"text":{"255":{}},"component":{}}],["issuercn",{"_index":6723,"title":{},"name":{},"text":{"269":{}},"component":{}}],["issuers_allow",{"_index":6493,"title":{},"name":{},"text":{"255":{}},"component":{}}],["istio",{"_index":1573,"title":{},"name":{"196":{}},"text":{"14":{},"32":{},"34":{},"49":{},"188":{},"193":{},"195":{},"196":{},"197":{},"199":{},"201":{},"248":{},"250":{},"254":{},"255":{}},"component":{}}],["istiod",{"_index":5954,"title":{},"name":{},"text":{"196":{},"197":{}},"component":{}}],["it.fieldnames().each",{"_index":5302,"title":{},"name":{},"text":{"159":{}},"component":{}}],["it.prop('fulltimeflag').boolvalu",{"_index":5309,"title":{},"name":{},"text":{"159":{}},"component":{}}],["it.prop('hygienistflag').boolvalu",{"_index":5307,"title":{},"name":{},"text":{"159":{}},"component":{}}],["it.prop(fieldname).valu",{"_index":5305,"title":{},"name":{},"text":{"159":{}},"component":{}}],["item",{"_index":1241,"title":{},"name":{},"text":{"6":{},"9":{},"52":{},"63":{},"139":{},"140":{},"141":{},"154":{},"159":{},"160":{},"167":{},"214":{},"231":{},"255":{},"256":{},"271":{}},"component":{}}],["item%dataloadcsvconstraintviol",{"_index":6783,"title":{},"name":{},"text":{"271":{}},"component":{}}],["item%dataloadcsvoperationfail",{"_index":6785,"title":{},"name":{},"text":{"271":{}},"component":{}}],["item%dataloadcsvsuccess",{"_index":6781,"title":{},"name":{},"text":{"271":{}},"component":{}}],["item.edrp",{"_index":5047,"title":{},"name":{},"text":{"141":{}},"component":{}}],["item.id",{"_index":6353,"title":{},"name":{},"text":{"231":{}},"component":{}}],["item.nam",{"_index":4982,"title":{},"name":{},"text":{"140":{},"141":{},"231":{}},"component":{}}],["item.processdefinitionnam",{"_index":6352,"title":{},"name":{},"text":{"231":{}},"component":{}}],["iter",{"_index":1199,"title":{},"name":{},"text":{"6":{},"67":{},"164":{},"269":{},"272":{}},"component":{}}],["itself",{"_index":2050,"title":{},"name":{},"text":{"34":{},"51":{},"52":{},"81":{},"99":{},"103":{},"207":{},"257":{}},"component":{}}],["it’",{"_index":1108,"title":{},"name":{},"text":{"6":{},"25":{},"34":{},"52":{},"57":{},"125":{},"139":{},"142":{},"216":{},"218":{}},"component":{}}],["ivan",{"_index":4734,"title":{},"name":{},"text":{"135":{}},"component":{}}],["ivanov",{"_index":4733,"title":{},"name":{},"text":{"135":{},"158":{}},"component":{}}],["ivanovych",{"_index":4735,"title":{},"name":{},"text":{"135":{}},"component":{}}],["jacoco",{"_index":1330,"title":{},"name":{},"text":{"6":{}},"component":{}}],["jaeger",{"_index":1559,"title":{"32-25":{}},"name":{},"text":{"14":{},"32":{},"49":{},"65":{},"193":{},"250":{}},"component":{}}],["jar",{"_index":5650,"title":{},"name":{},"text":{"168":{}},"component":{}}],["jare",{"_index":4419,"title":{},"name":{},"text":{"108":{}},"component":{}}],["java",{"_index":1317,"title":{"168-3":{}},"name":{},"text":{"6":{},"34":{},"47":{},"49":{},"52":{},"78":{},"154":{},"165":{},"168":{},"204":{},"208":{},"211":{},"218":{},"257":{},"260":{},"269":{}},"component":{}}],["java.lang.except",{"_index":6241,"title":{},"name":{},"text":{"218":{}},"component":{}}],["java.text.simpledateformat",{"_index":2533,"title":{},"name":{},"text":{"51":{}},"component":{}}],["java.util.d",{"_index":2534,"title":{},"name":{},"text":{"51":{}},"component":{}}],["java_opt",{"_index":2057,"title":{},"name":{},"text":{"34":{},"63":{}},"component":{}}],["javascript",{"_index":2285,"title":{"229":{}},"name":{},"text":{"49":{},"194":{},"202":{},"204":{},"267":{}},"component":{}}],["jayne_kuhic@sydney.com",{"_index":6326,"title":{},"name":{},"text":{"231":{}},"component":{}}],["jenkin",{"_index":698,"title":{"32-6":{},"32-19":{},"33-4":{},"42-4":{},"43-4":{}},"name":{},"text":{"4":{},"5":{},"6":{},"14":{},"15":{},"16":{},"17":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"35":{},"42":{},"43":{},"47":{},"49":{},"55":{},"58":{},"65":{},"66":{},"73":{},"75":{},"84":{},"101":{},"104":{},"105":{},"115":{},"117":{},"118":{},"122":{},"128":{},"129":{},"131":{},"132":{},"138":{},"142":{},"164":{},"168":{},"177":{},"190":{},"191":{},"193":{},"195":{},"201":{},"242":{},"250":{},"253":{},"255":{},"268":{},"270":{}},"component":{}}],["jira",{"_index":1142,"title":{},"name":{},"text":{"6":{}},"component":{}}],["job",{"_index":947,"title":{"5-2":{},"14-1":{},"65-1":{},"128-2":{}},"name":{"128":{}},"text":{"5":{},"14":{},"17":{},"31":{},"60":{},"65":{},"118":{},"125":{},"128":{},"129":{},"164":{},"204":{},"205":{},"242":{},"253":{}},"component":{}}],["job.yaml",{"_index":2699,"title":{},"name":{},"text":{"56":{}},"component":{}}],["join",{"_index":3080,"title":{"166":{},"166-5":{},"166-6":{},"166-7":{},"166-8":{},"166-10":{},"166-11":{},"167-19":{}},"name":{"166":{}},"text":{"60":{},"118":{},"136":{},"138":{},"142":{},"166":{},"167":{},"170":{}},"component":{}}],["joint",{"_index":2209,"title":{},"name":{},"text":{"48":{}},"component":{}}],["jong_doe@doemail.com",{"_index":902,"title":{},"name":{},"text":{"4":{}},"component":{}}],["jonh",{"_index":900,"title":{},"name":{},"text":{"4":{}},"component":{}}],["journal",{"_index":4495,"title":{"119-8":{}},"name":{},"text":{"119":{}},"component":{}}],["jpeg",{"_index":4304,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["jpg",{"_index":1514,"title":{},"name":{},"text":{"12":{},"105":{},"227":{}},"component":{}}],["jre",{"_index":2278,"title":{},"name":{},"text":{"49":{}},"component":{}}],["js",{"_index":6068,"title":{},"name":{},"text":{"204":{},"229":{},"270":{}},"component":{}}],["json",{"_index":183,"title":{"245":{}},"name":{"245":{}},"text":{"1":{},"4":{},"30":{},"49":{},"52":{},"57":{},"58":{},"59":{},"61":{},"67":{},"72":{},"104":{},"105":{},"122":{},"123":{},"124":{},"132":{},"139":{},"140":{},"141":{},"142":{},"154":{},"161":{},"162":{},"179":{},"181":{},"195":{},"196":{},"202":{},"206":{},"216":{},"231":{},"242":{},"245":{},"269":{},"270":{}},"component":{}}],["json.stringify(data",{"_index":6639,"title":{},"name":{},"text":{"267":{}},"component":{}}],["jsonencod",{"_index":3597,"title":{},"name":{},"text":{"73":{}},"component":{}}],["jsonpath='{.data.aws_access_key_id",{"_index":3860,"title":{},"name":{},"text":{"73":{}},"component":{}}],["jsonpath='{.data.aws_secret_access_key",{"_index":3862,"title":{},"name":{},"text":{"73":{}},"component":{}}],["jsonpath='{.spec.basedomain",{"_index":3869,"title":{},"name":{},"text":{"73":{}},"component":{}}],["jsonpath='{.status.domain",{"_index":3793,"title":{},"name":{},"text":{"73":{}},"component":{}}],["jsonpath={.items[0].metadata.annotations.machine\\.openshift\\.io/machin",{"_index":3865,"title":{},"name":{},"text":{"73":{}},"component":{}}],["jsonplacehold",{"_index":6302,"title":{},"name":{},"text":{"231":{}},"component":{}}],["jteqpmku6pckbwmkawsio6lmz2b9xue0i2nwecscha9ihmgds1ugcjxtp0kotoqawcbnhxgdyh8hoi0wcnig56dswc3saodmw",{"_index":5702,"title":{},"name":{},"text":{"179":{}},"component":{}}],["juel",{"_index":2180,"title":{"262-4":{},"262-6":{},"269-14":{},"269-18":{}},"name":{},"text":{"47":{},"57":{},"58":{},"100":{},"105":{},"139":{},"140":{},"141":{},"160":{},"212":{},"216":{},"218":{},"227":{},"260":{},"262":{},"264":{},"269":{}},"component":{}}],["jul",{"_index":5769,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["jump",{"_index":1957,"title":{},"name":{},"text":{"29":{},"73":{},"75":{},"104":{},"107":{},"160":{},"162":{},"167":{},"181":{}},"component":{}}],["jumpbox",{"_index":642,"title":{},"name":{},"text":{"4":{}},"component":{}}],["jumpbox’",{"_index":646,"title":{},"name":{},"text":{"4":{}},"component":{}}],["junit",{"_index":1163,"title":{},"name":{},"text":{"6":{},"49":{}},"component":{}}],["jvm",{"_index":2058,"title":{},"name":{},"text":{"34":{},"63":{}},"component":{}}],["jwk",{"_index":5965,"title":{},"name":{},"text":{"196":{}},"component":{}}],["jwksuri",{"_index":5948,"title":{},"name":{},"text":{"196":{},"255":{}},"component":{}}],["jwksuri.offic",{"_index":6488,"title":{},"name":{},"text":{"255":{}},"component":{}}],["jwt",{"_index":2170,"title":{"179":{},"179-2":{}},"name":{"179":{},"196":{}},"text":{"47":{},"55":{},"59":{},"84":{},"111":{},"122":{},"124":{},"140":{},"141":{},"179":{},"180":{},"196":{},"197":{},"199":{},"200":{},"205":{},"206":{},"209":{},"271":{}},"component":{}}],["jwt_attribut",{"_index":4152,"title":{},"name":{},"text":{"84":{},"209":{}},"component":{}}],["jwtrule",{"_index":5942,"title":{},"name":{},"text":{"196":{},"255":{}},"component":{}}],["k",{"_index":4828,"title":{},"name":{},"text":{"138":{},"142":{},"166":{}},"component":{}}],["k'::text",{"_index":5513,"title":{},"name":{},"text":{"166":{}},"component":{}}],["k.categori",{"_index":5512,"title":{},"name":{},"text":{"166":{}},"component":{}}],["k.code",{"_index":4825,"title":{},"name":{},"text":{"138":{}},"component":{}}],["k.katottg_id",{"_index":5506,"title":{},"name":{},"text":{"166":{}},"component":{}}],["k.koatuu_id",{"_index":4824,"title":{},"name":{},"text":{"138":{},"142":{}},"component":{}}],["k.level",{"_index":5514,"title":{},"name":{},"text":{"166":{}},"component":{}}],["k.level1",{"_index":5082,"title":{},"name":{},"text":{"142":{}},"component":{}}],["k.name",{"_index":4826,"title":{},"name":{},"text":{"138":{},"142":{},"166":{}},"component":{}}],["k.type",{"_index":4829,"title":{},"name":{},"text":{"138":{}},"component":{}}],["k2",{"_index":4356,"title":{},"name":{},"text":{"107":{}},"component":{}}],["k8",{"_index":499,"title":{},"name":{},"text":{"2":{},"193":{},"250":{},"254":{}},"component":{}}],["k=rsa",{"_index":1885,"title":{},"name":{},"text":{"25":{}},"component":{}}],["kafka",{"_index":866,"title":{},"name":{},"text":{"4":{},"14":{},"47":{},"49":{},"56":{},"62":{},"82":{},"83":{},"84":{},"128":{},"167":{},"189":{},"198":{},"201":{},"205":{},"208":{}},"component":{}}],["kafka.retent",{"_index":3155,"title":{},"name":{},"text":{"62":{}},"component":{}}],["kafka.s",{"_index":872,"title":{},"name":{},"text":{"4":{}},"component":{}}],["kafkalistener(\"data",{"_index":6816,"title":{},"name":{},"text":{"271":{}},"component":{}}],["kafla",{"_index":2372,"title":{},"name":{},"text":{"49":{}},"component":{}}],["katottg",{"_index":4503,"title":{},"name":{},"text":{"119":{},"158":{},"166":{}},"component":{}}],["katottg=add_level",{"_index":5520,"title":{},"name":{},"text":{"166":{}},"component":{}}],["katottg=level4",{"_index":5519,"title":{},"name":{},"text":{"166":{}},"component":{}}],["katottg=ua05100030000051497",{"_index":5258,"title":{},"name":{},"text":{"158":{}},"component":{}}],["katottg_categori",{"_index":5511,"title":{},"name":{},"text":{"166":{}},"component":{}}],["katottg_dictionari",{"_index":5516,"title":{},"name":{},"text":{"166":{}},"component":{}}],["katottg_jwt_attr",{"_index":4157,"title":{},"name":{},"text":{"84":{}},"component":{}}],["katottg_t",{"_index":4158,"title":{},"name":{},"text":{"84":{}},"component":{}}],["katottg_valu",{"_index":4159,"title":{},"name":{},"text":{"84":{}},"component":{}}],["kd",{"_index":5526,"title":{},"name":{},"text":{"166":{}},"component":{}}],["kd.add_level",{"_index":5528,"title":{},"name":{},"text":{"166":{}},"component":{}}],["kd.categori",{"_index":5529,"title":{},"name":{},"text":{"166":{}},"component":{}}],["kd.level4",{"_index":5527,"title":{},"name":{},"text":{"166":{}},"component":{}}],["kd.name",{"_index":5524,"title":{},"name":{},"text":{"166":{}},"component":{}}],["keep",{"_index":1322,"title":{},"name":{},"text":{"6":{},"13":{},"21":{},"67":{},"73":{},"85":{},"108":{},"113":{},"128":{},"166":{},"168":{},"205":{},"208":{},"235":{},"258":{},"271":{}},"component":{}}],["kept",{"_index":1472,"title":{},"name":{},"text":{"9":{},"257":{}},"component":{}}],["key",{"_index":214,"title":{"78":{},"160":{},"192":{},"256":{},"30-5":{},"46-4":{},"78-2":{},"78-4":{},"78-5":{},"78-6":{},"78-7":{},"108-2":{},"131-2":{},"140-9":{},"140-16":{},"160-2":{},"160-3":{},"160-4":{},"160-5":{},"160-6":{},"160-7":{},"160-8":{},"271-6":{}},"name":{"78":{},"160":{},"192":{},"256":{}},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"13":{},"25":{},"30":{},"37":{},"40":{},"44":{},"45":{},"46":{},"49":{},"51":{},"52":{},"57":{},"58":{},"59":{},"65":{},"66":{},"67":{},"69":{},"70":{},"73":{},"76":{},"78":{},"83":{},"84":{},"99":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"116":{},"119":{},"120":{},"123":{},"124":{},"125":{},"131":{},"138":{},"139":{},"140":{},"141":{},"145":{},"148":{},"149":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"167":{},"181":{},"188":{},"192":{},"195":{},"196":{},"200":{},"206":{},"207":{},"210":{},"212":{},"213":{},"216":{},"217":{},"218":{},"221":{},"222":{},"248":{},"256":{},"258":{},"259":{},"260":{},"261":{},"271":{},"272":{}},"component":{}}],["key.tf",{"_index":3621,"title":{},"name":{},"text":{"73":{}},"component":{}}],["key.yaml",{"_index":3397,"title":{},"name":{},"text":{"73":{}},"component":{}}],["key/busi",{"_index":5359,"title":{},"name":{},"text":{"160":{}},"component":{}}],["key/servic",{"_index":5358,"title":{},"name":{},"text":{"160":{}},"component":{}}],["key/valu",{"_index":4283,"title":{},"name":{},"text":{"104":{}},"component":{}}],["key:cacertif",{"_index":3905,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["key:certif",{"_index":3906,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["key:key",{"_index":3907,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["key=${certdir}/key.pem",{"_index":3807,"title":{},"name":{},"text":{"73":{}},"component":{}}],["key_nam",{"_index":761,"title":{},"name":{},"text":{"4":{},"73":{}},"component":{}}],["key_pair",{"_index":3571,"title":{},"name":{},"text":{"73":{}},"component":{}}],["keyapp",{"_index":5182,"title":{},"name":{},"text":{"154":{}},"component":{}}],["keycloak",{"_index":534,"title":{"75":{},"179":{},"255":{},"32-21":{},"75-2":{},"75-3":{},"119-2":{},"154-15":{},"255-6":{}},"name":{"75":{},"154":{},"158":{},"255":{}},"text":{"2":{},"4":{},"9":{},"14":{},"15":{},"28":{},"29":{},"30":{},"32":{},"33":{},"37":{},"47":{},"49":{},"55":{},"57":{},"59":{},"60":{},"65":{},"66":{},"75":{},"77":{},"78":{},"86":{},"111":{},"117":{},"118":{},"119":{},"120":{},"124":{},"139":{},"142":{},"154":{},"155":{},"158":{},"179":{},"180":{},"181":{},"183":{},"186":{},"193":{},"196":{},"250":{},"251":{},"255":{},"272":{}},"component":{}}],["keycloak.apps.cicd2.mdtu",{"_index":5945,"title":{},"name":{},"text":{"196":{}},"component":{}}],["keycloak.apps.your",{"_index":5684,"title":{},"name":{},"text":{"179":{}},"component":{}}],["keycloak.example.com",{"_index":3898,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["keycloak.officerportal.selfregistr",{"_index":4486,"title":{},"name":{},"text":{"117":{}},"component":{}}],["keycloakclientid",{"_index":4531,"title":{},"name":{},"text":{"119":{}},"component":{}}],["keycloakgetofficerusersbyattributesequalsandstartwith",{"_index":5239,"title":{},"name":{},"text":{"158":{}},"component":{}}],["keycloakgetofficerusersbyattributesequalsandstartwith.json",{"_index":5240,"title":{},"name":{},"text":{"158":{}},"component":{}}],["keycloakrealm",{"_index":6489,"title":{},"name":{},"text":{"255":{}},"component":{}}],["keycloakrealmus",{"_index":5829,"title":{},"name":{},"text":{"190":{}},"component":{}}],["keycloakrealus",{"_index":5828,"title":{},"name":{},"text":{"190":{}},"component":{}}],["keycloak’",{"_index":1962,"title":{},"name":{},"text":{"30":{}},"component":{}}],["keys.adoc",{"_index":785,"title":{},"name":{},"text":{"4":{},"30":{},"31":{},"37":{},"73":{},"78":{}},"component":{}}],["keys/control",{"_index":784,"title":{},"name":{},"text":{"4":{},"30":{},"31":{},"37":{},"73":{},"78":{}},"component":{}}],["keyspac",{"_index":6646,"title":{},"name":{},"text":{"267":{}},"component":{}}],["keyword",{"_index":4321,"title":{},"name":{},"text":{"105":{},"142":{},"148":{},"149":{}},"component":{}}],["kiali",{"_index":1558,"title":{"32-24":{}},"name":{},"text":{"14":{},"32":{},"49":{},"65":{},"193":{},"197":{},"250":{},"254":{}},"component":{}}],["kibana",{"_index":1557,"title":{"126":{},"127":{},"32-22":{},"119-4":{}},"name":{"126":{},"127":{}},"text":{"14":{},"32":{},"49":{},"65":{},"112":{},"119":{},"126":{},"127":{},"193":{},"250":{}},"component":{}}],["kibanasavedobjectmeta.searchsourcejson",{"_index":4589,"title":{},"name":{},"text":{"126":{}},"component":{}}],["kic",{"_index":1321,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["kick",{"_index":6629,"title":{},"name":{},"text":{"265":{}},"component":{}}],["kind",{"_index":677,"title":{},"name":{},"text":{"4":{},"80":{},"104":{},"123":{},"188":{},"195":{},"196":{},"248":{},"254":{},"258":{},"272":{}},"component":{}}],["know",{"_index":1431,"title":{},"name":{},"text":{"9":{},"21":{},"111":{}},"component":{}}],["knowledg",{"_index":156,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"65":{},"66":{},"134":{},"137":{}},"component":{}}],["known",{"_index":614,"title":{},"name":{},"text":{"4":{},"6":{},"66":{},"138":{},"155":{}},"component":{}}],["ko",{"_index":5087,"title":{},"name":{},"text":{"142":{}},"component":{}}],["ko.cod",{"_index":5088,"title":{},"name":{},"text":{"142":{}},"component":{}}],["ko.koatuu_id",{"_index":5084,"title":{},"name":{},"text":{"142":{}},"component":{}}],["ko.nam",{"_index":5086,"title":{},"name":{},"text":{"142":{}},"component":{}}],["ko.typ",{"_index":5089,"title":{},"name":{},"text":{"142":{}},"component":{}}],["koatsu",{"_index":4782,"title":{"138-11":{},"138-12":{}},"name":{},"text":{"138":{},"140":{}},"component":{}}],["koatuu",{"_index":4827,"title":{"142-5":{}},"name":{},"text":{"138":{},"140":{},"142":{}},"component":{}}],["koatuu.cod",{"_index":5092,"title":{},"name":{},"text":{"142":{}},"component":{}}],["koatuu.koatuu_id",{"_index":5091,"title":{},"name":{},"text":{"142":{}},"component":{}}],["koatuu.nam",{"_index":5093,"title":{},"name":{},"text":{"142":{}},"component":{}}],["koatuu.typ",{"_index":5094,"title":{},"name":{},"text":{"142":{}},"component":{}}],["koatuu_csv",{"_index":4355,"title":{},"name":{},"text":{"107":{}},"component":{}}],["koatuu_id",{"_index":5114,"title":{},"name":{},"text":{"142":{}},"component":{}}],["koatuu_obl_contains_nam",{"_index":4823,"title":{},"name":{},"text":{"138":{}},"component":{}}],["koatuu_simple.csv",{"_index":4342,"title":{},"name":{},"text":{"107":{}},"component":{}}],["koatuuid",{"_index":4985,"title":{},"name":{},"text":{"140":{}},"component":{}}],["kong",{"_index":493,"title":{"201":{}},"name":{},"text":{"2":{},"9":{},"14":{},"49":{},"55":{},"65":{},"124":{},"188":{},"193":{},"198":{},"199":{},"201":{},"248":{},"250":{},"255":{},"272":{}},"component":{}}],["kongclusterplugin",{"_index":6847,"title":{},"name":{},"text":{"272":{}},"component":{}}],["konghq.com/overrid",{"_index":6881,"title":{},"name":{},"text":{"272":{}},"component":{}}],["konghq.com/path",{"_index":6883,"title":{},"name":{},"text":{"272":{}},"component":{}}],["konghq.com/plugin",{"_index":6880,"title":{},"name":{},"text":{"272":{}},"component":{}}],["kongplugin",{"_index":6884,"title":{},"name":{},"text":{"272":{}},"component":{}}],["kongpluginsconfig",{"_index":2669,"title":{},"name":{},"text":{"55":{}},"component":{}}],["kopfg.csv",{"_index":4374,"title":{},"name":{},"text":{"107":{}},"component":{}}],["kpi",{"_index":272,"title":{},"name":{},"text":{"2":{}},"component":{}}],["kube",{"_index":3245,"title":{},"name":{},"text":{"67":{},"73":{},"80":{}},"component":{}}],["kube:admin",{"_index":1916,"title":{},"name":{},"text":{"28":{}},"component":{}}],["kubeconfig",{"_index":3774,"title":{},"name":{},"text":{"73":{}},"component":{}}],["kubeconfig=/tmp/installer/kubeconfig",{"_index":3825,"title":{},"name":{},"text":{"73":{}},"component":{}}],["kubeconfig=clust",{"_index":3775,"title":{},"name":{},"text":{"73":{}},"component":{}}],["kubectl",{"_index":1732,"title":{},"name":{},"text":{"21":{}},"component":{}}],["kubernet",{"_index":497,"title":{"195-16":{}},"name":{},"text":{"2":{},"14":{},"21":{},"22":{},"23":{},"24":{},"49":{},"73":{},"80":{},"81":{},"124":{},"195":{},"255":{},"258":{}},"component":{}}],["kubernetes.io/clust",{"_index":3994,"title":{},"name":{},"text":{"80":{}},"component":{}}],["kubernetes.io/ingress.class",{"_index":6848,"title":{},"name":{},"text":{"272":{}},"component":{}}],["kv",{"_index":3900,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"248":{},"255":{}},"component":{}}],["kv/cluster/domain",{"_index":3904,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["kv/registry//domain",{"_index":3908,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["kv/registry//extern",{"_index":5890,"title":{},"name":{},"text":{"195":{}},"component":{}}],["kv/registry//trembita",{"_index":5883,"title":{},"name":{},"text":{"195":{}},"component":{}}],["kv/registry/extern",{"_index":5876,"title":{},"name":{},"text":{"195":{}},"component":{}}],["kyiv",{"_index":1595,"title":{},"name":{},"text":{"15":{},"16":{},"213":{},"242":{}},"component":{}}],["l",{"_index":3719,"title":{},"name":{},"text":{"73":{},"142":{}},"component":{}}],["l.address",{"_index":5078,"title":{},"name":{},"text":{"142":{}},"component":{}}],["l.edrpou",{"_index":5079,"title":{},"name":{},"text":{"142":{}},"component":{}}],["l.koatuu_id",{"_index":5080,"title":{},"name":{},"text":{"142":{}},"component":{}}],["l.laboratory_id",{"_index":5076,"title":{},"name":{},"text":{"142":{}},"component":{}}],["l.name",{"_index":5077,"title":{},"name":{},"text":{"142":{}},"component":{}}],["l.ownership_id",{"_index":5081,"title":{},"name":{},"text":{"142":{}},"component":{}}],["l.uuid",{"_index":4678,"title":{},"name":{},"text":{"134":{}},"component":{}}],["l2",{"_index":654,"title":{},"name":{},"text":{"4":{},"46":{}},"component":{}}],["l3",{"_index":722,"title":{},"name":{},"text":{"4":{}},"component":{}}],["lab",{"_index":2103,"title":{"141-9":{},"141-19":{}},"name":{},"text":{"42":{},"131":{},"139":{},"140":{},"141":{},"159":{},"272":{}},"component":{}}],["lab.bpmn",{"_index":4921,"title":{},"name":{},"text":{"140":{}},"component":{}}],["lab.json",{"_index":4970,"title":{},"name":{},"text":{"140":{},"141":{}},"component":{}}],["lab777777777777777",{"_index":4650,"title":{},"name":{},"text":{"131":{}},"component":{}}],["label",{"_index":1731,"title":{},"name":{},"text":{"21":{},"52":{},"56":{},"58":{},"80":{},"83":{},"100":{},"103":{},"139":{},"140":{},"141":{},"160":{},"226":{},"230":{},"231":{},"232":{},"242":{},"245":{},"254":{},"258":{},"272":{}},"component":{}}],["labels=\"!citu",{"_index":5660,"title":{},"name":{},"text":{"168":{}},"component":{}}],["labor",{"_index":2917,"title":{},"name":{},"text":{"59":{},"149":{},"231":{}},"component":{}}],["labor,101.203.301",{"_index":3023,"title":{},"name":{},"text":{"59":{}},"component":{}}],["laboratori",{"_index":3147,"title":{"138-6":{},"138-14":{},"140-8":{},"140-10":{},"142-4":{}},"name":{},"text":{"62":{},"68":{},"108":{},"138":{},"139":{},"140":{},"141":{},"142":{},"148":{},"149":{},"159":{},"272":{}},"component":{}}],["laboratory.edrp",{"_index":4851,"title":{},"name":{},"text":{"138":{}},"component":{}}],["laboratory.laboratory_id",{"_index":4857,"title":{},"name":{},"text":{"138":{}},"component":{}}],["laboratory.nam",{"_index":4852,"title":{},"name":{},"text":{"138":{}},"component":{}}],["laboratory.xl",{"_index":4416,"title":{},"name":{},"text":{"108":{}},"component":{}}],["laboratory_equal_edrpou_name_count",{"_index":4850,"title":{},"name":{},"text":{"138":{}},"component":{}}],["laboratory_id=$2",{"_index":6509,"title":{},"name":{},"text":{"257":{}},"component":{}}],["laboratory_start_with_edrpou_contains_nam",{"_index":4856,"title":{},"name":{},"text":{"138":{},"141":{}},"component":{}}],["laboratoryid",{"_index":4995,"title":{},"name":{},"text":{"141":{},"159":{}},"component":{}}],["laborum",{"_index":6309,"title":{},"name":{},"text":{"231":{}},"component":{}}],["labrespons",{"_index":4998,"title":{},"name":{},"text":{"141":{},"159":{}},"component":{}}],["labresponse.responsebodi",{"_index":5267,"title":{},"name":{},"text":{"159":{}},"component":{}}],["labresponse.responsebody.prop('edrpou').valu",{"_index":5001,"title":{},"name":{},"text":{"141":{}},"component":{}}],["labresponse.responsebody.prop('name').valu",{"_index":5000,"title":{},"name":{},"text":{"141":{}},"component":{}}],["labresponsebodi",{"_index":5266,"title":{},"name":{},"text":{"159":{}},"component":{}}],["lack",{"_index":2109,"title":{},"name":{},"text":{"44":{},"80":{},"195":{},"253":{},"270":{}},"component":{}}],["lake",{"_index":2881,"title":{},"name":{},"text":{"58":{}},"component":{}}],["lambda",{"_index":1903,"title":{},"name":{},"text":{"25":{}},"component":{}}],["lanch",{"_index":5178,"title":{},"name":{},"text":{"154":{}},"component":{}}],["land",{"_index":6396,"title":{},"name":{},"text":{"242":{}},"component":{}}],["languag",{"_index":2160,"title":{"49-1":{}},"name":{},"text":{"47":{},"49":{},"140":{},"159":{},"183":{},"184":{},"198":{},"204":{},"264":{}},"component":{}}],["larg",{"_index":763,"title":{"107-9":{}},"name":{},"text":{"4":{},"6":{},"14":{},"50":{},"58":{},"107":{},"108":{},"117":{},"119":{},"151":{},"152":{},"167":{},"237":{},"242":{},"264":{},"268":{}},"component":{}}],["large_data=\"tru",{"_index":765,"title":{},"name":{},"text":{"4":{}},"component":{}}],["larger",{"_index":6778,"title":{},"name":{},"text":{"271":{}},"component":{}}],["largest",{"_index":1704,"title":{},"name":{},"text":{"21":{},"50":{}},"component":{}}],["last",{"_index":718,"title":{},"name":{},"text":{"4":{},"21":{},"28":{},"30":{},"58":{},"118":{},"119":{},"120":{},"127":{},"135":{},"136":{},"140":{},"141":{},"154":{},"161":{},"217":{},"221":{},"222":{},"240":{},"244":{},"253":{}},"component":{}}],["last_nam",{"_index":4681,"title":{},"name":{},"text":{"135":{}},"component":{}}],["lastnam",{"_index":3132,"title":{},"name":{},"text":{"61":{},"161":{}},"component":{}}],["lastname\":\"do",{"_index":5417,"title":{},"name":{},"text":{"161":{}},"component":{}}],["lastname\":\"lastnam",{"_index":5217,"title":{},"name":{},"text":{"154":{}},"component":{}}],["latency_metr",{"_index":6850,"title":{},"name":{},"text":{"272":{}},"component":{}}],["later",{"_index":1190,"title":{"142-8":{}},"name":{},"text":{"6":{},"52":{},"60":{},"73":{},"104":{},"105":{},"115":{},"122":{},"125":{},"142":{},"154":{},"161":{},"174":{},"186":{},"234":{},"237":{},"242":{}},"component":{}}],["latest",{"_index":603,"title":{},"name":{},"text":{"4":{},"33":{},"35":{},"42":{},"43":{},"56":{},"57":{},"66":{},"73":{},"79":{},"151":{},"152":{},"175":{},"176":{},"177":{},"234":{},"236":{},"244":{},"254":{},"264":{},"268":{}},"component":{}}],["latest.xsd",{"_index":4790,"title":{},"name":{},"text":{"138":{},"244":{}},"component":{}}],["latin",{"_index":1450,"title":{},"name":{},"text":{"9":{},"28":{},"30":{},"33":{},"66":{},"107":{},"138":{},"141":{},"142":{},"155":{},"242":{}},"component":{}}],["latitud",{"_index":2796,"title":{},"name":{},"text":{"58":{},"230":{}},"component":{}}],["latter’",{"_index":435,"title":{},"name":{},"text":{"2":{}},"component":{}}],["laudantium",{"_index":6311,"title":{},"name":{},"text":{"231":{}},"component":{}}],["launch",{"_index":1627,"title":{"51":{},"73-28":{}},"name":{"51":{}},"text":{"17":{},"31":{},"51":{},"52":{},"58":{},"63":{},"73":{},"80":{},"104":{},"154":{},"253":{},"270":{}},"component":{}}],["law",{"_index":2112,"title":{},"name":{},"text":{"44":{},"99":{}},"component":{}}],["lay",{"_index":145,"title":{},"name":{},"text":{"1":{}},"component":{}}],["layer",{"_index":1428,"title":{"58-22":{},"142-3":{}},"name":{},"text":{"9":{},"46":{},"58":{},"142":{},"157":{},"230":{},"254":{}},"component":{}}],["layout",{"_index":1277,"title":{"255-10":{},"256-7":{}},"name":{},"text":{"6":{},"57":{},"163":{},"255":{},"256":{}},"component":{}}],["lazi",{"_index":5039,"title":{},"name":{},"text":{"141":{}},"component":{}}],["le_api",{"_index":3796,"title":{},"name":{},"text":{"73":{}},"component":{}}],["le_api=\"$(oc",{"_index":3789,"title":{},"name":{},"text":{"73":{}},"component":{}}],["le_wildcard",{"_index":3797,"title":{},"name":{},"text":{"73":{}},"component":{}}],["le_wildcard=\"$(oc",{"_index":3791,"title":{},"name":{},"text":{"73":{}},"component":{}}],["lead",{"_index":1223,"title":{},"name":{},"text":{"6":{},"9":{},"44":{},"61":{},"67":{},"108":{},"113":{},"195":{},"205":{},"242":{},"258":{},"272":{}},"component":{}}],["leaflet",{"_index":2391,"title":{},"name":{},"text":{"49":{},"204":{}},"component":{}}],["leafletj",{"_index":2777,"title":{},"name":{},"text":{"58":{}},"component":{}}],["leak",{"_index":3251,"title":{},"name":{},"text":{"67":{}},"component":{}}],["leakag",{"_index":2129,"title":{},"name":{},"text":{"45":{},"253":{}},"component":{}}],["learn",{"_index":161,"title":{},"name":{},"text":{"1":{},"29":{},"30":{},"32":{},"36":{},"37":{},"40":{},"46":{},"48":{},"59":{},"61":{},"66":{},"70":{},"72":{},"73":{},"78":{},"105":{},"137":{},"139":{},"141":{},"142":{},"145":{},"159":{},"167":{},"183":{},"184":{},"186":{},"193":{},"202":{},"203":{},"218":{},"251":{}},"component":{}}],["leav",{"_index":778,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"21":{},"25":{},"73":{},"99":{},"104":{},"128":{},"140":{},"211":{},"217":{},"218":{},"223":{},"244":{},"259":{},"260":{},"270":{}},"component":{}}],["left",{"_index":779,"title":{"166-10":{},"166-11":{}},"name":{},"text":{"4":{},"12":{},"15":{},"16":{},"17":{},"25":{},"33":{},"36":{},"52":{},"60":{},"61":{},"67":{},"115":{},"118":{},"122":{},"125":{},"127":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"160":{},"161":{},"166":{},"167":{},"175":{},"176":{},"177":{},"210":{},"213":{},"214":{},"216":{},"217":{},"218":{},"224":{},"225":{},"226":{},"227":{},"232":{},"244":{},"254":{},"260":{},"261":{}},"component":{}}],["left;\\n",{"_index":5755,"title":{},"name":{},"text":{"183":{}},"component":{}}],["leftmost",{"_index":4622,"title":{},"name":{},"text":{"128":{},"129":{},"131":{}},"component":{}}],["legaci",{"_index":2696,"title":{},"name":{},"text":{"56":{},"189":{},"254":{}},"component":{}}],["legal",{"_index":426,"title":{},"name":{},"text":{"2":{},"9":{},"30":{},"46":{},"68":{},"99":{},"115":{},"119":{},"120":{},"173":{},"234":{}},"component":{}}],["legal_entity_nam",{"_index":5577,"title":{},"name":{},"text":{"167":{}},"component":{}}],["legend",{"_index":6141,"title":{},"name":{},"text":{"209":{}},"component":{}}],["legend.adoc",{"_index":6150,"title":{},"name":{},"text":{"209":{}},"component":{}}],["legisl",{"_index":433,"title":{},"name":{},"text":{"2":{},"12":{},"67":{},"99":{},"173":{}},"component":{}}],["length",{"_index":1453,"title":{},"name":{},"text":{"9":{},"25":{},"108":{},"175":{},"226":{},"234":{}},"component":{}}],["leonidovych",{"_index":5428,"title":{},"name":{},"text":{"162":{}},"component":{}}],["less",{"_index":1208,"title":{},"name":{},"text":{"6":{},"16":{},"49":{},"72":{},"127":{},"167":{},"258":{}},"component":{}}],["let",{"_index":5540,"title":{},"name":{},"text":{"167":{}},"component":{}}],["letsencrypt.sh",{"_index":3777,"title":{},"name":{},"text":{"73":{}},"component":{}}],["letter",{"_index":1452,"title":{"131-2":{},"131-3":{}},"name":{},"text":{"9":{},"25":{},"28":{},"30":{},"33":{},"107":{},"108":{},"119":{},"131":{},"141":{},"155":{},"165":{},"242":{},"269":{}},"component":{}}],["let’",{"_index":1113,"title":{},"name":{},"text":{"6":{},"9":{},"13":{},"21":{},"40":{},"52":{},"55":{},"59":{},"73":{},"105":{},"154":{},"155":{},"158":{},"160":{},"161":{},"162":{},"165":{},"166":{},"216":{},"245":{}},"component":{}}],["level",{"_index":413,"title":{"154":{},"270":{},"48-3":{},"142-3":{},"154-16":{},"155-3":{},"155-4":{},"161-16":{},"167-8":{},"189-2":{},"190-2":{},"192-2":{},"195-6":{},"195-12":{},"201-2":{},"216-16":{},"253-8":{},"257-13":{},"268-5":{},"269-12":{},"269-16":{},"269-20":{},"269-22":{},"270-8":{},"271-5":{},"271-9":{},"271-15":{},"272-5":{},"272-12":{},"272-17":{},"272-22":{}},"name":{},"text":{"2":{},"4":{},"6":{},"16":{},"22":{},"29":{},"33":{},"44":{},"46":{},"48":{},"49":{},"51":{},"55":{},"58":{},"59":{},"66":{},"67":{},"73":{},"75":{},"76":{},"78":{},"81":{},"82":{},"83":{},"84":{},"99":{},"104":{},"105":{},"106":{},"122":{},"123":{},"127":{},"128":{},"131":{},"132":{},"138":{},"142":{},"154":{},"155":{},"161":{},"164":{},"165":{},"167":{},"171":{},"181":{},"188":{},"190":{},"192":{},"193":{},"194":{},"195":{},"197":{},"201":{},"202":{},"205":{},"209":{},"216":{},"220":{},"230":{},"242":{},"248":{},"251":{},"253":{},"254":{},"255":{},"257":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["level1",{"_index":4834,"title":{},"name":{},"text":{"138":{},"140":{}},"component":{}}],["level1::substring(code,1,2)||''00000000",{"_index":4344,"title":{},"name":{},"text":{"107":{}},"component":{}}],["level1={{data.oblast.cod",{"_index":4986,"title":{},"name":{},"text":{"140":{}},"component":{}}],["level2::substring(code,1,5)||''00000",{"_index":4345,"title":{},"name":{},"text":{"107":{}},"component":{}}],["level4",{"_index":5517,"title":{},"name":{},"text":{"166":{}},"component":{}}],["level=error",{"_index":3845,"title":{},"name":{},"text":{"73":{}},"component":{}}],["level=info",{"_index":3769,"title":{},"name":{},"text":{"73":{}},"component":{}}],["leverag",{"_index":352,"title":{},"name":{},"text":{"2":{}},"component":{}}],["lgpl",{"_index":2326,"title":{},"name":{},"text":{"49":{}},"component":{}}],["li",{"_index":2774,"title":{},"name":{},"text":{"58":{}},"component":{}}],["librari",{"_index":1154,"title":{"47":{},"49-36":{},"49-38":{},"49-42":{},"49-46":{},"49-48":{},"49-55":{},"269-21":{},"271-10":{}},"name":{"47":{}},"text":{"6":{},"9":{},"47":{},"49":{},"58":{},"75":{},"76":{},"78":{},"84":{},"158":{},"188":{},"192":{},"193":{},"200":{},"202":{},"247":{},"249":{},"250":{},"254":{},"255":{},"264":{},"266":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["licenc",{"_index":2319,"title":{},"name":{},"text":{"49":{}},"component":{}}],["licens",{"_index":2271,"title":{"52-4":{},"52-8":{},"52-9":{}},"name":{},"text":{"49":{},"52":{},"78":{},"226":{}},"component":{}}],["license.prop('licenseid').valu",{"_index":2629,"title":{},"name":{},"text":{"52":{}},"component":{}}],["license_id",{"_index":2570,"title":{},"name":{},"text":{"52":{}},"component":{}}],["license_statu",{"_index":2568,"title":{},"name":{},"text":{"52":{}},"component":{}}],["licenses.csv",{"_index":2566,"title":{},"name":{},"text":{"52":{}},"component":{}}],["licensesrespons",{"_index":2593,"title":{},"name":{},"text":{"52":{}},"component":{}}],["licensesresponse.responsebody.el",{"_index":2595,"title":{},"name":{},"text":{"52":{}},"component":{}}],["licensetable.xml",{"_index":2565,"title":{},"name":{},"text":{"52":{}},"component":{}}],["licensing_statu",{"_index":2575,"title":{},"name":{},"text":{"52":{}},"component":{}}],["licensingstatu",{"_index":2591,"title":{},"name":{},"text":{"52":{}},"component":{}}],["life",{"_index":3314,"title":{},"name":{},"text":{"67":{},"191":{},"197":{}},"component":{}}],["lifecycl",{"_index":1692,"title":{"72-1":{}},"name":{"72":{}},"text":{"21":{},"32":{},"67":{},"72":{}},"component":{}}],["lifetim",{"_index":558,"title":{},"name":{},"text":{"2":{}},"component":{}}],["light",{"_index":4268,"title":{},"name":{},"text":{"101":{},"173":{}},"component":{}}],["likelihood",{"_index":4483,"title":{},"name":{},"text":{"117":{}},"component":{}}],["limit",{"_index":531,"title":{"55":{},"272":{},"55-2":{},"55-3":{},"55-5":{},"55-6":{},"55-7":{},"55-8":{},"73-7":{},"99-12":{},"99-13":{},"167-15":{},"268-10":{},"270-13":{},"272-17":{}},"name":{"55":{},"154":{}},"text":{"2":{},"6":{},"14":{},"25":{},"30":{},"34":{},"44":{},"49":{},"55":{},"59":{},"65":{},"67":{},"73":{},"75":{},"80":{},"84":{},"99":{},"103":{},"105":{},"108":{},"111":{},"141":{},"142":{},"144":{},"163":{},"167":{},"173":{},"184":{},"197":{},"199":{},"205":{},"227":{},"244":{},"253":{},"255":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["limit=\"10",{"_index":5570,"title":{},"name":{},"text":{"167":{}},"component":{}}],["limit=\"al",{"_index":5569,"title":{},"name":{},"text":{"167":{}},"component":{}}],["limit=10",{"_index":5581,"title":{},"name":{},"text":{"167":{}},"component":{}}],["limit=20",{"_index":5583,"title":{},"name":{},"text":{"167":{}},"component":{}}],["limit_bi",{"_index":2657,"title":{},"name":{},"text":{"55":{},"272":{}},"component":{}}],["limitbyhead",{"_index":2686,"title":{},"name":{},"text":{"55":{}},"component":{}}],["limitbyip",{"_index":2687,"title":{},"name":{},"text":{"55":{}},"component":{}}],["line",{"_index":538,"title":{"168-4":{},"262-11":{},"262-12":{}},"name":{},"text":{"2":{},"4":{},"6":{},"22":{},"47":{},"49":{},"58":{},"60":{},"63":{},"66":{},"73":{},"108":{},"127":{},"139":{},"141":{},"142":{},"168":{},"183":{},"244":{},"262":{},"271":{}},"component":{}}],["link",{"_index":379,"title":{"32":{},"105":{},"57-4":{},"105-6":{},"106-1":{},"210-2":{},"210-3":{}},"name":{"32":{},"210":{}},"text":{"2":{},"4":{},"6":{},"8":{},"12":{},"13":{},"15":{},"17":{},"18":{},"28":{},"30":{},"31":{},"32":{},"33":{},"35":{},"37":{},"42":{},"43":{},"51":{},"52":{},"56":{},"57":{},"58":{},"60":{},"61":{},"66":{},"68":{},"69":{},"70":{},"73":{},"84":{},"103":{},"105":{},"108":{},"112":{},"115":{},"118":{},"119":{},"122":{},"124":{},"125":{},"127":{},"128":{},"129":{},"131":{},"138":{},"139":{},"140":{},"142":{},"145":{},"148":{},"149":{},"151":{},"152":{},"154":{},"157":{},"159":{},"160":{},"167":{},"194":{},"195":{},"200":{},"207":{},"210":{},"211":{},"212":{},"213":{},"216":{},"218":{},"227":{},"244":{},"254":{},"255":{},"260":{},"262":{},"264":{},"266":{},"268":{},"269":{},"270":{},"272":{}},"component":{}}],["linux",{"_index":610,"title":{},"name":{},"text":{"4":{},"66":{},"73":{},"168":{}},"component":{}}],["liquibas",{"_index":412,"title":{"84":{},"167":{},"168":{},"169":{},"82-2":{},"83-2":{},"168-2":{},"168-4":{},"168-5":{},"257-7":{},"271-10":{}},"name":{"167":{},"168":{},"169":{}},"text":{"2":{},"47":{},"49":{},"52":{},"58":{},"82":{},"83":{},"84":{},"107":{},"138":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"202":{},"204":{},"242":{},"244":{},"257":{},"271":{},"272":{}},"component":{}}],["liquibase.jar",{"_index":5649,"title":{},"name":{},"text":{"168":{}},"component":{}}],["liquibase.xml",{"_index":4094,"title":{},"name":{},"text":{"83":{},"138":{},"142":{},"244":{}},"component":{}}],["liquibase/xml",{"_index":2177,"title":{},"name":{},"text":{"47":{}},"component":{}}],["liquibase’",{"_index":5515,"title":{},"name":{},"text":{"166":{},"167":{}},"component":{}}],["liquid",{"_index":4674,"title":{},"name":{},"text":{"134":{}},"component":{}}],["list",{"_index":650,"title":{"167":{},"169":{},"84-6":{},"151-2":{},"151-3":{},"152-3":{},"154-8":{},"154-12":{},"177-3":{},"201-3":{}},"name":{"225":{}},"text":{"4":{},"6":{},"8":{},"12":{},"13":{},"15":{},"17":{},"21":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"43":{},"46":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"63":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"81":{},"84":{},"100":{},"104":{},"105":{},"107":{},"108":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"127":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"148":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"166":{},"167":{},"169":{},"170":{},"171":{},"173":{},"176":{},"177":{},"179":{},"182":{},"183":{},"186":{},"188":{},"189":{},"193":{},"195":{},"197":{},"198":{},"201":{},"202":{},"203":{},"204":{},"212":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"231":{},"234":{},"237":{},"239":{},"242":{},"244":{},"246":{},"249":{},"250":{},"251":{},"252":{},"254":{},"255":{},"256":{},"257":{},"262":{},"267":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["list(ani",{"_index":3708,"title":{},"name":{},"text":{"73":{}},"component":{}}],["list(str",{"_index":3709,"title":{},"name":{},"text":{"73":{}},"component":{}}],["listen",{"_index":841,"title":{},"name":{},"text":{"4":{}},"component":{}}],["listen_address",{"_index":6550,"title":{},"name":{},"text":{"258":{}},"component":{}}],["listfileobj",{"_index":2544,"title":{},"name":{},"text":{"51":{}},"component":{}}],["live",{"_index":521,"title":{},"name":{},"text":{"2":{},"122":{},"125":{},"162":{},"205":{},"257":{}},"component":{}}],["load",{"_index":1369,"title":{"103":{},"107":{},"109":{},"227":{},"271":{},"59-6":{},"107-6":{},"107-7":{},"107-9":{},"108-14":{},"138-18":{},"227-1":{},"227-2":{},"271-14":{},"272-14":{}},"name":{"103":{},"107":{},"108":{},"271":{}},"text":{"6":{},"12":{},"29":{},"49":{},"50":{},"52":{},"54":{},"59":{},"66":{},"73":{},"75":{},"76":{},"81":{},"86":{},"103":{},"105":{},"107":{},"108":{},"119":{},"125":{},"138":{},"141":{},"167":{},"169":{},"188":{},"197":{},"199":{},"225":{},"227":{},"247":{},"258":{},"271":{},"272":{}},"component":{}}],["load.csv.outbound",{"_index":6817,"title":{},"name":{},"text":{"271":{}},"component":{}}],["load/.csv",{"_index":4872,"title":{},"name":{},"text":{"138":{}},"component":{}}],["load_balance_mod",{"_index":6582,"title":{},"name":{},"text":{"258":{}},"component":{}}],["local",{"_index":889,"title":{"66-5":{},"138-12":{},"140-24":{},"168-4":{}},"name":{},"text":{"4":{},"6":{},"47":{},"55":{},"57":{},"61":{},"63":{},"66":{},"73":{},"81":{},"84":{},"87":{},"99":{},"104":{},"105":{},"119":{},"120":{},"129":{},"131":{},"138":{},"139":{},"140":{},"141":{},"154":{},"159":{},"161":{},"168":{},"183":{},"186":{},"191":{},"194":{},"205":{},"212":{},"218":{},"221":{},"222":{},"258":{},"269":{}},"component":{}}],["local_jwk",{"_index":5961,"title":{},"name":{},"text":{"196":{}},"component":{}}],["locat",{"_index":804,"title":{},"name":{},"text":{"4":{},"13":{},"15":{},"16":{},"21":{},"28":{},"30":{},"33":{},"56":{},"58":{},"60":{},"63":{},"73":{},"100":{},"118":{},"119":{},"120":{},"129":{},"138":{},"139":{},"145":{},"195":{},"230":{},"237":{}},"component":{}}],["lock",{"_index":3483,"title":{},"name":{},"text":{"73":{},"258":{}},"component":{}}],["lockid",{"_index":3506,"title":{},"name":{},"text":{"73":{}},"component":{}}],["locking.adoc",{"_index":6653,"title":{},"name":{},"text":{"268":{}},"component":{}}],["log",{"_index":701,"title":{"127":{},"32-22":{},"49-60":{},"99-10":{},"117-3":{},"119-8":{},"183-7":{},"186-7":{},"205-15":{},"270-9":{}},"name":{},"text":{"4":{},"6":{},"9":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"28":{},"32":{},"43":{},"44":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"58":{},"63":{},"65":{},"67":{},"68":{},"69":{},"70":{},"73":{},"81":{},"83":{},"86":{},"99":{},"100":{},"105":{},"112":{},"115":{},"117":{},"118":{},"119":{},"120":{},"127":{},"128":{},"129":{},"131":{},"142":{},"144":{},"145":{},"148":{},"149":{},"151":{},"152":{},"176":{},"183":{},"186":{},"191":{},"193":{},"194":{},"195":{},"196":{},"199":{},"202":{},"205":{},"208":{},"250":{},"253":{},"255":{},"258":{},"270":{},"272":{}},"component":{}}],["log4shel",{"_index":3261,"title":{},"name":{},"text":{"67":{}},"component":{}}],["log_level",{"_index":4627,"title":{},"name":{},"text":{"128":{}},"component":{}}],["loge",{"_index":3321,"title":{},"name":{},"text":{"67":{}},"component":{}}],["logger",{"_index":2168,"title":{},"name":{},"text":{"47":{}},"component":{}}],["logger2",{"_index":2169,"title":{},"name":{},"text":{"47":{}},"component":{}}],["logging_collector",{"_index":6585,"title":{},"name":{},"text":{"258":{}},"component":{}}],["logic",{"_index":260,"title":{"48":{},"164":{},"257":{},"9-2":{},"52-7":{},"164-4":{},"202-3":{}},"name":{"48":{},"164":{},"257":{}},"text":{"2":{},"6":{},"9":{},"15":{},"16":{},"21":{},"30":{},"44":{},"46":{},"48":{},"52":{},"54":{},"57":{},"59":{},"66":{},"84":{},"105":{},"120":{},"124":{},"128":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"162":{},"164":{},"175":{},"181":{},"195":{},"202":{},"213":{},"217":{},"218":{},"226":{},"237":{},"254":{},"255":{},"256":{},"257":{},"258":{},"260":{},"261":{},"269":{},"270":{}},"component":{}}],["logicoper",{"_index":5503,"title":{},"name":{},"text":{"166":{},"167":{}},"component":{}}],["logic—​for",{"_index":6260,"title":{},"name":{},"text":{"224":{},"225":{}},"component":{}}],["login",{"_index":731,"title":{},"name":{},"text":{"4":{},"9":{},"15":{},"17":{},"18":{},"60":{},"63":{},"67":{},"73":{},"115":{},"117":{},"118":{},"120":{}},"component":{}}],["login.instance.com",{"_index":3901,"title":{},"name":{},"text":{"75":{},"255":{}},"component":{}}],["long",{"_index":1541,"title":{},"name":{},"text":{"13":{},"25":{},"33":{},"48":{},"52":{},"67":{},"99":{},"122":{},"140":{},"141":{},"205":{},"210":{},"269":{}},"component":{}}],["long/cad",{"_index":6672,"title":{},"name":{},"text":{"269":{}},"component":{}}],["longer",{"_index":1623,"title":{},"name":{},"text":{"16":{},"163":{},"271":{}},"component":{}}],["longest",{"_index":6871,"title":{},"name":{},"text":{"272":{}},"component":{}}],["longitud",{"_index":2797,"title":{},"name":{},"text":{"58":{},"230":{}},"component":{}}],["look",{"_index":702,"title":{},"name":{},"text":{"4":{},"21":{},"25":{},"52":{},"55":{},"58":{},"73":{},"81":{},"105":{},"108":{},"115":{},"122":{},"129":{},"131":{},"138":{},"142":{},"154":{},"155":{},"161":{},"167":{},"188":{},"193":{},"216":{},"224":{},"225":{},"247":{},"251":{}},"component":{}}],["loop",{"_index":1126,"title":{},"name":{},"text":{"6":{},"23":{}},"component":{}}],["loos",{"_index":6070,"title":{},"name":{},"text":{"204":{}},"component":{}}],["lose",{"_index":2127,"title":{},"name":{},"text":{"45":{}},"component":{}}],["loss",{"_index":1404,"title":{},"name":{},"text":{"8":{},"35":{},"45":{},"128":{},"238":{},"253":{}},"component":{}}],["lot",{"_index":6484,"title":{},"name":{},"text":{"255":{},"268":{}},"component":{}}],["low",{"_index":505,"title":{"207-1":{},"269-12":{},"269-16":{},"269-20":{},"271-9":{},"272-12":{}},"name":{},"text":{"2":{},"44":{},"45":{},"47":{},"127":{},"183":{},"186":{},"202":{},"204":{},"207":{},"269":{},"271":{},"272":{}},"component":{}}],["lowcod",{"_index":2142,"title":{},"name":{},"text":{"46":{},"105":{},"204":{},"231":{}},"component":{}}],["lower",{"_index":1918,"title":{},"name":{},"text":{"28":{},"30":{},"34":{},"131":{},"155":{}},"component":{}}],["lowercas",{"_index":1446,"title":{},"name":{},"text":{"9":{},"30":{},"33":{},"118":{},"131":{}},"component":{}}],["ls",{"_index":814,"title":{},"name":{},"text":{"4":{}},"component":{}}],["lsb",{"_index":3640,"title":{},"name":{},"text":{"73":{}},"component":{}}],["lsb_releas",{"_index":3654,"title":{},"name":{},"text":{"73":{}},"component":{}}],["lt",{"_index":5559,"title":{},"name":{},"text":{"167":{},"269":{}},"component":{}}],["lt/cade",{"_index":6671,"title":{},"name":{},"text":{"269":{}},"component":{}}],["lua",{"_index":6029,"title":{},"name":{},"text":{"200":{}},"component":{}}],["lyceum",{"_index":4712,"title":{},"name":{},"text":{"135":{}},"component":{}}],["m",{"_index":927,"title":{},"name":{},"text":{"4":{},"57":{},"73":{},"129":{}},"component":{}}],["m4.larg",{"_index":3988,"title":{},"name":{},"text":{"80":{}},"component":{}}],["machin",{"_index":1811,"title":{"23-3":{},"23-4":{},"73-18":{},"73-20":{},"73-21":{},"73-43":{}},"name":{},"text":{"23":{},"34":{},"39":{},"50":{},"57":{},"63":{},"66":{},"73":{},"80":{},"81":{},"105":{},"129":{},"139":{},"179":{}},"component":{}}],["machine.openshift.io/clust",{"_index":3971,"title":{},"name":{},"text":{"80":{}},"component":{}}],["machine.openshift.io/v1beta1",{"_index":3970,"title":{},"name":{},"text":{"80":{}},"component":{}}],["machineautoscal",{"_index":3952,"title":{},"name":{},"text":{"80":{}},"component":{}}],["machinenetwork",{"_index":3752,"title":{},"name":{},"text":{"73":{}},"component":{}}],["machineset",{"_index":1810,"title":{"23-4":{}},"name":{},"text":{"22":{},"23":{},"30":{},"80":{}},"component":{}}],["machinset",{"_index":4002,"title":{},"name":{},"text":{"80":{}},"component":{}}],["maco",{"_index":2074,"title":{},"name":{},"text":{"40":{},"66":{}},"component":{}}],["made",{"_index":316,"title":{"161-13":{}},"name":{},"text":{"2":{},"42":{},"43":{},"52":{},"57":{},"60":{},"67":{},"81":{},"100":{},"104":{},"105":{},"108":{},"122":{},"124":{},"138":{},"140":{},"154":{},"159":{},"161":{},"168":{},"177":{},"190":{},"191":{},"192":{},"210":{},"213":{},"234":{},"236":{},"244":{},"245":{},"256":{},"262":{},"265":{},"266":{},"268":{},"270":{},"272":{}},"component":{}}],["magnam",{"_index":6316,"title":{},"name":{},"text":{"231":{}},"component":{}}],["magovaiev",{"_index":4740,"title":{},"name":{},"text":{"135":{}},"component":{}}],["mail",{"_index":929,"title":{"182":{},"30-4":{},"173-1":{},"182-2":{},"182-3":{}},"name":{"183":{}},"text":{"4":{},"10":{},"25":{},"30":{},"31":{},"49":{},"65":{},"133":{},"173":{},"182":{},"183":{},"185":{},"188":{},"223":{},"248":{},"269":{}},"component":{}}],["mail.ru",{"_index":5675,"title":{},"name":{},"text":{"173":{}},"component":{}}],["mailbox",{"_index":1499,"title":{},"name":{},"text":{"10":{}},"component":{}}],["mailto",{"_index":1502,"title":{},"name":{},"text":{"10":{}},"component":{}}],["mailu",{"_index":1861,"title":{},"name":{},"text":{"25":{},"49":{}},"component":{}}],["main",{"_index":159,"title":{"44-2":{},"60-3":{},"73-16":{},"100-9":{},"142-13":{},"216-15":{},"217-5":{},"217-11":{},"226-2":{}},"name":{},"text":{"1":{},"2":{},"6":{},"29":{},"31":{},"32":{},"34":{},"37":{},"44":{},"46":{},"49":{},"52":{},"58":{},"59":{},"60":{},"66":{},"67":{},"70":{},"73":{},"81":{},"82":{},"83":{},"84":{},"100":{},"104":{},"105":{},"107":{},"123":{},"124":{},"125":{},"129":{},"131":{},"138":{},"140":{},"142":{},"154":{},"160":{},"161":{},"164":{},"166":{},"167":{},"176":{},"183":{},"186":{},"188":{},"193":{},"196":{},"197":{},"205":{},"213":{},"216":{},"217":{},"226":{},"248":{},"250":{},"252":{},"264":{},"270":{},"271":{},"272":{}},"component":{}}],["main.apps.envone.dev.registry.eua.gov.ua",{"_index":1475,"title":{},"name":{},"text":{"9":{},"32":{}},"component":{}}],["main.apps.envone.dev.registry.eua.gov.ua/api/gateway/data",{"_index":5717,"title":{},"name":{},"text":{"179":{}},"component":{}}],["main.apps.envone.dev.registry.eua.gov.ua/offic",{"_index":1478,"title":{},"name":{},"text":{"9":{}},"component":{}}],["main.apps.test",{"_index":5713,"title":{},"name":{},"text":{"179":{}},"component":{}}],["main.tf",{"_index":3484,"title":{},"name":{},"text":{"73":{}},"component":{}}],["maintain",{"_index":92,"title":{"191-10":{}},"name":{},"text":{"1":{},"2":{},"28":{},"44":{},"46":{},"67":{},"99":{},"108":{},"112":{},"118":{},"191":{},"205":{},"207":{},"257":{},"270":{},"272":{}},"component":{}}],["mainten",{"_index":32,"title":{"205-5":{}},"name":{},"text":{"1":{},"44":{},"46":{},"66":{},"118":{},"168":{},"191":{},"266":{}},"component":{}}],["major",{"_index":1298,"title":{},"name":{},"text":{"6":{},"123":{}},"component":{}}],["make",{"_index":243,"title":{"162-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"13":{},"15":{},"16":{},"21":{},"28":{},"29":{},"33":{},"34":{},"36":{},"40":{},"42":{},"43":{},"44":{},"58":{},"59":{},"66":{},"67":{},"73":{},"75":{},"99":{},"101":{},"103":{},"105":{},"113":{},"115":{},"118":{},"119":{},"125":{},"138":{},"141":{},"153":{},"154":{},"155":{},"162":{},"167":{},"175":{},"176":{},"177":{},"179":{},"183":{},"186":{},"191":{},"195":{},"198":{},"205":{},"212":{},"213":{},"214":{},"217":{},"236":{},"237":{},"244":{},"245":{},"253":{},"258":{},"262":{},"267":{},"268":{},"270":{},"272":{}},"component":{}}],["makeobject",{"_index":4129,"title":{},"name":{},"text":{"84":{}},"component":{}}],["male",{"_index":5609,"title":{},"name":{},"text":{"167":{}},"component":{}}],["malici",{"_index":2419,"title":{},"name":{},"text":{"49":{},"67":{},"197":{}},"component":{}}],["malwar",{"_index":2418,"title":{},"name":{},"text":{"49":{}},"component":{}}],["manag",{"_index":57,"title":{"16":{},"34":{},"37":{},"62":{},"87":{},"88":{},"96":{},"112":{},"123":{},"168":{},"174":{},"177":{},"178":{},"194":{},"195":{},"197":{},"199":{},"208":{},"238":{},"253":{},"255":{},"257":{},"6-10":{},"6-13":{},"6-19":{},"21-2":{},"21-3":{},"25-2":{},"28-3":{},"32-7":{},"32-11":{},"32-17":{},"32-21":{},"32-24":{},"48-8":{},"49-10":{},"49-12":{},"49-17":{},"49-20":{},"49-25":{},"49-34":{},"49-37":{},"49-39":{},"49-49":{},"60-4":{},"67-16":{},"119-8":{},"167-2":{},"167-9":{},"167-22":{},"167-31":{},"167-35":{},"167-42":{},"195-11":{},"195-25":{},"195-26":{},"205-14":{},"253-7":{},"267-13":{},"271-12":{},"271-13":{},"272-19":{}},"name":{"60":{},"96":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"14":{},"15":{},"16":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"37":{},"42":{},"43":{},"44":{},"48":{},"49":{},"50":{},"52":{},"56":{},"57":{},"58":{},"59":{},"60":{},"63":{},"65":{},"66":{},"67":{},"73":{},"75":{},"78":{},"81":{},"86":{},"87":{},"88":{},"99":{},"101":{},"111":{},"112":{},"117":{},"118":{},"119":{},"122":{},"123":{},"124":{},"125":{},"127":{},"138":{},"140":{},"142":{},"148":{},"149":{},"153":{},"154":{},"160":{},"164":{},"167":{},"168":{},"170":{},"173":{},"177":{},"178":{},"179":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"204":{},"205":{},"206":{},"208":{},"233":{},"235":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"246":{},"250":{},"251":{},"253":{},"254":{},"255":{},"257":{},"258":{},"262":{},"263":{},"265":{},"267":{},"268":{},"271":{},"272":{}},"component":{}}],["managedresourc",{"_index":1840,"title":{},"name":{},"text":{"23":{}},"component":{}}],["management/control",{"_index":1955,"title":{},"name":{},"text":{"29":{},"36":{},"105":{},"227":{}},"component":{}}],["management/overview.adoc",{"_index":2148,"title":{},"name":{},"text":{"46":{}},"component":{}}],["management/platform",{"_index":1913,"title":{},"name":{},"text":{"28":{},"46":{},"118":{}},"component":{}}],["management/registri",{"_index":6144,"title":{},"name":{},"text":{"209":{}},"component":{}}],["management/rest",{"_index":6650,"title":{},"name":{},"text":{"268":{}},"component":{}}],["management/services/registri",{"_index":6649,"title":{},"name":{},"text":{"268":{}},"component":{}}],["management/system",{"_index":783,"title":{},"name":{},"text":{"4":{},"30":{},"31":{},"37":{},"73":{},"78":{}},"component":{}}],["management/us",{"_index":5708,"title":{},"name":{},"text":{"179":{}},"component":{}}],["management/сontrol",{"_index":1986,"title":{},"name":{},"text":{"31":{},"37":{}},"component":{}}],["management:hashicorp",{"_index":4282,"title":{},"name":{},"text":{"104":{},"122":{},"195":{},"255":{}},"component":{}}],["managemt",{"_index":3349,"title":{},"name":{},"text":{"67":{}},"component":{}}],["managers/architect",{"_index":1246,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mandatori",{"_index":1615,"title":{"139-20":{}},"name":{},"text":{"16":{},"30":{},"45":{},"48":{},"56":{},"59":{},"61":{},"66":{},"78":{},"108":{},"119":{},"120":{},"138":{},"139":{},"141":{},"167":{},"197":{},"205":{},"234":{},"237":{},"256":{},"257":{}},"component":{}}],["mani",{"_index":49,"title":{"167-28":{}},"name":{},"text":{"1":{},"2":{},"21":{},"32":{},"44":{},"66":{},"84":{},"99":{},"108":{},"113":{},"127":{},"164":{},"167":{},"191":{},"216":{},"226":{},"229":{}},"component":{}}],["manifest",{"_index":1755,"title":{"258-2":{}},"name":{},"text":{"21":{},"258":{}},"component":{}}],["manner",{"_index":4012,"title":{},"name":{},"text":{"81":{}},"component":{}}],["manual",{"_index":1290,"title":{"58-8":{},"127-1":{}},"name":{"120":{}},"text":{"6":{},"21":{},"30":{},"40":{},"41":{},"56":{},"57":{},"58":{},"59":{},"67":{},"104":{},"118":{},"123":{},"127":{},"128":{},"154":{},"164":{},"177":{},"184":{},"186":{},"195":{},"202":{},"212":{},"216":{},"218":{},"227":{},"230":{},"237":{},"253":{},"255":{},"262":{},"268":{},"269":{}},"component":{}}],["manual.adoc",{"_index":2628,"title":{},"name":{},"text":{"52":{},"59":{}},"component":{}}],["manually—​for",{"_index":5348,"title":{},"name":{},"text":{"160":{}},"component":{}}],["many2mani",{"_index":5615,"title":{},"name":{},"text":{"167":{}},"component":{}}],["map",{"_index":838,"title":{"230":{},"46-8":{},"58-11":{},"58-17":{},"108-8":{},"108-9":{},"108-10":{}},"name":{"230":{}},"text":{"4":{},"28":{},"46":{},"49":{},"52":{},"58":{},"73":{},"75":{},"76":{},"104":{},"108":{},"120":{},"124":{},"140":{},"154":{},"159":{},"161":{},"163":{},"212":{},"221":{},"222":{},"230":{},"270":{}},"component":{}}],["map').formdata",{"_index":2823,"title":{},"name":{},"text":{"58":{}},"component":{}}],["map(ani",{"_index":3523,"title":{},"name":{},"text":{"73":{}},"component":{}}],["mapper",{"_index":2188,"title":{},"name":{},"text":{"47":{},"55":{}},"component":{}}],["maptoobj(index",{"_index":6742,"title":{},"name":{},"text":{"269":{}},"component":{}}],["map’",{"_index":6297,"title":{},"name":{},"text":{"230":{}},"component":{}}],["margin",{"_index":3123,"title":{},"name":{},"text":{"61":{},"183":{}},"component":{}}],["maritim",{"_index":2963,"title":{},"name":{},"text":{"59":{}},"component":{}}],["mark",{"_index":1530,"title":{},"name":{},"text":{"12":{},"30":{},"51":{},"52":{},"57":{},"60":{},"63":{},"108":{},"119":{},"120":{},"129":{},"140":{},"145":{},"268":{},"272":{}},"component":{}}],["marker",{"_index":6298,"title":{},"name":{},"text":{"230":{}},"component":{}}],["markup",{"_index":3107,"title":{},"name":{},"text":{"61":{},"244":{}},"component":{}}],["mask",{"_index":836,"title":{},"name":{},"text":{"4":{},"6":{},"29":{},"165":{}},"component":{}}],["master",{"_index":310,"title":{"19":{},"39":{},"176":{},"268":{},"19-4":{},"177-2":{},"177-5":{}},"name":{"39":{},"176":{},"268":{}},"text":{"2":{},"4":{},"6":{},"15":{},"19":{},"20":{},"28":{},"29":{},"30":{},"31":{},"33":{},"38":{},"39":{},"42":{},"43":{},"45":{},"50":{},"52":{},"56":{},"57":{},"58":{},"62":{},"66":{},"73":{},"75":{},"81":{},"101":{},"103":{},"104":{},"105":{},"112":{},"115":{},"117":{},"122":{},"128":{},"129":{},"131":{},"132":{},"137":{},"138":{},"139":{},"141":{},"142":{},"167":{},"168":{},"173":{},"175":{},"176":{},"177":{},"178":{},"204":{},"223":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"246":{},"258":{},"262":{},"265":{},"267":{},"268":{},"270":{}},"component":{}}],["master.*#\\1",{"_index":3866,"title":{},"name":{},"text":{"73":{}},"component":{}}],["master_ip_repair",{"_index":1645,"title":{},"name":{"19":{}},"text":{},"component":{}}],["match",{"_index":626,"title":{},"name":{},"text":{"4":{},"9":{},"12":{},"19":{},"59":{},"73":{},"75":{},"78":{},"103":{},"107":{},"111":{},"119":{},"122":{},"127":{},"131":{},"138":{},"140":{},"154":{},"158":{},"165":{},"167":{},"168":{},"173":{},"183":{},"186":{},"188":{},"196":{},"221":{},"222":{},"227":{},"239":{},"247":{},"254":{}},"component":{}}],["matchlabel",{"_index":3973,"title":{},"name":{},"text":{"80":{},"196":{},"258":{},"272":{}},"component":{}}],["materi",{"_index":2304,"title":{"115-7":{},"123-4":{}},"name":{},"text":{"49":{},"59":{},"66":{},"115":{},"123":{},"204":{}},"component":{}}],["mathemat",{"_index":4428,"title":{},"name":{},"text":{"108":{}},"component":{}}],["matter",{"_index":1900,"title":{},"name":{},"text":{"25":{}},"component":{}}],["matur",{"_index":3224,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["max",{"_index":3959,"title":{},"name":{},"text":{"80":{},"105":{},"167":{},"230":{}},"component":{}}],["max_pool",{"_index":6575,"title":{},"name":{},"text":{"258":{}},"component":{}}],["maxim",{"_index":1781,"title":{},"name":{},"text":{"21":{}},"component":{}}],["maximum",{"_index":1815,"title":{},"name":{},"text":{"23":{},"33":{},"34":{},"50":{},"56":{},"80":{},"103":{},"105":{},"119":{},"135":{},"140":{},"167":{},"205":{},"226":{},"227":{},"230":{},"271":{}},"component":{}}],["maxlength",{"_index":6771,"title":{},"name":{},"text":{"270":{}},"component":{}}],["maxnodestot",{"_index":3957,"title":{},"name":{},"text":{"80":{}},"component":{}}],["maxreplica",{"_index":3930,"title":{},"name":{},"text":{"80":{},"254":{}},"component":{}}],["mb",{"_index":4278,"title":{},"name":{},"text":{"103":{},"105":{},"119":{},"227":{}},"component":{}}],["md5",{"_index":6543,"title":{},"name":{},"text":{"258":{}},"component":{}}],["md5sum",{"_index":4091,"title":{},"name":{},"text":{"83":{},"168":{}},"component":{}}],["mdc",{"_index":4518,"title":{},"name":{},"text":{"119":{}},"component":{}}],["mdtu",{"_index":3516,"title":{},"name":{},"text":{"73":{},"167":{},"244":{}},"component":{}}],["mdtuddm",{"_index":1679,"title":{},"name":{},"text":{"19":{},"162":{}},"component":{}}],["mdtuddm1",{"_index":3518,"title":{},"name":{},"text":{"73":{}},"component":{}}],["mean",{"_index":417,"title":{},"name":{},"text":{"2":{},"12":{},"15":{},"16":{},"25":{},"29":{},"42":{},"43":{},"51":{},"52":{},"55":{},"84":{},"99":{},"100":{},"119":{},"122":{},"125":{},"145":{},"151":{},"152":{},"154":{},"161":{},"165":{},"167":{},"168":{},"188":{},"189":{},"191":{},"195":{},"197":{},"216":{},"217":{},"230":{},"233":{},"237":{},"248":{},"262":{},"264":{},"265":{}},"component":{}}],["meaning",{"_index":6072,"title":{},"name":{},"text":{"205":{}},"component":{}}],["meaningless",{"_index":1171,"title":{},"name":{},"text":{"6":{}},"component":{}}],["meant",{"_index":2904,"title":{},"name":{},"text":{"59":{},"142":{},"157":{}},"component":{}}],["measur",{"_index":375,"title":{"99-4":{}},"name":{},"text":{"2":{},"6":{},"67":{},"99":{}},"component":{}}],["mechan",{"_index":524,"title":{"193":{},"55-6":{},"253-15":{},"255-20":{}},"name":{},"text":{"2":{},"9":{},"14":{},"52":{},"55":{},"67":{},"81":{},"84":{},"99":{},"113":{},"143":{},"150":{},"151":{},"152":{},"159":{},"184":{},"193":{},"195":{},"196":{},"197":{},"204":{},"205":{},"240":{},"253":{},"255":{},"270":{},"271":{}},"component":{}}],["media",{"_index":1473,"title":{},"name":{},"text":{"9":{},"30":{}},"component":{}}],["medium",{"_index":1481,"title":{},"name":{},"text":{"9":{},"195":{},"230":{},"255":{}},"component":{}}],["meet",{"_index":1178,"title":{"195-30":{}},"name":{},"text":{"6":{},"45":{},"50":{},"59":{},"67":{},"80":{},"99":{},"103":{},"119":{},"167":{},"195":{},"197":{},"205":{},"270":{}},"component":{}}],["megabyt",{"_index":6775,"title":{},"name":{},"text":{"271":{}},"component":{}}],["member",{"_index":167,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"19":{},"195":{}},"component":{}}],["membership",{"_index":3081,"title":{},"name":{},"text":{"60":{},"80":{},"118":{}},"component":{}}],["memori",{"_index":2053,"title":{},"name":{},"text":{"34":{},"48":{},"49":{},"80":{},"81":{},"200":{},"272":{}},"component":{}}],["mention",{"_index":909,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"67":{},"99":{},"131":{},"158":{},"160":{}},"component":{}}],["menu",{"_index":734,"title":{"100-9":{}},"name":{},"text":{"4":{},"22":{},"23":{},"25":{},"52":{},"60":{},"63":{},"68":{},"69":{},"70":{},"73":{},"100":{},"103":{},"119":{},"128":{},"129":{},"131":{},"139":{},"140":{},"141":{},"154":{},"158":{},"159":{},"160":{},"161":{},"175":{},"176":{},"177":{},"210":{},"213":{},"214":{},"216":{},"217":{},"226":{},"232":{},"237":{},"254":{},"256":{}},"component":{}}],["merg",{"_index":322,"title":{"175":{}},"name":{},"text":{"2":{},"4":{},"6":{},"28":{},"33":{},"36":{},"42":{},"43":{},"57":{},"66":{},"108":{},"115":{},"117":{},"118":{},"129":{},"131":{},"175":{},"176":{},"177":{},"178":{},"193":{},"195":{},"234":{},"236":{},"237":{},"242":{},"244":{},"251":{},"268":{}},"component":{}}],["merge(var.tag",{"_index":3496,"title":{},"name":{},"text":{"73":{}},"component":{}}],["mesh",{"_index":2007,"title":{"198":{},"32-24":{},"49-25":{}},"name":{"198":{}},"text":{"32":{},"43":{},"49":{},"86":{},"197":{},"198":{},"199":{},"201":{}},"component":{}}],["messag",{"_index":703,"title":{"145":{},"146":{},"184":{},"212":{},"49-28":{},"125-6":{},"154-9":{},"154-11":{},"160-3":{},"183-2":{},"212-2":{},"212-3":{},"212-5":{},"218-3":{},"271-11":{},"271-14":{}},"name":{"212":{}},"text":{"4":{},"6":{},"8":{},"10":{},"13":{},"14":{},"30":{},"40":{},"47":{},"49":{},"57":{},"60":{},"62":{},"65":{},"78":{},"80":{},"99":{},"113":{},"119":{},"125":{},"127":{},"129":{},"131":{},"132":{},"133":{},"135":{},"140":{},"144":{},"145":{},"146":{},"148":{},"154":{},"160":{},"182":{},"183":{},"184":{},"185":{},"186":{},"202":{},"205":{},"206":{},"208":{},"211":{},"212":{},"214":{},"218":{},"223":{},"226":{},"227":{},"234":{},"244":{},"245":{},"260":{},"262":{},"270":{},"271":{},"272":{}},"component":{}}],["message.getdetail",{"_index":6827,"title":{},"name":{},"text":{"271":{}},"component":{}}],["message.getrequestcontext",{"_index":6825,"title":{},"name":{},"text":{"271":{}},"component":{}}],["message.getstatu",{"_index":6829,"title":{},"name":{},"text":{"271":{}},"component":{}}],["message.geypayload",{"_index":6823,"title":{},"name":{},"text":{"271":{}},"component":{}}],["message_payload",{"_index":6617,"title":{},"name":{},"text":{"262":{}},"component":{}}],["message_payload('two').data['us",{"_index":5199,"title":{},"name":{},"text":{"154":{}},"component":{}}],["messagehead",{"_index":6821,"title":{},"name":{},"text":{"271":{}},"component":{}}],["messageintermediatecatchev",{"_index":6202,"title":{},"name":{},"text":{"214":{}},"component":{}}],["messagepayload",{"_index":5195,"title":{},"name":{},"text":{"154":{}},"component":{}}],["messages/notif",{"_index":1533,"title":{},"name":{},"text":{"13":{}},"component":{}}],["met",{"_index":605,"title":{},"name":{},"text":{"4":{},"81":{},"99":{},"218":{}},"component":{}}],["meta",{"_index":3940,"title":{},"name":{},"text":{"80":{},"203":{}},"component":{}}],["metadata",{"_index":788,"title":{"177":{}},"name":{},"text":{"4":{},"43":{},"55":{},"58":{},"67":{},"73":{},"80":{},"84":{},"105":{},"138":{},"167":{},"178":{},"183":{},"184":{},"186":{},"188":{},"193":{},"195":{},"196":{},"205":{},"209":{},"244":{},"248":{},"251":{},"254":{},"257":{},"258":{},"271":{},"272":{}},"component":{}}],["metadata_id",{"_index":4145,"title":{},"name":{},"text":{"84":{}},"component":{}}],["method",{"_index":543,"title":{"19-5":{},"19-6":{},"118-2":{}},"name":{},"text":{"2":{},"6":{},"19":{},"29":{},"52":{},"58":{},"67":{},"73":{},"78":{},"104":{},"105":{},"115":{},"118":{},"122":{},"123":{},"127":{},"154":{},"161":{},"179":{},"195":{},"229":{},"231":{},"255":{},"262":{},"268":{},"272":{}},"component":{}}],["methodolog",{"_index":1007,"title":{"6-1":{},"6-2":{},"6-11":{},"6-14":{},"67-6":{}},"name":{},"text":{"6":{},"67":{},"99":{}},"component":{}}],["metric",{"_index":269,"title":{"125":{},"6-10":{},"125-2":{},"125-4":{},"125-5":{},"125-6":{},"125-7":{}},"name":{"125":{}},"text":{"2":{},"6":{},"14":{},"46":{},"47":{},"48":{},"49":{},"65":{},"81":{},"125":{},"191":{},"194":{},"197":{},"199":{},"208":{},"272":{}},"component":{}}],["mgmt",{"_index":625,"title":{},"name":{"15":{},"43":{},"112":{}},"text":{"4":{},"15":{},"28":{},"29":{},"30":{},"43":{},"73":{},"75":{},"86":{},"193":{},"250":{},"251":{},"254":{}},"component":{}}],["mgmt.git",{"_index":5839,"title":{},"name":{},"text":{"192":{},"255":{}},"component":{}}],["microprocessor",{"_index":613,"title":{},"name":{},"text":{"4":{}},"component":{}}],["microservic",{"_index":2035,"title":{},"name":{},"text":{"32":{},"45":{},"48":{},"126":{},"196":{}},"component":{}}],["microsoft",{"_index":2291,"title":{},"name":{},"text":{"49":{}},"component":{}}],["middl",{"_index":1141,"title":{},"name":{},"text":{"6":{},"60":{},"135":{},"161":{},"167":{},"271":{},"272":{}},"component":{}}],["middlewar",{"_index":3181,"title":{},"name":{},"text":{"65":{}},"component":{}}],["migrat",{"_index":589,"title":{"4":{},"108":{},"4-2":{},"4-3":{},"4-4":{},"4-8":{},"108-3":{},"108-4":{},"253-11":{},"254-10":{},"255-16":{},"256-8":{}},"name":{"4":{}},"text":{"4":{},"24":{},"59":{},"107":{},"108":{},"199":{},"253":{},"254":{},"255":{},"256":{},"265":{}},"component":{}}],["migration.sh",{"_index":772,"title":{},"name":{},"text":{"4":{}},"component":{}}],["migration.zip",{"_index":766,"title":{},"name":{},"text":{"4":{}},"component":{}}],["million",{"_index":4393,"title":{},"name":{},"text":{"107":{}},"component":{}}],["min",{"_index":3958,"title":{},"name":{},"text":{"80":{},"167":{}},"component":{}}],["mind",{"_index":4172,"title":{},"name":{},"text":{"87":{},"108":{},"166":{},"257":{}},"component":{}}],["minim",{"_index":506,"title":{"99-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"50":{},"55":{},"73":{},"81":{},"99":{},"108":{},"119":{},"123":{},"191":{},"195":{},"197":{},"205":{}},"component":{}}],["minimal.git",{"_index":2666,"title":{},"name":{},"text":{"55":{}},"component":{}}],["minimum",{"_index":1965,"title":{},"name":{},"text":{"30":{},"34":{},"55":{},"80":{},"99":{},"103":{},"140":{},"141":{},"195":{},"226":{},"227":{},"253":{}},"component":{}}],["minio",{"_index":645,"title":{"73-31":{},"73-38":{},"73-49":{}},"name":{},"text":{"4":{},"14":{},"15":{},"16":{},"17":{},"18":{},"21":{},"30":{},"31":{},"49":{},"50":{},"73":{},"85":{},"86":{}},"component":{}}],["minioui",{"_index":680,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ministri",{"_index":152,"title":{},"name":{},"text":{"1":{},"59":{}},"component":{}}],["minlength",{"_index":6770,"title":{},"name":{},"text":{"270":{}},"component":{}}],["minor",{"_index":903,"title":{},"name":{},"text":{"4":{},"6":{},"66":{},"168":{},"268":{}},"component":{}}],["minreplica",{"_index":3931,"title":{},"name":{},"text":{"80":{},"254":{}},"component":{}}],["minut",{"_index":1604,"title":{},"name":{},"text":{"15":{},"16":{},"28":{},"29":{},"33":{},"39":{},"51":{},"73":{},"115":{},"117":{},"118":{},"119":{},"122":{},"127":{},"144":{},"196":{},"213":{},"253":{},"272":{}},"component":{}}],["mismatch",{"_index":4511,"title":{},"name":{},"text":{"119":{}},"component":{}}],["miss",{"_index":683,"title":{},"name":{},"text":{"4":{},"32":{},"107":{},"244":{}},"component":{}}],["missingfilehandl",{"_index":2718,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mistak",{"_index":4642,"title":{},"name":{},"text":{"131":{},"183":{},"186":{}},"component":{}}],["mistakenli",{"_index":6885,"title":{},"name":{},"text":{"272":{}},"component":{}}],["mit",{"_index":2296,"title":{},"name":{},"text":{"49":{}},"component":{}}],["mitig",{"_index":1419,"title":{"253-15":{},"255-20":{}},"name":{},"text":{"9":{},"67":{},"99":{},"253":{},"255":{}},"component":{}}],["mititg",{"_index":3341,"title":{},"name":{},"text":{"67":{}},"component":{}}],["mix",{"_index":6762,"title":{},"name":{},"text":{"270":{}},"component":{}}],["mkdir",{"_index":3641,"title":{},"name":{},"text":{"73":{}},"component":{}}],["mm",{"_index":4053,"title":{},"name":{},"text":{"83":{},"141":{},"165":{},"167":{}},"component":{}}],["mm/dd/yyyi",{"_index":5497,"title":{},"name":{},"text":{"165":{}},"component":{}}],["mng",{"_index":6348,"title":{},"name":{},"text":{"231":{}},"component":{}}],["mnopqrstuvwxyz",{"_index":1888,"title":{},"name":{},"text":{"25":{}},"component":{}}],["mobil",{"_index":2393,"title":{},"name":{},"text":{"49":{}},"component":{}}],["mock",{"_index":1167,"title":{},"name":{},"text":{"6":{},"56":{},"162":{},"189":{},"193":{},"195":{},"202":{},"250":{}},"component":{}}],["mock.apps.envone.dev.registry.eua.gov.ua/mockedrservic",{"_index":5423,"title":{},"name":{},"text":{"162":{}},"component":{}}],["mockmvc",{"_index":1341,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mockrepositori",{"_index":1170,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mockup",{"_index":6448,"title":{},"name":{},"text":{"253":{},"272":{}},"component":{}}],["mode",{"_index":2484,"title":{"56":{},"56-2":{}},"name":{"56":{},"189":{}},"text":{"50":{},"52":{},"56":{},"128":{},"139":{},"141":{},"167":{},"189":{},"193":{},"196":{},"226":{},"232":{},"236":{},"237":{},"242":{},"244":{},"250":{},"258":{},"259":{},"262":{}},"component":{}}],["model",{"_index":31,"title":{"53":{},"54":{},"59":{},"102":{},"103":{},"106":{},"110":{},"138":{},"139":{},"140":{},"141":{},"155":{},"156":{},"159":{},"163":{},"164":{},"168":{},"170":{},"172":{},"204":{},"223":{},"238":{},"242":{},"244":{},"264":{},"266":{},"6-7":{},"32-8":{},"51-4":{},"52-1":{},"52-7":{},"52-14":{},"58-5":{},"58-6":{},"58-7":{},"58-9":{},"58-10":{},"58-12":{},"58-13":{},"58-15":{},"58-16":{},"58-18":{},"58-19":{},"59-2":{},"59-4":{},"59-8":{},"66-7":{},"66-9":{},"66-10":{},"66-11":{},"66-12":{},"66-13":{},"66-15":{},"67-13":{},"100-2":{},"100-6":{},"100-7":{},"100-8":{},"100-9":{},"103-1":{},"103-2":{},"104-4":{},"105-5":{},"105-8":{},"138-3":{},"138-19":{},"139-4":{},"139-5":{},"139-13":{},"139-19":{},"140-4":{},"140-5":{},"140-9":{},"140-16":{},"140-20":{},"140-21":{},"140-24":{},"140-25":{},"141-4":{},"141-5":{},"141-18":{},"141-20":{},"141-25":{},"142-9":{},"154-2":{},"154-4":{},"154-5":{},"154-6":{},"154-7":{},"154-8":{},"154-9":{},"154-11":{},"154-12":{},"154-13":{},"155-4":{},"155-5":{},"155-7":{},"155-8":{},"159-8":{},"159-9":{},"159-10":{},"160-7":{},"161-4":{},"161-5":{},"161-6":{},"161-7":{},"161-8":{},"161-9":{},"161-10":{},"161-11":{},"161-12":{},"161-13":{},"161-14":{},"161-16":{},"164-1":{},"164-2":{},"164-4":{},"164-5":{},"164-7":{},"167-43":{},"181-2":{},"181-3":{},"183-3":{},"184-2":{},"186-3":{},"195-22":{},"195-29":{},"202-7":{},"205-17":{},"207-2":{},"210-2":{},"210-3":{},"211-2":{},"211-3":{},"211-4":{},"212-2":{},"212-3":{},"212-4":{},"212-5":{},"213-3":{},"213-4":{},"214-2":{},"216-3":{},"216-4":{},"216-6":{},"216-7":{},"216-8":{},"216-10":{},"216-11":{},"216-12":{},"216-13":{},"216-14":{},"216-15":{},"217-2":{},"217-3":{},"217-5":{},"217-6":{},"217-7":{},"217-8":{},"217-10":{},"217-11":{},"218-3":{},"218-5":{},"218-6":{},"223-2":{},"237-13":{},"255-19":{},"257-10":{},"257-11":{},"259-2":{},"259-3":{},"259-4":{},"260-2":{},"260-3":{},"260-4":{},"261-2":{},"269-6":{},"269-8":{},"270-7":{},"271-10":{}},"name":{"59":{},"106":{},"138":{},"139":{},"140":{},"141":{},"142":{},"155":{},"159":{},"164":{},"238":{}},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"10":{},"12":{},"31":{},"32":{},"33":{},"44":{},"45":{},"47":{},"49":{},"50":{},"51":{},"52":{},"54":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"66":{},"67":{},"84":{},"99":{},"100":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"117":{},"118":{},"119":{},"123":{},"124":{},"128":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"170":{},"171":{},"177":{},"179":{},"181":{},"183":{},"184":{},"186":{},"189":{},"195":{},"198":{},"201":{},"202":{},"203":{},"204":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"229":{},"230":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"242":{},"243":{},"244":{},"245":{},"246":{},"255":{},"257":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["model/*.xml",{"_index":4876,"title":{},"name":{},"text":{"138":{}},"component":{}}],["model/createanalyticsviews.xml",{"_index":5102,"title":{},"name":{},"text":{"142":{}},"component":{}}],["model/createtables.xml",{"_index":6410,"title":{},"name":{},"text":{"244":{}},"component":{}}],["model/data",{"_index":4870,"title":{},"name":{},"text":{"138":{}},"component":{}}],["model/liquibas",{"_index":4801,"title":{},"name":{},"text":{"138":{},"167":{},"168":{},"170":{}},"component":{}}],["model/main",{"_index":6411,"title":{},"name":{},"text":{"244":{}},"component":{}}],["model/role_permission.xml",{"_index":5219,"title":{},"name":{},"text":{"155":{}},"component":{}}],["model/tablessubjects.xml",{"_index":4645,"title":{},"name":{},"text":{"131":{}},"component":{}}],["modeling/bp/bp",{"_index":6623,"title":{},"name":{},"text":{"264":{}},"component":{}}],["modeling/bp/bpmn/events/bp",{"_index":2638,"title":{},"name":{},"text":{"52":{}},"component":{}}],["modeling/bp/bpmn/events/messag",{"_index":6237,"title":{},"name":{},"text":{"218":{}},"component":{}}],["modeling/bp/bpmn/events/overview.adoc",{"_index":5236,"title":{},"name":{},"text":{"156":{}},"component":{}}],["modeling/bp/bpmn/subprocesses/overview.adoc",{"_index":2613,"title":{},"name":{},"text":{"52":{},"156":{}},"component":{}}],["modeling/bp/el",{"_index":2610,"title":{},"name":{},"text":{"52":{},"58":{},"157":{}},"component":{}}],["modeling/bp/model",{"_index":4249,"title":{},"name":{},"text":{"100":{},"139":{},"140":{},"141":{},"212":{},"216":{},"227":{},"262":{},"264":{}},"component":{}}],["modeling/data/phys",{"_index":4800,"title":{},"name":{},"text":{"138":{},"167":{},"168":{},"170":{}},"component":{}}],["modeling/forms/registri",{"_index":4236,"title":{},"name":{},"text":{"100":{},"139":{},"160":{}},"component":{}}],["modeling/reports/data",{"_index":4435,"title":{},"name":{},"text":{"110":{},"142":{},"167":{}},"component":{}}],["modeling/tables/t",{"_index":4615,"title":{},"name":{},"text":{"128":{}},"component":{}}],["moder",{"_index":2730,"title":{},"name":{},"text":{"57":{},"59":{}},"component":{}}],["moderator’",{"_index":2988,"title":{},"name":{},"text":{"59":{}},"component":{}}],["modern",{"_index":2315,"title":{},"name":{},"text":{"49":{},"81":{},"99":{},"269":{}},"component":{}}],["modif",{"_index":315,"title":{"246-2":{}},"name":{},"text":{"2":{},"83":{},"144":{},"168":{},"191":{},"240":{},"246":{}},"component":{}}],["modifi",{"_index":470,"title":{"204-9":{}},"name":{},"text":{"2":{},"4":{},"6":{},"19":{},"22":{},"30":{},"31":{},"34":{},"42":{},"43":{},"58":{},"66":{},"78":{},"84":{},"100":{},"123":{},"129":{},"132":{},"138":{},"167":{},"168":{},"177":{},"195":{},"204":{},"208":{},"236":{},"238":{},"244":{},"246":{},"264":{},"265":{},"270":{}},"component":{}}],["modifydatatyp",{"_index":4130,"title":{},"name":{},"text":{"84":{}},"component":{}}],["modul",{"_index":1067,"title":{"86-4":{},"257-7":{}},"name":{},"text":{"6":{},"29":{},"73":{},"78":{},"86":{},"119":{},"167":{},"168":{},"257":{},"269":{}},"component":{}}],["modular",{"_index":1019,"title":{"6-8":{}},"name":{},"text":{"6":{}},"component":{}}],["module.ec2_bastion.id",{"_index":3604,"title":{},"name":{},"text":{"73":{}},"component":{}}],["module.key_pair.key_pair_nam",{"_index":3550,"title":{},"name":{},"text":{"73":{}},"component":{}}],["module.vpc.private_subnets[0",{"_index":3554,"title":{},"name":{},"text":{"73":{}},"component":{}}],["module.vpc.public_subnets[0",{"_index":3570,"title":{},"name":{},"text":{"73":{}},"component":{}}],["module.vpc.vpc_id",{"_index":3610,"title":{},"name":{},"text":{"73":{}},"component":{}}],["module/overview.adoc",{"_index":2222,"title":{},"name":{},"text":{"48":{}},"component":{}}],["modules/arch/pages/architecture/registry/operational/registri",{"_index":6143,"title":{},"name":{},"text":{"209":{}},"component":{}}],["modules/dynamodb",{"_index":3498,"title":{},"name":{},"text":{"73":{}},"component":{}}],["modules/ec2",{"_index":3542,"title":{},"name":{},"text":{"73":{}},"component":{}}],["modules/key",{"_index":3572,"title":{},"name":{},"text":{"73":{}},"component":{}}],["modules/s3",{"_index":3487,"title":{},"name":{},"text":{"73":{}},"component":{}}],["modules/vpc/aw",{"_index":3525,"title":{},"name":{},"text":{"73":{}},"component":{}}],["molestia",{"_index":6340,"title":{},"name":{},"text":{"231":{}},"component":{}}],["moment",{"_index":3089,"title":{},"name":{},"text":{"60":{},"213":{}},"component":{}}],["mon",{"_index":1589,"title":{},"name":{},"text":{"15":{},"16":{},"51":{},"179":{}},"component":{}}],["monaco",{"_index":6412,"title":{},"name":{},"text":{"244":{},"262":{}},"component":{}}],["monday",{"_index":1591,"title":{},"name":{},"text":{"15":{},"16":{},"51":{},"213":{}},"component":{}}],["money",{"_index":6197,"title":{},"name":{},"text":{"213":{}},"component":{}}],["monitor",{"_index":1060,"title":{"125":{},"6-30":{},"31-3":{},"32-23":{},"32-24":{},"32-25":{},"33-4":{},"42-4":{},"43-4":{},"49-56":{},"99-10":{},"272-14":{}},"name":{},"text":{"6":{},"9":{},"14":{},"15":{},"28":{},"30":{},"31":{},"32":{},"33":{},"35":{},"42":{},"43":{},"44":{},"46":{},"47":{},"48":{},"49":{},"57":{},"60":{},"65":{},"81":{},"99":{},"119":{},"122":{},"125":{},"129":{},"131":{},"142":{},"191":{},"193":{},"197":{},"201":{},"204":{},"205":{},"250":{},"253":{},"272":{}},"component":{}}],["monitoring.coreos.com/v1",{"_index":6860,"title":{},"name":{},"text":{"272":{}},"component":{}}],["monitoring/deploy",{"_index":6862,"title":{},"name":{},"text":{"272":{}},"component":{}}],["month",{"_index":2487,"title":{},"name":{},"text":{"50":{},"51":{},"165":{},"167":{}},"component":{}}],["monthli",{"_index":2463,"title":{},"name":{},"text":{"50":{}},"component":{}}],["mor",{"_index":2863,"title":{},"name":{},"text":{"58":{}},"component":{}}],["more",{"_index":566,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"12":{},"13":{},"17":{},"21":{},"23":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"36":{},"44":{},"46":{},"48":{},"50":{},"51":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"66":{},"68":{},"69":{},"70":{},"72":{},"73":{},"78":{},"80":{},"81":{},"99":{},"100":{},"101":{},"103":{},"105":{},"108":{},"115":{},"117":{},"118":{},"119":{},"123":{},"124":{},"125":{},"127":{},"140":{},"141":{},"145":{},"148":{},"149":{},"151":{},"152":{},"153":{},"154":{},"159":{},"160":{},"163":{},"166":{},"167":{},"168":{},"183":{},"184":{},"191":{},"193":{},"194":{},"197":{},"199":{},"200":{},"202":{},"208":{},"210":{},"212":{},"213":{},"214":{},"216":{},"218":{},"224":{},"225":{},"226":{},"229":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"240":{},"241":{},"242":{},"244":{},"251":{},"253":{},"255":{},"258":{},"262":{},"264":{},"265":{},"267":{}},"component":{}}],["morn",{"_index":2514,"title":{},"name":{},"text":{"51":{}},"component":{}}],["mount",{"_index":5855,"title":{"195-17":{}},"name":{},"text":{"195":{}},"component":{}}],["mount_path",{"_index":851,"title":{},"name":{},"text":{"4":{}},"component":{}}],["mountpath",{"_index":5911,"title":{},"name":{},"text":{"195":{},"258":{}},"component":{}}],["move",{"_index":602,"title":{},"name":{},"text":{"4":{},"6":{},"28":{},"52":{},"57":{},"138":{},"182":{},"194":{},"237":{},"246":{},"270":{}},"component":{}}],["mozilla",{"_index":2374,"title":{},"name":{},"text":{"49":{}},"component":{}}],["mpl",{"_index":2344,"title":{},"name":{},"text":{"49":{}},"component":{}}],["mr",{"_index":1388,"title":{},"name":{"36":{}},"text":{"6":{},"242":{},"268":{}},"component":{}}],["ms",{"_index":5157,"title":{},"name":{},"text":{"148":{},"149":{}},"component":{}}],["msg",{"_index":891,"title":{},"name":{},"text":{"4":{},"57":{}},"component":{}}],["msg=attempt",{"_index":3846,"title":{},"name":{},"text":{"73":{}},"component":{}}],["msg=bootstrap",{"_index":3851,"title":{},"name":{},"text":{"73":{}},"component":{}}],["msg=fail",{"_index":3853,"title":{},"name":{},"text":{"73":{}},"component":{}}],["mtl",{"_index":5978,"title":{},"name":{},"text":{"196":{},"197":{}},"component":{}}],["much",{"_index":4410,"title":{},"name":{},"text":{"108":{},"271":{}},"component":{}}],["multi",{"_index":2604,"title":{"262-12":{}},"name":{},"text":{"52":{},"183":{},"186":{},"207":{},"262":{}},"component":{}}],["multiinstanceloopcharacterist",{"_index":2609,"title":{},"name":{},"text":{"52":{}},"component":{}}],["multipl",{"_index":1209,"title":{"52":{},"227":{},"66-13":{},"167-29":{},"183-5":{},"186-5":{}},"name":{"12":{},"227":{}},"text":{"6":{},"9":{},"12":{},"21":{},"23":{},"31":{},"44":{},"49":{},"52":{},"58":{},"61":{},"66":{},"73":{},"81":{},"105":{},"118":{},"119":{},"125":{},"136":{},"138":{},"140":{},"160":{},"167":{},"183":{},"186":{},"216":{},"226":{},"227":{},"244":{},"258":{},"264":{}},"component":{}}],["municip",{"_index":4675,"title":{},"name":{},"text":{"134":{}},"component":{}}],["mutationwebhook",{"_index":5955,"title":{},"name":{},"text":{"196":{}},"component":{}}],["mx",{"_index":1865,"title":{},"name":{},"text":{"25":{}},"component":{}}],["mxtoolbox",{"_index":1889,"title":{},"name":{},"text":{"25":{}},"component":{}}],["myconst",{"_index":6638,"title":{},"name":{},"text":{"267":{}},"component":{}}],["mysql",{"_index":3205,"title":{},"name":{},"text":{"66":{}},"component":{}}],["myutil",{"_index":6637,"title":{},"name":{},"text":{"267":{}},"component":{}}],["n",{"_index":881,"title":{},"name":{},"text":{"4":{},"21":{},"40":{},"55":{},"73":{},"119":{},"183":{},"195":{},"254":{}},"component":{}}],["n:n",{"_index":4414,"title":{},"name":{},"text":{"108":{}},"component":{}}],["name",{"_index":438,"title":{"188":{},"239":{},"75-2":{},"75-3":{},"76-2":{},"76-4":{},"76-5":{},"138-12":{},"138-13":{},"138-14":{},"138-17":{},"173-2":{},"173-3":{},"242-2":{},"246-1":{},"255-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"25":{},"28":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"40":{},"42":{},"47":{},"51":{},"52":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"78":{},"80":{},"82":{},"83":{},"84":{},"85":{},"87":{},"88":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"115":{},"118":{},"119":{},"120":{},"122":{},"124":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"148":{},"149":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"171":{},"173":{},"175":{},"176":{},"177":{},"179":{},"181":{},"182":{},"183":{},"186":{},"188":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"201":{},"202":{},"203":{},"204":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"226":{},"227":{},"230":{},"231":{},"232":{},"233":{},"234":{},"236":{},"237":{},"238":{},"239":{},"240":{},"242":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"263":{},"265":{},"267":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["name\":\"kid",{"_index":5639,"title":{},"name":{},"text":{"167":{}},"component":{}}],["name\":\"larg",{"_index":5636,"title":{},"name":{},"text":{"167":{}},"component":{}}],["name,hierarchy_cod",{"_index":3060,"title":{},"name":{},"text":{"59":{}},"component":{}}],["name.valu",{"_index":4989,"title":{},"name":{},"text":{"140":{}},"component":{}}],["name1",{"_index":6046,"title":{},"name":{},"text":{"202":{}},"component":{}}],["name2",{"_index":6047,"title":{},"name":{},"text":{"202":{}},"component":{}}],["name=\"analytics_offic",{"_index":5100,"title":{},"name":{},"text":{"142":{}},"component":{}}],["name=$5",{"_index":6512,"title":{},"name":{},"text":{"257":{}},"component":{}}],["name_",{"_index":6077,"title":{},"name":{},"text":{"205":{},"271":{}},"component":{}}],["name_categori",{"_index":5509,"title":{},"name":{},"text":{"166":{}},"component":{}}],["name_dict",{"_index":5525,"title":{},"name":{},"text":{"166":{}},"component":{}}],["name_region",{"_index":5507,"title":{},"name":{},"text":{"166":{}},"component":{}}],["name_rn",{"_index":4839,"title":{},"name":{},"text":{"138":{}},"component":{}}],["namespac",{"_index":774,"title":{},"name":{},"text":{"4":{},"6":{},"18":{},"22":{},"56":{},"80":{},"125":{},"188":{},"191":{},"194":{},"195":{},"197":{},"221":{},"222":{},"248":{},"254":{},"255":{},"267":{}},"component":{}}],["namespace\"}}/citu",{"_index":2721,"title":{},"name":{},"text":{"56":{}},"component":{}}],["namespace\"}}/istio",{"_index":2719,"title":{},"name":{},"text":{"56":{}},"component":{}}],["namespace\"}}/network",{"_index":2720,"title":{},"name":{},"text":{"56":{}},"component":{}}],["namespaceselector",{"_index":6861,"title":{},"name":{},"text":{"272":{}},"component":{}}],["namespace}.svc.cluster.local:8080/search",{"_index":6879,"title":{},"name":{},"text":{"272":{}},"component":{}}],["name|represent",{"_index":6008,"title":{},"name":{},"text":{"198":{}},"component":{}}],["name—​for",{"_index":5549,"title":{},"name":{},"text":{"167":{},"230":{}},"component":{}}],["nat",{"_index":1870,"title":{},"name":{},"text":{"25":{}},"component":{}}],["nation",{"_index":477,"title":{},"name":{},"text":{"2":{},"46":{},"59":{},"99":{}},"component":{}}],["nativ",{"_index":468,"title":{},"name":{},"text":{"2":{}},"component":{}}],["natu",{"_index":6327,"title":{},"name":{},"text":{"231":{}},"component":{}}],["natur",{"_index":571,"title":{},"name":{},"text":{"2":{},"46":{},"154":{}},"component":{}}],["navig",{"_index":1405,"title":{},"name":{},"text":{"8":{},"13":{},"15":{},"16":{},"17":{},"56":{},"57":{},"60":{},"69":{},"70":{},"100":{},"113":{},"119":{},"125":{},"127":{},"143":{},"145":{},"151":{},"152":{},"161":{},"176":{},"177":{},"210":{},"212":{},"213":{},"218":{},"237":{},"242":{},"244":{},"246":{},"262":{}},"component":{}}],["ne",{"_index":5556,"title":{},"name":{},"text":{"167":{}},"component":{}}],["necessari",{"_index":246,"title":{},"name":{},"text":{"2":{},"6":{},"13":{},"22":{},"28":{},"29":{},"35":{},"40":{},"41":{},"50":{},"52":{},"56":{},"58":{},"59":{},"63":{},"70":{},"73":{},"86":{},"99":{},"103":{},"105":{},"107":{},"108":{},"115":{},"118":{},"119":{},"120":{},"138":{},"139":{},"140":{},"145":{},"148":{},"154":{},"155":{},"161":{},"164":{},"166":{},"167":{},"175":{},"176":{},"177":{},"194":{},"195":{},"196":{},"202":{},"205":{},"211":{},"224":{},"225":{},"236":{},"237":{},"242":{},"244":{},"253":{},"258":{},"260":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["necessarili",{"_index":385,"title":{},"name":{},"text":{"2":{}},"component":{}}],["need",{"_index":52,"title":{},"name":{},"text":{"1":{},"4":{},"9":{},"10":{},"12":{},"17":{},"21":{},"22":{},"25":{},"26":{},"28":{},"30":{},"31":{},"33":{},"42":{},"43":{},"52":{},"55":{},"56":{},"57":{},"58":{},"60":{},"61":{},"63":{},"66":{},"68":{},"72":{},"73":{},"74":{},"75":{},"76":{},"78":{},"80":{},"81":{},"104":{},"107":{},"108":{},"111":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"129":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"148":{},"149":{},"152":{},"154":{},"155":{},"158":{},"160":{},"161":{},"162":{},"164":{},"167":{},"168":{},"177":{},"179":{},"181":{},"183":{},"186":{},"188":{},"189":{},"191":{},"193":{},"195":{},"196":{},"201":{},"205":{},"210":{},"212":{},"216":{},"217":{},"220":{},"221":{},"222":{},"226":{},"229":{},"230":{},"231":{},"233":{},"234":{},"235":{},"236":{},"237":{},"246":{},"247":{},"249":{},"250":{},"255":{},"257":{},"258":{},"261":{},"262":{},"265":{},"266":{},"267":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["neg",{"_index":5926,"title":{},"name":{},"text":{"195":{},"213":{},"253":{},"255":{}},"component":{}}],["nest",{"_index":1081,"title":{"167-40":{},"167-41":{},"216-16":{}},"name":{},"text":{"6":{},"58":{},"66":{},"82":{},"132":{},"136":{},"137":{},"138":{},"166":{},"167":{},"216":{},"237":{}},"component":{}}],["net",{"_index":3735,"title":{},"name":{},"text":{"73":{}},"component":{}}],["network",{"_index":396,"title":{"24":{}},"name":{"24":{}},"text":{"2":{},"4":{},"19":{},"23":{},"24":{},"27":{},"28":{},"30":{},"34":{},"49":{},"55":{},"57":{},"60":{},"67":{},"73":{},"75":{},"76":{},"81":{},"118":{},"119":{},"122":{},"123":{},"127":{},"129":{},"139":{},"188":{},"195":{},"197":{},"199":{},"201":{},"208":{},"253":{},"254":{},"255":{}},"component":{}}],["networking.istio.io/v1alpha3",{"_index":6467,"title":{},"name":{},"text":{"254":{}},"component":{}}],["networkpolici",{"_index":6832,"title":{"272-11":{}},"name":{},"text":{"272":{}},"component":{}}],["networktyp",{"_index":3753,"title":{},"name":{},"text":{"73":{}},"component":{}}],["neutral",{"_index":69,"title":{},"name":{},"text":{"1":{}},"component":{}}],["never",{"_index":656,"title":{},"name":{},"text":{"4":{},"6":{},"168":{}},"component":{}}],["new",{"_index":162,"title":{"23-4":{},"141-21":{}},"name":{"175":{},"177":{}},"text":{"1":{},"4":{},"6":{},"8":{},"9":{},"15":{},"16":{},"18":{},"19":{},"21":{},"23":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"40":{},"42":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"63":{},"66":{},"67":{},"73":{},"75":{},"76":{},"80":{},"81":{},"84":{},"87":{},"100":{},"105":{},"108":{},"111":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"125":{},"128":{},"129":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"154":{},"158":{},"159":{},"160":{},"161":{},"165":{},"167":{},"175":{},"176":{},"177":{},"181":{},"183":{},"186":{},"188":{},"191":{},"196":{},"204":{},"207":{},"210":{},"213":{},"214":{},"216":{},"217":{},"223":{},"224":{},"225":{},"227":{},"230":{},"232":{},"233":{},"234":{},"236":{},"237":{},"242":{},"244":{},"247":{},"253":{},"254":{},"255":{},"256":{},"257":{},"264":{},"265":{},"267":{},"270":{},"271":{}},"component":{}}],["newest",{"_index":5165,"title":{},"name":{},"text":{"151":{},"152":{},"161":{}},"component":{}}],["newli",{"_index":1828,"title":{},"name":{},"text":{"23":{},"165":{},"175":{}},"component":{}}],["newlin",{"_index":6622,"title":{},"name":{},"text":{"262":{}},"component":{}}],["next",{"_index":649,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"16":{},"17":{},"19":{},"21":{},"25":{},"28":{},"29":{},"30":{},"33":{},"34":{},"42":{},"43":{},"52":{},"58":{},"63":{},"66":{},"67":{},"68":{},"75":{},"76":{},"99":{},"103":{},"105":{},"108":{},"115":{},"119":{},"127":{},"140":{},"142":{},"144":{},"145":{},"148":{},"149":{},"152":{},"154":{},"162":{},"167":{},"196":{},"212":{},"213":{},"217":{},"226":{},"227":{},"233":{},"235":{},"237":{},"244":{},"253":{},"262":{}},"component":{}}],["nexu",{"_index":831,"title":{"32-12":{},"73-52":{}},"name":{},"text":{"4":{},"14":{},"15":{},"18":{},"32":{},"43":{},"49":{},"65":{},"73":{},"86":{},"128":{},"138":{},"191":{},"193":{},"201":{},"244":{},"250":{},"266":{}},"component":{}}],["nginx",{"_index":2361,"title":{},"name":{},"text":{"49":{},"204":{}},"component":{}}],["ngpwg_s672pwiqqr0li20jjxydpo",{"_index":5701,"title":{},"name":{},"text":{"179":{}},"component":{}}],["nihil",{"_index":6328,"title":{},"name":{},"text":{"231":{}},"component":{}}],["nikita@garfield.biz",{"_index":6338,"title":{},"name":{},"text":{"231":{}},"component":{}}],["nmcli",{"_index":1659,"title":{},"name":{},"text":{"19":{}},"component":{}}],["nnks8b_fkgoidcb5xkbwq2hre0ynsn5qnowmkgi2dtykubgd3g37__46",{"_index":5697,"title":{},"name":{},"text":{"179":{}},"component":{}}],["no_auth",{"_index":4298,"title":{},"name":{},"text":{"105":{},"122":{},"195":{}},"component":{}}],["node",{"_index":1642,"title":{"19":{},"39":{},"80":{},"19-4":{},"80-1":{}},"name":{"39":{}},"text":{"19":{},"20":{},"25":{},"30":{},"34":{},"38":{},"39":{},"45":{},"59":{},"73":{},"80":{}},"component":{}}],["node(",{"_index":3947,"title":{},"name":{},"text":{"80":{}},"component":{}}],["node.j",{"_index":2312,"title":{},"name":{},"text":{"49":{}},"component":{}}],["node/eu",{"_index":3579,"title":{},"name":{},"text":{"73":{}},"component":{}}],["node_ami",{"_index":3695,"title":{},"name":{},"text":{"73":{}},"component":{}}],["node_key",{"_index":3699,"title":{},"name":{},"text":{"73":{}},"component":{}}],["node_nam",{"_index":3694,"title":{},"name":{},"text":{"73":{}},"component":{}}],["node_profil",{"_index":3599,"title":{},"name":{},"text":{"73":{}},"component":{}}],["node_rol",{"_index":3591,"title":{},"name":{},"text":{"73":{}},"component":{}}],["node_typ",{"_index":3697,"title":{},"name":{},"text":{"73":{}},"component":{}}],["node’",{"_index":3939,"title":{},"name":{},"text":{"80":{}},"component":{}}],["nominatim",{"_index":2889,"title":{},"name":{},"text":{"58":{},"230":{}},"component":{}}],["nominatim[3",{"_index":2788,"title":{},"name":{},"text":{"58":{}},"component":{}}],["non",{"_index":1061,"title":{"113":{},"200":{},"6-30":{},"44-5":{},"55-2":{},"262-9":{}},"name":{"113":{}},"text":{"6":{},"9":{},"10":{},"19":{},"44":{},"48":{},"49":{},"55":{},"99":{},"113":{},"127":{},"131":{},"161":{},"195":{},"198":{},"200":{},"218":{},"244":{},"253":{},"255":{},"262":{},"269":{}},"component":{}}],["noncurrentday",{"_index":3363,"title":{},"name":{},"text":{"72":{}},"component":{}}],["noncurrentversionexpir",{"_index":3362,"title":{},"name":{},"text":{"72":{}},"component":{}}],["none",{"_index":3944,"title":{},"name":{},"text":{"80":{},"119":{},"134":{},"135":{},"136":{},"167":{},"188":{},"189":{},"196":{},"205":{},"216":{},"217":{},"248":{}},"component":{}}],["noobaa",{"_index":5845,"title":{},"name":{},"text":{"193":{},"250":{}},"component":{}}],["normal",{"_index":1454,"title":{},"name":{},"text":{"9":{},"19":{},"108":{},"261":{}},"component":{}}],["not_attend",{"_index":4777,"title":{},"name":{},"text":{"136":{}},"component":{}}],["notabl",{"_index":1823,"title":{},"name":{},"text":{"23":{}},"component":{}}],["notact",{"_index":3416,"title":{},"name":{},"text":{"73":{}},"component":{}}],["notat",{"_index":287,"title":{},"name":{},"text":{"2":{},"49":{},"65":{},"66":{},"234":{},"264":{}},"component":{}}],["note",{"_index":1608,"title":{},"name":{},"text":{"15":{},"32":{},"52":{},"55":{},"56":{},"58":{},"59":{},"66":{},"73":{},"108":{},"140":{},"142":{},"166":{},"177":{},"205":{},"237":{},"238":{},"244":{}},"component":{}}],["notempti",{"_index":6757,"title":{},"name":{},"text":{"270":{}},"component":{}}],["notepad",{"_index":2726,"title":{},"name":{},"text":{"57":{},"66":{},"148":{}},"component":{}}],["notic",{"_index":6436,"title":{},"name":{},"text":{"245":{}},"component":{}}],["notif",{"_index":1528,"title":{"133":{},"185":{},"186":{},"187":{},"183-7":{},"186-3":{},"186-7":{},"202-14":{}},"name":{"13":{},"133":{},"145":{},"146":{},"183":{},"186":{}},"text":{"12":{},"13":{},"25":{},"47":{},"49":{},"56":{},"60":{},"66":{},"69":{},"108":{},"113":{},"125":{},"132":{},"133":{},"144":{},"154":{},"182":{},"183":{},"184":{},"186":{},"187":{},"189":{},"195":{},"198":{},"202":{},"213":{},"234":{},"235":{},"236":{},"244":{},"271":{}},"component":{}}],["notifi",{"_index":1532,"title":{"13":{},"183":{},"183-4":{},"183-5":{},"186-4":{},"186-5":{}},"name":{},"text":{"52":{},"60":{},"69":{},"70":{},"108":{},"183":{},"185":{},"186":{},"223":{}},"component":{}}],["notification.ftl",{"_index":5810,"title":{},"name":{},"text":{"186":{}},"component":{}}],["notification.ftlh",{"_index":5733,"title":{},"name":{},"text":{"183":{}},"component":{}}],["notification.yml",{"_index":5736,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["notifications/diia",{"_index":2728,"title":{},"name":{},"text":{"57":{},"146":{},"202":{}},"component":{}}],["notifications/email",{"_index":5807,"title":{},"name":{},"text":{"184":{},"202":{}},"component":{}}],["notifications/inbox",{"_index":6044,"title":{},"name":{},"text":{"202":{}},"component":{}}],["notin",{"_index":5565,"title":{},"name":{},"text":{"167":{}},"component":{}}],["notrequestprincip",{"_index":5952,"title":{},"name":{},"text":{"196":{}},"component":{}}],["now",{"_index":1105,"title":{},"name":{},"text":{"6":{},"8":{},"21":{},"28":{},"58":{},"60":{},"63":{},"83":{},"84":{},"108":{},"138":{},"161":{},"177":{},"179":{},"225":{},"244":{},"267":{}},"component":{}}],["np",{"_index":4831,"title":{},"name":{},"text":{"138":{},"140":{}},"component":{}}],["np.koatuu_id",{"_index":4835,"title":{},"name":{},"text":{"138":{}},"component":{}}],["np.level1",{"_index":4837,"title":{},"name":{},"text":{"138":{}},"component":{}}],["np.level2",{"_index":4841,"title":{},"name":{},"text":{"138":{}},"component":{}}],["np.name",{"_index":4836,"title":{},"name":{},"text":{"138":{}},"component":{}}],["np.type",{"_index":4845,"title":{},"name":{},"text":{"138":{}},"component":{}}],["npe",{"_index":1129,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ns",{"_index":3410,"title":{},"name":{},"text":{"73":{},"195":{},"255":{}},"component":{}}],["nslookup",{"_index":2085,"title":{},"name":{},"text":{"40":{}},"component":{}}],["null",{"_index":1175,"title":{},"name":{},"text":{"6":{},"83":{},"84":{},"107":{},"135":{},"136":{},"138":{},"140":{},"141":{},"159":{},"161":{},"183":{},"186":{},"205":{},"269":{}},"component":{}}],["null::text",{"_index":4329,"title":{},"name":{},"text":{"107":{}},"component":{}}],["null_resourc",{"_index":3624,"title":{},"name":{},"text":{"73":{}},"component":{}}],["nullabl",{"_index":4807,"title":{},"name":{},"text":{"138":{}},"component":{}}],["nullable=\"fals",{"_index":4812,"title":{},"name":{},"text":{"138":{}},"component":{}}],["nullifi",{"_index":6186,"title":{},"name":{},"text":{"213":{},"218":{}},"component":{}}],["nullpointerexcept",{"_index":1130,"title":{},"name":{},"text":{"6":{}},"component":{}}],["num_init_children",{"_index":6574,"title":{},"name":{},"text":{"258":{}},"component":{}}],["number",{"_index":193,"title":{"55":{},"165":{},"6-20":{}},"name":{"165":{}},"text":{"1":{},"2":{},"6":{},"15":{},"16":{},"21":{},"29":{},"30":{},"31":{},"33":{},"49":{},"50":{},"52":{},"55":{},"60":{},"62":{},"65":{},"69":{},"70":{},"73":{},"80":{},"84":{},"103":{},"105":{},"108":{},"117":{},"119":{},"120":{},"125":{},"126":{},"127":{},"131":{},"134":{},"135":{},"136":{},"141":{},"143":{},"145":{},"151":{},"152":{},"154":{},"163":{},"165":{},"167":{},"170":{},"179":{},"186":{},"205":{},"213":{},"216":{},"224":{},"226":{},"227":{},"237":{},"242":{},"244":{},"253":{},"254":{},"255":{},"258":{},"260":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["numer",{"_index":550,"title":{},"name":{},"text":{"2":{},"6":{},"105":{},"127":{},"138":{},"210":{},"224":{}},"component":{}}],["numquam\\net",{"_index":6332,"title":{},"name":{},"text":{"231":{}},"component":{}}],["o",{"_index":913,"title":{},"name":{},"text":{"4":{},"14":{},"49":{},"73":{},"108":{},"138":{},"142":{}},"component":{}}],["o.cod",{"_index":4848,"title":{},"name":{},"text":{"138":{}},"component":{}}],["o.nam",{"_index":4849,"title":{},"name":{},"text":{"138":{},"142":{}},"component":{}}],["o.ownership_id",{"_index":4847,"title":{},"name":{},"text":{"138":{},"142":{}},"component":{}}],["oa",{"_index":3183,"title":{},"name":{},"text":{"65":{}},"component":{}}],["oauth",{"_index":4550,"title":{},"name":{},"text":{"122":{},"125":{},"193":{},"250":{}},"component":{}}],["obc",{"_index":697,"title":{},"name":{},"text":{"4":{}},"component":{}}],["obfusc",{"_index":6456,"title":{},"name":{},"text":{"253":{}},"component":{}}],["object",{"_index":423,"title":{"72":{},"203":{},"206":{},"6-7":{},"44-4":{},"58-17":{},"58-19":{},"67-3":{},"72-1":{},"134-1":{},"135-1":{},"136-1":{},"138-1":{},"140-1":{},"142-15":{},"161-12":{}},"name":{},"text":{"2":{},"6":{},"14":{},"21":{},"23":{},"31":{},"44":{},"47":{},"49":{},"51":{},"52":{},"58":{},"59":{},"67":{},"72":{},"73":{},"80":{},"83":{},"84":{},"99":{},"105":{},"119":{},"123":{},"126":{},"127":{},"134":{},"135":{},"136":{},"138":{},"140":{},"141":{},"142":{},"154":{},"155":{},"158":{},"161":{},"162":{},"164":{},"168":{},"179":{},"196":{},"203":{},"205":{},"206":{},"207":{},"226":{},"228":{},"229":{},"230":{},"231":{},"238":{},"242":{},"269":{},"271":{}},"component":{}}],["object_nam",{"_index":4162,"title":{},"name":{},"text":{"84":{},"209":{}},"component":{}}],["object’",{"_index":2799,"title":{},"name":{},"text":{"58":{},"141":{}},"component":{}}],["obl",{"_index":4832,"title":{},"name":{},"text":{"138":{},"140":{}},"component":{}}],["obl_cod",{"_index":5083,"title":{},"name":{},"text":{"142":{}},"component":{}}],["oblig",{"_index":536,"title":{},"name":{},"text":{"2":{},"99":{}},"component":{}}],["observ",{"_index":2378,"title":{"81-9":{},"191-9":{},"194-9":{},"197-7":{},"199-8":{},"208-8":{}},"name":{},"text":{"49":{},"81":{},"191":{},"194":{},"197":{},"199":{},"208":{}},"component":{}}],["obsolet",{"_index":4612,"title":{},"name":{},"text":{"128":{}},"component":{}}],["obtain",{"_index":347,"title":{"25-5":{},"124-8":{},"148-2":{},"149-2":{},"179-2":{}},"name":{},"text":{"2":{},"4":{},"9":{},"15":{},"25":{},"28":{},"46":{},"52":{},"58":{},"59":{},"63":{},"73":{},"78":{},"111":{},"115":{},"118":{},"119":{},"122":{},"123":{},"124":{},"129":{},"131":{},"140":{},"148":{},"149":{},"154":{},"159":{},"162":{},"179":{},"181":{},"183":{},"186":{},"195":{},"196":{},"205":{},"209":{},"220":{},"242":{},"255":{},"269":{}},"component":{}}],["obviou",{"_index":1102,"title":{},"name":{},"text":{"6":{}},"component":{}}],["oc",{"_index":631,"title":{},"name":{},"text":{"4":{},"15":{},"18":{},"19":{},"22":{},"23":{},"40":{},"49":{},"63":{},"73":{},"81":{}},"component":{}}],["oc.ex",{"_index":3163,"title":{},"name":{},"text":{"63":{}},"component":{}}],["occaecati",{"_index":6344,"title":{},"name":{},"text":{"231":{}},"component":{}}],["occup",{"_index":5049,"title":{},"name":{},"text":{"141":{}},"component":{}}],["occupi",{"_index":1837,"title":{},"name":{},"text":{"23":{}},"component":{}}],["occur",{"_index":121,"title":{},"name":{},"text":{"1":{},"6":{},"10":{},"58":{},"60":{},"73":{},"80":{},"108":{},"113":{},"119":{},"127":{},"141":{},"177":{},"195":{},"214":{},"234":{},"235":{},"244":{},"254":{},"271":{}},"component":{}}],["occurr",{"_index":3320,"title":{},"name":{},"text":{"67":{}},"component":{}}],["odio",{"_index":6333,"title":{},"name":{},"text":{"231":{}},"component":{}}],["offer",{"_index":1333,"title":{},"name":{},"text":{"6":{},"10":{},"153":{},"244":{},"254":{},"255":{},"264":{}},"component":{}}],["offic",{"_index":200,"title":{"70":{},"115":{},"117":{},"150":{},"151":{},"152":{},"32-15":{},"76-4":{},"103-5":{},"105-9":{},"117-2":{},"117-3":{},"131-3":{},"154-7":{},"154-12":{},"158-3":{}},"name":{"9":{},"70":{},"115":{},"117":{},"119":{},"150":{},"151":{},"152":{},"158":{}},"text":{"1":{},"2":{},"4":{},"8":{},"9":{},"12":{},"13":{},"29":{},"30":{},"32":{},"46":{},"47":{},"50":{},"52":{},"55":{},"57":{},"59":{},"60":{},"70":{},"71":{},"75":{},"76":{},"78":{},"84":{},"100":{},"101":{},"103":{},"105":{},"112":{},"113":{},"115":{},"116":{},"117":{},"119":{},"120":{},"131":{},"132":{},"139":{},"140":{},"141":{},"142":{},"143":{},"148":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"158":{},"160":{},"162":{},"165":{},"173":{},"188":{},"193":{},"196":{},"202":{},"203":{},"204":{},"216":{},"217":{},"225":{},"231":{},"234":{},"237":{},"248":{},"249":{},"250":{},"251":{},"255":{},"267":{},"272":{}},"component":{}}],["officer.example.com",{"_index":3902,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"248":{},"255":{}},"component":{}}],["officer.yml",{"_index":4653,"title":{},"name":{},"text":{"132":{},"139":{},"140":{},"141":{},"142":{}},"component":{}}],["officer/api/data",{"_index":4978,"title":{},"name":{},"text":{"140":{}},"component":{}}],["officerport",{"_index":1951,"title":{},"name":{},"text":{"29":{},"76":{},"117":{},"188":{},"193":{},"248":{},"251":{}},"component":{}}],["officers/citizen",{"_index":5220,"title":{},"name":{},"text":{"155":{}},"component":{}}],["officers_id",{"_index":2982,"title":{},"name":{},"text":{"59":{}},"component":{}}],["officer’",{"_index":1469,"title":{},"name":{},"text":{"9":{},"59":{},"66":{}},"component":{}}],["offici",{"_index":568,"title":{"155-2":{}},"name":{},"text":{"2":{},"26":{},"30":{},"46":{},"58":{},"60":{},"73":{},"74":{},"83":{},"106":{},"108":{},"111":{},"115":{},"116":{},"118":{},"119":{},"140":{},"154":{},"155":{},"173":{},"192":{},"201":{},"208":{},"209":{},"210":{},"254":{},"255":{},"266":{},"267":{},"272":{}},"component":{}}],["official’",{"_index":4537,"title":{},"name":{},"text":{"120":{}},"component":{}}],["offset",{"_index":1582,"title":{},"name":{},"text":{"15":{},"16":{},"167":{},"205":{}},"component":{}}],["offset=0",{"_index":5580,"title":{},"name":{},"text":{"167":{}},"component":{}}],["offset=10",{"_index":5582,"title":{},"name":{},"text":{"167":{}},"component":{}}],["offset?offset=0&limit=10",{"_index":5590,"title":{},"name":{},"text":{"167":{}},"component":{}}],["oidc",{"_index":2186,"title":{},"name":{},"text":{"47":{},"49":{},"55":{},"73":{},"179":{},"201":{},"255":{}},"component":{}}],["ok",{"_index":3178,"title":{},"name":{},"text":{"63":{},"196":{},"205":{},"271":{}},"component":{}}],["okd",{"_index":1543,"title":{"24":{},"26":{},"39":{},"73-13":{},"73-25":{},"73-28":{},"73-43":{},"80-1":{}},"name":{"26":{}},"text":{"14":{},"22":{},"23":{},"24":{},"26":{},"27":{},"38":{},"39":{},"45":{},"49":{},"73":{},"74":{},"80":{},"81":{},"87":{},"194":{},"242":{}},"component":{}}],["okd4",{"_index":3384,"title":{"73-26":{}},"name":{},"text":{"73":{}},"component":{}}],["old",{"_index":1718,"title":{},"name":{},"text":{"21":{},"30":{},"33":{},"40":{},"62":{},"73":{},"108":{},"254":{},"255":{},"265":{}},"component":{}}],["older",{"_index":1716,"title":{},"name":{},"text":{"21":{}},"component":{}}],["oldest",{"_index":5166,"title":{},"name":{},"text":{"151":{},"152":{}},"component":{}}],["ololow",{"_index":6690,"title":{},"name":{},"text":{"269":{}},"component":{}}],["omit",{"_index":4869,"title":{},"name":{},"text":{"138":{},"167":{}},"component":{}}],["omni",{"_index":6330,"title":{},"name":{},"text":{"231":{}},"component":{}}],["on",{"_index":565,"title":{"52":{},"227":{},"21-4":{},"141-22":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"15":{},"16":{},"19":{},"21":{},"23":{},"25":{},"28":{},"30":{},"32":{},"33":{},"44":{},"45":{},"48":{},"50":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"63":{},"66":{},"67":{},"73":{},"75":{},"76":{},"80":{},"81":{},"82":{},"83":{},"84":{},"99":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"115":{},"116":{},"118":{},"119":{},"123":{},"127":{},"128":{},"129":{},"131":{},"132":{},"138":{},"140":{},"141":{},"142":{},"145":{},"148":{},"152":{},"154":{},"155":{},"158":{},"160":{},"163":{},"164":{},"167":{},"168":{},"171":{},"175":{},"179":{},"182":{},"183":{},"184":{},"186":{},"188":{},"191":{},"193":{},"205":{},"207":{},"210":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"224":{},"225":{},"227":{},"229":{},"237":{},"242":{},"244":{},"245":{},"247":{},"251":{},"253":{},"254":{},"255":{},"257":{},"261":{},"262":{},"267":{},"269":{},"270":{},"271":{}},"component":{}}],["onboard",{"_index":331,"title":{},"name":{},"text":{"2":{},"9":{},"59":{}},"component":{}}],["onboarding[1",{"_index":1489,"title":{},"name":{},"text":{"9":{}},"component":{}}],["onc",{"_index":802,"title":{},"name":{},"text":{"4":{},"21":{},"23":{},"29":{},"30":{},"33":{},"67":{},"75":{},"76":{},"99":{},"104":{},"119":{},"122":{},"162":{},"165":{},"205":{},"218":{},"227":{},"242":{},"253":{}},"component":{}}],["one_nat_gateway_per_az",{"_index":3539,"title":{},"name":{},"text":{"73":{}},"component":{}}],["one—​and",{"_index":1099,"title":{},"name":{},"text":{"6":{}},"component":{}}],["one—​obvi",{"_index":1101,"title":{},"name":{},"text":{"6":{}},"component":{}}],["one’",{"_index":557,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ongo",{"_index":3239,"title":{"151-2":{}},"name":{},"text":{"67":{},"69":{},"108":{},"151":{}},"component":{}}],["ongoing/not",{"_index":6405,"title":{},"name":{},"text":{"242":{}},"component":{}}],["onlin",{"_index":81,"title":{"216-7":{},"217-6":{}},"name":{},"text":{"1":{},"2":{},"57":{},"216":{},"217":{}},"component":{}}],["onto",{"_index":4902,"title":{"195-17":{}},"name":{},"text":{"139":{},"141":{},"160":{},"195":{},"204":{},"213":{},"216":{},"224":{},"225":{},"227":{},"230":{},"232":{}},"component":{}}],["onw",{"_index":5842,"title":{},"name":{},"text":{"193":{},"252":{}},"component":{}}],["onward",{"_index":4424,"title":{},"name":{},"text":{"108":{}},"component":{}}],["op",{"_index":1971,"title":{},"name":{},"text":{"30":{},"52":{},"57":{},"73":{},"78":{},"86":{},"196":{}},"component":{}}],["opar",{"_index":2438,"title":{},"name":{},"text":{"49":{}},"component":{}}],["open",{"_index":500,"title":{"76-3":{},"177-4":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"42":{},"43":{},"48":{},"49":{},"51":{},"55":{},"56":{},"57":{},"58":{},"60":{},"63":{},"66":{},"67":{},"68":{},"73":{},"75":{},"76":{},"81":{},"84":{},"100":{},"103":{},"104":{},"105":{},"111":{},"113":{},"115":{},"118":{},"119":{},"120":{},"122":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"139":{},"140":{},"141":{},"142":{},"144":{},"148":{},"149":{},"151":{},"152":{},"154":{},"158":{},"160":{},"161":{},"162":{},"165":{},"168":{},"176":{},"177":{},"179":{},"182":{},"183":{},"186":{},"210":{},"213":{},"214":{},"216":{},"217":{},"221":{},"222":{},"223":{},"224":{},"225":{},"227":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"242":{},"244":{},"245":{},"253":{},"255":{},"257":{},"259":{},"260":{},"262":{},"265":{}},"component":{}}],["openapi",{"_index":2018,"title":{},"name":{},"text":{"32":{},"58":{},"65":{},"167":{},"272":{}},"component":{}}],["openid",{"_index":3415,"title":{},"name":{},"text":{"73":{},"122":{},"179":{},"204":{}},"component":{}}],["openshift",{"_index":384,"title":{"40":{},"188":{},"193":{},"32-17":{},"73-24":{},"75-4":{},"76-6":{},"188-6":{},"247-1":{}},"name":{},"text":{"2":{},"4":{},"14":{},"15":{},"18":{},"19":{},"22":{},"23":{},"24":{},"25":{},"28":{},"29":{},"30":{},"32":{},"34":{},"40":{},"41":{},"43":{},"45":{},"48":{},"50":{},"56":{},"57":{},"60":{},"63":{},"65":{},"66":{},"73":{},"75":{},"76":{},"80":{},"81":{},"86":{},"104":{},"118":{},"119":{},"122":{},"124":{},"127":{},"129":{},"139":{},"142":{},"188":{},"192":{},"193":{},"194":{},"195":{},"196":{},"247":{},"248":{},"250":{},"251":{},"255":{},"270":{}},"component":{}}],["openshift.adoc",{"_index":5813,"title":{},"name":{},"text":{"186":{}},"component":{}}],["openshift.example.com",{"_index":2078,"title":{},"name":{},"text":{"40":{}},"component":{}}],["openshiftapiurl",{"_index":855,"title":{},"name":{},"text":{"4":{}},"component":{}}],["openshiftsdn",{"_index":3754,"title":{},"name":{},"text":{"73":{}},"component":{}}],["openshift’",{"_index":4010,"title":{},"name":{},"text":{"81":{}},"component":{}}],["openssl",{"_index":3258,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["openstreetmap",{"_index":6289,"title":{},"name":{},"text":{"230":{}},"component":{}}],["oper",{"_index":93,"title":{"126":{},"209":{},"257":{},"32-13":{},"32-20":{},"49-8":{},"49-9":{},"49-16":{},"49-19":{},"49-22":{},"49-27":{},"49-30":{},"49-33":{},"49-59":{},"49-62":{},"55-2":{},"55-3":{},"81-7":{},"167-12":{},"167-19":{},"195-16":{},"207-4":{},"237-4":{},"237-9":{},"242-10":{}},"name":{"257":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"12":{},"14":{},"21":{},"23":{},"29":{},"30":{},"31":{},"32":{},"40":{},"44":{},"45":{},"47":{},"48":{},"49":{},"50":{},"52":{},"55":{},"56":{},"61":{},"63":{},"65":{},"66":{},"73":{},"78":{},"80":{},"81":{},"84":{},"85":{},"86":{},"88":{},"99":{},"103":{},"104":{},"108":{},"119":{},"122":{},"123":{},"124":{},"125":{},"126":{},"128":{},"138":{},"142":{},"159":{},"164":{},"166":{},"167":{},"175":{},"181":{},"191":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"202":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"214":{},"216":{},"237":{},"242":{},"244":{},"251":{},"252":{},"253":{},"255":{},"257":{},"258":{},"260":{},"261":{},"268":{},"271":{}},"component":{}}],["operation_fail",{"_index":6784,"title":{},"name":{},"text":{"271":{}},"component":{}}],["operational_sub",{"_index":1769,"title":{},"name":{},"text":{"21":{}},"component":{}}],["operator.crunchydata.com/pgbackrest",{"_index":1729,"title":{},"name":{},"text":{"21":{}},"component":{}}],["operator.crunchydata.com/v1beta1",{"_index":6530,"title":{},"name":{},"text":{"258":{}},"component":{}}],["operator’",{"_index":5928,"title":{},"name":{},"text":{"195":{}},"component":{}}],["opportun",{"_index":4004,"title":{},"name":{},"text":{"81":{},"155":{},"268":{}},"component":{}}],["oppos",{"_index":6172,"title":{},"name":{},"text":{"212":{},"217":{},"218":{}},"component":{}}],["opposit",{"_index":5502,"title":{},"name":{},"text":{"166":{},"167":{}},"component":{}}],["opt",{"_index":4655,"title":{},"name":{},"text":{"133":{}},"component":{}}],["opt/repositories/pgadmin",{"_index":2716,"title":{},"name":{},"text":{"56":{}},"component":{}}],["optim",{"_index":35,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"26":{},"30":{},"32":{},"34":{},"44":{},"56":{},"74":{},"81":{},"116":{},"125":{},"128":{},"167":{},"205":{}},"component":{}}],["option",{"_index":627,"title":{"232":{},"42-2":{},"43-2":{},"167-26":{}},"name":{"232":{}},"text":{"4":{},"6":{},"10":{},"13":{},"21":{},"22":{},"24":{},"25":{},"28":{},"29":{},"30":{},"33":{},"40":{},"42":{},"43":{},"46":{},"51":{},"52":{},"56":{},"57":{},"66":{},"69":{},"70":{},"73":{},"104":{},"119":{},"120":{},"122":{},"125":{},"128":{},"129":{},"135":{},"138":{},"140":{},"141":{},"142":{},"148":{},"149":{},"154":{},"160":{},"161":{},"163":{},"166":{},"167":{},"173":{},"181":{},"182":{},"183":{},"186":{},"195":{},"205":{},"211":{},"213":{},"214":{},"218":{},"223":{},"226":{},"230":{},"231":{},"232":{},"233":{},"235":{},"238":{},"241":{},"242":{},"244":{},"246":{},"253":{},"254":{},"257":{},"258":{},"260":{},"262":{},"265":{},"271":{}},"component":{}}],["oracl",{"_index":3206,"title":{},"name":{},"text":{"66":{},"67":{}},"component":{}}],["orchestr",{"_index":519,"title":{"48-5":{},"81-2":{}},"name":{},"text":{"2":{},"48":{},"49":{},"57":{},"67":{},"81":{},"194":{},"199":{}},"component":{}}],["order",{"_index":462,"title":{"149":{},"138-5":{},"149-1":{},"149-2":{},"216-7":{},"216-11":{},"216-14":{},"217-6":{}},"name":{},"text":{"2":{},"8":{},"9":{},"19":{},"52":{},"57":{},"59":{},"61":{},"67":{},"68":{},"70":{},"80":{},"99":{},"103":{},"105":{},"108":{},"128":{},"134":{},"135":{},"136":{},"138":{},"142":{},"145":{},"147":{},"148":{},"149":{},"151":{},"152":{},"154":{},"155":{},"159":{},"160":{},"196":{},"202":{},"205":{},"216":{},"217":{},"224":{},"237":{},"240":{},"242":{},"244":{},"256":{},"257":{},"267":{},"272":{}},"component":{}}],["order_d",{"_index":4750,"title":{},"name":{},"text":{"136":{}},"component":{}}],["order_id",{"_index":4754,"title":{},"name":{},"text":{"136":{}},"component":{}}],["order_numb",{"_index":4749,"title":{},"name":{},"text":{"136":{}},"component":{}}],["order_typ",{"_index":4752,"title":{},"name":{},"text":{"136":{}},"component":{}}],["order_type_code_equ",{"_index":4779,"title":{},"name":{},"text":{"136":{}},"component":{}}],["order_type_id",{"_index":4751,"title":{},"name":{},"text":{"136":{}},"component":{}}],["orderexecut",{"_index":4090,"title":{},"name":{},"text":{"83":{}},"component":{}}],["orderid",{"_index":5334,"title":{},"name":{},"text":{"160":{}},"component":{}}],["ordersfil",{"_index":5023,"title":{},"name":{},"text":{"141":{}},"component":{}}],["org.postgresql.driv",{"_index":5663,"title":{},"name":{},"text":{"168":{}},"component":{}}],["organ",{"_index":218,"title":{"154":{}},"name":{},"text":{"2":{},"6":{},"9":{},"12":{},"14":{},"45":{},"49":{},"52":{},"55":{},"59":{},"65":{},"67":{},"78":{},"81":{},"99":{},"108":{},"117":{},"119":{},"120":{},"154":{},"163":{},"164":{},"226":{},"244":{},"262":{},"269":{}},"component":{}}],["organis",{"_index":4228,"title":{},"name":{},"text":{"99":{}},"component":{}}],["organiz",{"_index":373,"title":{},"name":{},"text":{"2":{},"44":{},"59":{},"99":{},"108":{},"202":{}},"component":{}}],["organization’",{"_index":3343,"title":{},"name":{},"text":{"67":{},"73":{},"99":{}},"component":{}}],["orient",{"_index":1063,"title":{},"name":{},"text":{"6":{},"49":{},"61":{}},"component":{}}],["origin",{"_index":436,"title":{},"name":{},"text":{"2":{},"4":{},"9":{},"22":{},"23":{},"24":{},"57":{},"58":{},"73":{},"78":{},"87":{},"105":{},"108":{},"119":{},"129":{},"138":{},"191":{},"194":{},"196":{},"204":{},"208":{},"209":{},"266":{},"271":{}},"component":{}}],["origin_is_opt",{"_index":5979,"title":{},"name":{},"text":{"196":{}},"component":{}}],["originrequestd",{"_index":6700,"title":{},"name":{},"text":{"269":{}},"component":{}}],["os",{"_index":880,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["osd",{"_index":1819,"title":{},"name":{},"text":{"23":{}},"component":{}}],["osmomysl",{"_index":4710,"title":{},"name":{},"text":{"135":{}},"component":{}}],["osplm.ini",{"_index":3407,"title":{},"name":{},"text":{"73":{},"192":{}},"component":{}}],["other",{"_index":1331,"title":{},"name":{},"text":{"6":{},"10":{},"14":{},"66":{},"81":{},"126":{},"171":{},"173":{},"229":{},"245":{},"254":{},"267":{},"272":{}},"component":{}}],["otherwis",{"_index":1505,"title":{},"name":{},"text":{"10":{},"32":{},"55":{},"57":{},"58":{},"103":{},"161":{}},"component":{}}],["otp",{"_index":5140,"title":{"144":{}},"name":{"144":{}},"text":{"144":{},"146":{},"184":{}},"component":{}}],["otp.adoc",{"_index":5153,"title":{},"name":{},"text":{"146":{}},"component":{}}],["otp[1",{"_index":5801,"title":{},"name":{},"text":{"184":{}},"component":{}}],["out",{"_index":387,"title":{"270-12":{}},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"26":{},"28":{},"30":{},"31":{},"45":{},"46":{},"67":{},"73":{},"74":{},"103":{},"108":{},"113":{},"118":{},"127":{},"131":{},"134":{},"135":{},"136":{},"139":{},"141":{},"142":{},"144":{},"154":{},"159":{},"160":{},"164":{},"165":{},"168":{},"191":{},"202":{},"223":{},"224":{},"225":{},"258":{},"264":{},"270":{},"271":{},"272":{}},"component":{}}],["outbound",{"_index":1867,"title":{"124-9":{}},"name":{},"text":{"25":{},"104":{},"122":{},"124":{}},"component":{}}],["outcom",{"_index":1280,"title":{},"name":{},"text":{"6":{},"259":{},"261":{}},"component":{}}],["outdat",{"_index":1611,"title":{"242-11":{}},"name":{},"text":{"15":{},"16":{},"44":{},"164":{},"205":{},"235":{},"242":{},"253":{}},"component":{}}],["outgo",{"_index":4600,"title":{},"name":{},"text":{"127":{},"202":{},"212":{}},"component":{}}],["outlin",{"_index":1905,"title":{},"name":{},"text":{"26":{},"41":{},"67":{},"74":{},"99":{},"205":{}},"component":{}}],["outlook",{"_index":1228,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["output",{"_index":700,"title":{"105-7":{},"159-4":{},"162-9":{},"216-12":{}},"name":{},"text":{"4":{},"16":{},"17":{},"52":{},"103":{},"104":{},"105":{},"128":{},"131":{},"134":{},"135":{},"136":{},"139":{},"140":{},"159":{},"162":{},"166":{},"167":{},"179":{},"181":{},"214":{},"216":{},"217":{},"221":{},"222":{},"253":{},"261":{},"269":{}},"component":{}}],["output.csv",{"_index":5155,"title":{},"name":{},"text":{"148":{}},"component":{}}],["output.docx",{"_index":5160,"title":{},"name":{},"text":{"149":{}},"component":{}}],["output:nul",{"_index":4736,"title":{},"name":{},"text":{"135":{}},"component":{}}],["outsid",{"_index":1575,"title":{"75-4":{},"76-6":{},"188-6":{},"247-1":{}},"name":{},"text":{"15":{},"16":{},"30":{},"33":{},"45":{},"75":{},"76":{},"99":{},"104":{},"105":{},"124":{},"141":{},"162":{},"182":{},"188":{},"197":{},"237":{},"248":{},"269":{},"272":{}},"component":{}}],["ov",{"_index":1661,"title":{},"name":{},"text":{"19":{}},"component":{}}],["over",{"_index":85,"title":{},"name":{},"text":{"1":{},"9":{},"14":{},"32":{},"34":{},"49":{},"66":{},"67":{},"73":{},"107":{},"162":{},"184":{},"197":{},"205":{},"226":{},"262":{}},"component":{}}],["overal",{"_index":340,"title":{},"name":{},"text":{"2":{},"6":{},"67":{},"81":{},"108":{},"116":{},"119":{},"258":{}},"component":{}}],["overflow",{"_index":3252,"title":{},"name":{},"text":{"67":{},"265":{}},"component":{}}],["overlap",{"_index":4199,"title":{},"name":{},"text":{"99":{}},"component":{}}],["overlay",{"_index":2787,"title":{},"name":{},"text":{"58":{},"230":{}},"component":{}}],["overrid",{"_index":4234,"title":{},"name":{},"text":{"99":{}},"component":{}}],["overview",{"_index":586,"title":{"69":{},"70":{},"9-1":{},"12-1":{},"20-1":{},"27-1":{},"28-1":{},"29-1":{},"32-1":{},"37-1":{},"38-1":{},"42-1":{},"43-1":{},"44-1":{},"48-1":{},"51-1":{},"51-3":{},"54-1":{},"55-1":{},"59-1":{},"64-1":{},"66-1":{},"71-1":{},"74-1":{},"77-1":{},"82-1":{},"83-1":{},"84-2":{},"99-1":{},"100-1":{},"110-1":{},"111-1":{},"116-1":{},"121-1":{},"122-1":{},"125-1":{},"128-1":{},"130-1":{},"131-1":{},"146-1":{},"147-1":{},"151-1":{},"152-1":{},"153-1":{},"156-1":{},"157-1":{},"158-1":{},"160-1":{},"161-1":{},"162-1":{},"165-1":{},"166-1":{},"167-1":{},"170-1":{},"171-1":{},"178-1":{},"179-1":{},"180-1":{},"182-1":{},"184-1":{},"185-1":{},"186-1":{},"187-1":{},"191-1":{},"210-1":{},"211-1":{},"212-1":{},"213-1":{},"214-1":{},"215-1":{},"216-1":{},"217-1":{},"218-1":{},"223-1":{},"230-1":{},"242-1":{},"243-1":{},"259-1":{},"260-1":{},"261-1":{},"263-1":{}},"name":{"3":{},"7":{},"11":{},"20":{},"27":{},"37":{},"38":{},"41":{},"44":{},"64":{},"69":{},"70":{},"71":{},"74":{},"77":{},"78":{},"84":{},"85":{},"87":{},"88":{},"95":{},"114":{},"116":{},"121":{},"123":{},"133":{},"137":{},"146":{},"147":{},"153":{},"157":{},"170":{},"172":{},"177":{},"178":{},"185":{},"187":{},"191":{},"194":{},"197":{},"199":{},"204":{},"208":{},"215":{},"219":{},"220":{},"238":{},"243":{},"248":{},"251":{},"263":{}},"text":{"9":{},"12":{},"23":{},"28":{},"29":{},"32":{},"37":{},"42":{},"43":{},"44":{},"51":{},"55":{},"59":{},"66":{},"100":{},"111":{},"122":{},"125":{},"126":{},"128":{},"129":{},"131":{},"151":{},"152":{},"153":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"171":{},"176":{},"179":{},"182":{},"184":{},"185":{},"186":{},"187":{},"191":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"223":{},"230":{},"242":{},"244":{},"259":{},"260":{},"261":{}},"component":{}}],["overview.adoc",{"_index":2759,"title":{},"name":{},"text":{"57":{}},"component":{}}],["overview_",{"_index":6403,"title":{},"name":{},"text":{"242":{}},"component":{}}],["overwrit",{"_index":1739,"title":{"268":{},"268-6":{}},"name":{},"text":{"21":{},"58":{},"67":{},"142":{},"268":{}},"component":{}}],["overwritten",{"_index":6131,"title":{},"name":{},"text":{"207":{}},"component":{}}],["ovn",{"_index":1852,"title":{},"name":{},"text":{"24":{}},"component":{}}],["ovyjddeq_kea2rrgl9ckylflzgm_",{"_index":5699,"title":{},"name":{},"text":{"179":{}},"component":{}}],["owasp",{"_index":1371,"title":{},"name":{},"text":{"6":{},"67":{},"99":{}},"component":{}}],["own",{"_index":404,"title":{},"name":{},"text":{"2":{},"44":{},"67":{},"80":{},"83":{},"84":{},"99":{}},"component":{}}],["owner",{"_index":111,"title":{"124-6":{}},"name":{},"text":{"1":{},"2":{},"52":{},"73":{},"78":{},"83":{},"99":{},"108":{},"115":{},"124":{},"142":{},"164":{},"181":{},"242":{},"269":{}},"component":{}}],["ownership",{"_index":42,"title":{"138-7":{},"138-13":{},"142-6":{},"142-11":{}},"name":{},"text":{"1":{},"2":{},"44":{},"134":{},"138":{},"140":{},"142":{}},"component":{}}],["ownership.nam",{"_index":5097,"title":{},"name":{},"text":{"142":{}},"component":{}}],["ownership.ownership_id",{"_index":5096,"title":{},"name":{},"text":{"142":{}},"component":{}}],["ownership_id",{"_index":4663,"title":{},"name":{},"text":{"134":{},"142":{}},"component":{}}],["ownershipid",{"_index":4981,"title":{},"name":{},"text":{"140":{}},"component":{}}],["p",{"_index":3642,"title":{},"name":{},"text":{"73":{}},"component":{}}],["p14dt1h30m",{"_index":6191,"title":{},"name":{},"text":{"213":{}},"component":{}}],["p1d",{"_index":6121,"title":{},"name":{},"text":{"205":{}},"component":{}}],["p2m",{"_index":5326,"title":{},"name":{},"text":{"159":{}},"component":{}}],["p7",{"_index":1511,"title":{"12":{},"12-2":{},"269-8":{}},"name":{"12":{}},"text":{"12":{},"105":{},"227":{},"269":{}},"component":{}}],["p7b",{"_index":1976,"title":{},"name":{},"text":{"30":{}},"component":{}}],["p=abcdefghijkl",{"_index":1887,"title":{},"name":{},"text":{"25":{}},"component":{}}],["p=abcdefghijklmnopqrstuvwxyz",{"_index":1886,"title":{},"name":{},"text":{"25":{}},"component":{}}],["p_file_nam",{"_index":4326,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["p_load_table_from_csv",{"_index":2577,"title":{},"name":{},"text":{"52":{},"107":{},"138":{}},"component":{}}],["p_load_table_from_csv('factor','${dataloadpath}14",{"_index":4380,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('factor','${dataloadpath}15",{"_index":4385,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('koatuu','${dataloadpath}03",{"_index":4341,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('kopfg','${dataloadpath}05",{"_index":4373,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('licenses','${dataloadpath}licenses.csv",{"_index":2579,"title":{},"name":{},"text":{"52":{}},"component":{}}],["p_load_table_from_csv('ownership','${dataloadpath}dict_formy_vlasnosti.csv",{"_index":4863,"title":{},"name":{},"text":{"138":{}},"component":{}}],["p_load_table_from_csv('refusal_reason','${dataloadpath}02",{"_index":4368,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('research",{"_index":4336,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('research','${dataloadpath}01",{"_index":4364,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('research','${dataloadpath}dict_typy_doslidzhen.csv",{"_index":4866,"title":{},"name":{},"text":{"138":{}},"component":{}}],["p_load_table_from_csv('solution_type','${dataloadpath}06",{"_index":4376,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('staff','d:\\postgresql\\csv\\staff.csv",{"_index":4358,"title":{},"name":{},"text":{"107":{}},"component":{}}],["p_load_table_from_csv('staff_status','${dataloadpath}dict_status_spivrobitnyka.csv",{"_index":4861,"title":{},"name":{},"text":{"138":{}},"component":{}}],["p_table_column",{"_index":4327,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["p_table_nam",{"_index":4325,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["p_target_table_column",{"_index":4328,"title":{},"name":{},"text":{"107":{},"138":{}},"component":{}}],["pack",{"_index":6480,"title":{},"name":{},"text":{"254":{}},"component":{}}],["packag",{"_index":905,"title":{"266-5":{}},"name":{},"text":{"4":{},"14":{},"44":{},"49":{},"62":{},"81":{},"254":{},"262":{},"266":{},"269":{}},"component":{}}],["packet",{"_index":4140,"title":{},"name":{},"text":{"84":{}},"component":{}}],["pad",{"_index":3266,"title":{},"name":{},"text":{"67":{},"183":{}},"component":{}}],["pade",{"_index":6670,"title":{},"name":{},"text":{"269":{}},"component":{}}],["page",{"_index":18,"title":{"9-6":{},"14-2":{},"28-4":{},"58-25":{},"60-3":{},"65-2":{},"69-1":{},"70-1":{},"70-2":{},"105-10":{},"115-6":{},"124-10":{},"145-1":{},"227-3":{},"230-2":{}},"name":{},"text":{"1":{},"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"37":{},"40":{},"42":{},"43":{},"44":{},"46":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"78":{},"80":{},"81":{},"85":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"171":{},"173":{},"175":{},"176":{},"177":{},"179":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"190":{},"191":{},"192":{},"194":{},"195":{},"196":{},"197":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"223":{},"226":{},"227":{},"229":{},"230":{},"231":{},"233":{},"235":{},"236":{},"237":{},"238":{},"242":{},"244":{},"246":{},"248":{},"253":{},"254":{},"255":{},"256":{},"257":{},"259":{},"260":{},"261":{},"262":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["page\":1",{"_index":5135,"title":{},"name":{},"text":{"142":{}},"component":{}}],["page/tab",{"_index":6365,"title":{},"name":{},"text":{"234":{},"245":{}},"component":{}}],["page?pagesize=10&pageno=0",{"_index":5602,"title":{},"name":{},"text":{"167":{}},"component":{}}],["page_size\":25",{"_index":5134,"title":{},"name":{},"text":{"142":{}},"component":{}}],["pageno",{"_index":5601,"title":{},"name":{},"text":{"167":{}},"component":{}}],["pages",{"_index":5600,"title":{},"name":{},"text":{"167":{}},"component":{}}],["pagin",{"_index":3358,"title":{"71":{},"143":{},"151":{},"152":{},"151-2":{},"151-3":{},"152-2":{},"152-3":{},"167-18":{}},"name":{"143":{},"151":{},"152":{}},"text":{"69":{},"70":{},"71":{},"84":{},"143":{},"145":{},"150":{},"151":{},"152":{},"167":{},"242":{},"272":{}},"component":{}}],["pagination=\"non",{"_index":5605,"title":{},"name":{},"text":{"167":{}},"component":{}}],["pagination=\"offset",{"_index":5579,"title":{},"name":{},"text":{"167":{}},"component":{}}],["pagination=\"pag",{"_index":5598,"title":{},"name":{},"text":{"167":{}},"component":{}}],["pagination[1",{"_index":5136,"title":{},"name":{},"text":{"143":{},"151":{},"152":{}},"component":{}}],["paid",{"_index":6225,"title":{},"name":{},"text":{"216":{}},"component":{}}],["pair",{"_index":300,"title":{},"name":{},"text":{"2":{},"34":{},"52":{},"58":{},"78":{},"124":{},"154":{},"155":{},"158":{},"161":{},"196":{},"216":{},"221":{},"222":{}},"component":{}}],["pair/aw",{"_index":3573,"title":{},"name":{},"text":{"73":{}},"component":{}}],["panel",{"_index":479,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"17":{},"34":{},"58":{},"60":{},"100":{},"103":{},"104":{},"105":{},"117":{},"118":{},"123":{},"124":{},"125":{},"139":{},"140":{},"141":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"173":{},"183":{},"186":{},"202":{},"210":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"227":{},"232":{},"259":{},"260":{},"261":{},"264":{},"270":{}},"component":{}}],["paper",{"_index":4408,"title":{},"name":{},"text":{"108":{}},"component":{}}],["parallel",{"_index":4695,"title":{},"name":{},"text":{"135":{},"179":{},"205":{}},"component":{}}],["param",{"_index":5589,"title":{},"name":{},"text":{"167":{}},"component":{}}],["paramet",{"_index":744,"title":{"50-4":{},"50-5":{},"50-7":{},"60-12":{},"60-13":{},"82-4":{},"83-4":{},"142-11":{},"142-12":{},"158-3":{},"167-40":{},"269-7":{},"269-10":{}},"name":{},"text":{"4":{},"6":{},"9":{},"15":{},"16":{},"17":{},"21":{},"22":{},"30":{},"34":{},"50":{},"52":{},"55":{},"56":{},"58":{},"60":{},"61":{},"62":{},"67":{},"73":{},"80":{},"82":{},"83":{},"84":{},"86":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"115":{},"117":{},"119":{},"120":{},"122":{},"123":{},"124":{},"126":{},"127":{},"128":{},"131":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"152":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"167":{},"173":{},"179":{},"181":{},"182":{},"183":{},"186":{},"189":{},"195":{},"205":{},"208":{},"212":{},"216":{},"217":{},"221":{},"222":{},"229":{},"230":{},"231":{},"242":{},"245":{},"246":{},"253":{},"254":{},"255":{},"257":{},"258":{},"262":{},"264":{},"267":{},"268":{},"269":{},"270":{}},"component":{}}],["parameter/path",{"_index":4570,"title":{},"name":{},"text":{"124":{}},"component":{}}],["parameters/templ",{"_index":790,"title":{},"name":{},"text":{"4":{}},"component":{}}],["parameters/valu",{"_index":6446,"title":{},"name":{},"text":{"253":{}},"component":{}}],["paramount",{"_index":4187,"title":{},"name":{},"text":{"99":{}},"component":{}}],["params.controls[0].indexpattern",{"_index":4591,"title":{},"name":{},"text":{"126":{}},"component":{}}],["parent",{"_index":1151,"title":{"216-5":{},"216-6":{}},"name":{},"text":{"6":{},"47":{},"59":{},"136":{},"210":{},"216":{},"217":{},"218":{},"259":{},"260":{},"261":{}},"component":{}}],["parent[1",{"_index":6210,"title":{},"name":{},"text":{"216":{},"261":{}},"component":{}}],["parent[2",{"_index":6230,"title":{},"name":{},"text":{"217":{}},"component":{}}],["parenthes",{"_index":5118,"title":{},"name":{},"text":{"142":{},"166":{},"167":{},"237":{}},"component":{}}],["pars",{"_index":4496,"title":{},"name":{},"text":{"119":{}},"component":{}}],["part",{"_index":204,"title":{"162-5":{},"269-8":{}},"name":{},"text":{"1":{},"2":{},"6":{},"22":{},"23":{},"25":{},"30":{},"31":{},"41":{},"55":{},"59":{},"62":{},"66":{},"70":{},"99":{},"100":{},"101":{},"108":{},"122":{},"131":{},"137":{},"138":{},"141":{},"153":{},"154":{},"155":{},"162":{},"164":{},"167":{},"173":{},"182":{},"195":{},"205":{},"206":{},"207":{},"208":{},"210":{},"216":{},"220":{},"224":{},"225":{},"257":{},"262":{},"265":{},"267":{},"269":{},"270":{},"271":{}},"component":{}}],["parti",{"_index":406,"title":{},"name":{},"text":{"2":{},"9":{},"47":{},"49":{},"58":{},"67":{},"68":{},"85":{},"88":{},"99":{},"122":{},"123":{},"124":{},"191":{},"194":{},"195":{},"197":{},"199":{},"204":{},"269":{},"272":{}},"component":{}}],["partial",{"_index":2299,"title":{"161":{},"161-13":{},"167-30":{}},"name":{"161":{}},"text":{"49":{},"84":{},"119":{},"161":{},"167":{},"253":{}},"component":{}}],["partials/optimist",{"_index":6652,"title":{},"name":{},"text":{"268":{}},"component":{}}],["partialupd",{"_index":4131,"title":{},"name":{},"text":{"84":{},"161":{},"167":{},"207":{}},"component":{}}],["particip",{"_index":1222,"title":{"66-13":{}},"name":{},"text":{"6":{},"46":{},"66":{},"123":{},"154":{},"159":{},"161":{},"216":{},"217":{}},"component":{}}],["participants.adoc",{"_index":3213,"title":{},"name":{},"text":{"66":{},"264":{}},"component":{}}],["particular",{"_index":491,"title":{},"name":{},"text":{"2":{},"32":{},"57":{},"59":{},"66":{},"67":{},"105":{},"127":{},"154":{},"155":{},"160":{},"164":{},"181":{},"195":{},"197":{},"222":{}},"component":{}}],["particularli",{"_index":256,"title":{},"name":{},"text":{"2":{},"34":{},"113":{},"238":{}},"component":{}}],["partit",{"_index":5931,"title":{},"name":{},"text":{"195":{}},"component":{}}],["partner",{"_index":4294,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["partner_token",{"_index":4285,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["pass",{"_index":509,"title":{"9-5":{},"162-10":{}},"name":{},"text":{"2":{},"6":{},"9":{},"25":{},"46":{},"52":{},"58":{},"67":{},"73":{},"100":{},"105":{},"115":{},"118":{},"119":{},"122":{},"123":{},"124":{},"131":{},"140":{},"154":{},"158":{},"159":{},"160":{},"162":{},"196":{},"197":{},"213":{},"221":{},"222":{},"226":{},"242":{},"253":{},"257":{},"267":{}},"component":{}}],["passport",{"_index":4540,"title":{},"name":{},"text":{"120":{},"135":{},"136":{},"160":{}},"component":{}}],["passport_foreign",{"_index":4725,"title":{},"name":{},"text":{"135":{}},"component":{}}],["password",{"_index":693,"title":{"33-5":{}},"name":{},"text":{"4":{},"9":{},"13":{},"14":{},"17":{},"28":{},"30":{},"33":{},"57":{},"60":{},"67":{},"73":{},"81":{},"104":{},"115":{},"118":{},"120":{},"122":{},"124":{},"168":{},"179":{},"182":{},"184":{},"195":{},"258":{}},"component":{}}],["password\":\"test",{"_index":3763,"title":{},"name":{},"text":{"73":{}},"component":{}}],["password=xxxxxx",{"_index":1778,"title":{},"name":{},"text":{"21":{}},"component":{}}],["password={password",{"_index":5659,"title":{},"name":{},"text":{"168":{}},"component":{}}],["past",{"_index":743,"title":{},"name":{},"text":{"4":{},"15":{},"18":{},"57":{},"73":{},"105":{},"127":{},"129":{},"241":{},"254":{},"265":{}},"component":{}}],["patch",{"_index":1301,"title":{},"name":{},"text":{"6":{},"22":{},"66":{},"73":{},"161":{},"244":{}},"component":{}}],["patch='{\"spec",{"_index":3809,"title":{},"name":{},"text":{"73":{}},"component":{}}],["path",{"_index":685,"title":{},"name":{},"text":{"4":{},"6":{},"21":{},"40":{},"52":{},"56":{},"57":{},"67":{},"73":{},"75":{},"104":{},"105":{},"107":{},"113":{},"122":{},"124":{},"127":{},"128":{},"129":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"179":{},"186":{},"192":{},"195":{},"201":{},"206":{},"214":{},"230":{},"255":{},"269":{},"272":{}},"component":{}}],["path/to/folder/certif",{"_index":3818,"title":{},"name":{},"text":{"73":{}},"component":{}}],["patroni",{"_index":6536,"title":{},"name":{},"text":{"258":{}},"component":{}}],["patronym",{"_index":4541,"title":{},"name":{},"text":{"120":{}},"component":{}}],["pattern",{"_index":1821,"title":{"205-2":{}},"name":{},"text":{"23":{},"49":{},"67":{},"83":{},"103":{},"108":{},"119":{},"126":{},"127":{},"140":{},"142":{},"197":{},"205":{},"206":{},"227":{},"270":{}},"component":{}}],["paus",{"_index":3095,"title":{},"name":{},"text":{"60":{},"167":{},"213":{},"258":{}},"component":{}}],["pay",{"_index":2066,"title":{},"name":{},"text":{"37":{},"115":{},"119":{},"138":{}},"component":{}}],["payload",{"_index":2176,"title":{},"name":{},"text":{"47":{},"51":{},"52":{},"58":{},"103":{},"104":{},"140":{},"141":{},"159":{},"161":{},"162":{},"206":{},"216":{},"271":{}},"component":{}}],["payload.nam",{"_index":2545,"title":{},"name":{},"text":{"51":{}},"component":{}}],["payload.prop('licens",{"_index":2597,"title":{},"name":{},"text":{"52":{}},"component":{}}],["payload['address",{"_index":5281,"title":{},"name":{},"text":{"159":{}},"component":{}}],["payload['cod",{"_index":5459,"title":{},"name":{},"text":{"162":{}},"component":{}}],["payload['edrp",{"_index":5279,"title":{},"name":{},"text":{"159":{}},"component":{}}],["payload['headnam",{"_index":5283,"title":{},"name":{},"text":{"159":{}},"component":{}}],["payload['id",{"_index":5461,"title":{},"name":{},"text":{"162":{}},"component":{}}],["payload['nam",{"_index":5277,"title":{},"name":{},"text":{"159":{},"162":{}},"component":{}}],["payload['personnelgrid",{"_index":5285,"title":{},"name":{},"text":{"159":{}},"component":{}}],["payload['st",{"_index":5456,"title":{},"name":{},"text":{"162":{}},"component":{}}],["payload_in_metadata",{"_index":5964,"title":{},"name":{},"text":{"196":{}},"component":{}}],["payloaddata",{"_index":2854,"title":{},"name":{},"text":{"58":{}},"component":{}}],["payment",{"_index":6206,"title":{"216-14":{}},"name":{},"text":{"216":{}},"component":{}}],["pc",{"_index":5156,"title":{},"name":{},"text":{"148":{},"149":{}},"component":{}}],["pcp_listen_address",{"_index":6556,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pcp_port",{"_index":6557,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pcp_socket_dir",{"_index":6559,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pd_processing_cons",{"_index":4046,"title":{},"name":{},"text":{"83":{}},"component":{}}],["pd_processing_consent.auto_generated_numb",{"_index":4085,"title":{},"name":{},"text":{"83":{}},"component":{}}],["pd_processing_consent_auto_generated_number_seq",{"_index":4084,"title":{},"name":{},"text":{"83":{}},"component":{}}],["pd_processing_consent_hst",{"_index":4080,"title":{},"name":{},"text":{"83":{}},"component":{}}],["pdf",{"_index":1513,"title":{"61":{},"61-3":{}},"name":{"61":{}},"text":{"12":{},"61":{},"105":{},"128":{},"132":{},"159":{},"198":{},"202":{},"227":{},"269":{}},"component":{}}],["pdf/css",{"_index":3113,"title":{},"name":{},"text":{"61":{}},"component":{}}],["pdf/imag",{"_index":3129,"title":{},"name":{},"text":{"61":{}},"component":{}}],["pdf/index.html.ftl",{"_index":3100,"title":{},"name":{},"text":{"61":{}},"component":{}}],["peculiar",{"_index":4502,"title":{},"name":{},"text":{"119":{}},"component":{}}],["peer",{"_index":5977,"title":{},"name":{},"text":{"196":{}},"component":{}}],["pem",{"_index":1983,"title":{},"name":{},"text":{"30":{},"75":{},"76":{},"188":{},"248":{},"255":{}},"component":{}}],["pen",{"_index":3230,"title":{},"name":{},"text":{"67":{}},"component":{}}],["pencil",{"_index":3884,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pend",{"_index":5164,"title":{},"name":{},"text":{"150":{},"205":{}},"component":{}}],["penetr",{"_index":3217,"title":{"67-15":{}},"name":{},"text":{"67":{}},"component":{}}],["peopl",{"_index":351,"title":{},"name":{},"text":{"2":{},"31":{}},"component":{}}],["per",{"_index":1397,"title":{"55":{}},"name":{},"text":{"6":{},"50":{},"55":{},"73":{},"105":{},"108":{},"145":{},"152":{},"242":{}},"component":{}}],["per_consum",{"_index":6852,"title":{},"name":{},"text":{"272":{}},"component":{}}],["perform",{"_index":245,"title":{"52":{},"52-6":{},"70-8":{},"197-10":{},"272-16":{}},"name":{},"text":{"2":{},"4":{},"6":{},"14":{},"18":{},"19":{},"21":{},"22":{},"23":{},"28":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"39":{},"40":{},"42":{},"43":{},"45":{},"49":{},"51":{},"52":{},"55":{},"56":{},"58":{},"59":{},"61":{},"62":{},"65":{},"66":{},"67":{},"70":{},"72":{},"73":{},"75":{},"76":{},"78":{},"81":{},"82":{},"83":{},"84":{},"99":{},"103":{},"104":{},"107":{},"108":{},"115":{},"116":{},"118":{},"119":{},"122":{},"123":{},"124":{},"128":{},"129":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"159":{},"160":{},"161":{},"167":{},"168":{},"182":{},"183":{},"186":{},"188":{},"191":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"201":{},"204":{},"205":{},"208":{},"214":{},"216":{},"217":{},"221":{},"222":{},"223":{},"237":{},"242":{},"248":{},"251":{},"255":{},"258":{},"260":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["period",{"_index":1150,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"21":{},"29":{},"30":{},"52":{},"55":{},"81":{},"119":{},"125":{},"127":{},"140":{},"141":{},"179":{},"213":{},"242":{},"253":{},"255":{}},"component":{}}],["perman",{"_index":4318,"title":{},"name":{},"text":{"105":{},"176":{}},"component":{}}],["permiss",{"_index":1492,"title":{"25-5":{},"73-9":{}},"name":{},"text":{"10":{},"12":{},"25":{},"30":{},"59":{},"72":{},"73":{},"81":{},"103":{},"105":{},"122":{},"138":{},"142":{},"155":{},"173":{},"181":{},"196":{},"208":{},"209":{}},"component":{}}],["permission_id",{"_index":4161,"title":{},"name":{},"text":{"84":{},"209":{}},"component":{}}],["permit",{"_index":2688,"title":{},"name":{},"text":{"55":{},"271":{}},"component":{}}],["persist",{"_index":1498,"title":{"97":{}},"name":{"97":{}},"text":{"10":{},"22":{},"49":{},"52":{},"56":{},"67":{},"189":{},"198":{},"258":{}},"component":{}}],["persistentvolumeclaim",{"_index":874,"title":{},"name":{},"text":{"4":{}},"component":{}}],["person",{"_index":520,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"12":{},"13":{},"33":{},"46":{},"51":{},"52":{},"58":{},"59":{},"83":{},"99":{},"108":{},"119":{},"120":{},"138":{},"140":{},"144":{},"154":{},"159":{},"161":{},"177":{},"195":{},"205":{}},"component":{}}],["person[key",{"_index":5272,"title":{},"name":{},"text":{"159":{}},"component":{}}],["person_edu_profil",{"_index":4746,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_profile.edu_organization_id",{"_index":4770,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_profile.person_edu_profile_id",{"_index":4774,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_profile.person_edu_state_id",{"_index":4772,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_profile.person_profile_id",{"_index":4769,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_profile_id",{"_index":4756,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_st",{"_index":4748,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_state.constant_cod",{"_index":4771,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_state.person_edu_state_id",{"_index":4773,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_state_equ",{"_index":4775,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_edu_state_id",{"_index":4747,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_full_nam",{"_index":4061,"title":{},"name":{},"text":{"83":{},"167":{}},"component":{}}],["person_gend",{"_index":4059,"title":{},"name":{},"text":{"83":{}},"component":{}}],["person_pass_numb",{"_index":4062,"title":{},"name":{},"text":{"83":{},"167":{}},"component":{}}],["person_profil",{"_index":4680,"title":{},"name":{},"text":{"135":{}},"component":{}}],["person_profile_equ",{"_index":4768,"title":{},"name":{},"text":{"136":{}},"component":{}}],["person_profile_equal_doc_type_birthday_foreign",{"_index":4737,"title":{},"name":{},"text":{"135":{}},"component":{}}],["person_profile_equal_doc_type_birthday_ua",{"_index":4727,"title":{},"name":{},"text":{"135":{}},"component":{}}],["person_profile_id",{"_index":4728,"title":{},"name":{},"text":{"135":{},"136":{}},"component":{}}],["personnel",{"_index":2745,"title":{"141-12":{},"141-21":{},"159-10":{}},"name":{},"text":{"57":{},"59":{},"99":{},"141":{},"159":{},"237":{}},"component":{}}],["personnel.bpmn",{"_index":4991,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.deleteprop(\"staffstatu",{"_index":5015,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.grid.hygienistflag",{"_index":5054,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.hasprop('hirestafffil",{"_index":5026,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.hasprop('hygienistcertificatefil",{"_index":5016,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.hasprop('ordersfil",{"_index":5021,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.json",{"_index":5037,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop(\"laboratoryid",{"_index":5012,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop(\"staffstatus\").prop(\"staffstatusid\").valu",{"_index":5014,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop(\"staffstatusid",{"_index":5013,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('hirestafffil",{"_index":5030,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('hirestafffile').elements().first",{"_index":5029,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('hirestafffile').elements().isempti",{"_index":5027,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('hygienistcertificatefil",{"_index":5020,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('hygienistcertificatefile').elements().first",{"_index":5019,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('hygienistcertificatefile').elements().isempti",{"_index":5017,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('ordersfil",{"_index":5025,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('ordersfile').elements().first",{"_index":5024,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personnel.prop('ordersfile').elements().isempti",{"_index":5022,"title":{},"name":{},"text":{"141":{}},"component":{}}],["personneldatazvitform",{"_index":5287,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelformdata",{"_index":5288,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelformdata.prop('address').valu",{"_index":5295,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelformdata.prop('edrpou').valu",{"_index":5299,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelformdata.prop('headname').valu",{"_index":5297,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelformdata.prop('name').valu",{"_index":5293,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelformdata.prop('personnelgrid').elements().each",{"_index":5300,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelgrid",{"_index":5010,"title":{},"name":{},"text":{"141":{},"159":{}},"component":{}}],["personnelgrid.add(person",{"_index":5276,"title":{},"name":{},"text":{"159":{}},"component":{}}],["personnelgrid.fixedtermcontractflag",{"_index":5064,"title":{},"name":{},"text":{"141":{}},"component":{}}],["persontyp",{"_index":5624,"title":{},"name":{},"text":{"167":{}},"component":{}}],["persontypevpoid\":\"0d756563",{"_index":5640,"title":{},"name":{},"text":{"167":{}},"component":{}}],["persontypevpoid\":\"2d89ffea",{"_index":5637,"title":{},"name":{},"text":{"167":{}},"component":{}}],["person’",{"_index":5344,"title":{},"name":{},"text":{"160":{}},"component":{}}],["perspect",{"_index":1261,"title":{},"name":{},"text":{"6":{},"143":{},"150":{},"151":{},"152":{},"154":{}},"component":{}}],["pessimist",{"_index":1227,"title":{},"name":{},"text":{"6":{}},"component":{}}],["petrov",{"_index":5250,"title":{},"name":{},"text":{"158":{}},"component":{}}],["pe’",{"_index":570,"title":{},"name":{},"text":{"2":{}},"component":{}}],["pg_hba",{"_index":6542,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pg_subscription_rel",{"_index":1773,"title":{},"name":{},"text":{"21":{}},"component":{}}],["pgadmin",{"_index":2003,"title":{"32-10":{}},"name":{},"text":{"32":{},"49":{},"56":{},"65":{},"189":{},"193":{},"250":{}},"component":{}}],["pgbackrest",{"_index":1552,"title":{},"name":{},"text":{"14":{},"21":{},"49":{},"258":{}},"component":{}}],["pgbackrest:centos8",{"_index":6534,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pgbackrest:ubi8",{"_index":1785,"title":{},"name":{},"text":{"21":{}},"component":{}}],["pgo",{"_index":1691,"title":{},"name":{},"text":{"21":{},"258":{}},"component":{}}],["pgpool",{"_index":1562,"title":{},"name":{},"text":{"14":{},"49":{},"258":{}},"component":{}}],["pgpool.conf",{"_index":6549,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pgpool/pgpool",{"_index":6544,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pgsql",{"_index":4324,"title":{},"name":{"107":{}},"text":{},"component":{}}],["pguser",{"_index":826,"title":{},"name":{},"text":{"4":{},"258":{}},"component":{}}],["phase",{"_index":1252,"title":{"67-11":{}},"name":{},"text":{"6":{},"41":{},"67":{},"103":{},"108":{},"140":{}},"component":{}}],["philosophi",{"_index":1072,"title":{},"name":{},"text":{"6":{}},"component":{}}],["phone",{"_index":4423,"title":{},"name":{},"text":{"108":{},"134":{},"140":{},"260":{},"269":{}},"component":{}}],["phone_numb",{"_index":4666,"title":{},"name":{},"text":{"134":{}},"component":{}}],["phonenumb",{"_index":3142,"title":{},"name":{},"text":{"61":{}},"component":{}}],["phrase",{"_index":2515,"title":{},"name":{},"text":{"51":{}},"component":{}}],["physic",{"_index":97,"title":{"168":{},"170":{},"138-3":{},"155-7":{},"164-5":{},"202-4":{}},"name":{},"text":{"1":{},"9":{},"52":{},"54":{},"59":{},"66":{},"84":{},"107":{},"134":{},"135":{},"136":{},"138":{},"155":{},"164":{},"168":{},"170":{},"202":{},"242":{},"244":{}},"component":{}}],["pick",{"_index":2041,"title":{},"name":{},"text":{"33":{}},"component":{}}],["pictogram",{"_index":3093,"title":{},"name":{},"text":{"60":{}},"component":{}}],["pictur",{"_index":3357,"title":{},"name":{},"text":{"67":{},"207":{}},"component":{}}],["pii",{"_index":4177,"title":{"99-17":{}},"name":{},"text":{"99":{}},"component":{}}],["pilot",{"_index":6001,"title":{},"name":{},"text":{"197":{}},"component":{}}],["ping",{"_index":1670,"title":{},"name":{},"text":{"19":{}},"component":{}}],["pipe",{"_index":4107,"title":{},"name":{},"text":{"84":{},"231":{}},"component":{}}],["pipel",{"_index":3317,"title":{},"name":{},"text":{"67":{}},"component":{}}],["pipelin",{"_index":539,"title":{"267-8":{}},"name":{},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"29":{},"30":{},"31":{},"33":{},"35":{},"41":{},"42":{},"43":{},"47":{},"56":{},"57":{},"62":{},"66":{},"67":{},"73":{},"84":{},"101":{},"104":{},"105":{},"115":{},"117":{},"118":{},"119":{},"122":{},"128":{},"129":{},"131":{},"132":{},"138":{},"142":{},"167":{},"168":{},"177":{},"186":{},"188":{},"190":{},"192":{},"193":{},"195":{},"237":{},"242":{},"248":{},"249":{},"250":{},"251":{},"254":{},"255":{},"266":{},"267":{},"268":{},"270":{},"272":{}},"component":{}}],["pipeline’",{"_index":4623,"title":{},"name":{},"text":{"128":{}},"component":{}}],["pitr",{"_index":1685,"title":{"21-6":{}},"name":{},"text":{"21":{}},"component":{}}],["pivot",{"_index":4422,"title":{},"name":{},"text":{"108":{}},"component":{}}],["pixel",{"_index":4460,"title":{},"name":{},"text":{"115":{}},"component":{}}],["pk",{"_index":6151,"title":{},"name":{},"text":{"209":{}},"component":{}}],["pk_ddm_liquibase_metadata",{"_index":4148,"title":{},"name":{},"text":{"84":{}},"component":{}}],["pk_ddm_rls_metadata",{"_index":4155,"title":{},"name":{},"text":{"84":{}},"component":{}}],["pk_ddm_role_permiss",{"_index":4165,"title":{},"name":{},"text":{"84":{}},"component":{}}],["pk_laboratory_id",{"_index":4810,"title":{},"name":{},"text":{"138":{}},"component":{}}],["pk_pd_processing_cons",{"_index":4078,"title":{},"name":{},"text":{"83":{}},"component":{}}],["pkg3xxvxujjukuc2gqlgf",{"_index":5700,"title":{},"name":{},"text":{"179":{}},"component":{}}],["pl",{"_index":3692,"title":{},"name":{"107":{}},"text":{"73":{}},"component":{}}],["pl/pgsql",{"_index":2583,"title":{"107":{},"107-1":{}},"name":{},"text":{"52":{},"59":{},"107":{}},"component":{}}],["place",{"_index":1456,"title":{},"name":{},"text":{"9":{},"32":{},"52":{},"58":{},"59":{},"61":{},"66":{},"67":{},"99":{},"103":{},"127":{},"138":{},"140":{},"159":{},"160":{},"161":{},"197":{},"206":{},"209":{},"230":{},"237":{},"253":{},"255":{},"257":{},"260":{},"262":{},"270":{},"271":{}},"component":{}}],["placehold",{"_index":4440,"title":{},"name":{},"text":{"111":{},"126":{},"129":{},"145":{},"160":{},"184":{},"186":{},"230":{}},"component":{}}],["placement",{"_index":3990,"title":{},"name":{},"text":{"80":{}},"component":{}}],["plain",{"_index":4551,"title":{},"name":{},"text":{"122":{},"161":{}},"component":{}}],["plan",{"_index":1220,"title":{"59-2":{},"138-3":{},"253-8":{},"253-10":{},"254-7":{},"254-9":{},"255-13":{},"255-15":{},"256-9":{},"256-11":{},"257-13":{},"257-15":{},"266-8":{},"266-10":{},"267-15":{},"267-17":{},"269-22":{},"269-24":{},"271-15":{},"271-17":{},"272-22":{},"272-24":{}},"name":{},"text":{"6":{},"21":{},"23":{},"58":{},"59":{},"66":{},"81":{},"108":{},"138":{},"164":{},"202":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"266":{},"267":{},"269":{},"271":{},"272":{}},"component":{}}],["plane",{"_index":239,"title":{"37":{},"122":{},"42-2":{},"43-2":{},"122-2":{}},"name":{"17":{},"18":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{}},"text":{"2":{},"4":{},"15":{},"16":{},"17":{},"18":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"43":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"65":{},"66":{},"73":{},"75":{},"76":{},"78":{},"86":{},"87":{},"104":{},"105":{},"115":{},"116":{},"117":{},"118":{},"122":{},"123":{},"124":{},"125":{},"128":{},"153":{},"171":{},"173":{},"179":{},"181":{},"182":{},"188":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"220":{},"221":{},"222":{},"227":{},"249":{},"250":{},"254":{},"255":{},"266":{},"271":{}},"component":{}}],["plane.svc.cluster.loc",{"_index":6473,"title":{},"name":{},"text":{"254":{}},"component":{}}],["platform",{"_index":1,"title":{"1":{},"3":{},"14":{},"26":{},"28":{},"37":{},"43":{},"46":{},"47":{},"48":{},"49":{},"73":{},"74":{},"79":{},"85":{},"87":{},"88":{},"124":{},"153":{},"189":{},"190":{},"191":{},"192":{},"194":{},"198":{},"220":{},"1-1":{},"1-4":{},"6-26":{},"14-1":{},"29-5":{},"32-16":{},"32-20":{},"32-22":{},"32-23":{},"46-2":{},"48-5":{},"48-6":{},"48-8":{},"49-14":{},"73-28":{},"73-33":{},"73-40":{},"73-42":{},"73-46":{},"73-49":{},"73-52":{},"78-3":{},"78-4":{},"78-5":{},"81-2":{},"86-2":{},"86-3":{},"107-1":{},"124-3":{},"124-4":{},"142-8":{},"153-2":{},"153-3":{},"193-4":{},"195-11":{},"251-3":{}},"name":{"2":{},"28":{},"45":{},"46":{},"47":{},"48":{},"49":{},"73":{},"74":{},"81":{},"192":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"9":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"55":{},"56":{},"57":{},"58":{},"59":{},"65":{},"66":{},"67":{},"73":{},"74":{},"75":{},"78":{},"81":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"99":{},"104":{},"105":{},"107":{},"115":{},"116":{},"117":{},"118":{},"122":{},"123":{},"124":{},"125":{},"131":{},"132":{},"133":{},"134":{},"136":{},"137":{},"138":{},"142":{},"146":{},"153":{},"154":{},"155":{},"157":{},"161":{},"162":{},"165":{},"167":{},"168":{},"171":{},"173":{},"179":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"201":{},"202":{},"205":{},"208":{},"212":{},"213":{},"214":{},"216":{},"220":{},"221":{},"222":{},"244":{},"245":{},"246":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"262":{},"264":{},"266":{},"270":{},"272":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}}}],["platform.adoc",{"_index":2215,"title":{},"name":{},"text":{"48":{},"194":{},"199":{},"208":{}},"component":{}}],["platform/contain",{"_index":2214,"title":{},"name":{},"text":{"48":{},"194":{},"199":{},"208":{}},"component":{}}],["platform/pipelines/stages/impl/lowcod",{"_index":6644,"title":{},"name":{},"text":{"267":{}},"component":{}}],["platform/platform/backend/applications/ddm",{"_index":6062,"title":{},"name":{},"text":{"204":{}},"component":{}}],["platform/platform/frontend/applications/common",{"_index":6056,"title":{},"name":{},"text":{"204":{}},"component":{}}],["platform:admin:us",{"_index":3082,"title":{},"name":{},"text":{"60":{}},"component":{}}],["platform_cidr",{"_index":3678,"title":{},"name":{},"text":{"73":{}},"component":{}}],["platform_nam",{"_index":3677,"title":{},"name":{},"text":{"73":{}},"component":{}}],["platformvaulttoken",{"_index":853,"title":{},"name":{},"text":{"4":{}},"component":{}}],["platform’",{"_index":644,"title":{"75-2":{}},"name":{},"text":{"4":{},"6":{},"10":{},"23":{},"25":{},"26":{},"28":{},"30":{},"33":{},"44":{},"50":{},"65":{},"74":{},"75":{},"99":{},"122":{},"162":{},"167":{},"169":{},"173":{},"182":{}},"component":{}}],["play",{"_index":225,"title":{},"name":{},"text":{"2":{},"67":{},"99":{},"123":{}},"component":{}}],["pleas",{"_index":950,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"14":{},"25":{},"52":{},"65":{},"99":{},"113":{},"119":{},"131":{},"140":{},"144":{},"149":{},"151":{},"152":{},"153":{},"161":{},"174":{},"177":{},"233":{},"235":{},"238":{},"240":{},"241":{},"244":{},"262":{},"264":{},"265":{}},"component":{}}],["plenti",{"_index":3316,"title":{},"name":{},"text":{"67":{}},"component":{}}],["plu",{"_index":3092,"title":{},"name":{},"text":{"60":{},"118":{},"140":{},"142":{},"154":{},"160":{},"214":{},"260":{}},"component":{}}],["plug",{"_index":3195,"title":{},"name":{},"text":{"66":{},"272":{}},"component":{}}],["plugin",{"_index":1153,"title":{"229":{}},"name":{},"text":{"6":{},"49":{},"55":{},"73":{},"201":{},"205":{},"229":{},"255":{},"264":{},"272":{}},"component":{}}],["pluginsratelimitbyheaderfaulttoler",{"_index":2674,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyheaderheadernam",{"_index":2676,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyheaderhideclienthead",{"_index":2675,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyheaderpolici",{"_index":2673,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyheaderrequestsperhour",{"_index":2671,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyheaderrequestspersecond",{"_index":2670,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyipfaulttoler",{"_index":2680,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyiphideclienthead",{"_index":2681,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyippolici",{"_index":2679,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyiprequestsperhour",{"_index":2678,"title":{},"name":{},"text":{"55":{}},"component":{}}],["pluginsratelimitbyiprequestspersecond",{"_index":2677,"title":{},"name":{},"text":{"55":{}},"component":{}}],["png",{"_index":1515,"title":{},"name":{},"text":{"12":{},"61":{},"105":{},"227":{}},"component":{}}],["poc",{"_index":1263,"title":{},"name":{},"text":{"6":{},"270":{}},"component":{}}],["pod",{"_index":822,"title":{},"name":{},"text":{"4":{},"16":{},"19":{},"22":{},"23":{},"34":{},"40":{},"49":{},"56":{},"63":{},"78":{},"80":{},"196":{},"197":{},"253":{},"258":{}},"component":{}}],["pod_nam",{"_index":4522,"title":{},"name":{},"text":{"119":{}},"component":{}}],["podprioritythreshold",{"_index":3955,"title":{},"name":{},"text":{"80":{}},"component":{}}],["point",{"_index":455,"title":{"21-6":{},"167-21":{},"189-1":{}},"name":{},"text":{"2":{},"6":{},"21":{},"52":{},"55":{},"58":{},"73":{},"75":{},"76":{},"81":{},"84":{},"104":{},"105":{},"122":{},"124":{},"125":{},"126":{},"128":{},"139":{},"141":{},"154":{},"167":{},"181":{},"189":{},"194":{},"201":{},"202":{},"210":{},"213":{},"218":{},"230":{},"231":{},"254":{},"269":{},"272":{}},"component":{}}],["pointer",{"_index":6400,"title":{},"name":{},"text":{"242":{}},"component":{}}],["poker",{"_index":1224,"title":{},"name":{},"text":{"6":{}},"component":{}}],["polic",{"_index":2932,"title":{},"name":{},"text":{"59":{}},"component":{}}],["polici",{"_index":65,"title":{"72":{},"21-3":{},"72-1":{}},"name":{"72":{}},"text":{"1":{},"14":{},"21":{},"59":{},"62":{},"67":{},"72":{},"73":{},"81":{},"99":{},"122":{},"123":{},"155":{},"173":{},"179":{},"195":{},"196":{},"197":{},"201":{},"253":{},"255":{},"272":{}},"component":{}}],["polygon",{"_index":2782,"title":{},"name":{},"text":{"58":{}},"component":{}}],["polylin",{"_index":2877,"title":{},"name":{},"text":{"58":{}},"component":{}}],["pom",{"_index":1017,"title":{"6-7":{}},"name":{},"text":{"6":{}},"component":{}}],["pom.xml",{"_index":1152,"title":{},"name":{},"text":{"6":{},"84":{}},"component":{}}],["pool",{"_index":1827,"title":{"52-3":{},"139-6":{},"140-6":{},"141-6":{},"154-3":{},"154-10":{},"161-3":{},"216-5":{},"216-9":{},"217-4":{}},"name":{},"text":{"23":{},"29":{},"49":{},"50":{},"51":{},"52":{},"139":{},"140":{},"141":{},"154":{},"159":{},"161":{},"162":{},"212":{},"216":{},"217":{},"218":{}},"component":{}}],["pool/particip",{"_index":4889,"title":{},"name":{},"text":{"139":{},"140":{},"141":{},"154":{},"159":{},"160":{},"161":{},"216":{},"217":{}},"component":{}}],["pool_hba.conf",{"_index":6586,"title":{},"name":{},"text":{"258":{}},"component":{}}],["pool_passwd",{"_index":6552,"title":{},"name":{},"text":{"258":{}},"component":{}}],["poor",{"_index":1137,"title":{},"name":{},"text":{"6":{},"44":{}},"component":{}}],["pop",{"_index":1407,"title":{},"name":{},"text":{"8":{},"113":{},"118":{},"140":{},"223":{}},"component":{}}],["pop3",{"_index":2412,"title":{},"name":{},"text":{"49":{}},"component":{}}],["popul",{"_index":2047,"title":{},"name":{},"text":{"34":{},"52":{},"58":{},"103":{},"105":{},"132":{},"138":{},"139":{},"140":{},"141":{},"148":{},"159":{},"161":{},"162":{},"168":{}},"component":{}}],["populatedictionaries.xml",{"_index":4864,"title":{},"name":{},"text":{"138":{}},"component":{}}],["populatelicences.xml",{"_index":2578,"title":{},"name":{},"text":{"52":{}},"component":{}}],["populatelicenses.xml",{"_index":2567,"title":{},"name":{},"text":{"52":{}},"component":{}}],["popup",{"_index":1403,"title":{},"name":{"8":{},"223":{}},"text":{},"component":{}}],["port",{"_index":690,"title":{},"name":{},"text":{"4":{},"21":{},"25":{},"63":{},"67":{},"73":{},"122":{},"182":{},"188":{},"248":{},"254":{},"258":{},"272":{}},"component":{}}],["portabl",{"_index":70,"title":{"81-6":{},"87-7":{},"191-8":{},"194-7":{},"199-9":{}},"name":{},"text":{"1":{},"6":{},"81":{},"191":{},"194":{},"199":{}},"component":{}}],["portal",{"_index":203,"title":{"8":{},"12":{},"13":{},"68":{},"69":{},"70":{},"76":{},"114":{},"143":{},"150":{},"151":{},"152":{},"187":{},"188":{},"237":{},"28-3":{},"32-4":{},"32-9":{},"32-14":{},"32-15":{},"51-5":{},"52-15":{},"55-8":{},"69-2":{},"76-2":{},"76-4":{},"76-5":{},"103-5":{},"105-9":{},"117-3":{},"119-3":{},"158-3":{},"160-8":{},"216-17":{},"237-3":{},"237-14":{},"244-6":{},"267-9":{}},"name":{"9":{},"69":{},"70":{},"76":{},"112":{},"143":{},"150":{},"151":{},"152":{}},"text":{"1":{},"2":{},"4":{},"8":{},"9":{},"10":{},"12":{},"13":{},"28":{},"29":{},"30":{},"31":{},"32":{},"37":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"60":{},"61":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"75":{},"76":{},"77":{},"78":{},"100":{},"101":{},"103":{},"105":{},"106":{},"113":{},"115":{},"116":{},"117":{},"119":{},"120":{},"124":{},"127":{},"131":{},"133":{},"134":{},"135":{},"136":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"148":{},"149":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"163":{},"165":{},"167":{},"173":{},"176":{},"177":{},"183":{},"184":{},"186":{},"187":{},"188":{},"189":{},"193":{},"196":{},"201":{},"202":{},"204":{},"210":{},"216":{},"217":{},"223":{},"224":{},"225":{},"227":{},"230":{},"231":{},"232":{},"234":{},"236":{},"237":{},"238":{},"240":{},"242":{},"244":{},"246":{},"248":{},"249":{},"250":{},"251":{},"255":{},"262":{},"264":{},"267":{},"268":{}},"component":{}}],["portal/protocol/openid",{"_index":5949,"title":{},"name":{},"text":{"196":{}},"component":{}}],["portal/registri",{"_index":4614,"title":{},"name":{},"text":{"128":{}},"component":{}}],["portalи",{"_index":6642,"title":{},"name":{},"text":{"267":{}},"component":{}}],["portal’",{"_index":1468,"title":{},"name":{},"text":{"9":{},"70":{},"150":{},"237":{}},"component":{}}],["portion",{"_index":5138,"title":{},"name":{},"text":{"143":{},"151":{},"152":{}},"component":{}}],["pose",{"_index":2111,"title":{},"name":{},"text":{"44":{}},"component":{}}],["posit",{"_index":149,"title":{"14-1":{},"65-1":{}},"name":{},"text":{"1":{},"14":{},"16":{},"49":{},"59":{},"65":{},"67":{},"226":{},"253":{},"269":{}},"component":{}}],["possibl",{"_index":1432,"title":{"167-4":{},"167-13":{}},"name":{},"text":{"9":{},"31":{},"45":{},"52":{},"58":{},"61":{},"67":{},"68":{},"73":{},"81":{},"84":{},"100":{},"103":{},"105":{},"108":{},"112":{},"113":{},"115":{},"119":{},"123":{},"124":{},"125":{},"128":{},"131":{},"135":{},"138":{},"149":{},"159":{},"162":{},"164":{},"166":{},"167":{},"175":{},"176":{},"195":{},"197":{},"205":{},"207":{},"223":{},"227":{},"229":{},"233":{},"235":{},"236":{},"238":{},"241":{},"242":{},"244":{},"245":{},"253":{},"255":{},"257":{},"258":{},"262":{},"265":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["post",{"_index":2094,"title":{"73-35":{}},"name":{},"text":{"41":{},"56":{},"67":{},"73":{},"104":{},"154":{},"160":{},"161":{},"179":{},"195":{},"269":{},"270":{},"272":{}},"component":{}}],["postfix",{"_index":2407,"title":{},"name":{},"text":{"49":{},"142":{}},"component":{}}],["postgi",{"_index":2388,"title":{},"name":{},"text":{"49":{}},"component":{}}],["postgr",{"_index":825,"title":{},"name":{"21":{}},"text":{"4":{},"14":{},"21":{},"49":{},"208":{},"258":{}},"component":{}}],["postgres:centos8",{"_index":6531,"title":{},"name":{},"text":{"258":{}},"component":{}}],["postgres_password",{"_index":6548,"title":{},"name":{},"text":{"258":{}},"component":{}}],["postgres_usernam",{"_index":6545,"title":{},"name":{},"text":{"258":{}},"component":{}}],["postgresclust",{"_index":1733,"title":{},"name":{},"text":{"21":{},"258":{}},"component":{}}],["postgresoper",{"_index":2339,"title":{},"name":{},"text":{"49":{}},"component":{}}],["postgresql",{"_index":1560,"title":{"258":{},"258-1":{}},"name":{},"text":{"14":{},"21":{},"49":{},"65":{},"66":{},"84":{},"168":{},"204":{},"208":{},"242":{},"258":{}},"component":{}}],["postgresql.conf",{"_index":4394,"title":{},"name":{},"text":{"107":{}},"component":{}}],["postgressql",{"_index":5664,"title":{},"name":{},"text":{"168":{}},"component":{}}],["postgresvers",{"_index":6532,"title":{},"name":{},"text":{"258":{}},"component":{}}],["postid",{"_index":6306,"title":{},"name":{},"text":{"231":{}},"component":{}}],["postman",{"_index":1356,"title":{},"name":{"179":{}},"text":{"6":{},"66":{},"124":{},"179":{}},"component":{}}],["postur",{"_index":3222,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["potenti",{"_index":130,"title":{},"name":{},"text":{"1":{},"6":{},"41":{},"50":{},"67":{},"99":{},"154":{},"164":{},"166":{},"262":{}},"component":{}}],["power",{"_index":399,"title":{},"name":{},"text":{"2":{},"34":{},"66":{},"226":{}},"component":{}}],["powermock",{"_index":1166,"title":{},"name":{},"text":{"6":{}},"component":{}}],["practic",{"_index":60,"title":{"6":{},"23-1":{},"99-9":{}},"name":{},"text":{"1":{},"6":{},"14":{},"23":{},"31":{},"44":{},"57":{},"66":{},"67":{},"81":{},"99":{},"108":{},"134":{},"135":{},"136":{},"137":{},"183":{},"184":{},"188":{},"191":{},"247":{}},"component":{}}],["practices/best",{"_index":2758,"title":{},"name":{},"text":{"57":{}},"component":{}}],["practices/bp",{"_index":2627,"title":{},"name":{},"text":{"52":{},"59":{}},"component":{}}],["pre",{"_index":1521,"title":{},"name":{},"text":{"12":{},"34":{},"41":{},"52":{},"58":{},"61":{},"68":{},"70":{},"103":{},"105":{},"117":{},"123":{},"129":{},"139":{},"140":{},"141":{},"148":{},"149":{},"159":{},"161":{},"162":{},"210":{},"255":{}},"component":{}}],["preced",{"_index":5048,"title":{},"name":{},"text":{"141":{},"177":{}},"component":{}}],["precis",{"_index":4603,"title":{},"name":{},"text":{"127":{}},"component":{}}],["precondit",{"_index":4244,"title":{},"name":{},"text":{"100":{},"159":{}},"component":{}}],["preconfigur",{"_index":262,"title":{},"name":{},"text":{"2":{}},"component":{}}],["predefin",{"_index":1964,"title":{},"name":{},"text":{"30":{},"72":{},"73":{},"163":{},"264":{}},"component":{}}],["predict",{"_index":3286,"title":{},"name":{},"text":{"67":{},"262":{}},"component":{}}],["prefer",{"_index":1100,"title":{},"name":{},"text":{"6":{},"66":{},"126":{},"138":{},"141":{}},"component":{}}],["preferred_usernam",{"_index":5223,"title":{},"name":{},"text":{"155":{}},"component":{}}],["prefix",{"_index":1168,"title":{},"name":{},"text":{"6":{},"57":{},"59":{},"73":{},"138":{},"142":{},"167":{},"196":{},"233":{}},"component":{}}],["prefix_list_id",{"_index":3616,"title":{},"name":{},"text":{"73":{}},"component":{}}],["prefix—​that",{"_index":5241,"title":{},"name":{},"text":{"158":{}},"component":{}}],["preliminari",{"_index":4427,"title":{"268-8":{},"270-11":{}},"name":{},"text":{"108":{},"119":{},"268":{},"270":{}},"component":{}}],["premis",{"_index":526,"title":{},"name":{},"text":{"2":{},"140":{}},"component":{}}],["premisesfil",{"_index":4977,"title":{},"name":{},"text":{"140":{}},"component":{}}],["prep",{"_index":4403,"title":{},"name":{"108":{}},"text":{},"component":{}}],["prepar",{"_index":590,"title":{"108":{},"4-3":{},"4-5":{},"52-5":{},"52-10":{},"66-14":{},"73-25":{},"73-28":{},"108-2":{},"108-5":{},"108-11":{},"140-15":{},"141-8":{},"141-10":{},"141-14":{},"159-2":{},"161-6":{},"216-12":{}},"name":{},"text":{"4":{},"6":{},"31":{},"52":{},"57":{},"59":{},"66":{},"73":{},"87":{},"103":{},"107":{},"108":{},"126":{},"140":{},"141":{},"159":{},"161":{},"162":{},"212":{},"216":{}},"component":{}}],["prepopulateddatamap",{"_index":5291,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prepopulateddatamap['address",{"_index":5294,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prepopulateddatamap['edrp",{"_index":5298,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prepopulateddatamap['headnam",{"_index":5296,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prepopulateddatamap['nam",{"_index":5292,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prerequisit",{"_index":588,"title":{"4-2":{},"9-4":{},"22-1":{},"40-1":{},"73-1":{},"73-30":{},"73-37":{},"115-4":{},"139-2":{},"139-14":{},"140-2":{},"141-2":{},"158-4":{},"166-3":{},"183-1":{},"188-4":{},"218-4":{},"248-2":{}},"name":{},"text":{"4":{},"9":{},"22":{},"40":{},"73":{},"103":{},"107":{},"108":{},"115":{},"139":{},"140":{},"141":{},"158":{},"162":{},"166":{},"183":{},"210":{},"212":{},"218":{}},"component":{}}],["prescript",{"_index":4170,"title":{},"name":{},"text":{"87":{},"194":{}},"component":{}}],["presenc",{"_index":4508,"title":{},"name":{},"text":{"119":{},"242":{},"272":{}},"component":{}}],["present",{"_index":463,"title":{},"name":{},"text":{"2":{},"4":{},"26":{},"41":{},"48":{},"49":{},"55":{},"58":{},"66":{},"69":{},"70":{},"73":{},"74":{},"108":{},"113":{},"119":{},"131":{},"138":{},"140":{},"143":{},"164":{},"196":{},"205":{},"237":{},"266":{},"269":{},"272":{}},"component":{}}],["preserv",{"_index":140,"title":{},"name":{},"text":{"1":{},"45":{},"62":{},"87":{}},"component":{}}],["press",{"_index":1630,"title":{},"name":{},"text":{"18":{},"57":{},"67":{},"100":{},"126":{},"140":{},"142":{},"234":{}},"component":{}}],["prevail",{"_index":4213,"title":{},"name":{},"text":{"99":{}},"component":{}}],["prevent",{"_index":724,"title":{},"name":{},"text":{"4":{},"8":{},"23":{},"44":{},"45":{},"73":{},"123":{},"223":{},"244":{},"254":{},"262":{},"272":{}},"component":{}}],["preview",{"_index":2063,"title":{},"name":{},"text":{"34":{},"49":{},"58":{},"223":{},"224":{},"225":{},"232":{},"245":{},"267":{}},"component":{}}],["previou",{"_index":1701,"title":{},"name":{},"text":{"21":{},"33":{},"52":{},"56":{},"58":{},"73":{},"81":{},"82":{},"100":{},"103":{},"107":{},"108":{},"126":{},"131":{},"138":{},"139":{},"140":{},"142":{},"152":{},"154":{},"158":{},"159":{},"161":{},"168":{},"196":{},"244":{},"253":{},"254":{},"256":{}},"component":{}}],["previous",{"_index":657,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"30":{},"57":{},"58":{},"66":{},"67":{},"70":{},"75":{},"84":{},"100":{},"134":{},"136":{},"139":{},"140":{},"141":{},"144":{},"149":{},"160":{},"164":{},"212":{},"232":{},"233":{},"255":{}},"component":{}}],["price",{"_index":2478,"title":{},"name":{},"text":{"50":{}},"component":{}}],["prichini",{"_index":4369,"title":{},"name":{},"text":{"107":{}},"component":{}}],["primari",{"_index":1205,"title":{},"name":{},"text":{"6":{},"21":{},"31":{},"66":{},"67":{},"83":{},"84":{},"123":{},"138":{},"166":{},"195":{},"258":{}},"component":{}}],["primary.endpoint",{"_index":1787,"title":{},"name":{},"text":{"21":{}},"component":{}}],["primarykey",{"_index":4808,"title":{},"name":{},"text":{"138":{}},"component":{}}],["primarykeynam",{"_index":4809,"title":{},"name":{},"text":{"138":{}},"component":{}}],["princip",{"_index":3588,"title":{},"name":{},"text":{"73":{},"99":{}},"component":{}}],["principal_bind",{"_index":5980,"title":{},"name":{},"text":{"196":{}},"component":{}}],["principl",{"_index":63,"title":{"98":{},"48-2":{},"55-2":{},"55-3":{},"80-1":{},"84-3":{},"195-9":{},"205-3":{},"237-2":{},"253-4":{},"254-4":{},"255-4":{},"256-3":{},"257-3":{},"266-3":{},"268-4":{},"269-4":{},"270-5":{},"271-4":{},"272-4":{}},"name":{"98":{}},"text":{"1":{},"6":{},"14":{},"23":{},"45":{},"48":{},"55":{},"59":{},"65":{},"75":{},"80":{},"84":{},"99":{},"123":{},"164":{},"165":{},"195":{},"204":{},"207":{},"237":{},"253":{},"254":{},"255":{},"256":{},"257":{},"264":{},"266":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["print",{"_index":3651,"title":{},"name":{},"text":{"73":{},"229":{}},"component":{}}],["print0",{"_index":914,"title":{},"name":{},"text":{"4":{}},"component":{}}],["println",{"_index":2830,"title":{},"name":{},"text":{"58":{},"269":{}},"component":{}}],["prior",{"_index":6115,"title":{},"name":{},"text":{"205":{}},"component":{}}],["priorit",{"_index":1254,"title":{},"name":{},"text":{"6":{},"67":{},"99":{}},"component":{}}],["prioriti",{"_index":1243,"title":{},"name":{},"text":{"6":{},"34":{},"55":{},"166":{},"195":{},"253":{}},"component":{}}],["privaci",{"_index":4186,"title":{},"name":{},"text":{"99":{},"188":{},"248":{},"253":{},"255":{}},"component":{}}],["privat",{"_index":403,"title":{},"name":{},"text":{"2":{},"4":{},"9":{},"44":{},"48":{},"73":{},"75":{},"78":{},"80":{},"81":{},"134":{},"188":{},"248":{},"253":{},"255":{},"268":{},"271":{}},"component":{}}],["private.key",{"_index":3629,"title":{},"name":{},"text":{"73":{}},"component":{}}],["private/confidenti",{"_index":4050,"title":{},"name":{},"text":{"83":{}},"component":{}}],["private_cidr",{"_index":3685,"title":{},"name":{},"text":{"73":{}},"component":{}}],["private_subnet",{"_index":3531,"title":{},"name":{},"text":{"73":{}},"component":{}}],["privici",{"_index":4191,"title":{},"name":{},"text":{"99":{}},"component":{}}],["privileg",{"_index":544,"title":{},"name":{},"text":{"2":{},"40":{},"83":{},"99":{},"112":{},"195":{},"253":{}},"component":{}}],["pro",{"_index":3479,"title":{},"name":{},"text":{"73":{}},"component":{}}],["proactiv",{"_index":3334,"title":{},"name":{},"text":{"67":{}},"component":{}}],["probl",{"_index":5364,"title":{},"name":{},"text":{"161":{}},"component":{}}],["problem",{"_index":3,"title":{"1-2":{},"1-4":{},"19-1":{},"23-1":{},"73-44":{},"73-47":{},"73-50":{},"73-53":{},"237-1":{}},"name":{},"text":{"1":{},"10":{},"19":{},"23":{},"44":{},"60":{},"73":{},"81":{},"113":{},"125":{},"197":{},"237":{},"254":{},"255":{}},"component":{}}],["problemat",{"_index":1310,"title":{"84-1":{}},"name":{},"text":{"6":{}},"component":{}}],["proc",{"_index":2022,"title":{},"name":{},"text":{"32":{},"231":{}},"component":{}}],["proce",{"_index":721,"title":{},"name":{},"text":{"4":{},"12":{},"17":{},"119":{},"129":{},"145":{},"155":{},"161":{},"218":{},"259":{}},"component":{}}],["procedur",{"_index":540,"title":{"107":{},"19-4":{},"22-2":{},"107-1":{},"107-2":{}},"name":{},"text":{"2":{},"6":{},"19":{},"22":{},"30":{},"33":{},"41":{},"42":{},"43":{},"52":{},"59":{},"69":{},"73":{},"107":{},"108":{},"115":{},"119":{},"122":{},"125":{},"129":{},"131":{},"138":{},"164":{},"253":{},"256":{},"271":{}},"component":{}}],["proceed",{"_index":4499,"title":{},"name":{},"text":{"119":{},"140":{},"155":{},"244":{}},"component":{}}],["process",{"_index":176,"title":{"51":{},"53":{},"60":{},"100":{},"102":{},"103":{},"106":{},"125":{},"139":{},"140":{},"141":{},"154":{},"155":{},"157":{},"159":{},"160":{},"205":{},"220":{},"222":{},"233":{},"234":{},"235":{},"236":{},"238":{},"239":{},"240":{},"241":{},"256":{},"262":{},"263":{},"264":{},"265":{},"266":{},"268":{},"269":{},"270":{},"6-28":{},"12-2":{},"32-9":{},"33-4":{},"42-4":{},"43-4":{},"49-34":{},"51-3":{},"52-2":{},"52-3":{},"52-13":{},"52-14":{},"55-7":{},"58-5":{},"58-7":{},"58-9":{},"58-12":{},"58-15":{},"58-18":{},"59-8":{},"60-4":{},"60-6":{},"60-7":{},"60-9":{},"60-10":{},"60-11":{},"60-16":{},"66-10":{},"66-11":{},"66-12":{},"66-13":{},"66-15":{},"99-11":{},"99-13":{},"100-2":{},"100-5":{},"100-6":{},"103-1":{},"103-5":{},"104-4":{},"105-3":{},"105-5":{},"119-6":{},"119-7":{},"125-4":{},"125-5":{},"125-6":{},"125-7":{},"125-8":{},"128-3":{},"131-4":{},"131-5":{},"131-6":{},"138-10":{},"139-4":{},"139-5":{},"139-6":{},"139-10":{},"139-12":{},"139-18":{},"139-19":{},"140-3":{},"140-4":{},"140-5":{},"140-6":{},"140-13":{},"140-18":{},"140-19":{},"140-20":{},"140-24":{},"140-25":{},"141-4":{},"141-5":{},"141-6":{},"141-16":{},"141-24":{},"141-25":{},"145-2":{},"151-2":{},"151-3":{},"151-4":{},"151-5":{},"154-2":{},"154-3":{},"154-10":{},"154-14":{},"155-3":{},"155-5":{},"155-6":{},"158-2":{},"158-5":{},"159-1":{},"159-5":{},"159-6":{},"159-7":{},"159-11":{},"160-2":{},"160-3":{},"160-4":{},"161-2":{},"161-3":{},"161-14":{},"162-5":{},"165-3":{},"167-42":{},"181-1":{},"181-3":{},"183-3":{},"188-5":{},"191-6":{},"202-8":{},"202-9":{},"202-11":{},"205-10":{},"205-11":{},"205-12":{},"205-13":{},"205-14":{},"205-15":{},"205-17":{},"213-5":{},"216-3":{},"216-4":{},"216-5":{},"216-6":{},"216-15":{},"216-17":{},"217-3":{},"217-4":{},"217-5":{},"217-11":{},"237-3":{},"237-4":{},"237-5":{},"237-6":{},"237-7":{},"237-8":{},"237-9":{},"237-10":{},"237-11":{},"237-12":{},"244-4":{},"248-3":{},"262-3":{},"271-14":{}},"name":{"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"263":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"10":{},"12":{},"13":{},"14":{},"18":{},"21":{},"23":{},"25":{},"26":{},"28":{},"30":{},"31":{},"32":{},"33":{},"35":{},"41":{},"42":{},"43":{},"44":{},"45":{},"47":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"74":{},"75":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"99":{},"100":{},"103":{},"104":{},"105":{},"106":{},"108":{},"112":{},"116":{},"117":{},"118":{},"119":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"131":{},"132":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"143":{},"145":{},"148":{},"149":{},"150":{},"151":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"167":{},"168":{},"177":{},"179":{},"181":{},"183":{},"186":{},"188":{},"189":{},"191":{},"193":{},"195":{},"196":{},"197":{},"198":{},"201":{},"202":{},"205":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"244":{},"245":{},"249":{},"250":{},"251":{},"253":{},"257":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["process.bpmn",{"_index":3188,"title":{},"name":{},"text":{"66":{}},"component":{}}],["process/api/start",{"_index":5712,"title":{},"name":{},"text":{"179":{}},"component":{}}],["process/bp",{"_index":6787,"title":{},"name":{},"text":{"271":{}},"component":{}}],["process/task",{"_index":5218,"title":{"155-7":{}},"name":{},"text":{"155":{}},"component":{}}],["process[1",{"_index":6234,"title":{},"name":{},"text":{"218":{},"259":{}},"component":{}}],["process_cal",{"_index":6616,"title":{},"name":{},"text":{"262":{}},"component":{}}],["process_checkintermediatethrowevent.bpmn",{"_index":6175,"title":{},"name":{},"text":{"212":{}},"component":{}}],["process_definit",{"_index":2752,"title":{},"name":{},"text":{"57":{},"59":{},"131":{},"139":{},"140":{},"141":{},"155":{},"181":{},"202":{}},"component":{}}],["process_definition_id",{"_index":2753,"title":{},"name":{},"text":{"57":{},"59":{},"131":{},"139":{},"140":{},"141":{},"155":{},"181":{},"202":{},"222":{},"237":{}},"component":{}}],["process_definition_key",{"_index":6251,"title":{},"name":{},"text":{"222":{}},"component":{}}],["process_descript",{"_index":2756,"title":{},"name":{},"text":{"57":{},"59":{},"131":{},"139":{},"140":{},"141":{},"155":{},"181":{},"202":{}},"component":{}}],["process_id",{"_index":4649,"title":{},"name":{},"text":{"131":{}},"component":{}}],["process_instance_id",{"_index":6081,"title":{},"name":{},"text":{"205":{}},"component":{}}],["process_nam",{"_index":2755,"title":{},"name":{},"text":{"57":{},"59":{},"131":{},"139":{},"140":{},"141":{},"155":{},"181":{},"202":{}},"component":{}}],["processasyncmessag",{"_index":6819,"title":{},"name":{},"text":{"271":{}},"component":{}}],["processdefinit",{"_index":6041,"title":{},"name":{},"text":{"202":{},"237":{}},"component":{}}],["processdefinitionid",{"_index":6093,"title":{},"name":{},"text":{"205":{}},"component":{}}],["processdefinitionkey",{"_index":6094,"title":{},"name":{},"text":{"205":{}},"component":{}}],["processdefinitionnam",{"_index":6095,"title":{},"name":{},"text":{"205":{},"231":{}},"component":{}}],["processid",{"_index":6232,"title":{},"name":{},"text":{"217":{}},"component":{}}],["processinst",{"_index":5335,"title":{},"name":{},"text":{"160":{}},"component":{}}],["processinstancebusinesskey(orderid",{"_index":5338,"title":{},"name":{},"text":{"160":{}},"component":{}}],["processinstanceid",{"_index":6091,"title":{},"name":{},"text":{"205":{}},"component":{}}],["processinstanceid(requestcontext.getprocessinstanceid",{"_index":6830,"title":{},"name":{},"text":{"271":{}},"component":{}}],["processinstanceid={{data.selectprocessinstanceid",{"_index":6356,"title":{},"name":{},"text":{"231":{}},"component":{}}],["processnam",{"_index":5735,"title":{},"name":{},"text":{"183":{}},"component":{}}],["prod",{"_index":2689,"title":{},"name":{"56":{},"189":{}},"text":{"67":{},"255":{}},"component":{}}],["produc",{"_index":4225,"title":{},"name":{},"text":{"99":{}},"component":{}}],["product",{"_index":1210,"title":{"189":{},"164-6":{}},"name":{},"text":{"6":{},"26":{},"44":{},"50":{},"56":{},"73":{},"99":{},"125":{},"128":{},"149":{},"164":{},"168":{},"176":{},"189":{},"244":{},"270":{}},"component":{}}],["profession",{"_index":1346,"title":{},"name":{},"text":{"6":{},"164":{}},"component":{}}],["profici",{"_index":1547,"title":{},"name":{},"text":{"14":{},"65":{}},"component":{}}],["profil",{"_index":361,"title":{"144":{},"69-7":{},"70-11":{},"73-23":{}},"name":{"14":{},"65":{}},"text":{"2":{},"18":{},"32":{},"63":{},"67":{},"69":{},"70":{},"72":{},"73":{},"80":{},"129":{},"133":{},"135":{},"136":{},"144":{},"146":{},"161":{},"179":{},"184":{},"229":{}},"component":{}}],["profile.adoc",{"_index":5709,"title":{},"name":{},"text":{"179":{}},"component":{}}],["profound",{"_index":2097,"title":{},"name":{},"text":{"41":{}},"component":{}}],["program",{"_index":250,"title":{"49-1":{}},"name":{},"text":{"2":{},"6":{},"31":{},"32":{},"34":{},"49":{},"67":{},"73":{},"84":{},"99":{},"168":{},"262":{}},"component":{}}],["programm",{"_index":6755,"title":{},"name":{},"text":{"269":{}},"component":{}}],["program’",{"_index":1335,"title":{},"name":{},"text":{"6":{}},"component":{}}],["progress",{"_index":1411,"title":{"70-5":{},"151-4":{}},"name":{},"text":{"8":{},"18":{},"57":{},"60":{},"70":{},"108":{},"143":{},"150":{},"151":{},"271":{}},"component":{}}],["prohibit",{"_index":4263,"title":{},"name":{},"text":{"101":{},"119":{},"120":{},"173":{},"195":{},"207":{},"257":{},"272":{}},"component":{}}],["project",{"_index":665,"title":{"6-7":{}},"name":{},"text":{"4":{},"6":{},"25":{},"28":{},"31":{},"32":{},"47":{},"56":{},"57":{},"60":{},"63":{},"67":{},"99":{},"104":{},"108":{},"118":{},"119":{},"122":{},"125":{},"129":{},"139":{},"140":{},"141":{},"159":{},"164":{},"242":{},"257":{}},"component":{}}],["project/registri",{"_index":2009,"title":{},"name":{},"text":{"32":{}},"component":{}}],["project/studi",{"_index":3211,"title":{},"name":{},"text":{"66":{},"264":{}},"component":{}}],["project’",{"_index":4899,"title":{},"name":{},"text":{"139":{}},"component":{}}],["prolong",{"_index":4215,"title":{},"name":{},"text":{"99":{}},"component":{}}],["prometheu",{"_index":1377,"title":{},"name":{},"text":{"6":{},"14":{},"49":{},"65":{},"125":{},"193":{},"197":{},"250":{},"272":{}},"component":{}}],["promot",{"_index":1689,"title":{"21-11":{}},"name":{},"text":{"21":{},"195":{},"244":{}},"component":{}}],["prompt",{"_index":894,"title":{},"name":{},"text":{"4":{},"9":{},"10":{},"40":{},"60":{},"63":{},"103":{},"127":{},"144":{},"175":{},"204":{},"262":{},"268":{}},"component":{}}],["prop('address').valu",{"_index":5282,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prop('edrpou').valu",{"_index":5280,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prop('headname').valu",{"_index":5284,"title":{},"name":{},"text":{"159":{}},"component":{}}],["prop('name').valu",{"_index":5278,"title":{},"name":{},"text":{"159":{}},"component":{}}],["proper",{"_index":1345,"title":{"205-3":{}},"name":{},"text":{"6":{},"9":{},"55":{},"59":{},"75":{},"84":{},"138":{},"160":{},"216":{},"244":{}},"component":{}}],["properli",{"_index":723,"title":{},"name":{},"text":{"4":{},"30":{},"39":{},"73":{},"164":{},"230":{}},"component":{}}],["properti",{"_index":537,"title":{"138-13":{}},"name":{},"text":{"2":{},"6":{},"12":{},"52":{},"58":{},"59":{},"63":{},"100":{},"103":{},"104":{},"105":{},"138":{},"139":{},"140":{},"141":{},"160":{},"164":{},"195":{},"205":{},"214":{},"226":{},"229":{},"230":{},"231":{},"264":{},"270":{}},"component":{}}],["property/filt",{"_index":4289,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["propnam",{"_index":5464,"title":{},"name":{},"text":{"162":{}},"component":{}}],["proport",{"_index":4218,"title":{},"name":{},"text":{"99":{}},"component":{}}],["propos",{"_index":1600,"title":{},"name":{},"text":{"15":{},"16":{},"28":{},"29":{},"33":{},"34":{},"36":{},"115":{},"117":{},"118":{},"175":{},"253":{}},"component":{}}],["proprietor",{"_index":5065,"title":{},"name":{},"text":{"141":{}},"component":{}}],["protect",{"_index":134,"title":{"268":{},"99-4":{},"168-8":{},"268-6":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"13":{},"44":{},"45":{},"46":{},"48":{},"67":{},"72":{},"81":{},"99":{},"122":{},"168":{},"197":{},"268":{},"272":{}},"component":{}}],["protobuf",{"_index":2370,"title":{},"name":{},"text":{"49":{}},"component":{}}],["protocol",{"_index":1988,"title":{"195-18":{}},"name":{},"text":{"31":{},"46":{},"48":{},"55":{},"65":{},"73":{},"99":{},"108":{},"111":{},"122":{},"123":{},"162":{},"183":{},"185":{},"195":{},"254":{},"261":{},"272":{}},"component":{}}],["prototyp",{"_index":6304,"title":{},"name":{},"text":{"231":{}},"component":{}}],["provid",{"_index":192,"title":{"24":{},"180":{},"181":{},"254":{},"256":{},"30-9":{},"32-15":{},"70-6":{},"142-7":{},"142-8":{},"267-10":{},"272-17":{}},"name":{"24":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"12":{},"14":{},"16":{},"18":{},"21":{},"22":{},"24":{},"25":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"37":{},"40":{},"44":{},"45":{},"46":{},"48":{},"49":{},"50":{},"52":{},"56":{},"58":{},"59":{},"66":{},"67":{},"69":{},"70":{},"73":{},"75":{},"76":{},"78":{},"80":{},"81":{},"84":{},"85":{},"87":{},"88":{},"99":{},"103":{},"105":{},"107":{},"112":{},"113":{},"115":{},"116":{},"117":{},"118":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"133":{},"135":{},"138":{},"140":{},"142":{},"143":{},"145":{},"148":{},"149":{},"151":{},"153":{},"155":{},"158":{},"162":{},"163":{},"165":{},"167":{},"171":{},"173":{},"179":{},"180":{},"181":{},"183":{},"186":{},"188":{},"189":{},"191":{},"193":{},"194":{},"196":{},"197":{},"198":{},"199":{},"201":{},"204":{},"205":{},"207":{},"208":{},"210":{},"213":{},"217":{},"222":{},"223":{},"226":{},"229":{},"230":{},"231":{},"234":{},"237":{},"242":{},"244":{},"245":{},"246":{},"247":{},"248":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"261":{},"262":{},"264":{},"267":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["providers.tf",{"_index":3508,"title":{},"name":{},"text":{"73":{}},"component":{}}],["providerspec",{"_index":3975,"title":{},"name":{},"text":{"80":{}},"component":{}}],["provider’",{"_index":641,"title":{},"name":{},"text":{"4":{},"25":{}},"component":{}}],["provis",{"_index":981,"title":{"190-1":{},"192-1":{},"237-2":{},"244-1":{},"253-4":{},"254-4":{},"255-4":{},"256-3":{},"257-3":{},"266-3":{},"268-4":{},"269-4":{},"270-5":{},"271-4":{},"272-4":{}},"name":{},"text":{"5":{},"31":{},"48":{},"67":{},"69":{},"70":{},"73":{},"75":{},"81":{},"84":{},"88":{},"99":{},"119":{},"128":{},"145":{},"179":{},"188":{},"190":{},"192":{},"194":{},"201":{},"202":{},"237":{},"244":{},"253":{},"254":{},"255":{},"256":{},"257":{},"266":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["provision",{"_index":3625,"title":{},"name":{},"text":{"73":{},"205":{},"253":{}},"component":{}}],["proxi",{"_index":1959,"title":{"196-3":{}},"name":{},"text":{"29":{},"124":{},"188":{},"193":{},"196":{},"248":{},"250":{},"271":{},"272":{}},"component":{}}],["prune",{"_index":912,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ps",{"_index":1673,"title":{},"name":{},"text":{"19":{},"73":{}},"component":{}}],["pseudo",{"_index":4306,"title":{},"name":{},"text":{"105":{},"144":{}},"component":{}}],["pseudonym",{"_index":4176,"title":{"99-8":{}},"name":{},"text":{"99":{}},"component":{}}],["pseudorandom",{"_index":5800,"title":{},"name":{},"text":{"184":{}},"component":{}}],["psf",{"_index":2284,"title":{},"name":{},"text":{"49":{}},"component":{}}],["psql",{"_index":827,"title":{},"name":{},"text":{"4":{}},"component":{}}],["pt3",{"_index":6193,"title":{},"name":{},"text":{"213":{}},"component":{}}],["pub",{"_index":4878,"title":{},"name":{},"text":{"138":{}},"component":{}}],["public",{"_index":54,"title":{"272":{},"78-2":{},"267-8":{},"272-14":{},"272-15":{},"272-16":{}},"name":{"272":{}},"text":{"1":{},"2":{},"9":{},"21":{},"25":{},"29":{},"30":{},"44":{},"46":{},"47":{},"48":{},"49":{},"56":{},"57":{},"58":{},"59":{},"62":{},"66":{},"73":{},"75":{},"76":{},"78":{},"81":{},"83":{},"84":{},"99":{},"104":{},"105":{},"122":{},"173":{},"188":{},"189":{},"193":{},"195":{},"196":{},"209":{},"231":{},"237":{},"244":{},"248":{},"251":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["public.ddm_db_changelog",{"_index":4088,"title":{},"name":{},"text":{"83":{}},"component":{}}],["public.ddm_liquibase_metadata",{"_index":4038,"title":{},"name":{},"text":{"82":{},"84":{}},"component":{}}],["public.ddm_rls_metadata",{"_index":4150,"title":{},"name":{},"text":{"84":{}},"component":{}}],["public.ddm_role_permiss",{"_index":4160,"title":{},"name":{},"text":{"84":{}},"component":{}}],["public.{registri",{"_index":6878,"title":{},"name":{},"text":{"272":{}},"component":{}}],["public/priv",{"_index":5938,"title":{},"name":{},"text":{"196":{}},"component":{}}],["public:/search",{"_index":6882,"title":{},"name":{},"text":{"272":{}},"component":{}}],["public_cidr",{"_index":3687,"title":{},"name":{},"text":{"73":{}},"component":{}}],["public_key",{"_index":3576,"title":{},"name":{},"text":{"73":{}},"component":{}}],["public_subnet",{"_index":3533,"title":{},"name":{},"text":{"73":{}},"component":{}}],["publicapi",{"_index":6886,"title":{},"name":{},"text":{"272":{}},"component":{}}],["publicli",{"_index":3305,"title":{},"name":{},"text":{"67":{},"272":{}},"component":{}}],["publicus",{"_index":6874,"title":{},"name":{},"text":{"272":{}},"component":{}}],["publish",{"_index":2204,"title":{"193":{},"142-15":{},"195-13":{},"205-6":{},"205-7":{}},"name":{},"text":{"47":{},"57":{},"58":{},"59":{},"60":{},"73":{},"81":{},"142":{},"177":{},"186":{},"193":{},"195":{},"204":{},"205":{},"234":{},"236":{},"242":{},"268":{},"270":{},"272":{}},"component":{}}],["pull",{"_index":1314,"title":{},"name":{},"text":{"6":{},"73":{},"256":{}},"component":{}}],["pullsecret",{"_index":3756,"title":{},"name":{},"text":{"73":{}},"component":{}}],["pupros",{"_index":5367,"title":{},"name":{},"text":{"161":{}},"component":{}}],["pure",{"_index":3307,"title":{},"name":{},"text":{"67":{},"141":{}},"component":{}}],["puriti",{"_index":1090,"title":{},"name":{},"text":{"6":{}},"component":{}}],["purpos",{"_index":1328,"title":{"44-2":{},"51-3":{},"188-2":{},"201-4":{},"249-2":{},"254-6":{},"255-12":{},"266-7":{},"267-6":{},"272-13":{}},"name":{},"text":{"6":{},"30":{},"32":{},"37":{},"44":{},"46":{},"51":{},"66":{},"67":{},"73":{},"84":{},"99":{},"112":{},"168":{},"188":{},"193":{},"199":{},"201":{},"202":{},"204":{},"205":{},"208":{},"209":{},"213":{},"216":{},"217":{},"226":{},"234":{},"242":{},"249":{},"251":{},"254":{},"255":{},"266":{},"267":{},"272":{}},"component":{}}],["push",{"_index":926,"title":{},"name":{},"text":{"4":{},"6":{},"31":{},"33":{},"42":{},"43":{},"57":{},"66":{},"129":{},"131":{},"138":{},"142":{},"146":{},"186":{},"195":{}},"component":{}}],["pushcontrolplanelibrari",{"_index":6632,"title":{},"name":{},"text":{"266":{}},"component":{}}],["put",{"_index":1998,"title":{},"name":{},"text":{"31":{},"50":{},"52":{},"58":{},"104":{},"108":{},"142":{},"161":{},"162":{},"214":{},"268":{},"269":{}},"component":{}}],["pvc",{"_index":1802,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pwd):/tmp/instal",{"_index":3824,"title":{},"name":{},"text":{"73":{}},"component":{}}],["pwd):/tmp/openshift",{"_index":3736,"title":{},"name":{},"text":{"73":{}},"component":{}}],["px",{"_index":4461,"title":{},"name":{},"text":{"115":{}},"component":{}}],["python",{"_index":1071,"title":{},"name":{},"text":{"6":{},"49":{}},"component":{}}],["q",{"_index":3835,"title":{},"name":{},"text":{"73":{}},"component":{}}],["qa",{"_index":1273,"title":{},"name":{},"text":{"6":{},"196":{}},"component":{}}],["qa.apps.cicd.mdtu",{"_index":6349,"title":{},"name":{},"text":{"231":{}},"component":{}}],["qe",{"_index":358,"title":{"269":{},"78-7":{},"154-6":{}},"name":{},"text":{"2":{},"30":{},"69":{},"78":{},"100":{},"103":{},"115":{},"116":{},"135":{},"141":{},"154":{},"155":{},"206":{},"269":{}},"component":{}}],["qialifi",{"_index":2850,"title":{},"name":{},"text":{"58":{}},"component":{}}],["quali",{"_index":3247,"title":{},"name":{},"text":{"67":{}},"component":{}}],["qualifi",{"_index":527,"title":{"9-3":{},"52-11":{},"161-5":{}},"name":{},"text":{"2":{},"9":{},"12":{},"13":{},"30":{},"52":{},"58":{},"68":{},"69":{},"70":{},"78":{},"115":{},"116":{},"120":{},"148":{},"149":{},"161":{}},"component":{}}],["qualiti",{"_index":510,"title":{"6":{},"7":{},"6-21":{},"49-53":{},"85-6":{},"87-5":{},"88-6":{},"99-14":{},"191-7":{},"194-6":{},"197-6":{},"199-6":{},"204-6":{},"208-6":{}},"name":{},"text":{"2":{},"6":{},"31":{},"44":{},"49":{},"67":{},"85":{},"88":{},"108":{},"118":{},"167":{},"191":{},"194":{},"197":{},"199":{},"202":{},"204":{},"208":{}},"component":{}}],["quam",{"_index":6308,"title":{},"name":{},"text":{"231":{}},"component":{}}],["quasi",{"_index":6313,"title":{},"name":{},"text":{"231":{}},"component":{}}],["quay.io",{"_index":3760,"title":{},"name":{},"text":{"73":{}},"component":{}}],["queri",{"_index":1396,"title":{"111-2":{},"142-11":{},"142-12":{},"142-13":{},"162-5":{},"162-8":{}},"name":{},"text":{"6":{},"32":{},"49":{},"52":{},"66":{},"107":{},"111":{},"115":{},"119":{},"124":{},"132":{},"138":{},"140":{},"141":{},"142":{},"154":{},"158":{},"160":{},"162":{},"166":{},"167":{},"168":{},"205":{},"230":{},"231":{},"242":{},"254":{},"258":{},"267":{},"272":{}},"component":{}}],["querier",{"_index":2437,"title":{},"name":{},"text":{"49":{},"193":{},"250":{}},"component":{}}],["queries.json",{"_index":5132,"title":{},"name":{},"text":{"142":{}},"component":{}}],["queryparam",{"_index":6475,"title":{},"name":{},"text":{"254":{}},"component":{}}],["question",{"_index":210,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"9":{},"63":{},"65":{},"75":{},"76":{},"188":{},"247":{}},"component":{}}],["queue",{"_index":1639,"title":{"152-2":{},"152-4":{}},"name":{},"text":{"18":{},"34":{},"151":{},"152":{}},"component":{}}],["quia",{"_index":6339,"title":{},"name":{},"text":{"231":{}},"component":{}}],["quick",{"_index":1994,"title":{"32":{}},"name":{"32":{}},"text":{"31":{},"32":{},"35":{},"37":{},"44":{},"66":{},"67":{},"113":{},"125":{},"128":{},"226":{},"244":{},"245":{},"270":{}},"component":{}}],["quickli",{"_index":2001,"title":{},"name":{},"text":{"31":{},"117":{},"167":{},"197":{},"226":{},"237":{},"242":{},"265":{}},"component":{}}],["quidem",{"_index":6315,"title":{},"name":{},"text":{"231":{}},"component":{}}],["quit",{"_index":3351,"title":{},"name":{},"text":{"67":{}},"component":{}}],["quizz",{"_index":196,"title":{},"name":{},"text":{"1":{}},"component":{}}],["quo",{"_index":6320,"title":{},"name":{},"text":{"231":{}},"component":{}}],["quot",{"_index":747,"title":{},"name":{},"text":{"4":{},"25":{},"127":{},"142":{},"175":{}},"component":{}}],["r",{"_index":3817,"title":{},"name":{},"text":{"73":{},"142":{}},"component":{}}],["r/p1d",{"_index":2512,"title":{},"name":{},"text":{"51":{}},"component":{}}],["r5.2xlarg",{"_index":2069,"title":{},"name":{},"text":{"39":{},"73":{}},"component":{}}],["r5.4xlarg",{"_index":2070,"title":{},"name":{},"text":{"39":{}},"component":{}}],["r5/pt10",{"_index":2511,"title":{},"name":{},"text":{"51":{},"213":{}},"component":{}}],["rack",{"_index":1846,"title":{},"name":{},"text":{"23":{}},"component":{}}],["radio",{"_index":5055,"title":{},"name":{},"text":{"141":{},"163":{}},"component":{}}],["radiu",{"_index":6299,"title":{},"name":{},"text":{"230":{}},"component":{}}],["ram",{"_index":1394,"title":{},"name":{},"text":{"6":{},"30":{},"65":{},"73":{}},"component":{}}],["random",{"_index":4307,"title":{},"name":{},"text":{"105":{},"122":{},"138":{},"144":{}},"component":{}}],["randomli",{"_index":4479,"title":{},"name":{},"text":{"115":{}},"component":{}}],["rang",{"_index":3207,"title":{},"name":{},"text":{"66":{},"81":{},"99":{},"167":{}},"component":{}}],["rank",{"_index":2741,"title":{},"name":{},"text":{"57":{},"132":{}},"component":{}}],["rapid",{"_index":29,"title":{},"name":{},"text":{"1":{},"44":{},"81":{}},"component":{}}],["rapidli",{"_index":6626,"title":{},"name":{},"text":{"265":{}},"component":{}}],["raster",{"_index":2779,"title":{},"name":{},"text":{"58":{}},"component":{}}],["rate",{"_index":530,"title":{"55":{},"272":{},"55-2":{},"55-3":{},"55-5":{},"55-6":{},"272-17":{}},"name":{"55":{}},"text":{"2":{},"44":{},"49":{},"50":{},"55":{},"65":{},"67":{},"199":{},"272":{}},"component":{}}],["ratelimitingpluginen",{"_index":2667,"title":{},"name":{},"text":{"55":{}},"component":{}}],["rational",{"_index":3322,"title":{},"name":{},"text":{"67":{}},"component":{}}],["raw",{"_index":800,"title":{"164-3":{}},"name":{},"text":{"4":{},"164":{}},"component":{}}],["rbac",{"_index":542,"title":{"155":{},"155-8":{}},"name":{"155":{}},"text":{"2":{},"14":{},"44":{},"45":{},"57":{},"81":{},"84":{},"99":{},"139":{},"155":{},"195":{},"196":{},"208":{},"209":{}},"component":{}}],["rbd",{"_index":862,"title":{},"name":{},"text":{"4":{}},"component":{}}],["rc",{"_index":3998,"title":{},"name":{},"text":{"80":{}},"component":{}}],["rce",{"_index":3298,"title":{},"name":{},"text":{"67":{},"253":{}},"component":{}}],["rclone",{"_index":633,"title":{},"name":{},"text":{"4":{}},"component":{}}],["re",{"_index":1738,"title":{},"name":{},"text":{"21":{},"48":{},"63":{},"67":{},"99":{},"128":{},"168":{}},"component":{}}],["reach",{"_index":1494,"title":{},"name":{},"text":{"10":{},"22":{},"23":{},"30":{},"80":{},"113":{},"196":{},"261":{},"272":{}},"component":{}}],["react",{"_index":4573,"title":{},"name":{},"text":{"125":{},"211":{},"218":{},"253":{}},"component":{}}],["react.i18next",{"_index":2404,"title":{},"name":{},"text":{"49":{}},"component":{}}],["reactiv",{"_index":3098,"title":{},"name":{},"text":{"60":{}},"component":{}}],["reactj",{"_index":2297,"title":{},"name":{},"text":{"49":{},"204":{}},"component":{}}],["read",{"_index":255,"title":{"272":{}},"name":{},"text":{"2":{},"9":{},"12":{},"13":{},"23":{},"30":{},"52":{},"58":{},"59":{},"62":{},"75":{},"82":{},"83":{},"84":{},"103":{},"119":{},"123":{},"124":{},"127":{},"134":{},"135":{},"136":{},"138":{},"139":{},"141":{},"145":{},"154":{},"155":{},"159":{},"167":{},"181":{},"186":{},"194":{},"195":{},"197":{},"198":{},"199":{},"200":{},"202":{},"203":{},"207":{},"208":{},"209":{},"226":{},"229":{},"242":{},"244":{},"254":{},"255":{},"258":{},"267":{},"270":{}},"component":{}}],["read_capac",{"_index":3503,"title":{},"name":{},"text":{"73":{}},"component":{}}],["read_rl",{"_index":3006,"title":{},"name":{},"text":{"59":{}},"component":{}}],["readabl",{"_index":1084,"title":{},"name":{},"text":{"6":{},"111":{},"128":{},"262":{}},"component":{}}],["reader",{"_index":6165,"title":{},"name":{},"text":{"210":{}},"component":{}}],["readi",{"_index":1039,"title":{"6-17":{},"108-3":{}},"name":{},"text":{"6":{},"19":{},"57":{},"73":{},"99":{},"105":{},"108":{},"125":{},"129":{},"140":{},"176":{},"196":{},"241":{},"265":{}},"component":{}}],["readiness/l",{"_index":2165,"title":{},"name":{},"text":{"47":{}},"component":{}}],["readmod",{"_index":4033,"title":{"167-6":{}},"name":{},"text":{"82":{},"83":{},"167":{}},"component":{}}],["readmode=\"sync",{"_index":5543,"title":{},"name":{},"text":{"167":{}},"component":{}}],["real",{"_index":2692,"title":{},"name":{},"text":{"56":{},"67":{},"164":{},"167":{},"197":{},"225":{},"244":{},"269":{}},"component":{}}],["realiti",{"_index":5340,"title":{},"name":{},"text":{"160":{}},"component":{}}],["realiz",{"_index":2198,"title":{},"name":{},"text":{"47":{},"188":{},"189":{},"193":{},"249":{},"250":{},"251":{},"252":{},"253":{}},"component":{}}],["realli",{"_index":6482,"title":{},"name":{},"text":{"255":{}},"component":{}}],["realm",{"_index":532,"title":{},"name":{},"text":{"2":{},"4":{},"28":{},"30":{},"57":{},"59":{},"60":{},"117":{},"118":{},"119":{},"120":{},"131":{},"132":{},"139":{},"140":{},"141":{},"142":{},"154":{},"155":{},"179":{},"181":{},"202":{},"255":{},"272":{}},"component":{}}],["realm.json",{"_index":775,"title":{},"name":{},"text":{"4":{}},"component":{}}],["realm_access",{"_index":5707,"title":{},"name":{},"text":{"179":{}},"component":{}}],["realm_rol",{"_index":2984,"title":{},"name":{},"text":{"59":{}},"component":{}}],["realmid",{"_index":4528,"title":{},"name":{},"text":{"119":{}},"component":{}}],["realmnam",{"_index":4529,"title":{},"name":{},"text":{"119":{}},"component":{}}],["realms/{realm}/users/search",{"_index":5210,"title":{},"name":{},"text":{"154":{}},"component":{}}],["realms[1",{"_index":5206,"title":{},"name":{},"text":{"154":{}},"component":{}}],["reason",{"_index":1648,"title":{},"name":{},"text":{"19":{},"30":{},"75":{},"84":{},"119":{},"120":{},"127":{},"183":{},"186":{},"205":{},"223":{},"227":{},"254":{},"270":{}},"component":{}}],["reboot",{"_index":1651,"title":{},"name":{},"text":{"19":{}},"component":{}}],["receipt",{"_index":6602,"title":{},"name":{},"text":{"260":{}},"component":{}}],["receiv",{"_index":258,"title":{"269":{},"68-2":{},"69-6":{},"105-6":{}},"name":{},"text":{"2":{},"12":{},"13":{},"19":{},"25":{},"29":{},"32":{},"46":{},"49":{},"51":{},"52":{},"55":{},"58":{},"68":{},"69":{},"78":{},"84":{},"99":{},"105":{},"107":{},"119":{},"120":{},"123":{},"124":{},"126":{},"133":{},"140":{},"144":{},"148":{},"154":{},"158":{},"161":{},"162":{},"165":{},"168":{},"173":{},"177":{},"179":{},"181":{},"183":{},"186":{},"188":{},"195":{},"196":{},"199":{},"207":{},"209":{},"211":{},"212":{},"214":{},"216":{},"218":{},"220":{},"234":{},"235":{},"236":{},"237":{},"239":{},"242":{},"244":{},"246":{},"248":{},"249":{},"255":{},"258":{},"267":{},"269":{},"271":{},"272":{}},"component":{}}],["receivetask",{"_index":6201,"title":{},"name":{},"text":{"214":{}},"component":{}}],["recent",{"_index":6437,"title":{},"name":{},"text":{"246":{}},"component":{}}],["recipi",{"_index":357,"title":{"30-10":{},"32-14":{}},"name":{},"text":{"2":{},"4":{},"30":{},"31":{},"32":{},"58":{},"78":{},"99":{},"116":{},"132":{},"140":{},"145":{},"151":{},"183":{},"186":{},"255":{}},"component":{}}],["recipient’",{"_index":1471,"title":{},"name":{},"text":{"9":{},"183":{},"186":{}},"component":{}}],["reciv",{"_index":5325,"title":{},"name":{},"text":{"159":{}},"component":{}}],["recogn",{"_index":1465,"title":{},"name":{},"text":{"9":{},"26":{},"74":{}},"component":{}}],["recommend",{"_index":1011,"title":{"6-4":{},"73-17":{},"73-18":{},"107-9":{}},"name":{},"text":{"6":{},"14":{},"16":{},"23":{},"25":{},"30":{},"37":{},"50":{},"56":{},"58":{},"66":{},"73":{},"103":{},"107":{},"108":{},"113":{},"117":{},"127":{},"128":{},"139":{},"141":{},"142":{},"163":{},"165":{},"183":{},"184":{},"205":{},"238":{},"244":{},"269":{},"272":{}},"component":{}}],["reconcil",{"_index":6383,"title":{"242-11":{}},"name":{},"text":{"242":{}},"component":{}}],["reconcilestrategi",{"_index":1842,"title":{},"name":{},"text":{"23":{}},"component":{}}],["reconcili",{"_index":1824,"title":{},"name":{},"text":{"23":{},"242":{}},"component":{}}],["reconstruct",{"_index":2972,"title":{},"name":{},"text":{"59":{}},"component":{}}],["record",{"_index":360,"title":{"52":{},"25-2":{},"25-3":{},"25-4":{},"52-10":{},"140-15":{},"141-8":{}},"name":{},"text":{"2":{},"6":{},"25":{},"29":{},"30":{},"40":{},"48":{},"52":{},"58":{},"67":{},"73":{},"75":{},"76":{},"99":{},"103":{},"105":{},"107":{},"108":{},"111":{},"119":{},"122":{},"127":{},"135":{},"136":{},"140":{},"141":{},"142":{},"160":{},"161":{},"166":{},"167":{},"168":{},"188":{},"195":{},"198":{},"205":{},"207":{},"209":{},"221":{},"222":{},"224":{},"225":{},"226":{},"240":{},"242":{},"247":{},"272":{}},"component":{}}],["recoveri",{"_index":1550,"title":{"19-4":{},"21-6":{}},"name":{},"text":{"14":{},"21":{},"44":{},"45":{},"65":{},"81":{},"191":{}},"component":{}}],["recreat",{"_index":6447,"title":{},"name":{},"text":{"253":{}},"component":{}}],["rectangl",{"_index":4897,"title":{},"name":{},"text":{"139":{},"140":{}},"component":{}}],["rectif",{"_index":4179,"title":{"99-19":{}},"name":{},"text":{"99":{}},"component":{}}],["rectifi",{"_index":4202,"title":{},"name":{},"text":{"99":{}},"component":{}}],["recur",{"_index":2506,"title":{},"name":{},"text":{"51":{}},"component":{}}],["recycl",{"_index":3885,"title":{},"name":{},"text":{"75":{}},"component":{}}],["red",{"_index":3378,"title":{"73-12":{}},"name":{},"text":{"73":{},"262":{}},"component":{}}],["redash",{"_index":257,"title":{"32-8":{},"111-2":{},"119-8":{},"142-10":{}},"name":{},"text":{"2":{},"32":{},"49":{},"56":{},"66":{},"70":{},"111":{},"112":{},"119":{},"128":{},"142":{},"189":{},"193":{},"201":{},"202":{},"204":{},"250":{},"255":{},"258":{}},"component":{}}],["redash/redash",{"_index":6033,"title":{},"name":{},"text":{"201":{}},"component":{}}],["redash_saml_metadata_url",{"_index":6485,"title":{},"name":{},"text":{"255":{}},"component":{}}],["redash_saml_redirect_url",{"_index":6486,"title":{},"name":{},"text":{"255":{}},"component":{}}],["redesign",{"_index":6036,"title":{},"name":{},"text":{"202":{}},"component":{}}],["redi",{"_index":2320,"title":{"267-11":{}},"name":{"200":{}},"text":{"49":{},"198":{},"199":{},"200":{},"204":{},"267":{},"272":{}},"component":{}}],["redirect",{"_index":1629,"title":{},"name":{},"text":{"18":{},"52":{},"55":{},"67":{},"70":{},"115":{},"117":{},"139":{},"141":{},"188":{},"197":{},"248":{},"254":{}},"component":{}}],["redirector",{"_index":4480,"title":{},"name":{},"text":{"115":{}},"component":{}}],["redis:sessions_admin_tool",{"_index":6024,"title":{},"name":{},"text":{"199":{}},"component":{}}],["redon",{"_index":6767,"title":{},"name":{},"text":{"270":{}},"component":{}}],["redraw",{"_index":6265,"title":{},"name":{},"text":{"226":{}},"component":{}}],["reduc",{"_index":643,"title":{},"name":{},"text":{"4":{},"6":{},"44":{},"45":{},"67":{},"81":{},"87":{},"99":{},"117":{},"125":{},"141":{},"167":{},"204":{},"205":{},"244":{},"258":{},"264":{},"272":{}},"component":{}}],["redund",{"_index":397,"title":{},"name":{},"text":{"2":{},"168":{},"205":{}},"component":{}}],["redux",{"_index":2302,"title":{},"name":{},"text":{"49":{},"204":{}},"component":{}}],["reexecut",{"_index":5671,"title":{},"name":{},"text":{"168":{}},"component":{}}],["ref(lookup_col",{"_index":4330,"title":{},"name":{},"text":{"107":{}},"component":{}}],["ref:#restrict",{"_index":6211,"title":{},"name":{},"text":{"216":{}},"component":{}}],["ref:bp",{"_index":6236,"title":{},"name":{},"text":{"218":{}},"component":{}}],["ref_array(lookup_col",{"_index":4334,"title":{},"name":{},"text":{"107":{}},"component":{}}],["ref_col",{"_index":4332,"title":{},"name":{},"text":{"107":{}},"component":{}}],["ref_id",{"_index":4333,"title":{},"name":{},"text":{"107":{}},"component":{}}],["ref_tabl",{"_index":4331,"title":{},"name":{},"text":{"107":{}},"component":{}}],["refactor",{"_index":1059,"title":{"6-29":{}},"name":{},"text":{"6":{}},"component":{}}],["refer",{"_index":107,"title":{"57":{},"51-2":{},"52-2":{},"57-3":{},"60-14":{},"67-4":{},"266-5":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"10":{},"12":{},"14":{},"22":{},"24":{},"25":{},"29":{},"30":{},"40":{},"50":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"65":{},"66":{},"67":{},"69":{},"72":{},"73":{},"84":{},"99":{},"107":{},"108":{},"111":{},"112":{},"113":{},"118":{},"119":{},"122":{},"124":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"140":{},"141":{},"142":{},"149":{},"150":{},"152":{},"153":{},"154":{},"160":{},"162":{},"164":{},"168":{},"181":{},"183":{},"184":{},"186":{},"207":{},"212":{},"229":{},"233":{},"234":{},"235":{},"236":{},"238":{},"240":{},"241":{},"242":{},"244":{},"257":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["referenc",{"_index":5193,"title":{},"name":{},"text":{"154":{},"167":{},"211":{},"212":{},"218":{},"260":{}},"component":{}}],["referencedcolumnnam",{"_index":4815,"title":{},"name":{},"text":{"138":{}},"component":{}}],["referencedtablenam",{"_index":4814,"title":{},"name":{},"text":{"138":{}},"component":{}}],["referencet",{"_index":4132,"title":{},"name":{},"text":{"84":{}},"component":{}}],["refin",{"_index":5490,"title":{},"name":{},"text":{"164":{}},"component":{}}],["reflect",{"_index":3255,"title":{},"name":{},"text":{"67":{},"176":{},"183":{},"186":{},"253":{},"264":{},"265":{}},"component":{}}],["refresh",{"_index":1497,"title":{"232":{}},"name":{"232":{}},"text":{"10":{},"140":{},"141":{},"231":{},"232":{},"268":{}},"component":{}}],["refresh_expires_in",{"_index":5704,"title":{},"name":{},"text":{"179":{}},"component":{}}],["refreshinterv",{"_index":5896,"title":{},"name":{},"text":{"195":{}},"component":{}}],["refs/heads/master:refs/for/mast",{"_index":928,"title":{},"name":{},"text":{"4":{}},"component":{}}],["refuge",{"_index":2945,"title":{},"name":{},"text":{"59":{}},"component":{}}],["refugees,103.208.304",{"_index":3041,"title":{},"name":{},"text":{"59":{}},"component":{}}],["refus",{"_index":1096,"title":{},"name":{},"text":{"6":{},"73":{},"253":{}},"component":{}}],["reg",{"_index":2012,"title":{},"name":{"64":{}},"text":{"32":{}},"component":{}}],["regard",{"_index":112,"title":{},"name":{},"text":{"1":{},"8":{},"69":{},"99":{},"108":{},"192":{},"271":{}},"component":{}}],["regardless",{"_index":4020,"title":{},"name":{},"text":{"81":{},"108":{},"268":{}},"component":{}}],["regener",{"_index":1863,"title":{},"name":{},"text":{"25":{}},"component":{}}],["regex",{"_index":6474,"title":{},"name":{},"text":{"254":{}},"component":{}}],["regexp",{"_index":6769,"title":{},"name":{},"text":{"270":{}},"component":{}}],["region",{"_index":1763,"title":{"138-11":{},"138-12":{},"142-12":{}},"name":{},"text":{"21":{},"73":{},"80":{},"119":{},"120":{},"138":{},"140":{},"142":{},"158":{},"166":{}},"component":{}}],["region/provinc",{"_index":6730,"title":{},"name":{},"text":{"269":{}},"component":{}}],["region_id",{"_index":5085,"title":{},"name":{},"text":{"142":{}},"component":{}}],["regist",{"_index":55,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"12":{},"30":{},"46":{},"50":{},"52":{},"59":{},"61":{},"62":{},"73":{},"76":{},"81":{},"85":{},"87":{},"88":{},"103":{},"105":{},"115":{},"116":{},"117":{},"119":{},"120":{},"123":{},"124":{},"125":{},"133":{},"143":{},"148":{},"154":{},"159":{},"162":{},"168":{},"173":{},"183":{},"188":{},"191":{},"194":{},"195":{},"197":{},"198":{},"199":{},"201":{},"203":{},"204":{},"205":{},"206":{},"208":{},"213":{},"248":{},"254":{},"255":{},"266":{},"267":{},"269":{},"272":{}},"component":{}}],["register’",{"_index":3130,"title":{},"name":{},"text":{"61":{}},"component":{}}],["registi",{"_index":3313,"title":{},"name":{},"text":{"67":{}},"component":{}}],["registr",{"_index":330,"title":{"117":{},"117-2":{}},"name":{"117":{}},"text":{"2":{},"4":{},"9":{},"30":{},"46":{},"57":{},"59":{},"67":{},"116":{},"117":{},"119":{},"120":{},"125":{},"155":{}},"component":{}}],["registrar",{"_index":3409,"title":{},"name":{},"text":{"73":{},"78":{}},"component":{}}],["registration_no=$0",{"_index":6507,"title":{},"name":{},"text":{"257":{}},"component":{}}],["registri",{"_index":8,"title":{"1":{},"4":{},"9":{},"16":{},"17":{},"21":{},"26":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"42":{},"50":{},"56":{},"57":{},"58":{},"62":{},"64":{},"65":{},"66":{},"79":{},"101":{},"107":{},"118":{},"124":{},"126":{},"130":{},"132":{},"138":{},"162":{},"165":{},"171":{},"172":{},"173":{},"174":{},"179":{},"180":{},"188":{},"189":{},"190":{},"191":{},"192":{},"194":{},"199":{},"202":{},"204":{},"208":{},"209":{},"220":{},"221":{},"222":{},"238":{},"242":{},"244":{},"253":{},"254":{},"266":{},"272":{},"1-3":{},"1-4":{},"4-3":{},"4-6":{},"4-7":{},"4-8":{},"17-1":{},"17-2":{},"29-2":{},"29-3":{},"29-4":{},"30-2":{},"30-3":{},"30-6":{},"31-2":{},"32-3":{},"32-7":{},"32-10":{},"32-12":{},"32-13":{},"33-2":{},"33-3":{},"33-5":{},"48-7":{},"49-14":{},"50-6":{},"50-7":{},"56-2":{},"57-1":{},"57-2":{},"58-3":{},"58-6":{},"58-23":{},"59-2":{},"61-2":{},"65-1":{},"66-2":{},"66-9":{},"75-4":{},"76-3":{},"76-6":{},"78-6":{},"118-1":{},"118-3":{},"124-2":{},"124-3":{},"124-4":{},"124-5":{},"124-6":{},"124-7":{},"162-6":{},"162-8":{},"167-21":{},"167-40":{},"173-2":{},"173-3":{},"179-2":{},"181-1":{},"181-3":{},"191-4":{},"193-3":{},"195-11":{},"195-14":{},"195-15":{},"195-19":{},"195-25":{},"202-2":{},"202-5":{},"202-6":{},"202-7":{},"202-8":{},"202-9":{},"202-10":{},"202-11":{},"202-13":{},"202-14":{},"202-15":{},"202-16":{},"237-13":{},"251-2":{},"253-11":{},"254-6":{},"254-10":{},"255-12":{},"255-16":{},"256-8":{},"257-10":{},"257-12":{},"266-5":{},"266-6":{},"266-7":{},"267-7":{},"271-7":{},"271-10":{},"271-12":{},"271-13":{},"272-7":{},"272-19":{},"272-20":{}},"name":{"4":{},"16":{},"30":{},"31":{},"33":{},"34":{},"35":{},"42":{},"50":{},"60":{},"61":{},"65":{},"118":{},"129":{},"130":{},"131":{},"132":{},"138":{},"142":{},"162":{},"171":{},"173":{},"192":{},"195":{},"201":{},"202":{},"209":{},"220":{},"221":{},"222":{},"266":{}},"text":{"1":{},"2":{},"4":{},"5":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"74":{},"75":{},"76":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"112":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"148":{},"149":{},"151":{},"152":{},"153":{},"154":{},"155":{},"157":{},"158":{},"162":{},"164":{},"165":{},"167":{},"168":{},"170":{},"171":{},"173":{},"175":{},"176":{},"177":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"186":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"206":{},"207":{},"208":{},"209":{},"216":{},"220":{},"221":{},"222":{},"223":{},"226":{},"227":{},"230":{},"231":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"243":{},"244":{},"245":{},"248":{},"249":{},"250":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["registry.adoc",{"_index":1956,"title":{},"name":{},"text":{"29":{}},"component":{}}],["registry.adoc#add",{"_index":2065,"title":{},"name":{},"text":{"36":{}},"component":{}}],["registry.auth.secret.token",{"_index":5921,"title":{},"name":{},"text":{"195":{}},"component":{}}],["registry.connect.redhat.com",{"_index":3761,"title":{},"name":{},"text":{"73":{}},"component":{}}],["registry.developers.crunchydata.com/crunchydata/crunchi",{"_index":1784,"title":{},"name":{},"text":{"21":{},"258":{}},"component":{}}],["registry.example.com",{"_index":3909,"title":{},"name":{},"text":{"76":{},"188":{},"248":{}},"component":{}}],["registry.get_regions_or_city_regions_v",{"_index":5505,"title":{},"name":{},"text":{"166":{}},"component":{}}],["registry.pd_processing_cons",{"_index":4082,"title":{},"name":{},"text":{"83":{}},"component":{}}],["registry.pd_processing_consent_hst",{"_index":4056,"title":{},"name":{},"text":{"83":{}},"component":{}}],["registry.redhat.io",{"_index":3764,"title":{},"name":{},"text":{"73":{}},"component":{}}],["registry.report_laboratory_v",{"_index":4441,"title":{},"name":{},"text":{"111":{}},"component":{}}],["registry.sh",{"_index":6451,"title":{},"name":{},"text":{"253":{}},"component":{}}],["registry.xlsx",{"_index":4417,"title":{},"name":{},"text":{"108":{}},"component":{}}],["registry//extern",{"_index":5901,"title":{},"name":{},"text":{"195":{}},"component":{}}],["registry//trembita",{"_index":5900,"title":{},"name":{},"text":{"195":{}},"component":{}}],["registry/platform",{"_index":6497,"title":{},"name":{},"text":{"255":{}},"component":{}}],["registry/resourc",{"_index":4569,"title":{},"name":{},"text":{"124":{}},"component":{}}],["registry@gmail.com",{"_index":5727,"title":{},"name":{},"text":{"182":{}},"component":{}}],["registry_nam",{"_index":750,"title":{},"name":{},"text":{"4":{}},"component":{}}],["registrybackup",{"_index":6444,"title":{},"name":{},"text":{"253":{}},"component":{}}],["registryconnectorstartbpdelegate.json",{"_index":6249,"title":{},"name":{},"text":{"222":{}},"component":{}}],["registrydatafactoryconnectorsearchdelegate.json",{"_index":6243,"title":{},"name":{},"text":{"221":{}},"component":{}}],["registryplatform",{"_index":5734,"title":{},"name":{},"text":{"183":{},"184":{}},"component":{}}],["registry’",{"_index":422,"title":{"75-3":{},"195-26":{}},"name":{},"text":{"2":{},"4":{},"30":{},"32":{},"33":{},"58":{},"65":{},"75":{},"78":{},"108":{},"120":{},"123":{},"124":{},"129":{},"132":{},"138":{},"155":{},"167":{},"171":{},"181":{},"182":{},"195":{},"220":{},"231":{},"237":{},"242":{},"258":{},"262":{}},"component":{}}],["regitri",{"_index":3250,"title":{},"name":{},"text":{"67":{}},"component":{}}],["regress",{"_index":2621,"title":{},"name":{},"text":{"52":{},"57":{}},"component":{}}],["regul",{"_index":138,"title":{"61":{},"66":{},"114":{},"128":{},"129":{},"130":{},"131":{},"132":{},"178":{},"181":{},"202":{},"204":{},"268":{},"32-4":{},"32-5":{},"32-6":{},"49-14":{},"49-53":{},"57-1":{},"57-2":{},"58-5":{},"61-2":{},"66-2":{},"66-3":{},"66-7":{},"99-2":{},"104-3":{},"118-3":{},"119-3":{},"131-6":{},"139-21":{},"140-27":{},"141-27":{},"184-2":{},"186-2":{},"195-6":{},"195-12":{},"195-13":{},"195-22":{},"202-2":{},"202-5":{},"202-16":{},"237-3":{},"237-13":{},"257-10":{},"257-12":{},"266-5":{},"266-6":{},"267-7":{},"267-8":{},"267-13":{},"270-7":{},"271-7":{},"272-7":{},"272-8":{}},"name":{"62":{},"129":{},"131":{},"132":{},"195":{},"202":{}},"text":{"1":{},"2":{},"4":{},"8":{},"17":{},"28":{},"31":{},"32":{},"33":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"65":{},"66":{},"84":{},"99":{},"100":{},"101":{},"104":{},"105":{},"106":{},"111":{},"112":{},"113":{},"118":{},"119":{},"122":{},"123":{},"124":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"149":{},"159":{},"160":{},"163":{},"165":{},"167":{},"173":{},"175":{},"176":{},"177":{},"180":{},"181":{},"183":{},"184":{},"186":{},"189":{},"195":{},"198":{},"202":{},"203":{},"204":{},"208":{},"209":{},"220":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"240":{},"241":{},"242":{},"244":{},"245":{},"246":{},"255":{},"257":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["regular",{"_index":1569,"title":{},"name":{},"text":{"14":{},"99":{},"155":{},"183":{},"184":{},"205":{},"229":{}},"component":{}}],["regularli",{"_index":1817,"title":{},"name":{},"text":{"23":{}},"component":{}}],["regulations/data",{"_index":910,"title":{},"name":{},"text":{"4":{}},"component":{}}],["regulations/job/mast",{"_index":5645,"title":{},"name":{},"text":{"167":{}},"component":{}}],["regulations/notifications/inbox",{"_index":5809,"title":{},"name":{},"text":{"186":{}},"component":{}}],["regulations/settings.yaml",{"_index":3146,"title":{},"name":{},"text":{"62":{}},"component":{}}],["regulatori",{"_index":4188,"title":{},"name":{},"text":{"99":{},"119":{},"124":{},"140":{},"155":{},"164":{},"202":{},"242":{}},"component":{}}],["regultaion",{"_index":4224,"title":{},"name":{},"text":{"99":{}},"component":{}}],["reiciendi",{"_index":6322,"title":{},"name":{},"text":{"231":{}},"component":{}}],["reinforc",{"_index":3186,"title":{},"name":{},"text":{"66":{}},"component":{}}],["reinstal",{"_index":3854,"title":{},"name":{},"text":{"73":{}},"component":{}}],["reissu",{"_index":1440,"title":{},"name":{},"text":{"9":{}},"component":{}}],["reject",{"_index":1602,"title":{},"name":{},"text":{"15":{},"16":{},"31":{},"32":{},"36":{},"65":{},"115":{},"118":{},"122":{},"191":{},"193":{},"196":{}},"component":{}}],["rel",{"_index":508,"title":{"177-2":{}},"name":{},"text":{"2":{},"177":{},"195":{},"226":{},"230":{},"254":{},"272":{}},"component":{}}],["relat",{"_index":302,"title":{"200":{},"9-6":{},"14-2":{},"28-4":{},"58-25":{},"65-2":{},"105-10":{},"115-6":{},"118-4":{},"124-10":{},"183-6":{},"186-6":{},"227-3":{},"230-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"10":{},"14":{},"28":{},"49":{},"52":{},"58":{},"59":{},"65":{},"66":{},"67":{},"69":{},"70":{},"73":{},"81":{},"99":{},"105":{},"108":{},"115":{},"118":{},"119":{},"124":{},"132":{},"160":{},"164":{},"183":{},"186":{},"192":{},"195":{},"198":{},"200":{},"207":{},"208":{},"213":{},"227":{},"230":{},"244":{},"267":{},"268":{}},"component":{}}],["relationship",{"_index":3209,"title":{"138-4":{},"167-28":{}},"name":{},"text":{"66":{},"108":{},"131":{},"138":{},"164":{},"167":{},"168":{},"202":{},"205":{}},"component":{}}],["releas",{"_index":1044,"title":{"6-19":{},"6-20":{}},"name":{},"text":{"6":{},"31":{},"35":{},"56":{},"57":{},"73":{},"79":{}},"component":{}}],["release.2021",{"_index":2444,"title":{},"name":{},"text":{"49":{}},"component":{}}],["release1",{"_index":1635,"title":{},"name":{},"text":{"18":{}},"component":{}}],["relev",{"_index":1658,"title":{},"name":{},"text":{"19":{},"25":{},"46":{},"67":{},"99":{},"108":{},"119":{},"127":{},"154":{},"165":{},"191":{},"194":{},"199":{},"202":{},"204":{},"208":{},"220":{},"242":{},"244":{},"267":{}},"component":{}}],["reli",{"_index":3876,"title":{},"name":{},"text":{"74":{}},"component":{}}],["reliabl",{"_index":402,"title":{"85-7":{},"197-9":{}},"name":{},"text":{"2":{},"6":{},"8":{},"9":{},"14":{},"28":{},"30":{},"44":{},"45":{},"48":{},"49":{},"81":{},"85":{},"119":{},"122":{},"131":{},"197":{},"199":{}},"component":{}}],["religi",{"_index":4538,"title":{},"name":{},"text":{"120":{}},"component":{}}],["reload",{"_index":2376,"title":{},"name":{},"text":{"49":{},"119":{}},"component":{}}],["remain",{"_index":554,"title":{},"name":{},"text":{"2":{},"8":{},"13":{},"19":{},"58":{},"113":{},"115":{},"138":{},"167":{},"207":{},"217":{},"223":{},"245":{},"253":{},"254":{},"255":{},"268":{},"270":{}},"component":{}}],["remark",{"_index":2722,"title":{},"name":{},"text":{"57":{}},"component":{}}],["remedi",{"_index":3342,"title":{},"name":{},"text":{"67":{}},"component":{}}],["rememb",{"_index":3880,"title":{},"name":{},"text":{"75":{},"140":{}},"component":{}}],["remot",{"_index":1386,"title":{"63":{},"139-21":{},"140-27":{},"141-27":{}},"name":{"105":{}},"text":{"6":{},"56":{},"61":{},"63":{},"66":{},"67":{},"105":{},"129":{},"139":{},"140":{},"141":{},"142":{},"253":{}},"component":{}}],["remote_connect",{"_index":3159,"title":{},"name":{"63":{}},"text":{},"component":{}}],["remotefileurl",{"_index":4302,"title":{},"name":{},"text":{"105":{}},"component":{}}],["remoteip",{"_index":5993,"title":{},"name":{},"text":{"196":{}},"component":{}}],["remoteref",{"_index":5904,"title":{},"name":{},"text":{"195":{}},"component":{}}],["remov",{"_index":661,"title":{"29-4":{},"120-2":{},"237-11":{}},"name":{"35":{}},"text":{"4":{},"9":{},"12":{},"18":{},"19":{},"21":{},"25":{},"28":{},"29":{},"30":{},"31":{},"34":{},"59":{},"73":{},"75":{},"80":{},"81":{},"101":{},"120":{},"125":{},"128":{},"140":{},"141":{},"167":{},"177":{},"195":{},"205":{},"235":{},"237":{},"242":{},"255":{},"270":{},"272":{}},"component":{}}],["removaltimebas",{"_index":6118,"title":{},"name":{},"text":{"205":{}},"component":{}}],["renam",{"_index":4134,"title":{"237-6":{}},"name":{},"text":{"84":{},"237":{},"270":{}},"component":{}}],["renamecolumn",{"_index":4133,"title":{},"name":{},"text":{"84":{}},"component":{}}],["render",{"_index":4442,"title":{},"name":{},"text":{"113":{}},"component":{}}],["renew",{"_index":2083,"title":{"256":{}},"name":{},"text":{"40":{},"258":{}},"component":{}}],["reorgan",{"_index":4673,"title":{},"name":{},"text":{"134":{}},"component":{}}],["repaid",{"_index":1189,"title":{},"name":{},"text":{"6":{}},"component":{}}],["repeat",{"_index":1674,"title":{},"name":{},"text":{"19":{},"28":{},"30":{},"51":{},"81":{},"118":{},"119":{},"213":{},"267":{},"268":{}},"component":{}}],["repeatedli",{"_index":5669,"title":{},"name":{},"text":{"168":{}},"component":{}}],["replac",{"_index":887,"title":{"73-27":{}},"name":{},"text":{"4":{},"6":{},"9":{},"19":{},"32":{},"40":{},"57":{},"61":{},"73":{},"99":{},"107":{},"162":{},"166":{},"179":{},"221":{},"222":{},"244":{},"256":{}},"component":{}}],["repli",{"_index":1892,"title":{},"name":{},"text":{"25":{},"118":{},"127":{},"129":{}},"component":{}}],["replic",{"_index":261,"title":{"23-6":{}},"name":{},"text":{"2":{},"14":{},"21":{},"23":{},"30":{},"49":{},"80":{},"258":{}},"component":{}}],["replica",{"_index":3747,"title":{"242-9":{}},"name":{},"text":{"73":{},"80":{},"81":{},"84":{},"107":{},"128":{},"142":{},"167":{},"242":{},"258":{}},"component":{}}],["replicasperfailuredomain",{"_index":1847,"title":{},"name":{},"text":{"23":{}},"component":{}}],["replicationcontrol",{"_index":3999,"title":{},"name":{},"text":{"80":{}},"component":{}}],["repo",{"_index":1710,"title":{},"name":{},"text":{"21":{}},"component":{}}],["repo1",{"_index":1711,"title":{},"name":{},"text":{"21":{}},"component":{}}],["reponam",{"_index":1726,"title":{},"name":{},"text":{"21":{}},"component":{}}],["report",{"_index":174,"title":{"61":{},"110":{},"142":{},"147":{},"148":{},"174":{},"32-8":{},"49-43":{},"61-3":{},"61-4":{},"61-5":{},"66-14":{},"67-17":{},"70-10":{},"142-10":{},"142-13":{},"148-1":{},"148-2":{},"159-3":{},"202-12":{}},"name":{"61":{},"142":{},"148":{},"149":{},"174":{}},"text":{"1":{},"2":{},"6":{},"32":{},"44":{},"49":{},"50":{},"54":{},"61":{},"66":{},"67":{},"70":{},"110":{},"111":{},"113":{},"118":{},"119":{},"132":{},"138":{},"142":{},"147":{},"148":{},"149":{},"159":{},"165":{},"198":{},"202":{},"204":{},"213":{},"255":{}},"component":{}}],["report_",{"_index":5074,"title":{},"name":{},"text":{"142":{}},"component":{}}],["report_koatuu",{"_index":5090,"title":{},"name":{},"text":{"142":{}},"component":{}}],["report_koatuu_v",{"_index":5115,"title":{},"name":{},"text":{"142":{}},"component":{}}],["report_laboratori",{"_index":5075,"title":{},"name":{},"text":{"142":{}},"component":{}}],["report_laboratory_v",{"_index":5116,"title":{},"name":{},"text":{"142":{}},"component":{}}],["report_ownership",{"_index":5095,"title":{},"name":{},"text":{"142":{}},"component":{}}],["report_ownership_v",{"_index":5111,"title":{},"name":{},"text":{"142":{}},"component":{}}],["reports//queri",{"_index":5131,"title":{},"name":{},"text":{"142":{}},"component":{}}],["reports/offic",{"_index":5127,"title":{},"name":{},"text":{"142":{}},"component":{}}],["repositori",{"_index":317,"title":{"32-12":{},"139-21":{},"140-27":{},"141-27":{},"266-5":{}},"name":{},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"17":{},"18":{},"21":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"36":{},"42":{},"43":{},"49":{},"55":{},"56":{},"57":{},"58":{},"61":{},"66":{},"73":{},"75":{},"85":{},"86":{},"99":{},"101":{},"105":{},"118":{},"119":{},"128":{},"129":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"153":{},"155":{},"165":{},"168":{},"176":{},"177":{},"184":{},"186":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"199":{},"202":{},"204":{},"208":{},"234":{},"235":{},"236":{},"237":{},"242":{},"244":{},"251":{},"255":{},"266":{},"268":{},"270":{}},"component":{}}],["repository_path",{"_index":4626,"title":{},"name":{},"text":{"128":{}},"component":{}}],["repositorypath",{"_index":991,"title":{},"name":{},"text":{"5":{}},"component":{}}],["repourl",{"_index":2706,"title":{},"name":{},"text":{"56":{}},"component":{}}],["reprehenderit",{"_index":6341,"title":{},"name":{},"text":{"231":{}},"component":{}}],["repres",{"_index":567,"title":{},"name":{},"text":{"2":{},"6":{},"34":{},"46":{},"58":{},"107":{},"111":{},"122":{},"125":{},"135":{},"155":{},"160":{},"161":{},"164":{},"168":{},"175":{},"176":{},"195":{},"202":{},"206":{},"242":{},"271":{}},"component":{}}],["represent",{"_index":507,"title":{"245":{},"265":{},"202-3":{},"202-4":{}},"name":{},"text":{"2":{},"47":{},"58":{},"85":{},"87":{},"88":{},"123":{},"124":{},"132":{},"142":{},"181":{},"199":{},"202":{},"204":{},"208":{},"209":{},"213":{},"238":{},"241":{},"245":{},"263":{},"264":{},"265":{}},"component":{}}],["repudi",{"_index":4222,"title":{},"name":{},"text":{"99":{}},"component":{}}],["request",{"_index":369,"title":{"36":{},"55":{},"126":{},"175":{},"32-25":{},"33-2":{},"33-3":{},"55-8":{},"68-1":{},"69-5":{},"82-5":{},"83-5":{},"148-1":{},"149-1":{},"162-7":{},"175-1":{},"177-4":{},"177-6":{},"272-16":{}},"name":{"126":{},"175":{},"177":{}},"text":{"2":{},"4":{},"6":{},"8":{},"15":{},"16":{},"17":{},"18":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"37":{},"40":{},"42":{},"43":{},"44":{},"45":{},"49":{},"52":{},"55":{},"57":{},"59":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"75":{},"76":{},"82":{},"83":{},"84":{},"99":{},"104":{},"105":{},"107":{},"113":{},"115":{},"117":{},"118":{},"119":{},"122":{},"123":{},"124":{},"126":{},"127":{},"139":{},"140":{},"141":{},"142":{},"148":{},"149":{},"154":{},"155":{},"158":{},"159":{},"161":{},"162":{},"166":{},"167":{},"175":{},"176":{},"177":{},"178":{},"179":{},"181":{},"188":{},"191":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"221":{},"230":{},"231":{},"234":{},"236":{},"237":{},"242":{},"244":{},"247":{},"251":{},"253":{},"254":{},"255":{},"257":{},"258":{},"267":{},"268":{},"269":{},"271":{},"272":{}},"component":{}}],["request.pdf",{"_index":6706,"title":{},"name":{},"text":{"269":{}},"component":{}}],["request.putall(prepopulateddatamap",{"_index":5301,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request/respons",{"_index":6019,"title":{},"name":{},"text":{"199":{}},"component":{}}],["request['excerptinputdata",{"_index":5314,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request['excerpttyp",{"_index":5313,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request['fulltimeflag",{"_index":5308,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request['hygienistflag",{"_index":5306,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request['recordid",{"_index":5312,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request['requiressystemsignatur",{"_index":5315,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request[fieldnam",{"_index":5304,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request_by_search_param",{"_index":5585,"title":{},"name":{},"text":{"167":{}},"component":{}}],["request_receiv",{"_index":6693,"title":{},"name":{},"text":{"269":{}},"component":{}}],["requestauthent",{"_index":5941,"title":{},"name":{},"text":{"196":{},"255":{}},"component":{}}],["requestbysearchparamid",{"_index":5592,"title":{},"name":{},"text":{"167":{}},"component":{}}],["requestbyt",{"_index":6703,"title":{},"name":{},"text":{"269":{}},"component":{}}],["requestcontext",{"_index":6824,"title":{},"name":{},"text":{"271":{}},"component":{}}],["requestedservernam",{"_index":5989,"title":{},"name":{},"text":{"196":{}},"component":{}}],["requesthead",{"_index":5424,"title":{},"name":{},"text":{"162":{}},"component":{}}],["requestheaders['cont",{"_index":5439,"title":{},"name":{},"text":{"162":{}},"component":{}}],["requestheaders['soapact",{"_index":5437,"title":{},"name":{},"text":{"162":{}},"component":{}}],["requestid",{"_index":4517,"title":{},"name":{},"text":{"119":{}},"component":{}}],["requestpayload",{"_index":5425,"title":{},"name":{},"text":{"162":{}},"component":{}}],["requestprincip",{"_index":5951,"title":{},"name":{},"text":{"196":{}},"component":{}}],["requests.add(request",{"_index":5310,"title":{},"name":{},"text":{"159":{}},"component":{}}],["request’",{"_index":2655,"title":{},"name":{},"text":{"55":{},"115":{},"122":{},"205":{}},"component":{}}],["requir",{"_index":40,"title":{"26":{},"45":{},"270":{},"6-7":{},"6-9":{},"6-30":{},"14-1":{},"19-3":{},"65-1":{},"73-2":{},"73-9":{},"73-22":{},"73-35":{},"107-8":{},"195-30":{}},"name":{"26":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"12":{},"14":{},"15":{},"16":{},"19":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"34":{},"39":{},"40":{},"44":{},"45":{},"46":{},"48":{},"50":{},"56":{},"60":{},"61":{},"65":{},"66":{},"67":{},"69":{},"70":{},"73":{},"74":{},"80":{},"81":{},"82":{},"83":{},"84":{},"99":{},"103":{},"104":{},"105":{},"107":{},"108":{},"115":{},"116":{},"117":{},"119":{},"120":{},"122":{},"123":{},"124":{},"126":{},"127":{},"134":{},"135":{},"136":{},"138":{},"140":{},"141":{},"142":{},"145":{},"148":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"164":{},"167":{},"169":{},"175":{},"181":{},"182":{},"183":{},"184":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"195":{},"196":{},"197":{},"201":{},"202":{},"204":{},"205":{},"208":{},"211":{},"216":{},"217":{},"226":{},"227":{},"230":{},"237":{},"242":{},"244":{},"245":{},"249":{},"250":{},"251":{},"252":{},"253":{},"255":{},"257":{},"259":{},"261":{},"264":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["required_provid",{"_index":3581,"title":{},"name":{},"text":{"73":{}},"component":{}}],["required_vers",{"_index":3509,"title":{},"name":{},"text":{"73":{}},"component":{}}],["rerout",{"_index":2652,"title":{},"name":{},"text":{"55":{}},"component":{}}],["rerum",{"_index":6335,"title":{},"name":{},"text":{"231":{}},"component":{}}],["research",{"_index":6518,"title":{},"name":{},"text":{"258":{}},"component":{}}],["researches::ref_array(lookup_col:researches,ref_table:research,ref_col:research_type,ref_id:research_id,delim",{"_index":4362,"title":{},"name":{},"text":{"107":{}},"component":{}}],["resend",{"_index":5144,"title":{},"name":{},"text":{"144":{}},"component":{}}],["reserv",{"_index":1649,"title":{},"name":{},"text":{"19":{},"49":{},"50":{},"59":{},"262":{}},"component":{}}],["reserve,101.202",{"_index":3019,"title":{},"name":{},"text":{"59":{}},"component":{}}],["reserved_connect",{"_index":6576,"title":{},"name":{},"text":{"258":{}},"component":{}}],["reset",{"_index":3294,"title":{},"name":{},"text":{"67":{},"76":{},"141":{}},"component":{}}],["residenceaddress",{"_index":3140,"title":{},"name":{},"text":{"61":{}},"component":{}}],["resili",{"_index":4005,"title":{},"name":{},"text":{"81":{}},"component":{}}],["resist",{"_index":3282,"title":{},"name":{},"text":{"67":{},"197":{}},"component":{}}],["resiz",{"_index":865,"title":{},"name":{},"text":{"4":{},"142":{}},"component":{}}],["resolut",{"_index":1509,"title":{},"name":{},"text":{"10":{},"59":{},"81":{},"113":{}},"component":{}}],["resolv",{"_index":1259,"title":{"19-3":{}},"name":{},"text":{"6":{},"10":{},"19":{},"31":{},"60":{},"73":{},"108":{},"125":{},"166":{},"177":{}},"component":{}}],["resourc",{"_index":128,"title":{"34":{},"87":{},"193":{},"231":{},"30-6":{},"48-8":{},"73-13":{},"195-13":{},"195-14":{},"195-15":{},"195-16":{},"195-17":{}},"name":{"34":{}},"text":{"1":{},"2":{},"4":{},"14":{},"15":{},"16":{},"21":{},"22":{},"23":{},"28":{},"30":{},"31":{},"32":{},"34":{},"37":{},"39":{},"46":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"58":{},"59":{},"60":{},"61":{},"65":{},"67":{},"72":{},"73":{},"75":{},"76":{},"80":{},"81":{},"86":{},"87":{},"103":{},"104":{},"105":{},"108":{},"115":{},"122":{},"124":{},"125":{},"128":{},"140":{},"141":{},"154":{},"155":{},"159":{},"161":{},"162":{},"167":{},"179":{},"183":{},"184":{},"186":{},"188":{},"190":{},"193":{},"194":{},"195":{},"201":{},"205":{},"221":{},"222":{},"231":{},"242":{},"247":{},"248":{},"253":{},"255":{},"272":{}},"component":{}}],["resource/api",{"_index":2589,"title":{},"name":{},"text":{"52":{},"58":{}},"component":{}}],["resource/endpoint",{"_index":2862,"title":{},"name":{},"text":{"58":{},"124":{},"154":{}},"component":{}}],["resourcelimit",{"_index":3956,"title":{},"name":{},"text":{"80":{}},"component":{}}],["resources.adoc",{"_index":1987,"title":{},"name":{},"text":{"31":{},"37":{}},"component":{}}],["resources/el",{"_index":5245,"title":{},"name":{},"text":{"158":{},"162":{},"221":{},"222":{}},"component":{}}],["resources/repositories/templates/registri",{"_index":2664,"title":{},"name":{},"text":{"55":{}},"component":{}}],["respect",{"_index":471,"title":{},"name":{},"text":{"2":{},"6":{},"18":{},"42":{},"43":{},"52":{},"58":{},"61":{},"67":{},"70":{},"99":{},"105":{},"118":{},"120":{},"122":{},"124":{},"154":{},"164":{},"167":{},"177":{},"190":{},"237":{},"244":{},"245":{},"268":{}},"component":{}}],["respond",{"_index":2653,"title":{},"name":{},"text":{"55":{},"81":{},"99":{},"260":{}},"component":{}}],["respons",{"_index":91,"title":{"14":{},"65":{},"206-5":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"14":{},"23":{},"25":{},"28":{},"46":{},"48":{},"49":{},"51":{},"52":{},"55":{},"57":{},"58":{},"59":{},"64":{},"65":{},"66":{},"80":{},"81":{},"84":{},"99":{},"103":{},"104":{},"105":{},"108":{},"118":{},"123":{},"125":{},"126":{},"132":{},"138":{},"140":{},"141":{},"154":{},"159":{},"160":{},"161":{},"162":{},"167":{},"179":{},"196":{},"197":{},"199":{},"202":{},"205":{},"206":{},"208":{},"221":{},"222":{},"231":{},"242":{},"255":{},"269":{},"271":{},"272":{}},"component":{}}],["response.responsebody.elements().get(0).prop('personprofileid').valu",{"_index":5399,"title":{},"name":{},"text":{"161":{}},"component":{}}],["response.responsebody.prop('excerptidentifier').valu",{"_index":5322,"title":{},"name":{},"text":{"159":{}},"component":{}}],["response.value.responsebodi",{"_index":4319,"title":{},"name":{},"text":{"105":{}},"component":{}}],["response.value.responsebody.elements().isempti",{"_index":4941,"title":{},"name":{},"text":{"140":{}},"component":{}}],["rest",{"_index":659,"title":{"91":{},"104":{},"124":{},"181":{},"99-5":{},"123-3":{},"124-2":{},"124-3":{},"124-4":{},"195-24":{},"268-9":{},"269-11":{},"269-15":{},"269-19":{}},"name":{"91":{},"104":{},"124":{},"171":{},"181":{},"220":{}},"text":{"4":{},"31":{},"32":{},"33":{},"45":{},"46":{},"47":{},"49":{},"56":{},"58":{},"59":{},"65":{},"66":{},"67":{},"82":{},"83":{},"84":{},"99":{},"104":{},"122":{},"123":{},"124":{},"126":{},"128":{},"132":{},"167":{},"171":{},"180":{},"181":{},"189":{},"193":{},"195":{},"198":{},"204":{},"208":{},"214":{},"220":{},"231":{},"250":{},"255":{},"268":{},"269":{},"272":{}},"component":{}}],["rest_api",{"_index":4035,"title":{},"name":{},"text":{"82":{},"83":{}},"component":{}}],["restapi",{"_index":2423,"title":{},"name":{},"text":{"49":{}},"component":{}}],["restart",{"_index":1808,"title":{},"name":{},"text":{"22":{},"56":{},"60":{},"63":{},"73":{},"140":{},"141":{},"158":{},"256":{}},"component":{}}],["restassur",{"_index":1355,"title":{},"name":{},"text":{"6":{}},"component":{}}],["resti",{"_index":6030,"title":{},"name":{},"text":{"200":{}},"component":{}}],["restor",{"_index":594,"title":{"17":{},"18":{},"19":{},"20":{},"21":{},"4-5":{},"4-6":{},"17-2":{},"18-3":{},"21-5":{},"21-6":{},"21-9":{},"49-63":{}},"name":{"17":{},"18":{},"21":{}},"text":{"4":{},"17":{},"18":{},"19":{},"20":{},"21":{},"30":{},"31":{},"49":{},"59":{},"76":{},"153":{},"194":{}},"component":{}}],["restore=id1",{"_index":1753,"title":{},"name":{},"text":{"21":{}},"component":{}}],["restrict",{"_index":652,"title":{"29":{},"111":{},"29-2":{},"29-5":{},"30-8":{},"32-26":{},"105-4":{},"216-16":{}},"name":{"111":{}},"text":{"4":{},"25":{},"29":{},"30":{},"31":{},"32":{},"37":{},"59":{},"65":{},"73":{},"81":{},"84":{},"99":{},"103":{},"105":{},"110":{},"111":{},"120":{},"122":{},"125":{},"141":{},"193":{},"195":{},"197":{},"216":{},"227":{},"250":{},"251":{},"255":{},"272":{}},"component":{}}],["restrict_public_bucket",{"_index":3495,"title":{},"name":{},"text":{"73":{}},"component":{}}],["result",{"_index":74,"title":{"50-3":{},"119-4":{},"119-6":{},"119-7":{},"134-3":{},"135-3":{},"136-3":{},"139-10":{},"140-18":{},"141-16":{},"159-4":{},"159-5":{},"159-6":{},"159-7":{},"271-14":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"12":{},"13":{},"15":{},"16":{},"25":{},"28":{},"29":{},"30":{},"31":{},"36":{},"42":{},"43":{},"50":{},"52":{},"55":{},"57":{},"58":{},"59":{},"63":{},"67":{},"69":{},"70":{},"75":{},"78":{},"82":{},"99":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"112":{},"115":{},"116":{},"117":{},"118":{},"119":{},"122":{},"127":{},"128":{},"129":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"166":{},"167":{},"175":{},"177":{},"179":{},"181":{},"183":{},"186":{},"195":{},"204":{},"205":{},"206":{},"210":{},"213":{},"214":{},"216":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"230":{},"231":{},"232":{},"233":{},"235":{},"238":{},"239":{},"242":{},"244":{},"257":{},"260":{},"261":{},"268":{},"269":{},"270":{},"271":{}},"component":{}}],["result(message.getstatu",{"_index":6826,"title":{},"name":{},"text":{"271":{}},"component":{}}],["result.contain",{"_index":6713,"title":{},"name":{},"text":{"269":{}},"component":{}}],["result.isvalid",{"_index":6712,"title":{},"name":{},"text":{"269":{}},"component":{}}],["resultvari",{"_index":6805,"title":{},"name":{},"text":{"271":{}},"component":{}}],["resum",{"_index":1652,"title":{},"name":{},"text":{"19":{}},"component":{}}],["retain",{"_index":1715,"title":{},"name":{},"text":{"21":{},"62":{},"99":{}},"component":{}}],["retent",{"_index":124,"title":{"16":{},"94":{},"21-3":{},"99-7":{}},"name":{"94":{}},"text":{"1":{},"4":{},"15":{},"16":{},"18":{},"20":{},"21":{},"30":{},"62":{},"253":{}},"component":{}}],["retri",{"_index":3873,"title":{},"name":{},"text":{"73":{},"197":{}},"component":{}}],["retrier",{"_index":3094,"title":{},"name":{},"text":{"60":{}},"component":{}}],["retriev",{"_index":1607,"title":{},"name":{},"text":{"15":{},"51":{},"52":{},"58":{},"59":{},"66":{},"105":{},"111":{},"124":{},"138":{},"140":{},"141":{},"158":{},"201":{},"242":{}},"component":{}}],["return",{"_index":812,"title":{"52-13":{},"100-3":{},"100-4":{},"100-7":{},"100-8":{},"100-9":{},"167-17":{},"207-6":{}},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"25":{},"29":{},"30":{},"52":{},"67":{},"73":{},"100":{},"105":{},"107":{},"111":{},"118":{},"119":{},"122":{},"140":{},"141":{},"144":{},"145":{},"154":{},"155":{},"158":{},"162":{},"166":{},"167":{},"179":{},"181":{},"195":{},"207":{},"223":{},"225":{},"227":{},"231":{},"254":{},"258":{},"266":{},"267":{},"269":{}},"component":{}}],["return_to_first",{"_index":4239,"title":{},"name":{},"text":{"100":{}},"component":{}}],["return_to_second",{"_index":4242,"title":{},"name":{},"text":{"100":{}},"component":{}}],["return_var",{"_index":5722,"title":{},"name":{},"text":{"181":{},"202":{}},"component":{}}],["returning=\"fals",{"_index":5575,"title":{},"name":{},"text":{"167":{}},"component":{}}],["returning=\"tru",{"_index":5574,"title":{},"name":{},"text":{"167":{}},"component":{}}],["returntofirst",{"_index":4241,"title":{},"name":{},"text":{"100":{}},"component":{}}],["returntosecond",{"_index":4243,"title":{},"name":{},"text":{"100":{}},"component":{}}],["reus",{"_index":127,"title":{},"name":{},"text":{"1":{},"67":{},"104":{},"184":{},"195":{},"267":{}},"component":{}}],["reusabl",{"_index":67,"title":{},"name":{},"text":{"1":{}},"component":{}}],["reveal",{"_index":3331,"title":{},"name":{},"text":{"67":{},"195":{},"262":{}},"component":{}}],["revers",{"_index":1899,"title":{},"name":{},"text":{"25":{},"58":{},"99":{},"257":{}},"component":{}}],["revert",{"_index":3913,"title":{},"name":{},"text":{"76":{},"100":{},"125":{},"168":{}},"component":{}}],["review",{"_index":805,"title":{"176":{},"177":{},"6-27":{},"6-28":{},"32-5":{},"32-18":{},"42-3":{},"43-3":{},"67-12":{},"167-42":{},"177-3":{}},"name":{},"text":{"4":{},"6":{},"14":{},"28":{},"31":{},"32":{},"33":{},"36":{},"42":{},"43":{},"49":{},"52":{},"56":{},"57":{},"65":{},"67":{},"99":{},"113":{},"117":{},"118":{},"122":{},"129":{},"131":{},"138":{},"142":{},"154":{},"167":{},"177":{},"178":{},"213":{},"234":{},"236":{},"244":{},"270":{}},"component":{}}],["review+2",{"_index":2731,"title":{},"name":{},"text":{"57":{}},"component":{}}],["revis",{"_index":6855,"title":{},"name":{},"text":{"272":{}},"component":{}}],["revok",{"_index":2144,"title":{"167-37":{},"167-39":{}},"name":{},"text":{"46":{},"57":{},"83":{},"84":{},"167":{},"171":{}},"component":{}}],["revokeal",{"_index":4135,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["rework",{"_index":6768,"title":{},"name":{},"text":{"270":{}},"component":{}}],["rewrit",{"_index":5401,"title":{},"name":{},"text":{"161":{}},"component":{}}],["rf",{"_index":6017,"title":{},"name":{},"text":{"198":{}},"component":{}}],["rfc",{"_index":4554,"title":{},"name":{},"text":{"122":{},"196":{}},"component":{}}],["rg92b",{"_index":3175,"title":{},"name":{},"text":{"63":{}},"component":{}}],["rhombu",{"_index":4933,"title":{},"name":{},"text":{"140":{}},"component":{}}],["rich",{"_index":4025,"title":{},"name":{},"text":{"81":{}},"component":{}}],["right",{"_index":278,"title":{"119":{},"120":{},"60-1":{},"99-18":{},"99-19":{},"99-20":{},"142-8":{},"155-1":{},"155-3":{},"155-4":{},"155-6":{},"167-35":{},"202-11":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"25":{},"28":{},"29":{},"31":{},"33":{},"36":{},"37":{},"42":{},"43":{},"44":{},"45":{},"46":{},"49":{},"55":{},"57":{},"59":{},"60":{},"61":{},"63":{},"65":{},"67":{},"75":{},"76":{},"84":{},"99":{},"103":{},"104":{},"112":{},"113":{},"115":{},"118":{},"119":{},"121":{},"122":{},"125":{},"127":{},"139":{},"140":{},"141":{},"142":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"166":{},"167":{},"182":{},"183":{},"186":{},"202":{},"209":{},"216":{},"217":{},"218":{},"221":{},"222":{},"226":{},"234":{},"244":{},"245":{},"259":{},"260":{},"268":{}},"component":{}}],["rights.adoc",{"_index":4437,"title":{},"name":{},"text":{"110":{},"142":{},"167":{}},"component":{}}],["rishen.csv",{"_index":4377,"title":{},"name":{},"text":{"107":{}},"component":{}}],["risk",{"_index":131,"title":{"195-30":{},"253-15":{},"255-20":{}},"name":{},"text":{"1":{},"6":{},"45":{},"59":{},"67":{},"99":{},"191":{},"195":{},"244":{},"253":{},"255":{}},"component":{}}],["river",{"_index":2880,"title":{},"name":{},"text":{"58":{}},"component":{}}],["rl",{"_index":2893,"title":{"59-5":{}},"name":{},"text":{"59":{},"84":{}},"component":{}}],["rls_id",{"_index":4151,"title":{},"name":{},"text":{"84":{},"209":{}},"component":{}}],["rm",{"_index":3733,"title":{},"name":{},"text":{"73":{},"270":{}},"component":{}}],["rn",{"_index":4840,"title":{},"name":{},"text":{"138":{},"142":{}},"component":{}}],["rn.code",{"_index":4842,"title":{},"name":{},"text":{"138":{}},"component":{}}],["rn.name",{"_index":4838,"title":{},"name":{},"text":{"138":{}},"component":{}}],["rn.type",{"_index":4843,"title":{},"name":{},"text":{"138":{}},"component":{}}],["rnokpp",{"_index":548,"title":{},"name":{},"text":{"2":{},"59":{},"120":{},"139":{},"140":{},"141":{},"183":{},"186":{}},"component":{}}],["road",{"_index":564,"title":{},"name":{},"text":{"2":{},"58":{},"195":{}},"component":{}}],["roadblock",{"_index":79,"title":{},"name":{},"text":{"1":{}},"component":{}}],["roadmap",{"_index":2905,"title":{"66-7":{}},"name":{},"text":{"59":{},"66":{}},"component":{}}],["roboto",{"_index":3117,"title":{},"name":{},"text":{"61":{}},"component":{}}],["robust",{"_index":4185,"title":{},"name":{},"text":{"99":{}},"component":{}}],["role",{"_index":227,"title":{"255":{},"32-21":{},"120-2":{},"131-3":{},"155-1":{},"155-2":{},"202-10":{},"253-2":{},"254-2":{},"255-2":{},"256-1":{},"257-2":{},"266-2":{},"267-2":{},"268-3":{},"269-3":{},"270-4":{},"271-3":{},"272-3":{}},"name":{"155":{}},"text":{"2":{},"4":{},"9":{},"14":{},"19":{},"22":{},"28":{},"30":{},"32":{},"37":{},"40":{},"52":{},"55":{},"57":{},"59":{},"60":{},"66":{},"67":{},"70":{},"72":{},"73":{},"75":{},"80":{},"81":{},"84":{},"99":{},"117":{},"118":{},"119":{},"120":{},"123":{},"131":{},"132":{},"139":{},"140":{},"141":{},"142":{},"153":{},"154":{},"155":{},"158":{},"166":{},"167":{},"168":{},"179":{},"181":{},"202":{},"204":{},"208":{},"209":{},"253":{},"254":{},"255":{},"256":{},"257":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["role.kubernetes.io",{"_index":3974,"title":{},"name":{},"text":{"80":{}},"component":{}}],["role.kubernetes.io/mast",{"_index":3864,"title":{},"name":{},"text":{"73":{}},"component":{}}],["role.tf",{"_index":3584,"title":{},"name":{},"text":{"73":{}},"component":{}}],["role/group",{"_index":5222,"title":{},"name":{},"text":{"155":{}},"component":{}}],["role/rol",{"_index":2620,"title":{},"name":{},"text":{"52":{}},"component":{}}],["role_arn",{"_index":3673,"title":{},"name":{},"text":{"73":{}},"component":{}}],["role_nam",{"_index":3702,"title":{},"name":{},"text":{"73":{},"84":{},"209":{}},"component":{}}],["role_name,object_name,operation,column_nam",{"_index":6153,"title":{},"name":{},"text":{"209":{}},"component":{}}],["roles.adoc",{"_index":1915,"title":{},"name":{},"text":{"28":{},"46":{},"118":{}},"component":{}}],["roles/*.yml",{"_index":2737,"title":{},"name":{},"text":{"57":{}},"component":{}}],["roles/citizen.yml",{"_index":2739,"title":{},"name":{},"text":{"57":{},"155":{},"202":{}},"component":{}}],["roles/officer.yml",{"_index":2738,"title":{},"name":{},"text":{"57":{},"59":{},"131":{},"142":{},"155":{},"202":{}},"component":{}}],["roll",{"_index":4016,"title":{},"name":{},"text":{"81":{},"166":{},"167":{},"191":{}},"component":{}}],["rollback",{"_index":5648,"title":{"168-6":{}},"name":{},"text":{"168":{},"202":{},"260":{}},"component":{}}],["rook",{"_index":2342,"title":{},"name":{},"text":{"49":{}},"component":{}}],["root",{"_index":813,"title":{},"name":{},"text":{"4":{},"22":{},"55":{},"59":{},"73":{},"124":{},"125":{},"138":{},"142":{},"159":{},"195":{},"254":{},"256":{}},"component":{}}],["root:$(id",{"_index":3734,"title":{},"name":{},"text":{"73":{}},"component":{}}],["root_block_devic",{"_index":3562,"title":{},"name":{},"text":{"73":{}},"component":{}}],["rootvolum",{"_index":3746,"title":{},"name":{},"text":{"73":{}},"component":{}}],["rotat",{"_index":1980,"title":{},"name":{},"text":{"30":{},"75":{},"123":{},"195":{},"255":{}},"component":{}}],["roughli",{"_index":1882,"title":{},"name":{},"text":{"25":{}},"component":{}}],["roundcub",{"_index":2413,"title":{},"name":{},"text":{"49":{}},"component":{}}],["rout",{"_index":667,"title":{"201":{},"73-5":{},"193-4":{},"251-3":{}},"name":{},"text":{"4":{},"28":{},"29":{},"30":{},"55":{},"57":{},"60":{},"73":{},"119":{},"124":{},"127":{},"129":{},"139":{},"188":{},"189":{},"193":{},"197":{},"199":{},"201":{},"247":{},"248":{},"250":{},"251":{},"254":{},"255":{},"271":{},"272":{}},"component":{}}],["route.openshift.io/v1",{"_index":5819,"title":{},"name":{},"text":{"188":{},"248":{}},"component":{}}],["route.yaml",{"_index":833,"title":{},"name":{},"text":{"4":{}},"component":{}}],["route53",{"_index":1876,"title":{},"name":{},"text":{"25":{}},"component":{}}],["route53hostedzone=\"${basedomain/${clusternameshort",{"_index":3870,"title":{},"name":{},"text":{"73":{}},"component":{}}],["router",{"_index":1960,"title":{},"name":{},"text":{"29":{},"40":{},"73":{},"75":{},"76":{},"188":{},"247":{}},"component":{}}],["routes.yaml",{"_index":6031,"title":{},"name":{"201":{}},"text":{},"component":{}}],["routin",{"_index":1816,"title":{},"name":{},"text":{"23":{}},"component":{}}],["row",{"_index":2043,"title":{"52":{},"52-6":{},"52-12":{},"229-7":{}},"name":{"52":{}},"text":{"33":{},"50":{},"52":{},"59":{},"84":{},"107":{},"108":{},"119":{},"127":{},"141":{},"152":{},"163":{},"167":{},"209":{},"222":{},"226":{},"229":{},"242":{}},"component":{}}],["row’",{"_index":6263,"title":{},"name":{},"text":{"226":{}},"component":{}}],["rpo",{"_index":1702,"title":{},"name":{},"text":{"21":{}},"component":{}}],["rrm",{"_index":6660,"title":{},"name":{},"text":{"268":{}},"component":{}}],["rsa",{"_index":3623,"title":{},"name":{},"text":{"73":{},"196":{}},"component":{}}],["rspamd",{"_index":2420,"title":{},"name":{},"text":{"49":{}},"component":{}}],["rto",{"_index":1703,"title":{},"name":{},"text":{"21":{}},"component":{}}],["rule",{"_index":415,"title":{"59-5":{},"60-14":{},"108-11":{},"119-5":{},"196-2":{},"244-6":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"29":{},"49":{},"55":{},"59":{},"60":{},"66":{},"72":{},"81":{},"84":{},"108":{},"118":{},"119":{},"123":{},"125":{},"132":{},"164":{},"175":{},"196":{},"202":{},"205":{},"209":{},"234":{},"242":{},"244":{},"245":{},"254":{},"257":{},"270":{},"271":{},"272":{}},"component":{}}],["run",{"_index":606,"title":{"205":{},"60-6":{},"73-26":{}},"name":{},"text":{"4":{},"16":{},"19":{},"23":{},"30":{},"31":{},"34":{},"39":{},"40":{},"52":{},"56":{},"60":{},"63":{},"67":{},"73":{},"80":{},"81":{},"104":{},"105":{},"107":{},"108":{},"118":{},"125":{},"128":{},"129":{},"159":{},"165":{},"167":{},"168":{},"181":{},"183":{},"186":{},"195":{},"199":{},"205":{},"212":{},"216":{},"217":{},"242":{},"253":{},"255":{},"268":{}},"component":{}}],["runtim",{"_index":1546,"title":{},"name":{},"text":{"14":{},"81":{},"205":{}},"component":{}}],["runtimeservic",{"_index":5333,"title":{},"name":{},"text":{"160":{},"271":{}},"component":{}}],["runtimeservice.createmessagecorrelation(payload.getentitynam",{"_index":6828,"title":{},"name":{},"text":{"271":{}},"component":{}}],["s",{"_index":917,"title":{},"name":{},"text":{"4":{},"52":{},"58":{},"73":{},"84":{},"138":{},"209":{},"230":{},"271":{}},"component":{}}],["s#.*sha256:(.*)#\\\\1",{"_index":3821,"title":{},"name":{},"text":{"73":{}},"component":{}}],["s(cephdata",{"_index":5004,"title":{},"name":{},"text":{"141":{},"161":{}},"component":{}}],["s(data",{"_index":6224,"title":{},"name":{},"text":{"216":{}},"component":{}}],["s(edrresponsebodi",{"_index":5465,"title":{},"name":{},"text":{"162":{}},"component":{}}],["s(entityloc",{"_index":2809,"title":{},"name":{},"text":{"58":{}},"component":{}}],["s(payload",{"_index":5286,"title":{},"name":{},"text":{"159":{},"162":{}},"component":{}}],["s(personnelgrid.tostr",{"_index":5032,"title":{},"name":{},"text":{"141":{}},"component":{}}],["s(request",{"_index":5316,"title":{},"name":{},"text":{"159":{}},"component":{}}],["s.name",{"_index":4860,"title":{},"name":{},"text":{"138":{}},"component":{}}],["s.staff_status_id",{"_index":4859,"title":{},"name":{},"text":{"138":{}},"component":{}}],["s/apps.clust",{"_index":923,"title":{},"name":{},"text":{"4":{}},"component":{}}],["s3",{"_index":687,"title":{"72":{}},"name":{},"text":{"4":{},"21":{},"30":{},"47":{},"49":{},"72":{},"73":{},"85":{},"193":{},"250":{},"258":{}},"component":{}}],["s3://mdtu",{"_index":3813,"title":{},"name":{},"text":{"73":{}},"component":{}}],["s3_bucket",{"_index":3486,"title":{},"name":{},"text":{"73":{}},"component":{}}],["s3_states_bucket_nam",{"_index":3520,"title":{},"name":{},"text":{"73":{}},"component":{}}],["s3api",{"_index":3367,"title":{},"name":{},"text":{"72":{}},"component":{}}],["s_",{"_index":3168,"title":{},"name":{},"text":{"63":{}},"component":{}}],["saa",{"_index":525,"title":{},"name":{},"text":{"2":{},"44":{}},"component":{}}],["safe",{"_index":2139,"title":{},"name":{},"text":{"46":{},"67":{},"85":{},"188":{}},"component":{}}],["safeguard",{"_index":4189,"title":{},"name":{},"text":{"99":{}},"component":{}}],["safeti",{"_index":2969,"title":{},"name":{},"text":{"59":{},"81":{}},"component":{}}],["safety,104.214",{"_index":3051,"title":{},"name":{},"text":{"59":{}},"component":{}}],["salari",{"_index":5057,"title":{},"name":{},"text":{"141":{},"159":{}},"component":{}}],["same",{"_index":474,"title":{},"name":{},"text":{"2":{},"4":{},"12":{},"21":{},"23":{},"28":{},"29":{},"31":{},"32":{},"39":{},"40":{},"52":{},"57":{},"58":{},"59":{},"60":{},"73":{},"75":{},"103":{},"107":{},"108":{},"115":{},"119":{},"120":{},"127":{},"131":{},"135":{},"138":{},"140":{},"143":{},"150":{},"151":{},"152":{},"154":{},"155":{},"158":{},"160":{},"166":{},"167":{},"168":{},"175":{},"177":{},"181":{},"186":{},"193":{},"203":{},"207":{},"210":{},"212":{},"217":{},"221":{},"222":{},"227":{},"234":{},"237":{},"240":{},"242":{},"245":{},"251":{},"254":{},"257":{},"264":{},"267":{},"268":{},"269":{},"270":{}},"component":{}}],["saml",{"_index":2197,"title":{},"name":{},"text":{"47":{},"204":{},"255":{}},"component":{}}],["samm",{"_index":3225,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["sampl",{"_index":2906,"title":{"111":{}},"name":{},"text":{"59":{},"108":{},"110":{},"111":{},"139":{},"141":{},"166":{},"185":{},"205":{},"258":{}},"component":{}}],["san",{"_index":5748,"title":{},"name":{},"text":{"183":{}},"component":{}}],["sandbox",{"_index":2019,"title":{},"name":{},"text":{"32":{},"58":{}},"component":{}}],["sanit",{"_index":6449,"title":{},"name":{},"text":{"253":{}},"component":{}}],["sast",{"_index":1286,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["satellit",{"_index":2784,"title":{},"name":{},"text":{"58":{}},"component":{}}],["satisfact",{"_index":341,"title":{},"name":{},"text":{"2":{}},"component":{}}],["satisfi",{"_index":2605,"title":{},"name":{},"text":{"52":{},"99":{},"227":{}},"component":{}}],["save",{"_index":730,"title":{"225":{},"52-12":{},"58-11":{},"139-12":{},"139-18":{},"140-17":{},"140-20":{},"140-26":{},"141-14":{},"141-15":{},"141-24":{},"141-26":{},"167-29":{},"205-7":{},"207-3":{}},"name":{"105":{},"225":{}},"text":{"4":{},"5":{},"8":{},"9":{},"15":{},"16":{},"21":{},"23":{},"28":{},"33":{},"36":{},"40":{},"42":{},"43":{},"45":{},"52":{},"55":{},"58":{},"59":{},"61":{},"66":{},"73":{},"75":{},"76":{},"78":{},"100":{},"103":{},"105":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"126":{},"127":{},"129":{},"136":{},"139":{},"140":{},"141":{},"142":{},"154":{},"159":{},"160":{},"161":{},"162":{},"165":{},"167":{},"173":{},"182":{},"183":{},"186":{},"192":{},"195":{},"201":{},"203":{},"205":{},"207":{},"208":{},"216":{},"217":{},"223":{},"224":{},"225":{},"227":{},"230":{},"231":{},"232":{},"234":{},"236":{},"237":{},"238":{},"242":{},"244":{},"245":{},"253":{},"262":{},"264":{},"267":{},"268":{},"270":{},"271":{}},"component":{}}],["save_digital_docu",{"_index":6271,"title":{},"name":{},"text":{"227":{}},"component":{}}],["save_digital_document(requestbyt",{"_index":6705,"title":{},"name":{},"text":{"269":{}},"component":{}}],["save_digital_document_from_url",{"_index":4299,"title":{},"name":{},"text":{"105":{},"262":{}},"component":{}}],["save_digital_document_from_url(str",{"_index":4301,"title":{},"name":{},"text":{"105":{}},"component":{}}],["save_digital_document_from_url(url",{"_index":2543,"title":{},"name":{},"text":{"51":{}},"component":{}}],["saving.bpmn",{"_index":2490,"title":{},"name":{},"text":{"51":{},"105":{}},"component":{}}],["sbom",{"_index":3244,"title":{},"name":{},"text":{"67":{}},"component":{}}],["sc",{"_index":3005,"title":{},"name":{"257":{}},"text":{"59":{},"167":{}},"component":{}}],["sca",{"_index":1287,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["scalabl",{"_index":2118,"title":{"81-4":{},"194-8":{},"199-7":{},"208-7":{}},"name":{},"text":{"44":{},"48":{},"81":{},"85":{},"153":{},"194":{},"199":{},"208":{},"258":{}},"component":{}}],["scale",{"_index":503,"title":{"23":{},"38":{},"39":{},"80":{},"258":{},"23-2":{},"23-5":{},"80-1":{},"258-3":{}},"name":{"39":{}},"text":{"2":{},"6":{},"23":{},"38":{},"39":{},"50":{},"58":{},"80":{},"81":{},"194":{},"199":{},"208":{},"258":{}},"component":{}}],["scaledown",{"_index":3962,"title":{},"name":{},"text":{"80":{}},"component":{}}],["scaletargetref",{"_index":3932,"title":{},"name":{},"text":{"80":{}},"component":{}}],["scan",{"_index":1285,"title":{"67-14":{}},"name":{},"text":{"6":{},"67":{},"242":{}},"component":{}}],["scanner",{"_index":1289,"title":{},"name":{},"text":{"6":{}},"component":{}}],["scc",{"_index":4022,"title":{},"name":{},"text":{"81":{}},"component":{}}],["scenario",{"_index":1393,"title":{"166":{},"58-7":{},"67-9":{},"84-4":{},"107-3":{},"107-4":{},"107-5":{},"166-4":{},"195-3":{},"244-2":{},"253-3":{},"254-3":{},"255-3":{},"257-4":{},"267-3":{},"268-2":{},"269-2":{},"270-3":{},"271-2":{},"271-6":{}},"name":{},"text":{"6":{},"21":{},"46":{},"48":{},"57":{},"58":{},"67":{},"75":{},"84":{},"100":{},"105":{},"107":{},"124":{},"153":{},"158":{},"164":{},"166":{},"167":{},"170":{},"171":{},"177":{},"183":{},"186":{},"195":{},"204":{},"205":{},"218":{},"225":{},"226":{},"242":{},"244":{},"253":{},"254":{},"255":{},"257":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["schedul",{"_index":938,"title":{"15":{},"16":{},"51":{},"253":{},"15-2":{},"16-2":{},"21-2":{}},"name":{"15":{},"16":{},"253":{}},"text":{"4":{},"15":{},"16":{},"20":{},"21":{},"22":{},"30":{},"51":{},"80":{},"203":{},"204":{},"242":{},"253":{},"258":{}},"component":{}}],["schedule_",{"_index":1605,"title":{},"name":{},"text":{"15":{}},"component":{}}],["scheduledwork",{"_index":2695,"title":{},"name":{},"text":{"56":{},"189":{}},"component":{}}],["schema",{"_index":1565,"title":{"139-12":{},"140-20":{},"209-2":{},"242-11":{},"257-7":{}},"name":{},"text":{"14":{},"32":{},"47":{},"49":{},"52":{},"66":{},"84":{},"119":{},"123":{},"138":{},"139":{},"140":{},"141":{},"158":{},"165":{},"166":{},"167":{},"171":{},"198":{},"209":{},"241":{},"242":{},"244":{},"257":{},"265":{},"267":{},"270":{}},"component":{}}],["schema/latest/liquibas",{"_index":4789,"title":{},"name":{},"text":{"138":{},"244":{}},"component":{}}],["scheme",{"_index":573,"title":{"82-2":{},"83-2":{},"124-2":{}},"name":{},"text":{"2":{},"47":{},"55":{},"57":{},"60":{},"83":{},"84":{},"124":{},"209":{},"210":{},"257":{},"272":{}},"component":{}}],["school",{"_index":4439,"title":{"154-3":{},"154-10":{}},"name":{},"text":{"111":{},"124":{},"134":{},"154":{},"179":{},"181":{}},"component":{}}],["school_",{"_index":5197,"title":{},"name":{},"text":{"154":{}},"component":{}}],["scope",{"_index":424,"title":{"67-2":{},"99-3":{},"268-7":{},"270-10":{},"270-12":{}},"name":{},"text":{"2":{},"6":{},"67":{},"99":{},"167":{},"179":{},"262":{},"268":{},"270":{},"272":{}},"component":{}}],["scout",{"_index":1120,"title":{},"name":{},"text":{"6":{}},"component":{}}],["scp",{"_index":3414,"title":{},"name":{},"text":{"73":{}},"component":{}}],["scratch",{"_index":1911,"title":{"73":{},"73-29":{}},"name":{},"text":{"27":{},"73":{},"74":{},"128":{},"233":{}},"component":{}}],["screen",{"_index":1529,"title":{},"name":{},"text":{"12":{},"60":{},"142":{},"244":{},"262":{},"265":{}},"component":{}}],["screenshot",{"_index":4448,"title":{},"name":{},"text":{"113":{},"155":{}},"component":{}}],["script",{"_index":182,"title":{"262":{},"267":{},"49-4":{},"52-5":{},"105-6":{},"140-15":{},"141-8":{},"141-10":{},"141-14":{},"154-12":{},"161-6":{},"161-9":{},"161-12":{},"162-7":{},"162-9":{},"216-12":{},"256-2":{},"267-5":{},"272-2":{}},"name":{"262":{},"267":{}},"text":{"1":{},"2":{},"4":{},"31":{},"49":{},"51":{},"52":{},"56":{},"57":{},"58":{},"60":{},"67":{},"73":{},"84":{},"87":{},"99":{},"103":{},"105":{},"140":{},"141":{},"142":{},"154":{},"158":{},"159":{},"161":{},"162":{},"181":{},"195":{},"202":{},"212":{},"213":{},"216":{},"229":{},"242":{},"253":{},"255":{},"256":{},"262":{},"263":{},"264":{},"267":{},"269":{},"270":{},"272":{}},"component":{}}],["script/program",{"_index":6620,"title":{},"name":{},"text":{"262":{}},"component":{}}],["script’",{"_index":5455,"title":{},"name":{},"text":{"162":{}},"component":{}}],["scroll",{"_index":1536,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"30":{},"31":{},"34":{},"36":{},"42":{},"43":{},"118":{},"122":{},"131":{},"145":{},"151":{},"152":{},"232":{}},"component":{}}],["scrum",{"_index":1035,"title":{"6-16":{}},"name":{},"text":{"6":{}},"component":{}}],["sdk",{"_index":2381,"title":{},"name":{},"text":{"49":{},"204":{}},"component":{}}],["sdn",{"_index":1851,"title":{},"name":{},"text":{"24":{}},"component":{}}],["seal",{"_index":431,"title":{},"name":{},"text":{"2":{},"4":{},"30":{},"78":{},"206":{}},"component":{}}],["search",{"_index":671,"title":{"158":{},"221":{},"239":{},"257":{},"52-4":{},"58-17":{},"58-19":{},"60-13":{},"138-10":{},"138-11":{},"138-12":{},"138-13":{},"138-14":{},"138-15":{},"138-16":{},"138-17":{},"140-10":{},"141-9":{},"141-19":{},"154-7":{},"158-3":{},"158-5":{},"161-8":{},"162-6":{},"162-8":{},"167-9":{},"167-10":{},"167-11":{},"167-13":{},"167-20":{},"242-2":{},"257-11":{}},"name":{"221":{},"239":{}},"text":{"4":{},"5":{},"30":{},"32":{},"46":{},"49":{},"52":{},"58":{},"59":{},"60":{},"63":{},"66":{},"68":{},"84":{},"104":{},"105":{},"107":{},"108":{},"119":{},"124":{},"127":{},"129":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"148":{},"149":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"166":{},"167":{},"171":{},"179":{},"181":{},"208":{},"209":{},"220":{},"221":{},"226":{},"230":{},"238":{},"239":{},"242":{},"257":{},"272":{}},"component":{}}],["search_condit",{"_index":4149,"title":{},"name":{},"text":{"84":{}},"component":{}}],["search_condition_simple_test",{"_index":5571,"title":{},"name":{},"text":{"167":{}},"component":{}}],["search_condition_test_v",{"_index":5550,"title":{},"name":{},"text":{"167":{}},"component":{}}],["search_licenses_by_statu",{"_index":2569,"title":{},"name":{},"text":{"52":{}},"component":{}}],["search_param",{"_index":5586,"title":{},"name":{},"text":{"167":{}},"component":{}}],["searchcondit",{"_index":6840,"title":{},"name":{},"text":{"272":{}},"component":{}}],["searchedrpoucodeoffic",{"_index":5435,"title":{},"name":{},"text":{"162":{}},"component":{}}],["searchforlabbynameandedrpouact",{"_index":4925,"title":{},"name":{},"text":{"140":{}},"component":{}}],["searchlabindatafactoryact",{"_index":4997,"title":{},"name":{},"text":{"141":{}},"component":{}}],["searchparam",{"_index":5591,"title":{},"name":{},"text":{"167":{}},"component":{}}],["searchsubject",{"_index":5438,"title":{},"name":{},"text":{"162":{}},"component":{}}],["searchsubjectsrespons",{"_index":5468,"title":{},"name":{},"text":{"162":{}},"component":{}}],["searchtyp",{"_index":5534,"title":{"167-14":{}},"name":{},"text":{"167":{},"257":{}},"component":{}}],["searchtype=\"equ",{"_index":2576,"title":{},"name":{},"text":{"52":{}},"component":{}}],["searchtype=\"notequ",{"_index":2998,"title":{},"name":{},"text":{"59":{}},"component":{}}],["searchtype=\"startswith",{"_index":2999,"title":{},"name":{},"text":{"59":{}},"component":{}}],["second",{"_index":1398,"title":{"19-6":{},"154-10":{}},"name":{},"text":{"6":{},"13":{},"19":{},"25":{},"51":{},"55":{},"57":{},"61":{},"66":{},"100":{},"107":{},"113":{},"140":{},"141":{},"144":{},"154":{},"155":{},"166":{},"167":{},"179":{},"213":{},"222":{},"258":{},"271":{},"272":{}},"component":{}}],["second_nam",{"_index":4683,"title":{},"name":{},"text":{"135":{}},"component":{}}],["secondari",{"_index":3208,"title":{"73-18":{}},"name":{},"text":{"66":{},"73":{},"100":{},"135":{},"136":{},"138":{},"160":{}},"component":{}}],["secondnam",{"_index":3136,"title":{},"name":{},"text":{"61":{},"161":{}},"component":{}}],["secondversa",{"_index":5198,"title":{},"name":{},"text":{"154":{}},"component":{}}],["secret",{"_index":684,"title":{"88":{},"96":{},"97":{},"195":{},"49-31":{},"104-2":{},"195-16":{},"195-17":{},"195-18":{}},"name":{"96":{},"97":{},"195":{}},"text":{"4":{},"6":{},"14":{},"21":{},"25":{},"28":{},"33":{},"40":{},"49":{},"50":{},"65":{},"67":{},"73":{},"75":{},"81":{},"87":{},"88":{},"104":{},"115":{},"118":{},"122":{},"123":{},"124":{},"192":{},"195":{},"196":{},"255":{},"256":{},"272":{}},"component":{}}],["secret/aw",{"_index":3858,"title":{},"name":{},"text":{"73":{}},"component":{}}],["secret2",{"_index":4293,"title":{},"name":{},"text":{"104":{}},"component":{}}],["secretkey",{"_index":5902,"title":{},"name":{},"text":{"195":{}},"component":{}}],["secretkeyref",{"_index":6547,"title":{},"name":{},"text":{"258":{}},"component":{}}],["secretnam",{"_index":5915,"title":{},"name":{},"text":{"195":{},"272":{}},"component":{}}],["secrets.io/v1beta1",{"_index":5895,"title":{},"name":{},"text":{"195":{}},"component":{}}],["secretstor",{"_index":5898,"title":{},"name":{},"text":{"195":{}},"component":{}}],["secretstoreref",{"_index":5897,"title":{},"name":{},"text":{"195":{}},"component":{}}],["section",{"_index":160,"title":{"20-1":{},"37-2":{},"38-1":{},"41-1":{},"44-7":{},"54-1":{},"64-1":{},"71-1":{},"116-1":{},"121-1":{},"130-1":{},"146-1":{},"147-1":{},"170-1":{},"178-1":{},"180-1":{},"185-1":{},"187-1":{},"243-1":{},"263-1":{}},"name":{},"text":{"1":{},"4":{},"6":{},"10":{},"12":{},"13":{},"15":{},"16":{},"17":{},"21":{},"22":{},"23":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"39":{},"41":{},"42":{},"43":{},"44":{},"46":{},"51":{},"52":{},"56":{},"57":{},"58":{},"60":{},"66":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"99":{},"100":{},"103":{},"104":{},"105":{},"107":{},"111":{},"112":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"122":{},"124":{},"126":{},"127":{},"129":{},"131":{},"137":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"148":{},"149":{},"151":{},"152":{},"153":{},"154":{},"157":{},"159":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"174":{},"177":{},"181":{},"182":{},"185":{},"186":{},"187":{},"188":{},"191":{},"193":{},"194":{},"197":{},"198":{},"199":{},"201":{},"202":{},"208":{},"210":{},"212":{},"221":{},"222":{},"223":{},"224":{},"225":{},"227":{},"230":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"242":{},"244":{},"245":{},"246":{},"249":{},"250":{},"251":{},"257":{},"262":{},"266":{},"267":{},"270":{},"272":{}},"component":{}}],["secur",{"_index":39,"title":{"67":{},"95":{},"98":{},"193":{},"48-9":{},"67-2":{},"67-5":{},"67-6":{},"67-9":{},"81-8":{},"88-7":{},"99-9":{},"99-21":{},"195-27":{},"195-30":{},"197-8":{},"204-7":{},"208-10":{},"253-12":{},"253-15":{},"254-11":{},"255-17":{},"255-20":{}},"name":{"67":{},"98":{},"193":{},"250":{},"251":{},"252":{}},"text":{"1":{},"2":{},"6":{},"7":{},"9":{},"14":{},"15":{},"16":{},"17":{},"18":{},"25":{},"29":{},"30":{},"32":{},"44":{},"45":{},"46":{},"47":{},"48":{},"50":{},"55":{},"56":{},"59":{},"67":{},"73":{},"75":{},"78":{},"81":{},"84":{},"88":{},"99":{},"104":{},"108":{},"119":{},"120":{},"122":{},"123":{},"131":{},"142":{},"154":{},"162":{},"168":{},"173":{},"193":{},"195":{},"196":{},"197":{},"204":{},"208":{},"209":{},"227":{},"251":{},"253":{},"254":{},"255":{},"272":{}},"component":{}}],["security.istio.io/v1beta1",{"_index":5940,"title":{},"name":{},"text":{"196":{}},"component":{}}],["security/sca",{"_index":1374,"title":{},"name":{},"text":{"6":{}},"component":{}}],["security_group",{"_index":3620,"title":{},"name":{},"text":{"73":{}},"component":{}}],["securitygroup",{"_index":3992,"title":{},"name":{},"text":{"80":{}},"component":{}}],["sed",{"_index":916,"title":{},"name":{},"text":{"4":{},"73":{}},"component":{}}],["see",{"_index":164,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"12":{},"15":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"36":{},"48":{},"50":{},"52":{},"55":{},"57":{},"58":{},"59":{},"60":{},"61":{},"66":{},"69":{},"70":{},"73":{},"78":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"154":{},"155":{},"158":{},"160":{},"161":{},"165":{},"167":{},"168":{},"171":{},"175":{},"177":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"188":{},"195":{},"199":{},"213":{},"216":{},"218":{},"220":{},"223":{},"224":{},"225":{},"227":{},"229":{},"230":{},"234":{},"237":{},"242":{},"244":{},"245":{},"247":{},"253":{},"256":{},"265":{},"270":{},"272":{}},"component":{}}],["seg",{"_index":559,"title":{"66-15":{}},"name":{},"text":{"2":{},"46":{},"66":{},"122":{},"162":{},"195":{}},"component":{}}],["segment",{"_index":1183,"title":{},"name":{},"text":{"6":{},"81":{}},"component":{}}],["sei",{"_index":561,"title":{"46-6":{}},"name":{},"text":{"2":{},"31":{},"46":{},"47":{}},"component":{}}],["seir",{"_index":562,"title":{"46-6":{}},"name":{},"text":{"2":{},"31":{},"46":{},"47":{}},"component":{}}],["select",{"_index":727,"title":{"52":{},"231":{},"232":{},"52-4":{},"52-12":{},"58-11":{},"76-3":{},"231-1":{},"231-2":{}},"name":{"111":{},"231":{},"232":{}},"text":{"4":{},"6":{},"9":{},"12":{},"13":{},"16":{},"17":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"33":{},"36":{},"39":{},"40":{},"42":{},"43":{},"52":{},"57":{},"58":{},"59":{},"60":{},"63":{},"66":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"83":{},"99":{},"100":{},"103":{},"104":{},"107":{},"108":{},"111":{},"112":{},"115":{},"118":{},"119":{},"120":{},"122":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"148":{},"149":{},"150":{},"152":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"166":{},"167":{},"173":{},"175":{},"177":{},"182":{},"183":{},"186":{},"195":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"231":{},"232":{},"233":{},"236":{},"237":{},"242":{},"244":{},"246":{},"255":{},"258":{},"259":{},"260":{},"261":{},"262":{},"267":{},"271":{},"272":{}},"component":{}}],["select_",{"_index":5110,"title":{},"name":{},"text":{"142":{}},"component":{}}],["select_query_based_dropdown_list",{"_index":5106,"title":{},"name":{},"text":{"142":{}},"component":{}}],["selector",{"_index":3972,"title":{},"name":{},"text":{"80":{},"196":{},"254":{},"258":{},"272":{}},"component":{}}],["selectprocessinstanceid",{"_index":6346,"title":{},"name":{},"text":{"231":{}},"component":{}}],["selectrelatedtask",{"_index":6354,"title":{},"name":{},"text":{"231":{}},"component":{}}],["selenium",{"_index":1360,"title":{},"name":{},"text":{"6":{},"49":{}},"component":{}}],["self",{"_index":931,"title":{"117":{},"73-27":{},"117-2":{}},"name":{"117":{}},"text":{"4":{},"6":{},"9":{},"23":{},"30":{},"46":{},"52":{},"59":{},"66":{},"73":{},"75":{},"81":{},"99":{},"116":{},"117":{},"137":{},"255":{}},"component":{}}],["selfregistr",{"_index":4487,"title":{},"name":{},"text":{"117":{}},"component":{}}],["selfregistration_decis",{"_index":2987,"title":{},"name":{},"text":{"59":{}},"component":{}}],["semant",{"_index":1297,"title":{},"name":{},"text":{"6":{}},"component":{}}],["semgrep",{"_index":1316,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["semicolon",{"_index":4279,"title":{},"name":{},"text":{"103":{},"107":{},"108":{}},"component":{}}],["send",{"_index":459,"title":{"145":{},"146":{},"185":{},"187":{},"25-5":{},"73-52":{},"162-8":{},"271-11":{}},"name":{},"text":{"2":{},"10":{},"25":{},"30":{},"47":{},"49":{},"55":{},"57":{},"66":{},"73":{},"118":{},"123":{},"129":{},"133":{},"142":{},"144":{},"145":{},"146":{},"154":{},"161":{},"162":{},"179":{},"183":{},"184":{},"185":{},"186":{},"187":{},"195":{},"202":{},"211":{},"212":{},"213":{},"218":{},"230":{},"253":{},"260":{},"271":{}},"component":{}}],["send_user_notif",{"_index":5779,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["sender",{"_index":6171,"title":{},"name":{},"text":{"212":{},"218":{}},"component":{}}],["sendintermediatemessag",{"_index":6184,"title":{},"name":{},"text":{"212":{}},"component":{}}],["sendlabtodatafactoryact",{"_index":4968,"title":{},"name":{},"text":{"140":{}},"component":{}}],["sendmessagefirst",{"_index":6239,"title":{},"name":{},"text":{"218":{}},"component":{}}],["sendusernotification.json",{"_index":5737,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["sens",{"_index":3325,"title":{},"name":{},"text":{"67":{},"99":{},"258":{},"267":{}},"component":{}}],["sensit",{"_index":3219,"title":{},"name":{},"text":{"67":{},"81":{},"99":{},"196":{},"253":{}},"component":{}}],["sent",{"_index":1893,"title":{},"name":{},"text":{"25":{},"52":{},"122":{},"133":{},"140":{},"144":{},"155":{},"161":{},"167":{},"182":{},"196":{},"209":{},"211":{},"216":{},"218":{},"229":{},"254":{},"258":{},"265":{},"271":{}},"component":{}}],["sentinel",{"_index":2332,"title":{},"name":{},"text":{"49":{},"198":{}},"component":{}}],["separ",{"_index":108,"title":{"256":{}},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"12":{},"15":{},"16":{},"28":{},"29":{},"30":{},"32":{},"33":{},"37":{},"39":{},"42":{},"43":{},"44":{},"48":{},"50":{},"52":{},"58":{},"66":{},"67":{},"73":{},"75":{},"84":{},"100":{},"103":{},"107":{},"108":{},"118":{},"119":{},"122":{},"124":{},"138":{},"141":{},"142":{},"150":{},"154":{},"155":{},"167":{},"168":{},"183":{},"186":{},"193":{},"195":{},"201":{},"202":{},"205":{},"210":{},"216":{},"217":{},"227":{},"251":{},"254":{},"255":{},"256":{},"258":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{}},"component":{}}],["seq",{"_index":4055,"title":{},"name":{},"text":{"83":{},"165":{},"167":{}},"component":{}}],["sequenc",{"_index":582,"title":{"86-2":{},"86-3":{}},"name":{},"text":{"2":{},"51":{},"73":{},"83":{},"159":{},"165":{},"167":{},"205":{},"210":{},"213":{},"214":{},"216":{},"217":{},"259":{},"260":{},"261":{},"268":{}},"component":{}}],["sequenti",{"_index":1677,"title":{},"name":{},"text":{"19":{},"119":{},"229":{},"242":{}},"component":{}}],["seri",{"_index":3770,"title":{},"name":{},"text":{"73":{},"120":{},"135":{}},"component":{}}],["serial",{"_index":6724,"title":{},"name":{},"text":{"269":{}},"component":{}}],["serif;\\n}\\n\\n.head",{"_index":5749,"title":{},"name":{},"text":{"183":{}},"component":{}}],["serv",{"_index":457,"title":{},"name":{},"text":{"2":{},"6":{},"49":{},"50":{},"59":{},"99":{},"104":{},"122":{},"138":{},"157":{},"160":{},"195":{},"205":{},"234":{},"258":{},"272":{}},"component":{}}],["server",{"_index":395,"title":{"25":{},"182":{},"30-4":{},"49-3":{},"49-23":{},"182-2":{},"182-3":{},"270-6":{}},"name":{"25":{},"182":{}},"text":{"2":{},"4":{},"9":{},"15":{},"19":{},"25":{},"27":{},"29":{},"30":{},"31":{},"32":{},"40":{},"49":{},"58":{},"65":{},"67":{},"73":{},"87":{},"122":{},"123":{},"133":{},"138":{},"162":{},"163":{},"167":{},"179":{},"182":{},"183":{},"185":{},"195":{},"198":{},"204":{},"205":{},"230":{},"254":{},"255":{},"258":{},"260":{},"270":{},"272":{}},"component":{}}],["server.mdtu",{"_index":5685,"title":{},"name":{},"text":{"179":{}},"component":{}}],["server=https://api.backup.mdtu",{"_index":1633,"title":{},"name":{},"text":{"18":{}},"component":{}}],["server=https://api.cicd2.mdtu",{"_index":3170,"title":{},"name":{},"text":{"63":{}},"component":{}}],["server’",{"_index":1580,"title":{},"name":{},"text":{"15":{},"140":{}},"component":{}}],["servic",{"_index":24,"title":{"32":{},"63":{},"88":{},"104":{},"143":{},"150":{},"151":{},"192":{},"198":{},"237":{},"255":{},"256":{},"30-9":{},"30-10":{},"32-2":{},"32-5":{},"32-6":{},"32-7":{},"32-8":{},"32-10":{},"32-11":{},"32-14":{},"32-15":{},"32-18":{},"32-19":{},"32-21":{},"32-23":{},"32-24":{},"32-25":{},"32-26":{},"32-27":{},"46-5":{},"46-7":{},"46-8":{},"49-25":{},"55-8":{},"60-1":{},"69-3":{},"69-4":{},"69-5":{},"69-6":{},"70-3":{},"70-4":{},"70-5":{},"70-6":{},"104-1":{},"104-2":{},"119-4":{},"139-10":{},"140-9":{},"140-10":{},"140-16":{},"140-17":{},"140-18":{},"141-9":{},"141-15":{},"141-16":{},"154-8":{},"161-7":{},"161-8":{},"161-13":{},"162-5":{},"162-8":{},"173-1":{},"195-21":{},"205-14":{},"255-11":{},"257-8":{},"267-9":{},"267-10":{},"267-13":{},"271-6":{},"271-9":{},"271-12":{},"271-13":{},"271-14":{},"272-10":{},"272-12":{},"272-16":{}},"name":{"198":{}},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"9":{},"10":{},"12":{},"14":{},"19":{},"25":{},"26":{},"28":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"39":{},"40":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"76":{},"78":{},"81":{},"83":{},"84":{},"86":{},"87":{},"88":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"111":{},"112":{},"113":{},"116":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"145":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"165":{},"167":{},"168":{},"173":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"188":{},"189":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"201":{},"202":{},"204":{},"205":{},"206":{},"208":{},"209":{},"211":{},"213":{},"216":{},"217":{},"218":{},"221":{},"222":{},"227":{},"230":{},"231":{},"232":{},"237":{},"238":{},"242":{},"247":{},"248":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"264":{},"266":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["service.org",{"_index":5893,"title":{},"name":{},"text":{"195":{}},"component":{}}],["service/damag",{"_index":4288,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["service/rout",{"_index":2646,"title":{},"name":{},"text":{"55":{}},"component":{}}],["serviceentri",{"_index":4281,"title":{},"name":{},"text":{"104":{},"195":{}},"component":{}}],["servicemesh",{"_index":6021,"title":{},"name":{},"text":{"199":{}},"component":{}}],["servicemonitor",{"_index":6859,"title":{},"name":{},"text":{"272":{}},"component":{}}],["service’",{"_index":1929,"title":{},"name":{},"text":{"28":{}},"component":{}}],["session",{"_index":1256,"title":{},"name":{},"text":{"6":{},"48":{},"49":{},"55":{},"67":{},"168":{},"184":{},"199":{},"200":{}},"component":{}}],["sessions_admin_tool",{"_index":6028,"title":{"200-3":{}},"name":{},"text":{"200":{}},"component":{}}],["set",{"_index":154,"title":{"15":{},"62":{},"101":{},"171":{},"173":{},"177":{},"184":{},"190":{},"195":{},"224":{},"254":{},"15-2":{},"16-2":{},"30-1":{},"30-4":{},"30-7":{},"30-11":{},"31-1":{},"31-2":{},"55-4":{},"61-2":{},"73-4":{},"73-17":{},"73-18":{},"76-3":{},"105-2":{},"117-2":{},"124-5":{},"139-20":{},"140-18":{},"141-16":{},"154-15":{},"159-4":{},"167-21":{},"181-1":{},"186-2":{},"195-14":{},"195-15":{},"195-25":{},"202-6":{},"272-17":{}},"name":{"62":{},"173":{},"176":{}},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"10":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"22":{},"25":{},"29":{},"30":{},"31":{},"33":{},"34":{},"42":{},"44":{},"46":{},"47":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"78":{},"81":{},"84":{},"86":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"115":{},"117":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"132":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"151":{},"152":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"170":{},"171":{},"173":{},"175":{},"177":{},"178":{},"179":{},"181":{},"182":{},"183":{},"185":{},"186":{},"188":{},"189":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"201":{},"202":{},"204":{},"205":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"223":{},"224":{},"227":{},"229":{},"230":{},"231":{},"232":{},"237":{},"242":{},"244":{},"247":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"260":{},"261":{},"268":{},"271":{},"272":{}},"component":{}}],["set=20220602",{"_index":1749,"title":{},"name":{},"text":{"21":{}},"component":{}}],["set_transient_vari",{"_index":6615,"title":{},"name":{},"text":{"262":{}},"component":{}}],["set_transient_variable('canceledlicens",{"_index":2626,"title":{},"name":{},"text":{"52":{}},"component":{}}],["set_transient_variable('createpersonpayload",{"_index":5391,"title":{},"name":{},"text":{"161":{}},"component":{}}],["set_transient_variable('datapayload",{"_index":4965,"title":{},"name":{},"text":{"140":{},"141":{}},"component":{}}],["set_transient_variable('excerpt",{"_index":5318,"title":{},"name":{},"text":{"159":{}},"component":{}}],["set_transient_variable('outputpayload",{"_index":6223,"title":{},"name":{},"text":{"216":{}},"component":{}}],["set_transient_variable('payload",{"_index":2598,"title":{},"name":{},"text":{"52":{},"58":{},"103":{},"141":{},"159":{},"162":{}},"component":{}}],["set_transient_variable('requesthead",{"_index":5441,"title":{},"name":{},"text":{"162":{}},"component":{}}],["set_transient_variable('requestpayload",{"_index":5454,"title":{},"name":{},"text":{"162":{}},"component":{}}],["set_transient_variable('updatepersonpayload",{"_index":5407,"title":{},"name":{},"text":{"161":{}},"component":{}}],["set_vari",{"_index":6614,"title":{},"name":{},"text":{"262":{}},"component":{}}],["set_variable('filecont",{"_index":6707,"title":{},"name":{},"text":{"269":{}},"component":{}}],["set_variable('users',us",{"_index":5203,"title":{},"name":{},"text":{"154":{}},"component":{}}],["set_variable(singlefile.getrefer",{"_index":6688,"title":{},"name":{},"text":{"269":{}},"component":{}}],["setdecoderfiltercallback",{"_index":5969,"title":{},"name":{},"text":{"196":{}},"component":{}}],["settings.general.packag",{"_index":3150,"title":{},"name":{},"text":{"62":{}},"component":{}}],["settings.general.regist",{"_index":3151,"title":{},"name":{},"text":{"62":{}},"component":{}}],["settings.general.vers",{"_index":3152,"title":{},"name":{},"text":{"62":{}},"component":{}}],["settings.yaml",{"_index":904,"title":{"62":{}},"name":{},"text":{"4":{},"132":{},"138":{},"142":{}},"component":{}}],["settings/settings.yml",{"_index":6037,"title":{},"name":{},"text":{"202":{}},"component":{}}],["settlement",{"_index":4665,"title":{},"name":{},"text":{"134":{},"140":{}},"component":{}}],["setup",{"_index":936,"title":{"66-5":{},"125-2":{}},"name":{"25":{},"115":{},"116":{}},"text":{"4":{},"25":{},"30":{},"66":{},"75":{},"125":{},"195":{},"197":{},"255":{},"256":{}},"component":{}}],["setup/cp",{"_index":935,"title":{},"name":{},"text":{"4":{},"30":{}},"component":{}}],["setvariable(payload.getresultvari",{"_index":6831,"title":{},"name":{},"text":{"271":{}},"component":{}}],["sevdeir",{"_index":5449,"title":{},"name":{},"text":{"162":{},"195":{}},"component":{}}],["sever",{"_index":780,"title":{"166-11":{},"269-7":{}},"name":{},"text":{"4":{},"6":{},"21":{},"28":{},"30":{},"31":{},"44":{},"45":{},"59":{},"60":{},"68":{},"73":{},"81":{},"82":{},"83":{},"84":{},"108":{},"117":{},"125":{},"128":{},"132":{},"148":{},"149":{},"163":{},"164":{},"166":{},"167":{},"168":{},"171":{},"179":{},"196":{},"197":{},"205":{},"210":{},"212":{},"223":{},"226":{},"227":{},"232":{},"258":{},"269":{},"271":{}},"component":{}}],["sg",{"_index":3608,"title":{},"name":{},"text":{"73":{},"80":{}},"component":{}}],["sg_privat",{"_index":3619,"title":{},"name":{},"text":{"73":{}},"component":{}}],["sg_public",{"_index":3607,"title":{},"name":{},"text":{"73":{}},"component":{}}],["sha256",{"_index":4312,"title":{},"name":{},"text":{"105":{}},"component":{}}],["shall",{"_index":6506,"title":{},"name":{},"text":{"257":{}},"component":{}}],["shard",{"_index":6517,"title":{},"name":{},"text":{"258":{}},"component":{}}],["share",{"_index":325,"title":{},"name":{},"text":{"2":{},"40":{},"50":{},"78":{},"141":{},"229":{}},"component":{}}],["sheet",{"_index":2481,"title":{},"name":{},"text":{"50":{},"108":{}},"component":{}}],["shell",{"_index":2316,"title":{},"name":{},"text":{"49":{}},"component":{}}],["shift",{"_index":136,"title":{},"name":{},"text":{"1":{},"229":{}},"component":{}}],["ship",{"_index":2966,"title":{},"name":{},"text":{"59":{},"160":{}},"component":{}}],["shipmentinst",{"_index":5336,"title":{},"name":{},"text":{"160":{}},"component":{}}],["sho",{"_index":6841,"title":{},"name":{},"text":{"272":{}},"component":{}}],["short",{"_index":1147,"title":{},"name":{},"text":{"6":{},"57":{},"122":{},"134":{},"163":{},"167":{},"192":{},"202":{},"253":{}},"component":{}}],["short_nam",{"_index":4660,"title":{},"name":{},"text":{"134":{}},"component":{}}],["shouldn’t",{"_index":1174,"title":{},"name":{},"text":{"6":{}},"component":{}}],["show",{"_index":1622,"title":{},"name":{},"text":{"16":{},"19":{},"36":{},"46":{},"55":{},"58":{},"60":{},"66":{},"69":{},"70":{},"73":{},"87":{},"125":{},"126":{},"127":{},"128":{},"132":{},"142":{},"145":{},"183":{},"186":{},"192":{},"193":{},"201":{},"202":{},"212":{},"217":{},"226":{},"230":{},"231":{},"252":{},"253":{},"254":{},"262":{}},"component":{}}],["shown",{"_index":839,"title":{},"name":{},"text":{"4":{},"15":{},"52":{},"60":{},"115":{},"119":{},"120":{},"127":{},"141":{},"167":{},"173":{},"181":{},"182":{},"184":{},"196":{},"202":{},"216":{},"227":{},"230":{},"231":{},"237":{},"255":{},"270":{}},"component":{}}],["shut",{"_index":1793,"title":{},"name":{},"text":{"21":{},"73":{}},"component":{}}],["sid",{"_index":3716,"title":{},"name":{},"text":{"73":{}},"component":{}}],["side",{"_index":1460,"title":{"168-3":{},"168-7":{},"196-3":{}},"name":{},"text":{"9":{},"10":{},"12":{},"25":{},"67":{},"75":{},"103":{},"108":{},"115":{},"118":{},"123":{},"125":{},"154":{},"159":{},"168":{},"196":{},"205":{},"226":{},"270":{}},"component":{}}],["sidebar",{"_index":5208,"title":{},"name":{},"text":{"154":{}},"component":{}}],["sidecar",{"_index":2048,"title":{},"name":{},"text":{"34":{},"197":{},"254":{}},"component":{}}],["sidecar.istio.io/inject",{"_index":6470,"title":{},"name":{},"text":{"254":{}},"component":{}}],["sign",{"_index":529,"title":{"269":{},"52-11":{},"73-27":{},"78-2":{},"103-4":{},"140-14":{},"140-16":{},"141-13":{},"141-23":{},"154-6":{},"159-2":{},"161-5":{},"161-11":{}},"name":{"269":{}},"text":{"2":{},"4":{},"9":{},"12":{},"13":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"35":{},"36":{},"42":{},"43":{},"45":{},"51":{},"52":{},"58":{},"68":{},"73":{},"75":{},"76":{},"78":{},"100":{},"103":{},"104":{},"111":{},"120":{},"122":{},"125":{},"128":{},"129":{},"134":{},"135":{},"136":{},"139":{},"140":{},"141":{},"142":{},"148":{},"149":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"165":{},"182":{},"193":{},"196":{},"206":{},"208":{},"223":{},"224":{},"225":{},"227":{},"230":{},"231":{},"232":{},"242":{},"250":{},"255":{},"269":{},"271":{}},"component":{}}],["sign.bpmn",{"_index":5724,"title":{},"name":{},"text":{"181":{}},"component":{}}],["sign.key.devic",{"_index":3400,"title":{},"name":{},"text":{"73":{},"192":{}},"component":{}}],["sign.key.file.issu",{"_index":3401,"title":{},"name":{},"text":{"73":{},"192":{}},"component":{}}],["sign.key.file.password",{"_index":3403,"title":{},"name":{},"text":{"73":{},"192":{}},"component":{}}],["sign.key.hardware.devic",{"_index":3404,"title":{},"name":{},"text":{"73":{},"192":{}},"component":{}}],["sign.key.hardware.password",{"_index":3405,"title":{},"name":{},"text":{"73":{},"192":{}},"component":{}}],["sign.key.hardware.typ",{"_index":3406,"title":{},"name":{},"text":{"73":{},"192":{}},"component":{}}],["sign_submiss",{"_index":2818,"title":{},"name":{},"text":{"58":{},"262":{}},"component":{}}],["sign_submission('*id",{"_index":2835,"title":{},"name":{},"text":{"58":{}},"component":{}}],["sign_submission('signcanceledlicenseactivity').signaturedocumentid",{"_index":2635,"title":{},"name":{},"text":{"52":{}},"component":{}}],["sign_submission('signcsvfileactivity').signaturedocumentid",{"_index":4277,"title":{},"name":{},"text":{"103":{}},"component":{}}],["sign_submission('signeditedpersonalprofile').signaturedocumentid",{"_index":5414,"title":{},"name":{},"text":{"161":{}},"component":{}}],["sign_submission('signgeoactivity').signaturedocumentid",{"_index":2819,"title":{},"name":{},"text":{"58":{}},"component":{}}],["sign_submission('signlabformactivity').signaturedocumentid",{"_index":4969,"title":{},"name":{},"text":{"140":{}},"component":{}}],["sign_submission('signpersonalprofile').signaturedocumentid",{"_index":5394,"title":{},"name":{},"text":{"161":{}},"component":{}}],["sign_submission('signpersonnelformactivity').signaturedocumentid",{"_index":5035,"title":{},"name":{},"text":{"141":{}},"component":{}}],["sign_submission('startevent_lab1').signaturedocumentid",{"_index":5319,"title":{},"name":{},"text":{"159":{}},"component":{}}],["signal",{"_index":4583,"title":{},"name":{},"text":{"125":{},"211":{}},"component":{}}],["signalintermediatecatchev",{"_index":6205,"title":{},"name":{},"text":{"214":{}},"component":{}}],["signatori",{"_index":6666,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signatur",{"_index":219,"title":{"78":{},"192":{},"269":{},"9-3":{},"49-45":{},"52-11":{},"78-3":{},"78-5":{},"78-6":{},"78-7":{},"140-23":{},"141-13":{},"161-5":{},"161-11":{},"269-8":{}},"name":{},"text":{"2":{},"9":{},"12":{},"13":{},"30":{},"37":{},"44":{},"45":{},"47":{},"49":{},"52":{},"58":{},"65":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"78":{},"86":{},"100":{},"103":{},"105":{},"115":{},"116":{},"120":{},"126":{},"140":{},"141":{},"148":{},"149":{},"155":{},"158":{},"159":{},"161":{},"188":{},"192":{},"196":{},"206":{},"227":{},"247":{},"269":{},"271":{}},"component":{}}],["signature').accesstoken",{"_index":2834,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signature').signaturedocumentid",{"_index":2836,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signature/qualifi",{"_index":3182,"title":{},"name":{},"text":{"65":{}},"component":{}}],["signature_cont",{"_index":6665,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signature_content((<string|data",{"_index":6663,"title":{"269-17":{}},"name":{},"text":{},"component":{}}],["signature_content(request",{"_index":6701,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signature_detail",{"_index":6664,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signature_details(<string|data",{"_index":6661,"title":{"269-13":{}},"name":{},"text":{},"component":{}}],["signature_details(fil",{"_index":6680,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signature_details(request",{"_index":6697,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signatureinfo",{"_index":6721,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signatures/overview.adoc",{"_index":2147,"title":{},"name":{},"text":{"46":{}},"component":{}}],["signcanceledlicenseact",{"_index":2631,"title":{},"name":{},"text":{"52":{}},"component":{}}],["signdata",{"_index":6746,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signdetail",{"_index":6722,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signedformdata",{"_index":2800,"title":{},"name":{},"text":{"58":{},"140":{}},"component":{}}],["signedformdata.deleteprop('koatuu",{"_index":4951,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.deleteprop('latitud",{"_index":2810,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signedformdata.deleteprop('longitud",{"_index":2811,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signedformdata.deleteprop('ownership",{"_index":4954,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.hasprop('premisesfil",{"_index":4955,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('accreditationfil",{"_index":4963,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('accreditationfile').elements().isempti",{"_index":4962,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('accreditationfile').elements()[0",{"_index":4964,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('accreditationfile').isnul",{"_index":4961,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('entityloc",{"_index":2808,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signedformdata.prop('koatuu').prop('koatuuid').valu",{"_index":4950,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('koatuuid",{"_index":4949,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('latitude').valu",{"_index":2805,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signedformdata.prop('longitude').valu",{"_index":2807,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signedformdata.prop('oblast",{"_index":4947,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('oblast').prop('code').valu",{"_index":4948,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('ownership').prop('ownershipid').valu",{"_index":4953,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('ownershipid",{"_index":4952,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('premisesfil",{"_index":4958,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('premisesfile').elements().isempti",{"_index":4957,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('premisesfile').elements()[0",{"_index":4959,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signedformdata.prop('premisesfile').isnul",{"_index":4956,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signeditedpersonalprofil",{"_index":5403,"title":{},"name":{},"text":{"161":{}},"component":{}}],["signer",{"_index":3915,"title":{},"name":{},"text":{"78":{}},"component":{}}],["signformat.asic).getallcont",{"_index":6686,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signformat.asic).getallsigninfo",{"_index":6681,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signgeoact",{"_index":2814,"title":{},"name":{},"text":{"58":{}},"component":{}}],["signifi",{"_index":116,"title":{},"name":{},"text":{"1":{},"99":{}},"component":{}}],["signific",{"_index":292,"title":{"45":{}},"name":{},"text":{"2":{},"21":{},"44":{},"81":{},"99":{},"160":{},"208":{},"268":{},"272":{}},"component":{}}],["significantli",{"_index":1857,"title":{},"name":{},"text":{"25":{},"262":{}},"component":{}}],["signinfo",{"_index":6682,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signinfo.subjdrfocod",{"_index":6683,"title":{},"name":{},"text":{"269":{}},"component":{}}],["signing_",{"_index":4942,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signlabformact",{"_index":4943,"title":{},"name":{},"text":{"140":{}},"component":{}}],["signpersonalprofil",{"_index":5377,"title":{},"name":{},"text":{"161":{}},"component":{}}],["signpersonnelformact",{"_index":5008,"title":{},"name":{},"text":{"141":{}},"component":{}}],["silenc",{"_index":1094,"title":{},"name":{},"text":{"6":{}},"component":{}}],["silent",{"_index":1091,"title":{},"name":{},"text":{"6":{}},"component":{}}],["similar",{"_index":704,"title":{},"name":{},"text":{"4":{},"21":{},"31":{},"52":{},"55":{},"58":{},"65":{},"82":{},"115":{},"131":{},"138":{},"142":{},"159":{},"167":{},"233":{},"267":{}},"component":{}}],["similarl",{"_index":6208,"title":{},"name":{},"text":{"216":{}},"component":{}}],["similarli",{"_index":4542,"title":{},"name":{},"text":{"122":{},"140":{},"141":{},"183":{},"186":{}},"component":{}}],["similiqu",{"_index":6324,"title":{},"name":{},"text":{"231":{}},"component":{}}],["simpl",{"_index":1078,"title":{"66-10":{},"107-3":{},"167-10":{}},"name":{},"text":{"6":{},"15":{},"16":{},"31":{},"58":{},"66":{},"75":{},"84":{},"107":{},"123":{},"137":{},"139":{},"160":{},"164":{},"167":{},"213":{},"226":{},"234":{},"236":{},"244":{},"258":{}},"component":{}}],["simpledateformat",{"_index":2535,"title":{},"name":{},"text":{"51":{}},"component":{}}],["simpledateformat(\"dd_mm_yyyi",{"_index":2536,"title":{},"name":{},"text":{"51":{}},"component":{}}],["simpli",{"_index":1737,"title":{},"name":{},"text":{"21":{},"58":{},"76":{},"160":{},"177":{},"214":{},"227":{},"233":{},"242":{},"262":{},"265":{}},"component":{}}],["simplif",{"_index":1399,"title":{},"name":{},"text":{"6":{}},"component":{}}],["simplifi",{"_index":377,"title":{"268":{},"195-29":{},"255-19":{}},"name":{},"text":{"2":{},"6":{},"30":{},"32":{},"49":{},"105":{},"116":{},"117":{},"119":{},"157":{},"191":{},"194":{},"195":{},"197":{},"204":{},"210":{},"216":{},"226":{},"244":{},"255":{},"262":{},"264":{},"265":{},"268":{},"270":{},"272":{}},"component":{}}],["simul",{"_index":2132,"title":{"154-14":{},"269-7":{},"271-7":{},"271-8":{},"272-7":{},"272-9":{}},"name":{},"text":{"45":{},"67":{},"154":{},"155":{},"162":{},"202":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["simultan",{"_index":144,"title":{},"name":{},"text":{"1":{},"4":{},"52":{},"81":{},"108":{},"140":{},"167":{},"183":{},"186":{},"232":{},"237":{}},"component":{}}],["sing",{"_index":5230,"title":{},"name":{},"text":{"155":{}},"component":{}}],["singl",{"_index":327,"title":{"52-6":{},"124-4":{},"166-10":{},"167-29":{},"183-4":{},"186-4":{},"262-11":{}},"name":{},"text":{"2":{},"6":{},"28":{},"29":{},"30":{},"44":{},"49":{},"52":{},"58":{},"103":{},"108":{},"124":{},"125":{},"136":{},"142":{},"155":{},"160":{},"164":{},"166":{},"167":{},"168":{},"175":{},"179":{},"182":{},"183":{},"186":{},"190":{},"194":{},"201":{},"210":{},"216":{},"225":{},"226":{},"237":{},"258":{},"262":{},"269":{}},"component":{}}],["single_nat_gateway",{"_index":3538,"title":{},"name":{},"text":{"73":{}},"component":{}}],["singlefil",{"_index":6687,"title":{},"name":{},"text":{"269":{}},"component":{}}],["singlefile.getreferencedata",{"_index":6689,"title":{},"name":{},"text":{"269":{}},"component":{}}],["singleresult",{"_index":5339,"title":{},"name":{},"text":{"160":{}},"component":{}}],["sit",{"_index":5947,"title":{},"name":{},"text":{"196":{}},"component":{}}],["site",{"_index":3254,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["situat",{"_index":102,"title":{},"name":{},"text":{"1":{},"19":{},"67":{},"125":{},"131":{},"155":{},"242":{}},"component":{}}],["six",{"_index":3329,"title":{},"name":{},"text":{"67":{},"139":{}},"component":{}}],["size",{"_index":869,"title":{"50-6":{}},"name":{},"text":{"4":{},"22":{},"23":{},"34":{},"50":{},"61":{},"73":{},"80":{},"103":{},"105":{},"119":{},"140":{},"143":{},"151":{},"152":{},"183":{},"227":{},"230":{},"271":{}},"component":{}}],["sk",{"_index":5960,"title":{},"name":{},"text":{"196":{}},"component":{}}],["skill",{"_index":199,"title":{},"name":{},"text":{"1":{},"2":{},"14":{},"32":{},"65":{},"66":{},"135":{},"136":{},"137":{}},"component":{}}],["skip",{"_index":658,"title":{},"name":{},"text":{"4":{},"30":{},"73":{},"119":{},"128":{},"167":{}},"component":{}}],["skip_validate_trust_domain",{"_index":5982,"title":{},"name":{},"text":{"196":{}},"component":{}}],["skopeo",{"_index":3874,"title":{},"name":{},"text":{"73":{}},"component":{}}],["slash",{"_index":1943,"title":{},"name":{},"text":{"29":{},"161":{},"262":{}},"component":{}}],["slug",{"_index":5120,"title":{},"name":{},"text":{"142":{}},"component":{}}],["small",{"_index":2855,"title":{},"name":{},"text":{"58":{},"143":{}},"component":{}}],["smaller",{"_index":1217,"title":{},"name":{},"text":{"6":{},"151":{},"152":{},"227":{}},"component":{}}],["smallest",{"_index":1336,"title":{},"name":{},"text":{"6":{},"272":{}},"component":{}}],["smallint",{"_index":4700,"title":{},"name":{},"text":{"135":{}},"component":{}}],["smap",{"_index":2408,"title":{},"name":{},"text":{"49":{}},"component":{}}],["smg",{"_index":4628,"title":{},"name":{},"text":{"129":{}},"component":{}}],["smooth",{"_index":1554,"title":{},"name":{},"text":{"14":{},"87":{},"217":{}},"component":{}}],["smoothli",{"_index":4014,"title":{},"name":{},"text":{"81":{}},"component":{}}],["smtp",{"_index":1855,"title":{"25":{},"182-2":{},"182-3":{}},"name":{"25":{},"182":{}},"text":{"25":{},"27":{},"182":{},"183":{},"185":{}},"component":{}}],["smtp.gmail.com",{"_index":5725,"title":{},"name":{},"text":{"182":{}},"component":{}}],["smuggl",{"_index":3301,"title":{},"name":{},"text":{"67":{}},"component":{}}],["snapshot",{"_index":6401,"title":{},"name":{},"text":{"242":{}},"component":{}}],["snapshot.69",{"_index":2715,"title":{},"name":{},"text":{"56":{}},"component":{}}],["snippet",{"_index":5105,"title":{},"name":{},"text":{"142":{},"265":{}},"component":{}}],["soap",{"_index":1357,"title":{"162":{},"181":{},"162-3":{},"162-7":{}},"name":{"181":{}},"text":{"6":{},"31":{},"46":{},"65":{},"66":{},"84":{},"111":{},"123":{},"124":{},"128":{},"132":{},"162":{},"180":{},"195":{},"198":{}},"component":{}}],["soaphttpconnector.json",{"_index":5421,"title":{},"name":{},"text":{"162":{}},"component":{}}],["soapui",{"_index":1354,"title":{},"name":{},"text":{"6":{}},"component":{}}],["soapui,jax",{"_index":1358,"title":{},"name":{},"text":{"6":{}},"component":{}}],["societ",{"_index":2116,"title":{},"name":{},"text":{"44":{}},"component":{}}],["socket_dir",{"_index":6554,"title":{},"name":{},"text":{"258":{}},"component":{}}],["softwar",{"_index":126,"title":{"6":{},"6-1":{},"6-11":{},"48-10":{}},"name":{},"text":{"1":{},"2":{},"6":{},"23":{},"31":{},"32":{},"48":{},"49":{},"58":{},"67":{},"78":{},"81":{},"86":{},"99":{},"123":{},"191":{},"194":{},"195":{},"204":{},"264":{}},"component":{}}],["sole",{"_index":1385,"title":{},"name":{},"text":{"6":{},"9":{},"84":{},"99":{},"124":{},"141":{}},"component":{}}],["solut",{"_index":101,"title":{"19-2":{},"73-45":{},"73-48":{},"73-51":{},"73-54":{},"188-1":{},"188-2":{},"193-1":{},"193-5":{},"195-10":{},"201-4":{},"205-3":{},"205-4":{},"249-1":{},"249-2":{},"250-1":{},"252-1":{},"253-6":{},"254-5":{},"254-6":{},"255-5":{},"255-9":{},"255-12":{},"256-4":{},"256-6":{},"257-9":{},"266-4":{},"266-7":{},"267-6":{},"268-5":{},"268-10":{},"270-8":{},"270-13":{},"271-5":{},"272-5":{}},"name":{},"text":{"1":{},"2":{},"6":{},"21":{},"44":{},"49":{},"58":{},"67":{},"73":{},"81":{},"84":{},"99":{},"188":{},"189":{},"192":{},"193":{},"195":{},"201":{},"244":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"270":{},"271":{},"272":{}},"component":{}}],["solution_date=$1",{"_index":6508,"title":{},"name":{},"text":{"257":{}},"component":{}}],["solv",{"_index":12,"title":{"1-4":{}},"name":{},"text":{"1":{},"19":{},"49":{},"60":{},"66":{},"129":{},"161":{},"254":{}},"component":{}}],["some_nam",{"_index":3171,"title":{},"name":{},"text":{"63":{}},"component":{}}],["someon",{"_index":4640,"title":{},"name":{},"text":{"131":{},"230":{}},"component":{}}],["someth",{"_index":1798,"title":{},"name":{},"text":{"22":{},"75":{},"266":{}},"component":{}}],["sometim",{"_index":6282,"title":{},"name":{},"text":{"229":{},"258":{}},"component":{}}],["sonarqub",{"_index":1312,"title":{},"name":{},"text":{"6":{}},"component":{}}],["soon",{"_index":1963,"title":{},"name":{},"text":{"30":{},"196":{}},"component":{}}],["sophist",{"_index":1418,"title":{},"name":{},"text":{"9":{}},"component":{}}],["sort",{"_index":1296,"title":{"71":{},"143":{},"150":{},"151":{},"152":{},"224":{},"240":{},"246":{},"151-4":{},"151-5":{},"152-4":{},"152-5":{},"237-8":{},"237-12":{},"242-3":{},"246-1":{},"246-2":{}},"name":{"143":{},"150":{},"151":{},"152":{},"224":{},"240":{},"246":{}},"text":{"6":{},"32":{},"57":{},"59":{},"67":{},"69":{},"70":{},"71":{},"119":{},"126":{},"127":{},"138":{},"143":{},"150":{},"151":{},"152":{},"205":{},"224":{},"237":{},"238":{},"240":{},"242":{},"246":{}},"component":{}}],["sorting=\"asc",{"_index":3001,"title":{},"name":{},"text":{"59":{}},"component":{}}],["sourc",{"_index":501,"title":{"6-27":{},"108-6":{},"108-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"21":{},"31":{},"43":{},"48":{},"49":{},"52":{},"58":{},"66":{},"67":{},"73":{},"81":{},"85":{},"86":{},"87":{},"88":{},"99":{},"103":{},"105":{},"108":{},"123":{},"124":{},"140":{},"141":{},"155":{},"159":{},"161":{},"164":{},"168":{},"194":{},"196":{},"197":{},"199":{},"208":{},"209":{},"210":{},"231":{},"232":{},"262":{},"269":{}},"component":{}}],["sourceappl",{"_index":4521,"title":{},"name":{},"text":{"119":{}},"component":{}}],["sourcefileid",{"_index":4533,"title":{},"name":{},"text":{"119":{}},"component":{}}],["sourcefilenam",{"_index":4534,"title":{},"name":{},"text":{"119":{}},"component":{}}],["sourcefilesha256checksum",{"_index":4535,"title":{},"name":{},"text":{"119":{}},"component":{}}],["sourceip",{"_index":5990,"title":{},"name":{},"text":{"196":{}},"component":{}}],["space",{"_index":1132,"title":{},"name":{"22":{}},"text":{"6":{},"9":{},"15":{},"16":{},"21":{},"22":{},"23":{},"25":{},"44":{},"66":{},"107":{},"119":{},"123":{},"128":{},"173":{},"234":{},"237":{},"253":{}},"component":{}}],["spaghetti",{"_index":6166,"title":{},"name":{},"text":{"210":{}},"component":{}}],["spam",{"_index":2421,"title":{},"name":{},"text":{"49":{}},"component":{}}],["span",{"_index":1613,"title":{},"name":{},"text":{"16":{},"21":{}},"component":{}}],["spars",{"_index":1082,"title":{},"name":{},"text":{"6":{}},"component":{}}],["spatial",{"_index":2785,"title":{},"name":{},"text":{"58":{}},"component":{}}],["spec",{"_index":1709,"title":{},"name":{},"text":{"21":{},"23":{},"80":{},"188":{},"195":{},"196":{},"248":{},"254":{},"255":{},"258":{},"272":{}},"component":{}}],["spec.backups.pgbackrest",{"_index":1741,"title":{},"name":{},"text":{"21":{}},"component":{}}],["spec.backups.pgbackrest.glob",{"_index":1717,"title":{},"name":{},"text":{"21":{}},"component":{}}],["spec.backups.pgbackrest.manu",{"_index":1725,"title":{},"name":{},"text":{"21":{}},"component":{}}],["spec.backups.pgbackrest.repos.schedul",{"_index":1707,"title":{},"name":{},"text":{"21":{}},"component":{}}],["spec.datasourc",{"_index":1754,"title":{},"name":{},"text":{"21":{}},"component":{}}],["spec.datasource.pgbackrest.opt",{"_index":1765,"title":{},"name":{},"text":{"21":{}},"component":{}}],["spec.instances.replica",{"_index":6589,"title":{},"name":{},"text":{"258":{}},"component":{}}],["spec.instances.replicas=1",{"_index":6591,"title":{},"name":{},"text":{"258":{}},"component":{}}],["spec.patroni.dynamicconfiguration.synchronous_node_count",{"_index":6590,"title":{},"name":{},"text":{"258":{}},"component":{}}],["spec.standbi",{"_index":1796,"title":{},"name":{},"text":{"21":{}},"component":{}}],["special",{"_index":188,"title":{"79":{}},"name":{"79":{}},"text":{"1":{},"2":{},"6":{},"8":{},"9":{},"15":{},"16":{},"37":{},"41":{},"57":{},"58":{},"61":{},"73":{},"78":{},"115":{},"119":{},"120":{},"124":{},"127":{},"135":{},"138":{},"141":{},"154":{},"159":{},"161":{},"163":{},"166":{},"207":{},"213":{},"216":{},"217":{},"242":{},"244":{},"253":{},"261":{}},"component":{}}],["special_typ",{"_index":4720,"title":{},"name":{},"text":{"135":{}},"component":{}}],["specialist",{"_index":1207,"title":{},"name":{},"text":{"6":{},"57":{}},"component":{}}],["specializationd",{"_index":5053,"title":{},"name":{},"text":{"141":{},"159":{}},"component":{}}],["specif",{"_index":333,"title":{"107-1":{}},"name":{},"text":{"2":{},"6":{},"9":{},"12":{},"16":{},"21":{},"26":{},"30":{},"34":{},"41":{},"43":{},"49":{},"50":{},"51":{},"52":{},"56":{},"57":{},"58":{},"59":{},"65":{},"66":{},"67":{},"70":{},"75":{},"76":{},"81":{},"83":{},"84":{},"99":{},"107":{},"111":{},"113":{},"118":{},"119":{},"122":{},"123":{},"124":{},"125":{},"135":{},"138":{},"140":{},"142":{},"154":{},"158":{},"160":{},"162":{},"164":{},"165":{},"167":{},"168":{},"179":{},"184":{},"195":{},"202":{},"211":{},"226":{},"227":{},"229":{},"230":{},"242":{},"244":{},"254":{},"255":{},"262":{},"267":{},"270":{},"271":{},"272":{}},"component":{}}],["specifi",{"_index":481,"title":{"167-40":{}},"name":{},"text":{"2":{},"6":{},"12":{},"15":{},"16":{},"21":{},"22":{},"23":{},"29":{},"30":{},"34":{},"40":{},"49":{},"50":{},"51":{},"52":{},"58":{},"61":{},"63":{},"72":{},"73":{},"75":{},"76":{},"80":{},"104":{},"105":{},"108":{},"111":{},"115":{},"119":{},"120":{},"122":{},"124":{},"125":{},"127":{},"128":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"154":{},"155":{},"158":{},"159":{},"160":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"173":{},"179":{},"181":{},"182":{},"183":{},"184":{},"186":{},"195":{},"196":{},"205":{},"221":{},"222":{},"226":{},"227":{},"230":{},"231":{},"232":{},"242":{},"253":{},"254":{},"255":{},"269":{},"270":{},"271":{}},"component":{}}],["specified—​that",{"_index":5562,"title":{},"name":{},"text":{"167":{}},"component":{}}],["speed",{"_index":41,"title":{},"name":{},"text":{"1":{},"44":{},"108":{},"167":{},"204":{}},"component":{}}],["spell",{"_index":4431,"title":{},"name":{},"text":{"108":{}},"component":{}}],["spend",{"_index":4481,"title":{},"name":{},"text":{"117":{}},"component":{}}],["spf",{"_index":1868,"title":{},"name":{},"text":{"25":{}},"component":{}}],["spike",{"_index":1262,"title":{},"name":{},"text":{"6":{}},"component":{}}],["spinxmlel",{"_index":5474,"title":{},"name":{},"text":{"162":{}},"component":{}}],["split",{"_index":1790,"title":{},"name":{},"text":{"21":{}},"component":{}}],["spot",{"_index":3352,"title":{},"name":{},"text":{"67":{}},"component":{}}],["spread",{"_index":6164,"title":{},"name":{},"text":{"210":{}},"component":{}}],["spreadsheet",{"_index":2480,"title":{},"name":{},"text":{"50":{}},"component":{}}],["spring",{"_index":1342,"title":{},"name":{},"text":{"6":{},"49":{},"204":{},"208":{}},"component":{}}],["spring4shel",{"_index":3271,"title":{},"name":{},"text":{"67":{}},"component":{}}],["springboot",{"_index":2164,"title":{},"name":{},"text":{"47":{}},"component":{}}],["sprint",{"_index":1046,"title":{"6-20":{}},"name":{},"text":{"6":{}},"component":{}}],["sqale",{"_index":1023,"title":{"6-10":{}},"name":{},"text":{"6":{}},"component":{}}],["sql",{"_index":2171,"title":{},"name":{},"text":{"47":{},"52":{},"67":{},"107":{},"138":{},"142":{},"166":{},"167":{},"168":{},"169":{}},"component":{}}],["squar",{"_index":1144,"title":{},"name":{},"text":{"6":{}},"component":{}}],["sr_check_period",{"_index":6570,"title":{},"name":{},"text":{"258":{}},"component":{}}],["srcsa",{"_index":5865,"title":{},"name":{},"text":{"195":{}},"component":{}}],["srrelid::regclass",{"_index":1771,"title":{},"name":{},"text":{"21":{}},"component":{}}],["ssc",{"_index":3228,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["ssdlc",{"_index":3240,"title":{},"name":{},"text":{"67":{}},"component":{}}],["ssh",{"_index":647,"title":{},"name":{},"text":{"4":{},"19":{},"73":{}},"component":{}}],["ssh://jenkins@gerrit.mdtu",{"_index":2707,"title":{},"name":{},"text":{"56":{}},"component":{}}],["ssh_port",{"_index":3689,"title":{},"name":{},"text":{"73":{}},"component":{}}],["sshkey",{"_index":884,"title":{},"name":{},"text":{"4":{},"73":{}},"component":{}}],["sshmyip.com",{"_index":648,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ssl",{"_index":1982,"title":{"73-49":{},"75-6":{}},"name":{},"text":{"30":{},"73":{},"75":{},"76":{},"188":{},"196":{},"248":{},"258":{}},"component":{}}],["ssl/tl",{"_index":3278,"title":{},"name":{},"text":{"67":{}},"component":{}}],["ssl=fals",{"_index":5986,"title":{},"name":{},"text":{"196":{}},"component":{}}],["sso",{"_index":668,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ssrf",{"_index":3302,"title":{},"name":{},"text":{"67":{}},"component":{}}],["stabil",{"_index":2691,"title":{},"name":{},"text":{"56":{},"125":{},"191":{},"205":{}},"component":{}}],["stabl",{"_index":635,"title":{},"name":{},"text":{"4":{},"73":{}},"component":{}}],["stack",{"_index":1574,"title":{"49":{},"81-3":{},"85-5":{},"87-4":{},"88-4":{},"191-6":{},"194-5":{},"197-5":{},"199-5":{},"204-5":{},"208-5":{}},"name":{},"text":{"14":{},"44":{},"65":{},"81":{},"85":{},"88":{},"191":{},"194":{},"197":{},"199":{},"204":{},"208":{},"265":{}},"component":{}}],["staff",{"_index":4781,"title":{"138-9":{},"138-17":{}},"name":{},"text":{"138":{},"141":{},"148":{},"159":{}},"component":{}}],["staff_contains_nam",{"_index":4858,"title":{},"name":{},"text":{"138":{}},"component":{}}],["staff_statu",{"_index":4820,"title":{},"name":{},"text":{"138":{}},"component":{}}],["staff_status_id::ref(lookup_col:staff_status,ref_table:staff_status,ref_col:name,ref_id:staff_status_id",{"_index":4361,"title":{},"name":{},"text":{"107":{}},"component":{}}],["staffing.xlsx",{"_index":4418,"title":{},"name":{},"text":{"108":{}},"component":{}}],["staffit",{"_index":5269,"title":{},"name":{},"text":{"159":{}},"component":{}}],["staffit.hasprop(key",{"_index":5270,"title":{},"name":{},"text":{"159":{}},"component":{}}],["staffit.prop(key).isnul",{"_index":5271,"title":{},"name":{},"text":{"159":{}},"component":{}}],["staffit.prop(key).valu",{"_index":5273,"title":{},"name":{},"text":{"159":{}},"component":{}}],["staffrespons",{"_index":5265,"title":{},"name":{},"text":{"159":{}},"component":{}}],["staffresponse.responsebody.elements().each",{"_index":5274,"title":{},"name":{},"text":{"159":{}},"component":{}}],["staffstatu",{"_index":5061,"title":{},"name":{},"text":{"141":{}},"component":{}}],["staffstatusid",{"_index":5060,"title":{},"name":{},"text":{"141":{}},"component":{}}],["stage",{"_index":820,"title":{"73-2":{},"108-2":{},"108-4":{},"128-2":{},"139-5":{},"140-5":{},"141-5":{},"160-4":{},"216-4":{},"217-3":{}},"name":{},"text":{"4":{},"6":{},"22":{},"31":{},"33":{},"42":{},"43":{},"47":{},"51":{},"57":{},"66":{},"67":{},"73":{},"84":{},"99":{},"108":{},"128":{},"129":{},"138":{},"139":{},"140":{},"141":{},"148":{},"149":{},"154":{},"159":{},"160":{},"161":{},"164":{},"188":{},"190":{},"192":{},"193":{},"216":{},"217":{},"249":{},"250":{},"251":{},"254":{},"255":{},"257":{},"266":{},"271":{},"272":{}},"component":{}}],["stagecr.json",{"_index":6633,"title":{},"name":{},"text":{"266":{}},"component":{}}],["stakehold",{"_index":5481,"title":{},"name":{},"text":{"164":{}},"component":{}}],["stamp",{"_index":2145,"title":{},"name":{},"text":{"46":{},"206":{}},"component":{}}],["stand",{"_index":4194,"title":{},"name":{},"text":{"99":{}},"component":{}}],["standalon",{"_index":864,"title":{},"name":{},"text":{"4":{},"25":{}},"component":{}}],["standard",{"_index":288,"title":{"157":{},"169":{},"220":{},"6-1":{},"6-3":{},"6-4":{},"6-5":{},"6-6":{},"6-8":{},"50-1":{},"99-2":{},"162-2":{}},"name":{"6":{},"169":{}},"text":{"2":{},"6":{},"9":{},"30":{},"32":{},"34":{},"41":{},"44":{},"48":{},"50":{},"51":{},"58":{},"66":{},"67":{},"81":{},"83":{},"84":{},"99":{},"107":{},"108":{},"115":{},"117":{},"122":{},"123":{},"124":{},"138":{},"139":{},"140":{},"141":{},"142":{},"154":{},"157":{},"162":{},"163":{},"164":{},"167":{},"168":{},"169":{},"170":{},"183":{},"186":{},"195":{},"196":{},"204":{},"213":{},"216":{},"218":{},"226":{},"244":{},"264":{},"270":{}},"component":{}}],["standart",{"_index":4184,"title":{},"name":{"99":{}},"text":{},"component":{}}],["standartd",{"_index":4183,"title":{"99":{}},"name":{},"text":{},"component":{}}],["standbi",{"_index":1688,"title":{"21-9":{},"21-10":{},"21-11":{}},"name":{},"text":{"21":{}},"component":{}}],["standby.en",{"_index":1783,"title":{},"name":{},"text":{"21":{}},"component":{}}],["stanza",{"_index":1757,"title":{},"name":{},"text":{"21":{}},"component":{}}],["stanza=db",{"_index":1752,"title":{},"name":{},"text":{"21":{}},"component":{}}],["start",{"_index":15,"title":{"141":{},"222":{},"1-5":{},"66-4":{},"66-12":{},"73-24":{},"128-3":{},"139-7":{},"140-7":{},"141-7":{},"151-4":{},"151-5":{},"154-4":{},"154-11":{},"159-9":{},"160-2":{},"160-3":{},"161-4":{},"168-2":{},"168-4":{},"211-3":{},"212-3":{},"216-6":{},"216-10":{},"217-5":{},"217-8":{}},"name":{"141":{},"158":{},"222":{}},"text":{"1":{},"4":{},"6":{},"18":{},"19":{},"21":{},"28":{},"30":{},"31":{},"33":{},"35":{},"40":{},"41":{},"42":{},"43":{},"51":{},"52":{},"58":{},"59":{},"60":{},"63":{},"66":{},"68":{},"69":{},"70":{},"73":{},"75":{},"78":{},"80":{},"100":{},"107":{},"108":{},"117":{},"119":{},"122":{},"124":{},"125":{},"127":{},"128":{},"129":{},"131":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"150":{},"151":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"165":{},"167":{},"168":{},"179":{},"181":{},"194":{},"196":{},"205":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"220":{},"222":{},"253":{},"254":{},"255":{},"259":{},"260":{},"261":{},"262":{},"264":{}},"component":{}}],["start[2",{"_index":6213,"title":{},"name":{},"text":{"216":{}},"component":{}}],["start_ev",{"_index":4992,"title":{},"name":{},"text":{"141":{}},"component":{}}],["start_var",{"_index":5721,"title":{},"name":{},"text":{"181":{},"202":{}},"component":{}}],["startbp",{"_index":4562,"title":{},"name":{},"text":{"124":{}},"component":{}}],["starter",{"_index":2162,"title":{},"name":{},"text":{"47":{},"49":{},"272":{}},"component":{}}],["starterror",{"_index":6240,"title":{},"name":{},"text":{"218":{}},"component":{}}],["startev",{"_index":4892,"title":{},"name":{},"text":{"139":{},"160":{}},"component":{}}],["startevent_1",{"_index":5349,"title":{},"name":{},"text":{"160":{}},"component":{}}],["startevent_lab1",{"_index":5261,"title":{},"name":{},"text":{"159":{}},"component":{}}],["startform",{"_index":5263,"title":{},"name":{},"text":{"159":{}},"component":{}}],["startprocessbymessagedeleg",{"_index":5191,"title":{},"name":{},"text":{"154":{},"212":{}},"component":{}}],["startprocessmessag",{"_index":5192,"title":{},"name":{},"text":{"154":{}},"component":{}}],["startprocessreceivemessageaftersystemtask",{"_index":6173,"title":{},"name":{},"text":{"212":{}},"component":{}}],["startprocessreceivemessageexec",{"_index":6176,"title":{},"name":{},"text":{"212":{}},"component":{}}],["startswith",{"_index":4855,"title":{"158":{}},"name":{},"text":{"138":{},"157":{},"158":{},"167":{}},"component":{}}],["starttim",{"_index":6096,"title":{},"name":{},"text":{"205":{}},"component":{}}],["startup",{"_index":6253,"title":{},"name":{},"text":{"222":{}},"component":{}}],["startuserid",{"_index":6085,"title":{},"name":{},"text":{"205":{}},"component":{}}],["startwith",{"_index":4833,"title":{},"name":{},"text":{"138":{}},"component":{}}],["state",{"_index":16,"title":{"1":{},"26":{},"87":{},"126":{},"48-8":{},"270-7":{}},"name":{},"text":{"1":{},"2":{},"6":{},"15":{},"16":{},"19":{},"21":{},"23":{},"26":{},"27":{},"30":{},"44":{},"46":{},"48":{},"49":{},"59":{},"60":{},"67":{},"72":{},"73":{},"74":{},"78":{},"80":{},"81":{},"87":{},"99":{},"108":{},"119":{},"120":{},"123":{},"125":{},"126":{},"127":{},"128":{},"134":{},"135":{},"138":{},"153":{},"154":{},"162":{},"164":{},"167":{},"168":{},"173":{},"176":{},"177":{},"188":{},"189":{},"191":{},"195":{},"202":{},"205":{},"242":{},"248":{},"253":{},"266":{},"268":{},"270":{},"272":{}},"component":{}}],["state/auth/kubeconfig",{"_index":3776,"title":{},"name":{},"text":{"73":{}},"component":{}}],["statefulset",{"_index":3997,"title":{},"name":{},"text":{"80":{}},"component":{}}],["statement",{"_index":4,"title":{"1-2":{},"23-1":{},"237-1":{}},"name":{},"text":{"1":{},"23":{},"73":{},"168":{},"237":{},"262":{}},"component":{}}],["statement_level_load_bal",{"_index":6583,"title":{},"name":{},"text":{"258":{}},"component":{}}],["static",{"_index":1048,"title":{"6-22":{}},"name":{},"text":{"6":{},"19":{},"49":{},"67":{},"99":{},"163":{},"184":{},"271":{}},"component":{}}],["statist",{"_index":263,"title":{},"name":{},"text":{"2":{},"70":{},"99":{},"119":{},"120":{},"125":{},"272":{}},"component":{}}],["statistic.json",{"_index":6865,"title":{},"name":{},"text":{"272":{}},"component":{}}],["statu",{"_index":253,"title":{"150":{},"73-34":{},"73-41":{},"138-8":{},"177-4":{}},"name":{"150":{}},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"18":{},"19":{},"21":{},"23":{},"28":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"46":{},"51":{},"52":{},"57":{},"60":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"80":{},"99":{},"108":{},"115":{},"118":{},"122":{},"126":{},"127":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"150":{},"159":{},"166":{},"168":{},"175":{},"177":{},"183":{},"186":{},"195":{},"197":{},"205":{},"206":{},"216":{},"234":{},"236":{},"242":{},"244":{},"255":{},"269":{},"271":{},"272":{}},"component":{}}],["status",{"_index":1249,"title":{},"name":{},"text":{"6":{},"15":{},"205":{},"271":{}},"component":{}}],["status_code_metr",{"_index":6849,"title":{},"name":{},"text":{"272":{}},"component":{}}],["stay",{"_index":2723,"title":{},"name":{},"text":{"57":{},"234":{}},"component":{}}],["stdin",{"_index":3728,"title":{},"name":{},"text":{"73":{}},"component":{}}],["steal",{"_index":3237,"title":{},"name":{},"text":{"67":{}},"component":{}}],["step",{"_index":660,"title":{"79":{},"73-35":{},"128-2":{},"139-3":{},"141-3":{},"142-2":{},"159-1":{}},"name":{"79":{}},"text":{"4":{},"6":{},"9":{},"13":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"39":{},"40":{},"41":{},"42":{},"43":{},"52":{},"56":{},"57":{},"58":{},"60":{},"63":{},"66":{},"68":{},"73":{},"75":{},"76":{},"99":{},"100":{},"104":{},"107":{},"108":{},"113":{},"117":{},"118":{},"119":{},"120":{},"122":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"148":{},"149":{},"154":{},"159":{},"160":{},"161":{},"164":{},"167":{},"175":{},"177":{},"182":{},"183":{},"186":{},"195":{},"196":{},"210":{},"211":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"234":{},"236":{},"237":{},"242":{},"244":{},"258":{},"259":{},"260":{},"261":{},"268":{},"270":{}},"component":{}}],["steps.adoc",{"_index":2100,"title":{},"name":{},"text":{"41":{}},"component":{}}],["still",{"_index":793,"title":{},"name":{},"text":{"4":{},"21":{},"30":{},"60":{},"81":{},"99":{},"131":{},"167":{},"175":{},"217":{},"268":{}},"component":{}}],["stop",{"_index":794,"title":{},"name":{},"text":{"4":{},"19":{},"22":{},"29":{},"34":{},"39":{},"205":{},"216":{},"218":{},"261":{}},"component":{}}],["stopwatch",{"_index":6185,"title":{},"name":{},"text":{"213":{}},"component":{}}],["storag",{"_index":109,"title":{"22":{},"72":{},"85":{},"203":{},"206":{},"253":{},"18-2":{},"32-5":{},"32-18":{},"49-31":{},"72-1":{},"75-6":{},"195-18":{}},"name":{"200":{},"203":{},"206":{}},"text":{"1":{},"2":{},"4":{},"6":{},"12":{},"14":{},"18":{},"21":{},"22":{},"23":{},"30":{},"31":{},"32":{},"33":{},"43":{},"44":{},"47":{},"49":{},"50":{},"51":{},"58":{},"65":{},"72":{},"73":{},"75":{},"85":{},"86":{},"87":{},"99":{},"105":{},"119":{},"128":{},"140":{},"191":{},"195":{},"197":{},"199":{},"200":{},"203":{},"204":{},"205":{},"206":{},"208":{},"253":{},"254":{},"258":{},"266":{},"267":{}},"component":{}}],["storage,thu",{"_index":2130,"title":{},"name":{},"text":{"45":{}},"component":{}}],["storage.config",{"_index":1831,"title":{},"name":{},"text":{"23":{}},"component":{}}],["storage/openshift",{"_index":1830,"title":{},"name":{},"text":{"23":{}},"component":{}}],["storageclass",{"_index":859,"title":{},"name":{},"text":{"4":{}},"component":{}}],["storageclust",{"_index":860,"title":{},"name":{},"text":{"4":{},"22":{},"23":{}},"component":{}}],["storagecluster.ocs.openshift.io",{"_index":1806,"title":{},"name":{},"text":{"22":{}},"component":{}}],["store",{"_index":291,"title":{"200":{},"49-5":{}},"name":{},"text":{"2":{},"6":{},"9":{},"14":{},"15":{},"16":{},"17":{},"18":{},"21":{},"30":{},"32":{},"34":{},"43":{},"48":{},"49":{},"51":{},"52":{},"55":{},"58":{},"67":{},"73":{},"78":{},"81":{},"82":{},"83":{},"84":{},"99":{},"101":{},"103":{},"105":{},"108":{},"119":{},"123":{},"125":{},"128":{},"136":{},"138":{},"139":{},"141":{},"154":{},"158":{},"161":{},"162":{},"165":{},"167":{},"168":{},"182":{},"183":{},"186":{},"188":{},"191":{},"192":{},"193":{},"195":{},"197":{},"200":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"217":{},"230":{},"231":{},"236":{},"242":{},"244":{},"248":{},"249":{},"250":{},"253":{},"255":{},"267":{},"269":{},"270":{},"272":{}},"component":{}}],["stori",{"_index":1215,"title":{},"name":{},"text":{"6":{}},"component":{}}],["stories/task",{"_index":1258,"title":{},"name":{},"text":{"6":{}},"component":{}}],["story/task",{"_index":1242,"title":{},"name":{},"text":{"6":{}},"component":{}}],["straightforward",{"_index":6362,"title":{},"name":{},"text":{"234":{},"264":{}},"component":{}}],["strategi",{"_index":776,"title":{},"name":{},"text":{"4":{},"6":{},"9":{},"21":{},"55":{},"67":{},"108":{},"197":{},"205":{}},"component":{}}],["stream",{"_index":1564,"title":{},"name":{},"text":{"14":{},"49":{},"105":{},"196":{},"205":{},"227":{}},"component":{}}],["streaming_repl",{"_index":6573,"title":{},"name":{},"text":{"258":{}},"component":{}}],["streamlin",{"_index":356,"title":{},"name":{},"text":{"2":{},"239":{},"264":{}},"component":{}}],["strict",{"_index":6453,"title":{},"name":{},"text":{"253":{}},"component":{}}],["strictignorecas",{"_index":1434,"title":{},"name":{},"text":{"9":{}},"component":{}}],["strike",{"_index":34,"title":{},"name":{},"text":{"1":{}},"component":{}}],["strimzi",{"_index":1566,"title":{},"name":{},"text":{"14":{},"49":{}},"component":{}}],["string",{"_index":1445,"title":{},"name":{},"text":{"9":{},"21":{},"51":{},"58":{},"67":{},"73":{},"104":{},"105":{},"108":{},"122":{},"140":{},"141":{},"154":{},"155":{},"159":{},"160":{},"161":{},"162":{},"167":{},"200":{},"203":{},"205":{},"206":{},"212":{},"221":{},"222":{},"257":{},"267":{},"269":{},"270":{},"271":{}},"component":{}}],["stringbuild",{"_index":1136,"title":{},"name":{},"text":{"6":{}},"component":{}}],["strive",{"_index":3311,"title":{},"name":{},"text":{"67":{}},"component":{}}],["strong",{"_index":1568,"title":{},"name":{},"text":{"14":{},"197":{}},"component":{}}],["structur",{"_index":170,"title":{"86":{},"132":{},"138":{},"201":{},"242":{},"244":{},"6-12":{},"48-3":{},"52-1":{},"59-3":{},"84-10":{},"84-13":{},"84-16":{},"167-8":{},"167-40":{},"167-41":{},"191-4":{},"200-2":{},"202-2":{},"203-2":{},"206-2":{},"207-3":{},"207-5":{},"209-3":{},"242-4":{},"244-6":{},"258-1":{},"272-8":{}},"name":{"86":{},"132":{},"242":{}},"text":{"1":{},"2":{},"6":{},"44":{},"48":{},"49":{},"52":{},"57":{},"58":{},"59":{},"62":{},"66":{},"67":{},"69":{},"70":{},"84":{},"86":{},"103":{},"105":{},"107":{},"108":{},"119":{},"129":{},"130":{},"131":{},"132":{},"133":{},"138":{},"155":{},"161":{},"167":{},"183":{},"184":{},"186":{},"191":{},"200":{},"202":{},"203":{},"204":{},"206":{},"207":{},"209":{},"225":{},"237":{},"242":{},"243":{},"244":{},"257":{},"258":{},"262":{},"267":{},"269":{},"271":{},"272":{}},"component":{}}],["structure_",{"_index":2732,"title":{},"name":{},"text":{"57":{}},"component":{}}],["structure_cod",{"_index":2894,"title":{},"name":{},"text":{"59":{}},"component":{}}],["structure_code,unit_name,hierarchy_cod",{"_index":3007,"title":{},"name":{},"text":{"59":{}},"component":{}}],["structures.adoc#data",{"_index":4616,"title":{},"name":{},"text":{"128":{}},"component":{}}],["sts:assumerol",{"_index":3587,"title":{},"name":{},"text":{"73":{}},"component":{}}],["student",{"_index":4698,"title":{"161-9":{}},"name":{},"text":{"135":{},"136":{},"154":{},"161":{}},"component":{}}],["students_max_numb",{"_index":4699,"title":{},"name":{},"text":{"135":{},"136":{}},"component":{}}],["student’",{"_index":4755,"title":{},"name":{},"text":{"136":{},"181":{}},"component":{}}],["studi",{"_index":189,"title":{},"name":{"64":{}},"text":{"1":{},"66":{},"136":{},"264":{}},"component":{}}],["studio",{"_index":6413,"title":{},"name":{},"text":{"244":{},"262":{}},"component":{}}],["style",{"_index":1013,"title":{"6-5":{}},"name":{},"text":{"6":{},"21":{},"61":{},"123":{},"183":{},"184":{}},"component":{}}],["style.css",{"_index":3112,"title":{},"name":{},"text":{"61":{}},"component":{}}],["styliz",{"_index":6358,"title":{},"name":{},"text":{"232":{}},"component":{}}],["stymi",{"_index":59,"title":{},"name":{},"text":{"1":{}},"component":{}}],["sub",{"_index":1265,"title":{},"name":{},"text":{"6":{},"52":{},"55":{},"159":{},"211":{},"218":{},"271":{}},"component":{}}],["subcatalog",{"_index":2729,"title":{},"name":{},"text":{"57":{}},"component":{}}],["subcompon",{"_index":4168,"title":{},"name":{},"text":{"86":{}},"component":{}}],["subdirectori",{"_index":4629,"title":{},"name":{},"text":{"129":{}},"component":{}}],["subdivis",{"_index":2899,"title":{},"name":{},"text":{"59":{}},"component":{}}],["subdomain",{"_index":3894,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{},"248":{}},"component":{}}],["subjaddress",{"_index":6733,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjcn",{"_index":6725,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjdn",{"_index":6735,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjdrfocod",{"_index":6737,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subject",{"_index":516,"title":{"99-18":{}},"name":{},"text":{"2":{},"6":{},"25":{},"46":{},"48":{},"72":{},"83":{},"84":{},"99":{},"162":{},"164":{},"183":{},"186":{},"242":{},"269":{}},"component":{}}],["subjedrpoucod",{"_index":6736,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjfullnam",{"_index":6732,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjloc",{"_index":6731,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjorg",{"_index":6726,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjorgunit",{"_index":6727,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjphon",{"_index":6734,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjstat",{"_index":6729,"title":{},"name":{},"text":{"269":{}},"component":{}}],["subjtitl",{"_index":6728,"title":{},"name":{},"text":{"269":{}},"component":{}}],["sublim",{"_index":3197,"title":{},"name":{},"text":{"66":{}},"component":{}}],["submiss",{"_index":2618,"title":{"160-6":{}},"name":{},"text":{"52":{},"58":{},"100":{},"139":{},"154":{},"159":{},"160":{},"161":{},"198":{},"216":{},"221":{},"222":{},"226":{},"228":{},"262":{},"267":{}},"component":{}}],["submission(\"addlabform\").formdata",{"_index":4898,"title":{},"name":{},"text":{"139":{}},"component":{}}],["submission('').formdata.prop('').valu",{"_index":5343,"title":{},"name":{},"text":{"160":{}},"component":{}}],["submission('').formdata.prop('name').valu",{"_index":6247,"title":{},"name":{},"text":{"221":{}},"component":{}}],["submission('').formdata.prop('namespace').valu",{"_index":6244,"title":{},"name":{},"text":{"221":{},"222":{}},"component":{}}],["submission('addcsvfileactivity').formdata",{"_index":4273,"title":{},"name":{},"text":{"103":{}},"component":{}}],["submission('addgeoactivity').formdata",{"_index":2798,"title":{},"name":{},"text":{"58":{}},"component":{}}],["submission('addlabformactivity').formdata",{"_index":4944,"title":{},"name":{},"text":{"140":{}},"component":{}}],["submission('addlabformactivity').formdata.prop('edrpou').valu",{"_index":4927,"title":{},"name":{},"text":{"140":{}},"component":{}}],["submission('addlabformactivity').formdata.prop('name').stringvalue().replaceal",{"_index":4939,"title":{},"name":{},"text":{"140":{}},"component":{}}],["submission('addlabformactivity').formdata.prop('name').valu",{"_index":4926,"title":{},"name":{},"text":{"140":{}},"component":{}}],["submission('addlabformactivity').formdata.prop('name').value().concat",{"_index":4923,"title":{},"name":{},"text":{"140":{}},"component":{}}],["submission('addpersonalprofile').formdata",{"_index":5379,"title":{},"name":{},"text":{"161":{}},"component":{}}],["submission('addpersonnelformactivity').formdata",{"_index":5009,"title":{},"name":{},"text":{"141":{}},"component":{}}],["submission('cancellicenseactivity').formdata",{"_index":2624,"title":{},"name":{},"text":{"52":{}},"component":{}}],["submission('childdatainput').formdata.prop('edufullname').valu",{"_index":6254,"title":{},"name":{},"text":{"222":{}},"component":{}}],["submission('childdatainput').formdata.prop('namespace').valu",{"_index":6245,"title":{},"name":{},"text":{"221":{},"222":{}},"component":{}}],["submission('childdatainput').formdata.tostr",{"_index":6255,"title":{},"name":{},"text":{"222":{}},"component":{}}],["submission('choos",{"_index":2839,"title":{},"name":{},"text":{"58":{}},"component":{}}],["submission('defineactionactivity').formdata.hasprop('_action_cod",{"_index":2606,"title":{},"name":{},"text":{"52":{}},"component":{}}],["submission('defineactionactivity').formdata.prop('_action_code').value().equals('_action_cancel",{"_index":2608,"title":{},"name":{},"text":{"52":{}},"component":{}}],["submission('defineactionactivity').formdata.prop('_action_code').value().equals('_action_upd",{"_index":2607,"title":{},"name":{},"text":{"52":{}},"component":{}}],["submission('defineactionactivity').formdata.prop('licenses').el",{"_index":2614,"title":{},"name":{},"text":{"52":{}},"component":{}}],["submission('defineactionactivity').formdata.prop('licenses').elements()[0",{"_index":2619,"title":{},"name":{},"text":{"52":{}},"component":{}}],["submission('editpersonalprofile').formdata",{"_index":5404,"title":{},"name":{},"text":{"161":{}},"component":{}}],["submission('firsttask').formdata.hasprop('_action_cod",{"_index":4256,"title":{},"name":{},"text":{"100":{}},"component":{}}],["submission('firsttask').formdata.prop('_action_code').value().equals('cancel",{"_index":4258,"title":{},"name":{},"text":{"100":{}},"component":{}}],["submission('id",{"_index":2845,"title":{},"name":{},"text":{"58":{}},"component":{}}],["submission('personneldatazvitform').formdata",{"_index":5289,"title":{},"name":{},"text":{"159":{}},"component":{}}],["submission('search').formdata.prop('drfo').valu",{"_index":5187,"title":{},"name":{},"text":{"154":{}},"component":{}}],["submission('search').formdata.prop('edrpou').valu",{"_index":5185,"title":{},"name":{},"text":{"154":{}},"component":{}}],["submission('searchedrpoucodeofficer').formdata.prop('edrpou').valu",{"_index":5436,"title":{},"name":{},"text":{"162":{}},"component":{}}],["submission('show",{"_index":2822,"title":{},"name":{},"text":{"58":{}},"component":{}}],["submission('sign').formdata",{"_index":5196,"title":{},"name":{},"text":{"154":{}},"component":{}}],["submission('signcanceledlicenseactivity').formdata",{"_index":2630,"title":{},"name":{},"text":{"52":{}},"component":{}}],["submission('signcsvfileactivity').formdata.prop('csvfile').elements().first",{"_index":4275,"title":{},"name":{},"text":{"103":{}},"component":{}}],["submission('signeditedpersonalprofile').formdata",{"_index":5406,"title":{},"name":{},"text":{"161":{}},"component":{}}],["submission('signform').formdata.hasprop('_action_cod",{"_index":4252,"title":{},"name":{},"text":{"100":{}},"component":{}}],["submission('signform').formdata.prop('_action_code').value().equals('cancel",{"_index":4257,"title":{},"name":{},"text":{"100":{}},"component":{}}],["submission('signform').formdata.prop('_action_code').value().equals('return_to_first",{"_index":4253,"title":{},"name":{},"text":{"100":{}},"component":{}}],["submission('signform').formdata.prop('_action_code').value().equals('return_to_second",{"_index":4255,"title":{},"name":{},"text":{"100":{}},"component":{}}],["submission('signgeoactivity').formdata",{"_index":2801,"title":{},"name":{},"text":{"58":{}},"component":{}}],["submission('signlabformactivity').formdata",{"_index":4946,"title":{},"name":{},"text":{"140":{}},"component":{}}],["submission('signpersonalprofile').formdata",{"_index":5381,"title":{},"name":{},"text":{"161":{}},"component":{}}],["submission('signpersonalprofile').formdata.prop('lastname').valu",{"_index":5397,"title":{},"name":{},"text":{"161":{}},"component":{}}],["submission('signpersonnelformactivity').formdata.prop('personnelgrid').el",{"_index":5011,"title":{},"name":{},"text":{"141":{}},"component":{}}],["submission('start",{"_index":5345,"title":{},"name":{},"text":{"160":{}},"component":{}}],["submission('start_event').formdata",{"_index":6677,"title":{},"name":{},"text":{"269":{}},"component":{}}],["submission('start_event').formdata.prop('laboratory').prop('laboratoryid').valu",{"_index":4996,"title":{},"name":{},"text":{"141":{}},"component":{}}],["submission('startevent_1').formdata.prop('name').valu",{"_index":5351,"title":{},"name":{},"text":{"160":{}},"component":{}}],["submission('startevent_1').formdata.prop('surname').valu",{"_index":5350,"title":{},"name":{},"text":{"160":{}},"component":{}}],["submission('startevent_lab1').formdata.prop('laboratory').prop('laboratoryid').valu",{"_index":5264,"title":{},"name":{},"text":{"159":{}},"component":{}}],["submission('us",{"_index":6217,"title":{},"name":{},"text":{"216":{}},"component":{}}],["submission('usertask').formdata.prop('').valu",{"_index":5354,"title":{},"name":{},"text":{"160":{}},"component":{}}],["submit",{"_index":572,"title":{},"name":{"36":{}},"text":{"2":{},"4":{},"28":{},"33":{},"52":{},"57":{},"58":{},"99":{},"118":{},"129":{},"154":{},"165":{},"223":{},"226":{},"232":{},"268":{}},"component":{}}],["subnet",{"_index":1934,"title":{},"name":{},"text":{"29":{},"73":{},"80":{}},"component":{}}],["subnet_az",{"_index":3681,"title":{},"name":{},"text":{"73":{}},"component":{}}],["subnet_id",{"_index":3553,"title":{},"name":{},"text":{"73":{}},"component":{}}],["subnetwork",{"_index":1940,"title":{},"name":{},"text":{"29":{}},"component":{}}],["subordin",{"_index":3065,"title":{},"name":{},"text":{"59":{}},"component":{}}],["subprocess",{"_index":2556,"title":{"217":{},"261":{},"52-8":{},"211-3":{},"216-8":{},"216-9":{},"216-10":{},"216-13":{},"216-16":{},"217-2":{},"217-7":{},"217-8":{},"217-10":{},"218-3":{},"218-6":{},"260-2":{},"261-2":{}},"name":{"217":{},"218":{}},"text":{"52":{},"125":{},"140":{},"159":{},"210":{},"211":{},"212":{},"216":{},"217":{},"218":{},"259":{},"260":{},"261":{}},"component":{}}],["subscrib",{"_index":6084,"title":{},"name":{},"text":{"205":{}},"component":{}}],["subscript",{"_index":1768,"title":{},"name":{},"text":{"21":{},"73":{},"125":{}},"component":{}}],["subsequ",{"_index":1389,"title":{},"name":{},"text":{"6":{},"12":{},"31":{},"51":{},"52":{},"57":{},"73":{},"108":{},"118":{},"119":{},"138":{},"167":{},"237":{}},"component":{}}],["subset",{"_index":3002,"title":{},"name":{},"text":{"59":{},"254":{}},"component":{}}],["substanti",{"_index":6523,"title":{},"name":{},"text":{"258":{}},"component":{}}],["substitut",{"_index":3110,"title":{},"name":{},"text":{"61":{},"160":{}},"component":{}}],["substring(code,1,5)||''00000",{"_index":4354,"title":{},"name":{},"text":{"107":{}},"component":{}}],["subsystem",{"_index":408,"title":{"191":{},"194":{},"197":{},"199":{},"204":{},"208":{},"153-3":{},"191-2":{},"191-3":{},"191-5":{},"191-7":{},"194-2":{},"194-3":{},"194-4":{},"194-6":{},"197-2":{},"197-3":{},"197-4":{},"197-6":{},"199-2":{},"199-3":{},"199-4":{},"199-6":{},"204-2":{},"204-3":{},"204-4":{},"204-6":{},"208-2":{},"208-3":{},"208-4":{},"208-6":{}},"name":{},"text":{"2":{},"6":{},"32":{},"44":{},"46":{},"47":{},"48":{},"49":{},"50":{},"75":{},"78":{},"81":{},"87":{},"88":{},"99":{},"108":{},"124":{},"153":{},"191":{},"192":{},"194":{},"195":{},"197":{},"198":{},"199":{},"200":{},"202":{},"203":{},"204":{},"206":{},"208":{},"242":{},"253":{},"254":{},"255":{}},"component":{}}],["subsystem’",{"_index":6069,"title":{},"name":{},"text":{"204":{}},"component":{}}],["success",{"_index":609,"title":{"13":{},"119-7":{},"159-7":{}},"name":{"13":{}},"text":{"4":{},"6":{},"9":{},"12":{},"13":{},"16":{},"17":{},"33":{},"42":{},"43":{},"51":{},"57":{},"60":{},"68":{},"69":{},"70":{},"73":{},"74":{},"108":{},"115":{},"118":{},"119":{},"127":{},"129":{},"140":{},"148":{},"159":{},"183":{},"186":{},"230":{},"234":{},"235":{},"236":{},"242":{},"253":{},"271":{},"272":{}},"component":{}}],["successful",{"_index":6604,"title":{},"name":{},"text":{"261":{}},"component":{}}],["successfulli",{"_index":699,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"13":{},"17":{},"18":{},"30":{},"31":{},"33":{},"40":{},"42":{},"43":{},"55":{},"56":{},"60":{},"67":{},"73":{},"104":{},"119":{},"120":{},"122":{},"125":{},"129":{},"139":{},"141":{},"142":{},"149":{},"183":{},"186":{},"234":{},"235":{},"236":{},"242":{},"261":{},"271":{}},"component":{}}],["such",{"_index":66,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{},"19":{},"28":{},"30":{},"31":{},"32":{},"33":{},"39":{},"52":{},"55":{},"57":{},"58":{},"59":{},"61":{},"65":{},"66":{},"67":{},"75":{},"76":{},"78":{},"80":{},"81":{},"99":{},"104":{},"108":{},"111":{},"113":{},"116":{},"118":{},"119":{},"120":{},"122":{},"123":{},"125":{},"131":{},"132":{},"139":{},"143":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"158":{},"163":{},"164":{},"165":{},"167":{},"173":{},"177":{},"182":{},"184":{},"191":{},"195":{},"197":{},"204":{},"207":{},"214":{},"223":{},"227":{},"234":{},"237":{},"238":{},"244":{},"253":{},"258":{},"260":{},"261":{},"262":{},"264":{},"265":{},"267":{},"268":{},"272":{}},"component":{}}],["sudo",{"_index":2075,"title":{},"name":{},"text":{"40":{},"73":{}},"component":{}}],["suffici",{"_index":1161,"title":{},"name":{},"text":{"6":{},"48":{},"58":{},"67":{},"202":{},"205":{},"272":{}},"component":{}}],["suffix",{"_index":1155,"title":{},"name":{},"text":{"6":{},"73":{},"83":{}},"component":{}}],["suggest",{"_index":777,"title":{},"name":{},"text":{"4":{},"6":{},"205":{},"244":{},"255":{},"262":{},"267":{},"272":{}},"component":{}}],["suit",{"_index":6050,"title":{},"name":{},"text":{"202":{}},"component":{}}],["suitabl",{"_index":5489,"title":{},"name":{},"text":{"164":{}},"component":{}}],["sum",{"_index":5561,"title":{},"name":{},"text":{"167":{}},"component":{}}],["summari",{"_index":4497,"title":{},"name":{},"text":{"119":{},"168":{}},"component":{}}],["summer",{"_index":1586,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{}}],["sunday",{"_index":1708,"title":{},"name":{},"text":{"21":{}},"component":{}}],["super",{"_index":2133,"title":{},"name":{},"text":{"45":{}},"component":{}}],["super_process_instance_id",{"_index":6087,"title":{},"name":{},"text":{"205":{}},"component":{}}],["superfici",{"_index":6397,"title":{},"name":{},"text":{"242":{}},"component":{}}],["superimpos",{"_index":4311,"title":{},"name":{},"text":{"105":{}},"component":{}}],["superprocessinstanceid",{"_index":6092,"title":{},"name":{},"text":{"205":{}},"component":{}}],["supervis",{"_index":2922,"title":{},"name":{},"text":{"59":{}},"component":{}}],["supervision,101.203.302",{"_index":3025,"title":{},"name":{},"text":{"59":{}},"component":{}}],["supp@iit.com.ua",{"_index":6756,"title":{},"name":{},"text":{"269":{}},"component":{}}],["supplement",{"_index":4006,"title":{},"name":{},"text":{"81":{}},"component":{}}],["suppli",{"_index":400,"title":{},"name":{},"text":{"2":{},"67":{},"99":{},"198":{}},"component":{}}],["support",{"_index":655,"title":{"10":{},"100":{},"113":{},"108-12":{},"173-1":{},"195-18":{},"205-3":{}},"name":{"10":{}},"text":{"4":{},"9":{},"10":{},"12":{},"21":{},"23":{},"25":{},"26":{},"28":{},"30":{},"44":{},"45":{},"46":{},"48":{},"49":{},"56":{},"57":{},"58":{},"65":{},"66":{},"69":{},"70":{},"73":{},"74":{},"81":{},"84":{},"99":{},"101":{},"105":{},"108":{},"113":{},"118":{},"122":{},"123":{},"124":{},"133":{},"134":{},"135":{},"136":{},"138":{},"139":{},"143":{},"150":{},"151":{},"152":{},"154":{},"161":{},"164":{},"165":{},"167":{},"168":{},"169":{},"173":{},"179":{},"182":{},"183":{},"185":{},"186":{},"189":{},"191":{},"194":{},"195":{},"199":{},"202":{},"205":{},"208":{},"212":{},"213":{},"214":{},"216":{},"220":{},"226":{},"227":{},"229":{},"237":{},"242":{},"254":{},"262":{},"264":{},"266":{},"267":{},"268":{},"269":{},"270":{}},"component":{}}],["support@registry.gov.ua",{"_index":4445,"title":{},"name":{},"text":{"113":{}},"component":{}}],["supportemail",{"_index":4261,"title":{},"name":{},"text":{"101":{},"139":{},"202":{}},"component":{}}],["suppos",{"_index":5680,"title":{},"name":{},"text":{"177":{}},"component":{}}],["sure",{"_index":628,"title":{},"name":{},"text":{"4":{},"9":{},"15":{},"16":{},"21":{},"28":{},"29":{},"32":{},"33":{},"36":{},"40":{},"42":{},"43":{},"57":{},"58":{},"73":{},"103":{},"113":{},"115":{},"118":{},"139":{},"141":{},"155":{},"183":{},"186":{},"205":{},"244":{},"253":{}},"component":{}}],["surfac",{"_index":2879,"title":{},"name":{},"text":{"58":{},"67":{},"197":{}},"component":{}}],["surnam",{"_index":5347,"title":{},"name":{},"text":{"160":{}},"component":{}}],["surname=$4",{"_index":6511,"title":{},"name":{},"text":{"257":{}},"component":{}}],["surrog",{"_index":2895,"title":{},"name":{},"text":{"59":{}},"component":{}}],["suspend",{"_index":3070,"title":{"60-9":{}},"name":{},"text":{"60":{},"124":{},"125":{},"134":{},"150":{},"205":{},"213":{}},"component":{}}],["suspens",{"_index":3097,"title":{},"name":{},"text":{"60":{}},"component":{}}],["suspici",{"_index":4217,"title":{},"name":{},"text":{"99":{}},"component":{}}],["swagger",{"_index":2002,"title":{"32-7":{}},"name":{},"text":{"32":{},"47":{},"58":{},"65":{},"231":{},"272":{}},"component":{}}],["swift",{"_index":4443,"title":{},"name":{},"text":{"113":{}},"component":{}}],["switch",{"_index":799,"title":{},"name":{},"text":{"4":{},"52":{},"58":{},"60":{},"73":{},"76":{},"103":{},"115":{},"117":{},"124":{},"175":{},"195":{},"214":{},"234":{},"253":{},"254":{},"258":{},"262":{},"270":{}},"component":{}}],["sy",{"_index":4802,"title":{},"name":{},"text":{"138":{},"167":{},"168":{},"170":{},"205":{}},"component":{}}],["sydorenko",{"_index":5253,"title":{},"name":{},"text":{"158":{},"162":{}},"component":{}}],["symbol",{"_index":4430,"title":{},"name":{},"text":{"108":{},"152":{},"167":{}},"component":{}}],["sync",{"_index":2354,"title":{},"name":{},"text":{"49":{},"82":{},"83":{},"167":{}},"component":{}}],["sync/async",{"_index":4034,"title":{},"name":{},"text":{"82":{},"83":{}},"component":{}}],["synchron",{"_index":1687,"title":{"21-8":{},"271-12":{}},"name":{},"text":{"21":{},"49":{},"82":{},"83":{},"167":{},"177":{},"195":{},"198":{},"205":{},"208":{},"258":{},"264":{},"265":{},"271":{}},"component":{}}],["synchronous_mod",{"_index":6538,"title":{},"name":{},"text":{"258":{}},"component":{}}],["synchronous_node_count",{"_index":6539,"title":{},"name":{},"text":{"258":{}},"component":{}}],["synchronous_standby_nam",{"_index":6540,"title":{},"name":{},"text":{"258":{}},"component":{}}],["syntax",{"_index":3109,"title":{"244-5":{},"262-7":{}},"name":{},"text":{"61":{},"155":{},"244":{},"262":{},"265":{}},"component":{}}],["synthet",{"_index":4245,"title":{},"name":{},"text":{"100":{},"213":{}},"component":{}}],["sysnam",{"_index":3514,"title":{},"name":{},"text":{"73":{}},"component":{}}],["system",{"_index":20,"title":{"8":{},"23":{},"121":{},"122":{},"124":{},"179":{},"6-12":{},"6-19":{},"6-28":{},"23-2":{},"42-3":{},"43-3":{},"46-3":{},"46-9":{},"52-11":{},"60-2":{},"104-4":{},"105-2":{},"115-3":{},"119-8":{},"120-1":{},"123-3":{},"124-3":{},"124-8":{},"124-9":{},"140-16":{},"167-21":{},"195-2":{},"195-17":{},"195-20":{},"201-3":{},"201-4":{},"202-15":{},"205-9":{},"257-9":{},"267-6":{}},"name":{"78":{},"122":{}},"text":{"1":{},"2":{},"6":{},"8":{},"9":{},"10":{},"14":{},"15":{},"16":{},"19":{},"21":{},"23":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"40":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"78":{},"81":{},"84":{},"99":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"112":{},"113":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"127":{},"128":{},"129":{},"131":{},"132":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"145":{},"148":{},"149":{},"153":{},"154":{},"155":{},"158":{},"159":{},"161":{},"162":{},"164":{},"165":{},"167":{},"168":{},"171":{},"173":{},"177":{},"179":{},"180":{},"181":{},"183":{},"186":{},"188":{},"191":{},"193":{},"195":{},"196":{},"197":{},"198":{},"201":{},"202":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"218":{},"223":{},"225":{},"227":{},"231":{},"234":{},"237":{},"242":{},"244":{},"245":{},"249":{},"250":{},"253":{},"255":{},"257":{},"264":{},"265":{},"267":{},"268":{},"269":{},"272":{}},"component":{}}],["system.yml",{"_index":2751,"title":{},"name":{},"text":{"57":{},"181":{},"202":{}},"component":{}}],["system/process",{"_index":5934,"title":{},"name":{},"text":{"195":{}},"component":{}}],["system/protocol/openid",{"_index":5687,"title":{},"name":{},"text":{"179":{}},"component":{}}],["system/registri",{"_index":5868,"title":{},"name":{},"text":{"195":{}},"component":{}}],["system_id",{"_index":6159,"title":{},"name":{},"text":{"209":{}},"component":{}}],["system_nam",{"_index":6160,"title":{},"name":{},"text":{"209":{}},"component":{}}],["system_signature_ceph_key",{"_index":2636,"title":{},"name":{},"text":{"52":{},"140":{},"159":{}},"component":{}}],["system_signature_key",{"_index":2817,"title":{},"name":{},"text":{"58":{}},"component":{}}],["system_us",{"_index":6612,"title":{},"name":{},"text":{"262":{}},"component":{}}],["system_user().accesstoken",{"_index":2592,"title":{},"name":{},"text":{"52":{}},"component":{}}],["systemat",{"_index":1382,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["systemctl",{"_index":1654,"title":{},"name":{},"text":{"19":{},"73":{}},"component":{}}],["systemerrorafterusertask",{"_index":2754,"title":{},"name":{},"text":{"57":{}},"component":{}}],["systems..auth",{"_index":5924,"title":{},"name":{},"text":{"195":{}},"component":{}}],["systems..auth.secret.password",{"_index":5907,"title":{},"name":{},"text":{"195":{}},"component":{}}],["systems..auth.secret.token",{"_index":5908,"title":{},"name":{},"text":{"195":{}},"component":{}}],["systems..auth.secret.usernam",{"_index":5906,"title":{},"name":{},"text":{"195":{}},"component":{}}],["systems.diia",{"_index":5878,"title":{},"name":{},"text":{"195":{}},"component":{}}],["systems.diia.auth.secret.token",{"_index":5903,"title":{},"name":{},"text":{"195":{}},"component":{}}],["systems.yml",{"_index":6048,"title":{},"name":{},"text":{"202":{}},"component":{}}],["systems/diia",{"_index":5877,"title":{},"name":{},"text":{"195":{}},"component":{}}],["system’",{"_index":376,"title":{},"name":{},"text":{"2":{},"30":{},"46":{},"75":{},"128":{},"205":{},"258":{}},"component":{}}],["t2.medium",{"_index":3698,"title":{},"name":{},"text":{"73":{}},"component":{}}],["t2.nano",{"_index":3568,"title":{},"name":{},"text":{"73":{}},"component":{}}],["tab",{"_index":736,"title":{"242-5":{},"242-6":{},"242-7":{}},"name":{"264":{},"265":{}},"text":{"4":{},"17":{},"28":{},"30":{},"31":{},"32":{},"52":{},"57":{},"58":{},"60":{},"63":{},"66":{},"100":{},"103":{},"104":{},"105":{},"118":{},"119":{},"120":{},"124":{},"127":{},"139":{},"140":{},"141":{},"142":{},"154":{},"159":{},"160":{},"161":{},"210":{},"211":{},"212":{},"218":{},"223":{},"224":{},"225":{},"226":{},"227":{},"230":{},"231":{},"232":{},"234":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"259":{},"262":{},"263":{},"264":{},"265":{}},"component":{}}],["tabl",{"_index":267,"title":{"52":{},"102":{},"166":{},"242":{},"243":{},"244":{},"52-6":{},"52-12":{},"58-23":{},"59-6":{},"84-10":{},"84-11":{},"84-13":{},"84-14":{},"84-16":{},"84-17":{},"108-9":{},"138-4":{},"138-5":{},"138-6":{},"138-7":{},"138-8":{},"138-9":{},"138-11":{},"138-12":{},"138-13":{},"138-14":{},"138-17":{},"167-2":{},"167-3":{},"167-4":{},"167-8":{},"167-40":{},"242-2":{},"242-3":{},"242-4":{},"242-8":{},"244-6":{}},"name":{"82":{},"83":{},"242":{},"243":{}},"text":{"2":{},"6":{},"21":{},"26":{},"50":{},"52":{},"56":{},"58":{},"59":{},"60":{},"62":{},"66":{},"73":{},"82":{},"83":{},"84":{},"103":{},"105":{},"107":{},"108":{},"111":{},"127":{},"128":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"140":{},"141":{},"142":{},"161":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"188":{},"189":{},"192":{},"193":{},"203":{},"205":{},"206":{},"208":{},"209":{},"220":{},"224":{},"225":{},"226":{},"230":{},"242":{},"243":{},"244":{},"249":{},"250":{},"257":{},"258":{},"269":{},"271":{}},"component":{}}],["table/aw",{"_index":3499,"title":{},"name":{},"text":{"73":{}},"component":{}}],["table_from_attribut",{"_index":4043,"title":{},"name":{},"text":{"82":{}},"component":{}}],["table_nam",{"_index":3521,"title":{},"name":{},"text":{"73":{}},"component":{}}],["tablelogicoperatortyp",{"_index":6502,"title":{},"name":{},"text":{"257":{}},"component":{}}],["tablenam",{"_index":4796,"title":{},"name":{},"text":{"138":{}},"component":{}}],["tablename=pd_processing_cons",{"_index":4097,"title":{},"name":{},"text":{"83":{}},"component":{}}],["tablename=”`subject",{"_index":6399,"title":{},"name":{},"text":{"242":{}},"component":{}}],["tablereadparamet",{"_index":4136,"title":{},"name":{},"text":{"84":{},"167":{}},"component":{}}],["tablescommon.xml",{"_index":6432,"title":{},"name":{},"text":{"244":{}},"component":{}}],["tablesearchconditiontyp",{"_index":6504,"title":{},"name":{},"text":{"257":{}},"component":{}}],["tableskatottg.xml",{"_index":6433,"title":{},"name":{},"text":{"244":{}},"component":{}}],["table—​th",{"_index":6286,"title":{},"name":{},"text":{"229":{}},"component":{}}],["table’",{"_index":5546,"title":{},"name":{},"text":{"167":{},"226":{}},"component":{}}],["tabul",{"_index":1131,"title":{},"name":{},"text":{"6":{}},"component":{}}],["tabular",{"_index":2552,"title":{"52-5":{}},"name":{},"text":{"52":{}},"component":{}}],["tag",{"_index":1997,"title":{"167":{},"169":{},"167-10":{},"167-11":{},"167-20":{},"167-21":{},"167-23":{},"167-24":{},"167-25":{},"167-26":{},"167-27":{},"167-32":{},"167-33":{},"167-34":{},"167-36":{},"167-37":{},"167-38":{},"167-39":{},"167-41":{},"257-7":{}},"name":{},"text":{"31":{},"73":{},"80":{},"82":{},"83":{},"84":{},"103":{},"131":{},"135":{},"138":{},"142":{},"161":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"244":{},"254":{},"257":{},"271":{},"272":{}},"component":{}}],["tag:nam",{"_index":3993,"title":{},"name":{},"text":{"80":{}},"component":{}}],["taint",{"_index":3941,"title":{},"name":{},"text":{"80":{}},"component":{}}],["take",{"_index":187,"title":{},"name":{},"text":{"1":{},"4":{},"9":{},"15":{},"16":{},"21":{},"29":{},"30":{},"31":{},"33":{},"35":{},"39":{},"52":{},"57":{},"60":{},"66":{},"73":{},"75":{},"76":{},"99":{},"100":{},"108":{},"113":{},"115":{},"117":{},"118":{},"122":{},"125":{},"126":{},"127":{},"137":{},"140":{},"141":{},"160":{},"161":{},"167":{},"188":{},"197":{},"202":{},"209":{},"210":{},"211":{},"213":{},"216":{},"217":{},"218":{},"247":{},"253":{},"254":{},"255":{},"258":{},"259":{},"260":{},"261":{},"267":{},"270":{},"271":{},"272":{}},"component":{}}],["taken",{"_index":1619,"title":{},"name":{},"text":{"16":{},"52":{},"55":{},"140":{},"141":{},"142":{},"161":{},"221":{},"222":{},"231":{},"253":{},"268":{},"271":{}},"component":{}}],["tamper",{"_index":3267,"title":{},"name":{},"text":{"67":{}},"component":{}}],["target",{"_index":488,"title":{"74":{},"124-6":{},"181-3":{},"195-8":{},"257-6":{},"267-4":{}},"name":{},"text":{"2":{},"4":{},"15":{},"21":{},"26":{},"27":{},"28":{},"30":{},"33":{},"46":{},"52":{},"56":{},"99":{},"104":{},"107":{},"108":{},"118":{},"124":{},"131":{},"138":{},"139":{},"140":{},"141":{},"168":{},"179":{},"181":{},"188":{},"192":{},"193":{},"195":{},"210":{},"220":{},"221":{},"222":{},"249":{},"250":{},"253":{},"257":{},"267":{},"270":{}},"component":{}}],["target=\"2022",{"_index":1743,"title":{},"name":{},"text":{"21":{}},"component":{}}],["targetcpuutilizationpercentag",{"_index":3935,"title":{},"name":{},"text":{"80":{}},"component":{}}],["targetfilenam",{"_index":4303,"title":{},"name":{},"text":{"105":{}},"component":{}}],["targetport",{"_index":5821,"title":{},"name":{},"text":{"188":{},"248":{},"254":{},"272":{}},"component":{}}],["targetrealm",{"_index":6875,"title":{},"name":{},"text":{"272":{}},"component":{}}],["targetsizeratio",{"_index":1848,"title":{},"name":{},"text":{"23":{}},"component":{}}],["task",{"_index":195,"title":{"13":{},"138":{},"139":{},"140":{},"141":{},"142":{},"152":{},"154":{},"219":{},"52-9":{},"60-15":{},"66-8":{},"70-7":{},"70-8":{},"70-9":{},"105-7":{},"125-7":{},"134-2":{},"135-2":{},"136-2":{},"138-1":{},"138-2":{},"139-3":{},"139-8":{},"139-9":{},"139-10":{},"140-1":{},"140-3":{},"140-8":{},"140-9":{},"140-10":{},"140-14":{},"140-15":{},"140-16":{},"140-17":{},"140-18":{},"141-3":{},"141-8":{},"141-9":{},"141-10":{},"141-12":{},"141-13":{},"141-14":{},"141-15":{},"141-16":{},"142-2":{},"152-2":{},"152-3":{},"152-4":{},"152-5":{},"154-5":{},"154-6":{},"154-7":{},"154-8":{},"154-12":{},"154-13":{},"155-6":{},"160-5":{},"161-6":{},"161-7":{},"161-8":{},"161-9":{},"161-12":{},"161-13":{},"162-6":{},"162-8":{},"162-10":{},"205-13":{},"216-7":{},"216-11":{},"216-12":{},"216-14":{},"217-6":{},"217-9":{}},"name":{"13":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"152":{}},"text":{"1":{},"2":{},"6":{},"8":{},"12":{},"13":{},"21":{},"32":{},"50":{},"51":{},"52":{},"57":{},"58":{},"59":{},"60":{},"63":{},"66":{},"67":{},"69":{},"70":{},"71":{},"99":{},"100":{},"103":{},"104":{},"105":{},"111":{},"117":{},"118":{},"120":{},"124":{},"125":{},"128":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"148":{},"150":{},"151":{},"152":{},"154":{},"155":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"181":{},"183":{},"186":{},"188":{},"191":{},"195":{},"198":{},"202":{},"205":{},"211":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"225":{},"229":{},"231":{},"249":{},"262":{},"264":{},"265":{},"267":{},"269":{},"270":{}},"component":{}}],["task_definition_id",{"_index":5233,"title":{},"name":{},"text":{"155":{}},"component":{}}],["taskdefinitionkey",{"_index":6111,"title":{},"name":{},"text":{"205":{}},"component":{}}],["taskdefinitionnam",{"_index":6112,"title":{},"name":{},"text":{"205":{}},"component":{}}],["tasklist",{"_index":3087,"title":{},"name":{},"text":{"60":{}},"component":{}}],["tasks/task",{"_index":3212,"title":{},"name":{},"text":{"66":{},"264":{}},"component":{}}],["task—​for",{"_index":5352,"title":{},"name":{},"text":{"160":{}},"component":{}}],["task’",{"_index":4890,"title":{},"name":{},"text":{"139":{},"141":{},"158":{}},"component":{}}],["tax",{"_index":4524,"title":{},"name":{},"text":{"119":{}},"component":{}}],["taxpay",{"_index":444,"title":{},"name":{},"text":{"2":{},"120":{},"154":{}},"component":{}}],["taxpayer’",{"_index":447,"title":{},"name":{},"text":{"2":{},"119":{},"120":{}},"component":{}}],["tbd",{"_index":1367,"title":{},"name":{},"text":{"6":{}},"component":{}}],["tcp",{"_index":842,"title":{},"name":{},"text":{"4":{},"73":{},"272":{}},"component":{}}],["teach",{"_index":4786,"title":{},"name":{},"text":{"138":{},"140":{}},"component":{}}],["team",{"_index":90,"title":{"6-13":{},"6-15":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"28":{},"30":{},"57":{},"66":{},"67":{},"81":{},"113":{},"118":{},"205":{}},"component":{}}],["tech",{"_index":207,"title":{},"name":{"252":{}},"text":{"1":{}},"component":{}}],["technic",{"_index":1024,"title":{"14":{},"6-10":{},"14-1":{},"85-3":{},"87-2":{},"88-3":{},"153-2":{},"189-2":{},"190-2":{},"191-3":{},"192-2":{},"194-3":{},"195-4":{},"195-8":{},"195-10":{},"197-3":{},"199-3":{},"201-2":{},"204-3":{},"205-4":{},"208-3":{},"253-5":{},"253-6":{},"253-9":{},"254-5":{},"254-8":{},"255-9":{},"255-14":{},"256-6":{},"256-10":{},"257-14":{},"266-6":{},"266-9":{},"267-16":{},"269-23":{},"271-16":{},"272-23":{}},"name":{"249":{}},"text":{"6":{},"14":{},"16":{},"28":{},"29":{},"30":{},"44":{},"46":{},"60":{},"62":{},"67":{},"85":{},"88":{},"99":{},"108":{},"112":{},"113":{},"115":{},"118":{},"119":{},"125":{},"127":{},"153":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"197":{},"199":{},"200":{},"201":{},"204":{},"208":{},"227":{},"233":{},"234":{},"236":{},"239":{},"240":{},"249":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"266":{},"267":{},"269":{},"271":{},"272":{}},"component":{}}],["techniqu",{"_index":2092,"title":{},"name":{},"text":{"41":{},"44":{},"99":{}},"component":{}}],["technolog",{"_index":68,"title":{"49":{},"49-6":{},"49-11":{},"49-13":{},"49-15":{},"49-18":{},"49-21":{},"49-24":{},"49-26":{},"49-29":{},"49-32":{},"49-35":{},"49-40":{},"49-44":{},"49-50":{},"49-52":{},"49-54":{},"49-57":{},"49-61":{},"49-64":{},"49-66":{},"67-7":{},"81-3":{},"85-5":{},"87-4":{},"88-4":{},"194-5":{},"197-5":{},"199-5":{},"204-5":{},"208-5":{}},"name":{"49":{}},"text":{"1":{},"2":{},"6":{},"14":{},"44":{},"48":{},"49":{},"65":{},"67":{},"78":{},"81":{},"85":{},"87":{},"88":{},"115":{},"191":{},"194":{},"197":{},"199":{},"204":{},"208":{}},"component":{}}],["technologi",{"_index":2441,"title":{},"name":{},"text":{"49":{}},"component":{}}],["tee",{"_index":3656,"title":{},"name":{},"text":{"73":{}},"component":{}}],["telegram",{"_index":3896,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{}},"component":{}}],["telemetri",{"_index":5999,"title":{},"name":{},"text":{"197":{}},"component":{}}],["tell",{"_index":4609,"title":{},"name":{},"text":{"127":{}},"component":{}}],["templat",{"_index":464,"title":{"174":{},"184":{},"270":{},"30-3":{},"107-7":{},"108-5":{},"155-4":{},"158-2":{},"183-2":{},"202-12":{},"202-13":{},"202-14":{},"216-2":{}},"name":{"157":{},"174":{},"270":{}},"text":{"2":{},"4":{},"6":{},"9":{},"30":{},"47":{},"50":{},"52":{},"55":{},"56":{},"58":{},"61":{},"66":{},"67":{},"73":{},"80":{},"103":{},"104":{},"105":{},"107":{},"108":{},"119":{},"127":{},"128":{},"132":{},"133":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"165":{},"167":{},"168":{},"182":{},"183":{},"184":{},"185":{},"186":{},"189":{},"195":{},"198":{},"202":{},"204":{},"212":{},"216":{},"217":{},"221":{},"222":{},"231":{},"242":{},"254":{},"255":{},"258":{},"270":{},"272":{}},"component":{}}],["template.git",{"_index":5841,"title":{},"name":{},"text":{"192":{}},"component":{}}],["template/db",{"_index":6149,"title":{},"name":{},"text":{"209":{}},"component":{}}],["templatefile(\"files/user_data.sh.tpl",{"_index":3556,"title":{},"name":{},"text":{"73":{}},"component":{}}],["templatemodel",{"_index":5740,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["templatenam",{"_index":5147,"title":{},"name":{},"text":{"145":{},"183":{},"186":{}},"component":{}}],["templates/bp",{"_index":2611,"title":{},"name":{},"text":{"52":{},"58":{},"157":{}},"component":{}}],["templates/compon",{"_index":6148,"title":{},"name":{},"text":{"209":{}},"component":{}}],["templates/dashboard/publ",{"_index":6863,"title":{},"name":{},"text":{"272":{}},"component":{}}],["templates/helmfile.yaml",{"_index":2704,"title":{},"name":{},"text":{"56":{}},"component":{}}],["templates/registri",{"_index":791,"title":{},"name":{},"text":{"4":{},"58":{}},"component":{}}],["templates/templates/cephobjectbucketclaim.yaml",{"_index":6066,"title":{},"name":{},"text":{"204":{}},"component":{}}],["templates/values.yaml",{"_index":1614,"title":{},"name":{},"text":{"16":{},"28":{},"29":{},"33":{},"34":{},"36":{},"55":{},"56":{},"75":{},"115":{},"117":{},"118":{},"122":{},"195":{},"272":{}},"component":{}}],["template’",{"_index":5739,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["tempor",{"_index":4001,"title":{},"name":{},"text":{"80":{}},"component":{}}],["temporari",{"_index":1917,"title":{"99-15":{},"242-9":{},"242-10":{},"242-11":{}},"name":{},"text":{"28":{},"30":{},"52":{},"58":{},"59":{},"73":{},"99":{},"105":{},"118":{},"120":{},"128":{},"167":{},"206":{},"208":{},"242":{}},"component":{}}],["temporarili",{"_index":301,"title":{},"name":{},"text":{"2":{},"107":{},"258":{},"272":{}},"component":{}}],["temptat",{"_index":1097,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ten",{"_index":5168,"title":{},"name":{},"text":{"152":{}},"component":{}}],["tenant",{"_index":792,"title":{},"name":{},"text":{"4":{},"48":{},"55":{},"58":{},"60":{}},"component":{}}],["tendenc",{"_index":2724,"title":{},"name":{},"text":{"57":{}},"component":{}}],["term",{"_index":1185,"title":{},"name":{},"text":{"6":{},"40":{},"48":{},"51":{},"99":{},"141":{},"164":{},"205":{},"253":{},"269":{},"271":{}},"component":{}}],["termin",{"_index":629,"title":{"100-5":{}},"name":{},"text":{"4":{},"52":{},"57":{},"67":{},"73":{},"100":{},"125":{},"129":{},"154":{},"188":{},"248":{}},"component":{}}],["terminal/consol",{"_index":1606,"title":{},"name":{},"text":{"15":{}},"component":{}}],["terminolog",{"_index":587,"title":{"4-1":{}},"name":{},"text":{"4":{},"167":{}},"component":{}}],["terraform",{"_index":1544,"title":{"73-14":{},"73-15":{},"73-16":{}},"name":{},"text":{"14":{},"49":{},"73":{},"81":{},"87":{}},"component":{}}],["terraform.tfvar",{"_index":3512,"title":{},"name":{},"text":{"73":{}},"component":{}}],["terraform/minio/aw",{"_index":3840,"title":{},"name":{},"text":{"73":{}},"component":{}}],["terraform/minio/aws/private_minio.key",{"_index":3841,"title":{},"name":{},"text":{"73":{}},"component":{}}],["terraform/minio/aws/terraform.tfst",{"_index":3839,"title":{},"name":{},"text":{"73":{}},"component":{}}],["terraform/vault/aw",{"_index":3843,"title":{},"name":{},"text":{"73":{}},"component":{}}],["terraform/vault/aws/private.key",{"_index":3844,"title":{},"name":{},"text":{"73":{}},"component":{}}],["terraform/vault/aws/terraform.tfst",{"_index":3842,"title":{},"name":{},"text":{"73":{}},"component":{}}],["terraform_lock",{"_index":3522,"title":{},"name":{},"text":{"73":{}},"component":{}}],["territori",{"_index":2951,"title":{"142-5":{}},"name":{},"text":{"59":{},"119":{},"138":{},"142":{},"158":{},"166":{}},"component":{}}],["test",{"_index":511,"title":{"7":{},"67":{},"134":{},"135":{},"136":{},"137":{},"4-7":{},"6-8":{},"6-23":{},"6-24":{},"6-25":{},"6-26":{},"66-16":{},"67-2":{},"67-5":{},"67-6":{},"67-8":{},"67-9":{},"67-10":{},"67-11":{},"67-15":{},"99-21":{},"202-16":{}},"name":{"7":{},"67":{}},"text":{"2":{},"4":{},"6":{},"7":{},"17":{},"25":{},"32":{},"47":{},"49":{},"57":{},"58":{},"59":{},"66":{},"67":{},"75":{},"76":{},"99":{},"103":{},"108":{},"122":{},"124":{},"126":{},"134":{},"135":{},"136":{},"137":{},"139":{},"140":{},"141":{},"158":{},"162":{},"167":{},"168":{},"175":{},"179":{},"188":{},"195":{},"196":{},"202":{},"216":{},"217":{},"221":{},"222":{},"225":{},"226":{},"231":{},"232":{},"247":{},"258":{}},"component":{}}],["test.bpmn",{"_index":4887,"title":{},"name":{},"text":{"139":{}},"component":{}}],["test.json",{"_index":4900,"title":{},"name":{},"text":{"139":{}},"component":{}}],["test3",{"_index":6250,"title":{},"name":{},"text":{"222":{}},"component":{}}],["test?offset=0&limit=10",{"_index":5552,"title":{},"name":{},"text":{"167":{}},"component":{}}],["test@example.com",{"_index":5142,"title":{},"name":{},"text":{"144":{},"173":{}},"component":{}}],["test_tabl",{"_index":2995,"title":{},"name":{},"text":{"59":{}},"component":{}}],["tester",{"_index":1264,"title":{},"name":{},"text":{"6":{}},"component":{}}],["testing.adoc",{"_index":1381,"title":{},"name":{},"text":{"6":{}},"component":{}}],["testing/funct",{"_index":1380,"title":{},"name":{},"text":{"6":{}},"component":{}}],["testing:funct",{"_index":1379,"title":{},"name":{},"text":{"6":{}},"component":{}}],["tete",{"_index":3332,"title":{},"name":{},"text":{"67":{}},"component":{}}],["text",{"_index":739,"title":{},"name":{},"text":{"4":{},"25":{},"31":{},"49":{},"52":{},"58":{},"59":{},"66":{},"83":{},"84":{},"105":{},"107":{},"113":{},"122":{},"126":{},"129":{},"134":{},"135":{},"136":{},"139":{},"140":{},"141":{},"160":{},"163":{},"166":{},"168":{},"183":{},"184":{},"186":{},"202":{},"209":{},"212":{},"216":{},"217":{},"224":{},"225":{},"229":{},"230":{},"232":{},"244":{},"245":{},"265":{},"267":{},"270":{},"271":{}},"component":{}}],["text/csv",{"_index":4315,"title":{},"name":{},"text":{"105":{},"227":{}},"component":{}}],["text/xl",{"_index":3300,"title":{},"name":{},"text":{"67":{}},"component":{}}],["text/xml;charset=utf",{"_index":5440,"title":{},"name":{},"text":{"162":{}},"component":{}}],["textcont",{"_index":5472,"title":{},"name":{},"text":{"162":{}},"component":{}}],["textfield",{"_index":6270,"title":{},"name":{},"text":{"226":{}},"component":{}}],["tfstate",{"_index":3481,"title":{},"name":{},"text":{"73":{}},"component":{}}],["thank",{"_index":2637,"title":{},"name":{},"text":{"52":{}},"component":{}}],["thano",{"_index":2436,"title":{},"name":{},"text":{"49":{},"193":{},"250":{}},"component":{}}],["that’",{"_index":5378,"title":{},"name":{},"text":{"161":{}},"component":{}}],["themat",{"_index":6628,"title":{},"name":{},"text":{"265":{}},"component":{}}],["theme",{"_index":4240,"title":{"173-4":{}},"name":{},"text":{"100":{},"101":{},"173":{},"202":{},"244":{},"262":{}},"component":{}}],["theme.j",{"_index":4267,"title":{},"name":{},"text":{"101":{}},"component":{}}],["themefil",{"_index":4262,"title":{},"name":{},"text":{"101":{},"202":{}},"component":{}}],["themselv",{"_index":2883,"title":{},"name":{},"text":{"58":{},"116":{}},"component":{}}],["therebi",{"_index":4173,"title":{},"name":{},"text":{"87":{},"99":{}},"component":{}}],["therefor",{"_index":1490,"title":{},"name":{},"text":{"9":{},"21":{},"52":{},"108":{},"122":{},"138":{},"143":{},"148":{},"150":{},"151":{},"152":{},"154":{},"159":{},"164":{},"167":{},"257":{},"262":{},"267":{},"269":{},"271":{},"272":{}},"component":{}}],["third",{"_index":405,"title":{},"name":{},"text":{"2":{},"9":{},"47":{},"58":{},"59":{},"68":{},"99":{},"122":{},"123":{},"124":{},"195":{},"254":{},"269":{},"272":{}},"component":{}}],["thoroughli",{"_index":1338,"title":{},"name":{},"text":{"6":{},"164":{}},"component":{}}],["thorought",{"_index":3333,"title":{},"name":{},"text":{"67":{}},"component":{}}],["thorugh",{"_index":3324,"title":{},"name":{},"text":{"67":{}},"component":{}}],["those",{"_index":1114,"title":{},"name":{},"text":{"6":{},"23":{},"50":{},"52":{},"67":{},"99":{},"158":{},"161":{},"168":{},"171":{},"191":{},"192":{},"242":{},"254":{},"267":{}},"component":{}}],["though",{"_index":3189,"title":{},"name":{},"text":{"66":{}},"component":{}}],["thousand",{"_index":5357,"title":{},"name":{},"text":{"160":{}},"component":{}}],["thread",{"_index":4585,"title":{},"name":{},"text":{"125":{},"205":{}},"component":{}}],["threat",{"_index":1068,"title":{"67-13":{},"195-29":{},"255-19":{}},"name":{},"text":{"6":{},"49":{},"67":{},"81":{},"195":{},"197":{},"255":{}},"component":{}}],["three",{"_index":1203,"title":{},"name":{},"text":{"6":{},"19":{},"21":{},"22":{},"25":{},"49":{},"50":{},"52":{},"58":{},"60":{},"66":{},"78":{},"80":{},"119":{},"138":{},"142":{},"155":{},"158":{},"166":{},"167":{},"202":{},"217":{},"226":{},"253":{},"254":{},"261":{}},"component":{}}],["threshold",{"_index":3925,"title":{},"name":{},"text":{"80":{}},"component":{}}],["through",{"_index":259,"title":{"119":{},"269":{},"52-7":{},"119-3":{},"162-7":{},"195-11":{},"195-19":{}},"name":{},"text":{"2":{},"6":{},"9":{},"12":{},"15":{},"16":{},"21":{},"23":{},"25":{},"29":{},"32":{},"33":{},"42":{},"43":{},"47":{},"49":{},"52":{},"58":{},"59":{},"65":{},"66":{},"67":{},"69":{},"70":{},"73":{},"75":{},"78":{},"81":{},"99":{},"100":{},"105":{},"111":{},"112":{},"113":{},"115":{},"116":{},"117":{},"119":{},"121":{},"122":{},"123":{},"124":{},"129":{},"131":{},"132":{},"133":{},"138":{},"139":{},"140":{},"145":{},"146":{},"160":{},"161":{},"162":{},"179":{},"181":{},"186":{},"191":{},"194":{},"195":{},"197":{},"199":{},"201":{},"205":{},"208":{},"210":{},"216":{},"217":{},"221":{},"222":{},"227":{},"237":{},"244":{},"253":{},"255":{},"256":{},"258":{},"264":{},"267":{},"271":{},"272":{}},"component":{}}],["throughout",{"_index":556,"title":{},"name":{},"text":{"2":{},"21":{},"67":{},"108":{},"119":{},"191":{}},"component":{}}],["throughput",{"_index":6529,"title":{},"name":{},"text":{"258":{}},"component":{}}],["throught",{"_index":3218,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["throw",{"_index":1164,"title":{"210-2":{},"212-4":{}},"name":{},"text":{"6":{},"140":{},"210":{},"212":{}},"component":{}}],["thu",{"_index":233,"title":{},"name":{},"text":{"2":{},"41":{},"51":{},"52":{},"81":{},"99":{},"115":{},"150":{},"196":{},"217":{},"242":{}},"component":{}}],["ti",{"_index":6525,"title":{},"name":{},"text":{"258":{}},"component":{}}],["tiberiu",{"_index":5383,"title":{},"name":{},"text":{"161":{}},"component":{}}],["ticket",{"_index":1233,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["tier",{"_index":3310,"title":{},"name":{},"text":{"67":{}},"component":{}}],["tightli",{"_index":2029,"title":{},"name":{},"text":{"32":{}},"component":{}}],["tile",{"_index":6290,"title":{},"name":{},"text":{"230":{}},"component":{}}],["time",{"_index":281,"title":{"16":{},"55":{},"253":{},"21-4":{},"21-6":{},"151-4":{},"151-5":{},"152-4":{},"152-5":{},"213-3":{},"213-4":{},"246-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"18":{},"20":{},"21":{},"25":{},"30":{},"31":{},"35":{},"46":{},"50":{},"51":{},"52":{},"55":{},"60":{},"66":{},"69":{},"70":{},"76":{},"80":{},"81":{},"83":{},"84":{},"103":{},"107":{},"108":{},"115":{},"117":{},"119":{},"122":{},"125":{},"127":{},"128":{},"140":{},"141":{},"143":{},"144":{},"150":{},"151":{},"152":{},"158":{},"159":{},"163":{},"165":{},"167":{},"168":{},"176":{},"177":{},"179":{},"183":{},"184":{},"186":{},"197":{},"204":{},"205":{},"209":{},"213":{},"214":{},"216":{},"217":{},"225":{},"242":{},"244":{},"246":{},"253":{},"256":{},"264":{},"268":{},"271":{}},"component":{}}],["timeintermediatecatchev",{"_index":6203,"title":{},"name":{},"text":{"214":{}},"component":{}}],["timeout",{"_index":3875,"title":{},"name":{},"text":{"73":{},"271":{}},"component":{}}],["timer",{"_index":2489,"title":{"213":{},"213-2":{},"213-5":{}},"name":{"51":{},"213":{}},"text":{"51":{},"125":{},"144":{},"159":{},"213":{},"214":{}},"component":{}}],["timeseri",{"_index":2435,"title":{},"name":{},"text":{"49":{}},"component":{}}],["timestamp",{"_index":1730,"title":{},"name":{},"text":{"21":{},"83":{},"84":{},"119":{},"165":{},"209":{}},"component":{}}],["timezon",{"_index":6443,"title":{},"name":{},"text":{"253":{}},"component":{}}],["timp",{"_index":4597,"title":{},"name":{},"text":{"127":{}},"component":{}}],["tip",{"_index":5400,"title":{"229-1":{}},"name":{},"text":{"161":{},"229":{},"242":{}},"component":{}}],["titl",{"_index":4643,"title":{},"name":{},"text":{"131":{},"142":{},"183":{},"184":{},"186":{},"201":{},"202":{},"205":{},"226":{},"230":{},"254":{},"255":{},"266":{}},"component":{}}],["titleful",{"_index":6038,"title":{},"name":{},"text":{"202":{}},"component":{}}],["tl",{"_index":1760,"title":{},"name":{},"text":{"21":{},"40":{},"73":{},"188":{},"197":{},"248":{},"255":{}},"component":{}}],["tls/ssl",{"_index":4205,"title":{},"name":{},"text":{"99":{}},"component":{}}],["tls_disabl",{"_index":843,"title":{},"name":{},"text":{"4":{}},"component":{}}],["tls_private_key",{"_index":3622,"title":{},"name":{},"text":{"73":{}},"component":{}}],["tls_private_key.main.private_key_pem",{"_index":3628,"title":{},"name":{},"text":{"73":{}},"component":{}}],["tls_skip_verifi",{"_index":852,"title":{},"name":{},"text":{"4":{}},"component":{}}],["tmp/data",{"_index":4871,"title":{},"name":{},"text":{"138":{}},"component":{}}],["tmp/installer/terraform/minio/aw",{"_index":3856,"title":{},"name":{},"text":{"73":{}},"component":{}}],["tmp/openshift",{"_index":3740,"title":{},"name":{},"text":{"73":{}},"component":{}}],["to",{"_index":5850,"title":{},"name":{},"text":{"194":{}},"component":{}}],["to_port",{"_index":3613,"title":{},"name":{},"text":{"73":{}},"component":{}}],["today",{"_index":5482,"title":{},"name":{},"text":{"164":{}},"component":{}}],["togeth",{"_index":1933,"title":{},"name":{},"text":{"29":{},"32":{},"49":{},"58":{},"67":{},"160":{},"189":{},"202":{},"207":{},"254":{},"256":{},"261":{},"267":{},"268":{},"270":{}},"component":{}}],["toggl",{"_index":1617,"title":{},"name":{},"text":{"16":{},"104":{},"117":{}},"component":{}}],["token",{"_index":738,"title":{"111":{},"179":{},"73-46":{},"124-8":{},"179-2":{},"196-2":{},"196-3":{}},"name":{"111":{},"179":{},"196":{}},"text":{"4":{},"15":{},"18":{},"47":{},"52":{},"55":{},"58":{},"59":{},"63":{},"67":{},"73":{},"84":{},"103":{},"104":{},"105":{},"110":{},"111":{},"122":{},"124":{},"140":{},"141":{},"155":{},"159":{},"161":{},"162":{},"179":{},"180":{},"195":{},"196":{},"197":{},"199":{},"200":{},"205":{},"206":{},"209":{},"213":{},"218":{},"221":{},"222":{},"255":{},"271":{}},"component":{}}],["token=sha256~1awexnvr4ibvnsrdepqdl5q10nkhokw7nt",{"_index":3167,"title":{},"name":{},"text":{"63":{}},"component":{}}],["token=sha256~nyhyerh_jwjqаааааyifmbb",{"_index":1631,"title":{},"name":{},"text":{"18":{}},"component":{}}],["token_claim_header_valu",{"_index":2656,"title":{},"name":{},"text":{"55":{}},"component":{}}],["token_typ",{"_index":5705,"title":{},"name":{},"text":{"179":{}},"component":{}}],["token’",{"_index":4549,"title":{},"name":{},"text":{"122":{}},"component":{}}],["toler",{"_index":2119,"title":{},"name":{},"text":{"44":{},"45":{},"48":{},"80":{},"272":{}},"component":{}}],["tomap",{"_index":3507,"title":{},"name":{},"text":{"73":{}},"component":{}}],["tool",{"_index":150,"title":{"168":{},"189":{},"6-15":{},"6-26":{},"19-3":{},"49-4":{},"66-6":{},"67-7":{},"73-22":{}},"name":{},"text":{"1":{},"2":{},"6":{},"15":{},"16":{},"30":{},"31":{},"32":{},"34":{},"49":{},"51":{},"52":{},"56":{},"57":{},"63":{},"65":{},"66":{},"67":{},"73":{},"81":{},"86":{},"99":{},"107":{},"124":{},"127":{},"128":{},"132":{},"167":{},"168":{},"170":{},"179":{},"181":{},"191":{},"199":{},"201":{},"204":{},"226":{},"244":{},"258":{},"262":{},"264":{},"272":{}},"component":{}}],["toolbar",{"_index":4888,"title":{},"name":{},"text":{"139":{},"140":{},"141":{},"154":{},"160":{},"214":{}},"component":{}}],["tools/instru",{"_index":1347,"title":{},"name":{},"text":{"6":{}},"component":{}}],["toolset",{"_index":3242,"title":{},"name":{},"text":{"67":{}},"component":{}}],["tooltip",{"_index":5678,"title":{},"name":{},"text":{"175":{},"226":{}},"component":{}}],["top",{"_index":1538,"title":{"192-2":{},"201-2":{}},"name":{},"text":{"13":{},"60":{},"61":{},"69":{},"70":{},"103":{},"132":{},"135":{},"138":{},"140":{},"142":{},"150":{},"151":{},"152":{},"161":{},"175":{},"176":{},"177":{},"192":{},"201":{},"205":{},"217":{},"218":{},"224":{},"226":{},"234":{},"245":{},"246":{},"254":{}},"component":{}}],["topic",{"_index":1839,"title":{},"name":{},"text":{"23":{},"25":{},"122":{},"128":{},"139":{},"141":{},"158":{},"205":{},"225":{},"231":{}},"component":{}}],["tostr",{"_index":2856,"title":{},"name":{},"text":{"58":{}},"component":{}}],["total",{"_index":1833,"title":{},"name":{},"text":{"23":{},"50":{},"70":{},"119":{},"125":{},"138":{},"167":{},"227":{},"258":{},"272":{}},"component":{}}],["totalel",{"_index":5603,"title":{},"name":{},"text":{"167":{}},"component":{}}],["totalpag",{"_index":5604,"title":{},"name":{},"text":{"167":{}},"component":{}}],["touch",{"_index":3670,"title":{},"name":{},"text":{"73":{},"131":{}},"component":{}}],["tourism",{"_index":2954,"title":{},"name":{},"text":{"59":{}},"component":{}}],["toward",{"_index":137,"title":{},"name":{},"text":{"1":{},"6":{}},"component":{}}],["town",{"_index":4664,"title":{},"name":{},"text":{"134":{},"142":{}},"component":{}}],["tr",{"_index":3822,"title":{},"name":{},"text":{"73":{}},"component":{}}],["trace",{"_index":1506,"title":{"32-25":{}},"name":{},"text":{"10":{},"14":{},"32":{},"48":{},"49":{},"65":{},"81":{},"113":{},"127":{},"271":{}},"component":{}}],["traceid",{"_index":4596,"title":{},"name":{},"text":{"127":{}},"component":{}}],["track",{"_index":370,"title":{},"name":{},"text":{"2":{},"14":{},"67":{},"108":{},"113":{},"141":{},"167":{},"168":{},"191":{},"208":{},"268":{},"271":{}},"component":{}}],["trade",{"_index":2910,"title":{},"name":{},"text":{"59":{}},"component":{}}],["tradit",{"_index":6516,"title":{},"name":{},"text":{"258":{}},"component":{}}],["traffic",{"_index":495,"title":{"199":{},"49-20":{}},"name":{},"text":{"2":{},"4":{},"25":{},"32":{},"48":{},"49":{},"50":{},"81":{},"104":{},"105":{},"122":{},"124":{},"127":{},"193":{},"196":{},"197":{},"198":{},"199":{},"200":{},"252":{},"254":{}},"component":{}}],["trafic",{"_index":2645,"title":{},"name":{},"text":{"55":{}},"component":{}}],["train",{"_index":191,"title":{"66":{},"66-8":{},"99-22":{}},"name":{},"text":{"1":{},"57":{},"66":{},"99":{},"137":{},"204":{}},"component":{}}],["transact",{"_index":229,"title":{"261":{},"167-29":{},"260-2":{},"261-2":{}},"name":{"260":{},"261":{}},"text":{"2":{},"32":{},"44":{},"45":{},"48":{},"82":{},"83":{},"84":{},"136":{},"161":{},"167":{},"205":{},"211":{},"213":{},"259":{},"260":{},"261":{},"271":{}},"component":{}}],["transaction.unit_id",{"_index":4766,"title":{},"name":{},"text":{"136":{}},"component":{}}],["transaction_id",{"_index":4762,"title":{},"name":{},"text":{"136":{}},"component":{}}],["transfer",{"_index":608,"title":{},"name":{},"text":{"4":{},"73":{},"81":{},"105":{},"108":{},"111":{},"123":{},"124":{},"139":{},"154":{},"155":{},"161":{},"191":{},"196":{},"206":{},"209":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"220":{},"237":{},"244":{},"253":{},"254":{},"255":{},"260":{},"265":{},"266":{},"267":{},"269":{},"272":{}},"component":{}}],["transform",{"_index":153,"title":{"108-11":{},"108-14":{}},"name":{},"text":{"1":{},"2":{},"6":{},"49":{},"59":{},"81":{},"108":{},"138":{},"164":{},"188":{},"195":{},"199":{},"272":{}},"component":{}}],["transient",{"_index":2559,"title":{"52-10":{},"140-15":{},"141-10":{},"141-14":{},"161-6":{}},"name":{},"text":{"52":{},"140":{},"141":{},"155":{},"159":{},"161":{},"162":{}},"component":{}}],["transit",{"_index":80,"title":{"92":{},"99-5":{}},"name":{"92":{}},"text":{"1":{},"4":{},"19":{},"87":{},"99":{},"100":{},"161":{},"254":{},"255":{}},"component":{}}],["transmiss",{"_index":4178,"title":{"99-17":{}},"name":{},"text":{"99":{},"122":{},"123":{},"164":{},"206":{},"208":{}},"component":{}}],["transmit",{"_index":1463,"title":{},"name":{},"text":{"9":{},"99":{},"111":{},"122":{},"123":{},"159":{},"269":{}},"component":{}}],["transpar",{"_index":2036,"title":{},"name":{},"text":{"32":{},"67":{},"99":{}},"component":{}}],["transport",{"_index":2141,"title":{},"name":{},"text":{"46":{},"48":{},"49":{},"59":{}},"component":{}}],["travers",{"_index":3268,"title":{},"name":{},"text":{"67":{}},"component":{}}],["treat",{"_index":6261,"title":{},"name":{},"text":{"224":{}},"component":{}}],["tree",{"_index":1832,"title":{},"name":{},"text":{"23":{}},"component":{}}],["trembita",{"_index":560,"title":{"46-6":{},"48-9":{},"195-19":{}},"name":{"124":{}},"text":{"2":{},"6":{},"31":{},"46":{},"47":{},"48":{},"65":{},"66":{},"132":{},"179":{},"181":{},"193":{},"195":{},"202":{},"250":{},"264":{},"272":{}},"component":{}}],["trembita.adoc",{"_index":1991,"title":{},"name":{},"text":{"31":{}},"component":{}}],["trembita.consum",{"_index":5874,"title":{},"name":{},"text":{"195":{}},"component":{}}],["trembita.registries..auth.secret.token",{"_index":5905,"title":{},"name":{},"text":{"195":{}},"component":{}}],["trembita.registries.edr",{"_index":5920,"title":{},"name":{},"text":{"195":{}},"component":{}}],["trembita.url/mockedrservic",{"_index":5870,"title":{},"name":{},"text":{"195":{}},"component":{}}],["trembita/configuration.yml",{"_index":4286,"title":{},"name":{},"text":{"104":{},"122":{},"195":{},"202":{}},"component":{}}],["trembita/extern",{"_index":5719,"title":{},"name":{},"text":{"181":{},"202":{}},"component":{}}],["tri",{"_index":1792,"title":{},"name":{},"text":{"21":{},"34":{},"55":{},"66":{},"67":{},"73":{},"140":{},"161":{},"168":{},"177":{},"227":{},"234":{}},"component":{}}],["triag",{"_index":3339,"title":{},"name":{},"text":{"67":{}},"component":{}}],["trigger",{"_index":726,"title":{},"name":{},"text":{"4":{},"8":{},"15":{},"16":{},"21":{},"51":{},"52":{},"58":{},"99":{},"103":{},"115":{},"128":{},"131":{},"142":{},"211":{},"213":{},"226":{},"234":{},"242":{},"245":{},"253":{}},"component":{}}],["trimspace(tls_private_key.main.public_key_openssh",{"_index":3577,"title":{},"name":{},"text":{"73":{}},"component":{}}],["trivi",{"_index":1323,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["tro8k",{"_index":3169,"title":{},"name":{},"text":{"63":{}},"component":{}}],["trojan",{"_index":2416,"title":{},"name":{},"text":{"49":{}},"component":{}}],["troubleshoot",{"_index":1567,"title":{},"name":{},"text":{"14":{},"32":{}},"component":{}}],["true",{"_index":840,"title":{},"name":{},"text":{"4":{},"21":{},"23":{},"55":{},"56":{},"73":{},"75":{},"76":{},"80":{},"82":{},"83":{},"117":{},"135":{},"138":{},"139":{},"140":{},"141":{},"159":{},"167":{},"171":{},"196":{},"205":{},"253":{},"254":{},"255":{},"258":{},"272":{}},"component":{}}],["true/fals",{"_index":4032,"title":{},"name":{},"text":{"82":{},"83":{},"119":{}},"component":{}}],["truncat",{"_index":1770,"title":{},"name":{},"text":{"21":{}},"component":{}}],["truncatelocaldataafterdistributingt",{"_index":4138,"title":{},"name":{},"text":{"84":{}},"component":{}}],["trusr",{"_index":2212,"title":{},"name":{},"text":{"48":{}},"component":{}}],["trust",{"_index":1482,"title":{"73-27":{}},"name":{},"text":{"9":{},"44":{},"73":{},"78":{},"197":{},"258":{}},"component":{}}],["trustworthi",{"_index":234,"title":{},"name":{},"text":{"2":{}},"component":{}}],["truth",{"_index":3355,"title":{},"name":{},"text":{"67":{}},"component":{}}],["ttl",{"_index":1637,"title":{},"name":{},"text":{"18":{},"195":{},"205":{},"255":{},"272":{}},"component":{}}],["tulchyn",{"_index":5256,"title":{},"name":{},"text":{"158":{}},"component":{}}],["tunnel",{"_index":3718,"title":{},"name":{},"text":{"73":{}},"component":{}}],["turn",{"_index":1616,"title":{},"name":{},"text":{"16":{},"28":{},"29":{},"55":{},"76":{},"117":{},"144":{},"197":{},"253":{},"258":{}},"component":{}}],["tw",{"_index":1274,"title":{},"name":{},"text":{"6":{}},"component":{}}],["twice",{"_index":6262,"title":{},"name":{},"text":{"225":{}},"component":{}}],["two",{"_index":456,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"19":{},"21":{},"23":{},"28":{},"29":{},"31":{},"33":{},"34":{},"36":{},"46":{},"48":{},"52":{},"55":{},"56":{},"66":{},"67":{},"69":{},"70":{},"73":{},"78":{},"100":{},"104":{},"115":{},"116":{},"118":{},"119":{},"122":{},"123":{},"124":{},"127":{},"135":{},"139":{},"140":{},"154":{},"158":{},"160":{},"166":{},"167":{},"168":{},"173":{},"177":{},"183":{},"186":{},"189":{},"195":{},"202":{},"205":{},"210":{},"212":{},"214":{},"217":{},"222":{},"227":{},"232":{},"237":{},"242":{},"244":{},"254":{},"258":{},"259":{},"269":{},"270":{},"272":{}},"component":{}}],["txt",{"_index":1866,"title":{},"name":{},"text":{"25":{},"40":{}},"component":{}}],["type",{"_index":911,"title":{"224":{},"257":{},"78-4":{},"123-2":{},"138-7":{},"138-13":{},"139-15":{},"142-6":{},"142-11":{},"167-22":{},"167-23":{},"167-24":{},"167-25":{},"167-26":{},"167-27":{},"167-28":{},"195-18":{},"213-2":{},"216-2":{},"218-2":{}},"name":{"169":{}},"text":{"4":{},"6":{},"9":{},"21":{},"29":{},"30":{},"33":{},"35":{},"39":{},"50":{},"51":{},"52":{},"56":{},"57":{},"58":{},"59":{},"63":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"78":{},"80":{},"84":{},"87":{},"99":{},"100":{},"103":{},"104":{},"105":{},"108":{},"115":{},"116":{},"122":{},"123":{},"124":{},"126":{},"127":{},"131":{},"132":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"150":{},"154":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"167":{},"168":{},"179":{},"182":{},"188":{},"192":{},"193":{},"195":{},"196":{},"202":{},"203":{},"205":{},"206":{},"207":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"224":{},"225":{},"227":{},"231":{},"240":{},"242":{},"246":{},"247":{},"248":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.jwtauthent",{"_index":5959,"title":{},"name":{},"text":{"196":{}},"component":{}}],["type/${submission('id",{"_index":2860,"title":{},"name":{},"text":{"58":{}},"component":{}}],["type::cas",{"_index":4346,"title":{},"name":{},"text":{"107":{}},"component":{}}],["type=\"geometri",{"_index":2789,"title":{},"name":{},"text":{"58":{}},"component":{}}],["type=\"system_ev",{"_index":4516,"title":{},"name":{},"text":{"119":{}},"component":{}}],["type=\"type_gend",{"_index":4690,"title":{},"name":{},"text":{"135":{}},"component":{}}],["type=ful",{"_index":1727,"title":{},"name":{},"text":{"21":{}},"component":{}}],["type=immedi",{"_index":1748,"title":{},"name":{},"text":{"21":{}},"component":{}}],["type=merg",{"_index":3808,"title":{},"name":{},"text":{"73":{}},"component":{}}],["type=tim",{"_index":1742,"title":{},"name":{},"text":{"21":{}},"component":{}}],["type=txt",{"_index":2086,"title":{},"name":{},"text":{"40":{}},"component":{}}],["type_gend",{"_index":4060,"title":{},"name":{},"text":{"83":{}},"component":{}}],["type_oper",{"_index":4164,"title":{},"name":{},"text":{"84":{}},"component":{}}],["typebasedhistorylevel",{"_index":6114,"title":{},"name":{},"text":{"205":{}},"component":{}}],["typed_config",{"_index":5958,"title":{},"name":{},"text":{"196":{}},"component":{}}],["typescript",{"_index":2288,"title":{},"name":{},"text":{"49":{},"194":{},"204":{}},"component":{}}],["typi",{"_index":4365,"title":{},"name":{},"text":{"107":{}},"component":{}}],["typic",{"_index":1392,"title":{},"name":{},"text":{"6":{},"48":{},"51":{},"57":{},"75":{},"76":{},"117":{},"122":{},"132":{},"151":{},"152":{},"161":{},"164":{},"168":{},"183":{},"184":{},"186":{},"195":{},"264":{},"270":{}},"component":{}}],["typy_doslidgen_uuid.csv",{"_index":4338,"title":{},"name":{},"text":{"107":{}},"component":{}}],["u",{"_index":2997,"title":{},"name":{},"text":{"59":{},"73":{},"84":{},"209":{}},"component":{}}],["u43exi9l6kc4gcm6ksjbbsg7gu2dyocyjey1",{"_index":5691,"title":{},"name":{},"text":{"179":{}},"component":{}}],["ua",{"_index":1368,"title":{"49-45":{}},"name":{},"text":{"6":{},"47":{},"49":{},"115":{},"119":{},"138":{},"140":{}},"component":{}}],["ua.gov.mdtu.ddm.dataplatform.templ",{"_index":906,"title":{},"name":{},"text":{"4":{},"62":{}},"component":{}}],["ua05",{"_index":5252,"title":{},"name":{},"text":{"158":{}},"component":{}}],["ua0502",{"_index":5248,"title":{},"name":{},"text":{"158":{}},"component":{}}],["ua0510003",{"_index":5243,"title":{},"name":{},"text":{"158":{}},"component":{}}],["ua05100030000051497",{"_index":5244,"title":{},"name":{},"text":{"158":{}},"component":{}}],["ua53060230000098362",{"_index":4504,"title":{},"name":{},"text":{"119":{}},"component":{}}],["uat",{"_index":1284,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ubki",{"_index":5148,"title":{},"name":{},"text":{"145":{},"183":{},"186":{}},"component":{}}],["ubki111",{"_index":5794,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["ubuntu",{"_index":3664,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ubuntu@localhost",{"_index":3721,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ugli",{"_index":1075,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ui",{"_index":177,"title":{"106":{},"127":{},"163":{},"246":{},"267":{},"32-11":{},"49-37":{},"52-14":{},"58-10":{},"58-13":{},"105-7":{},"105-8":{},"162-9":{},"162-10":{},"202-9":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"12":{},"32":{},"47":{},"49":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"66":{},"73":{},"75":{},"78":{},"100":{},"103":{},"105":{},"106":{},"118":{},"124":{},"132":{},"139":{},"140":{},"141":{},"154":{},"158":{},"159":{},"161":{},"162":{},"163":{},"188":{},"189":{},"193":{},"198":{},"201":{},"202":{},"204":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"232":{},"234":{},"240":{},"245":{},"246":{},"248":{},"249":{},"250":{},"251":{},"253":{},"255":{},"256":{},"260":{},"267":{}},"component":{}}],["ui_pd_processing_consent_hst",{"_index":4079,"title":{},"name":{},"text":{"83":{}},"component":{}}],["uididp",{"_index":5867,"title":{},"name":{},"text":{"195":{}},"component":{}}],["ukrain",{"_index":83,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"59":{},"78":{},"119":{},"120":{},"135":{},"138":{},"154":{},"173":{},"183":{}},"component":{}}],["ukraine,101",{"_index":3009,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,102",{"_index":3011,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,102.204",{"_index":3027,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,103",{"_index":3013,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,103.206",{"_index":3031,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,103.207",{"_index":3033,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,103.208",{"_index":3035,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,103.209",{"_index":3037,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104",{"_index":3015,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.210",{"_index":3043,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.211",{"_index":3045,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.212",{"_index":3047,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.213",{"_index":3049,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.215",{"_index":3053,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.215.305",{"_index":3055,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.215.306",{"_index":3057,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukraine,104.215.306.401",{"_index":3059,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ukrainian",{"_index":343,"title":{},"name":{},"text":{"2":{},"99":{},"135":{},"173":{},"205":{},"234":{},"237":{}},"component":{}}],["unabl",{"_index":1444,"title":{},"name":{},"text":{"9":{}},"component":{}}],["unaffect",{"_index":5547,"title":{},"name":{},"text":{"167":{}},"component":{}}],["unassign",{"_index":4582,"title":{},"name":{},"text":{"125":{}},"component":{}}],["unauthor",{"_index":1420,"title":{},"name":{},"text":{"9":{},"45":{},"46":{},"81":{},"99":{},"122":{},"123":{},"195":{},"208":{},"272":{}},"component":{}}],["unavail",{"_index":2101,"title":{},"name":{},"text":{"42":{},"144":{}},"component":{}}],["unblock",{"_index":2044,"title":{},"name":{},"text":{"33":{}},"component":{}}],["unchang",{"_index":555,"title":{},"name":{},"text":{"2":{},"115":{},"124":{},"128":{},"167":{},"253":{},"270":{}},"component":{}}],["uncom",{"_index":3690,"title":{},"name":{},"text":{"73":{},"258":{}},"component":{}}],["uncondition",{"_index":6086,"title":{},"name":{},"text":{"205":{}},"component":{}}],["undefin",{"_index":6228,"title":{},"name":{},"text":{"216":{},"217":{}},"component":{}}],["under",{"_index":1278,"title":{},"name":{},"text":{"6":{},"7":{},"17":{},"18":{},"25":{},"28":{},"46":{},"51":{},"52":{},"67":{},"75":{},"80":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"103":{},"124":{},"174":{},"183":{},"186":{},"192":{},"225":{},"244":{}},"component":{}}],["undergo",{"_index":1488,"title":{},"name":{},"text":{"9":{},"138":{},"145":{},"269":{}},"component":{}}],["underli",{"_index":4018,"title":{},"name":{},"text":{"81":{}},"component":{}}],["underneath",{"_index":2482,"title":{},"name":{},"text":{"50":{}},"component":{}}],["underscor",{"_index":1921,"title":{},"name":{},"text":{"28":{},"30":{},"99":{},"140":{}},"component":{}}],["understand",{"_index":1247,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"16":{},"41":{},"51":{},"65":{},"67":{},"87":{},"139":{},"140":{},"164":{},"194":{},"197":{},"226":{},"234":{},"242":{},"262":{},"270":{}},"component":{}}],["understood",{"_index":1260,"title":{},"name":{},"text":{"6":{}},"component":{}}],["undertak",{"_index":2093,"title":{},"name":{},"text":{"41":{}},"component":{}}],["undistributet",{"_index":4139,"title":{},"name":{},"text":{"84":{}},"component":{}}],["unencrypt",{"_index":4536,"title":{},"name":{},"text":{"119":{},"122":{}},"component":{}}],["unfil",{"_index":5362,"title":{},"name":{},"text":{"161":{}},"component":{}}],["unfinish",{"_index":1187,"title":{},"name":{},"text":{"6":{},"70":{}},"component":{}}],["unfold",{"_index":6609,"title":{"262-13":{}},"name":{},"text":{"262":{}},"component":{}}],["unforeseen",{"_index":2128,"title":{},"name":{},"text":{"45":{},"238":{}},"component":{}}],["ungroup",{"_index":6042,"title":{},"name":{},"text":{"202":{},"237":{}},"component":{}}],["unicod",{"_index":5554,"title":{},"name":{},"text":{"167":{}},"component":{}}],["unif",{"_index":1065,"title":{},"name":{},"text":{"6":{}},"component":{}}],["unifi",{"_index":359,"title":{},"name":{},"text":{"2":{},"30":{},"44":{},"66":{},"116":{},"119":{},"120":{},"123":{},"140":{},"154":{},"173":{},"183":{},"184":{},"195":{},"244":{},"253":{}},"component":{}}],["uniform",{"_index":53,"title":{"141-20":{}},"name":{},"text":{"1":{},"2":{},"9":{},"141":{},"272":{}},"component":{}}],["uniformli",{"_index":6027,"title":{},"name":{},"text":{"199":{}},"component":{}}],["uninstal",{"_index":3771,"title":{},"name":{},"text":{"73":{}},"component":{}}],["unintend",{"_index":6257,"title":{},"name":{},"text":{"223":{}},"component":{}}],["union",{"_index":5109,"title":{},"name":{},"text":{"142":{}},"component":{}}],["uniqu",{"_index":450,"title":{"165":{},"131-4":{},"131-5":{}},"name":{},"text":{"2":{},"30":{},"52":{},"57":{},"59":{},"61":{},"66":{},"67":{},"69":{},"70":{},"73":{},"83":{},"103":{},"105":{},"107":{},"108":{},"113":{},"119":{},"120":{},"125":{},"131":{},"138":{},"139":{},"140":{},"142":{},"165":{},"167":{},"170":{},"183":{},"186":{},"207":{},"209":{},"222":{},"227":{},"234":{},"236":{},"237":{},"242":{},"272":{}},"component":{}}],["unique=\"tru",{"_index":4817,"title":{},"name":{},"text":{"138":{}},"component":{}}],["uniqueconstraintnam",{"_index":4818,"title":{},"name":{},"text":{"138":{}},"component":{}}],["unit",{"_index":1053,"title":{"55":{},"6-24":{}},"name":{},"text":{"6":{},"16":{},"31":{},"49":{},"55":{},"59":{},"119":{},"135":{},"136":{},"138":{},"166":{},"168":{},"179":{},"261":{},"269":{}},"component":{}}],["unit.edu_organization_id='uuid",{"_index":4767,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit.nam",{"_index":4760,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit.parallel",{"_index":4759,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit.unit_id",{"_index":4758,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit.unit_type_id",{"_index":4764,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit_edu_organization_id_equ",{"_index":4757,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit_id",{"_index":2992,"title":{},"name":{},"text":{"59":{},"135":{},"136":{}},"component":{}}],["unit_nam",{"_index":2986,"title":{},"name":{},"text":{"59":{}},"component":{}}],["unit_name_parallel_equ",{"_index":4713,"title":{},"name":{},"text":{"135":{}},"component":{}}],["unit_typ",{"_index":4693,"title":{},"name":{},"text":{"135":{},"136":{}},"component":{}}],["unit_type.nam",{"_index":4761,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit_type.unit_type_id",{"_index":4765,"title":{},"name":{},"text":{"136":{}},"component":{}}],["unit_type_id",{"_index":4692,"title":{},"name":{},"text":{"135":{}},"component":{}}],["unit_type_name_contain",{"_index":4717,"title":{},"name":{},"text":{"135":{}},"component":{}}],["unit’",{"_index":2901,"title":{},"name":{},"text":{"59":{}},"component":{}}],["univers",{"_index":2307,"title":{"195-24":{}},"name":{},"text":{"49":{},"195":{}},"component":{}}],["unix",{"_index":1576,"title":{},"name":{},"text":{"15":{},"16":{},"30":{},"242":{},"253":{}},"component":{}}],["unknown",{"_index":6404,"title":{},"name":{},"text":{"242":{}},"component":{}}],["unless",{"_index":1092,"title":{},"name":{},"text":{"6":{},"13":{}},"component":{}}],["unlik",{"_index":2837,"title":{},"name":{},"text":{"58":{},"141":{}},"component":{}}],["unlimit",{"_index":518,"title":{},"name":{},"text":{"2":{},"49":{},"179":{}},"component":{}}],["unlock",{"_index":4175,"title":{},"name":{},"text":{"88":{}},"component":{}}],["unnecessari",{"_index":1159,"title":{},"name":{},"text":{"6":{},"122":{},"128":{},"235":{}},"component":{}}],["unneededtim",{"_index":3968,"title":{},"name":{},"text":{"80":{}},"component":{}}],["unpack",{"_index":3214,"title":{},"name":{},"text":{"66":{},"73":{},"88":{},"142":{}},"component":{}}],["unplan",{"_index":4581,"title":{},"name":{},"text":{"125":{}},"component":{}}],["unpredict",{"_index":5542,"title":{},"name":{},"text":{"167":{}},"component":{}}],["unprocess",{"_index":6601,"title":{},"name":{},"text":{"260":{}},"component":{}}],["unread",{"_index":5149,"title":{},"name":{},"text":{"145":{}},"component":{}}],["unregist",{"_index":4484,"title":{},"name":{},"text":{"117":{}},"component":{}}],["unregul",{"_index":106,"title":{},"name":{},"text":{"1":{}},"component":{}}],["unresolv",{"_index":6142,"title":{},"name":{},"text":{"209":{}},"component":{}}],["unsav",{"_index":1408,"title":{},"name":{},"text":{"8":{},"52":{},"223":{},"244":{}},"component":{}}],["unseal",{"_index":756,"title":{},"name":{},"text":{"4":{},"88":{},"195":{}},"component":{}}],["unstabl",{"_index":3833,"title":{},"name":{},"text":{"73":{}},"component":{}}],["unsubscrib",{"_index":6259,"title":{},"name":{},"text":{"223":{}},"component":{}}],["unsuccess",{"_index":5259,"title":{"159-6":{}},"name":{},"text":{"159":{},"242":{},"253":{}},"component":{}}],["until",{"_index":664,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"23":{},"29":{},"33":{},"42":{},"43":{},"52":{},"57":{},"73":{},"75":{},"113":{},"122":{},"129":{},"142":{},"167":{},"213":{},"253":{},"261":{},"262":{}},"component":{}}],["untyp",{"_index":6760,"title":{},"name":{},"text":{"270":{}},"component":{}}],["unwrap",{"_index":5610,"title":{},"name":{},"text":{"167":{}},"component":{}}],["unzip",{"_index":768,"title":{},"name":{},"text":{"4":{},"73":{},"142":{}},"component":{}}],["up",{"_index":720,"title":{"15":{},"17":{},"20":{},"21":{},"184":{},"190":{},"15-2":{},"16-2":{},"17-1":{},"49-63":{},"55-4":{},"73-4":{},"105-2":{},"117-2":{},"124-5":{},"139-20":{},"181-1":{}},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"10":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"25":{},"30":{},"31":{},"32":{},"33":{},"40":{},"46":{},"49":{},"51":{},"55":{},"59":{},"65":{},"67":{},"73":{},"75":{},"76":{},"81":{},"86":{},"100":{},"101":{},"104":{},"105":{},"108":{},"113":{},"115":{},"117":{},"118":{},"122":{},"123":{},"124":{},"125":{},"126":{},"128":{},"139":{},"140":{},"152":{},"154":{},"166":{},"167":{},"168":{},"175":{},"179":{},"181":{},"183":{},"185":{},"186":{},"188":{},"191":{},"194":{},"195":{},"198":{},"202":{},"223":{},"226":{},"232":{},"235":{},"246":{},"247":{},"257":{},"265":{},"269":{},"272":{}},"component":{}}],["updat",{"_index":460,"title":{"36":{},"40":{},"41":{},"42":{},"43":{},"79":{},"161":{},"192":{},"232":{},"40-2":{},"42-2":{},"43-2":{},"52-12":{},"73-28":{},"73-36":{},"73-40":{},"73-41":{},"161-11":{},"161-12":{},"161-13":{},"167-30":{},"177-4":{},"227-1":{},"253-11":{},"254-10":{},"255-16":{},"256-8":{},"269-21":{}},"name":{"40":{},"42":{},"161":{},"256":{}},"text":{"2":{},"4":{},"14":{},"15":{},"16":{},"21":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"37":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"48":{},"49":{},"52":{},"56":{},"57":{},"58":{},"59":{},"60":{},"65":{},"67":{},"69":{},"73":{},"75":{},"76":{},"80":{},"81":{},"84":{},"87":{},"103":{},"108":{},"115":{},"117":{},"118":{},"122":{},"125":{},"126":{},"129":{},"131":{},"139":{},"141":{},"142":{},"144":{},"153":{},"157":{},"161":{},"163":{},"167":{},"168":{},"176":{},"177":{},"184":{},"188":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"205":{},"207":{},"209":{},"224":{},"225":{},"226":{},"227":{},"230":{},"232":{},"244":{},"245":{},"246":{},"247":{},"251":{},"253":{},"254":{},"255":{},"256":{},"264":{},"266":{},"267":{},"268":{},"269":{},"270":{}},"component":{}}],["update/speci",{"_index":2099,"title":{},"name":{},"text":{"41":{}},"component":{}}],["update_clust",{"_index":2104,"title":{},"name":{"43":{}},"text":{},"component":{}}],["update_scc",{"_index":2705,"title":{},"name":{},"text":{"56":{}},"component":{}}],["updatepersonpayload",{"_index":5405,"title":{},"name":{},"text":{"161":{}},"component":{}}],["updatepersonpayloadderivedkey",{"_index":5415,"title":{},"name":{},"text":{"161":{}},"component":{}}],["upgrad",{"_index":490,"title":{"86-3":{},"87-8":{}},"name":{},"text":{"2":{},"22":{},"41":{},"73":{},"81":{},"255":{},"270":{}},"component":{}}],["upgrade.sh",{"_index":2701,"title":{},"name":{},"text":{"56":{}},"component":{}}],["upload",{"_index":419,"title":{"12":{},"241":{},"12-2":{},"103-3":{},"107-8":{},"108-5":{},"108-13":{},"139-21":{},"140-24":{},"140-27":{},"141-27":{}},"name":{"12":{},"207":{},"241":{}},"text":{"2":{},"12":{},"17":{},"30":{},"57":{},"59":{},"61":{},"72":{},"73":{},"75":{},"86":{},"99":{},"103":{},"107":{},"108":{},"112":{},"119":{},"139":{},"140":{},"141":{},"163":{},"164":{},"168":{},"188":{},"225":{},"227":{},"238":{},"241":{},"248":{},"271":{}},"component":{}}],["uploadformchanges.groovi",{"_index":6645,"title":{},"name":{},"text":{"267":{}},"component":{}}],["uploadformscripts.groovi",{"_index":6643,"title":{},"name":{},"text":{"267":{}},"component":{}}],["uploading/reload",{"_index":1516,"title":{},"name":{},"text":{"12":{}},"component":{}}],["upon",{"_index":1487,"title":{"117-3":{}},"name":{},"text":{"9":{},"12":{},"15":{},"16":{},"28":{},"29":{},"33":{},"34":{},"36":{},"63":{},"68":{},"73":{},"80":{},"99":{},"115":{},"117":{},"118":{},"144":{},"148":{},"155":{},"176":{},"236":{},"242":{},"269":{}},"component":{}}],["upper",{"_index":732,"title":{},"name":{},"text":{"4":{},"12":{},"16":{},"25":{},"28":{},"29":{},"31":{},"36":{},"42":{},"43":{},"63":{},"75":{},"76":{},"113":{},"118":{},"139":{},"140":{},"141":{},"154":{},"160":{},"173":{},"182":{}},"component":{}}],["uppercas",{"_index":4646,"title":{},"name":{},"text":{"131":{}},"component":{}}],["uptim",{"_index":1782,"title":{},"name":{},"text":{"21":{}},"component":{}}],["uri",{"_index":580,"title":{},"name":{},"text":{"2":{},"21":{},"201":{},"254":{}},"component":{}}],["url",{"_index":688,"title":{"255":{}},"name":{"105":{},"255":{}},"text":{"4":{},"9":{},"10":{},"25":{},"29":{},"32":{},"51":{},"67":{},"73":{},"75":{},"104":{},"105":{},"115":{},"122":{},"124":{},"140":{},"141":{},"142":{},"162":{},"179":{},"188":{},"193":{},"195":{},"196":{},"230":{},"231":{},"255":{},"272":{}},"component":{}}],["url=\"jdbc:postgresql://{server_ip}:{server_port}/{db_nam",{"_index":5657,"title":{},"name":{},"text":{"168":{}},"component":{}}],["us",{"_index":168,"title":{"104":{},"166":{},"187":{},"227":{},"232":{},"268":{},"6-10":{},"25-6":{},"51-5":{},"52-4":{},"57-4":{},"58-2":{},"58-5":{},"59-2":{},"67-7":{},"73-23":{},"78-4":{},"104-4":{},"105-3":{},"106-1":{},"123-3":{},"141-20":{},"154-6":{},"158-3":{},"159-11":{},"160-6":{},"165-3":{},"166-5":{},"166-6":{},"166-7":{},"166-8":{},"166-10":{},"166-11":{},"167-19":{},"167-40":{},"167-41":{},"195-18":{},"213-5":{},"216-3":{},"217-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"21":{},"22":{},"23":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"37":{},"40":{},"42":{},"43":{},"44":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"78":{},"80":{},"81":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"113":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"148":{},"149":{},"153":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"170":{},"171":{},"173":{},"175":{},"179":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"200":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"223":{},"225":{},"226":{},"227":{},"229":{},"230":{},"231":{},"234":{},"237":{},"242":{},"244":{},"245":{},"248":{},"251":{},"253":{},"254":{},"255":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"264":{},"265":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["usabl",{"_index":4169,"title":{"87-6":{},"204-8":{}},"name":{},"text":{"143":{},"150":{},"151":{},"152":{},"204":{}},"component":{}}],["usag",{"_index":114,"title":{"6-16":{},"52-15":{},"82-3":{},"83-3":{},"84-4":{},"105-9":{},"161-2":{},"166-2":{},"166-9":{},"205-2":{},"205-3":{},"244-2":{},"244-4":{},"262-3":{}},"name":{"166":{}},"text":{"1":{},"2":{},"6":{},"14":{},"41":{},"48":{},"52":{},"81":{},"83":{},"84":{},"86":{},"105":{},"108":{},"125":{},"161":{},"166":{},"171":{},"188":{},"195":{},"205":{},"244":{},"262":{},"269":{}},"component":{}}],["usb",{"_index":222,"title":{},"name":{},"text":{"2":{}},"component":{}}],["use_origin",{"_index":5981,"title":{},"name":{},"text":{"196":{}},"component":{}}],["use_slot",{"_index":6541,"title":{},"name":{},"text":{"258":{}},"component":{}}],["user",{"_index":202,"title":{"8":{},"9":{},"11":{},"12":{},"13":{},"76":{},"112":{},"116":{},"119":{},"120":{},"121":{},"133":{},"144":{},"145":{},"146":{},"154":{},"158":{},"183":{},"237":{},"255":{},"9-2":{},"32-21":{},"46-2":{},"49-17":{},"51-5":{},"52-9":{},"52-13":{},"52-15":{},"55-2":{},"55-3":{},"55-4":{},"58-20":{},"59-7":{},"73-8":{},"73-9":{},"76-2":{},"78-7":{},"99-11":{},"105-7":{},"119-3":{},"119-5":{},"119-7":{},"119-8":{},"120-1":{},"120-2":{},"127-1":{},"139-8":{},"139-9":{},"140-8":{},"140-14":{},"141-12":{},"141-13":{},"142-15":{},"154-5":{},"154-6":{},"154-7":{},"154-8":{},"154-13":{},"155-7":{},"159-11":{},"160-5":{},"160-7":{},"160-8":{},"161-10":{},"161-11":{},"162-6":{},"162-10":{},"183-4":{},"183-5":{},"186-4":{},"186-5":{},"202-10":{},"203-3":{},"203-4":{},"216-7":{},"216-11":{},"216-14":{},"216-17":{},"217-6":{},"217-9":{},"237-14":{},"253-2":{},"254-2":{},"255-2":{},"255-7":{},"255-11":{},"256-1":{},"257-2":{},"266-2":{},"267-2":{},"268-3":{},"269-3":{},"270-4":{},"272-3":{}},"name":{"13":{},"112":{},"119":{},"120":{},"133":{},"146":{},"158":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"18":{},"25":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"37":{},"40":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"84":{},"86":{},"87":{},"99":{},"100":{},"103":{},"104":{},"105":{},"111":{},"112":{},"113":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"124":{},"125":{},"127":{},"128":{},"129":{},"131":{},"133":{},"134":{},"135":{},"136":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"154":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"173":{},"175":{},"177":{},"179":{},"181":{},"183":{},"184":{},"185":{},"186":{},"189":{},"190":{},"191":{},"194":{},"195":{},"196":{},"198":{},"199":{},"200":{},"202":{},"203":{},"204":{},"205":{},"206":{},"208":{},"209":{},"211":{},"213":{},"214":{},"216":{},"217":{},"218":{},"221":{},"222":{},"223":{},"225":{},"226":{},"227":{},"229":{},"230":{},"234":{},"235":{},"236":{},"237":{},"240":{},"242":{},"245":{},"246":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"264":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["user.email",{"_index":899,"title":{},"name":{},"text":{"4":{}},"component":{}}],["user.nam",{"_index":898,"title":{},"name":{},"text":{"4":{}},"component":{}}],["user/excerpt/audit/etc",{"_index":6527,"title":{},"name":{},"text":{"258":{}},"component":{}}],["user:tag",{"_index":3517,"title":{},"name":{},"text":{"73":{}},"component":{}}],["user=postgr",{"_index":1776,"title":{},"name":{},"text":{"21":{}},"component":{}}],["user_",{"_index":2662,"title":{},"name":{},"text":{"55":{}},"component":{}}],["user_${random}@example.com",{"_index":3795,"title":{},"name":{},"text":{"73":{}},"component":{}}],["user_cr",{"_index":4519,"title":{},"name":{},"text":{"119":{}},"component":{}}],["user_data",{"_index":3555,"title":{},"name":{},"text":{"73":{}},"component":{}}],["user_nam",{"_index":2983,"title":{},"name":{},"text":{"59":{}},"component":{}}],["user`",{"_index":6773,"title":{"271-3":{}},"name":{},"text":{"271":{}},"component":{}}],["userdatasecret",{"_index":3995,"title":{},"name":{},"text":{"80":{}},"component":{}}],["userdrfo",{"_index":4525,"title":{},"name":{},"text":{"119":{}},"component":{}}],["userid",{"_index":4526,"title":{},"name":{},"text":{"119":{},"155":{}},"component":{}}],["userkafkaservic",{"_index":1140,"title":{},"name":{},"text":{"6":{}},"component":{}}],["userkeycloakid",{"_index":4523,"title":{},"name":{},"text":{"119":{}},"component":{}}],["usermod",{"_index":3663,"title":{},"name":{},"text":{"73":{}},"component":{}}],["usermodel",{"_index":2187,"title":{},"name":{},"text":{"47":{}},"component":{}}],["usernam",{"_index":692,"title":{"183-6":{},"186-6":{}},"name":{},"text":{"4":{},"25":{},"28":{},"67":{},"73":{},"104":{},"118":{},"119":{},"120":{},"122":{},"154":{},"158":{},"168":{},"183":{},"186":{},"195":{}},"component":{}}],["username\":\"test",{"_index":3762,"title":{},"name":{},"text":{"73":{}},"component":{}}],["username\":\"usernam",{"_index":5215,"title":{},"name":{},"text":{"154":{}},"component":{}}],["username1",{"_index":5175,"title":{},"name":{},"text":{"154":{}},"component":{}}],["username1,username2,username3",{"_index":5741,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["username2",{"_index":5176,"title":{},"name":{},"text":{"154":{}},"component":{}}],["username3",{"_index":5205,"title":{},"name":{},"text":{"154":{}},"component":{}}],["username={usernam",{"_index":5658,"title":{},"name":{},"text":{"168":{}},"component":{}}],["users.adoc",{"_index":3084,"title":{},"name":{},"text":{"60":{},"142":{}},"component":{}}],["users.each",{"_index":5201,"title":{},"name":{},"text":{"154":{}},"component":{}}],["users/search",{"_index":5211,"title":{},"name":{},"text":{"154":{}},"component":{}}],["users_upload",{"_index":4501,"title":{},"name":{},"text":{"119":{}},"component":{}}],["users_upload.csv",{"_index":4500,"title":{},"name":{},"text":{"119":{}},"component":{}}],["usersbyattribut",{"_index":5189,"title":{},"name":{},"text":{"154":{},"158":{},"183":{},"186":{}},"component":{}}],["userservic",{"_index":1139,"title":{},"name":{},"text":{"6":{}},"component":{}}],["usersstr",{"_index":5200,"title":{},"name":{},"text":{"154":{}},"component":{}}],["usersstring=usersstring+it",{"_index":5202,"title":{},"name":{},"text":{"154":{}},"component":{}}],["usertag",{"_index":3755,"title":{},"name":{},"text":{"73":{}},"component":{}}],["usertask",{"_index":5355,"title":{},"name":{},"text":{"160":{}},"component":{}}],["user’",{"_index":274,"title":{"162-9":{},"205-10":{}},"name":{},"text":{"2":{},"30":{},"55":{},"59":{},"70":{},"103":{},"111":{},"117":{},"119":{},"120":{},"122":{},"144":{},"159":{},"161":{},"162":{},"186":{},"205":{},"223":{},"229":{}},"component":{}}],["usr",{"_index":578,"title":{"195-23":{}},"name":{},"text":{"2":{},"195":{}},"component":{}}],["usreou",{"_index":452,"title":{},"name":{},"text":{"2":{}},"component":{}}],["usual",{"_index":482,"title":{},"name":{},"text":{"2":{},"73":{},"78":{},"122":{},"125":{},"143":{},"196":{},"229":{},"258":{}},"component":{}}],["utc",{"_index":1581,"title":{},"name":{},"text":{"15":{},"51":{},"183":{},"186":{}},"component":{}}],["utc+2",{"_index":1583,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{}}],["utc+3",{"_index":1585,"title":{},"name":{},"text":{"15":{},"16":{},"213":{}},"component":{}}],["utf",{"_index":3118,"title":{},"name":{},"text":{"61":{},"103":{},"119":{},"167":{}},"component":{}}],["utf8",{"_index":4389,"title":{},"name":{},"text":{"107":{}},"component":{}}],["util",{"_index":311,"title":{"58-3":{}},"name":{},"text":{"2":{},"6":{},"9":{},"21":{},"47":{},"52":{},"58":{},"63":{},"65":{},"67":{},"73":{},"74":{},"81":{},"84":{},"99":{},"123":{},"124":{},"125":{},"131":{},"138":{},"194":{},"204":{},"205":{},"208":{},"233":{},"239":{},"240":{},"242":{},"257":{},"262":{},"264":{},"265":{},"269":{},"270":{}},"component":{}}],["uuid",{"_index":2571,"title":{},"name":{},"text":{"52":{},"59":{},"83":{},"105":{},"115":{},"134":{},"135":{},"136":{},"138":{},"161":{},"167":{},"206":{},"209":{}},"component":{}}],["uuid','research_typ",{"_index":4339,"title":{},"name":{},"text":{"107":{}},"component":{}}],["uuid_generate_v4",{"_index":2993,"title":{},"name":{},"text":{"59":{},"138":{}},"component":{}}],["uuid_nil",{"_index":5108,"title":{},"name":{},"text":{"142":{}},"component":{}}],["ux",{"_index":1268,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ux/ui",{"_index":1276,"title":{},"name":{},"text":{"6":{}},"component":{}}],["uy_y3s_diqg422v9rw",{"_index":1632,"title":{},"name":{},"text":{"18":{}},"component":{}}],["v",{"_index":3723,"title":{},"name":{},"text":{"73":{}},"component":{}}],["v1",{"_index":3743,"title":{},"name":{},"text":{"73":{},"195":{},"254":{},"258":{},"272":{}},"component":{}}],["v1.0",{"_index":2350,"title":{},"name":{},"text":{"49":{}},"component":{}}],["v1.20.0+87cc9a4",{"_index":1682,"title":{},"name":{},"text":{"19":{}},"component":{}}],["v2",{"_index":2274,"title":{},"name":{},"text":{"49":{},"73":{},"103":{},"104":{}},"component":{}}],["v2.0",{"_index":2277,"title":{},"name":{},"text":{"49":{}},"component":{}}],["v3",{"_index":2448,"title":{},"name":{},"text":{"49":{},"73":{}},"component":{}}],["v8",{"_index":2286,"title":{},"name":{},"text":{"49":{}},"component":{}}],["v=dkim1",{"_index":1884,"title":{},"name":{},"text":{"25":{}},"component":{}}],["v=spf1",{"_index":1871,"title":{},"name":{},"text":{"25":{}},"component":{}}],["valid",{"_index":577,"title":{"131":{},"269":{},"270":{},"99-21":{},"108-15":{},"119-5":{},"140-12":{},"196-2":{},"196-3":{},"257-12":{},"267-9":{},"269-9":{},"270-6":{},"270-7":{}},"name":{"131":{},"196":{},"269":{},"270":{}},"text":{"2":{},"4":{},"6":{},"9":{},"12":{},"30":{},"33":{},"42":{},"43":{},"47":{},"49":{},"52":{},"57":{},"66":{},"67":{},"75":{},"78":{},"86":{},"99":{},"103":{},"105":{},"108":{},"119":{},"122":{},"129":{},"130":{},"131":{},"135":{},"136":{},"140":{},"141":{},"144":{},"163":{},"164":{},"165":{},"173":{},"175":{},"179":{},"184":{},"195":{},"196":{},"197":{},"198":{},"202":{},"204":{},"226":{},"227":{},"229":{},"234":{},"237":{},"244":{},"245":{},"253":{},"255":{},"256":{},"257":{},"260":{},"265":{},"267":{},"269":{},"270":{},"271":{},"272":{}},"component":{}}],["validatex509",{"_index":5985,"title":{},"name":{},"text":{"196":{}},"component":{}}],["validation.adoc#exampl",{"_index":4636,"title":{},"name":{},"text":{"129":{}},"component":{}}],["validationresult.prop('container').valu",{"_index":6696,"title":{},"name":{},"text":{"269":{}},"component":{}}],["validatioresult",{"_index":6709,"title":{},"name":{},"text":{"269":{}},"component":{}}],["valiu",{"_index":2685,"title":{},"name":{},"text":{"55":{}},"component":{}}],["valu",{"_index":299,"title":{"141-22":{},"167-4":{},"167-13":{},"229-6":{}},"name":{"227":{}},"text":{"2":{},"4":{},"6":{},"9":{},"15":{},"16":{},"21":{},"22":{},"25":{},"30":{},"34":{},"49":{},"51":{},"52":{},"55":{},"56":{},"58":{},"59":{},"60":{},"63":{},"66":{},"72":{},"73":{},"75":{},"78":{},"80":{},"82":{},"83":{},"84":{},"100":{},"103":{},"104":{},"105":{},"107":{},"108":{},"111":{},"115":{},"119":{},"120":{},"124":{},"126":{},"127":{},"128":{},"131":{},"135":{},"138":{},"139":{},"140":{},"141":{},"142":{},"145":{},"152":{},"154":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"166":{},"167":{},"179":{},"183":{},"186":{},"192":{},"205":{},"209":{},"210":{},"211":{},"212":{},"213":{},"216":{},"217":{},"218":{},"221":{},"222":{},"224":{},"225":{},"226":{},"227":{},"229":{},"231":{},"232":{},"239":{},"242":{},"245":{},"253":{},"255":{},"256":{},"259":{},"260":{},"267":{},"270":{},"271":{},"272":{}},"component":{}}],["valuabl",{"_index":3201,"title":{},"name":{},"text":{"66":{},"99":{}},"component":{}}],["value_",{"_index":6076,"title":{},"name":{},"text":{"205":{}},"component":{}}],["valuefrom",{"_index":6546,"title":{},"name":{},"text":{"258":{}},"component":{}}],["values.gotmpl",{"_index":798,"title":{},"name":{},"text":{"4":{},"56":{}},"component":{}}],["values.yaml",{"_index":797,"title":{"55-7":{}},"name":{},"text":{"4":{},"15":{},"16":{},"29":{},"55":{},"56":{},"76":{},"182":{},"188":{},"190":{},"192":{},"193":{},"248":{},"251":{},"253":{},"254":{},"255":{}},"component":{}}],["values.yaml/values.gotmpl",{"_index":837,"title":{},"name":{},"text":{"4":{}},"component":{}}],["values.yml",{"_index":3911,"title":{},"name":{},"text":{"76":{}},"component":{}}],["value—​for",{"_index":6246,"title":{},"name":{},"text":{"221":{}},"component":{}}],["vapnyarska",{"_index":5255,"title":{},"name":{},"text":{"158":{}},"component":{}}],["var",{"_index":2560,"title":{"52-10":{},"140-15":{},"141-10":{},"141-14":{},"161-6":{}},"name":{"101":{}},"text":{"52":{},"73":{},"132":{},"140":{},"141":{},"159":{},"161":{},"205":{},"216":{},"267":{}},"component":{}}],["var.cross_account_role_arn",{"_index":3558,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.ingress_cidr_block",{"_index":3615,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.key_pair",{"_index":3575,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.node_ami",{"_index":3547,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.node_nam",{"_index":3545,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.node_typ",{"_index":3549,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.platform_cidr",{"_index":3528,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.platform_nam",{"_index":3527,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.prefix_list_id",{"_index":3617,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.private_cidr",{"_index":3532,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.public_cidr",{"_index":3534,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.region",{"_index":3511,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.role_nam",{"_index":3592,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.ssh_port",{"_index":3612,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.subnet_az",{"_index":3530,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.table_nam",{"_index":3501,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.tag",{"_index":3540,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.volume_s",{"_index":3566,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var.volume_typ",{"_index":3564,"title":{},"name":{},"text":{"73":{}},"component":{}}],["var/lib/dhcp/dhcp.leas",{"_index":1656,"title":{},"name":{},"text":{"19":{}},"component":{}}],["var/run/pgpool",{"_index":6555,"title":{},"name":{},"text":{"258":{}},"component":{}}],["varchar(255",{"_index":2990,"title":{},"name":{},"text":{"59":{}},"component":{}}],["vari",{"_index":2008,"title":{},"name":{},"text":{"32":{},"69":{},"70":{},"165":{}},"component":{}}],["variabl",{"_index":764,"title":{"101":{},"229":{},"141-8":{},"229-3":{}},"name":{},"text":{"4":{},"6":{},"16":{},"30":{},"34":{},"52":{},"56":{},"58":{},"60":{},"61":{},"65":{},"73":{},"101":{},"103":{},"104":{},"105":{},"124":{},"132":{},"138":{},"139":{},"140":{},"141":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"165":{},"179":{},"181":{},"183":{},"186":{},"189":{},"195":{},"205":{},"211":{},"212":{},"216":{},"217":{},"218":{},"221":{},"222":{},"229":{},"230":{},"253":{},"255":{},"260":{},"262":{},"267":{},"271":{}},"component":{}}],["variables.adoc",{"_index":6288,"title":{},"name":{},"text":{"229":{}},"component":{}}],["variables.tf",{"_index":3519,"title":{},"name":{},"text":{"73":{}},"component":{}}],["varieti",{"_index":3204,"title":{},"name":{},"text":{"66":{},"81":{}},"component":{}}],["variou",{"_index":346,"title":{"244-6":{}},"name":{},"text":{"2":{},"12":{},"21":{},"30":{},"31":{},"32":{},"34":{},"50":{},"58":{},"66":{},"70":{},"81":{},"108":{},"113":{},"122":{},"128":{},"132":{},"133":{},"162":{},"171":{},"191":{},"197":{},"199":{},"226":{},"230":{},"244":{},"246":{},"265":{}},"component":{}}],["vars.yml",{"_index":4260,"title":{},"name":{},"text":{"101":{},"139":{},"202":{}},"component":{}}],["vars/camunda",{"_index":4259,"title":{},"name":{},"text":{"101":{},"202":{}},"component":{}}],["varuabl",{"_index":6600,"title":{},"name":{},"text":{"260":{}},"component":{}}],["vast",{"_index":5137,"title":{},"name":{},"text":{"143":{}},"component":{}}],["vastli",{"_index":6515,"title":{},"name":{},"text":{"258":{}},"component":{}}],["vasyl",{"_index":5427,"title":{},"name":{},"text":{"162":{}},"component":{}}],["vault",{"_index":634,"title":{"73-32":{},"73-39":{},"73-46":{},"195-18":{},"195-21":{},"255-11":{}},"name":{},"text":{"4":{},"14":{},"33":{},"49":{},"50":{},"56":{},"65":{},"73":{},"75":{},"76":{},"86":{},"88":{},"104":{},"122":{},"123":{},"188":{},"189":{},"192":{},"193":{},"195":{},"248":{},"250":{},"255":{}},"component":{}}],["vault/data",{"_index":847,"title":{},"name":{},"text":{"4":{}},"component":{}}],["vault:registri",{"_index":5882,"title":{},"name":{},"text":{"195":{}},"component":{}}],["vault:v1",{"_index":6051,"title":{},"name":{},"text":{"203":{}},"component":{}}],["vault:v1:q5rd32qx1bg4czamcqeztliqbzuvfmnqs4wmixci9lap95frf0tzx0a7tyfom87ebebpzr91yoe2lbaawbf+gi547r7mi+yeifeyxpneworo2xrevxj8pmrduoz8axopkmfog2/gbdn2cyuwwopqpxghrz/qhmkst7pdt66e7dc49u3hdxbkimvwfd0byxph8ysv7xekbmxzmk7oepv07ckx93epfdgvyquvnolnpmocdf",{"_index":6052,"title":{},"name":{},"text":{"203":{}},"component":{}}],["vault_key",{"_index":755,"title":{},"name":{},"text":{"4":{}},"component":{}}],["vault_root_token",{"_index":3855,"title":{},"name":{},"text":{"73":{}},"component":{}}],["vault’",{"_index":3903,"title":{},"name":{},"text":{"75":{}},"component":{}}],["vc",{"_index":1387,"title":{},"name":{},"text":{"6":{},"14":{},"31":{},"65":{},"66":{},"201":{}},"component":{}}],["vcpu",{"_index":3413,"title":{},"name":{},"text":{"73":{}},"component":{}}],["vcs[1",{"_index":1992,"title":{},"name":{},"text":{"31":{}},"component":{}}],["vector",{"_index":2780,"title":{},"name":{},"text":{"58":{},"67":{}},"component":{}}],["vehicl",{"_index":348,"title":{},"name":{},"text":{"2":{}},"component":{}}],["velero",{"_index":632,"title":{},"name":{},"text":{"4":{},"14":{},"15":{},"16":{},"18":{},"30":{},"43":{},"49":{}},"component":{}}],["velit",{"_index":6323,"title":{},"name":{},"text":{"231":{}},"component":{}}],["vendor",{"_index":3338,"title":{},"name":{},"text":{"67":{}},"component":{}}],["verac",{"_index":3916,"title":{},"name":{},"text":{"78":{}},"component":{}}],["verdana",{"_index":5747,"title":{},"name":{},"text":{"183":{}},"component":{}}],["verif",{"_index":273,"title":{},"name":{},"text":{"2":{},"66":{},"67":{},"99":{},"122":{},"138":{},"167":{},"177":{},"184":{},"185":{},"197":{},"242":{},"244":{},"255":{},"256":{},"268":{},"269":{},"270":{}},"component":{}}],["verifi",{"_index":623,"title":{"242-10":{}},"name":{},"text":{"4":{},"6":{},"9":{},"12":{},"13":{},"18":{},"19":{},"21":{},"28":{},"33":{},"40":{},"57":{},"58":{},"63":{},"66":{},"67":{},"73":{},"78":{},"99":{},"117":{},"118":{},"120":{},"122":{},"129":{},"142":{},"148":{},"149":{},"168":{},"179":{},"184":{},"196":{},"223":{},"242":{},"244":{}},"component":{}}],["verificationcod",{"_index":5805,"title":{},"name":{},"text":{"184":{}},"component":{}}],["vero",{"_index":6321,"title":{},"name":{},"text":{"231":{}},"component":{}}],["versa",{"_index":2891,"title":{},"name":{},"text":{"58":{},"197":{},"216":{},"258":{},"264":{},"265":{}},"component":{}}],["version",{"_index":306,"title":{"79":{},"176":{},"177":{},"178":{},"254":{},"268":{},"108-12":{},"142-8":{},"177-2":{},"177-5":{},"177-6":{},"242-8":{}},"name":{"176":{},"178":{},"254":{}},"text":{"2":{},"4":{},"6":{},"14":{},"15":{},"16":{},"17":{},"19":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"41":{},"42":{},"43":{},"44":{},"45":{},"47":{},"49":{},"56":{},"57":{},"60":{},"62":{},"65":{},"66":{},"72":{},"73":{},"74":{},"79":{},"81":{},"83":{},"84":{},"103":{},"104":{},"108":{},"112":{},"115":{},"118":{},"122":{},"123":{},"128":{},"138":{},"139":{},"140":{},"141":{},"142":{},"153":{},"167":{},"168":{},"173":{},"175":{},"176":{},"177":{},"178":{},"179":{},"189":{},"191":{},"195":{},"197":{},"202":{},"204":{},"205":{},"207":{},"223":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"246":{},"253":{},"254":{},"255":{},"256":{},"262":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{}},"component":{}}],["version).zip",{"_index":3816,"title":{},"name":{},"text":{"73":{}},"component":{}}],["version=1.9.3",{"_index":6463,"title":{},"name":{},"text":{"254":{}},"component":{}}],["version_string=5:20.10.23~3",{"_index":3633,"title":{},"name":{},"text":{"73":{}},"component":{}}],["versionedfilerepositori",{"_index":6658,"title":{},"name":{},"text":{"268":{}},"component":{}}],["version}.jar",{"_index":5655,"title":{},"name":{},"text":{"168":{}},"component":{}}],["version}.jar:liquibas",{"_index":5662,"title":{},"name":{},"text":{"168":{}},"component":{}}],["version}.jar;liquibas",{"_index":5654,"title":{},"name":{},"text":{"168":{}},"component":{}}],["vertic",{"_index":2068,"title":{"39":{}},"name":{"39":{}},"text":{"38":{},"39":{},"52":{},"194":{},"199":{},"208":{},"226":{},"237":{}},"component":{}}],["verycustom",{"_index":6640,"title":{},"name":{},"text":{"267":{}},"component":{}}],["via",{"_index":546,"title":{"124":{},"181":{},"183":{},"115-3":{},"195-16":{}},"name":{},"text":{"2":{},"4":{},"10":{},"15":{},"19":{},"23":{},"25":{},"28":{},"31":{},"33":{},"36":{},"37":{},"42":{},"43":{},"46":{},"47":{},"48":{},"52":{},"55":{},"57":{},"59":{},"60":{},"65":{},"66":{},"67":{},"72":{},"73":{},"75":{},"78":{},"82":{},"83":{},"99":{},"100":{},"104":{},"105":{},"108":{},"111":{},"115":{},"119":{},"123":{},"124":{},"125":{},"126":{},"131":{},"139":{},"141":{},"154":{},"160":{},"161":{},"162":{},"165":{},"167":{},"168":{},"171":{},"180":{},"181":{},"183":{},"185":{},"186":{},"188":{},"193":{},"195":{},"208":{},"212":{},"226":{},"247":{},"254":{},"255":{},"260":{},"261":{},"265":{}},"component":{}}],["viabil",{"_index":1491,"title":{},"name":{},"text":{"10":{}},"component":{}}],["viabl",{"_index":6522,"title":{},"name":{},"text":{"258":{}},"component":{}}],["vice",{"_index":2890,"title":{},"name":{},"text":{"58":{},"197":{},"216":{},"258":{},"264":{},"265":{}},"component":{}}],["video",{"_index":4296,"title":{"105-11":{},"115-7":{},"123-4":{}},"name":{},"text":{"105":{},"115":{},"123":{}},"component":{}}],["vidmov.csv",{"_index":4370,"title":{},"name":{},"text":{"107":{}},"component":{}}],["view",{"_index":421,"title":{"31":{},"171":{},"245":{},"263":{},"265":{},"31-2":{},"32-10":{},"58-22":{},"60-7":{},"60-16":{},"68-2":{},"119-4":{},"119-8":{},"125-3":{},"126-1":{},"139-9":{},"139-17":{},"142-4":{},"142-5":{},"142-6":{},"142-7":{},"148-2":{},"149-2":{},"154-13":{},"167-31":{},"167-32":{},"167-33":{},"167-36":{},"167-37":{},"167-38":{},"167-39":{},"242-4":{}},"name":{"171":{},"245":{}},"text":{"2":{},"15":{},"16":{},"21":{},"28":{},"29":{},"31":{},"32":{},"33":{},"36":{},"37":{},"39":{},"42":{},"43":{},"49":{},"52":{},"57":{},"58":{},"59":{},"60":{},"65":{},"66":{},"68":{},"75":{},"76":{},"81":{},"84":{},"103":{},"105":{},"111":{},"112":{},"115":{},"117":{},"118":{},"119":{},"120":{},"122":{},"124":{},"125":{},"126":{},"127":{},"128":{},"138":{},"139":{},"141":{},"142":{},"145":{},"148":{},"149":{},"152":{},"154":{},"161":{},"162":{},"166":{},"167":{},"168":{},"170":{},"171":{},"173":{},"175":{},"177":{},"179":{},"181":{},"186":{},"191":{},"194":{},"197":{},"202":{},"204":{},"205":{},"216":{},"220":{},"221":{},"227":{},"230":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"254":{},"255":{},"262":{},"263":{},"264":{},"265":{},"269":{}},"component":{}}],["view.json",{"_index":4320,"title":{},"name":{},"text":{"105":{},"162":{}},"component":{}}],["viewer",{"_index":2006,"title":{"32-22":{}},"name":{},"text":{"32":{},"119":{},"142":{},"193":{},"201":{},"250":{},"255":{}},"component":{}}],["viewing/edit",{"_index":6460,"title":{},"name":{},"text":{"254":{}},"component":{}}],["vinnytsia",{"_index":5249,"title":{},"name":{},"text":{"158":{}},"component":{}}],["violat",{"_index":1720,"title":{},"name":{},"text":{"21":{},"119":{},"234":{},"237":{},"245":{},"271":{}},"component":{}}],["violet",{"_index":4247,"title":{},"name":{},"text":{"100":{}},"component":{}}],["virtual",{"_index":1064,"title":{"23-3":{},"23-4":{},"73-18":{},"73-20":{},"73-21":{}},"name":{},"text":{"6":{},"23":{},"26":{},"34":{},"39":{},"50":{},"73":{},"74":{},"81":{},"105":{},"127":{},"167":{},"255":{}},"component":{}}],["virtualservic",{"_index":6461,"title":{},"name":{},"text":{"254":{}},"component":{}}],["virus",{"_index":2417,"title":{},"name":{},"text":{"49":{}},"component":{}}],["visibl",{"_index":1540,"title":{},"name":{},"text":{"13":{},"113":{},"139":{},"262":{}},"component":{}}],["visit",{"_index":4204,"title":{},"name":{},"text":{"99":{},"101":{}},"component":{}}],["visstat",{"_index":4590,"title":{},"name":{},"text":{"126":{}},"component":{}}],["visual",{"_index":268,"title":{"126":{},"262":{},"49-43":{}},"name":{},"text":{"2":{},"6":{},"32":{},"49":{},"51":{},"58":{},"66":{},"81":{},"100":{},"125":{},"126":{},"127":{},"162":{},"164":{},"194":{},"197":{},"244":{},"262":{},"263":{},"264":{},"265":{},"272":{}},"component":{}}],["visualis",{"_index":4593,"title":{"127-4":{}},"name":{},"text":{"127":{}},"component":{}}],["vital",{"_index":226,"title":{},"name":{},"text":{"2":{},"99":{}},"component":{}}],["vm",{"_index":2462,"title":{},"name":{},"text":{"50":{}},"component":{}}],["vmware",{"_index":1904,"title":{},"name":{},"text":{"26":{},"74":{}},"component":{}}],["void",{"_index":6818,"title":{},"name":{},"text":{"271":{}},"component":{}}],["volum",{"_index":1198,"title":{},"name":{},"text":{"6":{},"14":{},"21":{},"22":{},"49":{},"50":{},"73":{},"167":{},"195":{},"205":{},"227":{},"258":{},"271":{}},"component":{}}],["volume_s",{"_index":3565,"title":{},"name":{},"text":{"73":{}},"component":{}}],["volume_typ",{"_index":3563,"title":{},"name":{},"text":{"73":{}},"component":{}}],["volumemount",{"_index":5910,"title":{},"name":{},"text":{"195":{},"258":{}},"component":{}}],["volumes",{"_index":3981,"title":{},"name":{},"text":{"80":{}},"component":{}}],["volumetyp",{"_index":3983,"title":{},"name":{},"text":{"80":{}},"component":{}}],["volupt",{"_index":6317,"title":{},"name":{},"text":{"231":{}},"component":{}}],["voluptatem",{"_index":6331,"title":{},"name":{},"text":{"231":{}},"component":{}}],["vote",{"_index":4631,"title":{},"name":{},"text":{"129":{}},"component":{}}],["vpc",{"_index":3524,"title":{},"name":{},"text":{"73":{}},"component":{}}],["vpc_id",{"_index":3609,"title":{},"name":{},"text":{"73":{}},"component":{}}],["vpc_security_group_id",{"_index":3551,"title":{},"name":{},"text":{"73":{}},"component":{}}],["vpo_person_type_contains_nam",{"_index":5641,"title":{},"name":{},"text":{"167":{}},"component":{}}],["vpofirstname\":\"jar",{"_index":5622,"title":{},"name":{},"text":{"167":{}},"component":{}}],["vpoid\":\"57152fa5",{"_index":5616,"title":{},"name":{},"text":{"167":{}},"component":{}}],["vpolastname\":\"holm",{"_index":5621,"title":{},"name":{},"text":{"167":{}},"component":{}}],["vposecondname\":\"oliv",{"_index":5623,"title":{},"name":{},"text":{"167":{}},"component":{}}],["vscode",{"_index":3194,"title":{},"name":{},"text":{"66":{}},"component":{}}],["vsphere",{"_index":681,"title":{"39":{}},"name":{},"text":{"4":{},"14":{},"26":{},"38":{},"39":{},"74":{},"87":{}},"component":{}}],["vuej",{"_index":2294,"title":{},"name":{},"text":{"49":{},"194":{}},"component":{}}],["vulner",{"_index":1313,"title":{"67-16":{}},"name":{},"text":{"6":{},"14":{},"67":{},"99":{}},"component":{}}],["wait",{"_index":663,"title":{},"name":{},"text":{"4":{},"15":{},"16":{},"23":{},"25":{},"29":{},"33":{},"42":{},"43":{},"57":{},"60":{},"73":{},"75":{},"101":{},"107":{},"115":{},"117":{},"118":{},"119":{},"122":{},"125":{},"129":{},"138":{},"142":{},"159":{},"167":{},"213":{},"214":{}},"component":{}}],["wal",{"_index":1699,"title":{},"name":{},"text":{"21":{},"258":{}},"component":{}}],["wal_receiver_timeout",{"_index":4397,"title":{},"name":{},"text":{"107":{}},"component":{}}],["wal_sender_timeout",{"_index":4395,"title":{},"name":{},"text":{"107":{}},"component":{}}],["walk",{"_index":5353,"title":{},"name":{},"text":{"160":{}},"component":{}}],["want",{"_index":1714,"title":{},"name":{},"text":{"21":{},"52":{},"100":{},"101":{},"103":{},"105":{},"120":{},"124":{},"129":{},"138":{},"144":{},"154":{},"167":{},"175":{},"234":{},"236":{},"237":{},"244":{}},"component":{}}],["warn",{"_index":1401,"title":{"8":{}},"name":{},"text":{"8":{},"56":{},"57":{},"103":{},"127":{},"128":{},"177":{},"223":{},"238":{},"244":{},"265":{}},"component":{}}],["warning[1",{"_index":1406,"title":{},"name":{},"text":{"8":{}},"component":{}}],["wasn’t",{"_index":6199,"title":{},"name":{},"text":{"213":{}},"component":{}}],["waterway",{"_index":2965,"title":{},"name":{},"text":{"59":{}},"component":{}}],["wave",{"_index":1376,"title":{},"name":{},"text":{"6":{}},"component":{}}],["way",{"_index":466,"title":{"195-30":{}},"name":{},"text":{"2":{},"6":{},"19":{},"21":{},"23":{},"28":{},"29":{},"32":{},"33":{},"36":{},"45":{},"52":{},"57":{},"59":{},"60":{},"66":{},"75":{},"99":{},"103":{},"111":{},"113":{},"122":{},"124":{},"125":{},"131":{},"139":{},"141":{},"152":{},"155":{},"160":{},"161":{},"164":{},"167":{},"171":{},"177":{},"184":{},"189":{},"193":{},"195":{},"211":{},"212":{},"216":{},"218":{},"232":{},"237":{},"251":{},"258":{},"260":{},"267":{}},"component":{}}],["weak",{"_index":3221,"title":{},"name":{},"text":{"67":{},"99":{}},"component":{}}],["web",{"_index":241,"title":{"49-23":{},"270-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"9":{},"22":{},"23":{},"25":{},"26":{},"28":{},"31":{},"32":{},"44":{},"49":{},"50":{},"58":{},"59":{},"60":{},"66":{},"67":{},"73":{},"74":{},"99":{},"104":{},"113":{},"122":{},"123":{},"125":{},"126":{},"129":{},"139":{},"143":{},"150":{},"151":{},"152":{},"153":{},"179":{},"188":{},"191":{},"192":{},"193":{},"194":{},"196":{},"197":{},"198":{},"199":{},"202":{},"204":{},"208":{},"234":{},"237":{},"254":{},"255":{},"262":{},"264":{},"268":{},"270":{}},"component":{}}],["webbrows",{"_index":2428,"title":{},"name":{},"text":{"49":{}},"component":{}}],["webdriv",{"_index":1361,"title":{},"name":{},"text":{"6":{}},"component":{}}],["webport",{"_index":2668,"title":{},"name":{},"text":{"55":{}},"component":{}}],["webservic",{"_index":4564,"title":{},"name":{},"text":{"124":{},"193":{},"198":{},"250":{}},"component":{}}],["websit",{"_index":1524,"title":{},"name":{},"text":{"12":{},"25":{},"30":{},"31":{},"40":{},"73":{},"134":{},"216":{}},"component":{}}],["weburl",{"_index":6492,"title":{},"name":{},"text":{"255":{}},"component":{}}],["wed",{"_index":5768,"title":{},"name":{},"text":{"183":{},"186":{}},"component":{}}],["week",{"_index":1211,"title":{},"name":{},"text":{"6":{},"21":{},"50":{},"51":{},"261":{}},"component":{}}],["weight",{"_index":5820,"title":{},"name":{},"text":{"188":{},"248":{},"254":{}},"component":{}}],["welcom",{"_index":3086,"title":{},"name":{},"text":{"60":{},"145":{}},"component":{}}],["well",{"_index":430,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"15":{},"29":{},"32":{},"33":{},"45":{},"52":{},"55":{},"56":{},"57":{},"61":{},"66":{},"67":{},"78":{},"81":{},"99":{},"118":{},"119":{},"120":{},"124":{},"132":{},"138":{},"149":{},"154":{},"171":{},"177":{},"194":{},"220":{},"230":{},"242":{},"245":{}},"component":{}}],["went",{"_index":6200,"title":{},"name":{},"text":{"213":{},"266":{}},"component":{}}],["we’ll",{"_index":2072,"title":{},"name":{},"text":{"40":{},"55":{},"158":{},"217":{},"261":{}},"component":{}}],["we’r",{"_index":1894,"title":{},"name":{},"text":{"25":{}},"component":{}}],["what’",{"_index":165,"title":{},"name":{},"text":{"1":{}},"component":{}}],["whenev",{"_index":4879,"title":{},"name":{},"text":{"138":{}},"component":{}}],["wherea",{"_index":1138,"title":{},"name":{},"text":{"6":{}},"component":{}}],["wherev",{"_index":6376,"title":{},"name":{},"text":{"237":{}},"component":{}}],["whether",{"_index":96,"title":{},"name":{},"text":{"1":{},"4":{},"29":{},"30":{},"34":{},"40":{},"59":{},"72":{},"73":{},"75":{},"78":{},"99":{},"100":{},"104":{},"108":{},"128":{},"135":{},"167":{},"224":{},"227":{}},"component":{}}],["whitelist",{"_index":1932,"title":{},"name":{},"text":{"29":{}},"component":{}}],["whitelistip",{"_index":1947,"title":{},"name":{},"text":{"29":{},"193":{},"251":{}},"component":{}}],["whitespac",{"_index":1447,"title":{},"name":{},"text":{"9":{}},"component":{}}],["whoami",{"_index":3790,"title":{},"name":{},"text":{"73":{}},"component":{}}],["whole",{"_index":1579,"title":{},"name":{},"text":{"15":{},"16":{},"48":{},"191":{}},"component":{}}],["whose",{"_index":1979,"title":{},"name":{},"text":{"30":{},"73":{},"108":{},"155":{},"158":{},"160":{},"208":{},"209":{},"231":{}},"component":{}}],["wide",{"_index":1416,"title":{},"name":{},"text":{"8":{},"66":{},"81":{}},"component":{}}],["widget",{"_index":1457,"title":{"115-2":{}},"name":{},"text":{"9":{},"13":{},"30":{},"49":{},"73":{},"75":{},"76":{},"78":{},"100":{},"115":{},"116":{},"142":{},"188":{},"193":{},"227":{},"247":{},"250":{}},"component":{}}],["widget/v20200922",{"_index":3837,"title":{},"name":{},"text":{"73":{},"115":{}},"component":{}}],["width",{"_index":3126,"title":{},"name":{},"text":{"61":{},"183":{}},"component":{}}],["wikipedia",{"_index":1941,"title":{},"name":{},"text":{"29":{},"164":{}},"component":{}}],["wildcard",{"_index":920,"title":{},"name":{},"text":{"4":{},"6":{},"32":{},"73":{}},"component":{}}],["wildcard/clust",{"_index":919,"title":{},"name":{},"text":{"4":{}},"component":{}}],["wildcardpolici",{"_index":5826,"title":{},"name":{},"text":{"188":{},"248":{}},"component":{}}],["wildecard",{"_index":6839,"title":{},"name":{},"text":{"272":{}},"component":{}}],["win",{"_index":3353,"title":{},"name":{},"text":{"67":{}},"component":{}}],["window",{"_index":735,"title":{"8":{}},"name":{},"text":{"4":{},"8":{},"10":{},"13":{},"15":{},"16":{},"23":{},"28":{},"29":{},"33":{},"34":{},"35":{},"36":{},"40":{},"42":{},"60":{},"63":{},"66":{},"75":{},"105":{},"113":{},"115":{},"117":{},"118":{},"120":{},"122":{},"127":{},"129":{},"139":{},"140":{},"141":{},"144":{},"159":{},"160":{},"168":{},"175":{},"177":{},"205":{},"210":{},"213":{},"214":{},"223":{},"224":{},"225":{},"227":{},"230":{},"237":{},"238":{},"244":{},"262":{}},"component":{}}],["winter",{"_index":1584,"title":{},"name":{},"text":{"15":{},"16":{}},"component":{}}],["wiremock",{"_index":1340,"title":{},"name":{},"text":{"6":{},"49":{},"202":{}},"component":{}}],["wish",{"_index":1476,"title":{},"name":{},"text":{"9":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"40":{},"43":{},"75":{},"76":{},"181":{}},"component":{}}],["with(create_slot=false,slot_name=operational_sub",{"_index":1780,"title":{},"name":{},"text":{"21":{}},"component":{}}],["with/without",{"_index":4137,"title":{},"name":{},"text":{"84":{}},"component":{}}],["withdraw",{"_index":5679,"title":{"177-6":{}},"name":{},"text":{"177":{}},"component":{}}],["within",{"_index":363,"title":{"51-5":{},"124-4":{},"125-6":{},"167-29":{},"177-6":{},"188-2":{},"193-5":{},"201-4":{},"237-12":{},"242-8":{},"249-2":{},"250-1":{},"254-6":{},"255-12":{},"266-7":{}},"name":{},"text":{"2":{},"6":{},"8":{},"9":{},"12":{},"13":{},"23":{},"25":{},"28":{},"30":{},"32":{},"34":{},"45":{},"49":{},"51":{},"55":{},"58":{},"59":{},"60":{},"65":{},"66":{},"67":{},"73":{},"75":{},"76":{},"84":{},"99":{},"108":{},"113":{},"118":{},"124":{},"125":{},"136":{},"138":{},"140":{},"154":{},"155":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"173":{},"177":{},"181":{},"182":{},"186":{},"188":{},"189":{},"193":{},"195":{},"201":{},"208":{},"210":{},"211":{},"212":{},"216":{},"217":{},"218":{},"220":{},"222":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"242":{},"244":{},"245":{},"246":{},"247":{},"249":{},"250":{},"253":{},"254":{},"255":{},"260":{},"261":{},"262":{},"264":{},"265":{},"266":{},"267":{},"270":{},"271":{}},"component":{}}],["without",{"_index":248,"title":{"139":{},"189":{},"66-10":{},"166-5":{}},"name":{"139":{},"256":{}},"text":{"2":{},"4":{},"6":{},"8":{},"9":{},"30":{},"31":{},"32":{},"34":{},"45":{},"52":{},"56":{},"57":{},"66":{},"73":{},"75":{},"81":{},"99":{},"115":{},"117":{},"119":{},"122":{},"129":{},"138":{},"139":{},"161":{},"166":{},"167":{},"181":{},"189":{},"192":{},"196":{},"217":{},"231":{},"242":{},"245":{},"253":{},"254":{},"255":{},"257":{},"258":{},"260":{},"261":{},"262":{},"264":{},"270":{},"271":{},"272":{}},"component":{}}],["won’t",{"_index":3091,"title":{},"name":{},"text":{"60":{},"218":{}},"component":{}}],["word",{"_index":1935,"title":{},"name":{},"text":{"29":{},"33":{},"52":{},"138":{},"140":{},"141":{},"149":{},"167":{},"216":{},"221":{},"222":{},"227":{}},"component":{}}],["work",{"_index":169,"title":{"58":{},"127":{},"130":{},"6-7":{},"23-2":{},"23-5":{},"58-20":{},"58-21":{},"58-23":{},"58-24":{},"60-8":{},"66-6":{},"78-3":{},"127-6":{},"227-2":{},"242-8":{},"260-2":{},"268-7":{},"270-10":{}},"name":{},"text":{"1":{},"4":{},"6":{},"9":{},"14":{},"19":{},"22":{},"23":{},"29":{},"32":{},"37":{},"49":{},"50":{},"58":{},"59":{},"60":{},"61":{},"65":{},"66":{},"73":{},"75":{},"78":{},"81":{},"84":{},"108":{},"111":{},"116":{},"118":{},"125":{},"127":{},"128":{},"129":{},"131":{},"134":{},"138":{},"139":{},"141":{},"142":{},"158":{},"161":{},"164":{},"166":{},"167":{},"168":{},"169":{},"175":{},"176":{},"177":{},"181":{},"194":{},"204":{},"205":{},"210":{},"213":{},"223":{},"224":{},"226":{},"227":{},"230":{},"233":{},"235":{},"238":{},"239":{},"241":{},"242":{},"244":{},"246":{},"254":{},"255":{},"258":{},"259":{},"260":{},"262":{},"263":{},"264":{},"265":{},"267":{},"268":{},"269":{},"270":{},"271":{}},"component":{}}],["work_start_d",{"_index":2985,"title":{},"name":{},"text":{"59":{}},"component":{}}],["worker",{"_index":2461,"title":{},"name":{},"text":{"50":{},"73":{},"80":{},"125":{},"198":{}},"component":{}}],["workflow",{"_index":1015,"title":{"6-6":{}},"name":{},"text":{"6":{},"52":{},"125":{}},"component":{}}],["workload",{"_index":686,"title":{},"name":{},"text":{"4":{},"28":{},"30":{},"63":{},"104":{},"118":{},"125":{}},"component":{}}],["workspace/document",{"_index":6147,"title":{},"name":{},"text":{"209":{}},"component":{}}],["workstat",{"_index":3812,"title":{},"name":{},"text":{"73":{}},"component":{}}],["world",{"_index":2693,"title":{},"name":{},"text":{"56":{},"67":{},"164":{}},"component":{}}],["worth",{"_index":4407,"title":{},"name":{},"text":{"108":{}},"component":{}}],["wrap",{"_index":5553,"title":{},"name":{},"text":{"167":{},"183":{}},"component":{}}],["wrench",{"_index":4895,"title":{},"name":{},"text":{"139":{},"141":{},"154":{},"160":{},"214":{}},"component":{}}],["write",{"_index":1697,"title":{"161-6":{},"266-6":{}},"name":{},"text":{"21":{},"23":{},"49":{},"58":{},"59":{},"62":{},"84":{},"103":{},"105":{},"111":{},"119":{},"159":{},"161":{},"188":{},"196":{},"207":{},"208":{},"209":{},"216":{},"247":{},"257":{},"258":{},"266":{},"268":{}},"component":{}}],["write_capac",{"_index":3504,"title":{},"name":{},"text":{"73":{}},"component":{}}],["write_rls_katottg",{"_index":4156,"title":{},"name":{},"text":{"84":{}},"component":{}}],["writeresultform",{"_index":5475,"title":{},"name":{},"text":{"162":{}},"component":{}}],["written",{"_index":1177,"title":{},"name":{},"text":{"6":{},"49":{},"73":{},"99":{},"103":{},"154":{},"155":{},"159":{},"161":{},"168":{},"181":{},"216":{}},"component":{}}],["wrong",{"_index":4641,"title":{},"name":{},"text":{"131":{},"205":{},"266":{}},"component":{}}],["ws",{"_index":1359,"title":{},"name":{},"text":{"6":{}},"component":{}}],["www.example.com",{"_index":3891,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{}},"component":{}}],["www.example.net",{"_index":3890,"title":{},"name":{},"text":{"75":{},"76":{},"188":{},"247":{}},"component":{}}],["x",{"_index":563,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"12":{},"52":{},"60":{},"67":{},"73":{},"103":{},"127":{},"140":{},"141":{},"159":{},"161":{},"195":{},"196":{},"205":{},"206":{},"221":{},"222":{},"227":{},"255":{},"269":{},"271":{}},"component":{}}],["x64",{"_index":617,"title":{},"name":{},"text":{"4":{}},"component":{}}],["x86",{"_index":611,"title":{},"name":{},"text":{"4":{}},"component":{}}],["x86_64.zip",{"_index":3666,"title":{},"name":{},"text":{"73":{}},"component":{}}],["x_digit",{"_index":2634,"title":{},"name":{},"text":{"52":{}},"component":{}}],["xade",{"_index":6669,"title":{},"name":{},"text":{"269":{}},"component":{}}],["xarg",{"_index":915,"title":{},"name":{},"text":{"4":{}},"component":{}}],["xm",{"_index":2061,"title":{},"name":{},"text":{"34":{}},"component":{}}],["xml",{"_index":2564,"title":{"244":{},"265":{},"107-7":{},"155-4":{}},"name":{"244":{}},"text":{"52":{},"57":{},"84":{},"107":{},"111":{},"123":{},"132":{},"138":{},"142":{},"155":{},"162":{},"165":{},"166":{},"167":{},"168":{},"171":{},"234":{},"236":{},"238":{},"241":{},"243":{},"244":{},"257":{},"263":{},"264":{},"265":{},"269":{}},"component":{}}],["xml/xsd",{"_index":2183,"title":{},"name":{},"text":{"47":{}},"component":{}}],["xms1536m",{"_index":2059,"title":{},"name":{},"text":{"34":{}},"component":{}}],["xmx",{"_index":2062,"title":{},"name":{},"text":{"34":{}},"component":{}}],["xmx1536m",{"_index":2060,"title":{},"name":{},"text":{"34":{}},"component":{}}],["xor",{"_index":2554,"title":{"52-7":{},"140-11":{}},"name":{},"text":{"52":{},"100":{},"140":{},"141":{},"159":{}},"component":{}}],["xpath",{"_index":3274,"title":{},"name":{},"text":{"67":{}},"component":{}}],["xref:registri",{"_index":4633,"title":{},"name":{},"text":{"129":{}},"component":{}}],["xsd",{"_index":2184,"title":{},"name":{},"text":{"47":{},"84":{},"86":{},"167":{},"244":{},"265":{}},"component":{}}],["xslt",{"_index":3275,"title":{},"name":{},"text":{"67":{}},"component":{}}],["xss",{"_index":3283,"title":{},"name":{},"text":{"67":{}},"component":{}}],["xxe",{"_index":3276,"title":{},"name":{},"text":{"67":{}},"component":{}}],["xxx",{"_index":1805,"title":{},"name":{},"text":{"22":{}},"component":{}}],["y",{"_index":3637,"title":{},"name":{},"text":{"73":{}},"component":{}}],["yaml",{"_index":832,"title":{},"name":{},"text":{"4":{},"22":{},"23":{},"55":{},"63":{},"122":{},"132":{},"202":{}},"component":{}}],["yandex.ru",{"_index":5676,"title":{},"name":{},"text":{"173":{}},"component":{}}],["yaroslav",{"_index":4709,"title":{},"name":{},"text":{"135":{}},"component":{}}],["ye",{"_index":4110,"title":{},"name":{},"text":{"84":{},"100":{},"120":{},"140":{},"144":{},"159":{},"205":{}},"component":{}}],["year",{"_index":3157,"title":{},"name":{},"text":{"62":{},"135":{},"165":{},"167":{}},"component":{}}],["yellow",{"_index":6619,"title":{},"name":{},"text":{"262":{}},"component":{}}],["yelp",{"_index":1318,"title":{},"name":{},"text":{"6":{}},"component":{}}],["yml",{"_index":2660,"title":{},"name":{},"text":{"55":{},"192":{}},"component":{}}],["your_registry_nam",{"_index":4587,"title":{},"name":{},"text":{"126":{}},"component":{}}],["yourself",{"_index":883,"title":{},"name":{},"text":{"4":{},"8":{},"68":{},"73":{},"119":{},"140":{}},"component":{}}],["you’ll",{"_index":3085,"title":{},"name":{},"text":{"60":{},"73":{},"161":{},"218":{}},"component":{}}],["you’r",{"_index":1103,"title":{},"name":{},"text":{"6":{}},"component":{}}],["yum",{"_index":3778,"title":{},"name":{},"text":{"73":{}},"component":{}}],["yyyi",{"_index":4054,"title":{},"name":{},"text":{"83":{},"141":{},"165":{},"167":{}},"component":{}}],["yyyymmdd",{"_index":5495,"title":{},"name":{},"text":{"165":{}},"component":{}}],["z",{"_index":1920,"title":{},"name":{},"text":{"28":{},"30":{},"33":{},"118":{},"173":{},"175":{},"234":{},"237":{},"246":{}},"component":{}}],["z0",{"_index":3706,"title":{},"name":{},"text":{"73":{}},"component":{}}],["zap",{"_index":1372,"title":{},"name":{},"text":{"6":{},"67":{}},"component":{}}],["zayava",{"_index":5181,"title":{},"name":{},"text":{"154":{}},"component":{}}],["zayavasearch",{"_index":5184,"title":{},"name":{},"text":{"154":{}},"component":{}}],["zayavasign",{"_index":5183,"title":{},"name":{},"text":{"154":{}},"component":{}}],["zayavaview",{"_index":5204,"title":{},"name":{},"text":{"154":{}},"component":{}}],["zen",{"_index":1070,"title":{},"name":{},"text":{"6":{}},"component":{}}],["zero",{"_index":2211,"title":{},"name":{},"text":{"48":{},"108":{},"119":{},"197":{},"213":{}},"component":{}}],["zip",{"_index":3815,"title":{},"name":{},"text":{"73":{},"86":{},"142":{},"204":{}},"component":{}}],["zone",{"_index":1609,"title":{"153":{},"199":{},"32-3":{},"32-13":{},"32-16":{},"32-20":{},"153-2":{},"153-3":{}},"name":{},"text":{"15":{},"16":{},"25":{},"29":{},"32":{},"35":{},"40":{},"44":{},"48":{},"73":{},"83":{},"84":{},"153":{},"193":{},"198":{},"199":{},"200":{},"202":{},"209":{},"213":{},"251":{},"252":{},"253":{}},"component":{}}],["zone|subsystem|compon",{"_index":6007,"title":{},"name":{},"text":{"198":{}},"component":{}}],["zone’",{"_index":1875,"title":{},"name":{},"text":{"25":{}},"component":{}}],["zookeep",{"_index":868,"title":{},"name":{},"text":{"4":{}},"component":{}}],["zoom",{"_index":6292,"title":{},"name":{},"text":{"230":{}},"component":{}}],["zvit",{"_index":5260,"title":{},"name":{},"text":{"159":{}},"component":{}}],["zvit.json",{"_index":5331,"title":{},"name":{},"text":{"159":{}},"component":{}}],["а",{"_index":307,"title":{},"name":{},"text":{"2":{},"83":{},"175":{},"234":{}},"component":{}}],["аб",{"_index":1363,"title":{},"name":{},"text":{"6":{},"51":{}},"component":{}}],["автентифікаці",{"_index":5170,"title":{},"name":{},"text":{"152":{}},"component":{}}],["адміністративн",{"_index":6419,"title":{},"name":{},"text":{"244":{}},"component":{}}],["адміністратор",{"_index":5159,"title":{},"name":{},"text":{"149":{},"205":{},"242":{}},"component":{}}],["адрес",{"_index":3141,"title":{},"name":{},"text":{"61":{}},"component":{}}],["атрибутів",{"_index":2194,"title":{},"name":{},"text":{"47":{}},"component":{}}],["батькові",{"_index":3137,"title":{},"name":{},"text":{"61":{}},"component":{}}],["бд",{"_index":945,"title":{"5-1":{}},"name":{},"text":{"5":{},"58":{}},"component":{}}],["борг",{"_index":1195,"title":{},"name":{},"text":{"6":{}},"component":{}}],["бп",{"_index":6797,"title":{},"name":{},"text":{"271":{}},"component":{}}],["буд",{"_index":6808,"title":{},"name":{},"text":{"271":{}},"component":{}}],["бут",{"_index":2520,"title":{},"name":{},"text":{"51":{}},"component":{}}],["бізнес",{"_index":2499,"title":{},"name":{},"text":{"51":{},"58":{},"123":{},"161":{},"212":{},"236":{}},"component":{}}],["більше",{"_index":4455,"title":{},"name":{},"text":{"113":{}},"component":{}}],["вweb",{"_index":2337,"title":{},"name":{},"text":{"49":{}},"component":{}}],["валідаційної",{"_index":4937,"title":{},"name":{},"text":{"140":{}},"component":{}}],["введіт",{"_index":4935,"title":{},"name":{},"text":{"140":{},"162":{}},"component":{}}],["ввод",{"_index":5476,"title":{},"name":{},"text":{"162":{}},"component":{}}],["версі",{"_index":6385,"title":{},"name":{},"text":{"242":{}},"component":{}}],["версіє",{"_index":6394,"title":{},"name":{},"text":{"242":{}},"component":{}}],["версії",{"_index":1004,"title":{},"name":{},"text":{"5":{}},"component":{}}],["ви",{"_index":4574,"title":{},"name":{},"text":{"125":{}},"component":{}}],["вибор",{"_index":2848,"title":{},"name":{},"text":{"58":{}},"component":{}}],["вигляді",{"_index":2869,"title":{},"name":{},"text":{"58":{}},"component":{}}],["видалит",{"_index":946,"title":{"5-2":{}},"name":{},"text":{"5":{}},"component":{}}],["видаліт",{"_index":1001,"title":{},"name":{},"text":{"5":{}},"component":{}}],["викликає",{"_index":984,"title":{},"name":{},"text":{"5":{}},"component":{}}],["викона",{"_index":5373,"title":{},"name":{},"text":{"161":{}},"component":{}}],["виконан",{"_index":6099,"title":{},"name":{},"text":{"205":{}},"component":{}}],["виконанні",{"_index":6097,"title":{},"name":{},"text":{"205":{}},"component":{}}],["виконат",{"_index":973,"title":{},"name":{},"text":{"5":{}},"component":{}}],["використан",{"_index":2521,"title":{},"name":{},"text":{"51":{}},"component":{}}],["вимірюван",{"_index":1191,"title":{},"name":{},"text":{"6":{}},"component":{}}],["виникнут",{"_index":6424,"title":{},"name":{},"text":{"244":{}},"component":{}}],["випадк",{"_index":2518,"title":{},"name":{},"text":{"51":{},"244":{}},"component":{}}],["вкажіт",{"_index":2498,"title":{},"name":{},"text":{"51":{},"140":{}},"component":{}}],["вказа",{"_index":968,"title":{},"name":{},"text":{"5":{}},"component":{}}],["вкладк",{"_index":2503,"title":{},"name":{},"text":{"51":{},"244":{}},"component":{}}],["встановіт",{"_index":4912,"title":{},"name":{},"text":{"140":{}},"component":{}}],["всі",{"_index":6790,"title":{},"name":{},"text":{"271":{}},"component":{}}],["вході",{"_index":6388,"title":{},"name":{},"text":{"242":{}},"component":{}}],["відкрийт",{"_index":977,"title":{},"name":{},"text":{"5":{},"182":{}},"component":{}}],["відкритті",{"_index":6416,"title":{},"name":{},"text":{"244":{}},"component":{}}],["відмінен",{"_index":6108,"title":{},"name":{},"text":{"205":{}},"component":{}}],["відображен",{"_index":2873,"title":{},"name":{},"text":{"58":{}},"component":{}}],["відповідают",{"_index":958,"title":{},"name":{},"text":{"5":{}},"component":{}}],["відповідає",{"_index":4513,"title":{},"name":{},"text":{"119":{}},"component":{}}],["відредаг",{"_index":6366,"title":{},"name":{},"text":{"236":{}},"component":{}}],["відсутності",{"_index":6422,"title":{},"name":{},"text":{"244":{}},"component":{}}],["відсутні",{"_index":4450,"title":{},"name":{},"text":{"113":{}},"component":{}}],["генеруєт",{"_index":6799,"title":{},"name":{},"text":{"271":{}},"component":{}}],["груп",{"_index":4577,"title":{},"name":{},"text":{"125":{},"237":{}},"component":{}}],["гілка",{"_index":6386,"title":{},"name":{},"text":{"242":{}},"component":{}}],["дан",{"_index":5477,"title":{"228-2":{}},"name":{},"text":{"162":{},"228":{}},"component":{}}],["даних').accesstoken",{"_index":2859,"title":{},"name":{},"text":{"58":{}},"component":{}}],["дані",{"_index":2868,"title":{},"name":{},"text":{"58":{}},"component":{}}],["дат",{"_index":941,"title":{"5-1":{}},"name":{},"text":{"5":{},"61":{},"271":{}},"component":{}}],["дашборді",{"_index":4580,"title":{},"name":{},"text":{"125":{}},"component":{}}],["де",{"_index":4867,"title":{},"name":{},"text":{"138":{},"140":{}},"component":{}}],["держ",{"_index":4677,"title":{},"name":{},"text":{"134":{}},"component":{}}],["детал",{"_index":4456,"title":{},"name":{},"text":{"113":{}},"component":{}}],["детальніш",{"_index":5169,"title":{},"name":{},"text":{"152":{}},"component":{}}],["довільні",{"_index":4388,"title":{},"name":{},"text":{"107":{}},"component":{}}],["дода",{"_index":6181,"title":{},"name":{},"text":{"212":{}},"component":{}}],["додаван",{"_index":956,"title":{},"name":{},"text":{"5":{}},"component":{}}],["додаток",{"_index":4913,"title":{},"name":{},"text":{"140":{}},"component":{}}],["дозволяє",{"_index":2866,"title":{},"name":{},"text":{"58":{}},"component":{}}],["документ",{"_index":6277,"title":{},"name":{},"text":{"228":{}},"component":{}}],["домашн",{"_index":6392,"title":{},"name":{},"text":{"242":{}},"component":{}}],["допомог",{"_index":967,"title":{},"name":{},"text":{"5":{}},"component":{}}],["доступ",{"_index":2531,"title":{},"name":{},"text":{"51":{}},"component":{}}],["друг",{"_index":6379,"title":{},"name":{},"text":{"237":{}},"component":{}}],["дії",{"_index":975,"title":{},"name":{},"text":{"5":{}},"component":{}}],["етап",{"_index":2529,"title":{},"name":{},"text":{"51":{}},"component":{}}],["з",{"_index":2191,"title":{},"name":{},"text":{"47":{},"58":{},"113":{},"244":{},"271":{}},"component":{}}],["заверш",{"_index":6106,"title":{},"name":{},"text":{"205":{}},"component":{}}],["завжд",{"_index":6390,"title":{},"name":{},"text":{"242":{}},"component":{}}],["заголовк",{"_index":6794,"title":{},"name":{},"text":{"271":{}},"component":{}}],["загроз",{"_index":6440,"title":{"253-14":{}},"name":{},"text":{"253":{}},"component":{}}],["задачі",{"_index":2847,"title":{},"name":{},"text":{"58":{},"205":{}},"component":{}}],["закомент",{"_index":993,"title":{},"name":{},"text":{"5":{}},"component":{}}],["закоментованої",{"_index":997,"title":{},"name":{},"text":{"5":{}},"component":{}}],["замовчуван",{"_index":6387,"title":{},"name":{},"text":{"242":{}},"component":{}}],["зап",{"_index":4491,"title":{},"name":{},"text":{"118":{}},"component":{}}],["запит",{"_index":4489,"title":{},"name":{},"text":{"118":{}},"component":{}}],["застосовуєт",{"_index":1196,"title":{},"name":{},"text":{"6":{}},"component":{}}],["захист",{"_index":4196,"title":{},"name":{},"text":{"99":{}},"component":{}}],["збереж",{"_index":6809,"title":{},"name":{},"text":{"271":{}},"component":{}}],["змоделюват",{"_index":5370,"title":{},"name":{},"text":{"161":{}},"component":{}}],["змін",{"_index":6395,"title":{},"name":{},"text":{"242":{}},"component":{}}],["змінної",{"_index":6807,"title":{},"name":{},"text":{"271":{}},"component":{}}],["зміст",{"_index":6276,"title":{},"name":{},"text":{"228":{}},"component":{}}],["знайдіт",{"_index":982,"title":{},"name":{},"text":{"5":{}},"component":{}}],["значен",{"_index":4983,"title":{},"name":{},"text":{"140":{},"205":{}},"component":{}}],["з’яв",{"_index":4490,"title":{},"name":{},"text":{"118":{}},"component":{}}],["кабінет",{"_index":6389,"title":{},"name":{},"text":{"242":{}},"component":{}}],["кейклоак",{"_index":2190,"title":{},"name":{},"text":{"47":{}},"component":{}}],["керуван",{"_index":1192,"title":{},"name":{},"text":{"6":{},"58":{},"244":{}},"component":{}}],["клієнти",{"_index":2200,"title":{},"name":{},"text":{"47":{}},"component":{}}],["клієнтів",{"_index":2196,"title":{},"name":{},"text":{"47":{}},"component":{}}],["комплексн",{"_index":4195,"title":{},"name":{},"text":{"99":{}},"component":{}}],["компонент",{"_index":4918,"title":{"228":{},"228-3":{}},"name":{},"text":{"140":{},"228":{}},"component":{}}],["конектор",{"_index":4556,"title":{},"name":{},"text":{"123":{}},"component":{}}],["конструктор",{"_index":2504,"title":{},"name":{},"text":{"51":{}},"component":{}}],["контрол",{"_index":2530,"title":{},"name":{},"text":{"51":{}},"component":{}}],["конфігураці",{"_index":978,"title":{},"name":{},"text":{"5":{}},"component":{}}],["координат').formdata",{"_index":2849,"title":{},"name":{},"text":{"58":{}},"component":{}}],["користувацьк",{"_index":6798,"title":{},"name":{},"text":{"271":{}},"component":{}}],["користувацької",{"_index":2846,"title":{},"name":{},"text":{"58":{}},"component":{}}],["користувачів",{"_index":2195,"title":{},"name":{},"text":{"47":{},"152":{}},"component":{}}],["критері",{"_index":2792,"title":{},"name":{},"text":{"58":{}},"component":{}}],["кроків",{"_index":6370,"title":{},"name":{},"text":{"236":{}},"component":{}}],["ксзі",{"_index":4193,"title":{},"name":{},"text":{"99":{}},"component":{}}],["кілька",{"_index":6368,"title":{},"name":{},"text":{"236":{}},"component":{}}],["кількості",{"_index":4514,"title":{},"name":{},"text":{"119":{}},"component":{}}],["майстер",{"_index":6384,"title":{},"name":{},"text":{"242":{}},"component":{}}],["маппер",{"_index":2193,"title":{},"name":{},"text":{"47":{}},"component":{}}],["мапі",{"_index":2874,"title":{},"name":{},"text":{"58":{}},"component":{}}],["мен",{"_index":5729,"title":{},"name":{},"text":{"182":{}},"component":{}}],["метадані",{"_index":6791,"title":{},"name":{},"text":{"271":{}},"component":{}}],["методологі",{"_index":1197,"title":{},"name":{},"text":{"6":{}},"component":{}}],["метрик",{"_index":4578,"title":{},"name":{},"text":{"125":{}},"component":{}}],["модел",{"_index":6439,"title":{"253-14":{}},"name":{},"text":{"253":{}},"component":{}}],["моделюван",{"_index":4559,"title":{},"name":{},"text":{"123":{},"140":{}},"component":{}}],["моделі",{"_index":6804,"title":{},"name":{},"text":{"271":{}},"component":{}}],["мож",{"_index":2519,"title":{},"name":{},"text":{"51":{},"244":{}},"component":{}}],["может",{"_index":4575,"title":{},"name":{},"text":{"125":{}},"component":{}}],["можлив",{"_index":966,"title":{},"name":{},"text":{"5":{}},"component":{}}],["надан",{"_index":6104,"title":{},"name":{},"text":{"205":{}},"component":{}}],["назв",{"_index":2501,"title":{},"name":{},"text":{"51":{},"162":{},"271":{}},"component":{}}],["найперш",{"_index":5368,"title":{},"name":{},"text":{"161":{}},"component":{}}],["налаштуван",{"_index":4557,"title":{"228-3":{}},"name":{},"text":{"123":{},"161":{},"228":{}},"component":{}}],["наповнен",{"_index":6279,"title":{},"name":{},"text":{"228":{}},"component":{}}],["наприклад",{"_index":5478,"title":{},"name":{},"text":{"162":{}},"component":{}}],["народжен",{"_index":3139,"title":{},"name":{},"text":{"61":{}},"component":{}}],["насамкінец",{"_index":1000,"title":{},"name":{},"text":{"5":{}},"component":{}}],["наступн",{"_index":995,"title":{},"name":{},"text":{"5":{}},"component":{}}],["наступні",{"_index":974,"title":{},"name":{},"text":{"5":{}},"component":{}}],["натисніт",{"_index":999,"title":{},"name":{},"text":{"5":{},"118":{}},"component":{}}],["наявн",{"_index":6367,"title":{},"name":{},"text":{"236":{}},"component":{}}],["нд",{"_index":2125,"title":{},"name":{},"text":{"45":{}},"component":{}}],["необхідн",{"_index":5369,"title":{},"name":{},"text":{"161":{}},"component":{}}],["нов",{"_index":2496,"title":{},"name":{},"text":{"51":{},"58":{},"118":{}},"component":{}}],["нової",{"_index":1003,"title":{},"name":{},"text":{"5":{}},"component":{}}],["нп",{"_index":4357,"title":{},"name":{},"text":{"107":{}},"component":{}}],["нп'::text",{"_index":4846,"title":{},"name":{},"text":{"138":{}},"component":{}}],["ньог",{"_index":4916,"title":{},"name":{},"text":{"140":{}},"component":{}}],["о'::text",{"_index":4830,"title":{},"name":{},"text":{"138":{}},"component":{}}],["оoper",{"_index":2353,"title":{},"name":{},"text":{"49":{}},"component":{}}],["обʼєкт",{"_index":6803,"title":{},"name":{},"text":{"271":{}},"component":{}}],["обов'язков",{"_index":4729,"title":{},"name":{},"text":{"135":{}},"component":{}}],["обрв",{"_index":4384,"title":{},"name":{},"text":{"107":{}},"component":{}}],["обробк",{"_index":2872,"title":{},"name":{},"text":{"58":{},"244":{},"271":{}},"component":{}}],["обсяг",{"_index":1193,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ознайомит",{"_index":4576,"title":{},"name":{},"text":{"125":{}},"component":{}}],["ознайомт",{"_index":4917,"title":{},"name":{},"text":{"140":{}},"component":{}}],["оновлен",{"_index":957,"title":{},"name":{},"text":{"5":{},"118":{}},"component":{}}],["опис",{"_index":4457,"title":{},"name":{},"text":{"113":{},"244":{}},"component":{}}],["основні",{"_index":6273,"title":{"228-1":{}},"name":{},"text":{"228":{}},"component":{}}],["особ",{"_index":2523,"title":{},"name":{},"text":{"51":{}},"component":{}}],["останньої",{"_index":2857,"title":{},"name":{},"text":{"58":{}},"component":{}}],["отримат",{"_index":940,"title":{"5-1":{}},"name":{},"text":{},"component":{}}],["отримуват",{"_index":2867,"title":{},"name":{},"text":{"58":{}},"component":{}}],["очікує",{"_index":6098,"title":{},"name":{},"text":{"205":{}},"component":{}}],["параметр",{"_index":965,"title":{},"name":{},"text":{"5":{}},"component":{}}],["переглянут",{"_index":4493,"title":{},"name":{},"text":{"118":{}},"component":{}}],["переда",{"_index":4451,"title":{},"name":{},"text":{"113":{}},"component":{}}],["передают",{"_index":6793,"title":{},"name":{},"text":{"271":{}},"component":{}}],["перейдіт",{"_index":2502,"title":{},"name":{},"text":{"51":{}},"component":{}}],["персистеної",{"_index":6806,"title":{},"name":{},"text":{"271":{}},"component":{}}],["перш",{"_index":6378,"title":{},"name":{},"text":{"237":{}},"component":{}}],["платформ",{"_index":6479,"title":{},"name":{},"text":{"254":{}},"component":{}}],["повернут",{"_index":963,"title":{},"name":{},"text":{"5":{}},"component":{}}],["повн",{"_index":979,"title":{},"name":{},"text":{"5":{}},"component":{}}],["повторіт",{"_index":1005,"title":{},"name":{},"text":{"5":{}},"component":{}}],["повідомлен",{"_index":6792,"title":{},"name":{},"text":{"271":{}},"component":{}}],["подальш",{"_index":2528,"title":{},"name":{},"text":{"51":{}},"component":{}}],["подальшої",{"_index":2871,"title":{},"name":{},"text":{"58":{}},"component":{}}],["поді",{"_index":6183,"title":{"260":{}},"name":{},"text":{"212":{}},"component":{}}],["пол",{"_index":960,"title":{},"name":{},"text":{"5":{},"60":{}},"component":{}}],["положен",{"_index":6274,"title":{"228-1":{}},"name":{},"text":{"228":{}},"component":{}}],["полі",{"_index":4934,"title":{},"name":{},"text":{"140":{},"162":{}},"component":{}}],["помилк",{"_index":4938,"title":{"260":{}},"name":{},"text":{"140":{},"244":{}},"component":{}}],["порталі",{"_index":6420,"title":{},"name":{},"text":{"244":{}},"component":{}}],["посилан",{"_index":4920,"title":{},"name":{},"text":{"140":{},"152":{}},"component":{}}],["послуг",{"_index":6105,"title":{},"name":{},"text":{"205":{}},"component":{}}],["потрапляют",{"_index":4507,"title":{},"name":{},"text":{"119":{}},"component":{}}],["потрапляє",{"_index":6391,"title":{},"name":{},"text":{"242":{}},"component":{}}],["потрібн",{"_index":972,"title":{},"name":{},"text":{"5":{}},"component":{}}],["похідні",{"_index":1364,"title":{},"name":{},"text":{"6":{}},"component":{}}],["пошук",{"_index":2793,"title":{},"name":{},"text":{"58":{}},"component":{}}],["представлен",{"_index":4579,"title":{},"name":{},"text":{"125":{}},"component":{}}],["призупин",{"_index":6100,"title":{},"name":{},"text":{"205":{}},"component":{}}],["прийматим",{"_index":6179,"title":{},"name":{},"text":{"212":{}},"component":{}}],["приклад",{"_index":987,"title":{},"name":{},"text":{"5":{},"140":{},"228":{}},"component":{}}],["пробл",{"_index":6426,"title":{},"name":{},"text":{"244":{}},"component":{}}],["проблем",{"_index":4458,"title":{},"name":{},"text":{"113":{}},"component":{}}],["проміжн",{"_index":6182,"title":{},"name":{},"text":{"212":{}},"component":{}}],["прост",{"_index":6369,"title":{},"name":{},"text":{"236":{}},"component":{}}],["процедур",{"_index":1006,"title":{},"name":{},"text":{"5":{}},"component":{}}],["процес",{"_index":2497,"title":{},"name":{},"text":{"51":{},"58":{},"161":{},"212":{},"236":{}},"component":{}}],["процесі",{"_index":4560,"title":{},"name":{},"text":{"123":{},"228":{}},"component":{}}],["прізвищ",{"_index":3133,"title":{},"name":{},"text":{"61":{}},"component":{}}],["пул",{"_index":5371,"title":{},"name":{},"text":{"161":{}},"component":{}}],["підпис",{"_index":2858,"title":{},"name":{},"text":{"58":{},"271":{}},"component":{}}],["підпроцесі",{"_index":6594,"title":{"260":{}},"name":{},"text":{},"component":{}}],["підставі",{"_index":6800,"title":{},"name":{},"text":{"271":{}},"component":{}}],["підтримк",{"_index":4453,"title":{},"name":{},"text":{"113":{}},"component":{}}],["після",{"_index":1002,"title":{},"name":{},"text":{"5":{}},"component":{}}],["р",{"_index":4352,"title":{},"name":{},"text":{"107":{}},"component":{}}],["р'::text",{"_index":4844,"title":{},"name":{},"text":{"138":{}},"component":{}}],["рa",{"_index":2357,"title":{},"name":{},"text":{"49":{}},"component":{}}],["рextend",{"_index":4123,"title":{},"name":{},"text":{"84":{}},"component":{}}],["раз",{"_index":6795,"title":{},"name":{},"text":{"271":{}},"component":{}}],["разі",{"_index":6421,"title":{},"name":{},"text":{"244":{}},"component":{}}],["рамк",{"_index":6178,"title":{},"name":{},"text":{"212":{}},"component":{}}],["реалізаці",{"_index":2192,"title":{},"name":{},"text":{"47":{}},"component":{}}],["регламент",{"_index":4558,"title":{},"name":{},"text":{"123":{},"149":{},"242":{},"244":{}},"component":{}}],["результат",{"_index":6810,"title":{},"name":{},"text":{"271":{}},"component":{}}],["репозиторії",{"_index":6423,"title":{},"name":{},"text":{"244":{}},"component":{}}],["ресурсів",{"_index":2532,"title":{},"name":{},"text":{"51":{}},"component":{}}],["реєстр",{"_index":949,"title":{"5-2":{}},"name":{},"text":{"5":{},"149":{},"152":{},"182":{}},"component":{}}],["розділ",{"_index":6278,"title":{},"name":{},"text":{"228":{}},"component":{}}],["розділі",{"_index":4488,"title":{},"name":{},"text":{"118":{}},"component":{}}],["розширен",{"_index":2189,"title":{},"name":{},"text":{"47":{},"140":{}},"component":{}}],["рядок",{"_index":983,"title":{},"name":{},"text":{"5":{}},"component":{}}],["сr",{"_index":6458,"title":{},"name":{},"text":{"253":{}},"component":{}}],["сві",{"_index":4726,"title":{},"name":{},"text":{"135":{}},"component":{}}],["сервер",{"_index":6012,"title":{},"name":{},"text":{"198":{}},"component":{}}],["сервіс",{"_index":2865,"title":{},"name":{},"text":{"58":{}},"component":{}}],["сервісні",{"_index":2199,"title":{},"name":{},"text":{"47":{}},"component":{}}],["систем",{"_index":2525,"title":{},"name":{},"text":{"51":{},"99":{}},"component":{}}],["системні",{"_index":959,"title":{},"name":{},"text":{"5":{}},"component":{}}],["служб",{"_index":4452,"title":{},"name":{},"text":{"113":{}},"component":{}}],["службов",{"_index":2500,"title":{},"name":{},"text":{"51":{},"162":{}},"component":{}}],["спе",{"_index":4721,"title":{},"name":{},"text":{"135":{}},"component":{}}],["спрощ",{"_index":6438,"title":{"253-14":{}},"name":{},"text":{"253":{}},"component":{}}],["стартува",{"_index":2527,"title":{},"name":{},"text":{"51":{}},"component":{}}],["стат",{"_index":3145,"title":{},"name":{},"text":{"61":{}},"component":{}}],["створен",{"_index":943,"title":{"5-1":{}},"name":{},"text":{"58":{}},"component":{}}],["створіт",{"_index":2495,"title":{},"name":{},"text":{"51":{}},"component":{}}],["сторінк",{"_index":6393,"title":{},"name":{},"text":{"242":{}},"component":{}}],["структур",{"_index":6418,"title":{},"name":{},"text":{"244":{}},"component":{}}],["сутності",{"_index":944,"title":{"5-1":{}},"name":{},"text":{"5":{}},"component":{}}],["сі",{"_index":806,"title":{},"name":{},"text":{"4":{}},"component":{}}],["таблиц",{"_index":2791,"title":{},"name":{},"text":{"58":{},"244":{}},"component":{}}],["такі",{"_index":5374,"title":{},"name":{},"text":{"161":{}},"component":{}}],["тег",{"_index":2790,"title":{},"name":{},"text":{"58":{}},"component":{}}],["телефон",{"_index":3143,"title":{},"name":{},"text":{"61":{}},"component":{}}],["тестуван",{"_index":1352,"title":{},"name":{},"text":{"6":{}},"component":{}}],["технічн",{"_index":1194,"title":{},"name":{},"text":{"6":{}},"component":{}}],["тзі",{"_index":2126,"title":{},"name":{},"text":{"45":{}},"component":{}}],["типов",{"_index":6796,"title":{},"name":{},"text":{"271":{}},"component":{}}],["типові",{"_index":4915,"title":{},"name":{},"text":{"140":{}},"component":{}}],["транзакційн",{"_index":6593,"title":{"260":{}},"name":{},"text":{},"component":{}}],["трет",{"_index":6380,"title":{},"name":{},"text":{"237":{}},"component":{}}],["увійдіт",{"_index":976,"title":{},"name":{},"text":{"5":{}},"component":{}}],["файл",{"_index":6417,"title":{},"name":{},"text":{"244":{},"271":{}},"component":{}}],["форм",{"_index":4919,"title":{},"name":{},"text":{"140":{},"162":{}},"component":{}}],["формат",{"_index":6275,"title":{"228-2":{}},"name":{},"text":{"228":{}},"component":{}}],["формуван",{"_index":4936,"title":{},"name":{},"text":{"140":{},"228":{}},"component":{}}],["функці",{"_index":985,"title":{},"name":{},"text":{"5":{}},"component":{}}],["функції",{"_index":998,"title":{},"name":{},"text":{"5":{}},"component":{}}],["фіксаці",{"_index":955,"title":{},"name":{},"text":{"5":{}},"component":{}}],["фінальн",{"_index":6801,"title":{},"name":{},"text":{"271":{}},"component":{}}],["це",{"_index":994,"title":{},"name":{},"text":{"5":{},"242":{}},"component":{}}],["цьог",{"_index":5372,"title":{},"name":{},"text":{"161":{}},"component":{}}],["цьом",{"_index":2517,"title":{},"name":{},"text":{"51":{}},"component":{}}],["ці",{"_index":964,"title":{},"name":{},"text":{"5":{}},"component":{}}],["час",{"_index":942,"title":{"5-1":{}},"name":{},"text":{"5":{}},"component":{}}],["чи",{"_index":2524,"title":{},"name":{},"text":{"51":{}},"component":{}}],["чин",{"_index":996,"title":{},"name":{},"text":{"5":{}},"component":{}}],["шлях",{"_index":980,"title":{},"name":{},"text":{"5":{}},"component":{}}],["що",{"_index":2526,"title":{},"name":{},"text":{"51":{},"119":{},"212":{}},"component":{}}],["щоб",{"_index":971,"title":{},"name":{},"text":{"5":{}},"component":{}}],["як",{"_index":939,"title":{"5-1":{},"5-2":{}},"name":{},"text":{"5":{},"58":{},"271":{}},"component":{}}],["якомог",{"_index":4454,"title":{},"name":{},"text":{"113":{}},"component":{}}],["якщ",{"_index":4449,"title":{},"name":{},"text":{"113":{}},"component":{}}],["і",{"_index":4914,"title":{},"name":{},"text":{"140":{}},"component":{}}],["ідентифікації",{"_index":2522,"title":{},"name":{},"text":{"51":{}},"component":{}}],["із",{"_index":948,"title":{"5-2":{}},"name":{},"text":{"5":{},"125":{},"140":{},"242":{},"244":{}},"component":{}}],["іконк",{"_index":4492,"title":{},"name":{},"text":{"118":{}},"component":{}}],["ім'я",{"_index":3135,"title":{},"name":{},"text":{"61":{}},"component":{}}],["імʼя",{"_index":6491,"title":{},"name":{},"text":{"255":{}},"component":{}}],["інсталлятор",{"_index":6478,"title":{},"name":{},"text":{"254":{}},"component":{}}],["інструкції",{"_index":5158,"title":{},"name":{},"text":{"149":{}},"component":{}}],["інструмент",{"_index":1351,"title":{},"name":{},"text":{"6":{}},"component":{}}],["інформаці",{"_index":6180,"title":{},"name":{},"text":{"212":{}},"component":{}}],["інформації",{"_index":4197,"title":{},"name":{},"text":{"99":{}},"component":{}}],["ііт",{"_index":3398,"title":{},"name":{},"text":{"73":{}},"component":{}}],["їм",{"_index":969,"title":{},"name":{},"text":{"5":{}},"component":{}}],["їх",{"_index":2870,"title":{},"name":{},"text":{"58":{}},"component":{}}]],"pipeline":["stemmer-ru","stemmer"]},"store":{"documents":{"1":{"id":1,"text":"On this page: 1. About the Platform 2. Problem statement 2.1. Current condition of registries 2.2. The concept of a platform for deploying registries and solving the problem 3. Getting started The Platform for state registries is an information system designed to deliver government services in a digital format efficiently. It enables the rapid creation, modeling, deployment, and maintenance of electronic state registries, striking an optimal balance between data security requirements, deployment speed, registry ownership costs, and data exchange with other registries. Figure 1. Context diagram of the Platform Across the globe, many countries are grappling with a need for uniformity in how their public state registers are created and managed. This inconsistency stymies the practical application of crucial principles of digital development policy, such as reusability, technology neutrality, data portability, interoperability, security, and confidentiality. Consequently, this results in increased complexity in delivering administrative services while also acting as a roadblock to their transition to online platforms. In the case of Ukraine, there exist over 350 state registries, each with distinct ownership. Individual teams are responsible for creating and maintaining each registry, and they each operate on their dedicated infrastructure, whether physical hardware or a cloud-based solution. The current situation can be characterized as both decentralized and unregulated: Decentralized refers to separate infrastructures for data storage maintained by different owners. This distinction is crucial regarding data collection, storage, and usage accountability. Unregulated signifies the absence of guarantees that the registries interact correctly. This interaction should occur over secure connections, comply with data retention policies, and align with software reuse and resource optimization principles. Given the current situation and potential risks associated with defining responsibility for data protection, the Platform advocates a shift towards a decentralized but regulated approach. This approach guarantees the preservation of data owner identification, establishing clear data responsibility. Simultaneously, it lays the groundwork for further Platform enhancements, positioning registries as a complex of hardware and software tools. These tools are designed to implement the requirements the Ministry of Digital Transformation of Ukraine set forth. This knowledge base contains the following main sections: To learn about new features and enhancements, see What’s new. If you are a Platform infrastructure administrator, security administrator, or access administrator, see Platform administrators. If you are a development and maintenance team member that deploys registries using the Platform, see Registry development and maintenance. If you are a registry administrator, see Registry administrators. If you are a data modeler who works with operational data structures and declarative model descriptions and creates analytical reports, see Data modelers. If you are a modeler of business processes and UI forms for business processes, who works with BPMN, DMN, Groovy scripting, and JSON structures, see Business process modelers guide. For a deep dive into the regulations structures, take a special Study course for registry regulations developers. This training provides a number of educational tasks and quizzes that will help you gain practical skills in regulations modeling. If you are a government officer or a citizen working with the user portal as part of business processes, see User documentation. If you are a developer, architect, or just a tech guru, see Architectural documentation. Have a question? See FAQ.","title":"Platform for state registries","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/index.html","titles":[{"text":"1. About the Platform","hash":"_about_the_platform","id":1},{"text":"2. Problem statement","hash":"_problem_statement","id":2},{"text":"2.1. Current condition of registries","hash":"_current_condition_of_registries","id":3},{"text":"2.2. The concept of a platform for deploying registries and solving the problem","hash":"_the_concept_of_a_platform_for_deploying_registries_and_solving_the_problem","id":4},{"text":"3. Getting started","hash":"_getting_started","id":5}]},"2":{"id":2,"text":"Accredited key certification centers (AKCC) State-accredited organizations that provide digital signature services and secure key information carriers or use the applicant’s carriers like USB flash drives. They play a vital role in maintaining the security and integrity of digital transactions and communications, ensuring the authenticity of digital signatures, and thus enabling secure and trustworthy electronic interactions. Admin console interface Control Plane Admin portal Administrative portal Administrative portal A client web application for administering registry regulations. The interface makes it easy to perform necessary configurations without advanced programming skills. Administrative service A service that involves changing some status or other data in a registry. The Platform implements this as a business process that makes changes to the registry data. Analytical database A read-only database used by analytical tools, particularly Redash. It receives registry data through logical replication from the operational database. Analytical reports Preconfigured registry statistics built using the Redash, analytical reporting service. It may include graphs, tables, visualizations, metrics, or key performance indicators — KPIs. Authentication Verification of the user’s provided identifier. Authorization Granting and verification of rights to perform any operations in the system. Bulk user import Creating many user accounts at a time for service providers (officers) in the registry by importing a CSV file. Business process A set of operations aimed at achieving a certain result through data processing. BPMN models of business processes are part of the registry regulations. Business Process Model and Notation (BPMN) A standard of graphical notation for modeling business processes. Business processes history database A database that stores significant business processes execution history events (such as a history of business processes initiated by a user, completed business processes, and completed user tasks). Business processes intermediate database A distributed database of key-value pairs that temporarily stores data provided by users through the UI forms of business process tasks. Business processes operational database A relational database that stores deployed models of business processes, the current execution state of process instances, the data generated by them, authorization settings, and general configurations. Candidate version The registry regulations candidate version is а branch version derived from the master branch of the registry regulations, utilized for creating and editing entities such as data models, processes, forms, etc. Modifications are made through the Administrative Portal to the registry-regulations repository. Developers can incorporate these changes after verification and approval into the master version, a process analogous to Git branch merging. Central components System components that all registries share. The cluster contains a single copy of each central component. Citizen auto-registration Citizen onboarding Citizen-facing solutions Citizen-facing solutions refer to digital applications, platforms, or services specifically designed to facilitate direct interactions between governmental bodies and citizens. These solutions aim to provide easy access to public services, enhance the efficiency of public service delivery, and improve overall citizen satisfaction. An example of such a solution is the Ukrainian \"Diia\" platform, which allows Ukrainian citizens to access various governmental services online, such as obtaining digital copies of documents, registering vehicles, etc. These solutions bring the government closer to the people by leveraging digital technology to break down barriers and streamline processes. Citizen initial authentication Citizen onboarding Citizen onboarding The process of creating an account for a registry services recipient (citizen) using data obtained from the QES key and Unified State Register. This includes creating all the database records necessary for user’s interaction with the registry (such as user profile, settings, and roles). Citizen portal A web interface used by service recipients (citizens) to interact with the registry in the form of a client web application. Cluster (Platform) management An abstraction within the Control Plane that enables you to manage the central components of the platform. Competence Center (CC) A team responsible for delivering consulting services to registry development teams, with a key focus on gathering feature requests and tracking bug reports. Comprehensive information protection system A set of organizational and engineering measures and hardware and software tools that ensure the system’s information protection. Confidential data Any data that requires authorization to access it. Control Plane A set of platform components that simplifies managing the central components of the platform, enables registry management, and aggregates links to all web APIs of the central components. Custom Resource (CR) A resource that extends the OpenShift API by defining the configuration of a specific OpenShift instance. Not necessarily available out of the box when installing OpenShift. Dashboard Analytical reports Data Center A centralized facility utilized by an organization to store, process, and distribute data and applications. It houses critical IT operations and equipment including servers, storage systems, and networking hardware. These centers are often designed with redundancy measures such as backup power supplies, data communication connections, and security controls for high availability and reliability. They can be privately owned or provided by third-party cloud service providers. Data factory The platform subsystem responsible for storing data and providing access to it. Data factory API A data factory programming interface available to other platform components that provides a set of functions for interacting with registry data. Data model A description of the content, structure, and integrity constraints used to create and maintain a registry database. It is defined using the Liquibase format at the registry regulations level. Data platform Data factory Decision Model and Notation (DMN) A standard notation for modeling business rules using decision tables. Digital identification services Platforms that facilitate the electronic identification and authentication of users conveniently and securely. They allow users to perform electronic identification through various means. An example of such a service can be the id.gov.ua. Digital documents Files that users can upload, download, and view through business process task interfaces (UI forms). Documents are stored in the registry’s object storage. The content of digital documents is not the object of operations at the level of business processes. Digital signature In the scope of this document, a digital signature can refer to individual’s or legal entity’s QES, AdES, or EDS, as well as legal entity’s electronic seal. The use of QES or AdES depends on the current legislation requirements. Digital signature (EDS) Electronic data obtained from cryptographic transformation and added to other data or documents to ensure the latter’s integrity and origin. Domain Name System (DNS) A distributed naming system that converts network resource names into IP addresses. DRFO State Register of Individuals – Taxpayers. Refers to the drfo code assigned to the taxpayers. See also Registration number of the taxpayer’s account card. EDRPOU EDRPOU code is a unique ID code of a legal entity in the USREOU (Unified state register of enterprises and organizations of Ukraine). Endpoint A point of integration that allows two programs or systems to exchange data. It serves as a bridge for receiving, sending, and updating information between various components of a system or different systems. Excerpt A document generated as part of providing the information services through business processes, which can be downloaded by the user who ordered the information service. Excerpts are presented by separate templates at the registry regulations level. Form UI form GitOps approach A way of implementing continuous deployment for cloud-native applications. The main idea of GitOps is that any changes to the configuration of the OpenShift cluster, cluster components, and Platform components are made by modifying the configuration of these components in their respective Git branches. Group of registries Registries that belong to the same owner and are related. id.gov.ua The Ukrainian-specific example of Digital identification services. This service facilitates the electronic identification and authentication of users conveniently and securely. It allows users to identify electronically through various means, such as electronic signatures (on file-based, cloud-based, or other secure carriers), state-provided digital signatures like \"Diia.Signature,\" and BankID by the National Bank. Information panel Analytical reports Informational service A business process implemented on the level of an individual registry that fetches registry data in a specified form. It usually involves confirming a certain status in the registry. The result of the service is either an excerpt or confirmation of rights. Installer A software archive with installation scripts and Docker images that enables you to automatically deploy a specific version of the Platform to a target environment (cloud or data center) and upgrade the Platform to a particular version, for example, 1.9.5. Kong A component of the external traffic management subsystem and an API gateway. Kubernetes Kubernetes, often abbreviated as K8s, is an open-source platform for automating deployment, scaling, and managing containerized applications. Low-code An approach to creating, configuring, and modifying systems and applications that require minimal programming. In the context of the Platform, these are the components that enable this approach. Master version of the regulations The current version of the regulations deployed to the registry instance. Merge request A logical representation of changes relative to the current master version of the registry regulations. Merge requests must pass integrity and quality tests before actually being applied to the master version. Object (data ownership) Any entity owned by a subject. Officer initial authentication Officer onboarding Officer onboarding The process of creating an account for a registry services provider (officer) using data obtained from the QES key. This includes creating all the database records necessary for user’s interaction with the registry such as user profile, settings, and roles. Officer portal A web interface used by service providers (officers) to interact with the registry in the form of a client web application. Open data Public information in a format that enables its automated processing by electronic means, as well as free and unlimited access and usage. OpenShift A system for automatic deployment, scaling, and management of applications in containers orchestrated and managed by Kubernetes. Operational database A database that stores registry data, settings, business process data, and other operational data used by the registry’s applications and services. Personal data Any information that relates to an identified or identifiable living individual. Data is classified as personal at the level of creating a registry data model, where appropriate processing and access mechanisms are applied. Platform (IS \"Platform\") Platform for state registries Platform components Central components Platform digital signature keys Keys used for integration with external digital identification providers. Platform for state registries An information system that allows authorized government officers to create and maintain registries using the \"Registry as a Service\" SaaS model. The system can be deployed either in the cloud or on-premises data center, either for a single registry or a group of registries. Public data Any data that does not require authorization to access it. Qualified Electronic Signature (QES) The e-signature used to authenticate users and sign the data they provide. Rate limit A limit on the number of requests from a single user. Realm A core concept of the Keycloak service. A realm manages a set of users, credentials, roles, and groups. Registries Platform API Data factory API Registry A specialized information resource designed to store and process legally important information about people, their rights and obligations, as well as property and resources. Registry components Platform components installed separately for each registry. Registry configuration A configuration of registry components available in the Control Plane and registry repository in line with the GitOps approach. Registry data Information stored in the registry database. Registry digital signature keys Keys used to sign the transformed data of business forms and excerpts. Registry pipeline A process that applies configuration to the registry. Registry regulations A set of data models, business processes, rules, and settings that define the registry’s functions. Registry regulations deployment The procedure for creating or updating registry services, business processes, and the structure of the registry database following the registry regulations. Regulations roles Roles created during registry regulations deployment and configured in the registry regulations. Resource Endpoint Role Based Access Control (RBAC) A method of access control where privileges are assigned to users not directly but via roles. The management of individual user privileges essentially involves assigning them roles. RNOKPP (Registration number of the taxpayer’s account card) An element of the State Register of Individuals – Taxpayers (DRFO) is a numeric code required for every taxpayer to be registered with fiscal authorities. It consists of 10 digits and remains unchanged throughout one’s lifetime. Secure Exchange Gateway (SEG \"Trembita\") A secure software interface for electronic interaction between state systems enables obtaining information from external systems. To use it, the organization must be a SEI SEIR \"Trembita\" member. SEI SEIR \"Trembita\" The system of electronic interaction of state electronic information resources. Based on the X-Road® solution. To interact within this system, you must install the Secure Exchange Gateway (SEG \"Trembita\"). Service One or more business processes in the registry aimed at processing a user’s request. Service provider (officer) A system role assigned to government representatives interacting with the registry to perform their official duties. Service recipient (citizen) A system role assigned to users who interact with the registry to receive administrative and informational services. This role can be set to an individual, PE’s representative, or a legal entity. Subject (data ownership) Any natural or legal entity that owns an object. System roles Roles created by the Platform during registry deployment or Platform installation. UI form The UI form, available in officer and citizen portals, enables users to submit and view data while completing tasks within the business process. UI form scheme A formal description of a UI form’s structure, fields, and validation rules. Presented as a file at the registry regulations level. Unified State Register (USR) A unified state register of legal entities, individual entrepreneurs, and public organizations. Uniform Resource Identifier (URI) A compact sequence of characters that uniquely identifies a resource on the Internet. User portal A common name for the web interface used by service recipients (citizens) and service providers (officers) to interact with the system. User roles System roles and regulations roles that are assigned to a user.","title":"Glossary","component":"platform","version":"1.9.6","name":"platform-glossary","url":"/platform/1.9.6/platform-glossary.html","titles":[]},"3":{"id":3,"text":"","title":"Platform administrators","component":"platform","version":"1.9.6","name":"admin-overview","url":"/platform/1.9.6/admin/admin-overview.html","titles":[]},"4":{"id":4,"text":"On this page: 1. Terminology 2. Prerequisites for migration 3. Preparing the registry for migration 4. Migrating the backup copy from cluster A to cluster B 5. Preparing the restore on cluster B 6. Restoring the registry on cluster B 7. Testing the registry 8. Migrating the registry configuration This guide provides instructions on migrating a registry from one cluster to another. We use the following names to identify the clusters: Cluster A is the cluster that hosts the registry before the migration (source cluster). Cluster B is the cluster that will host the registry after the migration (target cluster). Registry migration is performed by first moving the latest backup copy of the registry from cluster A to cluster B, then restoring the registry on cluster B. Before you start the migration, check these prerequisites and ensure that all requirements are met. During the migration, you will need to run a bash script that transfers data from cluster A to cluster B. For a successful migration, this script must be executed on a Linux platform with an x86-64 microprocessor architecture (also known as AMD64, Intel 64, or x64). The user performing the migration must be added as the Platform administrator on both clusters via control-plane-console. For details, see Creating Platform administrators. The Platform deployed on cluster B (target cluster) must have the same control-plane-gerrit version as the registry you are migrating. For example, Platform version 1.9.4.11 with control-plane-gerrit version 1.9.4.7 will be compatible with the registry version 1.9.4.7. To verify the control-plane-gerrit version, check whether a corresponding branch exists in the cluster-mgmt repository of the central Gerrit component. If the branch that matches the registry version exists, the registry can be migrated to cluster B. If not, you have two options: Update the Platform on cluster B to match the registry version. Update the registry on cluster A to match the version available on cluster B. Make sure you have simultaneous access to clusters A and B. During the migration, you will need the following terminal commands: oc velero rclone vault Make sure you have a stable Internet connection. The greater the bandwidth, the faster the migration will run. Alternatively, you can use an AWS or other cloud provider’s jumpbox with access to both clusters. Using a jumpbox reduces the time it takes to transfer the backup copy from one cluster to another. When using a jumpbox, you need to check whether the Platform’s MinIO and Vault are accessible from the jumpbox’s IP address. To get the jumpbox’s IP, use the following command: ssh sshmyip.com Next, you need to make sure the jumpbox’s IP address is added to the list of allowed CIDRs at the Platform management level for clusters A and B. For details, see Restricting access to administrative and registry components. If you cannot access control-plane-console, contact the L2 support team to request access. Before migrating the registry, make sure cluster B does not contain any resources related to the registry. If the registry was never deployed on cluster B previously, skip the rest of the steps in this section. If the registry was previously deployed on cluster B, you need to remove all of its resources by checking the following: Delete the registry from cluster B using the Control Plane admin console. For details, see Deleting a registry. Confirm the changes and wait until the registry is deleted. After deleting the registry, verify that the project is absent in the central Gerrit component. Open Gerrit (Openshift console > Projects > control-plane > Networking > Routes > control-plane-gerrit). Sign in with openshift-sso, go to Browse > Repositories, and search by registry name. If the repository appears in search results, go to Openshift console > Projects > control-plane > Home > API Explorer > search for gerritproject in the Filter by kind field → → Actions > Delete GerritProject. After deleting the Gerrit project, go to the Gerrit console and verify that the repository is absent. If the repository exists, delete it via the Gerrit console by opening the registry repository > Commands > Delete project. Delete the directory in MinIO. To check the MinIO directories, go to MinioUI. For vSphere clusters, you can find this route in OpenShift console > Projects > control-plane > Networking > Routes > platform-minio-ui. If the route is missing, go to secrets using the following path: Openshift console > Projects > control-plane > Workloads > Secrets > backup-credentials, copy the backup-s3-like-storage-url field and add the port to the URL (for example, https://endpoint.com:9001). To find MinIO credentials, go to Openshift console > Projects > control-plane > Secrets > backup-credentials. The backup-s3-like-storage-access-key-id is the username, and the backup-s3-like-storage-secret-access-key is the password. Sign in to MinIO and delete the directories in the registry’s bucket: openshift-backups/backups/* openshift-backups/restic/ obc-backups/ Make a backup copy of the registry on cluster A. Before migrating the registry to a new cluster, run the Create-registry-backup- Jenkins process. If the Jenkins pipeline has completed with a Success status, the backup copy was created successfully. To get the name of the backup copy, go to the output log from the latest Jenkins execution (Console Output) and look for a message similar to this: [INFO] Velero backup - - done with Completed status For example: [INFO] Velero backup - abc-02-2023-04-18-19-03-14 done with Completed status In this case, abc-02-2023-04-18-19-03-14 is the name of the backup copy. If the registry version is earlier than 1.9.3, you need to execute the following command in the terminal: velero backup describe You can find the name of the backup in the output log from the last execution of the Create-registry-backup- Jenkins process. For details on backing up and restoring registries, see Backing up and restoring. If the latest Velero backup has a Completed status, you can proceed. If the status of the Velero backup is not Completed, you will need to contact an L2-L3 support team to ensure the Jenkins pipeline functions properly. Prevent modifying the registry using Jenkins pipelines. For each registry pipeline, go to Configure > Build Triggers, select the Disable this project option, then click Save. Get login commands for both clusters. To do this, sign in to the Openshift console, click your username in the upper-right corner, and select Copy login command from the menu. In the new window or tab that opens, copy the entire login command from the Log in with this token field and save it in any text editor. Do this for both clusters, A and B. Get the name of the latest backup copy created on cluster A (for example, abc-02-2023-04-18-19-03-14). Open the terminal and execute the following commands: Export login for cluster A export A_CLUSTER_LOGIN=\"oc login --token …\" Copy the login command for cluster A that you saved in step 1 and paste it after the --token parameter inside the double quotes. Make sure there are no line breaks at the end of the login command. Export login for cluster B export B_CLUSTER_LOGIN=\"oc login --token …\" Copy the login command for cluster B that you saved in step 1 and paste it after the --token parameter inside the double quotes. Make sure there are no line breaks at the end of the login command. Export registry name export REGISTRY_NAME=\"\" Here is an example of the registry name: abc-02. Export backup copy name export BACKUP_NAME=\"\" Here is an example of the backup name: abc-02-2023-04-18-19-03-14. If the registry was previously migrated to cluster A instead of being deployed on its Platform directly, perform an additional export: export VAULT_KEY=\"\" where is the key for the unseal process, which can be found in the Openshift console (Cluster A) > Projects → → ConfigMaps > hashicorp-vault-config. The key_name field is the name of the key. For example: key_name = \"autounseal-migration\" When migrating a large registry, export the following variable: export LARGE_DATA=\"true\" Download the registry-migration.zip file, then extract it to a new directory using the following command: unzip registry-migration.zip -d registry-migration Go to the registry-migration directory (via cd) and execute this command: chmod +x && ./migration.sh After running the script, log in to the terminal via oc cli on cluster B and verify the following: Velero backup is present on cluster B. A directory named keycloak-export--* is present inside the directory with the script. Migrate realms. To migrate realms, sign in to Keycloak on cluster B: In the Openshift console, find the user-management project (or namespace), go to Networking > Routes, and click the keycloak link. You can obtain Keycloak credentials from keycloak secrets in the same project. Go to Workloads > Secrets, search for a secret named keycloak, and copy the credentials from the Data section. In Keycloak, go to Select realm (1) > Add realm (2) > Import (3), select the keycloak-export--/-realm.json file, and create realms using the SKIP strategy suggested by Keycloak. Do this for all directories with the name keycloak-export--*. Migrate users. Without leaving the Keycloak admin console, go to the realm (1) that was created via import. In the realm menu on the left, select Import (2) (when importing, select the SKIP strategy), then click Select file (3) and select the file from the following directory: keycloak-export--/-users-*.json. If there are several files in this directory, import all of them. Create a registry via control-plane-console. Create a registry with the same name and version on cluster B. When creating the registry, assign the same administrators as on cluster A and provide up-to-date information. Key info You can provide valid keys for your registry or use test keys. After the migration, you can update the key data via the Control Plane admin console. To obtain the key data, contact an L2-L3 support team. For details on updating registry keys, see admin:registry-management/system-keys/control-plane-registry-keys.adoc. Registry template Select the same template as used by the registry on cluster A. To find the template name, go to the Openshift console > Projects > control-plane > API Explorer > search for codebase > go to codebase > Instances > open codebase and check the following settings: Example 1. codebase.yaml metadata: annotations: registry-parameters/template-name: templates/registry-tenant-template-minimal In this case, templates/registry-tenant-template-minimal is the name of the registry deployment template. If the console allows you to add DNS for Keycloak and user portals, skip this step, as traffic is still configured for cluster A. Right after creating the registry, go to Jenkins (control-plane namespace > Networking > Routes > jenkins), and stop the first MASTER-Build- build. Wait until the directory and Jenkins pipeline are created. Immediately after the build starts, select Abort. Without leaving the Jenkins console, edit the MASTER-Build- configuration: Go to MASTER-Build- > Configure > Build Triggers, select the Disable this project option, then click Save. Move the values.yaml and values.gotmpl configuration files from the registry’s repository on cluster A to cluster B. Go to the registry repository on cluster A: Go to Control-plane-console > Dashboard > Gerrit. In Gerrit, go to Browse > Repositories and open the repository. In the registry repository, go to Branches > master, switch to deploy-templates, and open the values.yaml (values.gotmpl) file. Copy its raw code to the clipboard and save it in any text editor. Go to the registry repository on cluster B: Go to Control-plane-console > Dashboard > Gerrit. In Gerrit, go to Browse > Repositories and open the repository. Go to Commands and click Create change to create a change with the following parameters: Select branch for new change: master. Description: Update registry before migration. Once the change is created, click Edit > ADD/OPEN/UPLOAD and locate the values.yaml (values.gotmpl) file. Copy the configuration from the values.yaml (values.gotmpl) file on cluster A that you saved earlier and paste it inside this file. Do this for both files: values.yaml and values.gotmpl. Save your changes, wait until the Code Review (СІ Jenkins +1) pipeline completes, then apply Code-review +2 and merge changes to the master branch using the Submit button. Check for CustomResourceDefintition. If no registries were deployed on cluster B previously, be sure to check for CustomResourceDefintition. To do this, log in to cluster B via oc cli and execute the following command: oc get customresourcedefinition ingressclassparameterses.configuration.konghq.com If this command ends with an error and returns a No resources found message in the console, go to the directory where the migration.sh script is located and execute the following command from the root: for file in $(ls crds); do oc apply -f crds/$file; done Go to Jenkins (control-plane namespace > Networking > Routes > jenkins) and open the folder with your registry name, then run the Restore-registry- pipeline. After starting the pipeline, select the version to restore at the cleanup-registry-before-restore stage, and wait until the process completes. If the process ends with an error or runs for more than 1-2 hours, contact an L2-L3 support team. After the pipeline completes, go to the Openshift console > Projects → and ensure no pods have an error status. If the bpms-* pod is not running and has an error status, you must fix the passwords for the operational-instance and analytical-instance pods in postgres. To do this, perform these steps: Go to Openshift console > Secrets and find the following secrets: operational-pguser-postgres secret for operational-instance analytical-pguser-postgres secret for analytical-instance Open the secrets and copy the password field. Go to Openshift console > Pods and find the operational-instance and analytical-instance pods. For each pod, execute the following commands successively: psql ALTER ROLE postgres WITH PASSWORD ''; where is the password you copied from the secret for each corresponding pod instance, operational and analytical. After performing these steps, delete the bpms pod and wait until its status changes to Running. If the registry-rest-api pod returns an ImagePullBackOff error, add cluster B’s IP to the Openshift Route > Nexus annotation. To add the IP, go to Openshift console > Projects → → Routes > Nexus > YAML and check the following field in the .yaml configuration: Example 2. route.yaml metadata: annotations: haproxy.router.openshift.io/ip_whitelist: /32,.... If the IP address of cluster B is missing, add it to haproxy.router.openshift.io/ip_whitelist with a /32 mask. After ensuring all pods have a Running status, transfer the registry configuration to values.yaml/values.gotmpl. Go to control-plane-gerrit (Openshift console > Projects > control-plane > Networking > gerrit > sign in via openshift-sso). In Gerrit, go to Browse > Repositories and select the repository with your registry name. Go to Commands and click Create change to create a change with the following parameters: Select branch for new change: master. Description: Update registry before migration. Once the change is created, click Edit. Add vault configuration to values.gotmpl. To do this, take the current vault configuration from the hashicorp-vault-config config-map (Openshift console > Projects → → Workloads > ConfigMaps > hashicorp-vault-config) and copy the field as shown in the following example: ui = true listener \"tcp\" { tls_disable = 1 address = \"[::]:8200\" cluster_address = \"[::]:8201\" } storage \"file\" { path = \"/vault/data\" } seal \"transit\" { address = \"https://\" disable_renewal = \"false\" key_name = \"\" mount_path = \"transit/\" tls_skip_verify = \"true\" } where is the link to the vault and is the name of the key. The config-map contains up-to-date values. Next, click ADD/OPEN/UPLOAD inside the change, search for values.gotmpl, and select the file. Inside the file, add the configuration as shown in the following example: vault: platformVaultToken: {{ env \"platformVaultToken\" }} openshiftApiUrl: {{ env \"openshiftApiUrl\" }} centralVaultUrl: {{ b64dec $centralVaultUrl }} server: dataStorage: storageClass: ocs-storagecluster-ceph-rbd auditStorage: storageClass: ocs-storagecluster-ceph-rbd standalone: config: | ui = true listener \"tcp\" { tls_disable = 1 address = \"[::]:8200\" cluster_address = \"[::]:8201\" } storage \"file\" { path = \"/vault/data\" } seal \"transit\" { address = \"https://\" disable_renewal = \"false\" key_name = \"\" mount_path = \"transit/\" tls_skip_verify = \"true\" } Click Save. Resize kafka disks. Without leaving the template file, find the following field: storage: zookeeper: size: 5Gi kafka: size: 20Gi Modify the kafka.size value according to the current disk size in Openshift (Openshift console > Projects → → Storage > PersistentVolumeClaims). Search for data-0-kafka-cluster-kafka-0 and find out its Capacity. Go back to values.gotmpl and set the desired disk size. For example: storage: zookeeper: size: 5Gi kafka: size: 40Gi where 40Gi is the current disk size that matches Capacity. Delete all GerritGroupMember. To do this, log in to cluster B via os cli and execute the following command: oc -n delete gerritgroupmember --all After the changes are applied, the MASTER-Build- Jenkins process should start. After the MASTER-Build- Jenkins process completes, fix Jenkins credentials in the Jenkins registry. If you don’t have access, add yourself as a registry administrator via control-plane-console. To do this, go to Openshift console > Projects → → Workloads > Secrets > gerrit-control-plane-sshkey and copy the id_rsa field. Then go to the registry Jenkins (Networking > Routes > jenkins) and open Manage Jenkins > Manage Credentials, find gerrit-ci-users-sshkey (gerrit-control-plane-sshkey), and click Update. In the Private Key field, paste and Replace the id_rsa value you copied earlier. Update Nexus URL in the regulations repository. To do this, go to Openshift console > Projects → → Gerrit and sign in to Gerrit. Next, make sure you have access to projects in Gerrit and clone the registry-regulations repository locally. To do this, perform these steps: In the Gerrit web interface, go to settings > HTTP Credentials and click Generate New Password to generate a new password. Save this password in any text editor. Go to the registry-regulations repository and copy the contents of the Clone with commit-msg hook text box in the Anonymous HTTP tab. Paste the repository clone command into the terminal and execute. The command will prompt you for a login and password. For the login, enter your email. For the password, paste the one you generated earlier in step A. For details on working with Gerrit repositories, see Deploying regulations in Gerrit. If your Git user is different from your Gerrit user, execute the following commands: git config --global user.name \"New Author Name\" git config --global user.email \"\" For example: git config --global user.name \"Jonh Doe\" git config --global user.email \"jong_doe@doemail.com\" Change the minor version in settings.yaml in the root directory of the registry-regulations repository, as shown in the following example: settings: general: package: ua.gov.mdtu.ddm.dataplatform.template register: registry version: 2.21.0 For example, add +1 to the version: settings: general: package: ua.gov.mdtu.ddm.dataplatform.template register: registry version: 2.21.1 Replace all mentions of cluster A DNS with cluster B. To do this, go to the registry-regulations/data-model directory in the terminal: cd registry-regulations/data-model Then execute the following command to replace DNS: find \".\" \\( -type d -name .git -prune \\) -o -type f -print0 | xargs -0 sed -i -e 's/ / /g' Cluster A DNS wildcard/Cluster B DNS wildcard refers to apps.* (for example, apps.reestr1.eua.gov.ua). Here is how a sed rule should look: 's/apps.cluster-a.dns.wildcard.com/apps.cluster-b.dns.wildcard.com/g' Commit and push changes to the repository: git add --all git commit -m \"Update nexus URL\" git push origin refs/heads/master:refs/for/master Go to the registry Gerrit, apply Code-review +2, and merge changes to the master branch using the Submit button. After updating the master branch, go to the registry Jenkins and make sure the pipelines in the registry-regulations folder have been completed with a Success status. Make sure the user portals are working correctly and the business processes have migrated successfully. All Jenkins pipelines should complete with a Success status. Migrate the registry configuration from cluster A to cluster B according to the following documentation: Administrators (for details, see Creating registry administrators). Key info (for details, see admin:registry-management/system-keys/control-plane-registry-keys.adoc). Mail server (for details, see Configuring the mail server). Registry resources Transfer registry configuration parameters (the global.registry section) from the values.yaml file on cluster A to the values.yaml file on cluster B. DNS (for details, see Configuring custom DNS). Access restrictions (for details, see Restricting access to administrative and registry components). Service providers authentication (for details, see Configuring authentication for officers and Configuring self-registration for officers). Service recipients authentication (for details, see registry-develop:registry-admin/cp-auth-setup/cp-auth-setup-citizens.adoc) Backup (for details, see Registry backing up and restoring and Registry backup creation schedule and retention time management).","title":"Migrating registries","component":"platform","version":"1.9.6","name":"migrate-registry","url":"/platform/1.9.6/admin/migrate-registry.html","titles":[{"text":"1. Terminology","hash":"_terminology","id":1},{"text":"2. Prerequisites for migration","hash":"_prerequisites_for_migration","id":2},{"text":"3. Preparing the registry for migration","hash":"_preparing_the_registry_for_migration","id":3},{"text":"4. Migrating the backup copy from cluster A to cluster B","hash":"_migrating_the_backup_copy_from_cluster_a_to_cluster_b","id":4},{"text":"5. Preparing the restore on cluster B","hash":"_preparing_the_restore_on_cluster_b","id":5},{"text":"6. Restoring the registry on cluster B","hash":"_restoring_the_registry_on_cluster_b","id":6},{"text":"7. Testing the registry","hash":"_testing_the_registry","id":7},{"text":"8. Migrating the registry configuration","hash":"_migrating_the_registry_configuration","id":8}]},"5":{"id":5,"text":"Please find below the answers to the most frequently asked questions from the Platform users. За фіксацію дати та часу додавання та оновлення сутності в БД відповідають системні поля ddm_created_at та ddm_updated_at. Повернути ці параметри можливо за допомогою search condition вказавши їм alias. Щоб видалити cleanup-job із реєстру, потрібно виконати наступні дії: Увійдіть до Jenkins реєстру. Відкрийте конфігурацію job registry. Повний шлях: job-provisions > ci > registry Знайдіть рядок, який викликає функцію createCleanUpPipeline(): Приклад createCleanUpPipeline() createCleanUpPipeline(\"cleanup-job\", codebaseName, cleanupStages, repositoryPath, codebaseHistoryName) Закоментуйте цей рядок наступним чином: Приклад закоментованої функції createCleanUpPipeline() /*createCleanUpPipeline(\"cleanup-job\", codebaseName, cleanupStages, repositoryPath, codebaseHistoryName)*/ Натисніть Save. Насамкінець видаліть cleanup-job через Jenkins UI. Після оновлення реєстру до нової версії повторіть процедуру.","title":"FAQ","component":"platform","version":"1.9.6","name":"faq","url":"/platform/1.9.6/faq/faq.html","titles":[{"text":"Як отримати дату та час створення сутності у БД?","hash":"_як_отримати_дату_та_час_створення_сутності_у_бд","id":1},{"text":"Як видалити cleanup-job із реєстру?","hash":"_як_видалити_cleanup_job_із_реєстру","id":2}]},"6":{"id":6,"text":"On this page: 1. Approaches, methodologies, and standards of software development 1.1. Development approaches and methodologies 1.2. Coding standards 1.2.1. Design standards and recommendations 1.2.2. Code styling standards (code style) 1.2.3. Git workflow standards 1.2.4. POM (project object model) working requirements 1.2.5. Modular testing standards 1.2.6. Clean code requirement 1.2.7. Using SQALE metrics for technical debt assessment and management 2. Software development methodologies 2.1. System delivery structure 2.1.1. Development and management teams 2.1.2. Adoption of Agile methodology 2.1.3. Inter-Team collaboration tools 2.1.4. Usage of Scrum artifacts 2.1.4.1. Definition of Ready (DoR) artifact 2.1.4.2. Definition of Done (DoD) artifact 2.1.5. Approaches to Information System (IS) release management 2.1.5.1. Sprint and Release numbering 3. Code quality control 3.1. Static code analysis 3.2. Code coverage testing 3.3. Unit testing 3.4. Automated testing coverage 3.4.1. Platform testing tools 3.5. Source code review (Code review) 3.5.1. Code review process in the context of information system development 3.5.2. Code refactoring 4. Monitoring non-functional requirements compliance The following methodologies and approaches are implemented during the development of information systems components: Utilization of object-oriented approach in software development; Implementation of container-based virtualization; Automation of deployment using the GitOps approach; Documentation organization following the code organization example; Unification and standardization of software components; Subsystem decomposition into modules; Risk assessment and security threat modeling; Execution of functional and non-functional testing. Adhere to the \"Zen of Python\" philosophy: Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren’t special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one—​and preferably only one—​obvious way to do it. Although that way may not be obvious at first unless you’re Dutch. Now is better than never. Although never is often better than right now. If the implementation is hard to explain, it’s a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea — let’s do more of those! The Fail fast option is often the best solution. Use \"Return early\" to validate input parameters. Apply the \"Scout rule\": \"Leave the code better than you found it.\" Avoid using break, continue, and return in complex constructs. Always use curly braces in loops and conditions. Avoid creating methods with more than four parameters. Avoid creating methods that modify input parameters. Logging of objects should occur without object transformation, considering NPE (NullPointerException). Tabulation: use four spaces. Use static imports only when working with DSL. Replace wildcard imports (\"*\") with specific ones. Separate logical groups of fields with new lines, rather than each field individually. Declare class fields before object fields. When choosing variable names, focus on their function rather than type. For example, StringBuilder stringbuilder = new StringBuilder() is poor practice, whereas StringBuilder fields = new StringBuilder() is good. Prefer class names that start with a domain value. For example: UserService, UserKafkaService (technology component may go in the middle). The repository should not contain specific data, such as local paths or settings specific to individual developers (properties). When creating Git commit messages: The Jira task number should be mentioned at the beginning in square brackets. The message should answer the question: \"What does this commit change?\" If the commit description requires further elaboration, use a short headline on the first line, followed by a detailed description on a new line (Git handles this well). Do not end the commit message with a period. Use the parent pom.xml for: Defining dependency versions; Managing plugins. When moving library versions to settings (.properties), add the .version suffix. For example, …​. It is recommended to utilize the AAA (ArrangeActAssert) approach. Comments (given, when, then) are unnecessary; separation by empty lines is sufficient. Use the @DisplayName annotation in JUnit 5 to provide detailed information. Avoid using \"throws Exception\" in test declarations. Usage of PowerMock is not recommended. For mock objects, add the appropriate mock prefix, e.g., mockRepository. Avoid meaningless messages in assertions, e.g., `Assertions.assertNotNull(object, \"Shouldn’t be null`\"). During code development, adhere to the principles of Clean Code, which emphasizes creating quality, well-written code. Code is considered \"good\" if it: Meets requirements and has passed tests; Clearly expresses all intended design concepts; Does not contain duplication; Minimizes the number of components. In software development, changes in one part of the code often require related changes in other code segments or documentation. This process is known as accumulating \"technical debt\". The term \"technical debt\" also encompasses other necessary but unfinished changes that constitute a \"debt\" to be repaid at a later time. Для вимірювання та керування обсягами технічного боргу застосовується методологія SQALE. The SQALE methodology is used to measure and manage the volume of technical debt. The Platform development follows the Agile software development methodology. Agile software development is a class of methodologies based on iterative development. It assumes that requirements and decisions evolve through collaboration among self-organizing cross-functional teams. Management Team Platform Team Three Scrum eams Platform Service Team System Architects Team Competence Center and Register Team Service Management Team Within the Agile methodology, the primary approach is Scrum. Scrum is a project management methodology oriented toward flexible software development, emphasizing high development quality. Given the Platform’s scale and technical complexity involving numerous teams and specialists, the LeSS (Large Scale Scrum) approach is used. LeSS is a large-scale Scrum designed for multiple teams working on a single product. This approach involves two-week sprint durations. The Scrum Master is a specialist from the Management Team acting as a Delivery Manager. Effort estimation, measured in story points, is used for task completion. Each task that can be divided into smaller parts is logged in the Jira backlog and allocated among the respective teams by the Management Team. The planning process is conducted by the Management Team with the participation of lead developers and, if necessary, all members of the development team. Planning poker, which entails consensus-based complexity estimation, is used. A pessimistic outlook is used to set task completion deadlines, allowing for time buffers and flexibility in case of complications. The Scrum process incorporates a dependency management approach involving active analysis and minimization of risks related to intra-team or inter-team dependencies. Using Jira as a ticket management system. Using Confluence as a knowledge base for documentation. Using Git repositories for source code collaboration. In the Scrum framework, the Definition of Ready (DoR) represents the criteria a task (User Story) must fulfill before work begins. These conditions determine when a User Story is ready for execution and inclusion in a sprint. Having clear DoR for backlog items is important for the team. The readiness criteria include: User Story/task is clearly defined and estimated at a high level. Technical priorities are set based on dependencies or technical capabilities. User story/task includes a detailed description, acceptance criteria in list format, non-functional requirements, and risks. Managers/architects understand what and how to do and have clarifying questions. User story/task is in one of the statuses: \"In Analysis,\" \"Open,\" \"Blocked.\" User story/task has a link to the corresponding Epic. User story/task is assigned to the responsible development team. Development phase of the project is specified for the story/task. User story/task is independent. User story/task is approved and prioritized by the client based on stated requirements during grooming sessions. All blocking factors for sprint stories/tasks are resolved. Acceptance criteria are clearly described and understood from a development and testing perspective for the development and quality control teams. Story/task name may contain specific prefixes for designation: [SPIKE], [POC], [DESIGN]. Each user story/task is a tested functional unit, and the tester understands how to verify it and what to do before (setting up the test environment, preparing test data, etc.). User story/task is in the \"Ready for Development\" status. All sub-tasks are well-defined (one or two days of development for each) and assigned to executors. Each sub-task should have one of the following prefixes based on specialization: [UX], [BA], [BE], [FE], [DB], [DEVOPS], [QA], [TW], [AUTO]. For data modeling user stories/tasks, a link to the Knowledge Base page with approved data models should be provided. For business process modeling user stories/tasks, a link to the Knowledge Base page should be available, containing the following information: Integration point description. Form field description. User flow description. UX/UI layouts. Definition of Done (DoD) is a set of conditions under which a task or user story can be considered completed (\"Done\"). These criteria are developed for user stories to provide the development team with a clear understanding of the expected outcome of the work. Success Criteria: Development completed: Code review conducted according to internal standards; Code successfully applied (merged) to the Master branch; Static code analysis and deployment completed (no critical issues – Unit test coverage > 80%); Functionality tested in the \"UAT-Integration\" environment; Automated security scanning performed using SAST, SCA, and DAST scanners. Successful development testing in the \"UAT-Integration\" environment. Successful manual testing. Automated tests developed and passed on to CI/CD (meeting all acceptance criteria). Execution time of user stories/tasks recorded in Jira. Outcome of story/task can be demonstrated to the Client in the UAT environment. Status of user story/task set to \"Closed\" in Jira. In case of defects identified, all detected defects created, sorted, assigned, and planned. Semantic versioning of the Platform and Platform components is used as the approach to system release management. The general approach includes three main release types: MAJOR — major version, including incompatible API changes. MINOR — minor version, including backward-compatible functional additions. PATCH or HOTFIX — version including error fixes with backward compatibility. Platform and Platform component releases are independent. Sprint duration is two weeks. The release numbering template for the Platform and Platform components is currently as follows: 1.X.X, where X represents the functionality extension, release version. For example, 1.9.5. After each release, a new Jenkins pipeline is created with the name release-1-X-X using the EDP Admin Console. Specialized methodologies and tools known as Code quality control are used to ensure high-quality code during software development. The primary method utilized by developers is static code analysis. Static code analysis is a software analysis methodology performed without actual program execution. The initial code is subjected to testing using specialized software. The following tools are employed for conducting static code analysis: IntelliJ IDEA — an integrated development environment that analyzes code in open files, highlighting problematic areas during input. IntelliJ IDEA also allows manual initiation of checks or a set of checks on a selected set of files, providing a detailed report on all issues found in the code. SonarQube — an open-source platform designed for continuous analysis and code quality checking, detecting errors and security vulnerabilities through static code analysis. The tool is used in Jenkins pipelines when creating pull requests for changes to the master branch, as well as during the merging of a developer’s branch into the master branch. Semgrep — a static code analyzer that identifies potential errors and vulnerabilities in Java programs. Yelp Detect-secrets — a code analyzer that helps detect inadvertently stored secrets in the code. Checkmarx KICS (Keeping Infrastructure as Code Secure) — an open-source solution for static analysis of infrastructure described in code. Trivy — a static scanner for Docker images that detects vulnerabilities and configuration errors. Developers employ code coverage testing to ensure high-quality code. Code coverage metrics from analysis tools should exceed 80%. The following tools are used to check code coverage through testing: IntelliJ IDEA — an integrated development environment for software. Code coverage in IntelliJ IDEA allows you to see how your code has been executed. The tool also allows you to assess how well your code is covered by unit tests, enabling you to evaluate their effectiveness. IntelliJ IDEA applies several local plugins for these purposes, such as EMMA, JaCoCo, and others. SonarQube — an open-source platform designed for continuous inspection and code quality checking, offering automated code review with static code analysis for error and security vulnerability detection. To ensure high quality and \"cleanliness\" of code written by developers, the method of unit testing is used. Code coverage by unit tests should exceed 80%. Unit testing is a software testing method that involves testing each module of a program’s code individually. A module refers to the smallest part of the program that can be tested. In procedural programming, a module can refer to an individual function or procedure. In the design and development process, the approach of decomposing parts of the information system into separate modules is employed, each of which is thoroughly tested. For conducting unit testing, developers use the following tools: JUnit; AssertJ; Wiremock; MockMvc; Spring-boot-test. Standards and recommendations for conducting unit testing by developers in the development of this information system are described in Modular testing standards section of this document. Automated software testing is a part of the quality control process in software development. It utilizes software tools to execute tests and verify execution results, helping to reduce testing time and simplify the process. To carry out proper automated testing procedures, a set of professional tools/instruments is used. The list of tools involved in Platform testing is provided in the \"Platform testing tools\" table (see below). Several categories of tools are identified: Information Storage and Exchange Tools — tools intended for storing and creating project documentation, serving as a single entry point to the project. Testing Tools — tools used during manual and automated testing. Monitoring Tools — tools used for monitoring the platform’s status and displaying it on configured monitors. Table 1. Platform testing tools Category Tool name Information storage and exchange tools Requirement management system JIRA, Confluence Test case management system JIRA Plugins Defect management system JIRA Інструменти тестування Testing tools API Contracts SoapUi, RestAssured, Postman SOAP Contracts SoapUI,JAX-WS Web applications Selenium WebDriver, Cucumber або похідні Desktop system (Camunda) TBD Data testing WireMock (data masking) Integration with Trembita (UA-specific) SoapUi Load testing Gatling Security testing owasp zap — DAST trivy — continer security/SCA secrets scanner — detect-secrets from yelp Iaac security — kics from checkmarx semgrep from owasp — SAST Web content accessibility testing Wave (Web Accessibility Evaluation Tool) Monitoring tools Monitoring system Prometheus Data visualization system Grafana The overall scope of functional and non-functional testing, as well as the testing methodology (strategy) of the information system, is detailed in the testing:functional-testing/functional-testing.adoc section. Code Review is a systematic process of examining program source code used during the development of the information system. This process is aimed not only at error detection but also serves as a crucial stage in software development, enhancing code quality. During the deployment of information system components, a GitOps approach is employed, based on CI/CD processes. One of the key features of this approach, including security aspects, is that Git serves as the sole entry point for making any changes to the system. A developer initially makes changes to their own protected remote VCS repository branch, using the git commit and git push commands. The next step involves creating a Merge Request (MR) to merge changes from the developer’s branch into the master branch of the repository. Subsequently, members of the development team conduct code reviews, which is a collective process. Its purpose is to review the written code to identify errors and provide suggestions for correction or improvement. To merge code into the master branch, at least one approval from the lead developer of the team is required. The merging of changes discussed within the created Merge Request is carried out by an authorized person with appropriate access rights. Standard methodology, Code refactoring, is employed to improve code quality and optimization. Code refactoring is typically conducted in two scenarios: Code refactoring within a code review to address critical errors and improve application functionality. Code refactoring as part of system optimization (non-critical tasks). Optimization of source code is determined by, but not limited to, the following criteria: Naming; Clean code principles; Performance optimization: RAM, CPU, queries per second, etc.; Code optimization; Simplification of API contracts. The development of the Platform adheres to the following principles (non-functional requirements): Performance efficiency; Security; Reliability; Portability; Operability; Modifiability; Verifiability; Interoperability.","title":"Software development and quality control practices","component":"platform","version":"1.9.6","name":"coding-standards","url":"/platform/1.9.6/platform-develop/coding-standards.html","titles":[{"text":"1. Approaches, methodologies, and standards of software development","hash":"_approaches_methodologies_and_standards_of_software_development","id":1},{"text":"1.1. Development approaches and methodologies","hash":"_development_approaches_and_methodologies","id":2},{"text":"1.2. Coding standards","hash":"_coding_standards","id":3},{"text":"1.2.1. Design standards and recommendations","hash":"_design_standards_and_recommendations","id":4},{"text":"1.2.2. Code styling standards (code style)","hash":"_code_styling_standards_code_style","id":5},{"text":"1.2.3. Git workflow standards","hash":"_git_workflow_standards","id":6},{"text":"1.2.4. POM (project object model) working requirements","hash":"_pom_project_object_model_working_requirements","id":7},{"text":"1.2.5. Modular testing standards","hash":"unit-testing-standards","id":8},{"text":"1.2.6. Clean code requirement","hash":"_clean_code_requirement","id":9},{"text":"1.2.7. Using SQALE metrics for technical debt assessment and management","hash":"_using_sqale_metrics_for_technical_debt_assessment_and_management","id":10},{"text":"2. Software development methodologies","hash":"_software_development_methodologies","id":11},{"text":"2.1. System delivery structure","hash":"_system_delivery_structure","id":12},{"text":"2.1.1. Development and management teams","hash":"_development_and_management_teams","id":13},{"text":"2.1.2. Adoption of Agile methodology","hash":"_adoption_of_agile_methodology","id":14},{"text":"2.1.3. Inter-Team collaboration tools","hash":"_inter_team_collaboration_tools","id":15},{"text":"2.1.4. Usage of Scrum artifacts","hash":"_usage_of_scrum_artifacts","id":16},{"text":"2.1.4.1. Definition of Ready (DoR) artifact","hash":"_definition_of_ready_dor_artifact","id":17},{"text":"2.1.4.2. Definition of Done (DoD) artifact","hash":"_definition_of_done_dod_artifact","id":18},{"text":"2.1.5. Approaches to Information System (IS) release management","hash":"_approaches_to_information_system_is_release_management","id":19},{"text":"2.1.5.1. Sprint and Release numbering","hash":"_sprint_and_release_numbering","id":20},{"text":"3. Code quality control","hash":"_code_quality_control","id":21},{"text":"3.1. Static code analysis","hash":"_static_code_analysis","id":22},{"text":"3.2. Code coverage testing","hash":"_code_coverage_testing","id":23},{"text":"3.3. Unit testing","hash":"_unit_testing","id":24},{"text":"3.4. Automated testing coverage","hash":"_automated_testing_coverage","id":25},{"text":"3.4.1. Platform testing tools","hash":"_platform_testing_tools","id":26},{"text":"3.5. Source code review (Code review)","hash":"_source_code_review_code_review","id":27},{"text":"3.5.1. Code review process in the context of information system development","hash":"_code_review_process_in_the_context_of_information_system_development","id":28},{"text":"3.5.2. Code refactoring","hash":"_code_refactoring","id":29},{"text":"4. Monitoring non-functional requirements compliance","hash":"_monitoring_non_functional_requirements_compliance","id":30}]},"7":{"id":7,"text":"The page is under development. Security Testing","title":"Quality Attributes Testing","component":"platform","version":"1.9.6","name":"testing-overview","url":"/platform/1.9.6/testing/testing-overview.html","titles":[{"text":"Content","hash":"_content","id":1}]},"8":{"id":8,"text":"New functionality has been added to the Citizen and Officer portals, which reliably prevents the loss of entered data without saving. Now, when a user clicks on buttons that do not have a navigation function or follows a link on the form editing page, a special system warning[1] in the form of a pop-up window appears if there is unsaved data, asking the user to confirm the action. The message appearing in the pop-up window contains a request for action confirmation, allowing the user to confirm or cancel the information entered on the form. This innovation enables users to save their data and avoid data loss. The warning windows are triggered when interacting with the following elements of the portals' interface: Return to the list of tasks in progress and Officer portal for the Officer portal (officer-portal). To the Ordered services or Citizen portal (citizen-portal). The browser’s Back button. Figure 1. Interaction with interface elements to trigger the warning window in the example of the Officer portal. Figure 2. System warning window for confirming actions regarding saving or canceling the data entered on the form. If the action is confirmed, the user leaves the page. If the action is canceled, the warning window closes, and the user remains on the current page. Please also familiarize yourself with the following functionality: Modeling confirmation dialogues in the Button component. 1. Floating windows (pop-up windows) can be both configured in the regulation on the navigation buttons within the Button component and system-wide. However, system-wide windows are not adjustable.","title":"System warning windows for action confirmation in User portals","component":"platform","version":"1.9.6","name":"alerting-popups","url":"/platform/1.9.6/user/alerting-popups.html","titles":[]},"9":{"id":9,"text":"On this page: 1. General overview 2. User authentication logic 3. Authenticating with the qualified electronic signature 3.1. Prerequisites 3.2. Passing authentication 4. Related pages The Platform implements sophisticated mechanisms for authenticating end-users, ensuring proper data protection, and mitigating unauthorized access to information. The foundation of the authentication mechanism is the Keycloak Identity and Access Management (IAM) system, which interacts with the Service for interacting with qualified electronic signatures and the integrated electronic identification system ID.GOV.UA (ICEI). Additionally, the platform includes specific authentication services for Officers and Citizens — so called authenticators (see User authentication logic). Furthermore, the platform utilizes the Kong API Gateway to manage, protect, and monitor API access, providing an additional layer of security and control over data and platform services. The interaction between all components guarantees a reliable authentication mechanism that adapts to different types of users and their roles within the system. As a result, users can confidently work with registries, knowing that their personal data and information are well-protected, and the possibility of unauthorized access to the system is minimized. Currently, the Platform supports 2 types of authentication: User authentication using qualified electronic signatures. User authentication using the integrated electronic identification system ID.GOV.UA (ICEI) — an external provider of identification data. The following services are responsible for authenticating users in the registry: Citizen authentication service — keycloak-ds-citizen-authenticator. Officer authentication service — keycloak-ds-officer-authenticator. Issues with using strictIgnoreCase comparison strategy: The fullName attribute in the qualified electronic signature, containing the individual’s full name, is non-standardized. It is filled in without a uniform approach. This leads to discrepancies in the fullName value when a qualified electronic signature is used or reissued by a different organization. For example, a different qualified electronic signature may contain multiple spaces instead of one, include or exclude special characters such as apostrophes or dashes. These changes in the fullName attribute result in the user being unable to log in to their portal with a new key since the fullName value in the qualified electronic signature does not match the value stored in the Keycloak service database. The Keycloak service saves the value of the fullName attribute with the qualified electronic signature, that was used at the first access to the registry (self-registration). The implementation of the authentication strategy strictIgnoreCase does not take this issue into account and operates based on converting the string to lowercase and removing only whitespace characters. To address this, a new strategy of fuzzy string comparison has been implemented, which does not consider special characters (alphanumericIgnoreCase). The fuzzy string comparison strategy applies the following validation rules: Before comparison, strings are converted to lowercase. All characters except Latin and Cyrillic letters and digits are removed. The length of the string after normalization should be at least 50% of the original length. User authentication using qualified electronic signature takes place with the use of a third-party widget IIT, installed on the browser side. This widget facilitates operations that require data encryption and signing. Additionally, a service for working with the qualified electronic signature is utilized, which employs a separate cryptographic library from IIT on the Platform side to verify the integrity and immutability of data transmitted from the web client. Users interact with the platform and the registries deployed on it solely through implemented web interfaces — the Citizen portal and the Officer portal- accessible from any up-to-date industry-recognized browser. Authentication with the qualified electronic signature involves using asymmetric encryption algorithms that ensure the cryptographic protection of user data. To access the portal’s functions, users must sign in to the system by following the steps described below in the instructions. Authentication with the qualified electronic signature is available for users of both the Officer’s Cabinet and the Citizen Service Recipient’s Cabinet. Obtain a personal data signing key from one of the Accredited Key Certification Centers (AKCC). The public key will be stored on the server of the provider, while the private (closed) key must be kept on one of the secure media accessible for use when entering the system with the qualified electronic signature (see step 3 in Passing authentication). The authentication process with the qualified electronic signature is identical for both officers and citizens. Let’s consider the authentication process using the example of the Citizen portal. Step 1: Open the login page of the Citizen portal at http://citizen-portal--main.apps.envone.dev.registry.eua.gov.ua/ if you are a physical, legal entity, or individual entrepreneur and wish to order a service. Open the login page of the Officer portal at http://officer-portal--main.apps.envone.dev.registry.eua.gov.ua/officer/ if you are an authorized officer providing services. The service addresses mentioned above are templates. Replace registry-name in the service URL with the name of your registry. If you have any questions, contact the administrator. Step 2: Click on Login to the portal. Step 3 Choose the service type: For citizens — if you wish to log in as a physical person (this parameter is set by default). For business — if you wish to log in as an individual entrepreneur or legal entity. Select the type of personal key medium. Choose File medium (this parameter is set by default). In the Qualified trust service provider field, select one of the accredited centers for key certification (ACCS) by clicking on the dropdown item or leave the default value Automatically define. Select the personal key: In the Personal key field, click Select. Find the personal key (e.g., Key-6.dat) and click Open to confirm. In the Key protection password field, enter the key protection password. Click Read to verify the entered data. Step 4 On the data signing form, click Log in to enter the portal. (Alternatively) Click Change key if you need to select another key for login. If an incorrect key is used, the server returns an error during the data signing step: If incorrect identification data (e.g., key protection password, etc.) is entered, the server returns the following error during the data signing step: Upon successful authentication in the Citizen portal, during the first login, the individual will be prompted to undergo the onboarding[1] process. After completing this process, the individual will gain access to the portal’s functions. The onboarding process is not applicable to the Officer portal. Therefore, before logging in, make sure that the access administrator has created the corresponding user. Configuring user authentication 1. Onboarding refers to the registration process in the system to grant access rights to the features of the Citizen portal.","title":"Registry user authentication","component":"platform","version":"1.9.6","name":"citizen-officer-portal-auth","url":"/platform/1.9.6/user/citizen-officer-portal-auth.html","titles":[{"text":"1. General overview","hash":"_general_overview","id":1},{"text":"2. User authentication logic","hash":"auth-logic","id":2},{"text":"3. Authenticating with the qualified electronic signature","hash":"kep-auth","id":3},{"text":"3.1. Prerequisites","hash":"_prerequisites","id":4},{"text":"3.2. Passing authentication","hash":"auth-process-pass","id":5},{"text":"4. Related pages","hash":"_related_pages","id":6}]},"10":{"id":10,"text":"During the execution of business processes, internal errors may occur, which can be related to the platform’s components' viability, integration with external systems, errors in business process modeling, or permission settings, among others. To resolve any issues that may arise, you have the option to reach out to our support service via email from your User portal. (Optional) Firstly, attempt to refresh the page by clicking on the Refresh button if it is offered. If the problem persists, please contact our support service. To do so, click on the mailbox icon ✉ in the Need Help? section on the right-hand side of the page. If you have previously set up the mailto option, a window to compose an email using the default mail service chosen by the user will open. Otherwise, you will be prompted to configure it. Example. Setting up the mailto option using the Outlook client on Windows OS. Compose an email message and send it to our support service. By default, the email body will include the trace id of the error (if available) and the URL of the page where the error occurred. If you have any additional information that could assist or expedite the resolution of the problem, please include it in the email body. Please also refer to Contacting support for non-critical errors.","title":"Contacting support in case of critical errors","component":"platform","version":"1.9.6","name":"error-email-support","url":"/platform/1.9.6/user/error-email-support.html","titles":[]},"11":{"id":11,"text":"","title":"User documentation","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/user/overview.html","titles":[]},"12":{"id":12,"text":"On this page: 1. General overview 2. Business process for uploading .asics and .p7s file formats The Platform provides the capability to upload files of various formats to the data factory through user cabinet forms. Users can upload individual files or an array of files in specific formats. Currently, the following formats are supported for uploading: .pdf .jpg .png .asics .p7s For more details on modeling file uploads on UI forms and defining permissible formats within the business process, refer to Loading multiple files in one field using the File component. A separate case involves the functionality of uploading/reloading data to the database as an array from a CSV file. For more details, see Modeling the business process for loading data from a CSV file as an array into a database In this article, we will explore one example of uploading files in specific formats, .asics, and .p7s, in the Officer and Citizen portals. The content of the files and the validity of the qualified electronic signature used to sign them are not verified. Files in .asics and .p7s formats are documents that have already been signed with the qualified electronic signature. Certain registers, such as the Registry of damaged and destroyed property, have a legislative requirement to upload assessment acts in the form of files that have been pre-signed with the qualified electronic signature of the issuing organization. For example, the general process could be as follows: The commission creates an assessment act for the damaged property. An authorized person uploads the act in electronic form (file formats *.pdf, *.docx, etc.) on the website https://id.gov.ua/. The authorized person signs the file using the qualified electronic signature. The signed act is then exported in .p7s or .asics format. Subsequently, the signed act needs to be uploaded within the framework of the business process to the register on the platform for further processing. Access your User portal. For more details on authentication of the registry users, follow the link. Go to the Available services section, and select the pre-modeled business process for file uploads. Upload files to the form: drag and drop or select from your storage directory. Click Next for file processing. Upon successful operation, the user will see the corresponding notification in the upper right corner of the screen: ✅ Task completed successfully! If the files do not match the specified format, the user will receive a validation error: Supported formats *.p7s, *.asics. Please upload files of the supported format. Proceed to the qualified digital signature data signing form, read the personal key, and click Sign. Upon successful data signing, the user will receive a corresponding notification in the upper right corner of the screen: ✅ Task completed successfully! You can also edit the uploaded files on a separate UI form of the business process, meaning you can remove incorrect files and upload correct ones by clicking the (x) mark on the left side of the file. When attempting to upload a file with the same name, the user will receive a validation error: A file with this name has already been uploaded. After editing and uploading the correct files, the user will receive the following notification in the upper right corner of the screen: ✅ Task completed successfully! Sign the data using qualified electronic signature and complete the process. Proceed to the list of completed tasks and verify that all tasks from the process have indeed been completed. As a result, the files will be uploaded in an array to the data factory.","title":"Uploading files in .p7s and .asics format in User portals","component":"platform","version":"1.9.6","name":"upload-multiple-files-p7s-asic","url":"/platform/1.9.6/user/upload-multiple-files-p7s-asic.html","titles":[{"text":"1. General overview","hash":"_general_overview","id":1},{"text":"2. Business process for uploading .asics and .p7s file formats","hash":"_business_process_for_uploading_asics_and_p7s_file_formats","id":2}]},"13":{"id":13,"text":"Officers and citizens in their portals have the option to receive messages/notifications about the successful completion of tasks within business processes. Such notifications are the result of successfully completing task execution steps. Let’s consider an example of completing a task with data signing using a qualified digital signature in the Officer portal. Log in to your User portal. For more information about user authentication in the registry, follow the link. Open the My tasks section. In the list of tasks awaiting execution, find the necessary task and click Execute. Verify the accuracy of the entered data on the form and make changes if necessary. Scroll down the page and locate the signature widget. Choose a personal key (qualified electronic signature), enter the key protection password, and read the entered data. In the data signature window, verify the correctness of the selected key and click Sign. After successful completion of the task by the authorized person, a green notification will appear in the top right corner of the page with the following message: Congratulations! Task has been successfully completed! The notification will be displayed for 8 seconds, unless the user closes it earlier or navigates to another page. The notification will remain visible as long as the user keeps the cursor on it.","title":"Notifying about successful task completion in User portals","component":"platform","version":"1.9.6","name":"user-notifications-success-task","url":"/platform/1.9.6/user/user-notifications-success-task.html","titles":[]},"14":{"id":14,"text":"On this page: 1. Job description and requirements for the technical platform administrator position 2. Related pages Document in review The responsibilities and requirements for a candidate applying for the position of a technical platform administrator include, but are not limited to, the following categories: Management of technical components of the platform: Deployment of the platform components in cloud environments, including AWS and vSphere. Management of the platform components and registries with OpenShift (OKD) Deployment and configuration of the platform infrastructure components using Terraform. Container management: Container deployment, configuration, and management using Cri-o Runtime based on an OKD cluster. Container operations analysis and optimization Proficiency in using Helm for package deployment and OpenShift (OKD) configuration management. Distributed file system: Understanding basic principles and practices applicable to distributed file systems, namely Ceph. Deployment and configuration of Ceph clusters. Storage and management of data volumes in Ceph. Backup and recovery: Setting up backup and disaster recovery of platform resources using Velero and pgBackRest. Having experience working with object storage, including Minio for storing backups. Monitoring and logging: System metrics monitoring and analysis using Grafana and Prometheus. Ensuring smooth operation of the logging system using Elasticsearch, Fluentd and Kibana. Understanding service monitoring and tracing principles. Using Kiali and Jaeger. Automation: Experience working with Jenkins for organizing continuous integration and deployment (CI/CD) processes. Skills in configuring and using Git and Gerrit VCS for integration, versioning, and code review. Proficiency with Nexus for artifact storage and management. Secrets management: Understanding and experience working with identity-based secrets and encryption management system such as HashiCorp Vault, and others. Roles, policies, and access to secrets configuration and management Authentication and authorization: Keycloak system configuration and management. Control over user access to resources. Understanding and experience working with authentication systems, namely Keycloak and Kong API management. Understanding of authorization mechanisms, including RBAC and Kubernetes RBAC Authorization. Database management: Deployment, configuration, and management of PostgreSQL databases using CrunchyData Postgres Operator and Pgpool. Monitoring and analysis of database metrics using Grafana and Prometheus. Message brokers: Using Kafka for processing large data streams, knowledge in error handling mechanisms, replication, and access management. Deployment and configuration of Kafka Schema Registry for data schema management and Strimzi for Kafka cluster management and monitoring. Ensuring platform reliability and security: Vulnerability tracking and providing troubleshooting recommendations. Control over the use of strong passwords and their regular updating. Configuration and usage of Kong for internal resources access management. Understanding of DevSecOps principles and practices. Performing regular platform security audits. Debugging and monitoring of inter-service communication using Istio. For detailed information on the technologies that an administrator should use when working with the platform, please refer to Platform technology stack.","title":"Technical platform administrator: duties and responsibilities","component":"platform","version":"1.9.6","name":"admin-profile","url":"/platform/1.9.6/admin/admin-study/admin-profile.html","titles":[{"text":"1. Job description and requirements for the technical platform administrator position","hash":"_job_description_and_requirements_for_the_technical_platform_administrator_position","id":1},{"text":"2. Related pages","hash":"_related_pages","id":2}]},"15":{"id":15,"text":"On this page: 1. General description 2. Setting up a schedule 3. Checking the created backups The platform allows for managing the schedule of creating backups for central components and the time for storing such backups in the backup repository. The backups of components are created using the velero tool and stored in a secure backup repository called minio, located outside of the Platform cluster. The backup schedule is configured in the unix-cron format on the Control Plane administrative panel interface. The retention time for backups must be greater than or equal to one, be a whole number, and not contain special characters. The list of central components for which backup scheduling and retention time can be configured includes: Artifact repository - central component nexus. Control panel for the Platform and Registries - central component control-plane. User Management - central component user-management. Monitoring - central component monitoring. The values are stored in the values.yaml configuration file in the cluster-mgmt repository. The corresponding parameters are applied through the MASTER-Build-cluster-mgmt Jenkins pipeline. Log in to the Control Plane console as the Platform administrator. Go to the Platform Management section and click on EDIT. Navigate to the Backup schedule section and configure the settings for the required central components. Currently, they are: Artifact repository - central component nexus. Control panel for the Platform and Registries - central component control-plane. User Management - central component user-management. Monitoring - central component monitoring. The backup schedule is configured in the unix-cron format and is determined by the server’s time in UTC. If you are configuring the schedule for Ukraine, take into account the +2 hours offset (UTC+2) in winter time and +3 hours offset (UTC+3) in summer time. Use the https://crontab.guru/ resource, a simple and convenient cron expression editor, to better understand the logic of schedule settings. Configure the schedule for the Nexus component and set the backup retention time in days: In the Schedule field, enter, for example, the following value: 5 11 * * MON-FRI. Use a space as a separator. This means that a backup for the nexus component will be created every day from Monday to Friday at 11:05 UTC time (13:05 Kyiv time). In the Retention time (days) field, enter, for example, the following value: 5. This means that the backup will be stored in the repository for 5 days. Configure the schedule for the Control Plane component and set the backup retention time in days: In the Schedule field, enter, for example, the following value: 6 11 * * MON-FRI. Use a space as a separator. This means that a backup for the control-plane component will be created every day from Monday to Friday at 11:06 UTC time (13:06 Kyiv time). In the Retention time (days) field, enter, for example, the following value: 6. This means that the backup will be stored in the repository for 6 days. Configure the schedule for the User Management component and set the backup retention time in days: In the Schedule field, enter, for example, the following value: 7 11 * * MON-FRI. Use a space as a separator. This means that a backup for the user-management component will be created every day from Monday to Friday at 11:07 UTC time (13:07 Kyiv time). In the Retention time (days) field, enter, for example, the following value: 7. This means that the backup will be stored in the repository for 7 days. Set up the schedule for the Monitoring component and specify the backup retention period in days: In the Schedule field, enter, for example, the following value: 7 11 * * MON-FRI. Use a space as a separator. This means that a backup for the monitoring component will be created every day from Monday to Friday at 11:07 UTC time (13:07 Kyiv time). In the Retention time (days) field, enter, for example, the value 8. This means that the backup will be stored in the repository for 8 days Click CONFIRM to save the changes. As a result, a request for update with the status New will be generated. Go back to the Platform Management section, scroll down the page, and find the Update requests section. Open the generated request by clicking the view icon — 👁. The proposed changes will be saved to the values.yaml configuration file in the cluster-mgmt repository upon confirmation. In the new window, compare the two versions of the changes, make sure the data you entered is correct, and click Confirm. You can also reject the changes to the configuration immediately by clicking Reject. The comparison window allows you to conveniently check the two versions of the changes: the current one (on the left) and the new one (on the right). As a result, the request will change the state to confirmed. At the specified time, the MASTER-Build-cluster-mgmt Jenkins pipeline will be triggered. It applies the parameters of the specified configuration and creates backups in the backup repository. Wait until the code build is completed. This may take a few minutes. You can check the current status and execution result by clicking the CI link on the interface. At the specified date and time, backups should be created according to the schedule specified in the configuration (see — Setting up a schedule_). You can check this as follows: Log in to the Openshift console as the Platform administrator. Obtain an API token for cluster access via oc login: Click Copy login command. Log in through Keycloak. Click Display Token. Copy the oc login API token. Open a terminal/console, paste the obtained token, and execute the login. Retrieve the list of backups using the command: velero get backups As a result, you will get a list of backups for central components, including their names, statuses, creation dates and times, as well as the retention period for these backups in the repository. Note that the backup creation time is shown in the target time zone (UTC+2, Kyiv time), not the server time (UTC). After the retention period expires, the backup system deletes outdated backups.","title":"Setting up the central components backup schedule","component":"platform","version":"1.9.6","name":"backup-schedule-cluster-mgmt","url":"/platform/1.9.6/admin/backup-restore/backup-schedule-cluster-mgmt.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Setting up a schedule","hash":"schedule-setup","id":2},{"text":"3. Checking the created backups","hash":"_checking_the_created_backups","id":3}]},"16":{"id":16,"text":"On this page: 1. General description 2. Setting up a schedule 3. Checking the created backups The platform provides the ability to manage the schedule for creating backup copies of registry components and the time span for storing such copies in the backup repository. Backup copies of components are created using the velero tool and stored in a secure minio backup repository located outside the Platform cluster. The backup schedule is configured in the unix-cron format on the Control Plane administrative panel interface. The retention period for backup copies must be greater than or equal to one unit, be a whole number, and not contain special characters. The values are stored in the registry configuration deploy-templates/values.yaml file. The corresponding parameters are applied through the Create-registry-backup- Jenkins pipeline. Log in to the Control Plane console as the Registry administrator. Go to the Registries section and select the required one. Click the Edit button located in the upper right corner. You can also set up a backup schedule and retention time while creating a registry. However, it is not mandatory. Go to the Backup section. Here you can set the schedule for creating backup copies and the retention period. Turn the toggle on and configure the schedule for creating automatic backup copies. By default, the Set automatic backup copy toggle is turned off for new registries. The backup schedule is configured in the unix-cron format and is defined based on Kyiv time. By default, the Europe/Kiev time zone is set in the values.yaml configuration and at the Jenkins pod level as an environment variable. The offset of +2 hours (UTC+2) in winter and +3 hours (UTC+3) in summer is taken into account. Use the https://crontab.guru/ resource, a simple and convenient cron expression editor, to better understand the logic of schedule settings. In the Schedule field, enter, for example, the following value: 5 11 * * MON-FRI. Use a space as a separator. This means that a backup copy for the registry environment will be created every day from Monday to Friday at 10:05 according to Kyiv time. After entering the backup schedule, a hint appears on the interface showing the time of the next 3 backup creation runs. In the Retention time (days) field, enter, for example, the following value: 5. This means that the backup will be stored in the repository for 5 days. The value can only be a positive number and should not be set to less than 1 day. It is recommended to set the retention time longer than the period between creating copies. Click CONFIRM to save the changes. As a result, a request for update with the status New will be generated. Go back to the Registries section, scroll down the page, and find the Requests for update section. Open the generated request by clicking the view icon — 👁. The proposed changes will be applied to the deploy-templates/values.yaml configuration file upon confirmation. In the new window, compare the two versions of the changes, make sure the data you entered is correct, and click Confirm. You can also reject the changes to the configuration immediately by clicking Reject. The comparison window allows you to conveniently check the two versions of the changes: the current one (on the left) and the new one (on the right). As a result, the request will change the state to confirmed. At the specified time, the Create-registry-backup- Jenkins pipeline will be triggered. It applies the parameters of the specified configuration and creates backups in the backup repository. Wait until the code build is completed. This may take a few minutes. At the specified date and time, backups should be created according to the schedule specified in the configuration (see --Setting up a schedule) You can check this as follows: In the registry information, open the Registry components section and navigate to Jenkins. Go to the folder with the corresponding registry and select the Create-registry-backup- pipeline. If the pipeline is highlighted in green, the build can be considered successful. Open the build details. Go to the console output (Console Output) to view the technical log of the pipeline execution. Scroll down the page and make sure that the registry backup has been created. Example 1. Console Output. Successful creation of registry backup [INFO] Velero backup - external-1-2023-02-17-17-07-36 done with Completed status This expression indicates that a backup has been created for the registry with a specific name (here - external-1), the date and time of backup creation, and the successful completion status. After the retention period expires, the backup system deletes outdated backup copies.","title":"Registry backup creation schedule and retention time management","component":"platform","version":"1.9.6","name":"backup-schedule-registry-components","url":"/platform/1.9.6/admin/backup-restore/backup-schedule-registry-components.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Setting up a schedule","hash":"schedule-setup","id":2},{"text":"3. Checking the created backups","hash":"_checking_the_created_backups","id":3}]},"17":{"id":17,"text":"On this page: 1. Backing up registry 2. Restoring registry After a successful deployment of the registry and regulations, the Platform administrator can create a backup of the registry, which will be stored in a secure backup repository (for example, Minio). To back up a registry this, follow these steps: Log in to the Control Plane using the previously created login and password. Go to the Registries section and select the registry for backup. Go to the Configuration section at the Registry information tab, click on the link under CI to open Jenkins, navigate to the All tab, and find the job named Create-registry-backup-backup-test (see the image below). For more details, see Checking registry deployment details Open the job and click Build with Parameters to launch the Create-registry-backup-backup-test job. Click Build. If the job is successfully executed, a backup of the registry with its regulations is created and uploaded to the corresponding backup repository directory. Login to the Control Plane using the previously created login and password. Go to the Registries section and select the Registry that needs to be restored. Go to the Configuration section, click on the link under CI to open Jenkins, navigate to the All tab, and find the Restore-registry-backup-test job (see the image below). Open the job and click Build with Parameters to launch the Restore-registry-backup-backup-test job. Click Build. Next, in the parameter input step, select the backup version to restore. To do this, go to the console output (the Console Output section on the left panel) and click Input Requested. Select the backup version from the list and click Proceed. If the Restore-registry-backup-test job is successfully executed, the registry will be restored to the selected backup version.","title":"Registry backing up and restoring","component":"platform","version":"1.9.6","name":"control-plane-backup-restore","url":"/platform/1.9.6/admin/backup-restore/control-plane-backup-restore.html","titles":[{"text":"1. Backing up registry","hash":"_backing_up_registry","id":1},{"text":"2. Restoring registry","hash":"_restoring_registry","id":2}]},"18":{"id":18,"text":"On this page: 1. Central components backup Deletion of backup from storage 2. Central components restoring The platform administrator has the ability to create a backup of central components, which will be stored in a secure backup repository (for example, Minio). To do this, follow these steps: Log into the OpenShift of the respective cluster. Copy the login command—click the Copy login command button under the user profile name: After being redirected to the token display page, click the Display Token link: Copy the access token to the OpenShift of the cluster into which the backup will be performed: Open Git Bash, paste the copied token, and press Enter: $ oc login --token=sha256~NyHYErh_JwJQаааааyIfmbbE-UY_Y3s_diQG422v9Rw --server=https://api.backup.mdtu-ddm.projects.epam.com:6443 To check for existing backups, execute the following command: $ velero get backups To create a new backup, execute the following command: $ velero backup create control-plane-nexus-release1-4-backup-28-10 --include-namespaces control-plane-nexus --ttl 120h where: - control-plane-nexus-release1-4-backup-28-10 — is the folder name in the backup repository where the backup will be stored (the cluster name and backup creation date are provided for convenience); - control-plane-nexus — is the name of the central component for which the backup will be performed; - --ttl 120h — is the backup retention time. To verify if the backup has been successfully created, execute the following command: $ velero backup get where: - Status New — the backup request is new and is in the queue - Status InProgress — the backup creation is in progress - Status Completed — the backup has been created. To delete a backup from storage, execute the following command: $ velero backup delete control-plane-nexus-release1-4-backup-28-10 control-plane-nexus-release1-4-backup-28-10 — is the name of the backup to be deleted. Before starting the process of restoring the central components, ensure that their backup has been created and these components have been removed. To restore a central component for which the backup has been created, execute the following command: $ velero restore control-plane-nexus --from-backup control-plane-nexus-backup-25-10 where: - control-plane-nexus — is the name of the central component to be restored; - backup control-plane-nexus-backup-25-10 — is the folder name in the backup repository where the backup is stored and from which the central component will be restored.","title":"Central components backup and restoring","component":"platform","version":"1.9.6","name":"control-plane-components-backup-restore","url":"/platform/1.9.6/admin/backup-restore/control-plane-components-backup-restore.html","titles":[{"text":"1. Central components backup","hash":"_central_components_backup","id":1},{"text":"Deletion of backup from storage","hash":"_deletion_of_backup_from_storage","id":2},{"text":"2. Central components restoring","hash":"_central_components_restoring","id":3}]},"19":{"id":19,"text":"There may be a situation where the IP addresses change for all master nodes of the Openshift cluster. This can happen when the DHCP server, for some reason, changes the reserved IP addresses assigned to the master nodes. A static IP address is critical for the etcd component of the Openshift cluster. After rebooting the master nodes with the new IP addresses, the system will fail to boot because the etcd components will expect to receive the reserved IP addresses assigned to the master nodes during the installation of the Openshift cluster. This problem can be solved in two ways. The first method involves statically changing the IP addresses for the master nodes. After rebooting, the system will resume functioning. The second method is an extension of the first, except that it allows the master nodes to receive dynamic IP addresses reserved by the DHCP server. To resolve the issue of changing IP addresses for the master nodes, SSH access to the master nodes and DHCP server is required. The step-by-step procedure for restoring the master nodes is as follows: Log in via SSH to the DHCP instance. Stop the DHCP server with the command: systemctl stop isc-dhcp-server. Create a backup copy of the file /var/lib/dhcp/dhcp.lease. Log in via SSH to one of the cluster’s master nodes. Find the relevant network interface using the next command: # nmcli device|grep ovs-interface br-ex ovs-interface *connected* ovs-if-br-ex Verify that it is the correct network interface. Its IP address should match the current network settings, and the only difference should be in IP4.ADDRESS[1] # nmcli device show *br-ex* IP4.ADDRESS[1]: 10.9.1.235/24 Change the instance’s IP address to a static address using the following command, replacing with the desired cluster IP address: # nmcli connection modify br-ex ipv4.addresses /24 Verify that the network is working by executing any network command, such as checking the availability of the gateway with the 'ping' command: # ping 10.9.1.1 Reboot the master node. After rebooting, ensure that the master node is functioning using the correct IP address. Verify that all Openshift service pods are running on this node by executing the following command: # crictl ps Verify that the Openshift cluster API is accessible after performing the above steps. Repeat the procedure for the remaining master nodes to finalize restoring the cluster. The second method includes steps 1-12 from The first method. Start the DHCP server with the command: # systemctl start isc-dhcp-server. Follow the documentation to perform the etcd member replacement (master nodes) in the following order: Sequentially replace the next two non-working etcd members (master nodes). Verify that all three master nodes are functioning normally using the following command: $ oc get nodes NAME STATUS ROLES AGE VERSION mdtuddm-2n5bl-master-0 Ready master 25h v1.20.0+87cc9a4-1079 mdtuddm-2n5bl-master-1 Ready master 25h v1.20.0+87cc9a4-1079 mdtuddm-2n5bl-master-2 Ready master 25h v1.20.0+87cc9a4-1079 Exclude the master node with the static address. After it transitions to the Not Ready state, perform the replacement of this etcd member (master node) according to the documentation. Verify that all three master nodes are functioning normally. Remove the excluded master node with the static IP address.","title":"Restoring the cluster after changing the IP addresses of master nodes","component":"platform","version":"1.9.6","name":"master_ip_repair","url":"/platform/1.9.6/admin/backup-restore/master_ip_repair.html","titles":[{"text":"1. Problem Description","hash":"_problem_description","id":1},{"text":"2. Solution description","hash":"_solution_description","id":2},{"text":"3. Required tools and access for resolving the issue","hash":"_required_tools_and_access_for_resolving_the_issue","id":3},{"text":"4. Master node recovery procedure","hash":"_master_node_recovery_procedure","id":4},{"text":"4.1. The first method","hash":"_the_first_method","id":5},{"text":"4.2. The second method","hash":"_the_second_method","id":6}]},"20":{"id":20,"text":"Central components Central components backup and restoring Setting up the central components backup schedule Registry components Registry backing up and restoring Registry backup creation schedule and retention time management Backing up and restoring registry databases Restoring the cluster after changing the IP addresses of master nodes","title":"Backing up and restoring","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/admin/backup-restore/overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"21":{"id":21,"text":"The Postgres Operator by Crunchy Data (PGO), used for managing registry databases, includes pgBackRest, an open-source solution for backup and restoring. PGO facilitates the execution of many common tasks required throughout the lifecycle of a database, including: Configuring schedules for automatic backup and retention policies. Backing up data to multiple locations. Supporting backup storage in Kubernetes, AWS S3 (or S3-compatible systems like MinIO), Google Cloud Storage (GCS), and Azure Blob Storage. Performing one-time backups Performing point-in-time recovery (PITR). Cloning data to a new database instance. And more By default, the Postgres operational and analytical clusters are configured to continuously archive write-ahead logs (WAL) and create a full backup once a day.The retention policy is set to keep one full backup, so when a new backup is created, pgBackRest cleans up the previous backup and its associated WAL files. pgBackRest provides various types of backups, retention policy configurations, and backup schedule options to customize the system according to desired recovery point objectives (RPO), recovery time objectives (RTO), and space utilization requirements. Schedules can be configured for all three types of backups: full: backup of the entire Postgres cluster. This is the largest among all types of backups. differential backup of all data since the last full backup. incremental: backup of all data since the last full, differential, or incremental backup. Backup schedules are stored in the spec.backups.pgbackrest.repos.schedules section. Each value in this section takes a string in cron format that defines the backup schedule. For example, the backup policy consists of creating a full backup every week on Sunday at 1 AM and creating incremental backups every day at 1 AM, except on Sundays. The configuration should look similar to: spec: backups: pgbackrest: repos: - name: repo1 schedules: full: \"0 1 * * 0\" incremental: \"0 1 * * 1-6\" To manage scheduled backups, PGO will create several Kubernetes CronJobs that perform backups at the specified intervals. The backups will use the configuration you provided. PGO allows you to set backup retention policies for full and differential backups. When the retention period of a full backup expires, pgBackRest will clean up all associated backups and WAL files. For example, if you have a full backup with four associated incremental backups, when the retention period of the full backup expires, the retention period of all its incremental backups also expires. There are two types of repo1-retention-full-type policies that can be set: count: based on the number of backups you want to retain. This is the default value. time: based on the time in days. Full backups older than repo-retention-full will be removed from the repository if there is at least one backup that equals or exceeds the repo-retention-full parameter For example, if we want to retain full backups for 14 days, the most convenient way to do this is through the spec.backups.pgbackrest.global section: spec: backups: pgbackrest: global: repo1-retention-full: \"14\" repo1-retention-full-type: time In this case, if we have 2 backups: one 12-day-old and another 15-day-old, no backups will be deleted because deleting the 15-day-old backup would leave only the 12-day-old backup, which would violate the retention policy of having at least one backup of 14-day age before removing older backups. It may be the case that the daily volume of WAL logs is significant, and saving storage space in the backup repository is more important than the ability to perform point-in-time recovery (PITR) to a significant depth. To configure the retention of WAL logs for a certain number of backups, pgBackRest has the following parameters: repo1-retention-archive: The number of backups for which WAL will be retained. repo1-retention-archive-type: The type of backup for retaining WAL (incr, diff, full). If set to full, pgBackRest will retain WAL for the number of full backups defined by repo-retention-archive. If set to diff, pgBackRest will retain archive logs for the number of full and differential backups defined by repo-retention-archive. If set to incr, pgBackRest will retain archive logs for the number of full, differential, and incremental backups defined by repo-retention-archive. First, you need to configure the spec.backups.pgbackrest.manual section to be able to perform a one-time backup. It contains information about the type of backup you want to create and any other pgBackRest configuration parameters. Let’s configure a custom resource for creating a one-time full backup: spec: backups: pgbackrest: manual: repoName: repo1 options: - --type=full This doesn’t initiate the backup yet - you need to add the postgres-operator.crunchydata.com/pgbackrest-backup annotation to your custom resource. The best way to configure this annotation is by using a timestamp label, so you know when you initiated the backup. For example, for an operational cluster, you can execute the following command to initiate a one-time backup: kubectl annotate -n postgres-operator postgrescluster operational \\ postgres-operator.crunchydata.com/pgbackrest-backup=\"$(date)\" PGO will detect this annotation and create a new disposable backup task! If you plan to make one-time backups with similar parameters in the future, you can leave them in the specification; simply update the annotation to a different value during the next backup. To re-execute the above command, you will need to add the --overwrite flag to update the annotation value, like in the below example: kubectl annotate -n postgres-operator postgrescluster operational --overwrite \\ postgres-operator.crunchydata.com/pgbackrest-backup=\"$(date)\" To restore the database to a specific date and time, you need to add the following to the spec.backups.pgbackrest section: spec: backups: pgbackrest: restore: enabled: true repoName: repo1 options: - --type=time - --target=\"2022-06-09 14:15:11-04\" where --target is the target time for PITR. An example of a restoring target is 2022-06-09 14:15:11-04. To restore the database to a specific backup, you need to add the following to the spec.backups.pgbackrest section: spec: backups: pgbackrest: restore: enabled: true repoName: repo1 options: - --type=immediate - --set=20220602-073427F_20220602-073507I where --set is the name of the target backup. You can view the list of available backups in the S3 backup storage bucket or by executing the command pgbackrest info --stanza=db in the database console. Now, to initiate the restoring process, you need to add the annotation postgres-operator.crunchydata.com/pgbackrest-restore as follows: kubectl annotate -n postgres-operator postgrescluster operational --overwrite \\ postgres-operator.crunchydata.com/pgbackrest-restore=id1 Once the restoring process is complete, you can disable the added configuration: spec: backups: pgbackrest: restore: enabled: false All these operations need to be performed on both the operational and analytical databases. To synchronize data between the operational and analytical databases, perform Synchronize data on the analytical cluster. To clone a database from a backup, you need to add the spec.dataSource section to the manifest that creates a new database instance. To restore to a specific point in time, the section will look similar to the below example: spec: dataSource: pgbackrest: stanza: db configuration: - secret: name: s3-conf global: repo1-path: \"/postgres-backup/source_system/operational\" repo1-s3-uri-style: path repo1-storage-verify-tls: n repo1-storage-port: \"9000\" options: - --type=time - --target=\"2022-06-09 14:15:11-04\" repo: name: repo1 s3: bucket: \"bucketName\" endpoint: \"endpoint\" region: \"us-east-1\" To restore the database from a specific backup, in the spec.dataSource.pgbackrest.options section you need to change the restoring type and add the name of the backup copy: options: - --type=immediate - --set=20220602-073427F_20220602-073507I All of these operations need to be performed on both the operational and analytical databases. To restore data consistency between the operational and analytical databases, perform the following: Synchronize data on the analytical cluster Since the operational and analytical databases are asynchronously replicated, their backups are not synchronized. Therefore, even when restoring to the same point in time, data consistency between these databases cannot be guaranteed. To bring the restored databases into a synchronized state, perform the following steps on the registry database of the analytical instance: Disable the subscription: ALTER SUBSCRIPTION operational_sub DISABLE; Truncate all tables included in the subscription: SELECT 'TRUNCATE' ||' '||srrelid::regclass ||' '||'CASCADE;' FROM pg_subscription_rel \\gexec; Drop the subscription: DROP SUBSCRIPTION operational_sub; Create the subscription: create subscription operational_sub connection 'host=OperationalHost user=postgres dbname=registry password=XXXXXX' PUBLICATION analytical_pub WITH(create_slot=false,slot_name=operational_sub); Once the initial table synchronization on the analytical cluster is completed, logical replication will automatically be enabled, and the operational and analytical clusters will be in a synchronized state. Advanced high availability and disaster recovery strategies involve distributing database clusters across multiple data centers to maximize uptime. PGO provides ways to deploy PostgreSQL clusters that can span multiple Kubernetes clusters using an external storage system. The backup repository of the primary cluster needs to be accessible to the standby cluster. When creating a standby cluster, you need to add the following to the manifest with standby.enabled set to true and the backup s3 repository parameters for the primary cluster: spec: backups: pgbackrest: image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:ubi8-2.40-1 repos: - name: repo1 s3: bucket: \"bucket\" endpoint: \"primary.endpoint\" region: \"ca-central-1\" standby: enabled: true repoName: repo1 Before promoting the standby cluster, we need to ensure that we don’t accidentally create a \"split-brain\" scenario where two primary instances try to write to the same storage. If the primary cluster is still active, make sure you have shut it down before attempting to promote the standby cluster. When the primary cluster becomes inactive, we can promote the standby cluster by removing or disabling its spec.standby section: spec: standby: enabled: false This change triggers the promotion of the standby cluster to the primary status, and the cluster starts accepting writes.","title":"Backing up and restoring registry databases","component":"platform","version":"1.9.6","name":"postgres-backup-restore","url":"/platform/1.9.6/admin/backup-restore/postgres-backup-restore.html","titles":[{"text":"1. Configuring backup","hash":"_configuring_backup","id":1},{"text":"1.1. Managing backup schedules","hash":"_managing_backup_schedules","id":2},{"text":"1.2. Managing backup retention policies","hash":"_managing_backup_retention_policies","id":3},{"text":"1.3. Creating a one-time backup","hash":"_creating_a_one_time_backup","id":4},{"text":"2. Restoring","hash":"_restoring","id":5},{"text":"2.1. Point-in-Time Recovery (PITR) or restoring a backup copy","hash":"_point_in_time_recovery_pitr_or_restoring_a_backup_copy","id":6},{"text":"2.2. Cloning from a backup","hash":"_cloning_from_a_backup","id":7},{"text":"2.3. Synchronize data on the analytical cluster","hash":"_synchronize_data_on_the_analytical_cluster","id":8},{"text":"3. Continuous restoring on the standby cluster","hash":"_continuous_restoring_on_the_standby_cluster","id":9},{"text":"3.1. Creating a standby cluster","hash":"_creating_a_standby_cluster","id":10},{"text":"3.2. Promoting the standby cluster","hash":"_promoting_the_standby_cluster","id":11}]},"22":{"id":22,"text":"On this page: 1. Prerequisites 2. Procedure This guide describes the procedure of increasing the disk space of the Ceph storage platform on the Openshift cluster (OKD 4.x). Increasing the disk space may be part of a scheduled upgrade or something you need to do when storage reaches its 85% capacity. A Platform administrator must have access to the cluster with the cluster-admin role. Expand the root volumes at the cloud provider level (we will use AWS as an example). To do this, perform these steps: Go to the OKD web console. Go to openshift-storage namespace. Open the Persistent Volume Claims section and select the Expand PVC option from the context menu for these three volumes: ocs-deviceset-gp2-0-data-0-xxx ocs-deviceset-gp2-1-data-0-xxx ocs-deviceset-gp2-2-data-0-xxx Specify the size for these volumes. Modify the following custom resources (CRs): For details, refer to OKD documentation: Managing resources from Custom Resource Definitions. Find ocs-storagecluster (an instance of the storagecluster.ocs.openshift.io CRD). Find the .yaml configuration file and change the value of the storage parameter to storage: 768Gi, which was initially set at the stage of expanding the root volumes (see step 1). Alternatively, you can change this value using a command-line interface (CLI): oc patch... In the openshift-storage namespace, restart the necessary pods: Alternatively, restart all pods in this namespace. For details on working with pods in Openshift, refer to the Origin Kubernetes Distribution (OKD) documentation: Using pods. After all the automatic Ceph cluster procedures that follow are done, the disk space will be extended to the size you specified. If the Ceph disk space does not expand after step 3 and Ceph stops working, perform a force restart of the instances in the Ceph MachineSet of the Openshift cluster.","title":"Extending Ceph storage","component":"platform","version":"1.9.6","name":"ceph-space","url":"/platform/1.9.6/admin/file-system/ceph-space.html","titles":[{"text":"1. Prerequisites","hash":"_prerequisites","id":1},{"text":"2. Procedure","hash":"_procedure","id":2}]},"23":{"id":23,"text":"On this page: 1. Problem statement and general practice 2. How Ceph file system scaling works 2.1. Adding disks to the current virtual machines 2.2. Adding new virtual machines to the Ceph MachineSet 3. How Ceph buckets scaling works 4. Changing the Ceph’s replication factor Ceph storage platform developers recommend capacity planning and early response to prevent the growing file system from reaching maximum storage capacity. That is why scaling your file system could become a routine operation. We recommend checking the cluster regularly to see if it is getting close to its maximum capacity. When the cluster is almost full, add one or more Object Storage Daemons (OSDs) to increase the capacity of the Ceph cluster. Within the registry management Platform, Ceph scaling is performed exclusively through the Origin Kubernetes Distribution (OKD) platform and the built-in Ceph operator using the operator pattern. The operator pattern approach enables you to extend the OKD platform’s behavior via operators, which are software extensions that use custom resources to manage applications, their components, and configurations. Operators follow Kubernetes principles, notably the automation and control loop. Reconciliation, or bringing to an agreed state, is part of the self-healing capabilities of the OKD platform, which involves bringing the current state of the configuration to the desired state. There are two ways you can extend the Ceph file system: by adding disks to the current virtual machines and by adding new virtual machines. To create new disks for the virtual machines and add them to the Ceph pool, perform these steps: Sign in to the OKD web console. Go to Storage > Overview > OpenShift Container Storage > All instances > ocs-storagecluster. Expand the Actions menu and select Add Capacity. For example: In the Add Capacity window, click Add and wait until the new disks are created and added to the Ceph pool. To check the status of the newly created OSDs, use the following command in the ceph-operator pod: ceph --conf=/var/lib/rook/openshift-storage/openshift-storage.config osd tree You can run multiple OSDs on the same virtual machine, but you must ensure that the total bandwidth of the OSD disks does not exceed the network bandwidth required to support the process of reading or writing data to those disks. To add new virtual machines to the Ceph MachineSet, perform these steps: Sign in to the OKD web console. Go to Compute > MachineSets. Find the required MachineSet. For example: Expand the actions menu and select Edit Machine count. Specify the desired amount of machines and click Save. Wait until the status of the new virtual machine changes to Running. Once it does, it becomes available to Ceph, and you can add new disks and OSDs to it. After completing all the steps, check the current status of Ceph either in the OKD web console or using the following command in the ceph-operator pod: ceph --conf=/var/lib/rook/openshift-storage/openshift-storage.config health detail Each Ceph bucket dynamically expands when files are added and can occupy all available space in the Ceph File System (CephFS). For scaling, follow the steps described earlier in this topic. To change the replication factor on the deployed OKD cluster, perform these steps: In the OKD web console, open the .yaml file with the description of the StorageCluster resource and change the following section: From: managedResources: cephBlockPools: {} To: managedResources: cephBlockPools: reconcileStrategy: init In the OKD web console, open the .yaml file with the description of the CephBlockPool resource and change the replication factor in the replicated > size field: spec: enableRBDStats: true failureDomain: rack replicated: replicasPerFailureDomain: 1 size: 3 targetSizeRatio: 0.49 Wait until Ceph applies your changes.","title":"Ceph File System scaling","component":"platform","version":"1.9.6","name":"ceph_scaling","url":"/platform/1.9.6/admin/file-system/ceph_scaling.html","titles":[{"text":"1. Problem statement and general practice","hash":"_problem_statement_and_general_practice","id":1},{"text":"2. How Ceph file system scaling works","hash":"_how_ceph_file_system_scaling_works","id":2},{"text":"2.1. Adding disks to the current virtual machines","hash":"_adding_disks_to_the_current_virtual_machines","id":3},{"text":"2.2. Adding new virtual machines to the Ceph MachineSet","hash":"_adding_new_virtual_machines_to_the_ceph_machineset","id":4},{"text":"3. How Ceph buckets scaling works","hash":"_how_ceph_buckets_scaling_works","id":5},{"text":"4. Changing the Ceph’s replication factor","hash":"_changing_the_cephs_replication_factor","id":6}]},"24":{"id":24,"text":"To migrate to another network provider, refer to the Origin Kubernetes Distribution (OKD) documentation: https://docs.openshift.com/. The following migration options are available: Migrating from the OpenShift SDN network provider to OVN-Kubernetes; Migrating from the OVN-Kubernetes network provider to OpenShift SDN.","title":"Changing the network provider of the OKD 4.x cluster","component":"platform","version":"1.9.6","name":"changing-network-provider","url":"/platform/1.9.6/admin/installation/changing-network-provider.html","titles":[]},"25":{"id":25,"text":"On this page: 1. Introduction 2. Managing DNS records 2.1. Generating DNS records 2.2. Checking the DNS records 3. Obtaining permission to send emails in AWS 4. Checking emails using apptoolbox An internal SMTP server is a Platform component that sends notifications to users. During Platform installation it is deployed as the smtp-server project. Since only the web interface is accessible externally and all other ports are isolated within the cluster, which significantly enhances security, only sending emails is enabled. Receiving emails using this mail service is disabled. In this topic, DNS_WILDCARD refers to the cluster’s domain name. User web interface is available via the following URL: https://mail./ Administrator web interface is available via the following URL: https://mail./admin Sign in to the administrator web interface. You can find the credentials in the mailu-admin-credentials secret in the smtp-server project. Add @ to username. In the side menu, under Administration, select Mail domains. On the page that opens, click the Details icon in the Actions column next to your domain name. Figure 1. Opening domain name details On the page that opens, click Regenerate keys in the upper-right corner. This gives you a list of DNS records that you need to add to your public DNS zone (1 – MX, 3 – TXT). Figure 2. Generated DNS records You need to add the public IP address of the gateway through which outbound traffic passes to the generated DNS SPF record. In case of AWS deployment, this will be the Elastic IP of the Platform’s NAT gateway. \"v=spf1 mx a:mail. ip4:12.34.56.78 -all\" For example, if your gateway IP is 12.34.56.78, then the record will look like this: \"v=spf1 mx a:mail. ip4:12.34.56.78 -all\" Add records to the zone’s DNS. Route53 in AWS has a limit on the length of a TXT record. This may cause the following error when adding a DNS DKIM record: Bad request. (InvalidChangeBatch 400: CharacterStringTooLong (Value is too long)) In this case, divide the text part of the record with the public key roughly in half using three characters: double quotes, space, double quotes. For example, the following TXT part: \"v=DKIM1; k=rsa; p=abcdefghijklmnopqrstuvwxyz\" will look like this: \"v=DKIM1; k=rsa; p=abcdefghijkl\" \"mnopqrstuvwxyz\" After the records are updated on the provider’s DNS servers, we recommend checking the settings using the mxtoolbox service. Enter your into the Email Address or Domain Name field and click the Check Email Health button. Wait for the test results. If you get only these three errors, it means the settings are correct: Figure 3. mxtoolbox check When deploying the Platform on AWS, all traffic from port 25 (SMTP) is blocked by default[1]. You need to create an AWS support request: Request to remove email sending limitations. Request processing time is up to 48 hours. Request field Value Email address Your email where the reply should be sent. Use case description Explain why you need to remove the restrictions. Provide relevant details of your notification setup. For example: We’re going to deploy own SMTP server (https://mailu.io/) in containers inside Openshift Cluster to send notifications for our clients and employees. It’s customer requirement to use own standalone cloud-agnostic SMTP server. This server has an authentication and is not accessible from Internet to connect and send emails. All openshift cluster nodes have one common NAT gateway () with EIP . So could you please remove email sending limitation from EIP assigned to NAT gateway? Elastic IP address - optional The IP address of the Platform’s NAT Gateway Reverse DNS record - optional Leave this field empty Open the apptoolbox website and click Next step. The service will generate an email address where you need to send an email from the Platform’s SMTP server. Figure 4. A test email address To send an email, go to the user web interface at https://mail./ and sign in. In the side menu on the left, click Compose to create an email. Enter the test email address generated by apptoolbox into the To field. The subject and body of the email do not matter. Figure 5. Creating a test email Send the email and return to the apptoolbox website. In a few seconds, the letter should be delivered, and you will receive a reply from the service. If configured correctly, the response should look like this: Figure 6. Test result 1. AWS Support - How do I remove the restriction on port 25 from my Amazon EC2 instance or AWS Lambda function?","title":"Configuring internal SMTP server","component":"platform","version":"1.9.6","name":"internal-smtp-server-setup","url":"/platform/1.9.6/admin/installation/internal-smtp-server-setup.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Managing DNS records","hash":"_managing_dns_records","id":2},{"text":"2.1. Generating DNS records","hash":"_generating_dns_records","id":3},{"text":"2.2. Checking the DNS records","hash":"_checking_the_dns_records","id":4},{"text":"3. Obtaining permission to send emails in AWS","hash":"_obtaining_permission_to_send_emails_in_aws","id":5},{"text":"4. Checking emails using apptoolbox","hash":"_checking_emails_using_apptoolbox","id":6}]},"26":{"id":26,"text":"Deploying the Platform for state registries into production requires the use of officially supported virtual infrastructures. At present, these infrastructures include recognized cloud services like Amazon Web Services (AWS) and VMWare vSphere. To ensure optimal compatibility and functionality, these infrastructures should have an OKD cluster installed. The version of this cluster needs to align with the Platform’s specific requirements as outlined below. Table 1. Platform for state registries: requirements for OKD clusters Platform Version Supported OKD Versions 1.9.2 4.11 1.9.3 4.11 1.9.4 4.11 1.9.5 4.11, 4.12 Follow the guidelines in the official Platform documentation to carry out the process of installation and configuration: Deploying the Platform on target environments","title":"Platform for state registries: requirements for OKD clusters","component":"platform","version":"1.9.6","name":"okd-requirements","url":"/platform/1.9.6/admin/installation/okd-requirements.html","titles":[]},"27":{"id":27,"text":"Platform for state registries: requirements for OKD clusters Deploying the Platform on target environments Deploying the Platform in an AWS environment from scratch Configuring internal SMTP server Changing the network provider of the OKD 4.x cluster","title":"Installing and configuring","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/admin/installation/overview.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"28":{"id":28,"text":"On this page: 1. Overview 2. Adding administrators 3. Managing access to the administrator portal 4. Related pages A Platform administrator is a user responsible for managing and maintaining the infrastructure of the Platform. This role is required to deploy the Platform, create registries, and install updates. Platform administrators may also collaborate with other teams, such as equipment administrators, to assess the resources necessary to ensure the Platform’s reliability and efficient functioning. For details on the Platform’s roles and functional responsibilities, see: Technical platform administrator: duties and responsibilities arch:architecture/platform/operational/user-management/platform-actors-roles.adoc After deploying the Platform on target environments, the system automatically creates a single administrator user: kube:admin. This user is needed to add the first Platform administrator, who, in turn, can add other administrators and create registries. Platform administrators are created in the Control Plane admin console. To add the first administrator, perform these steps: Sign in to the OpenShift web console as a kube:admin user. To obtain kube:admin credentials, contact the Platform’s support team. Go to Home > Projects, find and open the control-plane project. Go to Networking > Routes and open the link to the control-plane-console component from the Location column. Sign in to the Control Plane admin console as kube:admin using the same credentials as in OpenShift. Open the Platform management section and click Edit in the upper-right corner. Open the Administrators section and add one or more administrators that need access to Platform management. Click the + (Add) button and provide the following details for each administrator: First name Last name Email address Temporary password To add several administrators, repeat this step for each user separately (click + > provide details > Confirm). Use lower case for email addresses. Allowed characters are: digits (0-9), Latin letters (a-z), underscores (_), hyphens (-), at sign (@), dots (.), and commas (,). Click Confirm to save your changes. You can also remove an administrator by clicking the delete icon (🗑) next to their username. As a result, the system generates a Platform administrators update request with a New status. You can view request details in the Platform management > Update requests section. In the Update requests section, click the view icon (👁) to open your request. Compare the changes between the two versions that open in a new window and make sure the data you entered is correct. Click Approve. The proposed changes are applied to the deploy-templates/values.yaml configuration file of the cluster-mgmt component upon confirmation. After the approval, the changes are applied to the master branch of a corresponding repository, which starts the MASTER-Build-cluster-mgmt build process. After the build is completed, the system creates a Platform administrator account with the necessary access rights. You can verify access within a couple of minutes. A Platform administrator automatically gets the necessary access rights, including Cluster-admins and cluster-mgmt-admin groups and the cp-cluster-mgmt-admin role in the Keycloak service. Platform administrators have full access to OpenShift and Control Plane. They can add other Platform administrators, create registries, and assign registry administrators. For details on creating registry administrators, see Creating registry administrators. You can now sign in to Control Plane as a Platform administrator. To do this, sign out of the kube:admin account and sign in via the Log in with > keycloak option using your Platform administrator credentials. From now on, you can add or remove Platform administrators using the same steps you performed under the kube:admin account. An alternative way to approve the changes via Gerrit When you sign in using your Platform administrator account, not kube:admin, you can approve update requests in the Gerrit service in addition to the Control Plane interface. You can also monitor the cluster-mgmt code build process in the Jenkins service. To do this, perform these steps: Find your update request and click the View in Gerrit icon. Approve the changes using Code Review +2 > Submit. After the changes are merged to the master branch of the corresponding repository, the MASTER-Build-cluster-mgmt build starts in Jenkins. Use the link at the bottom of the Gerrit page to monitor the build status (CI Jenkins > Build Started > Jenkins > cluster-mgmt > Master-Build-cluster-mgmt). The Platform administrator in the openshift realm of the Keycloak service can provide access rights to the regulations administrator portal. Perform these steps: Sign in to the OpenShift web console. To obtain the credentials, contact the Platform’s support team. Go to Projects > user-management. Open the Networking section and click the keycloak service link. Sign in to the Keycloak Administration Console using the Keycloak secret (username and password). You can obtain the credentials in the Keycloak service’s secrets. To do this, copy the secrets from the Workloads > Secrets > keycloak section. Go to the openshift realm > Users and select the user you wish to grant access to. Open the Role Mappings tab and select the cp-registry-admin- role in the Available Roles list, where is the name of the registry where the administrative portal is deployed. Click Add selected to move the role to the Assigned Roles list. This grants access to the user. As a Platform administrator, you can create and update infrastructure and registry components configurations and add other Platform and registry administrators. Technical platform administrator: duties and responsibilities Creating registry administrators Deploying a registry Viewing and editing registry configuration Updating Platform infrastructure components Updating registry components","title":"Creating Platform administrators","component":"platform","version":"1.9.6","name":"control-plane-assign-platform-admins","url":"/platform/1.9.6/admin/registry-management/control-plane-assign-platform-admins.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Adding administrators","hash":"_adding_administrators","id":2},{"text":"3. Managing access to the administrator portal","hash":"_managing_access_to_the_administrator_portal","id":3},{"text":"4. Related pages","hash":"_related_pages","id":4}]},"29":{"id":29,"text":"On this page: 1. Overview 2. Restricting access to registry components 2.1. Adding a CIDR when creating a registry 2.2. Adding or removing CIDRs when editing a registry 3. Restricting access to Platform, infrastructure, and other components To ensure secure access to OpenShift 4.x cluster components, you can restrict access to components used on the Platform. There are 3 main types of components in the system: Platform Registry Infrastructure The Platform provides an option to block access to each route at the HAProxy[1] level. Technically, restricting access to a route means allowing it only for the selected IP addresses using CIDR[2]-based routing rules. Allowed (whitelisted) IP addresses must be specified together with the subnet mask. In other words, the administrator can specify either a single IP address (192.168.1.1/32) or an entire subnet that contains a pool of IP addresses (for example, a pool of 512 addresses — 192.168.0.0/23 ). For more information about subnet masks and IPv4 addressing, refer to Subnetwork article on Wikipedia. When creating a registry, an administrator can specify the IP addresses from which access to the registry components will be allowed. This is done in the Control Plane interface. An administrator can specify a list of IP addresses separately for the officer portal, citizen portal, and administrative components. Each component must contain the cluster’s public IP address. Keycloak, in turn, must contain all CIDRs from other operational zones, or be accessible to all if the citizen portal is not restricted. To configure CIDR for registry components, follow these steps: Sign in to the Control Plane admin console interface. Figure 1. Admin console sign-in page Open the Registries section and create a new registry by clicking the + Create new button. To learn more about creating registries, see Deploying a registry. Figure 2. Registries management section Go through the registry creation steps and stop at the Access restrictions section. Figure 3. CIDR management interface Here you can add CIDRs for user portals and administrative components. Click the + (Add) button in a corresponding field. In the Add CIDR window, enter the IP addresses and their subnet masks. Click Confirm. Allowed characters are digits (0-9), periods (.), and a forward slash (/). For example: 172.16.0.0/12. Figure 4. Adding an IP address and subnet mask If the IP address and subnet mask do not follow the a.b.c.d/x format, the system will return an error: Check the IP address format Add the required number of CIDRs. Here is an example of adding CIDRs for the user portals: Figure 5. Added CIDRs example Click Next to finish creating the registry. As a result, the system generates a registry configuration update request. You can view request details in the Registries > Update requests section. For details about viewing and confirming requests in Control Plane, see Approving registry configuration update requests. In the Update requests section, click the view icon 👁 to open your request. Compare the changes between the two versions that open in a new window and make sure the data you entered is correct. Click Approve. The proposed changes are applied to the deploy-templates/values.yaml configuration file upon confirmation. The IP addresses you entered are added to the values.yaml configuration file in the following format: Example 1. Adding allowed IP addresses and subnets to the registry configuration in values.yaml global: whiteListIP: adminRoutes: \"192.168.1.64/26 172.16.0.192/27\" officerPortal: \"192.168.1.240/29\" citizenPortal: \"0.0.0.0/0\" Wait until Jenkins completes the MASTER-Build- build. This may take a few minutes. An administrator can add or remove whitelisted IP addresses when editing an existing registry. Admin console updates the corresponding IP addresses in the values.yaml file in the registry configuration repository. To learn more about editing registries, see registry-management/control-plane-view-registry.adoc. Adding CIDRs works the same way whether you create or edit a registry. For details, jump to Adding a CIDR when creating a registry. You can also remove current CIDRs from the list when editing a registry. To do this, open the Access restrictions section, click the delete icon 🗑 next to the CIDR you wish to delete, and confirm your action. In the Platform management section, an administrator can specify CIDRs to restrict external access to the Platform and infrastructure components (routes). Admin console creates an update request for the values.yaml file. Once an administrator approves the request, the Master-Build-cluster-mgmt pipeline adds the necessary records. Registry CIDRs should automatically be added for the Platform components as well. Open the Platform management section. Click Edit in the upper-right corner. On the Registry settings page, find the List of allowed CIDRs section. Click the + (Add) button in the CIDR for administrative components field. In the Add CIDR window, enter the IP addresses and their subnet masks. Click Confirm. Allowed characters are digits (0-9), periods (.), and a forward slash (/). For example: 172.16.0.0/12. Add the required number of CIDRs and click Confirm. Figure 6. Adding an IP address and subnet mask As a result, the system generates a Platform configuration update request. You can view request details in the Platform > Update requests section. For details about viewing and confirming requests in Control Plane, see Approving registry configuration update requests. In the Update requests section, click the view icon 👁 to open your request. Compare the changes between the two versions that open in a new window and make sure the data you entered is correct. Click Approve. The proposed changes are applied to the deploy-templates/values.yaml configuration file upon confirmation. The IP addresses you entered are added to the values.yaml Platform configuration file in the following format: Example 2. Adding allowed IP addresses and subnets to the Platform configuration in values.yaml global: whiteListIP: adminRoutes: \"192.168.1.64/26 172.16.0.192/27\" Wait until Jenkins completes the Master-Build-cluster-mgmt build. This may take a few minutes. 1. HAProxy is a load balancer and proxy server. In an OpenShift cluster, a router receives an application-associated URL route and forwards requests to the corresponding module to return data to the user making the request. 2. CIDR (Classless Inter-Domain Routing) is a method of assigning IP addresses that improves the efficiency of address distribution using classless routing.","title":"Restricting access to administrative and registry components","component":"platform","version":"1.9.6","name":"control-plane-cidr-access-endpoints","url":"/platform/1.9.6/admin/registry-management/control-plane-cidr-access-endpoints.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Restricting access to registry components","hash":"cidr-registry-components","id":2},{"text":"2.1. Adding a CIDR when creating a registry","hash":"add-cidr-create-registry","id":3},{"text":"2.2. Adding or removing CIDRs when editing a registry","hash":"_adding_or_removing_cidrs_when_editing_a_registry","id":4},{"text":"3. Restricting access to Platform, infrastructure, and other components","hash":"_restricting_access_to_platform_infrastructure_and_other_components","id":5}]},"30":{"id":30,"text":"On this page: 1. General settings 2. Creating registry administrators 3. Registry deployment template 4. Mail server settings 5. Key info 6. Registry resources 7. DNS settings 8. Access restrictions 9. Service providers authentication 10. Service recipients authentication 11. Backup settings 12. Confirmation and deployment After successfully deploying the Platform on a target environment, a Platform administrator can access the Control Plane admin console interface. In Control Plane, you can manage the configurations of the Platform infrastructure components (cluster-mgmt) and registry components. You can find the link to Control Plane in the OpenShift console. Go to Networking > Routes and search for control-plane. The link is displayed in the Location column of search results. Only a Platform administrator with appropriate permissions can deploy a registry using the Control Plane admin console. This action requires a cp-cluster-mgmt-admin role in Keycloak’s control-plane-admin realm. For details, see Creating Platform administrators. To deploy a new registry, perform these steps: Sign in to Control Plane. Open the Registries section and click the Create New button. Configure your registry parameters. Read on for details on each deployment step. In this step, you can specify the registry’s system name, which is used in various data exchange operations on the Platform. The registry name cannot be changed once the registry is created. The Registry name is a required field. The name must be unique. Allowed characters are lowercase Latin letters (a-z) and hyphens (-). The name cannot contain more than 12 characters. You can describe the purpose of the registry or provide its official name in the Description field. This information may be helpful for business or legal reasons. Click Confirm to go to the next step. In this step, you can assign registry administrators. You can also add administrators by editing the registry soon after its deployment. For details, see Creating registry administrators. In the Administrators field, specify the administrators who will have access to the registry. This is a required field. Click the + (Add) button and provide the following details for each registry administrator: First name Last name Email address Temporary password To add several administrators, repeat this step for each user separately (click + > provide details > Confirm). Use lower case for email addresses. Allowed characters are: digits (0-9), Latin letters (a-z), underscores (_), hyphens (-), at sign (@), dots (.), and commas (,). Click Next to go to the next step. The registry administrator account is automatically created in the openshift realm of the Keycloak service with the cp-registry-admin- role in the /cp-registry-admin- group, where is the name of your registry. In this step, you can select a template for your registry. Templates are predefined registry configurations with a set number of resources that you can select depending on the expected workload. For example, you can choose between a minimum and recommended configuration, or select a configuration with GeoServer, and so on. To calculate the approximate cost of the resources your registry will need, use the Calculating the registry cost page or reach out to the Platform’s technical support team. Select the configuration template for your registry from the Registry template list. A registry template defines the configuration options and the allocated resources, including CPU, RAM, the number of nodes in MachineSets, and so on. This is a required field. In the Registry template branch field, select the branch to use when deploying your registry. This refers to the version of the component’s branch in the Gerrit repository containing the corresponding registry template version. This is a required field. Click Next to go to the next step. In this step, you can select the type of mail server your registry will use for sending email messages. The step is optional. You can skip it when creating a registry and return to these settings when editing it. Platform mail server (platform-mail-server) is a mail server distributed as part of the Platform. This service is available to all registries within a single instance of the Platform. External mail server (external-mail-server) is a mail server outside the Platform (such as Gmail). For details, see Configuring the mail server. Click Next to go to the next step. In this step, you can configure your registry’s digital signature keys and certificates. Once the registry is created, you will be able to update these settings by editing your registry. This step is mandatory. Data in the Key info section is required to initialize the digital-signature-ops crypto service and apply the system signature, or system digital seal. Without this information, the crypto service will not start. Encryption keys are used to sign excerpts generated by the Platform and to sign data that is modified according to the logic of the registry’s business processes. For details on configuring keys, see registry-management/system-keys/control-plane-registry-keys.adoc. In the Media type field, select the type of key to use. Provide the electronic key. Upload the Platform administrator’s operational key file (Key-6.dat) using the File key (.dat) field. Click Browse, locate the key file on your computer, select it, and click Open. The AKCC that issued the key field displays the full name of the AKCC (Accredited Key Certification Center). In the File key password field, enter the password for the key you uploaded. The Key validation info section contains public certificates data and a list of AKCCs: Upload the CACertificates.p7b file that contains a list of certificates of compatible AKCCs using the Public AKCC certificates (.p7b) field. You can download this file from the IIT website: https://iit.com.ua/downloads. Upload the CAs.json file that contains interaction parameters for compatible AKCCs using the AKCCs list (.json) field. You can download this file from the IIT website: https://iit.com.ua/downloads. In the Allowed keys list, specify the keys whose signatures are considered valid. This section contains a list of all keys, including old ones (for example, when rotating keys), so that everything previously signed with an old key is still considered validated. That is, the list of allowed keys should contain the data history of all the keys used in the system to apply a signature. Click Next to go to the next step. In this step, you can configure registry resources for specific services that are deployed in it. Properly managing the resources used by containers within your registry instance ensures optimal performance and efficiency. Select the service you wish to configure from the list and click + (Add). This step is optional. When the registry is deployed, all its services are configured using the default values for requests, limits, and environment variables. Even if services are removed from the list, the Platform will apply the standard configuration when deploying the registry. Customize resource parameters. Click Next to go to the next step. For details on configuring the resources, see Managing registry resources. In this step, you can set custom DNS names and upload SSL certificates in .pem format for the Keycloak service and user portals. This step is optional. If you do not configure anything here, the system will use the default values. For details on configuring DNS, see Configuring custom DNS. Click Next to go to the next step. In this step, you can restrict access to specific registry components, such as user portals and administrative components. This step is optional, but we recommend configuring CIDR for these components for security purposes. For details, see Restricting access to administrative and registry components. Click Next to go to the next step. In this step, you can configure authentication for service providers (officers) and enable or disable self-registration. This step is optional. If you do not configure anything here, the system will use the default values: authentication using Qualified Electronic Signature (QES) and disabled self-registration. Select the authentication type to use when identifying users in the system: QES id.gov.ua widget For details, see Configuring authentication for officers. You can enable the self-registration option for officers to simplify the user registration process by removing the need to involve an administrator. For details, see Configuring self-registration for officers. Click Next to go to the next step. In this step, you can set up validation to check whether business users have an active entry in the Unified state register (EDR). This allows the system to connect the user’s QES with their legal records in the state register. This is an important aspect of the system’s security and reliability that helps validate user data and confirm their identity. This step is optional. If you do not configure anything here, the system will use the default value: validation disabled. For details, see registry-develop:registry-admin/cp-auth-setup/cp-auth-setup-citizens.adoc. Click Next to go to the next step. In this step, you can set the backup schedule for your registry components and define the retention period for backup copies in the backup repository. Component backup copies are created using the Velero tool and stored in the MinIO secure backup storage outside the Platform cluster. The backup schedule is configured using the unix-cron format in the Control Plane admin console interface. The system also performs automatic replication of data stored in S3 buckets. You can configure a backup schedule for these replications. To learn about creating registry backups automatically and configuring backups for S3 bucket replications, see Registry backup creation schedule and retention time management. To learn about creating backups manually and restoring the registry environment from them, see Registry backing up and restoring. Click Next to go to the next step. To complete the procedure, click the Create registry button. You can go back to any of the settings tabs to double-check the data you provided. As a result, the registry appears in the Registries section of the Control Plane admin console interface. If the registry is deployed successfully, a green check mark appears next to its name in the Status column. Deploying the registry takes some time. The Jenkins service starts the deployment automatically by running the pipeline called Master-Build-, where is the name of your registry. To monitor the deployment process, go to the Registries section and open the registry you just created, then scroll down to the Configuration section and click the Jenkins link icon in the CI column.","title":"Deploying a registry","component":"platform","version":"1.9.6","name":"control-plane-create-registry","url":"/platform/1.9.6/admin/registry-management/control-plane-create-registry.html","titles":[{"text":"1. General settings","hash":"_general_settings","id":1},{"text":"2. Creating registry administrators","hash":"_creating_registry_administrators","id":2},{"text":"3. Registry deployment template","hash":"_registry_deployment_template","id":3},{"text":"4. Mail server settings","hash":"_mail_server_settings","id":4},{"text":"5. Key info","hash":"_key_info","id":5},{"text":"6. Registry resources","hash":"_registry_resources","id":6},{"text":"7. DNS settings","hash":"_dns_settings","id":7},{"text":"8. Access restrictions","hash":"_access_restrictions","id":8},{"text":"9. Service providers authentication","hash":"_service_providers_authentication","id":9},{"text":"10. Service recipients authentication","hash":"_service_recipients_authentication","id":10},{"text":"11. Backup settings","hash":"_backup_settings","id":11},{"text":"12. Confirmation and deployment","hash":"_confirmation_and_deployment","id":12}]},"31":{"id":31,"text":"On this page: 1. Editing general settings 2. Viewing registry details, access settings, and external integrations 3. Monitoring the deployment of changes After successfully deploying your registry, you can view and edit its settings. You can do this in two simple steps: Sign in to the Control Plane admin console as the registry administrator. Open the Registries section, find the registry you wish to edit, and click the edit icon (🖉). As a result, the Edit registry page opens. Here you can update the following settings: General settings Adding or removing administrators Configuring the mail server registry-management/system-keys/control-plane-registry-keys.adoc registry-management/сontrol-plane-registry-resources.adoc Configuring custom DNS Restricting access to administrative and registry components Service providers authentication Service recipients authentication Backup Updating the registry configuration follows the GitOps approach, similar to the deployment process. You can open the Edit registry page either from the list of registries (using the edit icon) or the registry details page (using the Edit button in the upper-right corner). You can view basic information about the registries deployed on the Platform, manage access to your registry, configure external SOAP or REST integrations, view registry configuration, and approve or reject configuration update requests. Sign in to the Control Plane admin console as the registry administrator. Go to the Registries section and click the name of your registry. The registry details page contains two tabs: Registry information This tab contains the following sections: General information. You can view and edit it if needed. The registry name cannot be changed. Setting up interaction with registries via Trembita. You can set up interaction with other registries that are part of the SEI SEIR Trembita system via the SOAP protocol. For details, see registry-develop:registry-admin/external-integration/cp-integrate-trembita.adoc. Setting up interaction with other systems. You can set up interaction with other registries and external systems via the REST protocol. For details, see Configuring integrations with external systems in Control Plane. Access to Platform registries and external systems. You can configure access to your registry for other registries on the Platform or external systems. For details, see Configuring registry access. Configuration. This section contains the following links: VCS[1]: Regulations changes review and storage service (Gerrit). CI[2]: Regulations deployment service (Jenkins). Update requests. You can change your registry configuration by editing any of its settings. These changes go to the Update requests section, where you can review and either approve or reject them. Quick links This tab contains links to the web interfaces of the various services with brief descriptions. For details, see Quick links to registry services. Deploying configuration changes takes some time. The Jenkins service starts the deployment automatically by running the Master-Build- pipeline, where is the name of your registry. To monitor the deployment process, go to the Registries section and open the registry you modified, then scroll down to the Configuration section and click the Jenkins link icon in the CI column. The central Jenkins component provides several out-of-the-box processes (pipelines): Service processes Service processes perform various auxiliary functions and set the stage for the main pipelines. These include: Create-release- performs several service operations, including cloning the repository and creating a new branch. Starts a service pipeline named job-provisions > ci > default- (where is the version number of the build that corresponds to the Git tag in Gerrit), which prepares the stage for the subsequent CI/CD process. MASTER-Code-review- is a system process of code quality review that is launched automatically via git push to the master branch of the Gerrit repository. Main processes Main processes build the code used to deploy various functional components of the registry. These include: Master-Build- is the primary code build process for deploying or updating the registry configuration. This includes resource allocation, deployment of registry services such as user portals, Business Process Management System (BPMS), database, data factory components, empty regulations deployment, and so on. Create-registry-backup- is a process that creates registry backups and puts them in the MinIO object storage. Restore-registry- is a process that enables you to create (restore) a registry from a backup copy. Delete-release- is a process that enables you to delete a registry. 1. Version Control System (VCS) is a software tool for managing versions of information units such as the source code of a program, script, web page, website, 3D model, text document, and so on. VCS enables multiple people to collaborate on the same project without interfering with each other. 2. Continuous Integration (CI) is a software development practice involving frequent automated project builds to identify and resolve integration issues as quickly as possible.","title":"Viewing and editing registry configuration","component":"platform","version":"1.9.6","name":"control-plane-edit-registry","url":"/platform/1.9.6/admin/registry-management/control-plane-edit-registry.html","titles":[{"text":"1. Editing general settings","hash":"_editing_general_settings","id":1},{"text":"2. Viewing registry details, access settings, and external integrations","hash":"_viewing_registry_details_access_settings_and_external_integrations","id":2},{"text":"3. Monitoring the deployment of changes","hash":"registry-deploy-status","id":3}]},"32":{"id":32,"text":"On this page: 1. Overview 2. Service groups 2.1. Registry administrative zone Regulations administrator portal (admin portal) Regulations changes review and storage service (Gerrit) Regulations deployment service (Jenkins) API documentation of the registry data management service (Swagger) Reports modeling service (Redash Admin) Business Process Administration Portal Registry data viewing service (pgAdmin) Geodata management service (GeoServer UI) Registry artifacts repository (Nexus) 2.2. Registry operational zone Service recipient portal (citizen portal) Service provider portal (officer portal) 2.3. Platform administrative zone OpenShift cluster management console Configuration changes review and storage service (Gerrit) Configuration deployment service (Jenkins) 2.4. Platform operational zone User and role management service (Keycloak) Platform event log viewer (Kibana) Platform monitoring service (Grafana) Service mesh management and monitoring (Kiali) Request monitoring and tracing service (Jaeger) 3. Services with restricted access 4. Disabled services The Control Plane admin console provides registry administrators with a convenient way to access all the essential web services from one place. In this article, we will go over the main aspects of this feature. When you open any registry in the Registries section, note the Quick links tab. This is where you will find links to the web interfaces of the various services with brief descriptions. To learn more about each service, search the documentation using the name of the service as a query. Services are divided into four groups: Registry administrative zone Registry operational zone Platform administrative zone Platform operational zone Groups are sorted from most to least used, same as links within each group. Links to services may vary depending on the registry environment and the Platform cluster where a particular service is deployed. Replace with your project/registry name in OpenShift, and with your DNS wildcard. For example: https://admin-tools-demo-reg-main.apps.envone.dev.registry.eua.gov.ua/ Replace with your OpenShift cluster URL. For example: https://console-openshift-console.apps.envone.dev.registry.eua.gov.ua Purpose: A web application for registry administrators. Its interface allows configuring registry regulations without advanced programming skills. https://admin-tools-. Purpose: A version control tool for components and configurations. https://admin-tools-./gerrit Purpose: A software complex that enables automation in the lifecycle of registry regulations deployment. https://admin-tools-./cicd Purpose: A web interface for viewing the API endpoints and documentation generated for the registry data management subsystem. These endpoints are used by standard integration connectors when building interactions in business processes. https://registry-rest-api-./openapi Be sure to add /openapi to the end of the link, otherwise you will end up in the Swagger sandbox, or test environment. Purpose: A web interface for creating and configuring analytical reports and dashboards. https://admin-tools-.dnsWildcard/reports Purpose: A web interface for monitoring and managing the registry’s business processes. https://business-proc-admin-. Purpose: A web interface for viewing registry data and data model schema. https://pgadmin-. Purpose: A web interface for managing geographic data. https://geo-server-./geoserver Purpose: A service for storing registry artifacts. https://nexus-control-plane-./nexus Purpose: A web application through which citizens can receive administrative and information services. https://citizen-portal-. Purpose: A web application through which officers can provide administrative and information services. https://officer-portal-. Purpose: A user interface accessible from a web browser. Platform administrators can use the OpenShift web console to view and manage the content and resources of the OpenShift cluster, Platform, and registries. https://console-. Purpose: A version control tool for components and configurations. Gerrit is tightly integrated with the Git distributed version control system. With this tool, Platform administrators can review all code and configuration changes and approve or reject them using a web browser. https://gerrit-. Purpose: A software complex that enables automation in the lifecycle of the Platform and registries. Jenkins performs registry deployment, configuration, updates, and many other automated tasks on the Platform. https://jenkins-. Purpose: A service for user authentication and authorization. https://platform-keycloak-. Purpose: A web interface for accessing and viewing Platform logs. https://kibana-openshift-logging. Platform logging services are deployed in a separate openshift-logging project. Purpose: A web interface for accessing and viewing monitoring data. https://grafana-grafana-monitoring. Platform events monitoring services are deployed in a separate grafana-monitoring project. Purpose: A web interface for configuring, checking, and analyzing the Platform service mesh, as well as visualizing the traffic inside the Platform. What is a service mesh? A service mesh is an architectural approach in distributed systems that simplifies interaction between microservices and helps them work together more efficiently. Service mesh adds a transparent infrastructure that facilitates communication between services and manages traffic, security, monitoring, and other aspects of how microservices work. https://kiali-istio-system.. Purpose: A tool for monitoring and troubleshooting microservices-based distributed systems. Jaeger can be used for component dependency analysis, fault analysis, transaction monitoring, and Platform performance optimization. https://jaeger-istio-system. If some components are not available in the currently configured registry profile, their links are not displayed. For example, if GeoServer is not deployed, its link will be missing (to learn more about the geomodule, see Working with geodata in the registry). If certain services are disabled, such as the admin or user portals, then a Disabled status is displayed instead of a link.","title":"Quick links to registry services","component":"platform","version":"1.9.6","name":"control-plane-quick-links","url":"/platform/1.9.6/admin/registry-management/control-plane-quick-links.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Service groups","hash":"_service_groups","id":2},{"text":"2.1. Registry administrative zone","hash":"registry-admin-zone","id":3},{"text":"Regulations administrator portal (admin portal)","hash":"_regulations_administrator_portal_admin_portal","id":4},{"text":"Regulations changes review and storage service (Gerrit)","hash":"_regulations_changes_review_and_storage_service_gerrit","id":5},{"text":"Regulations deployment service (Jenkins)","hash":"_regulations_deployment_service_jenkins","id":6},{"text":"API documentation of the registry data management service (Swagger)","hash":"_api_documentation_of_the_registry_data_management_service_swagger","id":7},{"text":"Reports modeling service (Redash Admin)","hash":"_reports_modeling_service_redash_admin","id":8},{"text":"Business Process Administration Portal","hash":"_business_process_administration_portal","id":9},{"text":"Registry data viewing service (pgAdmin)","hash":"_registry_data_viewing_service_pgadmin","id":10},{"text":"Geodata management service (GeoServer UI)","hash":"_geodata_management_service_geoserver_ui","id":11},{"text":"Registry artifacts repository (Nexus)","hash":"_registry_artifacts_repository_nexus","id":12},{"text":"2.2. Registry operational zone","hash":"registry-operational-zone","id":13},{"text":"Service recipient portal (citizen portal)","hash":"_service_recipient_portal_citizen_portal","id":14},{"text":"Service provider portal (officer portal)","hash":"_service_provider_portal_officer_portal","id":15},{"text":"2.3. Platform administrative zone","hash":"platform-admin-zone","id":16},{"text":"OpenShift cluster management console","hash":"_openshift_cluster_management_console","id":17},{"text":"Configuration changes review and storage service (Gerrit)","hash":"_configuration_changes_review_and_storage_service_gerrit","id":18},{"text":"Configuration deployment service (Jenkins)","hash":"_configuration_deployment_service_jenkins","id":19},{"text":"2.4. Platform operational zone","hash":"platform-operational-zone","id":20},{"text":"User and role management service (Keycloak)","hash":"_user_and_role_management_service_keycloak","id":21},{"text":"Platform event log viewer (Kibana)","hash":"_platform_event_log_viewer_kibana","id":22},{"text":"Platform monitoring service (Grafana)","hash":"_platform_monitoring_service_grafana","id":23},{"text":"Service mesh management and monitoring (Kiali)","hash":"_service_mesh_management_and_monitoring_kiali","id":24},{"text":"Request monitoring and tracing service (Jaeger)","hash":"_request_monitoring_and_tracing_service_jaeger","id":25},{"text":"3. Services with restricted access","hash":"_services_with_restricted_access","id":26},{"text":"4. Disabled services","hash":"_disabled_services","id":27}]},"33":{"id":33,"text":"On this page: 1. Introduction 2. Creating a registry access request 3. Approving a registry access request 4. Monitoring the build process in Jenkins 5. Changing the registry access password Access between registries is configured via Control Plane, the admin console interface for managing clusters and registries. An administrator can grant access to the data of the target, or master registry for other registries deployed on the Platform, as well as for external systems. This is done by creating a separate user in the master registry, which the client registry then uses to access the master registry. The process of requesting access consists of the following stages: Creating a registry access request in Control Plane. Validating code and approving the request. Monitoring the build in Jenkins. In addition to providing access to the registry via the Control Plane admin console, the regulations administrator must also open access to the corresponding views and REST API of the registry at the data model level (for details, see Setting access attributes for registry API views). To create a registry access request, perform the following steps: Sign in to the Control Plane admin console. Open the Registries section. Go to registry settings. Open the Access to Platform registries and external systems section and click + Grant access. Select the type of system to grant access to: You can grant access to the registry deployed on the Platform or some external system (such as a service or registry outside the Platform’s cluster). Select the Platform’s internal registry option and pick the registry to grant access to from the dropdown list. If the registry is not listed, it must be created beforehand. For details, see Deploying a registry. Alternatively, select the External system option and enter the name of the system into the System name field. The name may be a maximum of 32 characters long and consist of lowercase Latin letters (a-z), digits (0-9), and a hyphen (-). The name must start and end with either a Latin letter or number. The password is generated automatically. You can check it after establishing access to the master registry (see Changing the registry access password). Click Grant to create the request. This creates the access request with a New status. You cannot submit two or more access requests in a row. You can submit a new request only after an authorized person has reviewed and confirmed the previous request. In other words, requests are created and confirmed one by one. Next, changes are pushed to the Gerrit repository (git push) for further code review and confirmation of changes (for details, see Approving a registry access request). You can block, unblock, or completely cancel access to a registry. The process of requesting blocking, unblocking, or cancelling access is identical to requesting access. An example of blocking one Platform registry’s access to another registry An example of unblocking one Platform registry’s access to another registry An example of cancelling one Platform registry’s access to another registry After successfully creating a registry access request through the Control Plane admin console, you need to go through the code validation procedure. You can do this either in Control Plane or Gerrit. Perform the following steps: Sign in to Control Plane. Open the Update requests section and locate the request you created earlier. Click the view icon 👁 to open the request. The proposed changes are applied to the deploy-templates/values.yaml configuration file upon confirmation. Compare the changes between the two versions that open in a new window and make sure the data you entered is correct. Click Approve. The comparison window provides a convenient way of reviewing the differences between the two versions: the current (left) and the new (right). After the approval, Jenkins automatically starts the build process using the latest changes (for details, see Monitoring the build process in Jenkins). You can also approve the request through the Gerrit interface. Sign in to Gerrit using an appropriate link. Review the code and approve the changes (git merge) to the master branch of the repository. The status of the approved access request in the Update requests section changes to Merged. Registry’s access status in the Access to Platform registries and external systems section appears as Active. After the changes are merged to the master branch of the Gerrit repository, Jenkins automatically starts the build process using the latest changes. After the changes are merged to the master branch of the Gerrit repository successfully, you need to make sure that the Master-Build- pipeline has started and completed successfully in Jenkins. is the name of the registry to which you are configuring access. Open the cluster management console in Control Plane. Open the Configuration section. Click the link to Jenkins in the CI column. Wait until all the steps of the Master-Build- build are completed. This may take up to 15 minutes. The changes take effect after a successful build. After the access request is created, the system generates the registry access password automatically. The password is saved to the Vault secrets storage. To view or copy the password, click the password icon that appears in the Control Plane interface. The encrypted password is also saved to Keycloak for further authentication of registries and external systems, as well as to verify the generated secret in Vault. To change the password: Cancel access to the registry or external system. To do this, go to the Access to Platform registries and external systems section and click the Cancel access icon. Grant access again by creating a new access request. Once you do that, the old password will be deprecated, and the new one will be generated automatically.","title":"Configuring registry access","component":"platform","version":"1.9.6","name":"control-plane-registry-grant-access","url":"/platform/1.9.6/admin/registry-management/control-plane-registry-grant-access.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Creating a registry access request","hash":"create-access-request","id":2},{"text":"3. Approving a registry access request","hash":"request-confirmation","id":3},{"text":"4. Monitoring the build process in Jenkins","hash":"jenkins-ci","id":4},{"text":"5. Changing the registry access password","hash":"password-change","id":5}]},"34":{"id":34,"text":"The Control Plane administrative panel provides flexible management of parameters using the power of the Platform. It is an effective tool for managing resources used by containers within your registry instance, ensuring optimal performance and efficiency. Resource management is available both during registry deployment and registry updating. Choose a service from the list to configure its resources and click on the + (Add). During registry deployment, all available services are configured and pre-populated with corresponding values for requests, limits, and default environment variables. Even if services are removed from the list, the Platform will apply the standard configuration during registry deployment. Set custom values for resources. Istio sidecar Sidecar is an additional container that runs alongside the main container in an OpenShift pod. Istio uses the sidecar approach to make changes to the network configuration without modifying the application itself. Activate the Enabled parameter. This parameter indicates whether Istio sidecar is enabled for this specific service. Configure the Requests and Limits parameters. These parameters specify the optimal (Requests) and maximum (Limits) resources to be allocated for the Istio sidecar. Requests represent the minimum resources guaranteed by OpenShift for the container. In our example, it is 350m CPU and 128Mi memory for the Istio sidecar. If the container requires more resources, and they are available, OpenShift can provide them. Limits represent the maximum resources allowed for the container by OpenShift. In our example, it is 350m CPU and 128Mi memory for the Istio sidecar. If the container tries to use more resources, it may be forcibly stopped or demoted to a lower priority in the deployment queue on the nodes. Container Container is the main container with the application. Configure the Requests and Limits parameters. These parameters specify the optimal (Requests) and maximum (Limits) resources to be allocated for the main container. Requests represent the minimum resources guaranteed by OpenShift for the container. In our example, it is 1 CPU and 2Gi memory for the main container. If the container requires more resources, and they are available, OpenShift can provide them. Limits represent the maximum resources allowed for the container by OpenShift. In our example, it is 1 CPU and 2Gi memory for the main container. If the container tries to use more resources, it may be forcibly stopped or demoted to a lower priority in the deployment queue on the nodes. Environment variables are dynamic name-value pairs stored in the system and can be used by various programs. They are particularly useful in containerized and distributed environments like the registry platform, where each container or pod can have its own environment variables. This allows individual control over the configuration and behavior of each container or pod. The JAVA_OPTS variable is used to configure the JVM (Java Virtual Machine) parameters. In this case, the specified parameters -Xms1536m and -Xmx1536m set the minimum (-Xms) and maximum (-Xmx) memory size that the JVM can use. You can remove environment variables from the settings by clicking on the - button. Click Next, if this is a registry deployment step or Confirm, if it’s a configuration update. When editing the registry, an update request with the status New will be generated. Go back to the Registries section, scroll down the page, and find the Update requests. Open the generated request by clicking on the preview icon - 👁. The proposed changes will be applied to the deploy-templates/values.yaml file configuration upon confirmation. In the new window, compare the two versions of the changes, ensure the data you entered is correct, and click Confirm.","title":"Managing registry resources","component":"platform","version":"1.9.6","name":"control-plane-registry-resources","url":"/platform/1.9.6/admin/registry-management/control-plane-registry-resources.html","titles":[]},"35":{"id":35,"text":"You can delete your registry if necessary. To do this, perform these steps: Sign in to the Control Plane admin console as the Platform administrator. Open the Registries section, find the registry you wish to delete, and click the delete icon (🗑). To avoid accidental data loss, confirm your action by typing the name of the registry you wish to delete in a new window. Deleting the registry takes some time. The Jenkins service starts the Delete-release- (where is the name of your registry) pipeline automatically. To monitor the deletion process, go to Registries > Quick links > Platform administrative zone > Configuration deployment service (Jenkins). In Jenkins, find the Delete-release- folder and monitor the latest process status.","title":"Deleting a registry","component":"platform","version":"1.9.6","name":"control-plane-remove-registry","url":"/platform/1.9.6/admin/registry-management/control-plane-remove-registry.html","titles":[]},"36":{"id":36,"text":"You can approve registry configuration update requests using the Control Plane admin console — that is, perform a git merge to the repository from the Control Plane interface. This feature enables you to make and confirm any changes via the admin console. This article shows an example of adding a new registry administrator. Sign in to the Control Plane admin console. Open the Registries section and select the registry you wish to edit. Click the Edit button in the upper-right corner. Open the Administrators section and add a new registry administrator. To learn more about adding Platform and registry administrators, see: admin:registry-management/control-plane-assign-platform-admins.adoc#add-platform-admin-cp admin:registry-management/control-plane-create-registry.adoc#add-registry-admin Click Confirm to save your changes. As a result, the system generates a registry configuration update request with a New status. Go back to the Registries section and scroll down to the Update requests section. Click the view icon 👁 to open your request. The proposed changes are applied to the deploy-templates/values.yaml configuration file upon confirmation. Compare the changes between the two versions that open in a new window and make sure the data you entered is correct. Click Approve. The comparison window provides a convenient way of reviewing the differences between the two versions: the current (left) and the new (right). As a result, your request gains an Approved status and your changes are applied. You can also reject the registry configuration changes by clicking Reject in the comparison window.","title":"Approving registry configuration update requests","component":"platform","version":"1.9.6","name":"control-plane-submit-mr","url":"/platform/1.9.6/admin/registry-management/control-plane-submit-mr.html","titles":[]},"37":{"id":37,"text":"On this page: 1. Overview 2. Section content This section provides detailed instructions on using the Control Plane admin console interface for Platform and registry administrators. This section covers the main aspects of working with the Platform and registries. Here you can learn how to deploy, configure, and delete a registry. You will find detailed instructions on how to configure access to your registries. The section also provides recommendations for updating digital signature keys and certificates for the Platform and registry, assigning administrators and granting them access rights. We pay special attention to configuring the custom DNS for user portals and the Keycloak user and role management service. You can also find information about restricting access to administrative and registry components (via CIDR), managing registry resources, and approving registry configuration update requests. A separate page describes the quick links to essential registry services and their purpose. In this section, you can learn to: Deploy, configure, and delete a registry. Configure access to your registries. Update digital signature keys and certificates for the Platform and registries. Assign administrators and grant them access rights. Configure custom DNS for user portals and Keycloak. Restrict access to administrative and registry components via CIDR. Manage registry resources. Approve registry configuration update requests. View quick links to essential registry services and their purpose. Deploying a registry Viewing and editing registry configuration Configuring registry access Configuring digital signature keys and certificates registry-management/system-keys/control-plane-platform-keys.adoc registry-management/system-keys/control-plane-registry-keys.adoc Creating Platform administrators Configuring custom DNS Configuring custom DNS for user portals Configuring custom DNS for Keycloak Restricting access to administrative and registry components admin:registry-management/сontrol-plane-registry-resources.adoc Approving registry configuration update requests Deleting a registry Quick links to registry services","title":"Platform and registries management in Control Plane","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/admin/registry-management/overview.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Section content","hash":"_section_content","id":2}]},"38":{"id":38,"text":"Vertical scaling of master nodes for OKD in AWS and vSphere","title":"Scaling","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/admin/scaling/overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"39":{"id":39,"text":"To perform vertical scaling of a master node for OKD, take the following steps: Stop the master nodes in AWS (EC2) or vSphere console. Update resource configuration for the instance in AWS or vSphere console. For AWS: Change the type of the existing master instance in EC2 service. For example, from r5.2xlarge to r5.4xlarge. Such a change can only be done with instances of the same type. For vSphere: Select the master virtual machine, which requires virtual hardware configuration change. Run master nodes in AWS (EC2) or vSphere console. Each master node must be configured separately, with an interval of 15-30 minutes. Check if the changes were properly applied in master nodes resources. View the configuration of current resources by applying master filter in Compute → Nodes section of OKD console.","title":"Vertical scaling of master nodes for OKD in AWS and vSphere","component":"platform","version":"1.9.6","name":"vertical-scaling-master-nodes","url":"/platform/1.9.6/admin/scaling/vertical-scaling-master-nodes.html","titles":[]},"40":{"id":40,"text":"On this page: 1. Prerequisites 2. Updating certificates This document provides instructions on updating the certificates for the OpenShift 4.x cluster’s router and API server using Let’s Encrypt service. Before updating certificates, make sure you have the following: Your cluster role is cluster-admin. OpenShift CLI (oc cli) is installed. You can create and edit DNS records in the hosted zone which contains the domain name of the cluster. In this document, we’ll refer to this domain name as DNS_WILDCARD. Certbot is installed. To learn how to install Certbot, refer to Certbot instructions. On the Certbot instructions page, select the following options: My HTTP website is running: select Other. on: select your operating system (for example, macOS). Figure 1. Certbot instructions page Performing any instructions other than installing Certbot is not necessary. Start the console as a user with sudo privileges. Run the following command: certbot certonly --manual First run only: when prompted, enter your email address and agree to the terms of use, then choose whether you wish to share your email with the Electronic Frontier Foundation. Specify domain names for certificates: *.. For example: *.openshift.example.com. *.apps.. For example: *.apps.openshift.example.com. Perform this optional step: If you get the following message: \"You have an existing certificate that has exactly the same domains or certificate name you requested and isn’t close to expiry.\", select the Renew & replace the certificate option. In the hosted zone which contains the DNS_WILDCARD of the cluster, create the TXT records required by Certbot. Before you hit Enter, make sure the record exists and is up-to-date by running the following command in a different console window: nslookup -type=txt Figure 2. Verifying the record If the certificate is issued successfully, you will get a corresponding message with the path to the key and certificate chain files: Figure 3. Certificate saved successfully Delete the old router and API secret by running these commands: oc delete secret router-certs -n openshift-ingress oc delete secret router-certs -n openshift-config Create the new router and API secret by running these commands: oc create secret tls router-certs --cert= --key= -n openshift-ingress oc create secret tls router-certs --cert= --key= -n openshift-config Delete router pods by running the following command: oc delete pods --all -n openshift-ingress","title":"Updating OpenShift cluster certificates","component":"platform","version":"1.9.6","name":"certificates-update","url":"/platform/1.9.6/admin/update/certificates-update.html","titles":[{"text":"1. Prerequisites","hash":"_prerequisites","id":1},{"text":"2. Updating certificates","hash":"_updating_certificates","id":2}]},"41":{"id":41,"text":"This section presents a comprehensive guide for updating the Platform and registries to a specific build version, for instance, 1.9.x.28. It carefully outlines all necessary procedures for the Platform upgrade, including standard update techniques like manual updates, usage of the platform-deploy pipeline, and specialized actions to undertake post-update. This part will also give you in-depth insights into the registry update process. It emphasizes critical steps to execute at different phases: pre-update, during the update, and post-update. Specific attention is devoted to potential complications and errors during the upgrade. This information aims at equipping you with a profound understanding of the process, thus facilitating the effective implementation of updates. Start the update process here: admin:update/special-steps-for-update/special-steps.adoc. admin:update/special-steps-for-update/special-steps.adoc Updating Platform infrastructure components Updating registry components Updating OpenShift cluster certificates","title":"Updating","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/admin/update/overview.html","titles":[{"text":"In this section","hash":"_in_this_section","id":1}]},"42":{"id":42,"text":"On this page: 1. Overview 2. Update options in Control Plane 3. Reviewing changes in the Gerrit code review system 4. Monitoring the build process in Jenkins Registry updates management follows the GitOps approach. This means that any changes to the configuration of the registry or its components are made by modifying the configuration of these components in their respective Git branches. Each component is a separate Git repository. You can manage updates of the registry components in the Control Plane admin console interface. Make sure to update Platform components before updating registry components. If the registry is at the latest version, the update option will be unavailable. The update process can be divided into these stages: Select update options in Control Plane. Go through code review in Gerrit. Monitor the build process in Jenkins. Sign in to Control Plane. Open the Registries section. Go to registry settings. Click the Update button in the upper-right corner. Select the version you need in the new window to update the registry and click the Confirm button to save your changes. You can also perform the update via the registry edit option: Registries > Edit > Update Registry. Available update versions are always higher than the current build. Click the Confirm button to save your changes. As a result, the system generates a registry components version update request and pushes changes (via git push) to the Gerrit repository for further code validation. After successfully creating a version update request through the Control Plane admin console, you need to go through the code review procedure in Gerrit. To do this, perform these steps: Sign in to Control Plane. Open the Registries section. Scroll down to the Update requests section. Find your request and click the View in Gerrit icon next to it. In Gerrit, review the code changes and approve merging the changes to the master branch of the repository (via git merge). After the changes are merged to the master branch of the Gerrit repository, Jenkins automatically starts the build process using the latest changes. After the changes are merged to the master branch of the Gerrit repository successfully, you need to make sure that the MASTER-Build- pipeline (where is the name of your registry) has started and completed successfully in Jenkins. In our example, the name of the registry is cert-labs. To monitor the build process in Jenkins, perform these steps: Sign in to Control Plane. Open the Registries section. Scroll down to the Configuration section and click the Jenkins link icon in the CI column. In Jenkins, wait until all the steps of the MASTER-Build-cert-labs build are completed. After a successful build, registry components are updated to the version you selected.","title":"Updating registry components","component":"platform","version":"1.9.6","name":"update-registry-components","url":"/platform/1.9.6/admin/update/update-registry-components.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Update options in Control Plane","hash":"_update_options_in_control_plane","id":2},{"text":"3. Reviewing changes in the Gerrit code review system","hash":"_reviewing_changes_in_the_gerrit_code_review_system","id":3},{"text":"4. Monitoring the build process in Jenkins","hash":"_monitoring_the_build_process_in_jenkins","id":4}]},"43":{"id":43,"text":"On this page: 1. Overview 2. Update options in Control Plane 3. Reviewing changes in the Gerrit code review system 4. Monitoring the build process in Jenkins Platform cluster management follows the GitOps approach. This means that any changes to the configuration of the OpenShift cluster, cluster components, and Platform components are made by modifying the configuration of these components in their respective Git branches. Each component is a separate Git repository. The metadata of all infrastructure components that can be managed using the GitOps approach is stored in the cluster-management component. Cluster Management or cluster-mgmt is a composite repository that defines specific versions of infrastructure components. Updating this component will automatically update the corresponding infrastructure components of the Platform. Here is a list of components which can be updated using the GitOps approach: catalog-source; storage; monitoring; logging; service-mesh; velero; control-plane-nexus; user-management. You can manage the updates of Platform infrastructure components in the Control Plane admin console interface. The update process can be divided into these stages: Select update options in Control Plane. Go through code review in Gerrit. Monitor the build process in Jenkins. Sign in to Control Plane. Open the Platform management section. Click the Edit button in the upper-right corner. On the page that opens, go to the Cluster update section. Select the version to which you wish to update the Platform components from the dropdown list. Available update versions are always higher than the current build. Click the Confirm button to save your changes. As a result, the system generates a Platform components version update request and pushes changes (via git push) to the Gerrit repository for further code validation. After successfully creating a version update request through the Control Plane admin console, you need to go through the code review procedure in Gerrit. To do this, perform these steps: Sign in to Control Plane. Open the Platform management section. Scroll down to the Update requests section. Find your request and click the View in Gerrit icon next to it. In Gerrit, review the code changes and approve merging the changes to the master branch of the repository (via git merge). After the changes are merged to the master branch of the Gerrit repository, Jenkins automatically starts the build process using the latest changes. After the changes are merged to the master branch of the Gerrit repository successfully, you need to make sure that the cluster-mgmt pipeline has started and completed successfully in Jenkins. Sign in to Control Plane. Open the Platform management section. Scroll down to the Configuration section and click the Jenkins link icon in the CI column. In Jenkins, wait until all the steps of the MASTER-Build-cluster-mgmt build are completed. After a successful build, Platform infrastructure components are updated to the version you selected. The option to update registry components becomes available.","title":"Updating Platform infrastructure components","component":"platform","version":"1.9.6","name":"update_cluster-mgmt","url":"/platform/1.9.6/admin/update/update_cluster-mgmt.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Update options in Control Plane","hash":"_update_options_in_control_plane","id":2},{"text":"3. Reviewing changes in the Gerrit code review system","hash":"_reviewing_changes_in_the_gerrit_code_review_system","id":3},{"text":"4. Monitoring the build process in Jenkins","hash":"_monitoring_the_build_process_in_jenkins","id":4}]},"44":{"id":44,"text":"On this page: 1. General overview 2. Main purpose 3. Business drivers 4. Business objectives 5. Non-functional capabilities 6. Functional capabilities 7. Sections of the architectural documentation The Platform for state registries is an information system designed to deliver government services in a digital format efficiently. It enables the rapid creation, modeling, deployment, and maintenance of electronic state registries. The main objective of this solution is to implement a decentralized and regulated approach to managing state registries. This product aims to balance data security requirements, interoperability, deployment speed, and the cost of registry ownership. The Registries Platform aims to address several problems with the current state of government information registries, which complicate the process of digitizing government services: Many registries, owned by multiple entities, are maintained in Excel with poor data quality. Registry information systems are outdated and require updates. There is a lack of registry classification and differentiation of requirements for protecting registry data. High costs are involved in developing and maintaining individual registries. Building inter-registry integrations poses significant complexity. The creation of each registry is determined by a separate law, leading to different definitions and approaches. Each registry requires the development of its infrastructure. There is a lack of centralized evolution of registry functionalities. 100% of government services available to citizens and businesses in digital format. Building a unified government information space; Standardizing the process of developing and operating registries; Optimizing costs for registry development, deployment, and ownership; Reducing demands on registry developers and administrators; Ensuring societal trust and preventing corrupt practices; Facilitating efficient inter-registry interactions; Establishing the groundwork for providing digital services; Ensuring high data storage reliability for registries; Deployment of the Platform for state registries in a public or private cloud environment; Creating one or multiple registries based on a single instance of the Platform, supporting the \"Registry as a Service\" SaaS model; Centralized distribution of updates to instances of the Platform for state registries; Ensuring registry compliance of the platform registries with security, scalability, and fault-tolerance requirements; Auditing user actions and system-critical events; Supporting data versioning in registries; Backup and data recovery for registries; Monitoring and logging functionalities; Encryption of registry data. Low-code approach to registry development, including data models, business processes for information and administrative services, organizational structure, external integrations, and more; Web interface for accessing and providing government services; Transactional model for making changes to the registry using digital signatures for data change requests; Support for quick integration of registries with external systems; Public API for registry data and rate limit management; Data access rights management using RBAC; Building analytical reports based on registry data; Generating extracts based on registry data, and more. The technical documentation package of the Platform includes the following: Conceptual architecture of the Platform — describing the conceptual design of the solution, end-users of the Platform for state registries, and interactions with external systems; Platform logical architecture — providing a high-level structure of the solution with a decomposition into components (zones, subsystems, etc.) and their interactions; Platform security architecture — technical documentation describing the security architecture of the Platform for state registries; arch:architecture/platform-deployment.adoc — conceptual deployment diagram of the Platform for state registries; arch:architecture/platform-quality-attributes.adoc — key quality attributes with descriptions of approaches and techniques to address them; Platform technology stack — a description of the key technologies and categories used to build the Platform for state registries solution; High-level Design of the Platform’s zones and subsystems — a set of sections with high-level architecture, component descriptions, interactions, key aspects of the solution, and more; Calculating the registry cost — a description of the approach to assessing the cost of owning registries deployed on the Platform for state registries.","title":"Architectural documentation","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/overview.html","titles":[{"text":"1. General overview","hash":"_general_overview","id":1},{"text":"2. Main purpose","hash":"_main_purpose","id":2},{"text":"3. Business drivers","hash":"_business_drivers","id":3},{"text":"4. Business objectives","hash":"_business_objectives","id":4},{"text":"5. Non-functional capabilities","hash":"_non_functional_capabilities","id":5},{"text":"6. Functional capabilities","hash":"_functional_capabilities","id":6},{"text":"7. Sections of the architectural documentation","hash":"_sections_of_the_architectural_documentation","id":7}]},"45":{"id":45,"text":"The Platform is built on the principles of microservice architecture based on cloud infrastructure built on OKD. One instance of the Platform supports the deployment and operation of several registries. The Platform meets the appropriate security requirements НД ТЗІ and is fault-tolerant. Development of the registry deployed on the Platform is built on the principles of Low-code (BPMN, the custom forms, a declarative description of the API for the database, REST API - interaction between the services\"). The system provides backup of components and data of the registry, key components of the Platform, as well as recovery of cluster master nodes OpenShift. This protects users from losing any critical data. The Platform provides reliable protection of confidential data. Confidential data is reliably protected from unforeseen access and information leakage. The Platform provides reliability of data storage,thus the database of each individual registry is protected from data loss and destruction. The Platform allows to save the entire history of changes. Data is not deleted from the registry. The data is updated with the mandatory preservation of versioning. The transaction log is protected from changes. The Platform supports transactional model of changes in the registry. The changes to the database are not performed directly. All actions with the database are carried out only within the framework of regulated business processes. All transactions are confirmed (for example, change requests, signed by digital signature, etc.). The Platform prevents unauthorized changes. Changes to registry data are not possible: without appropriate access rights (according to simulated business processes); without authentication and authorization; outside of regulated business processes. The Platform provides the possibility of distribution of rights based on RBAC. The distribution of rights is organized in a way that there is no \"super administrator\" who can perform any actions in the system. This allows you to reduce the risks of illegal actions with system data.","title":"Architecturally significant requirements","component":"platform","version":"1.9.6","name":"platform-asr","url":"/platform/1.9.6/arch/architecture/platform-asr.html","titles":[]},"46":{"id":46,"text":"On this page: 1. Abstract 2. Platform users 3. Interaction with external systems 3.1. Accredited Key Certification Center (AKCC) 3.2. Digital identification service (id.gov.ua) 3.3. Trembita SEI SEIR 3.4. Diia services (diia.gov.ua) 3.5. External mapping services 3.6. External systems This contextual diagram shows the Platform for state registries in the ecosystem of the interfaced national information systems, and categories of users interacting with the system. For interoperability purposes, the Platform for state registries supports two main options for configuring data exchange: Using the Trembita safe exchange bus as a protected transport. Setting up direct integrations based on the REST and SOAP interaction protocols for the systems that are not participants of data exchange under Trembita SEI SEIR. For integration purposes, the external systems can be both existing information systems and the registers deployed on the individual instances of the Platform for state registries. You can learn more about the technical design of the Platform for state registries in Platform logical architecture. The main users of the Platform for state registries can be divided into the following categories depending on the scenarios of their interaction with the system and access rights: Unauthorized users: The users with access only to public data and the authentication page. Citizens: Natural persons or legal entities who passed authentication and self-registration in the register to have access to electronic services. Officers: Official representatives of government bodies providing services under their official duties, or the entities registered as service providers (depending on the requirements of an individual register). Developers of the Registry Regulations: The users responsible for the Lowcode development of the digital register regulations Support Service (L2): The users responsible for monitoring of the system’s technical metrics, incident response. Service administrators: A category of users responsible for maintaining and configuring registry instances. Infrastructure administrators: A category of users responsible for the installation and maintenance of the Platform for state registries. You can find out more about the categories of users of the Platform for state registries in arch:architecture/platform/operational/user-management/platform-actors-roles.adoc. The Platform for state registries interacts with Accredited Key Certification Centers for obtaining lists of revoked certificates, receiving a chain of user certificates and checking their status, forming a time stamp, etc. You can learn more about the design of the integrated subsystems in the relevant sections: arch:architecture/registry/operational/digital-signatures/overview.adoc arch:architecture/platform/operational/user-management/overview.adoc The Platform for state registries allows authentication of citizens and officers — the registry service users — using the Integrated Electronic Identification System (IEIS). You can learn more about the design of the integrated subsystems in the relevant sections: arch:architecture/platform/operational/user-management/overview.adoc The Platform for state registries is integrated into the Trembita System of Electronic Interaction of State Electronic Information Resources (SEI SEIR) to ensure secure data exchange with the state registers and other information systems. You can learn more about the design of the integrated subsystems in the relevant sections: arch:architecture/platform/operational/user-management/overview.adoc arch:architecture/registry/operational/bpms/overview.adoc arch:architecture/registry/operational/external-integrations/overview.adoc arch:architecture/data-exchange/overview.adoc The Platform for state registries is integrated with the ecosystem of digital public services Diia to improve and ensure the integrity of the end-users' experience when receiving public services. You can learn more about the design of the integrated subsystems in the relevant sections: arch:architecture/registry/operational/notifications/overview.adoc The Platform for state registries uses external cartographic services to download geospatial data, layers and geocoding to provide the ability to enter, search and display the register subjects that are connected to an area. You can learn more about the design of the integrated subsystems in the relevant sections: arch:architecture/registry/operational/geo/overview.adoc The Platform for state registries supports external integrations via Trembita SEG, or direct integrations according to the requirements of the target registers and the level of interoperability of external systems. You can learn more about the design of the integrated subsystems in the relevant sections: arch:architecture/registry/operational/external-integrations/overview.adoc arch:architecture/registry/operational/bpms/overview.adoc","title":"Conceptual architecture of the Platform","component":"platform","version":"1.9.6","name":"platform-conceptual","url":"/platform/1.9.6/arch/architecture/platform-conceptual.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Platform users","hash":"_platform_users","id":2},{"text":"3. Interaction with external systems","hash":"_interaction_with_external_systems","id":3},{"text":"3.1. Accredited Key Certification Center (AKCC)","hash":"_accredited_key_certification_center_akcc","id":4},{"text":"3.2. Digital identification service (id.gov.ua)","hash":"_digital_identification_service_id_gov_ua","id":5},{"text":"3.3. Trembita SEI SEIR","hash":"_trembita_sei_seir","id":6},{"text":"3.4. Diia services (diia.gov.ua)","hash":"_diia_services_diia_gov_ua","id":7},{"text":"3.5. External mapping services","hash":"_external_mapping_services","id":8},{"text":"3.6. External systems","hash":"_external_systems","id":9}]},"47":{"id":47,"text":"Library name Language Function System libraries ddm-starter-actuator Java SpringBoot-starter for the connection of monitoring metric and readiness/liveness test export functionality ddm-starter-audit Java SpringBoot-starter for the integration of backend-application into business-audit subsystem ddm-starter-error-handler Java SpringBoot-starter for the connection of error processing functionality ddm-starter-localization Java SpringBoot-starter for the connection of system notifications localization functionality ddm-starter-logger Java SpringBoot-starter for the connection of the functionality for extended logging of backend-applications, general notifications template configuration, etc. ddm-starter-logger2 (deprecated) Java SpringBoot-starter for the connection of the functionality for extended logging of backend-applications, general notifications template configuration, etc. ddm-starter-security Java SpringBoot-starter for the connection of JWT-token-based authorization functionality for backend-applications General application libraries ddm-starter-database Java SpringBoot-starter for the integration of backend-application with SQL-like databases ddm-starter-kafka Java SpringBoot-starter for the integration of backend-application with Kafka-broker ddm-starter-notifications Java SpringBoot--starter for the connection of the functionality for notifications sending to the users through dedicated communication channels ddm-starter-swagger Java SpringBoot-starter for the connection of the Swagger interface automatic generation functionality for CRUD-endpoints ddm-starter-trembita-integration Java SpringBoot-starter for the integration of backend-application with external registries via the Trembita SEI SEIR ddm-starter-validation Java SpringBoot-starter for the connection of data and digital documents validation functionality feign-annotation-error-decoder Java A library for the generation of Java errors, based on HTTP errors for the Feign client low-code-platform-parent Java Parent project for Java applications with the compatible versions of third-party libraries Domain libraries ddm-file-storage Java Domain library for digital document operations in the Business process intermediate data storage ddm-form-data-storage Java Domain library for the operations with data entered via UI-forms in the Business process intermediate data storage ddm-message-payload-storage Java Domain library for the operations with registry business-process messages in the Business process intermediate data storage data-model Liquibase/XML Library for the configuration of registry database before and after data model deployment excerpt-model Java The library contains Java classes for excerpt representation process-history-model Java The library contains Java classes for historical business-process representation user-settings-model Java The library contains Java classes for user configuration representation Extenstion libraries ddm-starter-juel-function Java Library of custome JUEL-functions for registry business-process modelling business-process-modeler-extensions Java Element templates for the convenient use of Platform delegates during the business process modelling liquibase-ddm-ext Java Library of Liquibase-extensions for the modelling of registry data model liquibase-ext-schema XML/XSD XSD-scheme of of Liquibase-extensions for the validation of registry data model keycloak-ds-citizen-authenticator Java Keycloak extensions for citizen authentication functionality (e-Signature, id-gov-ua) keycloak-ds-officer-authenticator Java Keycloak extensions for officer authentication functionality (e-Signature, id-gov-ua) keycloak-rest-api-ext Java Keycloak extensions for additional REST API oidc-usermodel-custom-attributes-mapper Java Розширення для Кейклоака з реалізацію мапперов атрибутів користувачів для oidc клієнтів saml-user-custom-attributes-mapper Java Keycloak extensions with the realization of attribute mappers for users for saml clients Сервісні клієнти ddm-ceph-client Java Library-client for the interaction with Ceph object storage via S3-compatible REST API ddm-data-factory-client Java Library-client for the interaction with Data factory via REST API ddm-digital-document-client Java Library-client for the interaction with the intermediate document storage ddm-dso-client Java Library-client for the interaction with the e-Signature operations service ddm-form-validation-client Java Library-client for the interaction with the UI-forms data validation service ddm-idm-client Java Library-client for the interaction with Keycloak IAM Jenkins libraries edp-library-pipelines-fork Groovy Library that contains pipelines used for registry and platform components deployment edp-library-stages-fork Groovy Library that contains pipeline stages used for registry and platform components deployment registry-regulations-publication-pipeline Groovy Library that contains pipelines used for regulations checking and deployment registry-regulations-publication-stages (deprecated) Groovy Library that contains pipeline stages used for regulations checking and deployment Command line interfaces camunda-auth-cli Java CLI for the configuration of Camunda authorization during registry regulations deployment geoserver-publisher Java CLI for the Geoserver configuration during registry regulations deployment registry-regulations-validator-cli Java CLI for the validation of registry regulations during deployment s3-storage-cleanup-cli Java CLI for the S3 storage cleaning from the objects created during business-process execution service-generation-utility Java CLI for service generation during registry regulations deployment","title":"Platform Libraries","component":"platform","version":"1.9.6","name":"platform-libraries","url":"/platform/1.9.6/arch/architecture/platform-libraries.html","titles":[]},"48":{"id":48,"text":"The Registry Platform is a distributed system with microservice architecture. Its design is based on the following fundamental ideas: Deployment infrastructure agnosticism Centralized development and updating Provision of sufficient level of registry isolation Joint (re-)using of typical services by the registries Usage of secure transport for integrations Registry compliance with security, scalability and fault-tolerance requirements The Registry Platform is built using open standards, based on open source technologies. The Registry Platform is a distributed system with microservice architecture, where each component has a defined function, and inter-component interaction is based on standardized data exchange protocols. The Registry Platform is a Cloud_native system, based on the OpenShift container orchestration platform to ensure reliability, scalability and infrastructure agnosticism. The Registry Platform uses GitOps-approach to automate infrastructure configuration, component deployment, and the system as a whole. The Registry Platform is based on Zero-Trusr security principles to ensure protected inter-service interaction with mandatory authentication, authorization, and traffic encryption. External access to the Registry Platform components is provided via API-gateway with mandatory authentication and authorization. The Registry Platform components use a standardized approach to monitoring metrics exporting, business-transactions data tracing, and event logging. The Registry Platform component instances don’t store critical data on system state, or any user session data in the memory. All user actions with the data, and system-critical events of the Registry Platform are subject to mandatory recording in audit log. Registry business-data deployed Registry Platform are subject to mandatory encryption for long-term storing. On this structure diagram you can see the decomposition of the Registry Platform on the zone and subsystem levels, and the general interaction scenarios. A separate system level may contain two zones with subsystems that are responsible for the servicing of administration and operational traffic. The subsystems are composed of services that address a block of functional and non-functional requirements. The Registry Platform supports deployment in public and private cloud environment. You can learn more about the container orchestration platform here: architecture/container-platform/container-platform.adoc Every Registry Platform instance includes a level of Central components of the Platform, which is comprised of two logical zones: Administrative zone of the Platform - subsystems that provide administrative functions for the Platform instance and the registries deployed in it architecture/platform/operational/overview.adoc - subsystems that provide general functions for the joint platform usage One Registry Platform instance can service a group of registries, isolated from each other. Each registry tenant is presented by two separate zones: architecture/registry/administrative/overview.adoc - subsystems that provide development functions, deployment functions, and the service of digital registry regulations architecture/registry/operational/overview.adoc - subsystems that provide the functioning of the registry according to the deployed digital regulations You can learn more about the Platform resource state management component here: Component for managing the state of Platform resources You can learn more about the \"Trembita\" secure exchange gateway here: architecture/data-exchange/overview.adoc You can learn more about the \"Griada\" software-hardware cryptomodule here: architecture/network-crypto-module/overview.adoc","title":"Platform logical architecture","component":"platform","version":"1.9.6","name":"platform-logical","url":"/platform/1.9.6/arch/architecture/platform-logical.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Architecture principles","hash":"_architecture_principles","id":2},{"text":"High-level structure","hash":"_high_level_structure","id":3},{"text":"Infrastructure","hash":"_infrastructure","id":4},{"text":"Container orchestration platform","hash":"_container_orchestration_platform","id":5},{"text":"Central components of the Platform","hash":"_central_components_of_the_platform","id":6},{"text":"Registries","hash":"_registries","id":7},{"text":"Platform resource state management component","hash":"_platform_resource_state_management_component","id":8},{"text":"\"Trembita\" secure exchange gateway","hash":"_trembita_secure_exchange_gateway","id":9},{"text":"\"Griada\" software-hardware cryptomodule","hash":"_griada_software_hardware_cryptomodule","id":10}]},"49":{"id":49,"text":"On this page: 1. Programming languages 2. Client applications frameworks 3. Server application frameworks 4. Scripting tools 5. Data stores 5.1. Technologies 5.2. Extensions 5.3. Operators 5.4. Operators 6. Infrastructure management 6.1. Technologies 7. Container management 7.1. Technologies 8. Platform, registries, and regulations deployment automation 8.1. Technologies 8.2. Operators 9. User and access management 9.1. Technologies 9.2. Operators 10. External traffic management 10.1. Technologies 10.2. Operators 11. Web server 11.1. Technologies 12. Service mesh management 12.1. Technologies 12.2. Operators 13. Message brokers 13.1. Technologies 13.2. Operators 14. Secrets storage 14.1. Technologies 14.2. Operators 15. Business process management 15.1. Technologies 15.2. Libraries 16. UI form management 16.1. Libraries 17. Geospatial data management 17.1. Technologies 17.2. Extensions 17.3. Libraries 18. Reporting and data visualization 18.1. Technologies 19. Electronic signature integration (UA) 19.1. Libraries 20. Internationalization 20.1. Libraries 21. Database evolution management 21.1. Technologies 22. Email exchange 22.1. Technologies 23. Regulations quality control 23.1. Technologies 23.2. Libraries 24. Event monitoring 24.1. Technologies 24.2. Extensions 24.3. Operators 25. Event logging 25.1. Technologies 25.2. Operators 26. Backing up and restoring 26.1. Technologies 27. Documentation 27.1. Technologies Language Version License Description Java 11.x GPL v2 Object-oriented programming language Groovy 3.0.6 APACHE LICENSE, v2.0 Object-oriented dynamic programming language that works within the JRE environment Go 1.19 Copyright (c) 2009 The Go Authors. All rights reserved. Go programming language developed by Google Python 3.X PSF License Programming language JavaScript V8 BDS license Programming language for web application development TypeScript 4.5.5 APACHE LICENSE, v2.0 Programming language introduced by Microsoft in the fall of 2012; positioned as a tool for developing web applications, extending the capabilities of JavaScript Technology Version License Description VueJS 3.2.45 MIT JavaScript library for creating user interfaces in single-page applications development ReactJS 5.0.1 MIT JavaScript library for creating user interfaces, aimed at solving issues of partial content updates on web pages, commonly encountered in single-page application development Redux 4.1.2 MIT JavaScript library designed for managing the state of JavaScript applications Material UI 4.11.4 MIT UI component library that implements the material design system. Most user input components are based on this library. Technology Version License Description Spring 5.3.13 APACHE LICENSE, v2.0 Java universal framework for building server applications Spring Boot 2.6.1 APACHE LICENSE, v2.0 An extension to the Spring Framework for simplifying the development of Spring-based applications through automatic configuration and the availability of Spring Boot starters Spring Cloud 2021.0.0 APACHE LICENSE, v2.0 A framework for implementing common patterns in building reliable distributed systems Gin Web Framework 1.7.2 MIT Go framework for building server applications Node.JS 16.18.1 MIT A platform for executing high-performance network applications written in JavaScript Technology Version License Description bash 4.2 GNU General Public License, version 3 Modern command-line shell for the GNU/Linux environment. Technology Version License Description PostgreSQL 14.5.0 The PostgreSQL Licence Object-relational database management system Redis 6.0.8 Three clause BSD license Distributed key-value store that stores data in memory Ceph 6.2.0-152 LGPL-2.1, LGPL-3, BSD 3-clause, Apache-2.0, MIT License, Boost Software License, Version 1.0, BSD 3-clause, CC0, Boost Software License, Version 1.0, GNU Affero General Public License, Version 3, Distributed file system Extensions Version License Description Redis Sentinel 6.2.6 Three clause BSD license High availability solution for Redis Pgpool 4.3.1 MIT Connection pool manager for PostgreSQL that also allows organizing data replication, load balancing, and data caching pgAdmin 4 6.18 PostgreSQL licence ВWeb-based database development application Operator Version License Description CrunchyData Postgres Operator 5.1.1 APACHE LICENSE, v2.0 PostgresOperator for managing the PostgreSQL cluster Redis Operator 1.1.1 APACHE LICENSE, v2.0 Operator for configuring Redis / Redis Sentinel Operator Version License Description OCS Operator 4.10.7 APACHE LICENSE, v2.0 Operator for configuring the OKD file subsystem Rook 4.9.8-2 APACHE LICENSE, v2.0 Operator for deploying and managing Ceph storage in Kubernetes Technology Version License Description Terraform >=1.0 MPL-2.0 Infrastructure deployment for platform components Technology Version License Description Cri-o 1.24 APACHE LICENSE, v2.0 Container management technology that provides a high-level API for interaction Kubernetes 1.24 APACHE LICENSE, v2.0 Container orchestration platform OKD 4.11 APACHE LICENSE, v2.0 Platform for building, deploying, and managing containers based on Kubernetes Helm Technology Version License Description Jenkins 2.303.3 MIT A server for organizing Continuous Integration and Continuous Deployment (CI/CD) processes Gerrit 3.3.2 APACHE LICENSE, v2.0 A tool for code review and integration Nexus 3.30.0 Eclipse Public License v1.0 A repository for storing 3rd party and custom artifacts Operator Version License Description EDP Codebase Operator 2.10 APACHE LICENSE, v2.0 Operator for automated Git Server configuration EDP Gerrit Operator 2.10 APACHE LICENSE, v2.0 Operator for automated Gerrit configuration EDP Jenkins Operator 2.10 APACHE LICENSE, v2.0 ОOperator for automated Jenkins configuration EDP Nexus Operator 2.10 APACHE LICENSE, v2.0 Operator for automated Nexus configuration Technology Version License Description Keycloak 15 → 20 APACHE LICENSE, v2.0 A system for user and access management, authentication, and integration with external Identity providers Operator Version License Description EDP Keycloak Operator 2.10 APACHE LICENSE, v2.0 Operator for automated Keycloak configuration Group Sync 0.0.19 APACHE LICENSE, v2 Operator for synchronizing user groups between Keycloak and OKD Technology Version License Description Kong 3.0.1 APACHE LICENSE, v2.0 РA solution for managing access to internal resources. In addition to the main functionality, the following extensions are used: Rate Limiting — allows setting limits on the number of calls from a client based on its IP address or request header. Response Transformer — allows adding custom headers to the server response. OIDC — custom-developed plugin based on https://github.com/nokia/kong-oidc. Responsible for implementing OIDC authentication and session management. Operator Version License Description Kong Ingress Controller 2.7.0 APACHE LICENSE, v2.0 Operator for configuring Kong Technology Version License Description Nginx 1.22.1 FreeBSD A solution for serving static content on demand HAProxy 2.2.24 GNU General Public License, version 2 A solution for load balancing and ensuring high availability Technology Version License Description Istio 1.18.0 APACHE LICENSE, v2.0 A solution for reliable transport between services deployed on the container orchestration platform Operator Version License Description Istio Operator 1.18.0 APACHE LICENSE, v2.0 Operator for configuring Istio Technology Version License Description Kafka 3.0.0 APACHE LICENSE, v2.0 An open-source distributed streaming platform Kafka Schema Registry 6.1.1 Confluent Community License Version 1.0 A registry (store and search) for describing data structures of Kafka messages (Avro schema, JSON schema, Protobuf schema) Operator Version License Description Strimzi 0.28 APACHE LICENSE, v2 Kafka operator for deployment and management of Kafla cluster Technology Version License Description Hashicorp Vault 1.9.7 Mozilla Public License Version 2.0 A system for managing secrets Operator Version License Description External Secrets Operator 0.7.0 APACHE LICENSE, v2.0 Operator for integrating HashiCorp Vault with Kubernetes Secrets Reloader 1.0.25 APACHE LICENSE, v2.0 Operator for observing changes in ConfigMaps and Secrets and updating them on registry components' pods Technology Version License Description Camunda BPM 7.16.0 APACHE LICENSE, v2.0 A solution for automated deployment and execution of business processes described in BPMN notation and DMN business rules Library Version License Description BPMN.JS SDK 10.0.0 Copyright (c) 2014-present Camunda Services GmbH JavaScript library for creating tools for visual modeling of business processes according to BPMN notation Library Version License Description Form.IO SDK 4.13.12 MIT JavaScript library for creating tools for modeling user forms using the Drag&Drop approach with preview capabilities Technology Version License Description GeoServer 2.21.0 GNU General Public License, version 2 A server that allows managing and distributing geospatial data Extension Version License Description PostGIS 3.2.1 GPL v2 Geo extension for PostgreSQL database Library Version License Description Leaflet 1.8.0 BSD 2-Clause \"Simplified\" License UI Javascript Library for building mobile-friendly interactive maps Technology Version License Description Redash 10.1.0 BSD 2-Clause \"Simplified\" License A solution for modeling and visualizing reports based on relational and non-relational data stores Library Version License Description EUSignCP-Java 1.3.236 Commercial license IIIT Java signature library eusign.js 20220527 Commercial license IIIT JavaScript e-signature library. Used for integration with the signature widget. Library Version License Description i18next 20.6.0 MIT UI Javascript framework for internationalization. Used together with react.i18next. Technology Version License Description Liquibase 4.3 APACHE LICENSE, v2.0 A tool for incremental management of database structure and data Technology Version License Description Mailu 1.8 ? Software package for sending and receiving email messages Postfix ? ? Mail SMAP agent Dovecot ? ? High-performance IMAP / POP3 mail server Roundcube ? ? Web-based IMAP client ClamAV ? ? Antivirus software package for detecting trojans, viruses, malware, and other malicious threats Rspamd ? ? Software for detecting and filtering email spam Technology Version License Description Wiremock 2.27.2 APACHE LICENSE, v2.0 Tool for defining test behavior of RestAPI services Cucumber 7.3.0 MIT Tool for building Behavior-Driven Development (BDD) tests Selenium 4.4.0 APACHE LICENSE, v2.0 Tool for building UI WebBrowser UI tests using web drivers Library Version License Description JUnit 5.6.2,5.8.2 Eclipse Public License v2.0 Java library for writing Unit tests Rest-assured 5.1.1 APACHE LICENSE, v2.0 Library for specifying validation of responses from Rest API services using a specific DSL language Technology Version License Description Kiali 1.35.0 APACHE LICENSE, v2.0 UI application for Istio Service Mesh Jaeger 1.24.0 APACHE LICENSE, v2.0 System for providing distributed tracing of platform services Grafana 7.4.5 APACHE LICENSE, v2.0 Viewing and analyzing system metrics, configuring notifications based on metrics Prometheus 2.24.0 APACHE LICENSE, v2.0 Timeseries database for storing platform metrics and query engine for this data Extension Version License Description Thanos querier APACHE LICENSE, v2.0 An extension over Prometheus, providing unlimited storage for metrics and high-availability for multiple Prometheus instances Oparator Version License Description Cluster Monitoring Operator 4.11.0 APACHE LICENSE, v2.0 Operator for configuring the monitoring subsystem of OKD Jaeger Operator 1.24.0 APACHE LICENSE, v2.0 Operator for configuring Jaeger Kiali Operator 1.25.0 APACHE LICENSE, v2.0 Operator for configuring Kiali Prometheus Operator 4.11.0 APACHE LICENSE, v2.0 Operator for configuring Prometheus Technologie Version License Description Elasticsearch 7.16.2 APACHE LICENSE, v2.0 Search server that provides a distributed full-text search engine with an HTTP web interface and support for schema-less JSON documents. Acts as a repository and search service for logs Kibana 4.11 APACHE LICENSE, v2.0 System for data visualization from Elasticsearch Fluentd APACHE LICENSE, v2.0 Platform for storing log data. Responsible for log collection and storage in Elasticsearch Operator Version License Description Cluster Logging Operator 5.5.4 APACHE LICENSE, v2.0 Operator for configuring the logging subsystem of OKD Technologie Version License Description Minio RELEASE.2021-04-06T23-11-00Z GNU AGPL v3 S3 compatible object storage service Velero 2.14.7 APACHE LICENSE, v2.0 Provides tools for backup and restore of Kubernetes cluster resources and persistent volumes of storage pgBackRest 2.38 MIT Solution for providing backup/restore of PostgreSQL databases Technologie Version License Description Antora 3.1.1 Mozilla Public License Version 2.0 Documentation generator from asciidoc to html5 using Asciidoctor","title":"Platform technology stack","component":"platform","version":"1.9.6","name":"platform-technologies","url":"/platform/1.9.6/arch/architecture/platform-technologies.html","titles":[{"text":"1. Programming languages","hash":"_programming_languages","id":1},{"text":"2. Client applications frameworks","hash":"_client_applications_frameworks","id":2},{"text":"3. Server application frameworks","hash":"_server_application_frameworks","id":3},{"text":"4. Scripting tools","hash":"_scripting_tools","id":4},{"text":"5. Data stores","hash":"_data_stores","id":5},{"text":"5.1. Technologies","hash":"_technologies","id":6},{"text":"5.2. Extensions","hash":"_extensions","id":7},{"text":"5.3. Operators","hash":"_operators","id":8},{"text":"5.4. Operators","hash":"_operators_2","id":9},{"text":"6. Infrastructure management","hash":"_infrastructure_management","id":10},{"text":"6.1. Technologies","hash":"_technologies_2","id":11},{"text":"7. Container management","hash":"_container_management","id":12},{"text":"7.1. Technologies","hash":"_technologies_3","id":13},{"text":"8. Platform, registries, and regulations deployment automation","hash":"_platform_registries_and_regulations_deployment_automation","id":14},{"text":"8.1. Technologies","hash":"_technologies_4","id":15},{"text":"8.2. Operators","hash":"_operators_3","id":16},{"text":"9. User and access management","hash":"_user_and_access_management","id":17},{"text":"9.1. Technologies","hash":"_technologies_5","id":18},{"text":"9.2. Operators","hash":"_operators_4","id":19},{"text":"10. External traffic management","hash":"_external_traffic_management","id":20},{"text":"10.1. Technologies","hash":"_technologies_6","id":21},{"text":"10.2. Operators","hash":"_operators_5","id":22},{"text":"11. Web server","hash":"_web_server","id":23},{"text":"11.1. Technologies","hash":"_technologies_7","id":24},{"text":"12. Service mesh management","hash":"_service_mesh_management","id":25},{"text":"12.1. Technologies","hash":"_technologies_8","id":26},{"text":"12.2. Operators","hash":"_operators_6","id":27},{"text":"13. Message brokers","hash":"_message_brokers","id":28},{"text":"13.1. Technologies","hash":"_technologies_9","id":29},{"text":"13.2. Operators","hash":"_operators_7","id":30},{"text":"14. Secrets storage","hash":"_secrets_storage","id":31},{"text":"14.1. Technologies","hash":"_technologies_10","id":32},{"text":"14.2. Operators","hash":"_operators_8","id":33},{"text":"15. Business process management","hash":"_business_process_management","id":34},{"text":"15.1. Technologies","hash":"_technologies_11","id":35},{"text":"15.2. Libraries","hash":"_libraries","id":36},{"text":"16. UI form management","hash":"_ui_form_management","id":37},{"text":"16.1. Libraries","hash":"_libraries_2","id":38},{"text":"17. Geospatial data management","hash":"_geospatial_data_management","id":39},{"text":"17.1. Technologies","hash":"_technologies_12","id":40},{"text":"17.2. Extensions","hash":"_extensions_2","id":41},{"text":"17.3. Libraries","hash":"_libraries_3","id":42},{"text":"18. Reporting and data visualization","hash":"_reporting_and_data_visualization","id":43},{"text":"18.1. Technologies","hash":"_technologies_13","id":44},{"text":"19. Electronic signature integration (UA)","hash":"_electronic_signature_integration_ua","id":45},{"text":"19.1. Libraries","hash":"_libraries_4","id":46},{"text":"20. Internationalization","hash":"_internationalization","id":47},{"text":"20.1. Libraries","hash":"_libraries_5","id":48},{"text":"21. Database evolution management","hash":"_database_evolution_management","id":49},{"text":"21.1. Technologies","hash":"_technologies_14","id":50},{"text":"22. Email exchange","hash":"_email_exchange","id":51},{"text":"22.1. Technologies","hash":"_technologies_15","id":52},{"text":"23. Regulations quality control","hash":"_regulations_quality_control","id":53},{"text":"23.1. Technologies","hash":"_technologies_16","id":54},{"text":"23.2. Libraries","hash":"_libraries_6","id":55},{"text":"24. Event monitoring","hash":"_event_monitoring","id":56},{"text":"24.1. Technologies","hash":"_technologies_17","id":57},{"text":"24.2. Extensions","hash":"_extensions_3","id":58},{"text":"24.3. Operators","hash":"_operators_9","id":59},{"text":"25. Event logging","hash":"_event_logging","id":60},{"text":"25.1. Technologies","hash":"_technologies_18","id":61},{"text":"25.2. Operators","hash":"_operators_10","id":62},{"text":"26. Backing up and restoring","hash":"_backing_up_and_restoring","id":63},{"text":"26.1. Technologies","hash":"_technologies_19","id":64},{"text":"27. Documentation","hash":"_documentation","id":65},{"text":"27.1. Technologies","hash":"_technologies_20","id":66}]},"50":{"id":50,"text":"On this page: 1. Standard configurations 2. Cost calculator 2.1. Results 2.2. Input parameters 2.2.1. Basic parameters 2.2.2. Registry size 2.2.3. Registry parameters The total cost of resources required for your registry includes registry-exclusive costs and shared services costs. One pool of shared services can potentially serve dozens of registries, and its operation costs are distributed among those registries. Shared services include the following: The system for automatic deployment, scaling, and management of applications in Openshift containers (master and workers). The distributed file storage subsystem (Ceph). The event logging subsystem. The Platform’s secrets management subsystem (Central Vault). The Platform’s backup copies storage (Minio). Secure exchange gateway. When deploying your registry using standard templates, refer to the following cost estimates: Template Number of VMs Monthly VM cost Monthly VM disk cost Monthly distributed storage cost Monthly traffic cost Monthly shared services cost Monthly total Minimal 2 220.8 22.85 19.04 49.50 258.52 570.71 Recommended 5 552.00 57.12 19.04 49.50 646.30 1323.96 Large 10 1104.00 114.24 19.04 49.50 1292.61 2579.39 The prices are based on Amazon Web Services cloud computing platform rates as of the end of 2022, assuming a 12-hour operation per day during the working week. For a more detailed cost breakdown, download the Registry cost calculator spreadsheet and see the Cost calculator sheet. Use the following calculator to estimate the cost of resources required to operate the registry that meets specific requirements: Registry cost calculator spreadsheet On the Set registry size sheet, the Your registry row contains calculation results. Underneath, you can configure your registry parameters. Number of VMs The estimated number of virtual machines necessary to operate the registry that meets the parameters you specified. Cost The estimated monthly cost of operation based on Amazon Web Services cloud computing platform prices. It includes the cost of virtual machines for the registry and shared services of the Platform. High availability Reserve additional instances of registry components and capacity for automatic horizontal scaling. Operating mode The time when the registry is working. Number of business entities The number of tables in the registry data model. Maximum number of instances of business entities (rows in a table) The number of rows in the largest registry table. Approximate volume of historical data in GB The volume of data loaded into the registry before it is put into production (initial loading). The following parameters are set separately for these three user categories: officers, citizens, and other systems. Number of users The number of registered users who can use the registry. Number of services (business processes) The number of services a registry can provide to various types of users. Average number of user tasks per service The average number of tasks that require user input. Average number of automated tasks per service The average number of tasks that do not require input from the user. Number of reports The total number of modeled reports used by the officers. Number of excerpts The total number of modeled excerpts. Number of services provided per month The total number of all types of services provided during the month.","title":"Calculating the registry cost","component":"platform","version":"1.9.6","name":"registry-cost","url":"/platform/1.9.6/arch/architecture/registry-cost.html","titles":[{"text":"1. Standard configurations","hash":"_standard_configurations","id":1},{"text":"2. Cost calculator","hash":"_cost_calculator","id":2},{"text":"2.1. Results","hash":"_results","id":3},{"text":"2.2. Input parameters","hash":"_input_parameters","id":4},{"text":"2.2.1. Basic parameters","hash":"_basic_parameters","id":5},{"text":"2.2.2. Registry size","hash":"_registry_size","id":6},{"text":"2.2.3. Registry parameters","hash":"_registry_parameters","id":7}]},"51":{"id":51,"text":"On this page: 1. General overview 2. Reference example 2.1. Brief overview of process components and their purpose 2.2. Modeling 3. Use within the User portal This page demonstrates an example of implementing and launching a business process that is automatically activated according to a schedule using Camunda BPM. The process initiates itself at a specified time and performs tasks according to a defined sequence. A reference business process has been created to help regulations developers and modelers to better understand and effectively use schedulers in Camunda BPM. You can find an example .bpmn process model under the name automatic-external-system-data-saving.bpmn in the demo registry consent-data by following this link: https://admin-tools-consent-data.apps.envone.dev.registry.eua.gov.ua/gerrit. Start Event with the timer — initiates the business process at a set time, daily from Monday to Friday at 8:00. Script — retrieves data from an external system and creates an object for further storage. Data signing with system key — ensures that the data received from the external system is authentic and intact. Entity creation in the database — stores the received data in the database. Setting the status of the business process — indicates the successful completion of the business process. End Event — marks the end of the business process. Log in to the Regulations administrator portal. Open the Process models section. Створіть новий процес, вкажіть бізнес- та службову назву та перейдіть до вкладки Конструктор. Model a pool for the business process. Create a Start event starting event and perform the following settings: . Enter the task name, for example, Start. In the Timer section, set the schedule for starting and executing the business process. In the Type field (Timer Definition Type), specify the timer type - Cycle. The Cycle option allows you to configure recurring processes or events based on a specific time interval. A cyclic timer can be set at the level of a start event, intermediate event, or boundary event associated with a task performer. For more details on timer types, refer to Timer Event. In the Value field, specify the schedule in a specific format for process execution. For example, 0 8 * * MON-FRI. You can configure a cyclic timer using the standard ISO 8601 format for repeat intervals or a cron expression. Examples of values for the ISO 8601 format: R5/PT10S — every 10 seconds, up to 5 times. R/P1D — daily, indefinitely. Examples of values for the cron format: 0 8 * * MON-FRI: 0: minutes (exactly at 0 minutes) 8: hours (8:00 in the morning) *: day of the month (any day of the month) *: month (any month) MON-FRI: day of the week (Monday - Friday) Thus, the above cron expression means that the process will be triggered every day from Monday to Friday at 8:00 in the morning. 0 0 9-17 * * MON-FRI: This cron expression means that the process will be triggered every hour from 9 to 17 UTC time from Monday to Friday. Specify the process initiator as initiator. What is an initiator? The phrase \"Start initiator = initiator\" indicates that the value of the initiator (i.e., the person or system that initiated the process) will be set as the initiator. In the context of business processes, the initiator is the person who starts the process or is responsible for its initiation. Typically, the initiator is a user who triggers an action or a system that automatically initiates the process. У цьому випадку, initiator може бути використаний для ідентифікації особи чи системи, що стартували процес, у подальших етапах бізнес-процесу або для контролю доступу до ресурсів. In this case, the term initiator can be used to identify the person or system that initiated the process in subsequent stages of the business process or for access control to resources. Create a script task and use the script to retrieve and process data. To do this, open the visual code editor (for more information about the code editor, refer to Editing business process scripts in a visual code editor). In our example, we retrieve data from another system. Script for data retrieval and processing import java.text.SimpleDateFormat; import java.util.Date; SimpleDateFormat date = new SimpleDateFormat(\"dd_MM_yyyy\") String url = 'https://wallpapercave.com/wp/wp2601438.jpg' String fileName = 'file_'.concat(date.format(new Date())).concat('.jpeg') def documentMetadata = save_digital_document_from_url(url, fileName) def payload = [:] def listFileObj = [] payload.name = fileName def fileObj = [:] fileObj.id = documentMetadata.id fileObj.checksum = documentMetadata.checksum listFileObj .apps..dev.registry.eua.gov.ua. This process can be found in the Available Services > Reference business processes section. It will be launched and executed according to the established schedule.","title":"Launching a business process by schedule","component":"platform","version":"1.9.6","name":"bp-timer-launch","url":"/platform/1.9.6/registry-develop/best-practices/bp-timer-launch.html","titles":[{"text":"1. General overview","hash":"_general_overview","id":1},{"text":"2. Reference example","hash":"_reference_example","id":2},{"text":"2.1. Brief overview of process components and their purpose","hash":"_brief_overview_of_process_components_and_their_purpose","id":3},{"text":"2.2. Modeling","hash":"_modeling","id":4},{"text":"3. Use within the User portal","hash":"_use_within_the_user_portal","id":5}]},"52":{"id":52,"text":"Table of Contents 1. Data structure modeling 2. Reference business process 2.1. Creating pools for processes 2.2. Selecting all licensing authorities from the database using search condition 2.3. Data preparation script for displaying in tabular form 2.4. Performing an action on data in a single row of a table 2.5. Modeling an XOR gateway and adding logic through condition expressions 2.6. Call Activity for the license cancellation subprocess 2.7. User task for license cancellation 2.8. Data preparation for recording (transient var) 2.9. Data signing with the qualified digital signature and system signature 2.10. Saving the updated data of the selected row in the table on the form to the database. 2.11. Completing the process and returning the user to the initial form. 3. Modeling UI Forms for business processes 4. Usage in user portals Create a data model for the registry based on the example below. Example .xml schemas and associated CSV files for creating a data model can be found in the demo registry consent-data regulations at the following link: https://admin-tools-consent-data.apps.envone.dev.registry.eua.gov.ua/gerrit. The schema for creating tables and search conditions will be available under the name licenseTable.xml. The CSV reference file with data for importing into the database will be available under the name licenses.csv. The file for populating the licenses table with data will be available under the name populateLicenses.xml. Create a new data type, table, and search conditions. This data model creates a new user-defined data type and table, as well as it defines the search condition. Basic data model for our example CREATE TYPE license_status active canceled CREATE TABLE licenses CREATE search condition search_licenses_by_status A custom data type called license_status is being created with two possible values: “active” and “canceled”. A new table called licenses is being created with the following columns: license_id: unique identifier for the license (UUID). number: license number (text format). date_received: date when the license was received (date format). date_terminated: date when the license was terminated (date format). full_name: full name of the license owner (text format). licensing_status: license status (of type license_status). A search condition named search_licenses_by_status is being created, which allows searching for licenses in the licenses table based on their status. This search condition assumes that the value of the licensing_status column should be equal to the specified search value (searchType=\"equal\"). Prepare a CSV reference file with data for importing into the database. This CSV reference file contains data about licenses that can be loaded into the database (table \"licenses\"). The file contains the following columns: number: license number. licensing_status: license status (active or canceled). date_received: date when the license was received. date_terminated: date when the license was terminated. full_name: full name of the license owner (organization or individual). These data can be imported into the licenses table of the database. Import the data from the CSV reference file using the data loading function call to the database: CALL p_load_table_from_csv(). To do this, create a separate file named populateLicences.xml with the following structure: CALL p_load_table_from_csv('licenses','${dataLoadPath}licenses.csv', array['number', 'licensing_status', 'date_received', 'date_terminated', 'full_name']); This function uses the built-in Liquibase mechanism to import data from a CSV file into a database table. The following components are used: : sets the value of the dataLoadPath variable, which specifies the path to the directory containing CSV files for data loading. : describes the changes to apply to the database. In this case, it’s a call to the p_load_table_from_csv() function to import data from the CSV file into the licenses table. : describes the SQL query that invokes the p_load_table_from_csv function. The query includes the name of the licenses table, the path to the CSV file (using the ${dataLoadPath} variable), and an array of columns to import from the file. For more information on creating a data model and loading data into the registry, please refer to Creating a physical data model and PL/pgSQL procedure for initial loading of registry data. This is a complex business process consisting of a main process and subprocesses that it invokes. The BPMN diagram includes the main process and two subprocesses initiated by the main process through a Call Activity. These subprocesses are similar and differ only in the names of tasks and their execution order. In our example, we will examine the main process and briefly discuss one of the subprocesses — license cancellation. You can find an example .bpmn model of the process with multiple row table action and its corresponding custom .json forms in the demo registry regulation at the following link: https://admin-tools-consent-data.apps.envone.dev.registry.eua.gov.ua/gerrit. The process will be available under the name edit-grid-rows-action.bpmn. The form names can be found inside the respective user tasks of the business process in the Form key field. The related model of the process with single row table action will be available under the name bp-action-one-row-grid.bpmn. Model a Service Task and utilize the delegate Search entities in data factory. Based on the created data model, this task is responsible for searching and selecting licenses from the licenses table. The licenses table contains the following columns: license_id: unique identifier of the license (UUID). number: license number (TEXT). date_received: date of license issuance (DATE). date_terminated: date of license termination (DATE). full_name: full name of the licensing authority (TEXT). licensing_status: license status (data type: license_status). The license_status data type is an enumeration with two possible values: active: the license is valid. canceled: the license is canceled. The current task uses the search condition search_licenses_by_status to filter licenses in the licenses table based on their licensing status. In this case, the task searches for licenses with the status active. Thus, the service task performs a search for active licenses in the licenses table based on the defined search conditions, passing the system access token for query authorization to the database. The parameters used for configuration and obtaining search results are as follows: In the Inputs section, set the input parameter resource as search-licenses-by-status to determine the resource/API endpoint to be used for the search. Here, the endpoint search-licenses-by-status is generated based on the search criterion search_licenses_by_status defined in the data model. In the Inputs > Search variables section, provide the search parameters to be applied as key-value pairs (Map): Key: licensingStatus Value: active In this case, we are searching for licenses with the status active. In the Inputs > X-Access-Token section, pass the system access token for query authorization to the database: ${system_user().accessToken} In the Outputs > Result variable section, set the output parameter as the variable licensesResponse, which will store the response from the database for further use. Model the service task and use the following Groovy script. Example 1. Script for retrieving alList of licenses and displaying them on a form def licenses = licensesResponse.responseBody.elements() def payload = S([:], 'application/json') payload.prop('licenses', licenses) set_transient_variable('payload', payload) This script performs the following actions: Extracts the list of licenses from the response licensesResponse.responseBody.elements(). The variable licenses contains the list of active licenses obtained from the previous service task. Creates a new JSON object payload with an empty dictionary. Adds the list of licenses obtained in the first step to the JSON object payload, under the key licenses. Stores the JSON object payload in a transient variable (a temporary variable that exists only during the process execution) named payload. Model a User Task and associate it with the corresponding UI form using the Form key key. The main goal of this form is to allow the user to select an action to perform on the data in a specific row of a table using the Edit Grid component (such as changing the date or canceling a license). Perform the following configurations: In the Name field, enter the name of the User Task. Apply the delegate template — User Form. In the ID field, enter the task identifier — defineActionActivity. In the Form key field, define the key to connect with the corresponding modeled form of the business process — feature-edit-grid-rows-action-define. In the Assignee field, specify the variable for the person assigned to the current task — ${initiator}. In the Form data pre-population field, pass the data to the UI form as the variable ${payload}. Model an XOR Gateway that determines which subprocess to call based on the action codes selected on the previous form. Action codes are buttons in the context menu (three dots), modeled on the UI form using the Edit Grid element. If the multiple rows (records) checkbox is selected on the defineActionActivity form, a subprocess will be triggered for each of these rows according to the selected button on the UI form (in this context, these should be separate buttons modeled using the Button component). Launching a subprocess for each selected row is made possible by the Multi-instance feature (see Call Activity for the license cancellation subprocess ). If you select the context menu (three dots) next to a specific row, the corresponding subprocess will only be triggered for the data in that row. The specific subprocess to be launched is controlled by the action code logic, modeled on the Edit Grid component. In other words, the context menu (three dots) allows you to choose the execution logic for an individual row of the table. Depending on the action defined in the action codes (in our example, we only update data for one row on the form, so we only use action codes through the context menu), the main process initiates one of the following subprocesses through the Call Activity: The Change license expiry date process if the entered action code satisfies the following condition: ${submission('defineActionActivity').formData.hasProp('_action_code') && submission('defineActionActivity').formData.prop('_action_code').value().equals('_action_update')} License Cancellation process if the entered action code satisfies the following condition: ${submission('defineActionActivity').formData.hasProp('_action_code') && submission('defineActionActivity').formData.prop('_action_code').value().equals('_action_cancel')} After calling the corresponding subprocess using the Call Activity, the main process continues to the final event. Next, we will discuss the flow with the cancellation subprocess call. This Call Activity executes a process named license-cancellation for each item in the data collection specified in multiInstanceLoopCharacteristics. This means that if you select the checkbox on one or more records in the Edit Grid form, using the Multi-instance feature, the subprocess will be triggered for each of those records. Note that when the checkbox for multiple rows in the table is selected, the data from the form should be sent to the process based on the action codes modeled on the UI form using the Button component. For more details, see Modeling UI Forms for business processes. For more details on Call Activity and its application features, you can review the following pages: bp-modeling/bp/element-templates/bp-element-templates-installation-configuration.adoc bp-modeling/bp/bpmn/subprocesses/overview.adoc Perform the following configurations: In the Multi-instance > Collection section, enter the value: ${submission('defineActionActivity').formData.prop('licenses').elements()} For Multi-instance > Element variable, specify the variable license. This means that the Call Activity will be performed for each element in the data collection returned by the function ${submission('defineActionActivity').formData.prop('licenses').elements()}. Each element of this collection will be stored in the defined variable license. The use of the Multi-instance feature is also demonstrated in the example Notifying users via email. In the Called element field, specify the identifier (Process ID) of the subprocess to be called and executed. In our case, it is license-cancellation. For the Asynchronous continuation field, specify the value Before. This means that this activity will be performed asynchronously. Asynchronous continuation starts before the execution of the Call Activity itself, meaning \"asynchronously before.\" What is Asynchronous continuation? Asynchronous continuation in Call Activity in Camunda BPM is a mechanism that allows executing an activity asynchronously in relation to the main process flow. This means that the activity (in this case, Call Activity) can be executed later without delaying the execution of subsequent elements in the main flow. Asynchronous continuation is often used when it is necessary to initiate a long-running or resource-intensive operation without blocking the further execution of the process. This can be useful, for example, when the Call Activity invokes an external process that may take some time. After the completion of the asynchronous operation, the process workflow continues from the next point after the Call Activity. Asynchronous continuation also enables process management systems (such as Camunda BPM) to more efficiently manage resources by distributing the load among different process instances. In the context of Camunda BPM, asynchronous continuation: before means that the asynchronous invocation takes place before the start of the Call Activity, rather than after its completion. This use of asynchronous continuation can be useful when you need to initiate a long-running or resource-intensive activity (such as a Call Activity), but you don’t want to block the execution of the main process flow until this activity is completed. In the In mappings field, specify: Source: Type source: license target: license This means that the data from the variable license in the main process will be passed to the license-cancellation subprocess and stored in a variable with the same name. If you choose an action on a single row of the table using the context menu (three dots) ⋮ (see more about form modeling in Modeling UI Forms for business processes), you can model the business process in two ways: Using Multi-instance in the Call Activity (as shown above in the section). Using basic configurations of the Call Activity. The basic configurations of the Call Activity in this case will look almost identical to the Multi-instance option: Specify the input parameter type as Source expression. Specify an expression to retrieve data from the form using the submission() function. ${submission('defineActionActivity').formData.prop('licenses').elements()[0]} Specify the Target as license. This means that the data from the variable license in the main process will be passed to the license-cancellation subprocess and stored in a variable with the same name. Model a User Task that allows the user to cancel a license. Use the User Form delegate template to create the user form. Specify the form ID to be shown to the user, in this case - edit-grid-rows-action-cancel-license. The task can be assigned to a user (Assignee), but in this case, the field can be left empty, which means any user can claim and execute it. In the Candidate roles field, specify the role. This field indicates that users with a specific role/roles, in our case — op-regression, can view and execute this task. In the Form data pre-population field, pass the license data as the variable ${license}, which will be displayed on the form for pre-filling the data. Model a Script Task and apply a script that can retrieve data from the previous task (form) and prepare it for recording in the database (in our case, updating an entity). Groovy script to retrieve data from the cancelLicenseActivity form and prepare it for recording def canceledLicense = submission('cancelLicenseActivity').formData canceledLicense.prop('licensingStatus', 'canceled') set_transient_variable('canceledLicense', canceledLicense) This script performs the following actions: Retrieves the form data that was submitted by the user in the cancelLicenseActivity task. The result of this expression is stored in the variable canceledLicense. submission('cancelLicenseActivity').formData Sets the licensingStatus property of the canceledLicense object to the value canceled. This means that the license is marked as \"canceled\". canceledLicense.prop('licensingStatus', 'canceled') Creates a transient variable named 'canceledLicense' with the value set to the canceledLicense object. Transient variables are only stored during the current execution of the process and are not persisted to the database. set_transient_variable('canceledLicense', canceledLicense) Next, model the corresponding tasks for data signing with a digital signature and system key. Use the Officer sign task and System signature by DSO service delegates, respectively. You can refer to the Modeling Examples for such tasks at best-practices/bp-officer-self-register-manual.adoc. Model a service task that will perform the operation of updating data for the selected record in the database. Use the Update entity in data factory delegate, which is a Java class that contains the logic to perform this task. Alternatively, you can apply the general Connect to data factory connector, using the PUT method. For more information, refer to bp-modeling/bp/element-templates/bp-element-templates-installation-configuration.adoc. Specify the resource that indicates the resource, i.e., the table that needs to be updated, in this case - licenses. Specify the Resource id that defines the identifier of the license that needs to be updated. For example: ${license.prop('licenseId').value()} In the Payload field, pass the data that needs to be updated for the specified license. This data is taken from the temporary variable canceledLicense, which was set in the previous steps of the process. This can be done using the submission() function. For example: ${submission('signCanceledLicenseActivity').formData} Pass the access token to the resource — X-Access-Token, obtained from the signCanceledLicenseActivity task. This can be done using the completer() function. For example: ${completer('signCanceledLicenseActivity').accessToken} Pass the keys for the digital signature of the CEP data and the system key in the X-Digital-Signature source and X_Digital-Signature-Derived source fields, respectively. For example: Qualified digital signature ${sign_submission('signCanceledLicenseActivity').signatureDocumentId} System signature ${system_signature_ceph_key} Save the result of the request in the output parameter response. After updating the entity in the Data Factory, the sub-process that invoked it is completed, and the result is returned back to the Call Activity, and the user is returned to the beginning of the main process. User redirection is possible thanks to the modeled Link events. For more information about the \"Link\" event, you can refer to bp-modeling/bp/bpmn/events/bp-link-events.adoc. Let’s consider an example of modeling a user form for viewing and performing actions on specific rows of a table using the Edit Grid component. We will also model two buttons using the Button component to perform additional logic. If the multi-row checkbox is selected on the defineActionActivity form, a subprocess will be launched for each of these rows based on the selected button on the UI form (in this context, these should be separate buttons modeled using the Button component). Launching a subprocess for each selected row is possible using the Multi-instance function (see Call Activity for the license cancellation subprocess). If you select the context menu \"Three dots\" next to a specific row, the corresponding subprocess will only be launched for the data of that row. The specific subprocess to be launched is determined by the action codes logic modeled on the Edit Grid component on the form. Therefore, the context menu \"Three dots\" allows selecting the logic for performing an action on a single table row. Go to the form builder in the Administrator of Regulations Portal, create a new form, and model the Edit Grid component, which consists of 5 text fields (Text Field) for the table. Go to the settings of the Edit Grid component. Enter a name (Label) for this component, which will be displayed on the form, and activate the options Multiple-record selection and Read Only. Multiple-record selection allows users to select multiple records in the table simultaneously. Read Only displays data through a separate control element in the context menu (three vertical dots), which allows viewing data without the ability to edit. Switch to the API tab and enter a service name for the component to be used in API requests. In our case, it is licenses, which corresponds to the table name in the database. Switch to the Logic tab and add action codes for the options in the context menu \"Three dots\" that will be available for performing an action on a specific row on the form during the execution of the business process. The regulation developer should avoid modeling actions using the action_code in the context menu \"Three dots\" of a table row when EditGrid is in edit mode. Failure to do so may result in unsaved edited data, and the user will automatically move to the next business process based on the action_code. Instead, the user should be directed to a signing form after editing the data to ensure that all changes are saved. Model the Button component for two additional buttons to be able to perform actions on multiple rows of the table simultaneously when the Multiple-record selection option is activated in Edit Grid. Add a button to update the license action period (for one or more records in the table, provided the Multiple-record selection checkbox is used in Edit Grid). Add a button to cancel the license (for one or more records in the table, provided the Multiple-record selection checkbox is used in Edit Grid). Save the changes and apply the configuration to the master branch. Read about the capabilities of the Edit Grid component at Edit Grid component. The modeled business process can be found in the list of available services in the User Portal of the authorized person in the consent-data demo registry. Figure 1. Business process in the user portal Figure 2. Performing an action on a single row in the table Figure 3. Performing an action on multiple rows in the table","title":"Selecting one or multiple rows in a table and performing actions on the data in the records","component":"platform","version":"1.9.6","name":"edit-grid-rows-action","url":"/platform/1.9.6/registry-develop/best-practices/edit-grid-rows-action.html","titles":[{"text":"1. Data structure modeling","hash":"_data_structure_modeling","id":1},{"text":"2. Reference business process","hash":"_reference_business_process","id":2},{"text":"2.1. Creating pools for processes","hash":"_creating_pools_for_processes","id":3},{"text":"2.2. Selecting all licensing authorities from the database using search condition","hash":"_selecting_all_licensing_authorities_from_the_database_using_search_condition","id":4},{"text":"2.3. Data preparation script for displaying in tabular form","hash":"_data_preparation_script_for_displaying_in_tabular_form","id":5},{"text":"2.4. Performing an action on data in a single row of a table","hash":"_performing_an_action_on_data_in_a_single_row_of_a_table","id":6},{"text":"2.5. Modeling an XOR gateway and adding logic through condition expressions","hash":"_modeling_an_xor_gateway_and_adding_logic_through_condition_expressions","id":7},{"text":"2.6. Call Activity for the license cancellation subprocess","hash":"call-activity-cancel","id":8},{"text":"2.7. User task for license cancellation","hash":"_user_task_for_license_cancellation","id":9},{"text":"2.8. Data preparation for recording (transient var)","hash":"_data_preparation_for_recording_transient_var","id":10},{"text":"2.9. Data signing with the qualified digital signature and system signature","hash":"_data_signing_with_the_qualified_digital_signature_and_system_signature","id":11},{"text":"2.10. Saving the updated data of the selected row in the table on the form to the database.","hash":"_saving_the_updated_data_of_the_selected_row_in_the_table_on_the_form_to_the_database","id":12},{"text":"2.11. Completing the process and returning the user to the initial form.","hash":"_completing_the_process_and_returning_the_user_to_the_initial_form","id":13},{"text":"3. Modeling UI Forms for business processes","hash":"modeling-forms","id":14},{"text":"4. Usage in user portals","hash":"_usage_in_user_portals","id":15}]},"53":{"id":53,"text":"","title":"Business process modelers guide","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/bp-modeling/index.html","titles":[]},"54":{"id":54,"text":"Creating a logical data model Creating a physical data model Initial data loading Modeling reports","title":"Data modelers","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/data-modeling/index.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"55":{"id":55,"text":"On this page: 1. Overview 2. Rate-limits operation principle for non-authenticated users 3. Rate-limits operation principle for authenticated users Setting up header for authenticated user 4. Configuring rate-limits 4.1. Rate-limits configuration mechanism 4.2. The process of configuring limits in values.yaml 5. Displaying errors on Portal forms on exceeding the service request limits Rate limiting is a network trafic limiting strategy. API Rate Limits — these are limits of the number of HTTP-requests to the service or route per a defined time period in seconds. The mechanism of API Rate Limits is based on the Rate-Limiting-plugin for Kong API Gateway. If the service/route does not have an authentication level, the limit will be set for client IP address. Otherwise, HTTP-header can be used for limiting, for example user ID, user role ID, or user organization ID. It is imperative that the rate-limiting plugin is executed after the OIDC-plugin! This means that the OIDC-plugin priority must be higher than the rate-limiting plugin priority, which is 910 by default. The mechanism is described in detail further. All rate-limits are calculated within one Kong API Gateway instance. If there are n Kong API Gateway instances, then the general number of requests from the user can be n times the set limit value. Kong API Gateway is deployed on the registry services level. Example 1. High-level diagram of rate-limits functioning in Kong Limits can only be set by IP address for non-authenticated users (config.limit_by: ip). Rate-limits operation scheme for non-authenticated users The user sends a request to the platform. The request goes to Kong API Gateway. The request is processed by the Kong Rate-Limiting plugin, which decides if the request limit was achieved by the user, based on the given service/route rules. If the request limit was not achieved by the user, the request is rerouted to the corresponding service for processing. The user receives a response from the service. .If the request limit was achieved by the user, the Rate-Limiting plugin responds with the HTTP 429 error. If the service/route has an authentication level, then the limit can be set not only for IP-address, but for any authenticated user or user group. In this case the request’s own \"token-claim\" header value can be used to calculate the limit, as the header contains user data, such as: user ID, role, organization ID, etc. Such a header can be added using Kong OIDC-plugin. Example 2. Rate-limits operation principle for authenticated users The user sends a request to the platform. The request goes to Kong API Gateway. Kong OIDC-plugin gets to process the request, checking user session. If the user was successfully authenticated (active session present), then the OIDC-plugin adds two headers to the request: one with the user’s JWT-tokens, and one \"token-claim\" that contains the claim attribute value from the user’s access token. From this point, the rate-limiting plugin will use the \"token-claim\" header to calculate rate-limits for the authenticated user, or user group. The request goes to Rate-Limiting plugin for processing. The Rate-Limiting plugin decides if the request limit was achieved by the user, based on the given service/route rules. The limit can be set by IP-address, as well as \"token-claim\" header value. If the request limit was not achieved by the user, the request is rerouted to the corresponding service for processing. The user receives a response from the service. .If the request limit was achieved by the user, the Rate-Limiting plugin responds with the HTTP 429 error. The values of \"token-claim\" header that contains user info can be used to calculate limits for authenticated users. You can set the values via Kong OIDC-plugin configuration. The header can include the value of root attribute (claim) from the user’s access JWT-token. Example 3. Example: configuring Kong OIDC-plugin to add \"token-claim\" header OIDC Config config: token_claim_header_value: \"sub\" In this case, \"token-claim\" header will be added after processing the request by OIDC-plugin. The header will be taken from the \"sub\" (claim) attribute of the user access token. As a result, we get a \"token-claim\" header that contains user ID. This header can be used in the rate-limiting plugin to calculate limit by user ID. Rate-Limiting Config config: limit_by: header header_name: \"token-claim\" For more complex limit calculations you can add your own dedicated attribute to the JWT-token. This is done via Keycloak protocol mappers. The mechanism is based on Rate-Limiting-plugin for Kong API Gateway. Kong Rate-limiting is a part of Kong API Gateway and is deployed along with it. The Rate-limits configuration mechanism goes as follows: The administrator creates and edits the configuration file in .yaml (.yml) file for OIDC and Rate-Limiting plugins Kong API Gateway. Changes are saved in the corresponding catalog of Gerrit-repository. Jenkins checks the repository for changes and applies the changed configuration for all the deployed instances of Kong API Gateway within the registry. To configure limits for authenticated users or user groups assembled by a certain attribute, you need to add header with said attributes to the request. Based on the attributes values, the Rate-Limiting plugin will calculate limits for each authenticated user or group individually. Use OIDC-plugin to add the headers with user attributes, as it allows you to add your own \"token-claim\" header with the JWT-token value (see Setting up header for authenticated user_ for details). Rate-limits are configured in the values.yaml configuration file, in the deployment template of the corresponding registry. Registry deployement metadata is stored in the control-plane-gerrit component — central Gerrit repository. As an example, let’s look at the registry-tenant-template-registry-dev-minimal registry template that contains the minimum resource configuration for the deployed registry (see Deploying a registry) Rate-limits are turned off by default. A security administrator with the corresponding access rights can turn them off. Open the central Gerrit repository control-plane-gerrit in a local environment. Open the configuration file of the corresponding registry deployment template. The route to the file would look similar to this: resources/repositories/templates/registry-tenant-template-.git/deploy-templates/values.yaml As an example we’ll use the registry-tenant-template-registry-dev-minimal.git template for registry deployment with the corresponding resources (minimal configuration). Activate the Rate-Limiting plugin by setting rateLimitingPluginEnable: true. The rate-limit functionality limits the amount of requests per time unit from the webportals (Officer portal, citizen portal, etc.) to the external services APIs of the registry. By default the Kong Rate Limiting plugin configuration looks as follows: kongPluginsConfig: rateLimitingPluginEnable: false pluginsRateLimitByHeaderRequestsPerSecond: 10 pluginsRateLimitByHeaderRequestsPerHour: 10000 pluginsRateLimitByHeaderPolicy: \"local\" pluginsRateLimitByHeaderFaultTolerant: \"true\" pluginsRateLimitByHeaderHideClientHeaders: \"false\" pluginsRateLimitByHeaderHeaderName: \"token-claim\" pluginsRateLimitByIpRequestsPerSecond: 10 pluginsRateLimitByIpRequestsPerHour: 10000 pluginsRateLimitByIpPolicy: \"local\" pluginsRateLimitByIpFaultTolerant: \"true\" pluginsRateLimitByIpHideClientHeaders: \"false\" This configuration shows rate-limits per second and hour by: Header (ByHeader) — only for authorized users — pluginsRateLimitByHeaderRequestsPerSecond and pluginsRateLimitByHeaderRequestsPerHour parameters, accordingly; IP-address (ByIp) — for all users — pluginsRateLimitByIpRequestsPerSecond and pluginsRateLimitByIpRequestsPerHour parameters, accordingly. For proper plugin operation, the limit valiues for LimitByHeader and LimitByIP parameters must be identical. + NOTE: The full list of Kong Rate Limiting plugin configurations and capabilities is available here. After configuring, perform a commit into the corresponding repository. Exceeding the amount of permitted requests from the admin-portal, officer-portal, and citizen-portal to backend API services causes errors that are displayed in the UI. If the rate-limit are exceeded when trying to access portal pages, the access is blocked, and the user is redirected to HTTP 429 error page. Example 4. Examples of error displaying in user portals on exceeding rate-limits Rate-limit exceeding error in regulations administrator portal: Rate-limit exceeding error in officer portal: Rate-limit exceeding error in citizen portal:","title":"API Rate Limits: limiting the number of requests per time unit","component":"platform","version":"1.9.6","name":"api-rate-limits","url":"/platform/1.9.6/registry-develop/registry-admin/api-rate-limits.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Rate-limits operation principle for non-authenticated users","hash":"_rate_limits_operation_principle_for_non_authenticated_users","id":2},{"text":"3. Rate-limits operation principle for authenticated users","hash":"_rate_limits_operation_principle_for_authenticated_users","id":3},{"text":"Setting up header for authenticated user","hash":"header-setup-unauth-user","id":4},{"text":"4. Configuring rate-limits","hash":"rate-limits-configuration","id":5},{"text":"4.1. Rate-limits configuration mechanism","hash":"_rate_limits_configuration_mechanism","id":6},{"text":"4.2. The process of configuring limits in values.yaml","hash":"_the_process_of_configuring_limits_in_values_yaml","id":7},{"text":"5. Displaying errors on Portal forms on exceeding the service request limits","hash":"_displaying_errors_on_portal_forms_on_exceeding_the_service_request_limits","id":8}]},"56":{"id":56,"text":"On this page: 1. General description 2. Changing registry deployment mode Deployment mode is a parameter that indicates the environment in which the registry regulations are deployed. It allows distinguishing between the production environment and the development environment, as well as configuring the settings according to the needs of each. The registry Platform supports two deployment modes: development and production. The development mode The development mode involves deployment with settings for convenience in development and debugging. The production mode involves optimized deployment for maximum productivity, stability, and security. It excludes additional debugging tools, provides optimal configuration and settings for real-world operation on target clusters. In the production mode, the following components involved in the registry development processes are not deployed: Components involved in the processes of registry regulations development; Public endpoints of the components involved in the processes of registry regulations development. Table 1. Components and endpoints used by registry developers Registry development component Use in Production Public endpoint admin-portal Not required Not available registry-regulation-management Not required Not available kafka-ui Not required Not available redash-admin Not required Not available redash-admin-adhocworker Not required Not available redash-admin-scheduledworker Not required Not available redash-admin-exporter Not required Not available form-management-modeler (legacy) Not required Not available pgAdmin Not required Not available registry-vault Required Not available external-integration-mocks Not required Not available registry-rest-api Required Not available To change the registry deployment mode — deploymentMode — from production to development, follow these steps: Open the OpenShift console, find the Control Plane project, and navigate to the gerrit component. Central Gerrit link: https://gerrit-control-plane. Find the repository with your registry and open the deploy-templates/values.yaml file. Locate the deploymentMode: production variable and change its value to deploymentMode: development. The deployment mode settings appear as follows: deploy-templates/values.yaml global: deploymentMode: development (Optional) If you need to deploy the registry without a specific portal (for example, Citizen portal), exclude it from the settings as follows: deploy-templates/values.yaml global: excludePortals: ['citizen'] By default, the excludePortals variable is absent, which indicates the deploying of all portals: deploy-templates/values.yaml global: excludePortals: [''] When excluding the Citizen portal from the deployment process, the following services are also not deployed: citizen-portal ddm-notification-service user-service-api user-service-persistence Commit the changes with git commit, apply the changes to the master branch, and initiate the registry deployment. The configuration of Redash admin and PgAdmin is optional and only necessary as additional steps if issues arise when changing the deployment mode. We recommend reviewing them, but note that they are not mandatory for changing the deploymentMode. Redash admin pgAdmin The redash-admin component is available exclusively in the development mode and will not be deployed during the initial installation in the production mode. When updating the registry with a mode changed to development, the redash-admin component becomes available, but the post-install script admin-hook-install-job.yaml, which creates initial Redash admin database configurations including tables, is not executed. This behavior is expected because it performs an update of the registry, not its installation. Manually run the following script from the redash-admin pod: bash /config/install-upgrade.sh install After successfully configuring the redash-admin database, restart the registry deployment pipeline if the previous attempt failed due to redash-chart deploy. Check the latest available version of PgAdmin in control-plane-gerrit. Add the following chart to deploy-templates/helmfile.yaml in the releases section with the version of the component from the previous step: - name: pgadmin-chart namespace: '{{ env \"NAMESPACE\" }}' labels: type: remote update_scc: true repoURL: ssh://jenkins@gerrit.mdtu-ddm-edp-cicd:32114/mdtu-ddm/data-architecture/devops-application/pgadmin-chart.git path: components/registry/ branch: 0.0.1-SNAPSHOT.69 chart: /opt/repositories/pgadmin-chart/deploy-templates version: 0.0.1-SNAPSHOT.69 values: - values.yaml - values.gotmpl missingFileHandler: Warn needs: - '{{ env \"NAMESPACE\"}}/istio-configuration' - '{{ env \"NAMESPACE\"}}/network-management' - '{{ env \"NAMESPACE\"}}/citus'","title":"Changing registry deployment mode","component":"platform","version":"1.9.6","name":"change-dev-prod-mode","url":"/platform/1.9.6/registry-develop/registry-admin/change-dev-prod-mode.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Changing registry deployment mode","hash":"_changing_registry_deployment_mode","id":2}]},"57":{"id":57,"text":"You can deploy a demo-registry with reference examples of regulations modelling. The structure of such regulations is the same as the typical regulations structure, used for any registry deployed on the Platform. Regulations of the demo-registry includes reference examples marked with the reference- prefix, and testing examples marked with feature- prefix. They can be examples of .bpmn- business process schemes, .json-forms for process data, .xml-schemes for the deployment of registry data models, and other file types. It’s important to remark that these reference examples, as well as other examples, were developed by specialists from the core-team of the Platform. Existing ones are continuously updated, and new ones are added with every release. This approach allows you stay updated on the latest tendencies and practices of regulations modelling, experiment and test different scenarios in controlled environments. To deploy a demo-registry and copy regulations with ready examples, take the following steps: . Create a new 'demo'' registry according to the instructions on the followig page: Deploying a registry. Navigate to the OpenShift > Home > Projects console and find control-plane project. Open Networking > Routes section and follow the link to control-plane-console component. Navigate to Control Plane > Dashboard console and follow the link to Gerrit central component. Navigate to Gerrit account configuration and find HTTP Credentials section. Generate a new HTTP-password and copy it to Notepad. This HTTP-password is needed further for authentification in order to clone the consent-data Gerrit-repository. Open Browse > Repositories tab and find consent-data in the Filter field. Clone the consent-data repository to your local machine the following way: Select the Anonymous HTTP tab (by default) and copy the Clone with commit-msg hook command. It is imperative to use commit-msg hook option when cloning the repository. One of the key elements of Gerrit is using \"hooks\". Hooks are scripts that are executed before or after particular Git events, like git commit or git push. *Clone with commit-msg hook* command in Gerrit allows you to clone a repository while automatically adding a special `commit-msg hook` to the local repository. This hook automatically generates a unique *Change-Id* for every new commit. Gerrit uses *Change-Id* to monitor different versions of the change. Open Git Bash and navigate to the directory where you need to copy consent-data: cd Paste the copied Clone with commit-msg hook command Clone with commit-msg hook and press Enter. Wait until the repository is completely cloned. Navigate to the OpenShift > Home > Projects console and find the project with the created demo demo-registry. Open the Networking > Routes section and follow the link to the registry Gerrit component. Navigate to Gerrit account configuration and find HTTP Credentials section. Generate a new HTTP-password and copy it to Notepad. This HTTP-password is needed further for authentification in order to clone and interact with the Gerrit-repository that includes registry-regulations regulations. Open Browse > Repositories tab and find registry-regulations in the Filter field. After deploying the registry, Gerrit will have empty regulations registry-regulations. You need to fill it in. Clone the registry-regulations repository to your local machine the following way: Select the Anonymous HTTP tab (by default) and copy the Clone with commit-msg hook command. It is imperative to use commit-msg hook option when cloning the repository. One of the key elements of Gerrit is using \"hooks\". Hooks are scripts that are executed before or after particular Git events, like git commit or git push. Clone with commit-msg hook command in Gerrit allows you to clone a repository while automatically adding a special commit-msg hook to the local repository. This hook automatically generates a unique Change-Id for every new commit. Gerrit uses Change-Id to monitor different versions of the change. Open Git Bash and navigate to the directory where you need to copy consent-data: cd Paste the copied Clone with commit-msg hook command Clone with commit-msg hook and press Enter. Wait until the repository is completely cloned. On the local machine copy the contents of consent-data repository, and then paste (replacing original files) it to registry-regulations. + IMPORTANT: Be sure to move the contents of consent-data repository without .git system directory. + WARNING: If the demo-registry is not expected to be configured for connection to \"Diia\", then it is important to delete diia directory from the registry-regulations repository, which can be found via the following path: ./notifications/diia. Otherwise, regulations deployment will fail. Publish the changes in demo-registry regulations. Regulations entities like data model, business process or forms will become available for use in user portals after publishing, including Regulations administrator portal (admin-portal), officer portal (officer-portal) and citizen portal (citizen-portal). Fill in the regulations in registry-regulations Gerrit online-repository of the registry on this step. Prepare commit with the changes to registry-regulations and send it to the repository. To do this, execute commands in Git Bash terminal in the following order: git add --all This command adds all the new, changed or deleted files in the current catalog and subcatalogs to the stage index for subsequent commit. Basically, it prepares all the changes on the project to git commit command. git commit -m \"added demo registry data\" Git commit command creates a new commit with the changes previously added to the index with git add command. The -m option allows you to add a short message to the commit in order to describe the changes made. In this case, the message is: \"added demo registry data\". After sending the changes, follow the link to Gerrit that will appear in the terminal. The path to registry Gerrit will be as follows: https://admin-tools-./gerrit — name of the new registry (in this case — demo). — name of OpenShift environment where the registry is deployed. Wait until MASTER-Code-review-registry-regulations code check system pipeline is executed. You can check the progress by following the corresponding link at the bottom of the page in Gerrit. As a result of a successful check, your change request will get VERIFIED +1 status. Confirm the application of changes as moderator by clicking CODE-REVIEW+2 button. Apply the changes to the master branch of the repository that contains regulations, by clicking SUBMIT, which will execute git merge of the changes. As a result, MASTER-Build-registry-regulations pipeline automatically publishes the regulations. You can check the progress by following the corresponding link at the bottom of the page in Gerrit. After successful publication, reference examples marked with reference- prefix, and testing examples marked with feature- prefix will become available in the demo-registry regulations. Navigate to the regulations administrator portal and check if entities like business processes and UI-forms are available. The service name of reference examples will contain the reference- prefix. Administrator portal is accessed via the following link: https://admin-tools-.. The same reference business processes will become available as services in officer and citizen portals. The content of demo-registry regulations is the same as the typical regulations structure, used for any registry deployed on the Platform (see more — Regulations structure_). Regulations of the demo-registry includes reference examples marked with the reference- prefix, and testing examples marked with feature- prefix. They can be examples of .bpmn- business process schemes, .json-forms for process data, .xml-schemes for the deployment of registry data models, and other file types. Demo-registry regulations content image::registry-admin/cp-deploy-consent-data/cp-deploy-consent-data-6.png[] In order to let an officer get access to a corresponding reference process, you need to create a user in -officer realm for the corresponding registry in Keycloak service, and give this user the corresponding access rights. Access rights can differ according to the registry logic. They can be common officer rights, like the -officer role, or specific, like the officer responsible for hierarchy structure management — hierarchy-registry-manager. Find more information on creating users and managing their access rights in the following section: Creating users in the system. The list of roles supported by demo-registry regulations is available in roles/*.yml files. Officer roles are listed in roles/officer.yml file, and citizen roles can be found in roles/citizen.yml file. To view the processes associated with feature-examples, use the op-regression role in Keycloak. With this role functionality testing processes like JUEL-function or delegate checking will become available in the portal. To view the processes associated with reference-examples, use the op-reference role in Keycloak. Roles of the demo-registry regulations roles/officer.yml roles: # feature roles - name: officer description: Officer role - name: task-dispatcher description: Task orchestrator - name: officer-first-rank description: Officer of the first rank - name: officer-second-rank description: Officer of the second rank - name: op-regression description: Available all business processes - name: op-layouts description: Available layouts business processes - name: op-sorting description: Available sorting business processes - name: officer-grant description: Role with granted analytic view - name: officer-revoke description: Role without revoked analytic view - name: officer-grant-all description: Role with all analytic views - name: officer-revoke-all description: Role without all analytic views - name: citizen description: Role for citizen on officer portal for RBAC - name: death-officer description: Role for RBAC validation - name: inn-officer description: Role for RBAC validation - name: birth-officer description: Role for RBAC validation - name: personnel-officer-admin description: Personnel officer admin role - name: officer-moderator description: Moderator of manual registration - name: hierarchy-registry-user description: Registry user with hierarchy management rights - name: hierarchy-registry-manager description: Registry manager with hierarchy management rights - name: head-officer description: Head officer - name: op-reference description: Available all reference business processes To check access rights for each corresponding role, see regulations authorization files bp-auth/*.yml. Access rights for officers are defined in bp-auth/officer.yml file, while for citizens the file is bp-auth/citizen.yml. External systems authorization is defined in bp-auth/external-system.yml file. Access to demo-registry business processes for the corresponding roles bp-auth/officer.yml authorization: realm: \"officer\" ##### Feature process access ##### process_definitions: - process_definition_id: \"feature-systemErrorAfterUserTask\" process_name: \"AUTO test process description\" process_description: \"AUTO test process description\" roles: - 'op-regression' ##### Reference process access ##### - process_definition_id: 'reference-upload-update-digital-document' process_name: 'File downloading and editing' process_description: 'File downloading and editing' roles: - 'op-reference' ##### Hierarchy management process access ##### - process_definition_id: 'reference-hierarchy-management' process_name: 'Hierarchy management' process_description: 'Hierarchy management' roles: - 'hierarchy-registry-manager' Reference examples of regulations modelling are described on the pages of the following section: registry-develop:best-practices/best-practices-overview.adoc. Registry regulations development training course","title":"Demo-registry deployment with reference examples","component":"platform","version":"1.9.6","name":"cp-deploy-consent-data","url":"/platform/1.9.6/registry-develop/registry-admin/cp-deploy-consent-data.html","titles":[{"text":"1. Deployment of demo-registry and regulations","hash":"_deployment_of_demo_registry_and_regulations","id":1},{"text":"2. Demo-registry regulations content description","hash":"_demo_registry_regulations_content_description","id":2},{"text":"3. Reference examples","hash":"_reference_examples","id":3},{"text":"4. Useful links","hash":"_useful_links","id":4}]},"58":{"id":58,"text":"On this page: 1. General description 1.1. GeoServer use cases 1.2. Utilizing GeoServer in the registry 2. GeoServer deployment 3. Modeling regulations for using geospatial data in business processes 3.1. Creating a registry data model 3.2. Modeling business process scenarios and forms 3.2.1. Manually entering coordinates into the database 3.2.1.1. Modeling the business process 3.2.1.2. Modeling data input UI forms 3.2.2. Selecting coordinates on the map and saving them to the database 3.2.2.1. Modeling the business process 3.2.2.2. Modeling data input UI forms 3.2.3. Changing coordinates and information about them 3.2.3.1. Modeling the business process 3.2.3.2. Modeling data input forms 3.2.4. Searching for geographic objects on the map with geocoding functionality 3.2.4.1. Modeling the business process 3.2.4.2. Modeling the object search form 3.3. Working with geodata in user dashboards 4. Working with GeoServer Viewing layers is GeoServer 5. Working with tables in the registry database 6. Working with the API 7. Related pages Registry administrators and regulations developers have the ability to configure work with geospatial data (geodata)[1] within the framework of business processes using the GIS[2] GeoServer, which has been implemented in the system. At the core of the solution lies the GeoServer component, an open-source server that allows retrieving data from the database in the form of GeoJSON. The main types are GeoJSON, Feature, and Layer. GeoJSON — a data format that can be interpreted by LeafletJS and displayed on a map. Feature — an object that contains geometry (information about the geographic location of the object) and attributes (additional information about the object) of a specific geographic entity. Layer (layer) — a raster or vector dataset represented by a set of geographic objects that can be displayed on a map. A layer can contain information about geographic entities such as points, lines, polygons, and also their attributes and metadata. The LeafletJs library is used to display geospatial data on UI forms in the User portals, integrating all aspects of the GeoServer and enabling map display on HTML pages. The platform provides the following functionality for working with geospatial data in the registry: Displaying maps and satellite images supported by third-party systems in the portal for officials or service recipients, with the ability to switch between them and change the scale. Displaying registry objects with a spatial reference on the map as layers. Enabling multiple layers on the map. Searching registry objects on the map by attributes. Ability to select coordinate points, draw lines or polygons by overlaying them on the map within a business process. Geocoding — searching for coordinates on the map by a public address or object name. Reverse geocoding - searching for an address or object name by coordinates. Use the following action plan to configure and utilize the GeoServer in the registry: Basic configuration: GeoServer deployment Creating a registry data model Modeling business process scenarios and forms Working with data: Working with geodata in user dashboards Working with GeoServer Working with tables in the registry database Additional information: Working with the API First, deploy the registry with the GeoServer. GeoServer is a component of a separate registry template and is automatically deployed together with the registry from the corresponding template. When deploying the registry from such a template, GeoServer and Nominatim[3] are additionally installed. Configuration of GeoServer and publication of layers occur during the regulation deployment. To deploy the registry with GeoServer configuration in the Control Plane administrative panel , follow these steps: Access the Control Plane and open the Registries section. During the configuration process, on the Registry template step, select a template with the GeoServer. Use the recommended configuration: templates/registry-tenant-template-geo-server-recommended After making and confirming all the changes, the Jenkins process MASTER-Build- will start, deploying the registry with GeoServer. For more details, see Deploying a registry. After deploying the registry, you can create a data model and use geospatial data in the regulations. First, it is necessary to create a data model. To use geospatial data in the registry, a special attribute type=\"geometry\" has been implemented, which extends the capabilities of the standard Liquibase library. This parameter can be used at the column level both in table construction and search conditions (view tables). For more information on table modeling, see Теги створення таблиць. For more information on search conditions modeling, see Керування критеріями пошуку (Search Conditions) Example 1. Modeling a table with the geometry type Example 2. Modeling a view table (Search Condition) with the geometry type After applying the changes to the master branch of the registry regulations, the Jenkins process MASTER-Build-registry-regulations is triggered, which publishes structures containing the geometry type as layers to the GeoServer. As a result, GeoServer will contain published entities entity_with_geo_type and get_entity_with_geo_type_not_equals_v, which can be accessed to display geodata on UI forms in business processes. For more details, see Working with GeoServer. After deploying the registry data model and creating data layers according to the data model, you will be able to write to or read from the database objects that contain coordinates of specific points, lines, polygons, etc. Manually enter the address and coordinates of the object (latitude and longitude) in the corresponding fields of the data entry form. Use the standard Text Field component when modeling forms. Use Groovy scripts to retrieve data from the form and save the data to the data factory. Model a business process that allows you to enter data with object coordinates and save them to the data factory. Model a User Task for data entry and associate it with the corresponding UI form using the Form key parameter. Model a User Task for signing data with a Qualified Digital Signature and associate it with the corresponding UI form using the Form key parameter. Pass the data for signing from the previous form through the submission() function in the Form data pre-population field. For example: ${submission('addGeoActivity').formData} Model a script task to retrieve data from a UI form based on the corresponding ID for further processing and saving the object’s coordinates to the database. Script to retrieve coordinates from a UI form and create an object for storing geodata def signedFormData = submission('signGeoActivity').formData def entityLocation = [:] entityLocation.type = 'point' entityLocation.latitude = signedFormData.prop('latitude').value() entityLocation.longitude = signedFormData.prop('longitude').value() signedFormData.prop('entityLocation', S(entityLocation, 'application/json')) signedFormData.deleteProp('latitude') signedFormData.deleteProp('longitude') set_transient_variable('payload', signedFormData) This script combines latitude and longitude values into a single object named entityLocation and stores this object in signedFormData. It retrieves form data (formData) using the submission() function, passing the signature form ID signGeoActivity, and saves them into the variable signedFormData. It creates an object (a map of key-value pairs) named entityLocation. The entityLocation parameter corresponds to the entity_location column name in the registry database, which you have defined as the one to store your geodata. The column is created according to your data model with the attribute type=\"geometry\". It defines the type as point (point on map) for entityLocation. It saves the latitude (latitude) and longitude (longitude) values from signedFormData into entityLocation. It adds a new attribute entityLocation to signedFormData and assigns the JSON representation of the entityLocation object as its value. It sets the payload variable as a temporary variable storing signedFormData. It can be further used in the business process. Model a Service Task to sign data with a system key. Configuring: Use the delegate System signature by DSO service from the template catalog for applying a system signature. Pass the input data as a variable ${payload} in the corresponding field. Pass the token of the executor of the last user task in the business process: ${completer('signGeoActivity').accessToken}. Store the response in the variable system_signature_key. Save the data to the database. Create a new record in the database, storing the value of the entityLocation object in the corresponding column. Use the delegate Create entity in data factory to create an entity in the database. Specify the resource/API endpoint entity-with-geo-type corresponding to the name of the table with geodata defined in the data model registry - entity_with_geo_type. Pass the input data as a variable ${payload} in the corresponding field. Pass the token of the executor of the last user task in the business process: ${completer('signGeoActivity').accessToken}. Specify the source of the system signature. Use the function sign_submission(): ${sign_submission('signGeoActivity').signatureDocumentId}. Specify as the variable ${system_signature_key} the Ceph document key containing information about the signed data. Save the response to the result variable, for example, createGeoResponse. Model the data input forms for your business process. The form’s names should correspond to the value of the Form key parameter in the respective user tasks of the business process. Model a UI form for entering data about an object: name, address, and coordinates (latitude and longitude). Use the Text Field component for all four fields. For each field, define a business label (Tab Display > Label) and a parameter name for the API (Tab API > Property Name). The UI form in the User portal may look like this: The parameters to be stored in the data factory will have the following format: Model a UI form for verifying the entered data before signing it with a qualified digital signature. This form will have the same fields as the data input form. On this form, the user can only verify the accuracy of the entered data before signing. Model a UI form with a Map component for using the map in the business process. Use Groovy scripts to retrieve data from the form and save it to the data factory. Model a business process that allows you to select coordinates (point, line, or polygon) on the map and save them to the data factory. Model a user task for selecting coordinates on the map and integrate it with the corresponding UI form using the Form key parameter. Model a script task for retrieving data from the UI form with the map based on the corresponding ID, for further processing and saving the object’s coordinates to the database. Script for retrieving coordinates from the map and creating an object to store geodata: def formDataForm = submission('show-map').formData def data = S([:], 'application/json') data.prop(\"name\", formDataForm.prop(\"name\")) data.prop(\"address\", formDataForm.prop(\"address\")) data.prop(\"entityLocation\", formDataForm.prop('entityLocation').prop('geometry').toString()) println \"data: \" + data execution.removeVariable('payload') set_transient_variable('payload', data) In general, this script retrieves data from a form, creates a new JSON object with the received data, and stores it in a temporary variable payload: It creates a variable formDataForm and retrieves form data with the identifier show-map using the JUEL submission() function. It creates a new JSON object called data with an empty dictionary and the data type application/json. It populates the data object with properties \"name,\" \"address,\" and \"entityLocation\", extracting the corresponding values from the formDataForm object. Note that the nested object 'geometry' in the \"entityLocation\" property is converted into a string. It sets a new variable 'payload' using the values of the data object, which can be further used in the business process. Model a user task (User Task) for signing the data with a digital signature and link it to the corresponding UI form using the Form key parameter. Pass the data to be signed as the variable ${payload} in the Form data pre-population field. Model a script task for processing and saving the signed data. The script used here is almost identical to the previous one, with the only difference being that the 'geometry' object in the 'entityLocation' property is not converted to a string but passed as a JSON object. Script for processing and saving data, signed with the qualified electronic signature: def formDataForm = submission('show-map').formData def data = S([:], 'application/json') data.prop(\"name\", formDataForm.prop(\"name\")) data.prop(\"address\", formDataForm.prop(\"address\")) data.prop(\"entityLocation\", formDataForm.prop('entityLocation').prop('geometry')) println \"data: \" + data execution.removeVariable('payload') set_transient_variable('payload', data) Model a service task for signing the data with a system key. Use the delegate System signature by DSO service from the template catalog for applying the system signature. Pass the input data as the variable ${payload} in the respective field. Pass the token of the executor of the last user task in the business process: ${completer('signGeoActivity').accessToken}. Store the response in the variable system_signature_key. Save the data to the database. Create a new record in the database, saving the value of the entityLocation object to the corresponding column. Use the delegate Create entity in data factory to create an entity in the database. Specify the resource/API endpoint entity-with-geo-type, which corresponds to the table name of the geodata you defined when creating the registry data model — entity_with_geo_type. Pass the input data as the variable ${payload} in the respective field. Pass the token of the executor of the last user task in the business process: ${completer('ID of the task for signing the data with a qualified digital signature').accessToken}. Specify the source of the system signature. Use the function sign_submission(): ${sign_submission('*ID of the task for signing the data with a qualified digital signature').signatureDocumentId}. Specify as the variable ${system_signature_key} the key of the Ceph document that contains information about the signed data. record your response in the result variable, for example, createGeoResponse. Model the data input UI forms. Unlike the previous case where we manually enter coordinates, we will now consider the possibility of entering object coordinates directly from the map into the database. Create a form for selecting coordinates on the map using the MAP component. Define a label, for example, entityLocation. Configure it on the Data tab. Go to the API tab and define the Property Name as entityLocation. This parameter is used for data exchange through the API. For more details, see Map component Create a form for signing the data with the qualified digital signature. Model three text fields for the data that will be saved to the database after digital signing: address — object address; name — object name; entityLocation - object coordinates (a point on the map, line, or polygon). You can modify previously entered coordinates. To do this, simply initiate the corresponding business process, select a specific geographic object on the map (point, line, or polygon) that needs to be changed, then select a new object and overwrite the values in the database. Model a user task to select coordinates on the map that need to be changed, and link it to the corresponding UI form using the Form key (form’s internal name). Using a script, obtain the entity ID in the database (entityId) that needs to be changed. Script for retrieving form data, including the entityId entity def formDataForm = submission('choose-coordinates-id').formData println \"formDataForm: \" + formDataForm def data = S([:], 'application/json') data.prop(\"entityId\", formDataForm.prop('map').prop('properties').prop(\"id\").value()) data.prop(\"name\", formDataForm.prop('map').prop('properties').prop(\"name\").value()) data.prop(\"address\", formDataForm.prop('map').prop('properties').prop(\"address\").value()) execution.removeVariable('payload') set_transient_variable('payload', data) This script performs the following actions: It defines the formDataForm variable, which retrieves data from the form that was submitted with the identifier choose-coordinates-id using the JUEL submission() function. It creates a new object called data with an empty dictionary and the data type application/json. It populates the data object with data from formDataForm, such as entityId, name, and address. It sets the payload variable as a temporary variable and assigns it the value of data. Next, create a user task to select new coordinates on the map and link it to the corresponding UI form using the Form key (form’s internal name). Pass the data from the script to the form as a variable ${payload} in the Form data pre-population field. Using a script, retrieve the updated entity data that needs to be saved in the database. Script for retrieving updated data and coordinates from the form def formDataForm = submission('ID користувацької задачі для вибору нових координат').formData println \"formDataForm: \" + formDataForm def data = S([:], 'application/json') data.prop(\"entityId\", formDataForm.prop('map').prop('properties').prop(\"id\").value()) data.prop(\"name\", formDataForm.prop('map').prop('properties').prop(\"name\").value()) data.prop(\"address\", formDataForm.prop('map').prop('properties').prop(\"address\").value()) execution.removeVariable('payload') set_transient_variable('payload', data) This script performs the following actions: It defines the variable formDataForm, which receives data from the form submitted with the identifier choose-coordinates-id using the JUEL function submission(). Creates a new object called data with an empty dictionary and the data type application/json. Populates the data object with the data from formDataForm, such as entityId, name, and address. Sets the variable payload as a temporary variable and assigns it the value of data. Then, create a user task for signing the data with the qialified digital signature and link it to the corresponding UI form using the Form key (form’s internal name). Pass the data for signature from the script to the form as a variable ${payload} in the Form data pre-population field. Using a script, obtain the data signed with the qualified digital signature that needs to be saved in the database. Script for retrieving signed data from a form def formDataForm = submission('choose-new-coord').formData println \"formDataForm choose-new-coord \" + formDataForm def data = S([:], 'application/json') data.prop(\"entityId\", formDataForm.prop(\"entityId\")) data.prop(\"name\", formDataForm.prop(\"name\")) data.prop(\"address\", formDataForm.prop(\"address\")) data.prop(\"entityLocation\", formDataForm.prop('entityLocation').prop('geometry')) execution.removeVariable('payload') set_transient_variable('payload', data) println \"payloadData: \" + data It defines the variable formDataForm, which receives data from the form submitted with the identifier choose-coordinates-id using the JUEL function submission(). Creates a new object called data with an empty dictionary and the data type application/json. Populates the data object with the data from formDataForm, such as entityId, name, and address. Sets the variable payload as a temporary variable and assigns it the value of data. This script is similar to the previous one, but with one small difference: it does not invoke the toString() method for the geometry property of the entityLocation object. As a result, the value of entityLocation remains in its original format (an object) instead of being converted to a string. Model a service task for data signing with a system key. Use the delegate System signature by DSO service from the template catalog to apply a system signature. Pass the input data as the variable ${payload} in the corresponding field. Pass the token of the executor of the last user task in the business process: ${completer('ID останньої користувацької задачі для підпису даних').accessToken}. Store the response in the variable system_signature_key. Update the entity in the database. Use the Update entity in data factory delegate or the generic connector Connect to data factory with the PUT method. For example, pass the resource value and entity identifier as follows, using the submission function: entity-with-geo-type/${submission('ID of the user task for selecting new coordinates').formData.prop('entityId').value()} entity-with-geo-type - the resource/endpoint corresponding to the entity_with_geo_type table in the database. entityId - the identifier of the entity to be updated, obtained from the respective form. For more info, see bp-modeling/bp/element-templates/bp-element-templates-installation-configuration.adoc. Model a form for selecting coordinates on the map using the MAP component. Define a label, for example, Map. Configure it on the Data tab. Go to the API tab and define the Property Name as map. This parameter is used for data exchange through the API. For mor details, see Map component Next, model another form for updating coordinates and object information. Use Text Field components for text fields and the MAP component for selecting new coordinates on the map. Define a label, for example, entityLocation. Configure it on the Data tab. Go to the API tab and define the Property Name as entityLocation. This parameter is used for data exchange through the API. For more details about the MAP component, see Map component Create a form for signing data with the qualified digital signature. Model three text fields for the data that will be saved to the database after digital signing: address — object address; name — object name; entityLocation - object coordinates (point on the map, line, or polygon). Users have the ability to view all geographic objects on the map that are stored in the database and search for these objects using geocoding. To display a map with coordinates of all available objects, it is sufficient to model a simple process with a start form. Connect the start task to a data input form using the Form key. Visualizing geodata on user interface forms in user dashboards can be achieved using the FormIO component Map. This component provides full functionality for working with geospatial data in the registry. Geocoding (searching for geographic objects) is activated directly on the UI forms through the settings of the Map component. For more information about the MAP component, refer to Map component. Users can utilize pre-modeled business processes to work with maps and geodata in the registry. To do this, simply go to the personal dashboard, find the section Available services, and launch one of the available processes (e.g., entering object coordinates into the database, and so on). GeoServer — сервіс, який дозволяє отримувати дані з БД у вигляді GeoJSON для їх подальшої обробки та відображення на мапі у бізнес-процесах. All data structures within the regulations that contain the geometry type are published as layers to the GeoServer. The configuration is published during the deployment of the regulations, in the publish-geoserver-configuration step of the main Jenkins process MASTER-Build-registry-regulations. To manage the GeoServer settings, a web interface is provided, which can be accessed through the environment of your registry: https://geo-server-.apps.envone.dev.registry.eua.gov.ua/geoserver. Layer (Layer) — is a collection of objects (Features). Feature is an individual object on the map that contains geometric and attribute data. Objects can be: points (\"type\": \"Point\"); lines (\"type\": \"Polyline\"); polygons (\"type\": \"Polygon\"). They represent various elements on the Earth’s surface, such as buildings, rivers, lakes, roads, etc. Each object feature contains geometry that indicates its spatial location (e.g., entityLocation) and properties that provide additional information about the object (e.g., name and address). In the context of working with the GeoServer of the registry, a published layer is either a table or a view (Search Condition). To view all layers published to the GeoServer, follow these steps: Log in to the GeoServer as an administrator. Open the Layer Preview section. You will see all layers (tables or views from your registry database) that contain the type geometry. Select the GeoJSON data format from the drop-down list next to the corresponding layer for data preview. As a result, you will see a large FeatureCollection object with a set of geometric (coordinates) and attribute (object name on the map, address, etc.) data. Geospatial data is stored in a specialized table in the registry database, which you define as the repository for this data. The geometric elements themselves (coordinates of points, lines, and polygons) are stored in a dedicated column that supports the geometry data type, according to your data model (for more details, see Creating a registry data model). Figure 1. Example of storing geodata in the column entity_location of the table entity_with_geo_type Figure 2. Visualization of geodata on the map Information about all features (geometry and attributes) for each layer can be obtained directly from the registry’s API in the registry-rest-api service. The corresponding access points will be automatically created based on the specified tables and search conditions in the data model. For example, entity-with-geo-type, and so on. All generated API endpoints for the respective registry are presented in the openapi specification and can be accessed at: https://registry-rest-api-.apps.envone.dev.registry.eua.gov.ua/openapi. Make sure to add /openapi at the end of the link, otherwise, you will be directed to the Swagger testing environment (sandbox). Map component 1. Geospatial data (geodata) — is data that includes information related to geographic location and can be associated with specific geographic objects, such as cities, rivers, forests, buildings, and so on. 2. GIS (Geographic Information System) — is software that enables the collection, storage, analysis, visualization, and even forecasting of various geospatial data. 3. Nominatim — is a geocoder that can convert addresses or place names into their corresponding geographic coordinates, and vice versa — geographic coordinates into addresses or place names.","title":"Working with geodata in the registry","component":"platform","version":"1.9.6","name":"geoserver","url":"/platform/1.9.6/registry-develop/registry-admin/geoserver.html","titles":[{"text":"1. General description","hash":"general-description","id":1},{"text":"1.1. GeoServer use cases","hash":"scenarios","id":2},{"text":"1.2. Utilizing GeoServer in the registry","hash":"_utilizing_geoserver_in_the_registry","id":3},{"text":"2. GeoServer deployment","hash":"geoserver-deployment","id":4},{"text":"3. Modeling regulations for using geospatial data in business processes","hash":"_modeling_regulations_for_using_geospatial_data_in_business_processes","id":5},{"text":"3.1. Creating a registry data model","hash":"create-data-model","id":6},{"text":"3.2. Modeling business process scenarios and forms","hash":"bp-modeling","id":7},{"text":"3.2.1. Manually entering coordinates into the database","hash":"_manually_entering_coordinates_into_the_database","id":8},{"text":"3.2.1.1. Modeling the business process","hash":"_modeling_the_business_process","id":9},{"text":"3.2.1.2. Modeling data input UI forms","hash":"_modeling_data_input_ui_forms","id":10},{"text":"3.2.2. Selecting coordinates on the map and saving them to the database","hash":"_selecting_coordinates_on_the_map_and_saving_them_to_the_database","id":11},{"text":"3.2.2.1. Modeling the business process","hash":"_modeling_the_business_process_2","id":12},{"text":"3.2.2.2. Modeling data input UI forms","hash":"_modeling_data_input_ui_forms_2","id":13},{"text":"3.2.3. Changing coordinates and information about them","hash":"_changing_coordinates_and_information_about_them","id":14},{"text":"3.2.3.1. Modeling the business process","hash":"_modeling_the_business_process_3","id":15},{"text":"3.2.3.2. Modeling data input forms","hash":"_modeling_data_input_forms","id":16},{"text":"3.2.4. Searching for geographic objects on the map with geocoding functionality","hash":"_searching_for_geographic_objects_on_the_map_with_geocoding_functionality","id":17},{"text":"3.2.4.1. Modeling the business process","hash":"_modeling_the_business_process_4","id":18},{"text":"3.2.4.2. Modeling the object search form","hash":"_modeling_the_object_search_form","id":19},{"text":"3.3. Working with geodata in user dashboards","hash":"officer-citizen-portals","id":20},{"text":"4. Working with GeoServer","hash":"geoserver","id":21},{"text":"Viewing layers is GeoServer","hash":"layer-preview","id":22},{"text":"5. Working with tables in the registry database","hash":"db-tables","id":23},{"text":"6. Working with the API","hash":"openapi","id":24},{"text":"7. Related pages","hash":"_related_pages","id":25}]},"59":{"id":59,"text":"On this page: 1. Overview 2. Action plan for using a hierarchical model in the registry 3. Building the hierarchy structure 4. Building the data model 5. Creating RLS rules for data access 6. Loading data into tables 7. Creating users 8. Modeling business processes The Platform for state registries enables you to build a hierarchical model where access to data objects corresponds to the hierarchy structure levels and user roles. This way, you can control access to objects based on their hierarchical position and the user’s role. In the hierarchical model, each unit has a unique code (structure_code) that identifies it within the system. In addition, the system uses a surrogate key (hierarchy_code), which is formed by concatenating the unit code and the code of each parent level in the hierarchy. For example, 101.202.303 is a surrogate key for accessing the objects of the third-level subdivision in the hierarchy. The hierarchy_code attribute in the Keycloak user management system determines the user’s affiliation with a hierarchy node. This attribute must match the unit’s surrogate key in the registry database. This way, you can correctly assign roles and restrict user access to the corresponding hierarchy levels. It is important to note that hierarchy_code is a mandatory attribute for officers in the Keycloak system if such a person is to perform functions within the hierarchical structure. This allows you to determine each officer’s affiliation and access restrictions accurately. You can assign the hierarchy attribute to users directly in the Keycloak service interface or by importing data from a CSV file. The following roles are provided to make working within the hierarchical structure and managing personnel using this model more effective: hierarchy-registry-manager: Registry manager; an officer responsible for managing the hierarchical structure of the registry. hierarchy-registry-user: Registry user; an officer who has access to the hierarchical structure and can perform tasks within their authority. personnel-officer-admin: Personnel officer; an officer responsible for personnel management, including appointing and updating roles of other officers. officer-moderator: Moderator; an officer who moderates the process of officers' auto-registration in the registry. A moderator is responsible for checking and approving registration requests from new users. These roles are meant to help you control the hierarchical structure of your registry, manage personnel, and ensure proper organization and data access. Use the following roadmap to set up and use the hierarchical model in the registry: Use reference examples of regulations modeling. Deploy your copy of the registry demo. For details on deploying a registry demo and getting regulations modeling samples, see Demo-registry deployment with reference examples. Samples of the reference data model, business processes, and UI forms are available in the regulations files with a reference- prefix or in the reference folders if there are several grouped modeling examples. Build your hierarchical structure. Create a data model. Create RLS rules to access data in the hierarchical model. Fill the reference tables with data. Create registry users. Model the business processes. Plan and create a hierarchical structure consisting of several levels and nodes. Let’s call them units. Assign a unique hierarchy code (structure_code) to each unit. A reference example of a hierarchical structure Table 1. Matching structure_code with hierarchy_code Unit name Unit code (structure_code) Surrogate key (hierarchy_code) Note Ministry of Economy of Ukraine 101 101 Hierarchy root node Department of Trade Agreements and Export Development 201 101.201 Division of Public Policy in the field of Public Material Reserve 202 101.202 Department of Labor and Employment 203 101.203 Department of Labor 301 101.203.301 Department of Industry and High-Risk Facilities Supervision 302 101.203.302 Ministry of Digital Transformation of Ukraine 102 102 Hierarchy root node State Center of Informational Resources of Ukraine 204 102.204 State Enterprise \"Diia\" 205 102.205 Ministry of Internal Affairs of Ukraine 103 103 Hierarchy root node National Police of Ukraine 206 103.206 State Border Guard Service of Ukraine 207 103.207 State Migration Service of Ukraine 208 103.208 Office for Management of Places of Temporary Accommodation of Foreigners 303 103.208.303 Office for Management of Places of Temporary Accommodation of Refugees 304 103.208.304 State Emergency Service of Ukraine 209 103.209 Ministry of Communities and Territories Development of Ukraine 104 104 Hierarchy root node State Agency for Tourism Development of Ukraine 210 104.210 State Agency on Energy Efficiency and Energy Saving of Ukraine 211 104.211 State Aviation Administration of Ukraine 212 104.212 State Service for Maritime, Inland Waterway Transport and Shipping of Ukraine 213 104.213 State Service of Ukraine for Transport Safety 214 104.214 State Agency for Reconstruction and Development of Infrastructure of Ukraine 215 104.215 Department of Restoration of Infrastructure of Ukraine 305 104.215.305 Department of Development of Infrastructure of Ukraine 306 104.215.306 Office of Infrastructure Development of Ukraine 401 104.215.306.401 Plan and create a logical data model for your hierarchical structure. As an example, consider the following table structure: Figure 1. An ERD diagram of the logical model based on the reference structure Notes on the table structure of the reference hierarchical model The officers table contains information about officers, their roles, identification data, and affiliation with specific units: officers_id: A unique officer ID (UUID type). user_name: User’s name in Keycloak (TEXT type). full_name: User’s full name (TEXT type). drfo: User’s RNOKPP code (TEXT type). edrpou: User’s EDRPOU code (TEXT type). realm_roles: A list of user’s regulations roles (TEXT type). work_start_date: Work start date (DATE type). unit_name: Unit’s name in the hierarchy (TEXT type). hierarchy_code: A surrogate key based on structure_code using concatenation (TEXT type). structure_code: A unique hierarchy code of a corresponding unit (TEXT type). selfregistration_decision: Moderator’s decision on self-registration (BOOLEAN type). The unit table contains information about units: id: A unique unit ID (UUID type). unit_name: Unit’s name in the hierarchy (VARCHAR(255) type). structure_code: A unique hierarchy code of a corresponding unit (VARCHAR(255) type). hierarchy_code: A surrogate key based on structure_code (VARCHAR(255) type). The document_registration table contains information about the documents associated with a specific unit: id: A unique document ID (UUID type). name: Document name (TEXT type). unit_id: The ID of the unit to which the document belongs. This corresponds to the ID in the unit table (UUID type). Note that all UUID fields use the uuid_generate_v4() function to generate unique default values. Create a physical data model based on your logical model. Example 1. A physical data model for the hierarchical structure of units in the registry The \"officers\" table The \"unit\" table CREATE TABLE unit The \"document_registration\" table CREATE TABLE document_registration When creating a new structure, you can create the table with the organizational structure when deploying the regulations, but at least one parent node in the hierarchy must be created. When an application is created, a hierarchy code with a surrogate key of the BP initiator is automatically added to it. RLS (Row-Level Security) rules are used to control access to data rows in the database. In our hierarchical model, RLS rules restrict user access to data objects depending on the hierarchy level these objects belong to. Each RLS rule checks the value of the hierarchy_code attribute in the user’s JWT (JSON Web Token) and compares it to the values of the hierarchy_code column in a specific database table. If the values match, the user can access the corresponding data objects. You can set rules for tables or table views (search conditions). You can use different types of RLS rules to control table access based on the value of the hierarchy_code JWT attribute and the hierarchy_code column. Configure changeSets to add rules after the appropriate tables or search conditions to which the rules should be applied. As an example, let’s apply RLS rules to a test table. Example 2. The \"test_table\" table CREATE table test_table Example 3. RLS rules for controlling access to the \"test_table\" based on the value of the \"hierarchy_code\" JWT attribute and the \"hierarchy_code\" column : A rule to add write permissions. : A rule to remove the write rule. : A rule to add read permissions. : A rule to remove the read rule. Rules are applied to the test_table. The hierarchy_code JWT attribute from the user’s token is used. The value of the hierarchy_code column in the test_table is checked for a match with the value of the hierarchy_code JWT attribute. The user only gets access to objects that correspond to their hierarchy level. The deletion rule cancels this access. Let’s see how this works according to our reference hierarchy structure using specific search condition examples. Example 4. The \"find_all_units\" search condition for interacting with the data factory within the business process The \"find_all_units\" search condition CREATE search condition find-all-units The find_all_units search condition searches the unit table using specific criteria. Here are the main properties of this search condition: Table: unit (alias: u). Columns to select: id, unit_name, structure_code, hierarchy_code. Search criteria: The structure_code column must differ from a particular value (searchType=\"notEqual\"). The structure_code column must start with a particular value (searchType=\"startsWith\"). Results are sorted by the hierarchy_code column in ascending order (sorting=\"asc\"). This search condition allows you to find all entries in the unit table that meet the described criteria. You can use this search condition to retrieve a specific subset of data from the unit table based on your criteria. Example 5. An RLS rule for reading data to control access to the \"find_all_units_v\" view table based on the value of the \"hierarchy_code\" JWT attribute and the \"hierarchy_code\" column. addReadRule for the \"find_all_units_v\" view table CREATE rls for find-all-units SC The read_rls for find_all_units RLS rule creates a data read rule to control access to the find_all_units_v view table based on the value of the hierarchy_code JWT attribute and the hierarchy_code column. This rule checks whether the attribute and column values match. If the values match, the user can read data from this table. Prepare the CSV files to upload into the reference tables. An example of a CSV file for filling the \"unit\" table as part of the reference hierarchical structure structure_code,unit_name,hierarchy_code 101,Ministry of Economy of Ukraine,101 102,Ministry of Digital Transformation of Ukraine,102 103,Ministry of Internal Affairs of Ukraine,103 104,Ministry of Communities and Territories Development of Ukraine,104 201,Department of Trade Agreements and Export Development,101.201 202,Division of Public Policy in the field of Public Material Reserve,101.202 203,Department of Labor and Employment,101.203 301,Department of Labor,101.203.301 302,Department of Industry and High-Risk Facilities Supervision,101.203.302 204,State Center of Informational Resources of Ukraine,102.204 205,State Enterprise \"Diia\",102.205 206,National Police of Ukraine,103.206 207,State Border Guard Service of Ukraine,103.207 208,State Migration Service of Ukraine,103.208 209,State Emergency Service of Ukraine,103.209 303,Office for Management of Places of Temporary Accommodation of Foreigners,103.208.303 304,Office for Management of Places of Temporary Accommodation of Refugees,103.208.304 210,State Agency for Tourism Development of Ukraine,104.210 211,State Agency on Energy Efficiency and Energy Saving of Ukraine,104.211 212,State Aviation Administration of Ukraine,104.212 213,State Service for Maritime, Inland Waterway Transport and Shipping of Ukraine,104.213 214,State Service of Ukraine for Transport Safety,104.214 215,State Agency for Reconstruction and Development of Infrastructure of Ukraine,104.215 305,Department of Restoration of Infrastructure of Ukraine,104.215.305 306,Department of Development of Infrastructure of Ukraine,104.215.306 401,Office of Infrastructure Development of Ukraine,104.215.306.401 An example of a CSV file for filling the \"document_registration\" table as part of the reference hierarchical structure name,hierarchy_code Application No. 102,103.206 Resolution No. 1657,104.215.306 Resolution No. 42,101.203.301 The initial data is loaded into the tables using a PL/pgSQL database procedure. For details on initial data loading, see PL/pgSQL procedure for initial loading of registry data. Create officer users in the registry. There are several ways you can do this: Create users manually (see Creating a user and granting access rights). Upload users via a CSV file (see Importing users through a file and granting access rights). Enable automatic registration in the system via the onboarding process (see best-practices/bp-officer-self-register-manual.adoc and best-practices/bp-officer-self-register-auto.adoc). To use this approach, you must first enable auto-registration at the registry configuration level in the Control Plane admin console (see Configuring self-registration for officers). Each registered officer must have a hierarchy-related hierarchy_code attribute in Keycloak. This attribute serves as a surrogate key for accessing data that belongs to a specific hierarchy level. It is also necessary to clearly define the roles for these users. A specific role with the hierarchy_code attribute allows you to limit an officer’s access to the desired hierarchy level — that is, a unit in the hierarchical structure and its subordinates. When you create a registry manager within the hierarchical management model, you must assign the hierarchy-registry-manager role to them in addition to the hierarchy_code attribute. The same principle applies to all other roles within the hierarchical model. The following roles are related to the hierarchical model: hierarchy-registry-manager: Registry manager; an officer responsible for managing the hierarchical structure of the registry. hierarchy-registry-user: Registry user; an officer who has access to the hierarchical structure and can perform tasks within their authority. personnel-officer-admin: Personnel officer; an officer responsible for personnel management, including appointing and updating roles of other officers. officer-moderator: Moderator; an officer who moderates the process of officers' auto-registration in the registry. A moderator is responsible for checking and approving registration requests from new users. All the hierarchy-related roles and the officer system role must be added to the roles/officer.yml file of the registry regulations. An example of roles/officer.yml roles: - name: officer description: Officer role - name: personnel-officer-admin description: Personnel officer admin role - name: officer-moderator description: Manual registration moderator - name: hierarchy-registry-user description: User of the registry with the hierarchical management model - name: hierarchy-registry-manager description: Manager of the registry with the hierarchical management model - name: officer-moderator description: Officers auto-registration moderator To grant business process access to a specific role, you must set up authorization for the role in the bp-auth/officer.yml file. An example of bp-auth/officer.yml authorization: realm: \"officer\" process_definitions: - process_definition_id: 'reference-hierarchy-management' process_name: 'Hierarchical structure management' process_description: 'Hierarchical structure management' roles: - 'hierarchy-registry-manager' - process_definition_id: 'reference-hierarchy-create-document' process_name: 'Create data for the data factory according to the hierarchical structure' process_description: 'Create data for the data factory according to the hierarchical structure' roles: - 'hierarchy-registry-user' - process_definition_id: 'reference-hierarchy-edit-document' process_name: 'View and edit data in the data factory according to the hierarchical structure' process_description: 'View and edit data in the data factory according to the hierarchical structure' After deploying the regulations with the hierarchical data model, you can start modeling your logic for interacting with registry data and processing it by the business processes and integration connectors, also called delegates. Based on all the modeled tables and search conditions in the registry data model, the Platform creates REST API endpoints (resources) and publishes them in the registry-rest-api service. You can use these resources in business processes to obtain, create, edit, or delete data. Business processes and UI forms modeling examples are available in the regulations of the registry demo. To learn how to deploy the registry demo, see Demo-registry deployment with reference examples.","title":"Hierarchical model","component":"platform","version":"1.9.6","name":"hierarchical-model","url":"/platform/1.9.6/registry-develop/registry-admin/hierarchical-model.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Action plan for using a hierarchical model in the registry","hash":"_action_plan_for_using_a_hierarchical_model_in_the_registry","id":2},{"text":"3. Building the hierarchy structure","hash":"hierarchy-structure","id":3},{"text":"4. Building the data model","hash":"build-data-model","id":4},{"text":"5. Creating RLS rules for data access","hash":"rls-rules","id":5},{"text":"6. Loading data into tables","hash":"inital-data-load","id":6},{"text":"7. Creating users","hash":"create-users","id":7},{"text":"8. Modeling business processes","hash":"bp-modeling","id":8}]},"60":{"id":60,"text":"On this page: 1. Service access rights 2. Authorization in the system 3. Main Page 4. Managing business processes in Camunda Cockpit 4.1. Camunda Cockpit dashboard 4.2. Running business processes 4.2.1. Viewing business process instance details 4.2.2. Working with error incidents 4.2.3. Suspending business processes and their instances 4.2.4. Activating business processes and instances execution 4.2.5. Deleting business process instances 4.2.6. Editing parameters 4.2.7. Filtering search parameters 4.3. Reference rules (Decisions) 4.4. Assigned tasks (Human Tasks) 4.5. Viewing deployed business processes (Deployments) Registry regulations administrator uses Camunda Cockpit service to administer business processes. With this service, the administrator can monitor working business processes and business rules to find, analyze and solve technical problems. You can find the general description of the service on its official resource via the following link: https://docs.camunda.org/manual/latest/webapps/cockpit/ To grant a user access to Camunda Cockpit service, take the following steps: Open to Keycloak service, for example, via OpenShift link. Select the corresponfing -admin realm. Navigate to Users menu, click View all users and select the user that you need to grant the access to. Navigate to Groups, select camunda-admin role and click Join. After successfully granting the role, you will be notified: \"Success! Added group membership\". You can find more information on the access rights assignment via the following link: platform:admin:user-management-auth/keycloak-create-users.adoc You can find the link to Camunda Cockpit in the OpenShift console, or Control Plane. To authorize with OpenShift: Navigate to Networking → Routes. Select the required project. Find the corresponding route business-process-administration-portal and click the link in the Location column. To authorize with Control Plane: Enter the registry administration panel in Control Plane, using the login and password that you have. Navigate to Registries section and select the corresponding registry. At the bottom of the page, click the admin-portal link. After authorization in the web-interface of Camunda Cockpit service, you’ll see Camunda Welcome, the main page with a dashboard that contains three sections: Cockpit, Tasklist та Admin. Navigate to Cockpit section. You will see a board that contains charts with the general information on business processes and their current status. The Right Now section shows business processes being executed at the moment: Running Process Instances — the number of business processes started by one or several users and still running, is shown in the center of the left circle. Open Incidents — the number of incidents that occurred during business process execution is shown in the center of the middle circle. Open Human Tasks — the number of open user tasks waiting to be resolved are shown in the center of the right circle. These tasks were modelled in Camunda Modeler and published by the business process execution service. They are available to users in citizen and officer portals (citizen-portal and officer-portal). The Deployed section shows business processes that are deployed at the moment: Process Definitions field — shows the general amount of deployed business processes in Camunda. Поле Deployments — shows the number of deployments and version updates of the regulations. Click the Running Process Instances chart to navigate to Processes page, where all the currently deployed business processes are listed. Columns description State Incidents Running Instances Name Tenant ID Business process execution current status Number of incidents with errors Number of times the business process has been started Name of the business process and link to it Tenant ID Follow the business process link in the Name column to open a table with all the instances of this business process. You can find detailed information on this business process in the field to the left. Definition Version line shows business process version. If there are several versions, you’ll be able to switch between them using a dropdown menu to view Process Instances for every version of the business process and monitor changes. In case there was an error in business process execution, the incident will be shown in the general business process list, marked with a \"cross\" — ❌. If the error is caused by business process configuration, or failed script, then restarting the process won’t help, and changes must be made. If the error is caused by failures in other systems, or connectivity problems, restart the business process. To resolve the error by restarting the business process, take the following steps: The process will restart from the moment of failure, plus the wait state time. Follow the business process link in the Name column. Navigate to Incidents section. Click the notification in the Message field to view error contents. It will be shown in a new window. Click ↻ pictogram (Increment Number of Retriers of Failed Jobs) in the top right of the screen, or to the right of the process instance to restart the process. After being restarted, it takes some time for the business process to show on the main dashboard. You can suspend an instance by clicking Suspend Process Instance icon, causing the instance to pause. Suspended instances can’t be completed by users or system. To confirm instance suspension, click Suspend in the prompt window. The entire business process can be suspended the same way, by clicking Suspend Process Definition. Users cannot complete suspended business processes, any of their elements, or start additional elements within them. A suspended process can be reactivated later. You need at least one running process instance to suspend a process instance. You can activate a process instance by clicking Activate Process Instance. You can activate a business process by clicking Activate Process Definition. To delete a process instance, click x (cross) in the top right corner and confirm by clicking Delete Process Instance in the prompt window. All the variables of a business process are listed in the Variables tab. You can find the tab if you open a business process via its link. You can edit the variables listed in the Value column by clicking the corresponding parameter, or clicking the editing icon in the Actions column. For fast business process search, you can set additional filters. The Decisions tab shows a table of reference rules for each business process. The Human Tasks tab shows the number of tasks in progress, which are assigned to corresponding users. Click Deployments icon to open a tab with the following fields: the Deployment Time column shows date and time for every deployed file; the middle column lists all deployed files in the current deployment process; left-clicking a file name will open the business process scheme (model) on the right. Left-clicking the Download icon will download the business process, created in the modeller. Detailed information about the business process can be found in the Definitions field. To see the currently running instance, follow the business process link and check the Process Instances tab. The number of running instances is shown in the info panel (26 in example case).","title":"Administering business processes in Camunda Cockpit","component":"platform","version":"1.9.6","name":"registry-admin-bp-management-cockpit","url":"/platform/1.9.6/registry-develop/registry-admin/registry-admin-bp-management-cockpit.html","titles":[{"text":"1. Service access rights","hash":"_service_access_rights","id":1},{"text":"2. Authorization in the system","hash":"_authorization_in_the_system","id":2},{"text":"3. Main Page","hash":"_main_page","id":3},{"text":"4. Managing business processes in Camunda Cockpit","hash":"_managing_business_processes_in_camunda_cockpit","id":4},{"text":"4.1. Camunda Cockpit dashboard","hash":"_camunda_cockpit_dashboard","id":5},{"text":"4.2. Running business processes","hash":"_running_business_processes","id":6},{"text":"4.2.1. Viewing business process instance details","hash":"_viewing_business_process_instance_details","id":7},{"text":"4.2.2. Working with error incidents","hash":"_working_with_error_incidents","id":8},{"text":"4.2.3. Suspending business processes and their instances","hash":"_suspending_business_processes_and_their_instances","id":9},{"text":"4.2.4. Activating business processes and instances execution","hash":"_activating_business_processes_and_instances_execution","id":10},{"text":"4.2.5. Deleting business process instances","hash":"_deleting_business_process_instances","id":11},{"text":"4.2.6. Editing parameters","hash":"_editing_parameters","id":12},{"text":"4.2.7. Filtering search parameters","hash":"_filtering_search_parameters","id":13},{"text":"4.3. Reference rules (Decisions)","hash":"_reference_rules_decisions","id":14},{"text":"4.4. Assigned tasks (Human Tasks)","hash":"_assigned_tasks_human_tasks","id":15},{"text":"4.5. Viewing deployed business processes (Deployments)","hash":"_viewing_deployed_business_processes_deployments","id":16}]},"61":{"id":61,"text":"On this page: 1. General description 2. Configuring registry regulations export settings 2.1. Generating reports in PDF format 2.2. Generating reports in DOCX format 2.3. Generating reports in CSV format You can create and upload excerpts (reports) in .pdf, .docx, .csv formats, as well as fill in the files with the corresponding business data of the registry only after configuring the registry regulations. The registry administrator should add the pre-generated report template and its attributes to the respective directory of the registry regulations, for example: for .pdf — excerpts/my-report-excerpt-pdf/index.html.ftl; for .docx — excerpts-docx/my-report-excerpt-docx.docx; for .csv — excerpts-csv/my-report-excerpt-csv.csv. where: excerpts, excerpts-docx, excerpts-csv — mandatory directory names for excerpts (reports) in the respective format; index.html.ftl, my-report-excerpt-docx.docx, my-report-excerpt-csv.csv — examples of report names in the respective format. The name of each directory and the file must be unique. The requirement also applies to different formats. Based on these templates, the report files will be generated in the respective format in the registry user portals. To add a template for generating excerpts (reports) in .pdf format, perform the following actions in the regulations of the corresponding registry: You can find the detailed information on working with registry regulations on the following page: Deploying regulations in Gerrit. Access the local Gerrit repository of the registry. Place the report template file in the directory with the template resources. This directory should have a unique name for the specified template, such as excerpts/my-report-excerpt-pdf/index.html.ftl. The excerpt (report) template should be created in a special .html.ftl format. You have to create such a template in HTML markup using the Apache FreeMarker template engine, which is used to interpret the syntax that configures variable substitution in PDF templates (.html.ftl) or for .docx format. Find the detailed information about Apache FreeMarker at the following link: https://freemarker.apache.org/ The template file name should always be specified as index.html.ftl, and the directory should be named after the report, for example, my-report-excerpt-pdf. Save the styles that will be applied to the report template. To do this, create a style.css file and place it in the excerpts/my-report-excerpt-pdf/css directory. Example: . It is also possible to use multiple .css styling files. To do this, you need to specify the link to each file, for example: ..... * { font-family: Roboto; } UTF-8 encoding is mandatory. By default, the font * { font-family: Roboto; } is used. It is automatically added to the styles. The use of other fonts is not allowed, as it may lead to conflicting errors in operation. You can set the horizontal orientation of the page report by configuring the style.css file, for example: @page { size: 15in 8.5in; margin-bottom: 0.75in; margin-left: 0.9in; margin-right: 0.9in; margin-top: 0.75in; } The \"size\" parameter specifies the width (in this example, 15in) and height (in this example, 8.5in) of the file in inches (inches). Margin parameters can also be adjusted. Save the image in .png format, which will be used for the report file. Place the image in the excerpts/my-report-excerpt-pdf/images directory. Example: . Save the changes to the remote Gerrit repository. After deploying the register’s regulations and configuring the business process, users will be able to initiate a business process to generate and download the report in .pdf format (for more information, see Forming document excerpts in Citizen portal). To add a template for generating excerpts (reports) in .docx format, the following settings need to be applied to the regulations of the respective register: You can find the detailed information on working with registry regulations on the following page: Deploying regulations in Gerrit. Access the local Gerrit repository of the register. Place the report template file in the directory with the template resources. This directory should have a unique name for the specified template, such as excerpts-docx/my-report-excerpt-docx.docx. Save the changes to the remote Gerrit repository. After deploying the registry regulations and configuring the business process, users will be able to initiate a business process to generate and download the report in .docx format (for more information, see Generating draft orders in DOCX format) At the following link you can learn more about formatting the content of the excerpt (report) in .docx format. For an example of modeling a business process for generating excerpts (reports) in .csv and .docx formats, see Modeling business processes for generating extracts in csv and docx format. To add a template for generating excerpts (reports) in .csv format, perform the following actions in the regulations of the corresponding registry: You can find the detailed information on working with registry regulations on the following page: Deploying regulations in Gerrit . Access the local Gerrit repository of the register. Place the report template file in the directory with the template resources. This directory should have a unique name for the specified template, such as excerpts-csv/my-report-excerpt-csv.csv. To change the column header names, create a .json or .csv file with the replacement settings in the excerpts-csv directory of the corresponding excerpt (report), for example: { \"lastName\": \"Прізвище\", \"firstName\": \"Ім'я\", \"secondName\": \"По батькові\", \"birthday\": \"Дата народження\", \"residenceAddress\": \"Адреса\", \"phoneNumber\": \"Телефон\", \"gender\": \"Стать\", } The first column specifies the names of the parameters to be used in the excerpt (report), and the second column specifies the names to replace the column headers with. Save the changes to the remote Gerrit repository. After deploying the register’s regulations and configuring the business process, users will have the ability to initiate a business process to generate and download the excerpt (report) in .csv format (for more information, see Generating reports in CSV format). For an example of modeling a business process for generating excerpts (reports) in .csv and .docx formats, see Modeling business processes for generating extracts in csv and docx format.","title":"Generating regulations excerpts (reports) in PDF, DOCX, CSV format","component":"platform","version":"1.9.6","name":"registry-admin-reports-pdf-docx-csv","url":"/platform/1.9.6/registry-develop/registry-admin/registry-admin-reports-pdf-docx-csv.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Configuring registry regulations export settings","hash":"_configuring_registry_regulations_export_settings","id":2},{"text":"2.1. Generating reports in PDF format","hash":"_generating_reports_in_pdf_format","id":3},{"text":"2.2. Generating reports in DOCX format","hash":"_generating_reports_in_docx_format","id":4},{"text":"2.3. Generating reports in CSV format","hash":"_generating_reports_in_csv_format","id":5}]},"62":{"id":62,"text":"The registry-regulations/settings.yaml file is part of the registry regulations and is used to configure the technical parameters of the registry. Figure 1. Registry regulations structure Example configuration of registry-regulations/settings.yaml: settings: general: package: ua.gov.mdtu.ddm.dataplatform.template register: laboratory version: 1.0.1 kafka: retention-policy-in-days: read: 1 write: 1065 Table 1. Parameters description Parameter name Description Comment settings.general.package The package in which the code will be generated. settings.general.register The name of the database that will be created. settings.general.version The version of the registry. No version check is performed check during registry deployment. The registry administrator can use the atregulatiostribute settings.general.version at their own discretion. Old versions of the API data are not preserved during the deployment of the MASTER-Build-registry-regulations publication pipeline. kafka.retention-policy-in-days.read The number of days for which messages will be retained for reading in Kafka. By default — 3 years kafka.retention-policy-in-days.write The number of days for which messages will be retained for writing in Kafka. By default — 3 years.","title":"Managing registry settings (settings.yaml)","component":"platform","version":"1.9.6","name":"regulation-settings","url":"/platform/1.9.6/registry-develop/registry-admin/regulation-settings.html","titles":[]},"63":{"id":63,"text":"If you need to connect remotely to a service from a local machine, follow these steps to connect. Authenticate in the OpenShift console. Go to Workloads > Deployments . Select the project from the Project dropdown where the remote connection to the service will be used. Enter the service name in the search bar and choose the necessary one from the filtered results, for example, user-task-management. Go to the YAML tab. In the editor window, add the following value for the JAVA_OPTS property: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 Restart the pod. Download the OpenShift command line interface. 4.1. Click the question mark icon in the upper right corner of the page. Select the Command line tools menu. 4.3. Choose the utility to download from the list according to your operating system. 4.4. Open the downloaded file. + Launch the command prompt (cmd) from the location where the oc.exe file is located. Obtain the token for authorization in OpenShift. 6.1. Click on your profile name in the upper right corner of the page and select the Copy login command menu item. 6.2. Re-authenticate in the system. 6.3. Click Display Token. 6.4. Copy the value from the Log in with this token field. Execute the copied command in the command prompt (cmd), for example: oc login --token=sha256~1aWEXnvr4IBVNsrdepqDl5Q10NkhokW7nt-s_-trO8k --server=https://api.cicd2.mdtu-ddm.projects.epam.com:6443 7.1. Next, select the appropriate project by executing the command: oc project some_name where some_name is the name of your project. 7.2. Obtain the pod identifier of the service by executing the command: oc get pods 7.3. Execute the port forwarding command: oc port-forward user-task-management-c8b9695d6-rg92b 5005:5005 Add a new configuration in IntelliJ IDEA. 8.1. Go to the Run Edit Configuration…​. 8.2. Click Add New Configuration and select the Remote JVM Debug configuration type. 8.3. Specify the name and verify the settings, then click OK. Start the service. Upon the next request, the service can now be intercepted on the local machine.","title":"Connecting to services remotely","component":"platform","version":"1.9.6","name":"remote_connection","url":"/platform/1.9.6/registry-develop/registry-admin/remote_connection.html","titles":[]},"64":{"id":64,"text":"Registry administrator: duties and responsibilities","title":"Registry administrators crash course","component":"platform","version":"1.9.6","name":"reg-admin-study-overview","url":"/platform/1.9.6/registry-develop/registry-admin-study/reg-admin-study-overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"65":{"id":65,"text":"On this page: 1. Job description and requirements for the registry administrator position 2. Related pages The responsibilities and requirements for the registry administrator include servicing, supporting, and monitoring the registry and its components. The responsibilities encompass the following activities: Understanding the specifics of the registry’s regulations: The administrator must have a clear understanding of the regulations governing the specific registry in question. Managing registry: Utilizing the centralized Control Plane administrative interface to manage registries. Appointing registry administrators: Creating registry administrators with appropriate access rights. Managing users and accesses: Utilizing Keycloak for managing user identification and access to the registry. Setting up and configuring authentication processes for end users. Configuring backup and recovery: Configuring backup and emergency recovery of registry resources and databases through automated processes in Jenkins. Updating registry components: Performing updates to registry components. Managing registry component resources: Configuring and managing resource allocation for registry services, such as CPU, RAM, and environment variables. Configuring integration interactions: Configuring access to registries for other registries on the platform and external systems. Configuring interactions with registries and external systems through REST API. Configuring interactions with registries through the Trembita middleware via the SOAP protocol. Working with digital signature keys: Configuring and updating keys and digital signature certificates for the registry (digital signature/Qualified Electronic Signature). Configuring domain name (DNS): Configuring domain names for registry portals. Configuring access restrictions to registry components: Restricting access to registry components using CIDR. Confirming change requests: Approving or rejecting change requests to the registry. Working with the OpenShift console: Utilizing the centralized OpenShift interface to monitor registry resources. Monitoring and logging: Monitoring and analyzing system metrics using Grafana and Prometheus. Monitoring logs using Kibana or the OpenShift console. Understanding the principles of service monitoring and tracing, using Kiali and Jaeger. Administering business processes: Utilizing Camunda BPM to monitor and debug instances of business processes described in BPMN notation. Automating processes: Experience working with Jenkins for organizing continuous integration and deployment (CI/CD) processes. Skills in configuring and using Git and Gerrit VCS for integration, versioning, and code review. Proficiency with Nexus for artifact storage and management. Managing internal resources configuration and access limits: Configuring the Kong API gateway, including setting limits on the number of client requests (Rate Limiting). Managing secrets: Using Hashicorp Vault to manage secrets. Monitoring registry API resources: Understanding REST API concepts. Knowledge of OpenAPI Specification (OAS). Using Swagger to view generated registry API endpoints. Working with registry data: Knowledge of PostgreSQL. Working with operational and analytical registry data using pgAdmin and similar tools. Configuring mail server: Configuring connection to the platform’s mail server to facilitate message exchange within the registry. For detailed information on the technologies that the administrator should utilize when working with the registry, please refer to the Platform technology stack page.","title":"Registry administrator: duties and responsibilities","component":"platform","version":"1.9.6","name":"registry-admin-profile","url":"/platform/1.9.6/registry-develop/registry-admin-study/registry-admin-profile.html","titles":[{"text":"1. Job description and requirements for the registry administrator position","hash":"_job_description_and_requirements_for_the_registry_administrator_position","id":1},{"text":"2. Related pages","hash":"_related_pages","id":2}]},"66":{"id":66,"text":"On this page: 1. Overview 1.1. What are registry regulations? 1.2. How are the regulations deployed? 2. Getting started 2.1. Local environment setup 2.2. Development tools: work environment 3. Regulations modeling roadmap 4. Training tasks 4.1. Create the registry data model 4.2. Model a simple business process without integration 4.3. Model a business process with integration 4.4. Model a business process with a start form and dependent components on forms 4.5. Model a business process with multiple participants 4.6. Prepare analytical reports 4.7. Model a business process with a call to SEG 5. Tests This section contains educational and testing materials for developing practical skills when working with registry regulations. The course consists of a set of training tasks for the regulations administrators to complete one by one, from simple to complex. Practical assignments are developed to reinforce the learning materials. Registry regulations are a set of entities collected in a separate Git directory according to a particular structure. Each entity is a folder with a group of files (such as templates, schemas, and configuration files) that perform specific tasks according to the rules within the business processes framework. For details, see Registry regulations structure. Registry regulations deployment is automated by the CI/CD tools. The MASTER-Build-registry-regulations Jenkins pipeline and related pipelines are responsible for deploying the regulations. For details, see platform-develop:registry-regulations-deployment.adoc. Code build applies only to the files that were in the latest commit. For example: In the first commit (git commit), you modified two files (form.json for the UI form and process.bpmn for the process) and saved the changes to the master version of the Gerrit repository (git push + git merge). The regulations publication pipeline failed the validation step. In the second commit, you make changes to the form.json file, fixing the error. This time the publication pipeline goes through, but your business process is not deployed and does not appear in the user portal, even though it is present in the Gerrit repository. To solve this issue, ensure that the next commit after a failed build contains all the files you previously tried to deploy. Going back to our example, your second commit must include both the UI form file that you patched and the business process schema file that failed to deploy previously. To ensure a file that had no fixable errors gets into the new commit, make minor changes, such as an indent or a space at the end. We recommend configuring your local environment to make working with the registry and its entities more convenient. Install the following tools on your machine: Tool Description Git and Git Bash console The version control system (VCS) and console enable you to work with Git repositories (Gerrit, GitHub, GitLab) using Git commands. Integrated development environment (IDE): VSCode IntelliJ IDEA A development environment provides a convenient interface for working with the regulations in the local Gerrit repository. Choose the one you prefer. Camunda Modeler, plug-ins, and standard business process extensions The Camunda Modeler desktop application enables you to model business processes in BPMN 2.0 notation, import and save process diagrams in .bpmn format, use custom connectors to extend business logic, and more. Text editor: Notepad++ Sublime Text A good text editor is invaluable when working with source code files used by various extensions. Choose the one you prefer. Postman This API development and testing tool provides a convenient environment for creating, sending, testing, and documenting HTTP requests. With Postman, you can easily interact with different APIs, including REST, SOAP, GraphQL, and others. Postman has many valuable features that help developers work with the API more easily, including: Interaction with the Keycloak API (for user management, authentication verification and debugging). Interaction with business process APIs and the Data Factory to emulate calling the registry by external systems via REST or SOAP API. Interaction with the Redash API to create visualizations and dashboards when working with analytical reporting in the registry. DBeaver A powerful tool that provides a convenient interface for managing various types of databases. It is free, open source, and available for use on a variety of operating systems, including Windows, macOS, and Linux. DBeaver supports different types of databases, including well-known systems such as MySQL, PostgreSQL, Oracle, and others. OpenShift CLI OpenShift CLI is a tool that enables you to manage various aspects of an OpenShift cluster using a command-line interface. The Control Plane admin console provides registry administrators with a convenient way to access all the essential web services from one place. When you open any registry in the Registries section, note the Quick links tab. This is where you will find links to the web interfaces of the various services with brief descriptions. To learn more about each service, its purpose, and link template, see Quick links to registry services. The regulations modeling roadmap shows high-level stages of working with the main elements of the regulations and provides a general context for the registry development and maintenance teams. The diagram shows only the main elements of the regulations. The Platform provides flexible customization options for a wide range of features related to working with the regulations — for example, modeling excerpts in different formats, configuring notifications through various communication channels, managing registry settings, and so on. This section goes over the training stages and introduces the practical tasks that the regulations developer is required to perform. As part of this task, the modeler needs to: Create a logical data model and an ERD diagram. Create a physical data model based on the logical model: Create a physical model development plan: Define primary keys for each of the entities. Define secondary keys if the entity has them. Identify mandatory fields. Identify fields or a combination of fields that have unique values. Define the names of tables and fields in Latin characters. Create tables and relationships between them. Create search conditions (view tables). Perform initial data load for reference tables. Apply the developed model via the regulations. For details, see Task 1. Database registry structure modeling. As part of this task, the modeler needs to: Model a simple business process without integration with the data factory or other registries. Create data entry UI forms for the business process. Define the roles and grant access to the business process. Apply changes to the regulations. For details, see Task No. 2. Modeling a business process without integration. As part of this task, the modeler needs to: Model a business process integrated with the data factory. Model business process branches. Model unified steps in the business processes using Call Activity. Model the UI forms for entering data into the business process and configure the Select components to retrieve data from the data factory. Define the roles and grant access to the business process. Apply changes to the regulations. For details, see Task 3. Business process modeling with integration. As part of this task, the modeler needs to: Model a business process that has a start form. Model data entry UI forms with dependent components and an Edit Grid component. Define the roles and grant access to the business process. Apply changes to the regulations. For details, see Task No. 4. Modeling a business process with a start form and dependent components on the forms. As part of this task, the modeler needs to: Model a business process that has multiple participants. Model data entry UI forms and configure them using formVariables. Define the roles and grant access to the business process. Apply changes to the regulations. For details, see study-project/study-tasks/task-5-bp-modeling-multiple-participants.adoc. As part of this task, the modeler needs to: Model an analytics view. Provide access to the analytics view. Create three queries in Redash. Create a dashboard in Redash. Download the archive with the dashboard and unpack it in the regulations. Apply the changes to the remote Gerrit repository. Verify the report in the officer’s portal. For details, see Task No. 6. Developing analytical reports. As part of this task, the modeler needs to: Model one business process. Model 3 data entry UI forms for the business process. Grant access to the business process for corresponding roles. Save the created artifacts to the local Git repository. Apply local changes to the remote Gerrit repository. Check the functionality of the business process. For details, see study-project/study-tasks/task-7-bp-modeling-trembita-invocation.adoc. This section covers the self-assessment tests you can take after completing the learning part of the training. Tests go from simple to complex. Test No. 1: Gain in-depth practical knowledge of creating business processes on the Platform. Test No. 2: Deepen your practical skills in developing business processes. Test No. 3: Deepen your business process creation skills even further by mastering nested entities.","title":"Registry regulations development training course","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/study-project/index.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"1.1. What are registry regulations?","hash":"_what_are_registry_regulations","id":2},{"text":"1.2. How are the regulations deployed?","hash":"_how_are_the_regulations_deployed","id":3},{"text":"2. Getting started","hash":"preconditions-setup","id":4},{"text":"2.1. Local environment setup","hash":"_local_environment_setup","id":5},{"text":"2.2. Development tools: work environment","hash":"_development_tools_work_environment","id":6},{"text":"3. Regulations modeling roadmap","hash":"_regulations_modeling_roadmap","id":7},{"text":"4. Training tasks","hash":"_training_tasks","id":8},{"text":"4.1. Create the registry data model","hash":"_create_the_registry_data_model","id":9},{"text":"4.2. Model a simple business process without integration","hash":"_model_a_simple_business_process_without_integration","id":10},{"text":"4.3. Model a business process with integration","hash":"_model_a_business_process_with_integration","id":11},{"text":"4.4. Model a business process with a start form and dependent components on forms","hash":"_model_a_business_process_with_a_start_form_and_dependent_components_on_forms","id":12},{"text":"4.5. Model a business process with multiple participants","hash":"_model_a_business_process_with_multiple_participants","id":13},{"text":"4.6. Prepare analytical reports","hash":"_prepare_analytical_reports","id":14},{"text":"4.7. Model a business process with a call to SEG","hash":"_model_a_business_process_with_a_call_to_seg","id":15},{"text":"5. Tests","hash":"_tests","id":16}]},"67":{"id":67,"text":"On this page: 1. Introduction 1.1. Scope of the Security Testing 1.2. Objectives 1.3. References 2. Security Testing Approach 2.1. Security Testing Methodologies 2.2. Tools and Technologies Used 2.3. Description of the Test Environment 3. Security Test Scenarios 4. Test Data 5. Test Execution Phases 5.1. Architecture review 5.2. Threat modeling 5.3. Automated scanning 5.4. Penetration testing 6. Vulnerability management 7. Reporting The page is under development. The purpose of the Security Testing approach is to outline the strategy, objectives, and scope of security testing for the Registries Platform. It provides throught description on how security vulnerabilities are identified and addressed to ensure the protection of sensitive data and maintain the integrity of the application. The security testing focused on identifying vulnerabilities within the Registries Platform web application and related infrastructure. It covers areas such as authentication, authorization, input validation, session management, data encryption, and secure configuration. The main objectives of security testing are: Identify security vulnerabilities and weaknesses in the application. Assess the effectiveness of existing security controls. Address identified vulnerabilities and improving the overall security posture. The Registries Platform is developed following the next security standards: The software security posture management acording to OWASP Software Assurance Maturity Model (SAMM). The OWASP Application Security Verification Standard (ASVS) Project as a basis for testing web application technical security controls and source of requirements for secure development. Center for Internet Security Software Supply Chain Security Guide (CIS SSCS) as a basis for supply chain security Comprehensive information protection system (CIS) - legislative certification for information security controls, a set of technical measures that ensure information protection in Information and Communication Technology (ICT) system. The security testing follow a combination of manual and automated testing approaches. It include vulnerability scanning, penetration testing, code reviews, gitops security, cloud security posture management and security best practices analysis. Security testing methodologies are systematic approaches used to identify and assess security vulnerabilities and weaknesses in software applications, networks, or systems. They help ensure that security testing is conducted effectively and comprehensively. Here are the list of used security testing methodologies: Penetration Testing (Pen Test): Penetration Testing, often referred to as \"pen testing\" or \"ethical hacking,\" is a method of assessing the security of a computer system, network, application, or organization by simulating real-world cyberattacks. The primary objective of penetration testing is to identify vulnerabilities and weaknesses that malicious attackers could exploit to compromise the system or steal sensitive information. Threat Modeling: Threat modeling involves identifying potential threats and risks to a system or application. It helps in understanding possible attack vectors and aids in making informed decisions about security measures. We are trying to adopt continuous Threat Modeling which is an iterative and ongoing process of identifying and analyzing potential security threats and risks throughout the entire software development lifecycle. Secure Software Development Lifecycle (SSDLC): It is a structured and systematic approach to software development that integrates security practices at every stage of the development process. Secure Architecture Assessment: The Architecture Assessment approach ensures that the application and infrastructure architecture adequately meets all relevant security and compliance requirements, and sufficiently mitigates identified security threats. The following types, tools and technologies are used during security testing: Security testing type Toolset Static Application Security Testing (SAST) Semgrep Software Composition Analysis (SCA) CycloneDx SBOM OWASP Dependency Track Secrets scanning Detect Secrets Iaac security KICS Container orchestration security Kube bench Container security Trivy Dynamic Application Security Testing (DAST) OWASP ZAP Security Cloud Posture Management Qualys CloudView Security testing continiously conducted on separate prod like environment which is owned and managed by Security Team. Here are a set of specific test cases or situations designed to evaluate the security aspects of the Regitry Platform: Information Leak Buffer Overflow Cloud Metadata Attack Code Injection Command Injection Cross Site Scripting (Reflected) Cross Site Scripting (Persistent) CRLF Injection Directory Browsing External Redirect Format String Error GET for POST Heartbleed OpenSSL Vulnerability Hidden File Finder Log4Shell (CVE-2021-44228 and CVE-2021-45046) Padding Oracle Parameter Tampering Path Traversal Remote Code Execution - CVE-2012-1823 Remote File Include Server Side Include Server Side Template Injection Source Code Disclosure Spring4Shell (CVE-2022-22965) SQL Injection User Agent Fuzzing XPath Injection XSLT Injection XXE ICMP checks Port checks Check SSL/TLS Content Security Policy (CSP) HSTS Re-registration Overwrite the existing user Uniqueness of the username Weak Password Policy Email Confirmation Disposable Email Addresses Fuzz folder Long password (200+) Authentication Testing JSON attack Resistance to password guessing XSS to name or email Failure to confirm password when changing email, password or 2FA User account blocking mechanism Rate limit Check redirect on registration page after login Broken Access Control Test tokens for predictability Disclosure of Tokens Safe termination of the session Session fixation CSRF Cookie scope Decode Cookie (Base64, hex, URL, etc.) Expiration of cookies Reuse of cookie after closing the session Log out and press the \"return\" function in the browser (Alt + left arrow) Two instances are open, change or reset the 1st instance, update the 2nd instance IDOR user profile CSRF user profile Email validate IDOR parameters Check the policies for different roles Fuzzing all request parameters Reflected XSS HTTP header injection in GET & POST (X Forwarded Host) RCE via Referer Header SQL injection via User-Agent Header Arbitrary redirection Stored attacks Script injection XPath injection XXE in any request, change content-type to text/xl Stored XSS HTTP Request Smuggling Open redirect SSRF in previously discovered open ports Data that are inherently open was directly used during the testing process. Such data is publicly accessible and available on the respective resource https://data.gov.ua/dataset. Real and pure data are not used during testing process. During architecture review of a new feature we examine correct provision of general security mechanisms such as authentication, authorization, user and rights management, secure communication, data protection, key management and log management. Verifying that the solution architecture addresses all identified security and compliance requirements. All the application interfaces analyzed against the list of security and compliance requirements. Additionally data flow is amenable to analysis to ensure that the requirements are adequately addressed over different components. Mentioned types of analysis are performed on both internal interfaces, e.g. between tiers, as well as external ones, e.g. those comprising the attack surface. We are striving to adopt continuous threat modeling approach and build iterative and ongoing process of identifying and assessing potential security threats and vulnerabilities throughout the entire software development lifecycle. Currently the threat model is made for the entire application andalmost all the changes incrementally modeled in order to discover possible new threats. Development of the Registy Platform performed following Secure Software Development Life Cycle (SSDLC) approach. Automated security scanning plays a crucial role in SSDLC by helping to identify and mitigate security vulnerabilities and weaknesses in the software early in the development process. It is an essential component of the SSDLC, providing continuous security testing and feedback throughout the development lifecycle. There are plenty of security control have been integrated in CI/CD pipeles. All of them were integrated with Vulnerability Management system in order to build security quality gates which can break the pipeline according to set criteria for particular service or condition. There is also an exception mechanism in place to bypass this behavior if the risk of a particular vulnerability has been accepted or mitigated. Such cases are explicitly approved first and all occurrence are loged together with a rationale. All the services which are developed in-hause automatically go thorugh the list of security control every new change introduced. Static application security testing Software composition analysis Detection of sensative information disclosure Security of helm charts used for service deployment Overal code quality checks Container security Once all the quality gates are passed successfully the artifact is deployed on separate security environment where dymic testing happening. Dynamic Application Security Testing (DAST) is a type of security testing that involves assessing the security of an application while it is running or in a dynamic state. The primary goal of DAST is to identify security vulnerabilities and weaknesses that may not be apparent in the application’s source code but could be exploited when the application is running. There are six phases of Dynamic Application Security Testing of every change: Environment configuration Automated test data ingestion by application and data flow recording by security framework in order to automatically reveal data flow and structure. Authentication teting Vulnerability scanning of web application Vulnerability scanning of Rest API using updated contracts Results import into vulnerability management system for further analysis by security engineer In result we utilize thorought approach for proactive finding and fixing vulnerabilities in order to enhance the security posture of the Registry Platform and protect it against potential cyber threats. Penetration testing performed anually by 3r party vendors on dedicated prod like environment. The report is triaged, sorted and consumed by vulnerability management system in order to mititgate any found issues. Vulnerability Management is a proactive approach to gather, assess, prioritize, and remediate security vulnerabilities in an organization’s information systems, applications, and network infrastructure. The goal of vulnerability management is to reduce the organization’s exposure to potential cyber threats and attacks by addressing weaknesses before they can be exploited by malicious actors. It is a continuous and cyclical process. We use OWASP DefectDojo to aggregate vulnerabilities all over the platform development process. Every scan result from all development pipelines consumed by Defectdojo for deduplication, grouping, false-positive analysis and to keep up-to-date status of discovered vulnerabilities. Vulnerability management system is deeply integreted with ticketing system which let us lead the defect throughout the entire project task managemt process and transparently accompany it through mitigation process. Additionally it contains important and most complete history about any vulnerability discovered on the project. Using this information we can easily track down any decision made like risk acceptance, etc. Mentioned approach also quite useful for high-level vulnerabilities analysis to spot patterns, quick wins and improve security posture in general. Eventually vulnerability management system is a source of truth for our security engineers. We use vulnerability management system reporting capabilities to generate reports of different immersion levels to get insight about overal picture of the Registry Platform development and to adjust security program.","title":"Security Testing","component":"platform","version":"1.9.6","name":"security-testing","url":"/platform/1.9.6/testing/security-testing/security-testing.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"1.1. Scope of the Security Testing","hash":"_scope_of_the_security_testing","id":2},{"text":"1.2. Objectives","hash":"_objectives","id":3},{"text":"1.3. References","hash":"_references","id":4},{"text":"2. Security Testing Approach","hash":"_security_testing_approach","id":5},{"text":"2.1. Security Testing Methodologies","hash":"_security_testing_methodologies","id":6},{"text":"2.2. Tools and Technologies Used","hash":"_tools_and_technologies_used","id":7},{"text":"2.3. Description of the Test Environment","hash":"_description_of_the_test_environment","id":8},{"text":"3. Security Test Scenarios","hash":"_security_test_scenarios","id":9},{"text":"4. Test Data","hash":"_test_data","id":10},{"text":"5. Test Execution Phases","hash":"_test_execution_phases","id":11},{"text":"5.1. Architecture review","hash":"_architecture_review","id":12},{"text":"5.2. Threat modeling","hash":"_threat_modeling","id":13},{"text":"5.3. Automated scanning","hash":"_automated_scanning","id":14},{"text":"5.4. Penetration testing","hash":"_penetration_testing","id":15},{"text":"6. Vulnerability management","hash":"_vulnerability_management","id":16},{"text":"7. Reporting","hash":"_reporting","id":17}]},"68":{"id":68,"text":"On this page: 1. Requesting excerpt 2. Receiving and viewing the excerpt The functionality of the Citizen portal includes the possibility to request and receive excerpt based on registry data. The process consists of several steps: pre-ordering, downloading, and viewing. Requesting excerpt in the Citizen portal involves the following steps: Log in to the Citizen portal by clicking the Log in to the portal button. Authenticate yourself with the qualified electronic signature. For more details about user authentication in the registry, follow the link. First, you need to change the user type by clicking For business. Ordering excerpts is currently available only for legal entities. Go to the Available services section and click on the Get excerpt menu. Select the laboratory from the dropdown list for which you need to generate the excerpt. You can choose the laboratory from the list or search for it by its name. Click the Next button. Sign the data with the qualified electronic signature. After applying the qualified electronic signature, click the Sign button. Upon successful completion of all the above steps, a request will be generated to receive the excerpt with the status Processing accepted. To receive the excerpt, go to the My services → Received services section. Click Download excerpt to start downloading the file. After downloading, the excerpt file can be opened in the browser or using third-party applications. The received excerpt is available for further download and processing, for instance, for use in the document flow system.","title":"Forming document excerpts in Citizen portal","component":"platform","version":"1.9.6","name":"citizen-get-excerpts","url":"/platform/1.9.6/user/citizen/citizen-get-excerpts.html","titles":[{"text":"1. Requesting excerpt","hash":"_requesting_excerpt","id":1},{"text":"2. Receiving and viewing the excerpt","hash":"_receiving_and_viewing_the_excerpt","id":2}]},"69":{"id":69,"text":"On this page: 1. Authentication page 2. Portal interface 3. Available services 4. My services 4.1. Requested services 4.2. Received services 5. Profile To access the Citizen portal, it is essential to go through the authentication process using a key. For more details about the user authentication procedure, you can follow the link. Portal interface includes a navigation menu at the top of the page, displaying user profile information for the logged-in user. The structure of the Citizen portal consists of the following sections: Available services; My services. This page displays business processes that are accessible to the user. On this page, the user can see a general list of available services. The number of accessible business processes may vary for each user based on registry settings. From the defined list, the user can select the required service to initiate it. This page presents the business processes initiated by the user. The services are divided into two types: Requested services; Received services. Requested services show all ongoing business processes initiated by the citizen. The following information is provided for each service: Service: displays the name of the service Service identifier: unique key of the service Start date: date and time when the service was initiated Execution status: current status of service provision Received services display a list of completed business processes. The following information is provided for each service: Service: displays the name of the service Service identifier: unique key of the service Start date: date and time when the service was initiated End date: date and time when the service was completed Execution result: current status of service provision The Profile page displays data related to the qualified electronic signature (QES) used by the user to log in to the portal. Additionally, there is an option to configure an email address to receive notifications from the system regarding the status of service execution and other updates. For more information about the capabilities and functionality of the Citizen portal, you can refer to the following links: Notifying about successful task completion in User portals Contacting support in case of critical errors Pagination and sorting of services in Citizen portal Forming document excerpts in Citizen portal","title":"General overview of the Citizen portal","component":"platform","version":"1.9.6","name":"citizen-portal-overview","url":"/platform/1.9.6/user/citizen/citizen-portal-overview.html","titles":[{"text":"1. Authentication page","hash":"_authentication_page","id":1},{"text":"2. Portal interface","hash":"_portal_interface","id":2},{"text":"3. Available services","hash":"_available_services","id":3},{"text":"4. My services","hash":"_my_services","id":4},{"text":"4.1. Requested services","hash":"_requested_services","id":5},{"text":"4.2. Received services","hash":"_received_services","id":6},{"text":"5. Profile","hash":"_profile","id":7}]},"70":{"id":70,"text":"On this page: 1. Authentication page 2. Home page 3. Available services 4. My services 4.1. Services in progress 4.2. Provided services 5. My tasks 5.1. Tasks to perform 5.2. Completed tasks 6. Reports 7. Profile First and foremost, in order to access the Officer portal, it is necessary to authenticate in the system using a key. You can learn more about the user authentication process by following the link. The interface of the Officer portal’s home page includes the display of key navigation options for the officer. The structure of the portal consists of the following sections: Available services; My services; My tasks; Reports. This structure is presented in the central part of the page as a menu with buttons, showing the total number of various business processes and tasks in the respective section. Depending on the user’s role, granted access, and registry settings, the number of available business processes may vary for each user. The main sections are also duplicated at the top of the page, where additional user profile data is displayed for the logged-in user. This page displays the available business processes accessible to the user. On this page, the user can see a general list of available services. From the defined list, the user can select the desired service to initiate it. This page displays the business processes initiated by the user. On the services page, they are divided into two types: Services in progress; Provided services. Services in progress display all the unfinished business processes. The following information is presented for each service on the page: Service — displays the name of the service; Service ID — unique key of the service; Start date — date and time when the service was initiated; Execution status — current status of service provision. Provided services show a list of completed business processes. The following information is presented for each service on the page: Service — displays the name of the service; Service ID — unique key of the service; Start date — date and time when the service was initiated; Completion date — date and time when the service was completed; Execution result — current status of service provision. This page displays the business processes that require specific actions from the user. Tasks on the tasks page are divided into two types: Tasks to perform; Completed tasks. Tasks to perform display the business processes in which the user is involved. The list includes the user’s unfinished tasks. The following information is presented for each task on the page: Service — displays the name of the task to be performed; Service ID — unique key of the service; Task — description of the task related to a specific service; Created — date and time when the task was initiated; Action — displays a button to start performing the task. Completed tasks show a list of tasks previously completed by the user. The following information is presented for each task on the page: Service — displays the name of the task to be performed; Service ID — unique key of the service; Task — description of the task related to a specific service; Created — date and time when the task was initiated; Completion date — date and time when the task was completed. This page presents pre-configured general statistical data for the registry. Currently, the page redirects the user to the Redash analytical reporting service. The profile page displays the data of the qualified electronic signature with which the user logged into the Officer portal. You can find more information about the capabilities and functionality of the Officer portal through the following links: Notifying about successful task completion in User portals Contacting support in case of critical errors Pagination and sorting of services in the Officer portal Reports generation","title":"Officer portal general overview","component":"platform","version":"1.9.6","name":"officer-portal-overview","url":"/platform/1.9.6/user/officer/officer-portal-overview.html","titles":[{"text":"1. Authentication page","hash":"_authentication_page","id":1},{"text":"2. Home page","hash":"_home_page","id":2},{"text":"3. Available services","hash":"_available_services","id":3},{"text":"4. My services","hash":"_my_services","id":4},{"text":"4.1. Services in progress","hash":"_services_in_progress","id":5},{"text":"4.2. Provided services","hash":"_provided_services","id":6},{"text":"5. My tasks","hash":"_my_tasks","id":7},{"text":"5.1. Tasks to perform","hash":"_tasks_to_perform","id":8},{"text":"5.2. Completed tasks","hash":"_completed_tasks","id":9},{"text":"6. Reports","hash":"_reports","id":10},{"text":"7. Profile","hash":"_profile","id":11}]},"71":{"id":71,"text":"Pagination and sorting tasks in the Officer portal Pagination and sorting of services in the Officer portal Sorting of services by execution status in the Officer portal","title":"Sorting and pagination","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/user/officer/overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"72":{"id":72,"text":"On this page: 1. Lifecycle policies for files in a Ceph Object Storage S3 Ceph Object Storage policy allows you to control access to resources in an S3 Ceph Object Storage. It enables specifying permissions for each resource to allow or deny actions requested by users or roles. Additionally, you can use lifecycle policies to protect data confidentiality or cut costs by automatically deleting expired objects. The S3 lifecycle is configured via a JSON file that contains a set of rules with predefined actions that an S3 Ceph Object Storage should perform on objects during their lifecycle. The policy is defined in the following format: { \"Rules\": [ { \"Expiration\": { \"Days\": 30 }, \"ID\": \"lifecycle-expiration-rule\", \"Status\": \"Enabled\", \"NoncurrentVersionExpiration\": { \"NoncurrentDays\": 30 }, \"AbortIncompleteMultipartUpload\": { \"DaysAfterInitiation\": 30 } } ] } This policy states that files created 30 days ago are subject to expiration and automatic deletion. The Days field value cannot be less than 1. To learn more, refer to the AWS documentation: Lifecycle configuration elements. To create a lifecycle policy in S3 Ceph Object Storage, you need to upload it to the corresponding bucket using the AWS CLI: aws --profile --endpoint= s3api get-bucket-versioning --bucket To check whether the S3 Ceph Object Storage policy exists, use the following command: aws --profile --endpoint= s3api get-bucket-lifecycle-configuration --bucket","title":"S3 Ceph Object Storage policy","component":"platform","version":"1.9.6","name":"lifecycle-policy","url":"/platform/1.9.6/admin/file-system/s3/lifecycle-policy.html","titles":[{"text":"1. Lifecycle policies for files in a Ceph Object Storage","hash":"_lifecycle_policies_for_files_in_a_ceph_object_storage","id":1}]},"73":{"id":73,"text":"Content 1. Prerequisites 1.1. Elements required at the initial stage 1.2. Creating an AWS account 1.3. Setting up an AWS account 1.3.1. Configuring Route 53 1.3.2. Configuring an external domain 1.3.3. AWS account limits 1.3.4. Creating an IAM user 1.3.5. Required AWS permissions for the IAM user 1.4. Creating additional accounts 1.4.1. Creating a Docker Hub account 1.4.2. Creating a Red Hat account 2. Deploying additional resources to install an OKD cluster on AWS 2.1. Terraform code description 2.1.1. Initial Terraform code 2.1.2. Main Terraform code 2.2. Recommended Bastion settings 2.3. Recommended secondary virtual machine settings 2.4. Configuring AWS cross-account access 2.5. Configuring the additional virtual machine 2.5.1. Connecting to the additional virtual machine 2.5.2. Installing the required tools 2.5.3. Using the profile for AWS cross-account access 2.6. Starting the openshift-install container 3. Preparing to install the OKD cluster on AWS 4. Running the OKD4 installer and deploying an empty OKD4 cluster 5. Replacing self-signed certificates with trusted certificates 6. Preparing and launching the Installer to deploy and update the Platform on the OKD cluster 6.1. Deploying from scratch 6.1.1. Prerequisites 6.1.2. Configuring MinIO 6.1.3. Configuring Vault 6.1.4. Deploying the Platform from the Installer 6.1.5. Deployment status 6.1.6. Post-deployment required steps 6.2. Updating 6.2.1. Prerequisites 6.2.2. Configuring MinIO 6.2.3. Configuring Vault 6.2.4. Updating the Platform from the Installer 6.2.5. Update status 7. Common errors during Platform deployment 7.1. Bootstrap machine error when deploying the OKD cluster Problem description Solution 7.2. Vault token error when deploying the Platform Problem description Solution 7.3. MinIO SSL certificate error when deploying the Platform Problem description Solution 7.4. Error sending images to Nexus when deploying the Platform Problem description Solution This guide provides detailed instructions on deploying the platform in an Amazon Web Services (AWS) environment from scratch: from creating an AWS account to installing and configuring the Platform. Before installing and configuring the Platform, you must perform the following steps. Before you begin, make sure you have the resources that are required for further steps: Documentation: Release notes; Backward incompatible changes; Updating document with additional steps for the selected Platform release version. It is required only for the Platform update procedure. Digital signature certificates (digital-signature-ops certificates): Key-6.dat — your organization’s private key; allowed-key.yaml — a list of all issued keys. Initially includes only Key-6.dat. When the key is changed, information about the new key is added here without deleting the old one; CAs.json — a list of all Accredited Key Certification Centers from the ІІТ website; CACertificates.p7b - a public key from the ІІТ website. Configuration files for the Griada network cryptomodule: 3 files with appropriate values (see attached examples): sign.key.device-type — specify the device type for the key (file); sign.key.file.issuer — specify the Accredited Key Certification Center that issued the key (change the value inside the file to match your issuer); sign.key.file.password — specify the password for the file key (change the value inside the file to match your password). 4 files with empty values (create 4 empty files with the following names): sign.key.hardware.device — key device type (hardware); sign.key.hardware.password — hardware key password; sign.key.hardware.type — key type; osplm.ini — INI configuration. To learn more about loading and updating the keys and digital signature certificates, see registry-management/system-keys/control-plane-platform-keys.adoc. a Docker image of the openshift-install container (for details, see Starting the openshift-install container); a downloaded Installer — a script for Platform deployment (for details, see Preparing and launching the Installer to deploy and update the Platform on the OKD cluster). Before installing OpenShift Container Platform on AWS, you need to create an AWS account. To learn how to do this, refer to the AWS documentation: How do I create and activate a new AWS account? Before installing OpenShift Container Platform, you need to set up your AWS account. To install OpenShift Container Platform, you need to register a domain name. You can do this using the Amazon Route 53 service or any other domain name registrar. Also, the AWS account you use must have a dedicated public hosted zone in your Route 53 service. For details, refer to the Origin Kubernetes Distribution (OKD) documentation: Configuring Route 53. If you registered the domain name through an external registrar, not Route 53, you need to delegate the domain. To do this, perform these steps: Sign in to your AWS account and create a public hosted zone using the Route 53 service as described in Configuring Route 53. Use the same domain name as you registered externally. In the Route 53 console, go to the public hosted zone you created and check the NS type record (name servers process DNS requests for the domain name). The Value column contains a list of NS server names. Save them as they will be needed later. Go to the external domain name registrar where you created the domain name. Open the domain settings and find the settings related to NS servers. Provide the NS servers you copied from the public hosted zone in you AWS account. The OpenShift Container Platform cluster uses a number of AWS components, and the default service limits affect your ability to install a cluster. To see a list of AWS components whose limits may impact your ability to install and run an OpenShift Container Platform cluster, refer to the OKD documentation: AWS account limits. You must also increase the CPU limit for your Amazon on-demand virtual machines. For details, refer to the AWS documentation: How do I request an EC2 vCPU limit increase for my On-Demand Instance? Before installing OpenShift Container Platform, create an IAM user. For details, refer to the AWS documentation: Creating an IAM user in your AWS account. In addition, perform these important steps: Remove any Service control policies (SCPs) restrictions from your AWS account. When you create a cluster, an associated AWS OpenID Connect (OIDC) identity provider is also created. The OIDC provider configuration is based on the public key stored in the AWS region us-east-1. Customers using AWS SCP must allow the use of the region us-east-1 even if the cluster is deployed in a different region. If these policies are not configured correctly, permission errors may occur since the OKD installer verifies them. For details, refer to section 1.1. DEPLOYMENT PREREQUISITES of the following document: Red Hat OpenShift Service on AWS 4. Prepare your environment. Properly configure the permissions boundary for the IAM user you created. Here is an example of a permissions boundary policy. You can use it or completely remove any permissions boundary. { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"NotAction\": [ \"iam:*\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"iam:Get*\", \"iam:List*\", \"iam:Tag*\", \"iam:Untag*\", \"iam:GenerateServiceLastAccessedDetails\", \"iam:GenerateCredentialReport\", \"iam:SimulateCustomPolicy\", \"iam:SimulatePrincipalPolicy\", \"iam:UploadSSHPublicKey\", \"iam:UpdateServerCertificate\", \"iam:CreateInstanceProfile\", \"iam:CreatePolicy\", \"iam:DeletePolicy\", \"iam:CreatePolicyVersion\", \"iam:DeletePolicyVersion\", \"iam:SetDefaultPolicyVersion\", \"iam:CreateServiceLinkedRole\", \"iam:DeleteServiceLinkedRole\", \"iam:CreateInstanceProfile\", \"iam:AddRoleToInstanceProfile\", \"iam:DeleteInstanceProfile\", \"iam:RemoveRoleFromInstanceProfile\", \"iam:UpdateRole\", \"iam:UpdateRoleDescription\", \"iam:DeleteRole\", \"iam:PassRole\", \"iam:DetachRolePolicy\", \"iam:DeleteRolePolicy\", \"iam:UpdateAssumeRolePolicy\", \"iam:CreateGroup\", \"iam:UpdateGroup\", \"iam:AddUserToGroup\", \"iam:RemoveUserFromGroup\", \"iam:PutGroupPolicy\", \"iam:DetachGroupPolicy\", \"iam:DetachUserPolicy\", \"iam:DeleteGroupPolicy\", \"iam:DeleteGroup\", \"iam:DeleteUserPolicy\", \"iam:AttachUserPolicy\", \"iam:AttachGroupPolicy\", \"iam:PutUserPolicy\", \"iam:DeleteUser\", \"iam:CreateRole\", \"iam:AttachRolePolicy\", \"iam:PutRolePermissionsBoundary\", \"iam:PutRolePolicy\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"iam:CreateAccessKey\", \"iam:DeleteAccessKey\", \"iam:UpdateAccessKey\", \"iam:CreateLoginProfile\", \"iam:DeleteLoginProfile\", \"iam:UpdateLoginProfile\", \"iam:ChangePassword\", \"iam:CreateVirtualMFADevice\", \"iam:EnableMFADevice\", \"iam:ResyncMFADevice\", \"iam:DeleteVirtualMFADevice\", \"iam:DeactivateMFADevice\", \"iam:CreateServiceSpecificCredential\", \"iam:UpdateServiceSpecificCredential\", \"iam:ResetServiceSpecificCredential\", \"iam:DeleteServiceSpecificCredential\" ], \"Resource\": \"*\" } ] } To learn more about creating an IAM user, refer to the OKD documentation: Creating an IAM user. To deploy all components of an OpenShift Container Platform cluster, the IAM user requires certain permissions that must be attached to that user. To see an example of these permissions, refer to the OKD documentation: Required AWS permissions for the IAM user. Before installing OpenShift Container Platform on AWS, you need to create a Docker Hub and Red Hat account. This is necessary to form a docker pull secret that will be used later. Some services use images from Docker Hub repositories. To use them, you need an account. For details, refer to the Docker documentation: Docker ID accounts. Additionally, the limit on the number of images uploaded per day may prevent the services from starting. To avoid this, you’ll need to upgrade your subscription to the Pro level. This will change the limit from 200 image pulls per 6 hours to 5,000 image pulls per day. For details, refer to the Docker documentation: Upgrade your subscription. To download the images required to install OpenShift Container Platform, you need a Red Hat account. For details, refer to the Red Hat documentation: Red Hat Login ID and Account. This is necessary to download the generated pull secret later, as described in Preparing to install the OKD cluster on AWS. It will allow you to authenticate and download container images for OpenShift Container Platform components. To successfully install the cluster and Platform, you need AWS to run additional resources. The following figure shows them within the infrastructure. You can set them up yourself by following the instructions below or use the predefined Terraform code. Terraform code was implemented as an example of process automation. You can customize it according to your own parameters and use it for infrastructure deployment. The initial Terraform code creates resources used in further steps. This includes the following resources: S3 Bucket — file storage for *.tfstate files; DynamoDB Table — a table required to lock the Terraform state. Example 1. Initial code. Terraform templates description main.tf data \"aws_caller_identity\" \"current\" {} module \"s3_bucket\" { source = \"terraform-aws-modules/s3-bucket/aws\" version = \"3.6.0\" bucket = \"terraform-states-${data.aws_caller_identity.current.account_id}\" acl = \"private\" # S3 bucket-level Public Access Block configuration block_public_acls = true block_public_policy = true ignore_public_acls = true restrict_public_buckets = true versioning = { enabled = true } tags = merge(var.tags) } module \"dynamodb_table\" { source = \"terraform-aws-modules/dynamodb-table/aws\" version = \"3.1.2\" name = var.table_name billing_mode = \"PROVISIONED\" read_capacity = \"1\" write_capacity = \"1\" hash_key = \"LockID\" attributes = [ { name = \"LockID\" type = \"S\" } ] tags = merge(var.tags, tomap({ \"Name\" = var.table_name })) } providers.tf terraform { required_version = \"= 1.3.7\" } provider \"aws\" { region = var.region } terraform.tfvars region = \"eu-central-1\" tags = { \"SysName\" = \"EPAM\" \"Department\" = \"MDTU-DDM\" \"user:tag\" = \"mdtuddm1\" } variables.tf variable \"region\" { description = \"The AWS region to deploy the cluster into, e.g. eu-central-1\" type = string } variable \"s3_states_bucket_name\" { description = \"Prefix for S3 bucket name. Since the name should be unique the account number will be added as suffix, e.g. terraform-states-\" type = string default = \"terraform-states\" } variable \"table_name\" { description = \"the name of DynamoDb table to store terraform tfstate lock\" type = string default = \"terraform_locks\" } variable \"tags\" { description = \"A map of tags to apply to all resources\" type = map(any) } The main Terraform code deploys all the necessary resources. Example 2. Main code. Terraform templates description main.tf module \"vpc\" { source = \"terraform-aws-modules/vpc/aws\" version = \"3.19.0\" name = var.platform_name cidr = var.platform_cidr azs = var.subnet_azs private_subnets = var.private_cidrs public_subnets = var.public_cidrs enable_dns_hostnames = true enable_dns_support = true enable_nat_gateway = true single_nat_gateway = true one_nat_gateway_per_az = false tags = var.tags } module \"ec2_instance\" { source = \"terraform-aws-modules/ec2-instance/aws\" version = \"4.3.0\" name = var.node_name ami = var.node_ami instance_type = var.node_type key_name = module.key_pair.key_pair_name vpc_security_group_ids = [aws_security_group.sg_private.id] subnet_id = module.vpc.private_subnets[0] user_data = templatefile(\"files/user_data.sh.tpl\", { cross_account_role = var.cross_account_role_arn }) iam_instance_profile = aws_iam_instance_profile.node_profile.name enable_volume_tags = false root_block_device = [ { encrypted = false volume_type = var.volume_type volume_size = var.volume_size tags = var.tags }, ] tags = var.tags } module \"ec2_bastion\" { source = \"terraform-aws-modules/ec2-instance/aws\" version = \"4.3.0\" name = \"bastion\" ami = var.node_ami instance_type = \"t2.nano\" key_name = module.key_pair.key_pair_name vpc_security_group_ids = [aws_security_group.sg_public.id] subnet_id = module.vpc.public_subnets[0] enable_volume_tags = false tags = var.tags } module \"key_pair\" { source = \"terraform-aws-modules/key-pair/aws\" version = \"2.0.1\" key_name = var.key_pair public_key = trimspace(tls_private_key.main.public_key_openssh) tags = merge(var.tags, { \"Name\" = var.key_pair }) } providers.tf terraform { required_version = \"= 1.3.7\" # Fill the gaps instead backend \"s3\" { bucket = \"terraform-states-\" key = \"node/eu-central-1/terraform/terraform.tfstate\" region = \"eu-central-1\" acl = \"bucket-owner-full-control\" dynamodb_table = \"terraform_locks\" encrypt = true } required_providers { aws = { source = \"hashicorp/aws\" version = \">= 4.51.0\" } } } provider \"aws\" { region = var.region } iam-node-role.tf data \"aws_iam_policy_document\" \"assume_role_policy\" { statement { actions = [\"sts:AssumeRole\"] principals { type = \"Service\" identifiers = [\"ec2.amazonaws.com\"] } } } resource \"aws_iam_role\" \"node_role\" { name = var.role_name description = \"IAM role to assume to initial node\" assume_role_policy = data.aws_iam_policy_document.assume_role_policy.json force_detach_policies = true inline_policy { name = \"CrossAccountPolicy\" policy = jsonencode({ Version = \"2012-10-17\" Statement = [ { Action = \"sts:AssumeRole\" Effect = \"Allow\" Resource = var.cross_account_role_arn }, ] }) } tags = merge(var.tags, tomap({ \"Name\" = var.role_name })) } resource \"aws_iam_instance_profile\" \"node_profile\" { name = var.role_name role = aws_iam_role.node_role.name tags = var.tags } elastic-ip.tf resource \"aws_eip\" \"bastion_ip\" { instance = module.ec2_bastion.id tags = merge(var.tags, { \"Name\" = \"bastion-ip\" }) } security-groups.tf resource \"aws_security_group\" \"sg_public\" { name = \"sg public for bastion\" vpc_id = module.vpc.vpc_id ingress { from_port = var.ssh_port to_port = var.ssh_port protocol = \"tcp\" # cidr_blocks = var.ingress_cidr_blocks prefix_list_ids = [var.prefix_list_ids] } egress { from_port = 0 to_port = 0 protocol = \"-1\" cidr_blocks = [\"0.0.0.0/0\"] } tags = merge(var.tags, { \"Name\" = \"sg-public\" }) } resource \"aws_security_group\" \"sg_private\" { name = \"sg private for node\" vpc_id = module.vpc.vpc_id ingress { from_port = var.ssh_port to_port = var.ssh_port protocol = \"tcp\" security_groups = [aws_security_group.sg_public.id] } egress { from_port = 0 to_port = 0 protocol = \"-1\" cidr_blocks = [\"0.0.0.0/0\"] } tags = merge(var.tags, { \"Name\" = \"sg-private\" }) } ssh-key.tf resource \"tls_private_key\" \"main\" { algorithm = \"RSA\" } resource \"null_resource\" \"main\" { provisioner \"local-exec\" { command = \"echo \\\"${tls_private_key.main.private_key_pem}\\\" > private.key\" } provisioner \"local-exec\" { command = \"chmod 600 private.key\" } } files/user_data.sh.tpl #!/bin/bash export VERSION_STRING=5:20.10.23~3-0~ubuntu-bionic # Install docker sudo apt-get update -y sudo apt-get install \\ ca-certificates \\ curl \\ gnupg \\ lsb-release -y sudo mkdir -p /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg echo \\ \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update -y sudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-compose-plugin -y sudo usermod -aG docker ubuntu # Install unzip sudo apt install unzip -y # Install aws-cli-v2 curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" unzip awscliv2.zip sudo ./aws/install # Configure config for cross account integration mkdir -p /home/ubuntu/.aws touch /home/ubuntu/.aws/config cat > /home/ubuntu/.aws/config [profile cross-account-role] role_arn = ${cross_account_role} credential_source = Ec2InstanceMetadata EOT terraform.tfvars # Check out all the inputs based on the comments below and fill the gaps instead # More details on each variable can be found in the variables.tf file region = \"eu-central-1\" platform_name = \"okd-4-11\" # the name of the cluster and AWS resources platform_cidr = \"10.0.0.0/16\" # The following will be created or used existing depending on the create_vpc value subnet_azs = [\"eu-central-1a\", \"eu-central-1b\", \"eu-central-1c\"] private_cidrs = [\"10.0.1.0/24\"] public_cidrs = [\"10.0.101.0/24\"] ssh_port = 22 # Uncomment this line to use a custom IP address for the SSH connection #ingress_cidr_blocks = [\"\"] # Using prefix-list from epam-east-eu prefix_list_ids = \"pl-0ede2509a36215538\" node_name = \"initial-node\" node_ami = \"ami-0e0102e3ff768559b\" node_type = \"t2.medium\" key_pair = \"node_key\" volume_type = \"gp3\" volume_size = 150 role_name = \"CustomEC2Role\" cross_account_role_arn = \"arn:aws:iam::764324427262:role/CustomCrossAccountRole\" tags = { \"SysName\" = \"EPAM\" \"Department\" = \"MDTU-DDM\" \"user:tag\" = \"mdtuddm1\" } variables.tf variable \"region\" { description = \"The AWS region to deploy the cluster into, e.g. eu-central-1\" type = string } variable \"platform_name\" { description = \"The name of the node that is used for tagging resources. Match the [a-z0-9_-]\" type = string } variable \"platform_cidr\" { description = \"CIDR of your future VPC\" type = string } variable \"subnet_azs\" { description = \"Available zones of your future or existing subnets\" type = list(any) default = [] } variable \"private_cidrs\" { description = \"CIDR of your future VPC\" type = list(any) default = [] } variable \"public_cidrs\" { description = \"CIDR of your future VPC\" type = list(any) default = [] } variable \"node_name\" { description = \"The name of the node that is used for tagging resources. Match the [a-z0-9_-]\" type = string } variable \"node_ami\" { description = \"The ami of the node\" type = string } variable \"node_type\" { description = \"Type of the node\" type = string } variable \"key_pair\" { description = \"The name of DynamoDb table to store terraform tfstate lock\" type = string } variable \"volume_type\" { description = \"Root volume type of the node\" type = string } variable \"volume_size\" { description = \"Root volume size of the node\" type = number } variable \"ssh_port\" { description = \"Open the 22 port\" type = number } #Use this for a custom IP address for the SSH connection #variable \"ingress_cidr_blocks\" { # description = \"IP CIDR blocks for bastion\" # type = list(string) #} variable \"prefix_list_ids\" { description = \"IP CIDR blocks for bastion\" type = string } variable \"role_name\" { description = \"The AWS IAM role name for initial node\" type = string } variable \"cross_account_role_arn\" { description = \"The AWS IAM role arn to assume from another AWS account\" type = string } variable \"tags\" { description = \"A map of tags to apply to all resources\" type = map(any) } IP address To connect to an additional virtual machine via SSH, you need to add the appropriate IP address to the terraform.tfvars file. If you need to open several connections, create a prefix-list prefix and use it. If Terraform code was used to deploy additional components, jump to Starting the openshift-install container. The following table provides the recommended settings for Bastion. Table 1. Bastion settings # Setting Value 1 Instance type t2.nano 2 vCPUs 1 3 RAM 0.5 GiB 4 CPU Credits/hr 3 5 Platform Ubuntu 6 AMI name ubuntu-bionic-18.04-amd64-server-20210224 7 Volume 8 Gb The following table provides the recommended settings for the secondary virtual machine. Table 2. Secondary virtual machine settings # Setting Value 1 Instance type t2.medium 2 vCPUs 2 3 RAM 4 GiB 4 CPU Credits/hr 24 5 Platform Ubuntu 6 AMI name ubuntu-bionic-18.04-amd64-server-20210224 7 Volume 150 Gb To install the cluster and Platform, you need to download the Docker image of the container and Installer to the additional virtual machine. This is only possible if a special IAM role is created. Go to the AWS IAM service and create a role for the EC2 service with the following permissions: Trusted entities { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"ec2.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] } Inline permissions policies { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Resource\": \"arn:aws:iam::764324427262:role/CustomCrossAccountRole\" } ] } Then you need to attach the IAM role you created to the additional virtual machine. For details on creating an IAM role and attaching it to a virtual machine, refer to the AWS documentation: IAM roles for Amazon EC2. To connect to the additional virtual machine from your computer, you need to create an SSH tunnel. Use the following command: Example 3. Creating an SSH tunnel $ ssh -i -L 1256::22 -N -f ubuntu@ After creating an SSH tunnel, you can connect to the additional virtual machine. Use the following command: Example 4. Connecting via SSH $ ssh -i ubuntu@localhost -p 1256 Additional virtual machine purpose You need to perform all subsequent steps on the additional virtual machine, namely the installation of the cluster and Platform. Before going further, install the following necessary tools on the additional virtual machine. unzip Docker AWS CLI v2 To check whether the tools were installed correctly, use the following commands: Example 5. Checking the installed tools Check unzip $ unzip -v Check Docker $ docker --version Check AWS CLI $ aws --version To sign in using a role that has access to the Docker image of the container and Installer, perform the following steps. Sign in as the IAM user. $ export AWS_ACCESS_KEY_ID= $ export AWS_SECRET_ACCESS_KEY= Create the .aws folder and then create the config file inside of it: $ mkdir -p ~/.aws $ touch ~/.aws/config Add the necessary role values to the config file. $ cat > ~/.aws/config [profile cross-account-role] role_arn = arn:aws:iam::764324427262:role/CustomCrossAccountRole credential_source = Ec2InstanceMetadata EOT To install the cluster using the openshift-install Docker image, perform the following steps. Sign in to AWS Elastic Container Registry (ECR). $ sudo aws ecr get-login-password --profile cross-account-role --region eu-central-1 | docker login --username AWS --password-stdin 764324427262.dkr.ecr.eu-central-1.amazonaws.com Download the Docker image. $ docker pull 764324427262.dkr.ecr.eu-central-1.amazonaws.com/openshift-install:v3 Tag the Docker image you downloaded. $ docker tag 764324427262.dkr.ecr.eu-central-1.amazonaws.com/openshift-install:v3 openshift-install:v3 Create a new folder to keep all the cluster data. $ mkdir ~/openshift-cluster Switch to the folder you created. $ cd ~/openshift-cluster Run the openshift-install container. $ sudo docker run --rm -it --name openshift-install-v3 \\ --user root:$(id -g) \\ --net host \\ -v $(pwd):/tmp/openshift-cluster \\ --env AWS_ACCESS_KEY_ID= \\ --env AWS_SECRET_ACCESS_KEY= \\ openshift-install:v3 bash In OpenShift Container Platform version 4.11, you can install a customized cluster on infrastructure that the installation program provisions on AWS. OKD version The recommended OKD version is 4.11.0-0.okd-2022-08-20-022919. To install the cluster, perform the following steps: Inside the container, switch to the /tmp/openshift-cluster folder. $ cd /tmp/openshift-cluster Perform the steps described on the following OKD page until the Deploying the cluster step: Installing a cluster on AWS with customizations. To configure the installation, create the install-config.yaml file and add the necessary parameters there before installing the cluster. After creating the install-config.yaml file, fill in the required parameters presented in the context menu. This configuration file only includes the parameters required for minimal cluster deployment. To learn more about customizing the settings, refer to the official OKD documentation. Recommended parameters for install-config.yaml: install-config.yaml apiVersion: v1 baseDomain: (1) compute: - architecture: amd64 hyperthreading: Enabled name: worker platform: aws: zones: - eu-central-1c rootVolume: size: 80 type: gp3 type: r5.2xlarge replicas: 3 controlPlane: architecture: amd64 hyperthreading: Enabled name: master platform: aws: zones: - eu-central-1c rootVolume: size: 80 type: gp3 type: r5.2xlarge replicas: 3 metadata: name: networking: clusterNetwork: - cidr: 10.128.0.0/14 hostPrefix: 23 machineNetwork: - cidr: 10.0.0.0/16 networkType: OpenShiftSDN platform: aws: region: eu-central-1 userTags: 'user:tag': (2) publish: External pullSecret: (4) sshKey: (3) (1) — the domain name you created and configured earlier. For details, see Configuring Route 53 and Configuring an external domain. (2) — the name of the future OKD cluster. (3) — one or more SSH keys used to access the cluster machines. You can use the same key that was created during the OKD cluster installation, or any other key. For details, refer to the OKD documentation: Optional configuration parameters. (4) — the secret you created earlier (for details, see Creating additional accounts). You need to get this secret from the Red Hat OpenShift Cluster Manager. To learn more, refer to step 5 on this OKD page: Obtaining the installation program. You need to add your Red Hat and Docker Hub credentials to the pull secret. A combined secret will look as follows: { \"auths\":{ \"cloud.openshift.com\":{ \"auth\":\"b3Blb=\", \"email\":\"test@example.com\" }, \"quay.io\":{ \"auth\":\"b3Blb=\", \"email\":\"test@example.com\" }, \"registry.connect.redhat.com\":{ \"username\":\"test\", \"password\":\"test\", \"auth\":\"b3Blb=\", \"email\":\"test@example.com\" }, \"registry.redhat.io\":{ \"username\":\"test\", \"password\":\"test\", \"auth\":\"b3Blb=\", \"email\":\"test@example.com\" }, \"index.docker.io/v2/\":{ \"username\":\"test\", \"password\":\"test\", \"auth\":\"b3Blb=\", \"email\":\"test@example.com\" } } } + For convenience, the pull secret should be written to the install-config.yaml file in one line. The final secret will look as follows: + .An example of a one-line *pull secret* Details '{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3Blb=\",\"email\":\"test@example.com\"},\"quay.io\":{\"auth\":\"b3Blb=\",\"email\":\"test@example.com\"},\"registry.connect.redhat.com\":{\"username\":\"test\",\"password\":\"test\",\"auth\":\"b3Blb=\",\"email\":\"test@example.com\"},\"registry.redhat.io\":{\"username\":\"test\",\"password\":\"test\",\"auth\":\"b3Blb=\",\"email\":\"test@example.com\"},\"index.docker.io/v2/\":{\"username\":\"test\",\"password\":\"test\",\"auth\":\"b3Blb=\",\"email\":\"test@example.com\"}}}' The Installer deletes the install-config.yaml file when creating the cluster. We recommend backing up the install-config.yaml file if you need to deploy multiple clusters. After install-config.yaml is created, run the following command to deploy the OKD cluster: Installing the OKD cluster $ ./openshift-install create cluster --dir /tmp/openshift-cluster/cluster-state --log-level=info The cluster deployment process usually takes up to 1 hour. Upon successful deployment, the following cluster access and credential information displays in your terminal: login; password; a link to the cluster’s web console The installation program generates a series of cluster definition files for your cluster in the installation directory, which are necessary for its uninstallation. To learn more, refer to the Prerequisites section on this OKD page: Uninstalling a cluster on AWS. This directory will also contain the /auth folder with two authentication files: for working with the cluster through the web console and the OKD command line interface (OKD CLI). To replace self-signed certificates with trusted ones, you first need to obtain these certificates. This section describes obtaining free certificates from Let’s Encrypt and installing them on your server. Let’s Encrypt certificates are obtained using the acme.sh utility. To learn about using Let’s Encrypt via the ACME protocol, refer to the Let’s Encrypt documentation: ACME Client Implementations. To replace the certificates, perform the following steps: Set the environment variable. The variable must point to the kubeconfig file. $ export KUBECONFIG=cluster-state/auth/kubeconfig Create the letsencrypt.sh file and paste the following script into it: Details #!/bin/bash yum install -y openssl mkdir -p certificates export CERT_HOME=./certificates export CURDIR=$(pwd) cd $CERT_HOME # Clone the acme.sh utility from the GitHub repository git clone https://github.com/neilpang/acme.sh sed -i \"2i AWS_ACCESS_KEY_ID=\\\"${AWS_ACCESS_KEY_ID}\\\"\" ./acme.sh/dnsapi/dns_aws.sh sed -i \"3i AWS_SECRET_ACCESS_KEY=\\\"${AWS_SECRET_ACCESS_KEY}\\\"\" ./acme.sh/dnsapi/dns_aws.sh cd $CURDIR # Get API Endpoint URL export LE_API=\"$(oc whoami --show-server | cut -f 2 -d ':' | cut -f 3 -d '/' | sed 's/-api././')\" # Get Wildcard Domain export LE_WILDCARD=\"$(oc get ingresscontroller default -n openshift-ingress-operator -o jsonpath='{.status.domain}')\" ${CERT_HOME}/acme.sh/acme.sh --register-account -m user_${RANDOM}@example.com ${CERT_HOME}/acme.sh/acme.sh --issue -d ${LE_API} -d *.${LE_WILDCARD} --dns dns_aws export CERTDIR=$CERT_HOME/certificates mkdir -p ${CERTDIR} # Transfer certificates from the default acme.sh path to a more convenient directory using the --install-cert - key ${CERT_HOME}/acme.sh/acme.sh --install-cert -d ${LE_API} -d *.${LE_WILDCARD} --cert-file ${CERTDIR}/cert.pem --key-file ${CERTDIR}/key.pem --fullchain-file ${CERTDIR}/fullchain.pem --ca-file ${CERTDIR}/ca.cer # Create secret oc create secret tls router-certs --cert=${CERTDIR}/fullchain.pem --key=${CERTDIR}/key.pem -n openshift-ingress # Update Custom Resource for Router oc patch ingresscontroller default -n openshift-ingress-operator --type=merge --patch='{\"spec\": { \"defaultCertificate\": { \"name\": \"router-certs\" }}}' Make the script executable. $ chmod +x ./letsencrypt.sh Run the script. $ bash -x ./letsencrypt.sh Exit the container after running the script. To do this, use the following command. The container will be deleted automatically. $ exit Before launching the Installer, you need to prepare the workstation where it will run. Before running the Platform installation script, perform the following steps: Download the appropriate version of the Installer by running the following sequence of commands. $ mkdir ~/installer $ cd ~/installer $ sudo aws s3 cp --profile cross-account-role s3://mdtu-ddm-platform-installer//mdtu-ddm-platform-.zip mdtu-ddm-platform-.zip Unpack the Installer to a separate directory. $ unzip mdtu-ddm-platform-(version).zip -d ./installer- Copy kubeconfig from the installed cluster. $ cp ~/openshift-cluster/cluster-state/auth/kubeconfig ./installer- Transfer the certificates and digital-signature-ops service support files to the certificates directory and go to the Installer directory. $ cp -r /path/to/folder/certificates/ ./installer- $ cd installer- When deploying the Platform from scratch, no additional configuration is required for MinIO. When deploying the Platform from scratch, no additional configuration is required for Vault. Run the following commands: $ IMAGE_CHECKSUM=$(sudo docker load -i control-plane-installer.img \\| sed -r \"s#.*sha256:(.*)#\\\\1#\" \\| tr -d '\\n') $ echo $IMAGE_CHECKSUM $ sudo docker tag ${IMAGE_CHECKSUM} control-plane-installer: Start the installation process of the new Platform with the images: $ sudo docker run --rm \\ --name control-plane-installer- \\ --user root:$(id -g) \\ --net host \\ -v $(pwd):/tmp/installer \\ --env KUBECONFIG=/tmp/installer/kubeconfig \\ --env idgovuaClientId=f90ab33dc272f047dc330c88e5663b75 \\ --env idgovuaClientSecret=cba49c104faac8c718e6daf3253bc55f2bf11d9e \\ --env CUSTOM_INGRESS_CIDRS='[\"0.0.0.0/0\", \"85.223.209.0/24\"]' \\ --env deploymentMode= \\ --entrypoint \"/bin/sh\" control-plane-installer: \\ -c \"./install.sh -i\" --rm — this flag will automatically delete the container when it exits. You can remove the flag if you need to inspect the state and logs of the completed container, or if you have an unstable Internet connection. DEPLOYMENT_MODE — this variable can be set to development or production. The following log indicates the Platform update process was successful: If you removed the --rm flag during the Deploying the Platform from the Installer step, you need to do the following: Run the following command to verify that the container has exited with a status of 0, which indicates that it has completed successfully. $ docker ps --all --latest Remove the container using the following command: $ docker rm $(docker ps --latest -q) After installing the Platform, make sure the cluster-management pipeline has started and passed successfully (with a green status). Only after this the Platform will be ready for deploying registries. Without this action, the registries will not deploy. You can locate the cluster-management pipeline using the following path: OKD Web UI > control-plane NS > Routes > jenkins url > cluster-mgmt > MASTER-Build-cluster-mgmt. Request access to the IIT widget as described here: https://eu.iit.com.ua/sign-widget/v20200922/. Additional resources state After all the steps are completed, you can shut down Bastion and the additional virtual machine. Before running the Platform installation script, perform the following steps: Download the appropriate version of the Installer by running the following sequence of commands. $ mkdir ~/installer $ cd ~/installer $ sudo aws s3 cp --profile cross-account-role s3://mdtu-ddm-platform-installer//mdtu-ddm-platform-.zip mdtu-ddm-platform-.zip Unpack the Installer to a separate directory. $ unzip mdtu-ddm-platform-(version).zip -d ./installer- Copy kubeconfig from the installed cluster. $ cp ~/openshift-cluster/cluster-state/auth/kubeconfig ./installer- Transfer the certificates and digital-signature-ops service support files to the certificates directory and go to the Installer directory. $ cp -r /path/to/folder/certificates/ ./installer- $ cd installer- Copy Terraform state data for MinIO from the previous release. $ cp ~/installer/installer-/terraform/minio/aws/terraform.tfstate ./terraform/minio/aws/ Copy the MinIO key from the previous release. $ cp ~/installer/installer-/terraform/minio/aws/private_minio.key ./terraform/minio/aws/ Copy Terraform state data for Vault from the previous release. $ cp ~/installer/installer-/terraform/vault/aws/terraform.tfstate ./terraform/vault/aws/ Copy the Vault key from the previous release. $ ~/installer/installer-/terraform/vault/aws/private.key ./terraform/vault/aws/ Run the following commands: $ IMAGE_CHECKSUM=$(sudo docker load -i control-plane-installer.img \\| sed -r \"s#.*sha256:(.*)#\\\\1#\" \\| tr -d '\\n') $ echo $IMAGE_CHECKSUM $ sudo docker tag ${IMAGE_CHECKSUM} control-plane-installer: Update the Platform version with the images: $ sudo docker run --rm \\ --name control-plane-installer- \\ --user root:$(id -g) \\ --net host \\ -v $(pwd):/tmp/installer \\ --env KUBECONFIG=/tmp/installer/kubeconfig \\ --env idgovuaClientId=f90ab33dc272f047dc330c88e5663b75 \\ --env idgovuaClientSecret=cba49c104faac8c718e6daf3253bc55f2bf11d9e \\ --env CUSTOM_INGRESS_CIDRS='[\"0.0.0.0/0\", \"85.223.209.0/24\"]' \\ --env deploymentMode= \\ --entrypoint \"/bin/sh\" control-plane-installer: \\ -c \"./install.sh -u\" --rm — this flag will automatically delete the container when it exits. You can remove the flag if you need to inspect the state and logs of the completed container, or if you have an unstable Internet connection. DEPLOYMENT_MODE — this variable can be set to development or production, depending on the previous installation. The following log indicates the Platform update process was successful: If you removed the --rm flag during the Updating the Platform from the Installer step, you need to do the following: Run the following command to verify that the container has exited with a status of 0, which indicates that it has completed successfully. $ docker ps --all --latest Remove the container using the following command: $ docker rm $(docker ps --latest -q) In this section we go over errors that may occur when deploying the Platform from scratch and provide methods to resolve them. The following error occurs during cluster deployment: Bootstrap virtual machine error level=error msg=Attempted to gather ClusterOperator status after installation failure: listing ClusterOperator objects: Get \"https://api.:6443/apis/config.openshift.io/v1/clusteroperators\": dial tcp :6443: connect: connection refused level=error msg=Bootstrap failed to complete: Get \"https://api.:6443/version\": dial tcp :6443: connect: connection refused level=error msg=Failed waiting for Kubernetes API. This error usually happens when there is a problem on the bootstrap host that prevents creating a temporary control plane. This error is related to the bootstrap virtual machine and usually happens when there is a problem on the bootstrap host that prevents creating a temporary Control Plane. Run the command to remove the cluster, leaving the --dir parameter the same. $ ./openshift-install destroy cluster --dir /tmp/openshift-cluster/cluster-state --log-level info Wait until the cluster is removed, then run the command to reinstall it. $ ./openshift-install create cluster --dir /tmp/openshift-cluster/cluster-state --log-level=info When deploying the Platform, during the Vault installation stage, an error may occur where the vault_root_token variable returns an empty value: This error can be caused by Vault not starting successfully or skipping some of the Platform installation steps. Sign in to your AWS account and locate the platform-vault- virtual machine. Connect to the virtual machine using EC2 Instance Connect or SSH. Check the Vault status. The Initialized parameter must be set to true. $ vault status + If the status is different, restart Vault. $ systemctl restart vault If this error occurred during the Platform update, check if the Vault key was copied from the previous release as described in Configuring Vault. Try running the Platform update process again as described in Updating the Platform from the Installer. When deploying the Platform, during the MinIO installation stage, the following error may occur: Go to the Installer directory and start the container for Platform installation using the following command: $ cd ~/installer/installer- $ sudo docker run -it --rm \\ --name control-plane-installer- \\ --user root:$(id -g) \\ --net host \\ -v $(pwd):/tmp/installer \\ --env KUBECONFIG=/tmp/installer/kubeconfig \\ --env idgovuaClientId=f90ab33dc272f047dc330c88e5663b75 \\ --env idgovuaClientSecret=cba49c104faac8c718e6daf3253bc55f2bf11d9e \\ --env CUSTOM_INGRESS_CIDRS='[\"0.0.0.0/0\", \"85.223.209.0/24\"]' \\ --env deploymentMode= control-plane-installer: bash Switch to the appropriate directory and set the environment variables. $ cd /tmp/installer/terraform/minio/aws $ export AWS_ACCESS_KEY_ID=$(oc get secret/aws-creds -n kube-system -o jsonpath='{.data.aws_access_key_id}' | base64 -d) $ export AWS_SECRET_ACCESS_KEY=$(oc get secret/aws-creds -n kube-system -o jsonpath='{.data.aws_secret_access_key}' | base64 -d) $ export CLUSTER_NAME=$(oc get node -l node-role.kubernetes.io/master -o 'jsonpath={.items[0].metadata.annotations.machine\\.openshift\\.io/machine}' | sed -r 's#.*/(.*)-master.*#\\1#') $ export clusterNameShort=\"${CLUSTER_NAME::-6}\" $ export baseDomain=$(oc get dns cluster --no-headers -o jsonpath='{.spec.baseDomain}') $ export route53HostedZone=\"${baseDomain/${clusterNameShort}./}\" Remove MinIO using Terraform. $ terraform init $ terraform destroy -var cluster_name=\"${clusterNameShort}\" -var baseDomain=\"${route53HostedZone}\" -auto-approve Wait until Minio is removed. Exit the container and retry the Platform installation process as described in Deploying the Platform from the Installer if you are deploying the platform from scratch, or Updating the Platform from the Installer, if you are updating the platform. During Platform deployment, when sending images to Nexus, the following error may occur: This error is related to skopeo, a tool that sends images to Nexus. If the image fails to load in 10 minutes, skopeo returns a timeout error. Install the Platform from an additional virtual machine as described in Deploying additional resources to install an OKD cluster on AWS.","title":"Deploying the Platform in an AWS environment from scratch","component":"platform","version":"1.9.6","name":"platform-aws-deployment","url":"/platform/1.9.6/admin/installation/platform-deployment/platform-aws-deployment.html","titles":[{"text":"1. Prerequisites","hash":"_prerequisites","id":1},{"text":"1.1. Elements required at the initial stage","hash":"_elements_required_at_the_initial_stage","id":2},{"text":"1.2. Creating an AWS account","hash":"_creating_an_aws_account","id":3},{"text":"1.3. Setting up an AWS account","hash":"_setting_up_an_aws_account","id":4},{"text":"1.3.1. Configuring Route 53","hash":"setup-route-53","id":5},{"text":"1.3.2. Configuring an external domain","hash":"setup-external-domain","id":6},{"text":"1.3.3. AWS account limits","hash":"_aws_account_limits","id":7},{"text":"1.3.4. Creating an IAM user","hash":"_creating_an_iam_user","id":8},{"text":"1.3.5. Required AWS permissions for the IAM user","hash":"_required_aws_permissions_for_the_iam_user","id":9},{"text":"1.4. Creating additional accounts","hash":"create-additional-accounts","id":10},{"text":"1.4.1. Creating a Docker Hub account","hash":"_creating_a_docker_hub_account","id":11},{"text":"1.4.2. Creating a Red Hat account","hash":"_creating_a_red_hat_account","id":12},{"text":"2. Deploying additional resources to install an OKD cluster on AWS","hash":"deploy-additional-resources-for-okd","id":13},{"text":"2.1. Terraform code description","hash":"_terraform_code_description","id":14},{"text":"2.1.1. Initial Terraform code","hash":"_initial_terraform_code","id":15},{"text":"2.1.2. Main Terraform code","hash":"_main_terraform_code","id":16},{"text":"2.2. Recommended Bastion settings","hash":"_recommended_bastion_settings","id":17},{"text":"2.3. Recommended secondary virtual machine settings","hash":"_recommended_secondary_virtual_machine_settings","id":18},{"text":"2.4. Configuring AWS cross-account access","hash":"_configuring_aws_cross_account_access","id":19},{"text":"2.5. Configuring the additional virtual machine","hash":"_configuring_the_additional_virtual_machine","id":20},{"text":"2.5.1. Connecting to the additional virtual machine","hash":"_connecting_to_the_additional_virtual_machine","id":21},{"text":"2.5.2. Installing the required tools","hash":"_installing_the_required_tools","id":22},{"text":"2.5.3. Using the profile for AWS cross-account access","hash":"_using_the_profile_for_aws_cross_account_access","id":23},{"text":"2.6. Starting the openshift-install container","hash":"launch-openshift-install","id":24},{"text":"3. Preparing to install the OKD cluster on AWS","hash":"okd-aws-install-preparation","id":25},{"text":"4. Running the OKD4 installer and deploying an empty OKD4 cluster","hash":"_running_the_okd4_installer_and_deploying_an_empty_okd4_cluster","id":26},{"text":"5. Replacing self-signed certificates with trusted certificates","hash":"_replacing_self_signed_certificates_with_trusted_certificates","id":27},{"text":"6. Preparing and launching the Installer to deploy and update the Platform on the OKD cluster","hash":"installer-preparation-launch","id":28},{"text":"6.1. Deploying from scratch","hash":"_deploying_from_scratch","id":29},{"text":"6.1.1. Prerequisites","hash":"_prerequisites_2","id":30},{"text":"6.1.2. Configuring MinIO","hash":"_configuring_minio","id":31},{"text":"6.1.3. Configuring Vault","hash":"_configuring_vault","id":32},{"text":"6.1.4. Deploying the Platform from the Installer","hash":"deploy-platform-installer-scratch","id":33},{"text":"6.1.5. Deployment status","hash":"_deployment_status","id":34},{"text":"6.1.6. Post-deployment required steps","hash":"_post_deployment_required_steps","id":35},{"text":"6.2. Updating","hash":"_updating","id":36},{"text":"6.2.1. Prerequisites","hash":"_prerequisites_3","id":37},{"text":"6.2.2. Configuring MinIO","hash":"_configuring_minio_2","id":38},{"text":"6.2.3. Configuring Vault","hash":"platform-update-vault","id":39},{"text":"6.2.4. Updating the Platform from the Installer","hash":"update-platform-installer","id":40},{"text":"6.2.5. Update status","hash":"_update_status","id":41},{"text":"7. Common errors during Platform deployment","hash":"_common_errors_during_platform_deployment","id":42},{"text":"7.1. Bootstrap machine error when deploying the OKD cluster","hash":"_bootstrap_machine_error_when_deploying_the_okd_cluster","id":43},{"text":"Problem description","hash":"_problem_description","id":44},{"text":"Solution","hash":"_solution","id":45},{"text":"7.2. Vault token error when deploying the Platform","hash":"_vault_token_error_when_deploying_the_platform","id":46},{"text":"Problem description","hash":"_problem_description_2","id":47},{"text":"Solution","hash":"_solution_2","id":48},{"text":"7.3. MinIO SSL certificate error when deploying the Platform","hash":"_minio_ssl_certificate_error_when_deploying_the_platform","id":49},{"text":"Problem description","hash":"_problem_description_3","id":50},{"text":"Solution","hash":"_solution_3","id":51},{"text":"7.4. Error sending images to Nexus when deploying the Platform","hash":"_error_sending_images_to_nexus_when_deploying_the_platform","id":52},{"text":"Problem description","hash":"_problem_description_4","id":53},{"text":"Solution","hash":"_solution_4","id":54}]},"74":{"id":74,"text":"The successful deployment of the Platform for state registries relies on the utilization of officially supported virtual infrastructures. At present, these infrastructures include recognized cloud services like Amazon Web Services (AWS) and VMWare vSphere. To ensure optimal compatibility and functionality, these infrastructures should have an OKD cluster installed. The version of this cluster needs to align with the Platform’s requirements outlined in the official Platform documentation: Platform for state registries: requirements for OKD clusters. Follow the guidelines in the official Platform documentation to carry out the process of installation and configuration. Deploying the Platform in an AWS environment from scratch admin:installation/platform-deployment/platform-vsphere-deployment.adoc","title":"Deploying the Platform on target environments","component":"platform","version":"1.9.6","name":"platform-deployment-overview","url":"/platform/1.9.6/admin/installation/platform-deployment/platform-deployment-overview.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"75":{"id":75,"text":"On this page: 1. Introduction 2. Configuring DNS names for the Platform’s Keycloak component 3. Configuring DNS names for the registry’s Keycloak component 4. Additional configuration outside the OpenShift cluster and registry 5. Applying configuration changes SSL certificate storage convention Platform administrators can configure custom DNS names for the Keycloak user and role management service using the Control Plane admin console. Why you should use this feature: Custom DNS names enable you to create convenient and easy-to-remember URLs for users to sign in to the user portals. This setup ensures proper certificate validation and authentication via Keycloak for correct service-to-service interactions on private networks. This provides administrators with a simple and efficient way to manage Keycloak settings, making it easier to work with the system. Functional scenarios: Configuring DNS names for Keycloak via the admin console at the Platform level. Setting a DNS name for the user portal sign-in pages via the admin console at the registry level. Removing DNS names added to Keycloak. General principles and provisions: The Platform administrator configures available DNS names for Keycloak. The Platform administrator uploads the SSL certificate file in the .pem format for the domain along with the DNS name. The registry administrator configures DNS names for the registry user portals. The registry administrator selects a domain for Keycloak from a list. The list of domains available in the system comes from the Platform’s Keycloak DNS names. Individual SSL certificates in the .pem format can be downloaded for each user portal in portal settings. The Platform administrator ensures certificate rotation for Keycloak and user portals. The system allows editing previously installed SSL certificates and DNS names. The admin console checks whether the provided SSL certificate matches the domain, is not self-signed, and has not expired. For security reasons, access to the HashiCorp Vault to read certificates works ONLY through a separate service (system) account. If the registry is deployed without user portals (officer portal or citizen portal), the corresponding UI elements for configuring DNS names are hidden. The URL for Keycloak and user portals is limited to 63 characters and must be validated by the system. To configure custom DNS names and upload SSL certificates for Keycloak, follow these steps: Sign in to the Control Plane admin console. Go to Platform management and open the Keycloak DNS section. This section displays the system’s default DNS value that cannot be edited. For additional DNS names, configure your DNS records on your DNS provider side. For details, jump to Additional configuration outside the OpenShift cluster and registry. Click the Add DNS button. In the Add DNS window, enter the domain name for Keycloak into the Keycloak domain name field and upload Keycloak certificate using the Upload SSL certificate button. The admin console gets the default DNS configuration from the Keycloak CR (Custom Resource) specification in the user-management component. In the Add DNS window, click the Confirm button to save your settings and start the validation checks. To close the window without saving your changes, click Cancel. The Keycloak DNS page lists all the DNS records you added. To edit additional DNS records, click the pencil icon next to one of the additional DNS records. Change the domain name and certificate in the editing window. Cancel and Confirm buttons work the same as when adding a new DNS record. The same validation happens when you save the settings. You can remove an additional DNS record if it is not used by any of the registries. To delete a DNS record, click the recycle bin icon next to it and confirm your action in a window that opens. If an additional DNS name is used by any registry, you need to first change this domain in the corresponding registry settings to something else. When you are finished working with additional DNS, click Confirm to save your changes. The changes are saved once the system validates them. As a result, the system generates a registry configuration update request. You can view request details in the Platform management > Update requests section. Confirm the changes and wait until the MASTER-Build-cluster-mgmt Jenkins process completes and applies the new configuration. DNS names configured as described in Configuring DNS names for the Platform’s Keycloak component can be used when creating or editing a registry. Sign in to the Control Plane admin console. Open the Registries section and select the registry you wish to edit. On the registry information page, click the Edit button in the upper-right corner. On the registry edit page, open the DNS section. Under User and role management service (Keycloak), select the DNS name from the Keycloak domain name list. Click Confirm to save your changes. The changes are saved once the system validates them. As a result, the system generates a registry configuration update request. You can view request details in the Registries > Update requests section. Confirm the changes and wait until the MASTER-Build- Jenkins process completes and applies the new configuration. Perform additional configuration outside the OpenShift cluster and registry. Create a CNAME record with your DNS provider. This record should point to the Load Balancer bound to the OpenShift router (HAProxy). An OpenShift router domain is different for each cluster. CNAME records must always point to another domain name, not an IP address. A CNAME (Canonical Name) record is a type of DNS record that maps a domain name (alias) to a true or canonical domain name. Here is an example of a CNAME record: www.example.net. CNAME www.example.com. You can view the current CNAME records using the Google Public DNS service. A CNAME record cannot be set for apex domains (such as example.com); a subdomain must be specified (such as www.example.com). To request adding a new address to the eu.iit.com.ua test widget, use the [EPAM] IIT Digital Signature Library Questions Telegram channel. The user portals become available using the configured DNS names after the external configuration takes effect. Typically, DNS names are updated within one hour, although a global update can take up to 48 hours. When you confirm the changes in the admin console, the following happens at the Platform and registry levels. Platform settings: The SSL certificates you uploaded for custom Keycloak domains are saved to the HashiCorp Vault secrets and encryption management subsystem. Domain records and SSL certificate paths are added to the deploy-templates/values.yaml file of the cluster-mgmt component. For example: keycloak: customHosts: - host: keycloak.example.com certificatePath: registry-kv/.... - host: keycloak-login.instance.com certificatePath: registry-kv/.... Registry settings: The SSL certificates you uploaded for custom user portal domains are saved to HashiCorp Vault. Domain records and SSL certificate paths are added to the deploy-templates/values.yaml file in the corresponding registry repository. For example: portals: officer: customHost: enabled: true host: officer.example.com certificatePath: registry-kv/.... HashiCorp Vault’s SSL certificate storage convention defines the paths for Platform and registry certificates. Platform certificates are saved to: registry-kv/cluster/domains/ key:caCertificate value: key:certificate value: key:key value: Registry certificates are saved to: registry-kv/registry//domains// key:caCertificate value: key:certificate value: key:key value:","title":"Configuring custom DNS for Keycloak","component":"platform","version":"1.9.6","name":"cp-custom-dns-keycloak","url":"/platform/1.9.6/admin/registry-management/custom-dns/cp-custom-dns-keycloak.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Configuring DNS names for the Platform’s Keycloak component","hash":"configure-dns-platform","id":2},{"text":"3. Configuring DNS names for the registry’s Keycloak component","hash":"configure-dns-registry","id":3},{"text":"4. Additional configuration outside the OpenShift cluster and registry","hash":"external-configuration","id":4},{"text":"5. Applying configuration changes","hash":"_applying_configuration_changes","id":5},{"text":"SSL certificate storage convention","hash":"_ssl_certificate_storage_convention","id":6}]},"76":{"id":76,"text":"On this page: 1. Introduction 2. Configuring DNS names for user portals 2.1. Selecting a registry and opening its settings 2.2. Configuring DNS names for the officer portal 2.3. Configuring DNS names for the citizen portal 2.4. Additional configuration outside the OpenShift cluster and registry Control Plane admin console interface enables you to use custom DNS names for the public officer and citizen portals. The DNS (Domain Name System) is a hierarchical and distributed naming system that converts network resource names into IP addresses. To set up custom DNS names for the user portals, you need to register a domain name (for example, registry.example.com) and get an SSL certificate for the domain (example.com), specific subdomain (registry.example.com), or all first-level subdomains (*.example.com). The admin console extracts the CA (Certificate Authority) certificate and key from the SSL certificate, saves them to the central HashiCorp Vault using the KV engine, and adds the DNS names to the values.yaml settings file in the following format: Example 1. customDNS user portal settings in values.yml global: customDNS: officerPortal: \"officer.example.com\" citizenPortal: \"citizen.example.com\" You can configure DNS names when creating a new registry or editing an existing registry. In this section, we will use editing an existing registry as an example. To set up custom DNS names for the user portals, perform the following steps. Sign in to the Control Plane admin console. Open the Registries section and select the registry for which you wish to configure the DNS name. Click the Edit button in the upper-right corner. Set up a DNS name for the officer portal: Open the DNS section and turn on the Configure DNS for officer portal switch. This feature is disabled by default. Once it is enabled and changes to the registry configuration are applied, the officer portal will be available using the new DNS name. To restore the default setting and reset the DNS, simply turn the switch off. The next time changes to the registry are applied, the portal will revert to the default DNS name. Specify the domain name to use for the officer portal. Use the following format: officer.example.com. Click Browse…​ in the SSL certificate for officer portal (.pem extension) field. Browse to a corresponding certificate file with a .pem extension, select it and click Open. Click Confirm to save your settings. Set up a DNS name for the citizen portal: Open the DNS section and turn on the Configure DNS for citizen portal switch. This feature is disabled by default. Once it is enabled and changes to the registry configuration are applied, the citizen portal will be available using the new DNS name. To restore the default setting and reset the DNS, simply turn the switch off. The next time changes to the registry are applied, the portal will revert to the default DNS name. Specify the domain name to use for the citizen portal. Use the following format: citizen.example.com. Click Browse…​ in the SSL certificate for citizen portal (.pem extension) field. Browse to a corresponding certificate file with a .pem extension, select it and click Open. Click Confirm to save your settings. Perform additional configuration outside the OpenShift cluster and registry. Create a CNAME record with your DNS provider. This record should point to the Load Balancer bound to the OpenShift router (HAProxy). An OpenShift router domain is different for each cluster. CNAME records must always point to another domain name, not an IP address. A CNAME (Canonical Name) record is a type of DNS record that maps a domain name (alias) to a true or canonical domain name. Here is an example of a CNAME record: www.example.net. CNAME www.example.com. You can view the current CNAME records using the Google Public DNS service. A CNAME record cannot be set for apex domains (such as example.com); a subdomain must be specified (such as www.example.com). To request adding a new address to the eu.iit.com.ua test widget, use the [EPAM] IIT Digital Signature Library Questions Telegram channel. The user portals become available using the configured DNS names after the external configuration takes effect. Typically, DNS names are updated within one hour, although a global update can take up to 48 hours.","title":"Configuring custom DNS for user portals","component":"platform","version":"1.9.6","name":"cp-custom-dns-portals","url":"/platform/1.9.6/admin/registry-management/custom-dns/cp-custom-dns-portals.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Configuring DNS names for user portals","hash":"_configuring_dns_names_for_user_portals","id":2},{"text":"2.1. Selecting a registry and opening its settings","hash":"_selecting_a_registry_and_opening_its_settings","id":3},{"text":"2.2. Configuring DNS names for the officer portal","hash":"_configuring_dns_names_for_the_officer_portal","id":4},{"text":"2.3. Configuring DNS names for the citizen portal","hash":"_configuring_dns_names_for_the_citizen_portal","id":5},{"text":"2.4. Additional configuration outside the OpenShift cluster and registry","hash":"_additional_configuration_outside_the_openshift_cluster_and_registry","id":6}]},"77":{"id":77,"text":"Configuring custom DNS for user portals Configuring custom DNS for Keycloak","title":"Configuring custom DNS","component":"platform","version":"1.9.6","name":"custom-dns-overview","url":"/platform/1.9.6/admin/registry-management/custom-dns/custom-dns-overview.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"78":{"id":78,"text":"On this page: 1. Introduction 1.1. Signing data with a public key 1.2. How the Platform works with digital signatures 2. Digital key types used on the Platform 2.1. Platform digital signature keys 2.2. Registry digital signature keys 2.3. User data signature keys (QES) A .dat digital signature key and CA certificate are two different components of the data signing method. A .dat digital signature key is a file that contains a private key used to sign files, drivers, and other software. A .dat system signature key is usually securely stored on the software developer’s computer and not shared with other users. A CA (Certificate Authority) certificate is an electronic document containing information about the public key and the certificate owner, such as their company name, date of issue, and expiration date. CA certificates are used to verify the authenticity of software signers. Public key data signing is a cryptographic method used to ensure data integrity, authenticity, confidentiality, and veracity. This method uses a pair of keys: a private key and a public key. Keys are generated by certificate authorities licensed by the state (such as Accredited Key Certification Centers in Ukraine, for instance). Keys may also be issued by banks, state registrars, and other authorized organizations that go through mandatory audits and certifications. This approach ensures high level of trust in the keys and their use. Here is how signing data with a public key works: A message that needs to be signed is created. The hash value of the data is calculated using a hash function. The resulting hash value is encrypted using a private key. A digital signature is added to the message. The digitally signed message can be verified using the public key. Here is how the signature is verified: The digital signature is decrypted using the public key to obtain the hash value. The hash value of the original data is calculated. The calculated hash values are compared. If they match, the signature is valid, and data has not been modified after signing. All operations with keys on the Platform are handled by the digital signature subsystem, namely the digital signature service (digital-signature-ops). This service performs a set of operations for applying and verifying digital seals, as well as verifying digital signatures to ensure data immutability during cross-service interactions using specialized crypto modules. In Ukraine, the service is based on the IIT Java digital signature cryptographic library provided by the Institute of Information Technologies (IIT). Digital signature service enables the following: Receive information about the owner of a digital signature. Check the Qualified Electronic Signature (QES) used to sign the document by an officer and service recipient. Check whether the applied digital signature belongs to the user. Apply a system digital signature, or registry digital seal, to data or an electronic document. Check whether the applied digital seal belongs to the registry. There are three types of digital keys used on the Platform. Depending on which level they are used on, digital signature keys can be divided into these groups: Platform digital signature keys (Platform keys) registry digital signature keys (registry keys) user data signature keys (QES) Platform digital signature keys are used in these operations: Starting the digital-signature-ops cryptoservice pod for the Keycloak user identification and authentication service. Authenticating through external providers — for example, to encrypt data when signing in via id.gov.ua. You can configure the keys in the Control Plane admin console. To learn more about configuring Platform keys, see admin:registry-management/system-keys/control-plane-platform-keys.adoc. Registry digital signature keys are used in these operations: Starting the digital-signature-ops cryptoservice pod for the registry. (Digital seal) Signing the data that needs to be saved from the business process management system (BPMS) to the registry’s data factory. (Digital seal) Signing the documents that the system generated for registry users, such as excerpts. You can configure the keys in the Control Plane admin console when deploying or editing a registry. To learn more about configuring registry keys, see admin:registry-management/system-keys/control-plane-registry-keys.adoc. User data signature keys (QES) are used in these operations: Signing data with QES to sign in to the user portal through the IIT digital signature widget. Signing UI form data in business processes using the IIT digital signature widget.","title":"Configuring digital signature keys and certificates","component":"platform","version":"1.9.6","name":"system-keys-overview","url":"/platform/1.9.6/admin/registry-management/system-keys/system-keys-overview.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"1.1. Signing data with a public key","hash":"open-key-sign-mechanism","id":2},{"text":"1.2. How the Platform works with digital signatures","hash":"digital-signature-ops","id":3},{"text":"2. Digital key types used on the Platform","hash":"_digital_key_types_used_on_the_platform","id":4},{"text":"2.1. Platform digital signature keys","hash":"_platform_digital_signature_keys","id":5},{"text":"2.2. Registry digital signature keys","hash":"_registry_digital_signature_keys","id":6},{"text":"2.3. User data signature keys (QES)","hash":"_user_data_signature_keys_qes","id":7}]},"79":{"id":79,"text":"Document in the process of formation. The latest available release version is 1.9.5.","title":"Updating the Platform and registries to version 1.9.6: Special steps","component":"platform","version":"1.9.6","name":"special-steps","url":"/platform/1.9.6/admin/update/special-steps/special-steps.html","titles":[]},"80":{"id":80,"text":"On this page: The principle of automatic horizontal scaling under OKD cluster 1. The principle of automatic horizontal scaling of OKD-cluster nodes Object HPA (Horizontal Pod Autoscaler) — is an object that is responsible for automatically creating or deleting pod instances when minimum or maximum specified resource thresholds such as CPU and/or Memory are reached. The HPA object specifies the minimum and maximum number of pod replicas to which the value of running pod instances can be expanded or contracted. Also, in the HPA object, the limit values of resources are indicated, upon reaching which the instances of the pod are added or removed. Horizontal Autoscaling Definition apiVersion: autoscaling/v1 kind: HorizontalPodAutoscaler metadata: name: image-registry namespace: default spec: maxReplicas: 7 minReplicas: 3 scaleTargetRef: apiVersion: apps.openshift.io/v1 kind: DeploymentConfig name: image-registry targetCPUUtilizationPercentage: 75 status: currentReplicas: 5 desiredReplicas: 0 If a new pod instance needs to be added, the kube-scheduler decides which of the node instances to run the new instance on, based on the node’s free resources, such as CPU and Memory, and meta-information about where the additional pod instance can be started (taints, affinity, and anti-affinity). If none of the existing node instances in the cluster meet the requirements for launching a pod instance, an Event will be created with a message that there are no node instances on which the pod can be launched. Event example 0/2 nodes are available: 1 Insufficient memory, 1 node(s) had taints that the pod didn't tolerate. Automatic horizontal scaling of nodes (HNA) occurs based on events (Events) in the cluster about the inability to create a new Pod instance due to the lack of node instances in the cluster that meet the requirements. HNA operates with three Kubernetes objects: ClusterAutoscaler, MachineAutoScaler and MachineSet. ClusterAutoscaler - is a Kubernetes object that specifies the OKD size of the cluster to meet its current deployment requirements. CPU and Memory are resources used by cluster autoscaler when scaling instances of cluster nodes. Cluster autoscaler increases the size of the cluster when there are pod instances that cannot be started on any of the existing node instances due to a lack of required resources or the node instances not meeting the deployment requirements. The Cluster autoscaler does not expand the cluster resources beyond the limits specified in the Cluster Autoscaler definition. ClusterAutoscaler Definition apiVersion: \"autoscaling.openshift.io/v1\" kind: \"ClusterAutoscaler\" metadata: name: \"default\" spec: podPriorityThreshold: -10 resourceLimits: maxNodesTotal: 24 cores: min: 8 max: 128 memory: min: 4 max: 256 scaleDown: enabled: true delayAfterAdd: 10m delayAfterDelete: 5m delayAfterFailure: 30s unneededTime: 5m MachineAutoScaler - a Kubernetes object containing information about the limit values for scaling cluster node instances and the node instance’s membership to the corresponding MachineSet object. MachineAutoscaler Definition apiVersion: \"autoscaling.openshift.io/v1beta1\" kind: \"MachineAutoscaler\" metadata: name: \"worker-us-east-1a\" namespace: \"openshift-machine-api\" spec: minReplicas: 1 maxReplicas: 12 scaleTargetRef: apiVersion: machine.openshift.io/v1beta1 kind: MachineSet name: worker-us-east-1a MachineSet - a Kubernetes object that groups instances of cluster nodes according to the specified parameters. MachineSet Definition for AWS Cloud Provider apiVersion: machine.openshift.io/v1beta1 kind: MachineSet metadata: labels: machine.openshift.io/cluster-api-cluster: name: -- namespace: openshift-machine-api spec: replicas: 1 selector: matchLabels: machine.openshift.io/cluster-api-cluster: machine.openshift.io/cluster-api-machineset: -- template: metadata: labels: machine.openshift.io/cluster-api-cluster: machine.openshift.io/cluster-api-machine-role: machine.openshift.io/cluster-api-machine-type: machine.openshift.io/cluster-api-machineset: -- spec: metadata: labels: node-role.kubernetes.io/: \"\" providerSpec: value: ami: id: ami-046fe691f52a953f9 apiVersion: awsproviderconfig.openshift.io/v1beta1 blockDevices: - ebs: iops: 0 volumeSize: 120 volumeType: gp2 credentialsSecret: name: aws-cloud-credentials deviceIndex: 0 iamInstanceProfile: id: -worker-profile instanceType: m4.large kind: AWSMachineProviderConfig placement: availabilityZone: us-east-1a region: us-east-1 securityGroups: - filters: - name: tag:Name values: - -worker-sg subnet: filters: - name: tag:Name values: - -private-us-east-1a tags: - name: kubernetes.io/cluster/ value: owned userDataSecret: name: worker-user-data Horizontal Node Autoscaling HPA - (Horisontal Pod Autoscaler) - a Kubernetes object that automatically updates a worker resource (such as a Deployment or StatefulSet) in order to automatically scale worker resources as required. RC - (Replication Controller) - a Kubernetes object that ensures that the appropriate number of pod replicas are running at any given time. ReplicationController ensures that a specified number of pod replicas are running at any one time. DC - (Deployment Configuration) - a Kubernetes object that includes one or more Replication Controllers containing the temporal state of the deployment as a template for the pod object. HNA - (Horisontal Node Autoscaler) - a process involving Kubernetes objects that provide automatic horizontal scaling of cluster nodes. ClusterAutoscaler - cluster autoscaler configures the size of the OKD cluster to meet its current deployment requirements. MachineAutoscaler - machine autoscaler configures the number of MachinSet node instances deployed in the OKD cluster.","title":"Automatic horizontal scaling of cluster node instances","component":"platform","version":"1.9.6","name":"cluster_node_autoscaler","url":"/platform/1.9.6/arch/architecture/container-platform/cluster_node_autoscaler.html","titles":[{"text":"1. The principle of automatic horizontal scaling of OKD-cluster nodes","hash":"_the_principle_of_automatic_horizontal_scaling_of_okd_cluster_nodes","id":1}]},"81":{"id":81,"text":"On this page: 1. General description 2. Features of the Container Orchestration Platform 3. Technological stack 3.1. Scalability 3.2. Availability 3.3. Portability 3.4. Operability 3.5. Security 3.6. Observability 3.7. Extensibility =Container Orchestration Platform OpenShift is an open source container management platform that provides advanced orchestration capabilities and deployment of containerized software. It is developed on the basis of Kubernetes, provides a full stack of solutions and abstractions for developing, deploying, managing, and monitoring containers. This platform provides an opportunity to deploy your software provision in any public cloud environment, private cloud environment or on own local infrastructure, providing resilience, reliability and security for deployed software. OpenShift is a flexible platform that can be easily extended, supplemented and integrated with other tools, platforms and software. This allows you to have: monitoring and logging capabilities that provide information about the health and performance of software and infrastructure network security policies and role-based access control (RBAC) to enable secure publishing and end-user access backup and scaling of the platform and deployed software, allowing for rapid recovery of the system state and respond to load increases or decreases. distributed data stores for storing state and information of stateful applications. OpenShift is an ideal solution for organizations looking to modernize their software infrastructure and accelerate digital transformation processes. In Registry Platform, OpenShift is used as the main platform for deploying and managing containerized applications. Container orchestration Load balancing Application scaling Application monitoring Ensuring safety and reliability The high-level architecture of the container orchestration platform The OpenShift architecture consists of several virtual machines, including: Master virtual machines. Responsible for managing the overall health of the cluster, including application planning and deployment. Infrastructure and platform virtual machines. They contain system operators and applications that provide work Container Orchestration Platforms and Registry Platforms. Registered virtual machines. Run containers with registry software. During the design and development of the subsystem, the following technologies were used: OKD Kubernetes Openshift’s container orchestration platform has the ability to scale efficiently as application requirements change. This includes the ability to automatically create and deploy additional resources such as new containers or virtual machines, to handle increased load, and the ability to remove resources during periods of reduced demand for optimization use of resources and funds. The platform achieves scalability through a combination of declarative configuration, auto scaling (HPA) and automatic scaling of the cluster itself. Declarative configuration allows administrators to define and manage application resources in a consistent and repeatable manner that facilitates scaling as needed. HPA monitors the resource usage of individual applications and scales their amount up or down depending on the previous given rules, such as CPU or memory usage. Cluster autoscaling, on the other hand, is automatic creates or deletes virtual machines in the cluster depending on demand, allowing efficient use of resources and optimize costs. Openshift supports automatic load balancing and failover of application instances on different virtual machines of the cluster. This ensures that if the virtual machine is not working correctly, then it can work smoothly transfer to other healthy machines without affecting the availability of the application. Openshift supports the concept of replicas, which allows multiple instances of applications to run simultaneously. This ensures that even if one or more instances fail, the application will still be available to users through working instances. Openshift allows you to use rolling updates to deploy new versions of applications with minimal impact on users. This ensures that updates can be made without interruptions or service interruptions. The Openshift container orchestration platform and the software deployed on it are installable and portable on various infrastructure environments, from public and private cloud platforms to own local infrastructure without requiring significant changes to software or underlying infrastructure. The container orchestration platform is built by abstracting away from the infrastructure details and provides a standard runtime environment for applications regardless of where they are deployed. This is achieved through containerization, which allows packaging of applications in self-contained and portable containers, and the use of declarative configuration that automates the provision and configuration of infrastructure resources. In addition, the Container Orchestration Platform provides a set of APIs and abstractions that allow teams to operations to manage and orchestrate containerized applications in a standard and platform-independent manner. Thus, the container orchestration platform allows you to deploy and run applications in any environment without source code changes, reducing the time and effort to deploy applications and ensuring their portability. Openshift’s container orchestration platform provides a set of admin tools and APIs for management, operation, and resolution problems with clusters and applications on it, including visual interfaces, the `oc' utility console, and the OpenShift API. These tools allow administrators to view and manage cluster health, deploy new applications or upgrades, monitor performance metrics and logs, perform various checks, audits, and scaling. Platform interoperability is also achieved through infrastructure as code (IaC) practices and automation tools Terraform, which enables consistent and repeatable deployment and configuration of OpenShift clusters and related resources. The Openshift container orchestration platform provides a wide range of security features and capabilities applications and their data. These include role-based access control (RBAC), network policies, secret management, container image security, audit logging, and security context constraints (SCC). Role-based access control allows administrators to define access controls and permissions for users and applications, providing access to resources only to authorized users. Network policies allow you to restrict network traffic between applications and apply enforcement rules network segmentation. Secret management provides a secure mechanism for storing and using sensitive data such as passwords and certificates Thus, using these security features of the OpenShift Platform, it is possible to ensure the security of applications deployed in OpenShift, protecting them from unauthorized access, data breaches and other security threats. Openshift’s container orchestration platform provides performance, behavior, and health insights containerized applications running on the cluster. This includes the ability to monitor and analyze metrics related to application and infrastructure performance, as well as collection and analysis of application logs and traces. The platform has built-in observability capabilities, including support for a variety of monitoring solutions and the ability to integration with external logging and tracing systems. In addition, it provides APIs and tools to configure and managing observability, enabling operations teams to gain deep insights into behavior and state of their applications and infrastructure. The Openshift container orchestration platform provides extensive customization and extensibility of the platform itself to it met specific needs and requirements. It provides a rich list of extension points such as definitions own resources (CRD), admission controllers and operators that allow you to create your own controllers and others components that integrate with the platform itself. This allows you to build and deploy your own solutions based on OpenShift, while ensuring the use of the main functionality and advantages of the platform.","title":"","component":"platform","version":"1.9.6","name":"container-platform","url":"/platform/1.9.6/arch/architecture/container-platform/container-platform.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Features of the Container Orchestration Platform","hash":"_features_of_the_container_orchestration_platform","id":2},{"text":"3. Technological stack","hash":"_technological_stack","id":3},{"text":"3.1. Scalability","hash":"_scalability","id":4},{"text":"3.2. Availability","hash":"_availability","id":5},{"text":"3.3. Portability","hash":"_portability","id":6},{"text":"3.4. Operability","hash":"_operability","id":7},{"text":"3.5. Security","hash":"_security","id":8},{"text":"3.6. Observability","hash":"_observability","id":9},{"text":"3.7. Extensibility","hash":"_extensibility","id":10}]},"82":{"id":82,"text":"Liquibase extension tag that allows for the changing of configurations that influence the behaviour of the generated API code for the created registry tables. Main tag parameters Parameter name Allowed values Description table Names of the tables created by previous Liquibase-changesets Table that requires the applied changes Parameters for the nested attribute tags Attribute name Allowed values Description bulkLoad true/false if the endpoint, which allows for the transactional storing of several entities in one request, will be generated readMode sync/async how will data reading be performed, synchronously or asynchronously (sync - on the registry-rest_api level, async - via rest-api→ registry-kafka-api → rest-api) Processing this tag will result in requests to the registry DB, similar to the following: For the bulkLoad attribute INSERT INTO public.ddm_liquibase_metadata( change_type, change_name, attribute_name, attribute_value) VALUES (\"bulkLoad\", \"table_from_attribute\", \"bulkLoad\", \"true\"); For the readMode attribute INSERT INTO public.ddm_liquibase_metadata( change_type, change_name, attribute_name, attribute_value) VALUES (\"readMode\", \"alterTableApi\", \"table_from_attribute\", \"async\");","title":"alterTableApi","component":"platform","version":"1.9.6","name":"alter-table-api","url":"/platform/1.9.6/arch/architecture/liquibase-ddm-ext/alter-table-api.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Liquibase-scheme","hash":"_liquibase_scheme","id":2},{"text":"Usage example","hash":"_usage_example","id":3},{"text":"Parameter description","hash":"_parameter_description","id":4},{"text":"Generated requests to the DB","hash":"_generated_requests_to_the_db","id":5}]},"83":{"id":83,"text":"The tag required for the creation of tables in the DB is standard for Liquibase, but in liquibase-ddm-ext, Platform-specific parameters processing is added. It is stored in one scheme with other standard Liquibase tags, in the official documentation (currently, version 4.15 is used) liquibase-ddm-ext-specific attributes: CREATE TABLE pd_processing_consent Parameter name Allowed values Description historyFlag true for the selected table, this parameter creates a corresponding historical table with _hst suffix, where all table changes are logged bulkLoad true/false defines if the endpoint, which allows for the transactional storing of several entities in one request, will be generated for the modification of generated services API readMode sync/async for the modification of generated services API, defines how the data reading will be performed, synchronously or asynchronously (sync - on the registry-rest_api level, async - via rest-api→ registry-kafka-api → rest-api) isObject true/false defines a table as an object (connection with the subject table is added) Attribute name Allowed values Description classify private/confidential classifies data in a column as personal autoGenerate A pattern for the value generation in a column (for example, АА-{dd-MM-yyyy}-{SEQ}) for the generation of unique values in the column with a defined pattern Requests, generated for the table from the example CREATE TABLE registry.pd_processing_consent_hst (consent_id UUID NOT NULL, consent_date TIMESTAMP WITH TIME ZONE NOT NULL, person_gender TYPE_GENDER NOT NULL, person_full_name TEXT NOT NULL, person_pass_number TEXT NOT NULL, auto_generated_number TEXT NOT NULL, ddm_created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL, ddm_created_by TEXT NOT NULL, ddm_dml_op CHAR(1) NOT NULL, ddm_system_id UUID NOT NULL, ddm_application_id UUID NOT NULL, ddm_business_process_id UUID, ddm_business_process_definition_id TEXT, ddm_business_process_instance_id TEXT, ddm_business_activity TEXT, ddm_business_activity_instance_id TEXT, ddm_digital_sign TEXT, ddm_digital_sign_derived TEXT, ddm_digital_sign_checksum TEXT, ddm_digital_sign_derived_checksum TEXT, CONSTRAINT pk_pd_processing_consent PRIMARY KEY (consent_id), CONSTRAINT ui_pd_processing_consent_hst UNIQUE (consent_id, ddm_created_at)); ALTER TABLE registry.pd_processing_consent_hst DROP CONSTRAINT pk_pd_processing_consent; REVOKE ALL PRIVILEGES ON TABLE pd_processing_consent_hst FROM PUBLIC; GRANT SELECT ON pd_processing_consent_hst TO application_role; CREATE TABLE registry.pd_processing_consent (consent_id UUID NOT NULL, consent_date TIMESTAMP WITH TIME ZONE NOT NULL, person_gender TYPE_GENDER NOT NULL, person_full_name TEXT NOT NULL, person_pass_number TEXT NOT NULL, auto_generated_number TEXT NOT NULL, ddm_created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL, ddm_created_by TEXT NOT NULL, ddm_updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL, ddm_updated_by TEXT NOT NULL, CONSTRAINT pk_pd_processing_consent PRIMARY KEY (consent_id), UNIQUE (auto_generated_number)); REVOKE ALL PRIVILEGES ON TABLE pd_processing_consent FROM PUBLIC; GRANT SELECT ON pd_processing_consent TO application_role; CREATE SEQUENCE IF NOT EXISTS pd_processing_consent_auto_generated_number_seq INCREMENT BY 1 OWNED BY pd_processing_consent.auto_generated_number; GRANT USAGE ON SEQUENCE pd_processing_consent_auto_generated_number_seq TO application_role; insert into ddm_liquibase_metadata(change_type, change_name, attribute_name, attribute_value) values ('autoGenerate', 'pd_processing_consent', 'auto_generated_number', 'АА-{DDMMYYYY}-{SEQ}'); insert into ddm_liquibase_metadata(change_type, change_name, attribute_name, attribute_value) values ('bulkLoad', 'pd_processing_consent', 'bulkLoad', 'true'); INSERT INTO public.ddm_db_changelog (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('table pd_processing_consent', 'registry owner', 'main-liquibase.xml', NOW(), 55, '8:1d833a79f2d827609a61ac1df5354bd4', 'createTable tableName=pd_processing_consent', 'CREATE TABLE pd_processing_consent', 'EXECUTED', NULL, NULL, '4.5.0', '7604867906');","title":"createTable","component":"platform","version":"1.9.6","name":"create-table-api","url":"/platform/1.9.6/arch/architecture/liquibase-ddm-ext/create-table-api.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Liquibase-scheme","hash":"_liquibase_scheme","id":2},{"text":"Usage example","hash":"_usage_example","id":3},{"text":"Parameters description","hash":"_parameters_description","id":4},{"text":"Generated requests to the DB","hash":"_generated_requests_to_the_db","id":5}]},"84":{"id":84,"text":"To create registry physical data model for PostgreSQL, we use Liquibase. By default, Liquibase supports objects deployment and versioning in DB, meaning the creation/deletion of tables, creation of connections between these tables, creation of views, configuration of constraints, etc. For this purpose Liquibase has a number of constructions — change types, each one defining a certain version of changes to the DB, and is formed with XML-tags. For example, , , etc. Within the Registry Platform, Liquibase is used as the sole instrument for operations with physical data model in PostgreSQL, and its standard functionality is insufficient to cover all the possible scenarios of work with registry regulations. For this reason, the following solutions have been developed: liquibase-ext-schema Liquibase scheme that expands the standard Liquibase tags and attributes list with new Platform-specific ones liquibase-ddm-ext Liquibase extensions library that includes program processing of tags and attributes added in liquibase-ext-schema, and modifies the behaviour for default tags and attributes liquibase-ddm-ext - a library that expands Liquibase functionality, and is responsible for the processing of XML-tags and attributes that may be used in registry regulations modelling. This library adds the processing of Platform-specific new tags and attributes, and also changes the processing logic for some of the tags included in Liquibase by default. The extension uses all the main principles provided to Liquibase developers and users (details), and uses the mechanisms provided to extensions developers (examples of other extensions created by Liquibase developers for open use: https://github.com/orgs/liquibase/repositories). The solution is used within regulations publication pipeline (registry-regulation-publication-pipeline) on data model deployment stage (create-schema stage of the registry-regulations-data-model pipe) for the filling of registry DB scheme, and creation of the metadata required to generate data-model services. registry-regulation-publication-pipeline - calls the Liquibase-utility on regulations publication stage dataplatform-jenkins-agent - imports the library to pom.xml for further usage by regulations publication pipeline liquibase-ext-schema - extended XSD-scheme of Liquibase tags and attributes that may be used in Platform registry development. It is included in all regulations files processed by Liquibase using liquibase-ddm-ext service-generation-utility - generates the registry-model, registry-rest-api, registry-kafka-api, and registry-soap-api services, using database scheme, filled by Liquibase using liquibase-ddm-ext Tag name Included in standard Liquibase Description addColumn yes extends the logic of Liquibase-tag for adding columns to existing tables createAnalyticsIndex no allows for the creation of an index for a previously created view on a DB replica createAnalyticsView no for the creation of analytical view on a DB replica createCompositeEntity no for the creation of metadata required to generate the endpoint for storing of several entities within one transaction, in registry-rest-api createDomain no for the creation of user data types (domains) createMany2Many no for the creation of many-to-many inter-table connections, used for storing and receiving data createSearchCondition no for the creation of search condition from the DB with certain parameters createSimpleSearchCondition no for the creation of a simple search condition (search by one field in one table) createTable yes extends the logic of Liquibase-tag for new table creation createType no for the creation of ENUM data types distributeTable no for the creation of distributed tables dropAnalyticsView no for the deletion of analytical view from the DB dropColumn yes рextends the logic of Liquibase-tag for the deletion of a column from a table in DB dropDomain no for the deletion of user data types (domains) dropSearchCondition no for the deletion of search conditions from DB dropType no for the deletion of ENUM data types exposeSearchCondition no for the creation of metadata required to generate the endpoint for search conditions, accessible from external systems, in registry-rest-api grantAll no for the provision of rights for all analytical views grant no for the provision of rights for a separate view makeObject no for the defining of a existing table as an object (added with links subject table, which was previously created) modifyDataType yes extends the logic of Liquibase-tag for the changing of data type in table column partialUpdate no for the creation of metadata required to generate partial entity update endpoints in registry-rest-api (for certain defined columns) rbac no for the creation of metadata required to control the access to registry-rest-api endpoints for the defined roles referenceTable no for the creation of reference-table renameColumn yes extends the logic of Liquibase-tag for table column renaming revokeAll no for the deletion of rights for all analytical views revoke no for the deletion of rights for a separate view rls no for the application of Row-Level Security rules to work with data in a table tableReadParameters no or the creation of metadata required to generate proper data read requests in registry-rest-api (with/without attached entities, etc.) truncateLocalDataAfterDistributingTable no for local data deletion after the creation of a distributed table undistributeTable no for the cancellation of table distribution function In the general process of data model deployment by the regulations publication pipeline, the execution of required Liquibase-scripts by the extension is performed on the create-schema stage. Example of a pipe for the publication of data model in Jenkins. liquibase-ddm-ext is called on the create-schema stage The diagram that displays the approximate structure of packets in an extension, and the main points that comprise the extension of Liquibase default functionality (AbstractChange, CreateTableChange classes, etc.) Besides the creation of DB scheme, liquibase-ddm-ext also fills the tables with metadata required for the correct generation of registry-services. Tables where the metadata goes: ddm_liquibase-metadata, ddm_rls_metadata, ddm_role_permission. Table for metadata that doesn’t require a structure described in a separate table. CREATE TABLE public.ddm_liquibase_metadata ( metadata_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, change_type TEXT NOT NULL, change_name TEXT NOT NULL, attribute_name TEXT NOT NULL, attribute_value TEXT NOT NULL, created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL, CONSTRAINT pk_ddm_liquibase_metadata PRIMARY KEY (metadata_id) ); Column name Function Example change_type metadata type search_condition change_name the object that owns the metadata search conditions names attribute_name name of one attribute set by change pagination attribute_value value for the attribute limit The table that contains information on Row-Level Security rules that must be applied to registry-rest-api requests. CREATE TABLE public.ddm_rls_metadata ( rls_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, name TEXT NOT NULL, type TEXT NOT NULL, jwt_attribute TEXT NOT NULL, check_column TEXT NOT NULL, check_table TEXT NOT NULL, CONSTRAINT pk_ddm_rls_metadata PRIMARY KEY (rls_id) ); Column name Function Example name name of rule change write_rls_katottg type operation to which the rule will apply write jwt_attribute jwt-token attribute, where all the information required for checking is contained katottg_jwt_attr check_table table, which the RLS is applied to katottg_table check_column table column, where the values will be checked for the RLS katottg_value The table that contains information for RBAC data access parameters CREATE TABLE public.ddm_role_permission ( permission_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, role_name TEXT NOT NULL, object_name TEXT NOT NULL, column_name TEXT, operation TYPE_OPERATION NOT NULL, created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL, CONSTRAINT pk_ddm_role_permission PRIMARY KEY (permission_id) ); Column name Function Example role_name user role that is being configured officer object_name object, access to which is being restricted table name, or search condition name column_name an attribute of the object, access to which is being restricted table column, or search condition column operation operation type (read, write, etc.) S / I / U / D","title":"liquibase-ddm-ext","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/liquibase-ddm-ext/overview.html","titles":[{"text":"Problematics","hash":"_problematics","id":1},{"text":"Overview","hash":"_overview","id":2},{"text":"Implementation principles","hash":"_implementation_principles","id":3},{"text":"Usage scenarios","hash":"_usage_scenarios","id":4},{"text":"Adjacent components","hash":"_adjacent_components","id":5},{"text":"List of extensions","hash":"_list_of_extensions","id":6},{"text":"Diagrams","hash":"_diagrams","id":7},{"text":"DB","hash":"_db","id":8},{"text":"ddm_liquibase_metadata","hash":"_ddm_liquibase_metadata","id":9},{"text":"Table structure","hash":"_table_structure","id":10},{"text":"Table columns function","hash":"_table_columns_function","id":11},{"text":"ddm_rls_metadata","hash":"_ddm_rls_metadata","id":12},{"text":"Table structure","hash":"_table_structure_2","id":13},{"text":"Table columns function","hash":"_table_columns_function_2","id":14},{"text":"ddm_role_permission","hash":"_ddm_role_permission","id":15},{"text":"Table structure","hash":"_table_structure_3","id":16},{"text":"Table columns function","hash":"_table_columns_function_3","id":17}]},"85":{"id":85,"text":"On this page: 1. General description 2. Functions of the component 3. Technical design of the component 4. Constituents of the component 5. Technology stack 6. Component quality attributes 6.1. Reliability S3-compatible data storage that provides reliable and scalable storage for backup copies of the Platform and registries. Storage of backup copies of central components Keeping backup copies of registries deployed on the platform Storage of backup copies of operational S3-storage data Component name Representation Source Appointment Repository of backup copies of the Platform platform-minio 3rd-party S3-compatible data storage that provides reliable and scalable storage of backup copies of the Platform and registries The following technologies were used in the design and development: * MinIO Platform backup copy storage provides reliable and safe storage of backup copies of the Platform and registers.","title":"Storage of backup copies of the Platform","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/platform-backup-storage/overview.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Functions of the component","hash":"_functions_of_the_component","id":2},{"text":"3. Technical design of the component","hash":"_technical_design_of_the_component","id":3},{"text":"4. Constituents of the component","hash":"_constituents_of_the_component","id":4},{"text":"5. Technology stack","hash":"_technology_stack","id":5},{"text":"6. Component quality attributes","hash":"_component_quality_attributes","id":6},{"text":"6.1. Reliability","hash":"_reliability","id":7}]},"86":{"id":86,"text":"Installer a set of software tools for deploying the Platform To deploy the Registry Management Platform, the Installer is used, which is delivered in the form of a zip archive Structure of the Installer: INIT-CHECK checking the necessary parameters and availability of certificates digital-signature-ops (for initial deployment only) ENCRYPTION-ETCD setting up ETCD encryption and validating Openshift certificates INSTALL-CLUSTER-MGMT deployment of basic components cluster-mgmt catalog-source storage keycloak-operator-crd (subcomponent control-plane-installer) logging service-mesh INSTALL-NEXUS deployment of control-plane-nexus (docker image repository and xsd) VAULT-INSTALL deployment of central Vault MINIO-INSTALL deployment of central Minio INIT-NEXUS loading docker images INSTALL-ADDITIONAL-COMPONENTS downloading of digital-signature-ops certificates and deployment of user-management INSTALL-CONTROL-PLANE deployment of Control Plane components NEXUS-RESOURCE-UPLOAD downloading of nexus resources (xsd) BACKUP-CREDENTIALS access parameters in Minio USAGE auxiliary module for displaying usage information install.sh","title":"Description and structure of the Installer","component":"platform","version":"1.9.6","name":"installer-structure","url":"/platform/1.9.6/arch/architecture/platform-installer/installer-structure.html","titles":[{"text":"Definitions","hash":"_definitions","id":1},{"text":"Platform deployment sequence diagram","hash":"_platform_deployment_sequence_diagram","id":2},{"text":"Platform upgrade sequence diagram","hash":"_platform_upgrade_sequence_diagram","id":3},{"text":"Description of Installer modules (functions.sh)","hash":"_description_of_installer_modules_functions_sh","id":4}]},"87":{"id":87,"text":"A Component that provides the ability to install and update an instance of the Registry Platform. Functions of the component Installation of the Register Platform Updating the Registers Platform Deployment of the component Central service for managing secrets of the Platform Deployment of the component Storage of backup copies of the Platform This diagram shows the components included in the Platform resource state management component and their interaction with other subsystems. The name of the component Representation Application type Source Prescription Platform resource state management component control-plane-installer backend origin Archive of Platform components and registries, scripts and components for deploying the Platform of Registries with aggregated components on the prepared infrastructure During the design and development of the subsystem, the following technologies were used: Terraform Bash OKD The Platform resource health component is easy to understand and use and has clear and concise application instructions. The Platform resource state management component is designed with compatibility between different infrastructure providers in mind and is installed both in cloud infrastructure environments (AWS) and in local server equipment (vSphere). The Platform resource state management component is designed with backward compatibility in mind and preserves existing features, integrations, and interactions with users, thereby reducing disruption and ensuring a smooth transition when implementing new updates and improvements to the Registries Platform.","title":"Component for managing the state of Platform resources","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/platform-installer/overview.html","titles":[{"text":"General description","hash":"_general_description","id":1},{"text":"Technical design of the component","hash":"_technical_design_of_the_component","id":2},{"text":"Constituent components","hash":"_constituent_components","id":3},{"text":"Technology stack","hash":"_technology_stack","id":4},{"text":"Component quality attributes","hash":"_component_quality_attributes","id":5},{"text":"Usability","hash":"_usability","id":6},{"text":"Portability","hash":"_portability","id":7},{"text":"Upgradability","hash":"_upgradability","id":8}]},"88":{"id":88,"text":"On this page: 1. General description 2. Component functions 3. == Technical design of component 4. Technology stack 5. Constituents of the component 6. Component quality attributes 6.1. Security A component that provides Auto unseal operations for secret management and encryption subsystems. Provision of automatic unlocking (unseal) of the subsystem of managing secrets and encryption of the Platform The following technologies were used in the design and development: HashiCorp Vault Component name Representation Source Appointment Central platform secret management service platform-vault 3rd-party Provision of Auto unseal operation for secret management and encryption subsystems Central Platform secrets management service provides automatic unpacking (unseal) of subsystems of secrets management and encryption of the Platform and Registers.","title":"Central service for managing secrets of the Platform","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/platform-secret-management/overview.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Component functions","hash":"_component_functions","id":2},{"text":"3. == Technical design of component","hash":"_technical_design_of_component","id":3},{"text":"4. Technology stack","hash":"_technology_stack","id":4},{"text":"5. Constituents of the component","hash":"_constituents_of_the_component","id":5},{"text":"6. Component quality attributes","hash":"_component_quality_attributes","id":6},{"text":"6.1. Security","hash":"_security","id":7}]},"89":{"id":89,"text":"The page is under development.","title":"Access control","component":"platform","version":"1.9.6","name":"access-control","url":"/platform/1.9.6/arch/architecture/security/access-control.html","titles":[]},"90":{"id":90,"text":"The page is under development.","title":"Data classification","component":"platform","version":"1.9.6","name":"data-classification","url":"/platform/1.9.6/arch/architecture/security/data-classification.html","titles":[]},"91":{"id":91,"text":"The page is under development.","title":"Data encryption at rest","component":"platform","version":"1.9.6","name":"data-encryption-at-rest","url":"/platform/1.9.6/arch/architecture/security/data-encryption-at-rest.html","titles":[]},"92":{"id":92,"text":"The page is under development.","title":"Data encryption in transit","component":"platform","version":"1.9.6","name":"data-encryption-in-transit","url":"/platform/1.9.6/arch/architecture/security/data-encryption-in-transit.html","titles":[]},"93":{"id":93,"text":"The page is under development.","title":"Data integrity","component":"platform","version":"1.9.6","name":"data-integrity","url":"/platform/1.9.6/arch/architecture/security/data-integrity.html","titles":[]},"94":{"id":94,"text":"The page is under development.","title":"Data retention","component":"platform","version":"1.9.6","name":"data-retention","url":"/platform/1.9.6/arch/architecture/security/data-retention.html","titles":[]},"95":{"id":95,"text":"The page is under development.","title":"Security Architecture","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/security/overview.html","titles":[]},"96":{"id":96,"text":"The page is under development.","title":"Secret management","component":"platform","version":"1.9.6","name":"secret-management","url":"/platform/1.9.6/arch/architecture/security/secret-management.html","titles":[]},"97":{"id":97,"text":"The page is under development.","title":"Secret persistence","component":"platform","version":"1.9.6","name":"secret-persistence","url":"/platform/1.9.6/arch/architecture/security/secret-persistence.html","titles":[]},"98":{"id":98,"text":"The page is under development.","title":"Secure design principles","component":"platform","version":"1.9.6","name":"secure-design-principles","url":"/platform/1.9.6/arch/architecture/security/secure-design-principles.html","titles":[]},"99":{"id":99,"text":"The page is under development. In the context of data registries, where valuable information is collected, processed, and maintained, the significance of robust regulations and data privacy measures becomes paramount. Data registries serve as critical repositories of sensitive data, ranging from personal records to vital statistics, making adherence to data protection regulations a vital ethical and legal imperative. The document underscores the fundamental role that data privacy and regulatory compliance play in safeguarding the integrity, confidentiality, and accessibility of the information entrusted to the Registry Platform. The Registry platform has been developed according to Ukrainian national standards and data privicy laws. It holds the Certificate of Compliance of Comprehensive information protection system (The Ukrainian term 'КСЗІ' stands for 'Комплексна система захисту інформації'). It is the result of a state examination in the field of technical information protection. The Registry Platform complying with key concepts of the Ukrainian Personal Data Protection Law. While aligning of technical controls with Ukrainian Personal Data Protection Law, The Registry Platform also has the potential to extend its compliance to the GDPR-ready state, as many of the key concepts and requirements overlap. Data protection principles, such as lawful processing, data minimization, and accountability, are integral to both Ukrainian and EU data protection laws. The platform’s potential to become GDPR-ready signifies its dedication to meeting high data protection standards, extending its commitment to users' privacy and security beyond national borders. Addititonally The Registries Platform is developed following the next security standards: The software security posture management acording to OWASP Software Assurance Maturity Model (SAMM). The OWASP Application Security Verification Standard (ASVS) Project as a basis for testing web application technical security controls and source of requirements for secure development. Center for Internet Security Software Supply Chain Security Guide (CIS SSCS) as a basis for supply chain security The Registry Platform is subject to compliance with mentioned regulations and standards to ensure the secure and lawful handling of user data. This section defines the scope of compliance efforts, delineates the specific product-related responsibilities, and focuses on the platform’s readiness to adhere to GDPR principles. Platform-Specific Compliance: The compliance and regulatory efforts are solely focused on the functionalities and data processing activities of the Registry Platform. Any compliance measures mentioned in this document refer exclusively to the platform’s data handling capabilities. The platform’s compliance scope encompasses all data processing activities performed directly by the Registry Platform itself. It does not extend to any data processing activities conducted by third-party integrations or external services utilized by the platform and configured by developer of platform regulations. The compliance efforts center on the protection of personal data collected, stored, processed, and transmitted within the Registry Platform. Other data processing activities within the organization (platform owner) fall outside the scope of this compliance documentation. GDPR-Readiness: The Registry Platform is designed with a focus on Personal Data Protection Law thus transitively on GDPR-readiness, aiming to align with the key principles and requirements of data privacy regulations. The platform is intended to support the rights of data subjects, including the right to access, rectify and erase on demand of their personal data. The Registry Platform intends to maintain robust security measures, such as data encryption, access controls and audit to safeguard user data. The platform’s compliance efforts also encompass ensuring data transparency and accountability in its data processing activities. Exclusions: This compliance document does not cover target organization’s (platform owner) general data protection practices or policies. It solely addresses the software part of platform’s compliance scope. The Registry Platform may interact with other systems or services operated by the organization (platform owner). However, this compliance document does not extend to the compliance status of those external systems. Third-party applications, services, or integrations utilized by the product are the responsibility of their respective owners and fall outside the scope of this compliance documentation The Data Protection Measures implemented in the Registry Platform are designed to ensure the security, confidentiality, and integrity of personal data processed by the software. Below are the key data protection measures implemented: All sensitive data, including personal information, is stored on encrypted file systems. For more information, please visit Data encryption at rest Data transmitted between the software and external systems, such as APIs or user devices, is encrypted using industry-standard cryptographic protocols (e.g., TLS/SSL). For more information, please visit Data encryption in transit Role-based access controls (RBAC) are implemented to restrict access to personal data based on the principle of least privilege. Access to sensitive data is limited to authorized personnel only, and authentication mechanisms are in place to verify users' identities. For more information, please visit: Modeling business processes and delimiting access rights (RBAC) Demarcation of organizations' access to business process tasks at the level of user attributes Hierarchical model The platform by itself follows the principle of data minimization. Hovewer forms and data modeling capabilities are fully owned by developers of registry regulations. Thus developers should carefully select the type and amount of information requested and collected. By doing so, they aim to limit the data collection process to the bare essentials, thereby reducing the potential risks associated with excessive data exposure. This not only safeguards user privacy but also aligns with prevailing data protection regulations that emphasize the importance of minimizing personal data processing. Personal data is retained only for as long as required to fulfill the intended purposes, since Registry Platform has been developed to meet a legal obligation under national legislation for govermental organizations the prolonged storage of user data is utilized. The Registry Platform doesn’t utilize pseudonymization techniques to replace identifiable information with reversible identifiers in order to reducing the risk of unauthorized access in favour of other more critical security controls. Secure coding guidelines are followed during the software development process to mitigate common vulnerabilities (e.g., injection attacks, cross-site scripting). Regular code reviews and static analysis tools are employed to identify and address security weaknesses. For more information, please visit: Security standards Development and testing methodologies Development security controls The platform logs all data access and processing activities, including user actions and system events. Centralized monitoring and log analysis tools are used to detect and respond to suspicious activities and potential security incidents. The platform doesn’t log any sensative information. For more information, please visit: Logging subsystem Monitoring subsystem The Registry Platform limit the collection of PII to the minimum that is relevant, proportional and necessary for the identified purposes. It means that platform limits the amount of PII that the organization (platform owner) collects indirectly (e.g. through web logs, system logs, etc.). The organization (platform owner) should limit the collection of PII to what is adequate, relevant and necessary in relation to the identified purposes throught the registry regulations modeling. There is only one place where personal data leave the footprint beyond the bussiness process scope is a historical data which is gathered as non-repudiation control. The Registry Platform limit the processing of PII to that which is adequate, relevant and necessary for the identified purposes. All the personal data collected through the modeled bussiness processes processed to fulfill objectives of user-initiated request only. Default settings prioritize data protection, minimizing the processing of personal data by disabling external system integrations. All the data related to bussiness processes are transparently available for the data principal in user cabinet. The Registry Platform ensure that PII is as accurate and complete as is necessary for the purposes for which it is processed. In order to achieve it ambedded data validation control on bussiness process modeling stage, digital documents validation and registry regultaion changes as well. Temporary files and data which are produced as intermediaries of bussiness processes execution are automatically deleted once appropriate process is finished. The Registry Platform currently does not implement any specific data disposal approach. Transmission of PII is controlled by ensuring that only authorized systems have access to transmission systems, and by following the appropriate processes to ensure that PII is transmitted without compromise to the correct recipients. The Registry Platform utilize secure data exchange gateway. Its a modern organizational and technical solution that allows state bodies and local self-government bodies to use secure information interdepartmental interactions via the Internet by exchanging electronic messages between their information systems. The Registry Platform is designed to satisfy almost all requirements of organisation in terms of data processing due to extensive registry regulation development capabilities. Registry regulation modeler can create a bussiness processes which will let the data principal to access provided information in order to satisfy right to access. Another bussiness process can be created and designed in a way to satisfy the right for rectification. It can utilize different approaches such as data re-upload for actualisation or correction purposes. The Registry Platform has been developed to meet legal obligation under national legislation for govermental organizations thus the prolonged storage of user data is utilized. The platform is still subject to data protection laws and regulations, which may include provisions regarding the right to erasure. These laws outline the circumstances under which individuals can request the deletion of their personal data. User is able to submit written erasure requests in order to trigger data erasure process. Upon receiving a valid erasure request, the organization (platform owner) assesses whether the conditions for erasure are met based on legal requirements and the specific context of the data processing. If the erasure request is approved, the platform administrator takes steps to delete the personal data in accordance with the applicable laws. There is only one place where personal data leave the footprint so far is a historical data which is gathered as non-repudiation control. Certain exceptions may apply, such as legal obligations or public interest considerations that override the right to erasure. Organization (platform owner) must carefully balance individual rights with other legal obligations. Security testing process is comprehensively described on Security Testing page Effective training and awareness programs play a crucial role in ensuring the responsible and secure use of the platform and the protection of personal data. It is important to emphasize that while the platform facilitates data processing and security measures, training is the responsibility of the organization (platform owner) and is not inherently built into the platform itself.","title":"Standartds and Compliance","component":"platform","version":"1.9.6","name":"standarts-and-compliance","url":"/platform/1.9.6/arch/architecture/security/standarts-and-compliance.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Applicable Regulations and Standards","hash":"_applicable_regulations_and_standards","id":2},{"text":"Scope of Compliance","hash":"_scope_of_compliance","id":3},{"text":"Data Protection Measures","hash":"_data_protection_measures","id":4},{"text":"Encryption at Rest and in Transit","hash":"_encryption_at_rest_and_in_transit","id":5},{"text":"Access Controls","hash":"_access_controls","id":6},{"text":"Data Minimization and Retention","hash":"_data_minimization_and_retention","id":7},{"text":"Pseudonymization","hash":"_pseudonymization","id":8},{"text":"Secure Development Practices","hash":"_secure_development_practices","id":9},{"text":"Data Access Logging and Monitoring","hash":"_data_access_logging_and_monitoring","id":10},{"text":"User Data Processing","hash":"_user_data_processing","id":11},{"text":"Limit collection","hash":"_limit_collection","id":12},{"text":"Limit processing","hash":"_limit_processing","id":13},{"text":"Accuracy and quality","hash":"_accuracy_and_quality","id":14},{"text":"Temporary files","hash":"_temporary_files","id":15},{"text":"Disposal","hash":"_disposal","id":16},{"text":"PII transmission controls","hash":"_pii_transmission_controls","id":17},{"text":"Data Subject Rights","hash":"_data_subject_rights","id":18},{"text":"Right to Access and Rectification","hash":"_right_to_access_and_rectification","id":19},{"text":"Right to Erasure (Right to be Forgotten):","hash":"_right_to_erasure_right_to_be_forgotten","id":20},{"text":"Security Testing and Validation","hash":"_security_testing_and_validation","id":21},{"text":"Training and Awareness","hash":"_training_and_awareness","id":22}]},"100":{"id":100,"text":"On this page: 1. Overview 2. Modelling and configuring the buttons for alternative branches on the business process forms 2.1. Configuring the Button component to return to the 1st form 2.2. Configuring the Button component to return to the 2nd form 2.3. Configuring the Button component to cancel the data entered in the form and terminate the process 3. Modelling and configuring alternative branches in a business process 3.1. Modelling returning to form 1 3.2. Modelling returning to form 2 3.3. Modeling cancellation of data entered in the form and returning to the main menu Alternative branches in business processes allow an officer to revert to the previous form of a process and modify the entered data, or cancel information entered in the form and return to the service menu. This is possible if the business process comprises two or more consequent tasks assigned to an officer, or when the process is modelled with a start form. There are 2 scenarios for using this functionality An officer can revert to the previous task in the Portal, in accordance with the navigation in the modelled branch of a business process (Step back). An officer can cancel the data entered in the form in the Portal, terminate the process through the alternative branch and return to the service menu (Cancel). Both scenarios are implemented by means of the navigation in the Button component in the form for signing data using QES. The buttons modelled using the Button component are located on the data signature form, under the QES widget, and are visually separated from the widget. Every transition via an alternative branch = an individual Button key with navigation on the forms. Using the navigation function and the _action_code attribute in the Button component, it is possible to set up returning to the previous forms in a business process, and cancelling the information entered in a form and returning to the service menu. Clicking a button with modelled Navigation results in either returning to one of the previous forms or termination of the task and returning to the service menu. In this case, the _action_code field in the form data takes the value of the Action code parameter. The buttons modelled using the Button component are located in the data signature form, under the QES widget, and are visually separated from the widget. Log in to Regulations administrator portal and press Log on service. Go to the UI form modelling service for business processes. Create a new form for data signature using QES, or open one of the previously modelled forms. For details about modelling UI forms for business processes, see: bp-modeling/forms/registry-admin-modelling-forms.adoc Find the Components section in the forms for data signature modelling menu. Select the Button component, drag it and drop into the modelling central panel. The page with the Button component settings opens. Go to the Display tab: Enter the component (button) name into the Label field. For example, Return to form 1. In the Action field, select the Navigation type from the dropdown menu. This means that the button will be used for navigation. In the Action code field, enter the navigation destination. For example, enter the return_to_first value for returning to the first form. In the Theme field, select the theme for the component from the dropdown menu. For example, select Secondary. Go to the API tab. In the Property name field, enter the API endpoint name. For example, returnToFirst. Click Save to save the changes made to the form component. Configuring the Button component to return to any form using the navigation function is identical, except the Action code value, and Property name for the API endpoint (see details in Configuring the Button component to return to the 1st form). Open the Button component settings. Go to the Display tab. Enter the component (button) name in the Label field. For example, Return to form 2. In the Action field, select the Navigation type from the dropdown list. This means that the button will be used for navigation. In the Action code field, enter the navigation destination. For example, enter the return_to_second value for returning to the second form. In the Theme field, select the theme for the component from the dropdown menu. For example, select Secondary. Go to the API tab. In the Property name field, enter the API endpoint name. For example, returnToSecond. Click Save to save the changes made to the form component. Configuring the Button component to cancel the data entered in the form, terminate the business process and return to the service menu is identical to returning to the previous forms using the navigation function, except the Action code value, and Property name for the API endpoint (see details in Configuring the Button component to return to the 1st form). Open the Button component settings. Go to the Display tab. Enter the component (button) name in the Label field. For example, Cancel. In the Action field, select the Navigation type from the dropdown list. This means that the button will be used for navigation. In the Action code field, enter the navigation action. For example, enter the cancel value for cancelling the data entered in a form and returning a user to the main menu. In the Theme field, select the theme for the component from the dropdown menu. For example, select Secondary. Go to the API tab. In the Property name field, enter the API endpoint name. For example, cancel. Click Save to save the changes made to the form component. Preconditions A modelled synthetic business process allowing to set up corresponding alternative branches: Green branch: To return to a form with the form 1 name. Blue branch: To return to a form with the form 2 name. Violet branch: To cancel the entered data, termination of the business process and returning the service menu. Select a branch navigating to the form you want to return to. In our case that is the green branch. Enter the branch name in the Name field. For example, Return to form 1. In the Condition Type field, select the Expression type. In the Expression field, model navigation to form 1 using the submission() JUEL expression. You can find the detailed description of the available JUEL functions in: registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc Example 1. Modelling returning to form 1 using the submission() JUEL function ${submission('SignForm').formData.hasProp('_action_code') && submission('SignForm').formData.prop('_action_code').value().equals('return_to_first')} Explanation In the first part, before &&, the expression checks whether '_action_code' exists in the form: {submission('SignForm').formData.hasProp('_action_code') In the second part, after &&, the expression checks what does the '_action_code' value equal to. In our case, action code equals to 'return_to_first': submission('SignForm').formData.prop('_action_code').value().equals('return_to_first') 'return_to_first' is the value of the Action code field when configuring a form in the form modelling service (configuration of a button navigating to the 1st form). See Configuring the Button component to return to the 1st form for details about setting the form configuration. Modelling returning to any forms through alternative branches is almost identical. Only the action_code parameter value changes that is identified when modelling a form for a business process. You have to pass this value to the submission() function. Select a branch navigating to the form you want to return to. In our case that is the blue branch. Enter the branch name in the Name field. For example, Return to form 2. In the Condition Type field, select the Expression type. In the Expression field, model navigation to form 2 using the submission() JUEL expression. You can find the detailed description of the available JUEL functions in: registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc Example 2. Modelling returning to form 2 using the submission() JUEL function ${submission('SignForm').formData.hasProp('_action_code') && submission('SignForm').formData.prop('_action_code').value().equals('return_to_second')} Explanation In the first part, before &&, the expression checks whether '_action_code' exists in the form for data signing: {submission('SignForm').formData.hasProp('_action_code') In the second part, after &&, the expression checks what does the '_action_code' value equal to. In our case, action code equals to 'return_to_second': submission('SignForm').formData.prop('_action_code').value().equals('return_to_first') 'return_to_second' is the value of the Action code field when configuring a form in the form modelling service (configuration of a button navigating to the 2nd form). See Configuring the Button component to return to the 2nd form for details about setting the form configuration. Modeling cancellation of data entered in the form and returning to the main menu through alternative branches is almost identical to the previous forms for data correction. Only the _action_code parameter value changes that is identified when modelling a form for a business process. You have to pass this value to the submission() function. Select the XOR gateway having a branch to cancellation. Enter the Cancel data entering name into the Name field. Select a branch navigating to cancellation of entered data and termination of the business process. In our case that is the violet branch. In the Name field, enter the branch name. For example, Yes. In the Condition Type field, select the Expression type. In the Expression field, model the cancellation of entered data and returning to the service menu using the submission() JUEL expression. You can find the detailed description of the available JUEL functions in: registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc Example 3. Modelling cancellation of entered data and returning to the service menu using the submission() JUEL expression ${submission('Firsttask').formData.hasProp('_action_code') && submission('SignForm').formData.prop('_action_code').value().equals('cancel')} Explanation In the first part, before &&, the expression checks whether form 1 has '_action_code': {submission('Firsttask').formData.hasProp('_action_code') In the second part, after &&, the expression checks what does the '_action_code' value equal to. In our case, action code equals to 'cancel': submission('Firsttask').formData.prop('_action_code').value().equals('cancel') 'cancel' is the value of the Action code field when configuring a form in the form modelling service (configuration of cancelling the entered data and returning to the service menu). See Configuring the Button component to cancel the data entered in the form and terminate the process for details about setting the form configuration.","title":"Supporting alternative branches in business processes","component":"platform","version":"1.9.6","name":"bp-alternative-branches","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bp-alternative-branches.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modelling and configuring the buttons for alternative branches on the business process forms","hash":"_modelling_and_configuring_the_buttons_for_alternative_branches_on_the_business_process_forms","id":2},{"text":"2.1. Configuring the Button component to return to the 1st form","hash":"button-step-back-form-1","id":3},{"text":"2.2. Configuring the Button component to return to the 2nd form","hash":"button-step-back-form-2","id":4},{"text":"2.3. Configuring the Button component to cancel the data entered in the form and terminate the process","hash":"button-cancel-form-data","id":5},{"text":"3. Modelling and configuring alternative branches in a business process","hash":"_modelling_and_configuring_alternative_branches_in_a_business_process","id":6},{"text":"3.1. Modelling returning to form 1","hash":"return-to-the-first","id":7},{"text":"3.2. Modelling returning to form 2","hash":"_modelling_returning_to_form_2","id":8},{"text":"3.3. Modeling cancellation of data entered in the form and returning to the main menu","hash":"_modeling_cancellation_of_data_entered_in_the_form_and_returning_to_the_main_menu","id":9}]},"101":{"id":101,"text":"The regulations administrator can configure global variables for the registry. Global variables are part of the regulations and are stored in the global-vars/camunda-global-system-vars.yml file. Global variables can be used to: Configure the email address of the support service (parameter supportEmail). The supportEmail variable is used in all critical error pages in the officer and citizen portals. Set up the interface theme for the officer, citizen and registry regulations administrator portals (themeFile parameter). Only supportEmail and themeFile parameters are currently available for configuring. Adding any other variables to the file is prohibited. Also, comments are not allowed. If you want to remove an extra parameter, delete it. The variable configuration format is as follows: : You can configure the email address of the support service as follows: supportEmail: help@support.com You can customize the theme of the portal interface as follows: themeFile: dark-theme.js By default, all portals use the light theme. Enter this parameter if you want to apply the dark theme. Make changes to the master branch of the Gerrit repository, and wait for the Master-Build-registry-regulations Jenkins pipeline to apply the chosen configuration to your registry regulations. Use the convenient interface in the Regulations administrator portal for managing global registry settings. For more details, visit Configuring global registry settings.","title":"Setting global registry variables","component":"platform","version":"1.9.6","name":"global-vars","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/global-vars.html","titles":[]},"102":{"id":102,"text":"","title":"Business process modeling and decision tables","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/index.html","titles":[]},"103":{"id":103,"text":"On this page: 1. Business process modeling 2. Form modeling 2.1. Data upload form 2.2. Form for data signing 3. Example of a business process in the Officer Portal The possibility of loading data as an array to a database allows you to create business processes that the registry users can use for adding a data array as a single file, for example, filling the registry directories or loading additional data. In order to model a business process with the possibility of importing data from a CSV file as an array into a database, perform the following actions. Use out-of-the-box BPMN diagram of the test business process and the Download diploma data (csv file) and Sign diploma data (csv file) forms to see more context for further use. Model the business process according to the instructions in the link. Prerequisites: Before modeling the process and configuring the Batch creation of entities in data factory v2 delegate, make sure that the /element-templates folder of the Camunda Modeler application contains the dataFactoryConnectorBatchCreateDelegateV2.json file. Otherwise, use the delegate download instructions available at the link. Using the Batch creation of entities in data factory v2 delegate is possible only for tables that have the ext:bulkLoad=\"true\" attribute inside the tag. Create the user task using a form that contains the corresponding file component for loading. Enter the task name in the Name field. In the Form key field, enter the service name of the form. In the Assignee field, enter ${initiator} — the user who initiated the execution of this business process. Create the user task using the form for data signing. Enter the task name in the Name field. In the Form key field, enter the service name of the form for data signing. In the Assignee field, enter ${initiator} — the user who initiated the execution of this business process. in the Form data pre-population field, enter the ${submission('addCsvFileActivity').formData} variable. Create the script task to prepare the data for writing. Enter the task name in the Name field. In the Script Format field, select groovy. In the Script Type field, select InlineScript. In the Script field, enter the script itself, for example, in our case: set_transient_variable('payload', submission('signCsvFileActivity').formData.prop('csvFile').elements().first()) Create the service task for data saving. Click Open Catalog and select Batch creation of entities in data factory v2 delegate, then click Apply. Enter the task name in the Name field. In the Resource field, enter the resource — the name of the endpoint for the table, where the data will be stored. In the Upload type field, select CSV. In the Payload field, enter data you want to create — ${payload}. in the X-Access-Token field, enter the user’s system access token under which the operation is performed, for example: ${completer('signCsvFileActivity').accessToken}. In the X-Digital-Signature source field, enter the source of the digital signature, for example: ${sign_submission('signCsvFileActivity').signatureDocumentId}. In the Result variable field, enter any name for the output parameter (by default, response). Model the forms according to the instructions in the link. Enter Form’s business name and Form’s service name. Go to the Builder tab. Select the Updated section. Select the Content component and drag it to the modeling panel. In the form for file uploading, we recommend to model a prompt for filling out the file (for example, using the Content component) where it is necessary to describe the requirements for the uploaded file. Add a description of the requirements to the file and click Save. The following restrictions for the file are currently in place: It is possible to download only one file at a time. The file format is CSV only. Encoding is UTF-8. The maximum number of entries is 50. The maximum file size is 100 MB. This is the limit for data processing for saving or editing (general input limit). Requirements for the data in the file: Data separator in the file is \";\" (semicolon). The format of the fields in the file must comply with that of the fields in the database. If data is uploaded to the directory, then each record must contain a unique key in the corresponding format. In the Updated section, select the File component and drag it to the modeling panel. Enter the name of the component in the Label field. Go to the File tab. In the File Pattern field, enter the *.csv value. Below in the form, set the minimum and maximum permissible file size in the corresponding fields: File Minimum Size and File Maximum Size (maximum 1 MB). Go to the Validation tab. Select the Required checkbox and enter the name of the table to which data in the Resource for validation field will be written. Go to the API tab. In the Property Name field, enter csvFile. Click Save to save the changes. Add and configure the Button component. In the top right-hand side of the page, click Create form. Enter Form’s business name and Form’s service name. Go to the Builder tab. Select the Updated section. Select the File component and drag it to the modeling panel. Configure the component in the same way as in the previous section, except that the form must be view-only. To do this, in the Display tab, select the Disabled checkbox and change the name of the component. Add and configure the Button component. In the top right-hand side of the page, click Create form. Apply the changes to the modeled forms. To do that, go to the Version view section and click the Apply changes to master version button. Go to the corresponding service modeled in the Officer portal in the Available services menu. Add a file that meets the requirements and click Next. During upload, the pre-validation of the data in the CSV file is triggered immediately on the form. In the event of an error, the system warns the user about format inconsistency even before switching to the UI form for signing the QES data. There are currently 3 types of CSV file validations when uploading data to the database: Validation of the format (extension) and encoding. Format is CSV; encoding is UTF-8. Validation of the number of entries in a file. The maximum number of entries in a file is 50. Validation of the uploaded data structure. The separator is a semicolon (;). The column names in the file must match the column names in the database. The value format of the fields must match the format of the database. At the data signing phase, the pre-uploaded file is view-only. At the bottom of the page, fill in the key parameters and click Read. To apply the digital signature, click Sign. The executed business process for downloading data from the form as an array (csv file) is registered in the section My services → `Provided services.","title":"Modeling the business process for loading data from a CSV file as an array into a database","component":"platform","version":"1.9.6","name":"loading-data-from-csv","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/loading-data-from-csv.html","titles":[{"text":"1. Business process modeling","hash":"_business_process_modeling","id":1},{"text":"2. Form modeling","hash":"_form_modeling","id":2},{"text":"2.1. Data upload form","hash":"save-data-csv-content","id":3},{"text":"2.2. Form for data signing","hash":"_form_for_data_signing","id":4},{"text":"3. Example of a business process in the Officer Portal","hash":"_example_of_a_business_process_in_the_officer_portal","id":5}]},"104":{"id":104,"text":"On this page: 1. Creating a Service Entry 2. Creating a secret for service authorization 3. Configuring the regulations 4. Modeling business processes using the \"Connect to external system\" delegate You can use the REST connector to connect to secured services or systems outside the Platform cluster. This guide describes the steps required to set up the connector. Before a request for an external resource can go beyond the Platform cluster, you need to create a Service Entry at the registry level to serve as an entry point for the outbound traffic. A Service Entry is created automatically after the registry administrator configures the integration in the Control Plane admin console. Once the changes are applied to the registry configuration and the MASTER-Build- Jenkins pipeline runs, the connection to the external system is set up. For details on Control Plane settings, see Configuring integrations with external systems in Control Plane. For registry versions 1.9.2 or earlier, a Service Entry is created automatically after the publication pipeline is launched and changes to the registry regulations are deployed. You can check whether the Service Entry was created using the ServiceEntries list in the OpenShift console. Sign in to the OpenShift web console. Go to Home > API Explorer. In the Filter by kind search field, search for ServiceEntry and select the corresponding service. From the Project dropdown list, select the registry that will use the external service. Open the Instances tab and find the required ServiceEntry. For registry versions 1.9.3 or later, there is no need to create secrets manually in Openshift. The secrets (such as a token or password) are created automatically after the external system interaction settings are applied via the Control Plane admin console. Once the changes are applied to the registry configuration and the MASTER-Build- Jenkins pipeline runs, a secret for external service authorization is created along with the Service Entry. The secret is added to the user-management:hashicorp-vault for the system or service to which requests will be made. For details on configuring interactions with external systems, see Configuring integrations with external systems in Control Plane. To create the secret manually, perform these steps: Sign in to the OpenShift web console. Go to Workloads > Secrets and select your project from the Project dropdown list. Select Create > Key/value secret. Enter the name of the secret into the Secret name field. For example: httpbin-basic-authentication. You will need the name of the secret for the secret-name parameter when configuring the regulations. For details, jump to Configuring the regulations. Specify the type of service authentication to use: For BASIC authentication, add two Key parameters: username password For PARTNER_TOKEN authentication, add one Key parameter: token Once the settings are applied successfully, the secret is created. You can use this secret for authorization in the external service. For registry versions 1.9.3 or later, the main integration settings are performed at the registry instance level in the Control Plane admin console. For details, see Configuring integrations with external systems in Control Plane. At the regulations level, the administrator configures only the following: system name allowed operations: endpoint and resource path method Example 1. external-systems config in the bp-trembita/configuration.yml file for registries version 1.9.3 or later # reusing external system names configured on registry level external-systems: diia: operations: get-damaged-property: resource-path: \"/api/v1/public-service/damaged-property/filtered\" method: \"GET\" create-distribution: resource-path: \"/api/v1/notification/distribution/push\" method: \"POST\" http-bin: operations: get-operation: resource-path: \"/get\" method: \"GET\" For registries version 1.9.2 or earlier, perform the configuration at the registry regulations level. To do this, you need to configure the external-systems block in the bp-trembita/configuration.yml file of a corresponding registry. An example of BASIC authentication external-systems: httpbin: url: http://httpbin.org/ methods: get: path: /get method: GET auth: type: BASIC secret-name: httpbin-basic-authentication The external-systems header must be followed by the name of the external service, for example, httpbin. The url parameter must contain the service address, for example, http://httpbin.org/ The methods header must contain the name of the method used to interact with the service, for example, get. The path is the path to the service, for example, /get. The method is the HTTP method of interacting with the service, for example, GET. The auth header must contain the secret parameters: The type is the authentication type: BASIC or PARTNER_TOKEN. The secret-name is the name of the secret, for example, httpbin-basic-authentication. An example of PARTNER_TOKEN authentication external-systems: diia: url: http://api2.diia.gov.ua methods: get-damaged-property: path: /api/v1/public-service/damaged-property/filtered method: GET auth: type: PARTNER_TOKEN secret-name: secret2 partner-token-auth-url: https://api2t.diia.gov.ua/api/v1/auth/partner token-json-path: $.token To configure the delegate template in Camunda Modeler, perform these steps: Open the business process modeling interface. Create a Service Task. In the settings panel on the right, click the Open Catalog button and select the Connect to external system v2 delegate template from the list. Click Apply to confirm your action. Configure the following options: Name: Specify the task name. For example, Create a GET request. Input Parameters: Expand the External system name section and specify the name of the target external system: Set the Local Variable Assignment toggle to On. This will allow creating a local variable for the method. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, enter the name of the external system. For example, httpbin. Expand the External system method name section and specify the HTTP method for interacting with the external system: Set the Local Variable Assignment toggle to On. This will allow creating a local variable for the method. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, enter the name of the method. For example, get. When using the GET method, expand the Request parameters section and specify the required request parameters: Set the Local Variable Assignment toggle to On. This will allow creating a local variable for the method. From the Variable Assignment Type dropdown list, select Map. Key: Specify the request parameter key. Value: Specify the request parameter value. Expand the Additional request headers section and specify additional request headers: Set the Local Variable Assignment toggle to On. This will allow creating a local variable for the method. From the Variable Assignment Type dropdown list, select Map. Key: Specify the request header key. Value: Specify the request header value. The Request payload section is used for the POST and PUT request methods. Output Parameters: Expand the Result variable section and specify the process variable to put response to. The default value is response. Set the Process Variable Assignment toggle to On. In the Assign to Process Variable field, enter the name of the result variable or leave the default response value.","title":"Integration with external services using the REST connector","component":"platform","version":"1.9.6","name":"rest-connector","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/rest-connector.html","titles":[{"text":"1. Creating a Service Entry","hash":"create-service-entry","id":1},{"text":"2. Creating a secret for service authorization","hash":"create-secret","id":2},{"text":"3. Configuring the regulations","hash":"regulations-configuration","id":3},{"text":"4. Modeling business processes using the \"Connect to external system\" delegate","hash":"bp-modeling","id":4}]},"105":{"id":105,"text":"On this page: 1. Abstract 2. Setting up integration with an external system 3. Using in a business process 3.1. General information and restrictions 3.2. Business process modeling 3.2.1. Script for receiving a digital document from an external link 3.2.2. User task for outputting a file from the database to the UI form 3.3. Modeling of UI forms 3.4. Usage in the Officer portal 4. Related pages 5. Additional videos The platform allows you to download digital documents from a remote address in an external system and save them to the registry for further use in business processes. For example, this may be required for viewing acts, images, or other digital documents, etc. Currently, the system allows receiving digital documents via an external link with the NO_AUTH authentication type when a request is made to public APIs (for details, see Setting up integration with an external system). For receiving digital files from a remote address, the JUEL function save_digital_document_from_url() was developed. It can be used to simplify the modeling of processes in scripts (for more details, see Using in a business process). The Digital Document Service (digital-document-service) is responsible for processing digital documents in the Platform. Figure 1. Receiving digital content from a remote address and further processing inside the register In order for a request for receiving external resources to go beyond the Platform cluster, it is necessary to create Service Entry at the registry level — a traffic exit point outside the system. A Service Entry is created automatically when the registry administrator configures the integration in the Control Plane administrative panel. After applying the changes to the registry configuration and passing the Jenkins-pipeline MASTER-Build-, the connection to the external system will be configured. For details about settings in the Control Plane console, see the Configuring integrations with external systems in Control Plane page. Log in to the Control Plane console as a registry administrator. Go to the Registries section and open the required registry. Find the Settings for interaction with other systems section and click + ADD EXTERNAL SYSTEM. In the new window, configure the integration with the external system for further interaction according to the registry regulations. Configure the interaction using the NO_AUTH authentication method. Other authentication methods are not available for this scenario. After configuring interaction with an external system in Control Plane, you can model scenarios of receiving digital documents at a remote address and their further use in business processes. To receive digital files at a remote address, use the JUEL function save_digital_document_from_url (). It can be used when developing Groovy scripts in business processes. The function can accept 2 input parameters: URL of a digital document File name It is possible to receive only one document per request to an external source. Both parameters are String, so a modeler can pass virtually any argument to the function: Example 1. Function template save_digital_document_from_url(String remoteFileUrl, String targetFileName) The algorithm of the function is as follows: The save_digital_document_from_url () function makes a request to an open resource at the specified link and receives a digital document (for example, an image in .jpeg format). Then it passes the file to the Digital Document Service (digital-document-service). The service saves the file in encrypted form to the Object storage of intermediate BP data (lowcode-file-storage), and it receives in response the id and checksum metadata of the document transferred to the business process. After that, id and checksum can be used in a business process to save and retrieve later the document from the CEPH object data storage. For a full list of parameters that can be used in a business process, see the table below. Table 1. Structure of the response body Json Path Type Description $.id UUID Unique identifier of a digital document, generated using a pseudo-random number generator. $.name Text Original file name $.type Text File content type (application/pdf, image/png, image/jpeg, etc.) $.checksum Text Automatically generated hash superimposed on the content of the file using the SHA256 algorithm. $.size Numerical File size Response example { \"id\": \"{UUID}\", \"name\": \"{fileName}\", \"type\": \"{contentType}\", \"checksum\": \"{sha256}\", \"size\": 0 } Maximum file size The maximum file size (max-remote-file-size) that the Digital Document Service can handle is 100 MB. If digitalDocuments.maxFileSize is not explicitly specified, a value of 100 MB is assumed as the system limit. Supported file formats When using the save_digital_document_from_url() function, the system automatically validates the files loaded by users through UI forms of the portals. Validation includes checking files for compliance with certain restrictions, in particular with respect to permissible file types: \"application/pdf\": \"pdf\" \"image/png\": \"png\" \"image/jpeg\": \"jpg\", \"jpeg\" \"text/csv\": csv \"application/octet-stream\": \"asics\" \"application/pkcs7-signature\": \"p7s\" Use the ready-made diagram of the business process to learn the details: external-system-file-saving.bpmn Copy the contents of the .bpmn file and paste it in the Code tab in the Process Models section of the Regulations administrator portal. Create a Script Task. In the Name field, enter the name of the task. For example, Receiving a file from another system. In the Script field, open Script Editor and write a Groovy script for data processing. Use the save_digital_document_from_url () function to retrieve a digital document from an external system. Pass both the link function and the file name as input parameters. This can be done, for example, by defining the url and fileName parameters as variables, assigning them appropriate values, and using them in the function. Or you can immediately create an object and assign to it the function as a value with the corresponding input parameters. After processing of the received data in the Digital document service, the id and checksum metadata of the document stored in the temporary storage of intermediate data are returned to the business process. After saving the digital document to the temporary repository, the developer must define the logic for saving the document in the permanent CEPH repository, because the file will be deleted from the temporary repository after the BP is finished. The result of the script execution must be saved to the documentMetadata variable that will be used later in another script to create an object that stores the metadata of the received document in the permanent CEPH storage. After saving the object with the metadata of the digital document to the main database, we find the record by its ID and transfer the object as a variable to the UI form of the User portal. Create a User Task. Enter the task name. For example, View the file from the database in the form. Apply the delegate template from the list of available templates — User form. In the Form key field, enter the service name of the form to which you want to transfer data. For example file-saved-from-ext-system-view. In the Assignee field, enter the process initiator token — ${initiator}. In the Form data pre-population field, enter the data of the object containing a digital document (in our example, that is an image), which will be displayed in the form. For example, ${response.value.responseBody}. The digital document received from an external link can be displayed in the UI form of the business process and downloaded to the local machine for further use. Use the ready-made form to learn the details: file-saved-from-ext-system-view.json Copy the contents of the .json file and paste it in the Code tab in the UI-forms section of the Regulations administrator portal. Create a UI form for a business process. In Builder, configure the Text Field component to display the filename. Next, configure the File component for receiving the data (a digital document) from the CEPH repository. Go to the API tab, and in the Property Name field, enter the keyword to search for a record in the object repository. For example image. The parameter is not hardcoded. You can use any keys provided by your business process logic. The result returned to the UI form may look like this: Example 2. Digital document received from CEPH using the image keyword Let’s consider an example of how a user UI form looks like with a displayed digital document received from an object repository. Enter the Officer portal. Run the modeled business process. Download the received file to your local machine for future use. admin:registry-management/control-plane-digital-documents.adoc Loading multiple files in one field using the File component","title":"Downloading digital documents at an external link","component":"platform","version":"1.9.6","name":"save-digital-doc-remote-url","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/save-digital-doc-remote-url.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Setting up integration with an external system","hash":"ext-system-integration-config","id":2},{"text":"3. Using in a business process","hash":"bp-modeling","id":3},{"text":"3.1. General information and restrictions","hash":"_general_information_and_restrictions","id":4},{"text":"3.2. Business process modeling","hash":"_business_process_modeling","id":5},{"text":"3.2.1. Script for receiving a digital document from an external link","hash":"_script_for_receiving_a_digital_document_from_an_external_link","id":6},{"text":"3.2.2. User task for outputting a file from the database to the UI form","hash":"_user_task_for_outputting_a_file_from_the_database_to_the_ui_form","id":7},{"text":"3.3. Modeling of UI forms","hash":"form-modeling","id":8},{"text":"3.4. Usage in the Officer portal","hash":"officer-portal-usage","id":9},{"text":"4. Related pages","hash":"_related_pages","id":10},{"text":"5. Additional videos","hash":"_additional_videos","id":11}]},"106":{"id":106,"text":"You can model the UI forms for business processes in the regulations administrator portal. It enables you to connect the UI forms for entering data into the database, and the APIs at the level of business processes and the data factory. Official Form.io documentation. Form.io forms. Form.io form components.","title":"Modeling UI forms for business processes","component":"platform","version":"1.9.6","name":"bp-modeling-forms-general-description","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/bp-modeling-forms-general-description.html","titles":[{"text":"Useful links","hash":"useful-links","id":1}]},"107":{"id":107,"text":"On this page: 1. PL/pgSQL procedure specification for the Platform database 2. Procedure call examples 2.1. Simple scenario 2.2. Complex scenario 1 2.3. Complex scenario 2 3. Loading data into the database 3.1. An example of an XML template for loading data 4. File requirements for automatic uploads to the database 5. Recommendations for loading large amounts of data A PL/pgSQL database procedure is used for initial data loading. Before you start the initial data loading, ensure all the prerequisite steps described in Preparing data for migration are performed. Procedure for initial loading CREATE OR REPLACE PROCEDURE p_load_table_from_csv( p_table_name text , p_file_name text , p_table_columns text[] , p_target_table_columns text[] DEFAULT NULL::text[] ); Parameters description: p_table_name: Target table name. p_file_name: Full path to the CSV data file. p_table_columns: An array of field names in the data file (first row in a CSV file). p_target_table_columns: An array of target table fields. Empty if the field list matches the fields in the CSV file. The elements of the p_target_table_columns parameter can be provided in different formats: : The field in the target table receives the value from the corresponding field (with the same name) in the CSV file. ::: The field in the target table receives the value that is the result of the expression. For details, jump to the Complex scenario 1 call example. ::ref(lookup_col:, ref_table:, ref_col:, ref_id:): For this format, the system runs the following SQL query, which searches the directory table by id: SELECT INTO FROM WHERE = ; A request like this is used when the field contains a foreign key reference to the directory, and the value in the CSV file is represented not by an identifier but by a descriptive field, but the values of this field must be unique. For details, jump to Complex scenario 2 call example. ::ref_array(lookup_col:, ref_table:, ref_col:, ref_id:, delim:): This format differs from the previous one only in that the field in the CSV file contains an array of descriptive values. As a result, an array of matching ids will be returned. CALL p_load_table_from_csv('research', 'D:\\PostgreSQL\\csv\\uuid\\01-Typy_doslidgen_uuid.csv', array ['uuid','research_type'], array['research_type']); CALL p_load_table_from_csv('koatuu','${dataLoadPath}03-KOATUU_simple.csv' , array['code','category','name'] , array['code','category','name' ,'level1::substring(code,1,2)||''00000000''' ,'level2::substring(code,1,5)||''00000''' ,'type::CASE WHEN code ~ ''[0-9]{2}0{8}'' AND code !~ ''(80|85)0{8}'' THEN ''О'' WHEN code ~ ''[0-9]{2}2[0-9]{2}0{5}'' AND code !~ ''[0-9]{2}20{7}'' THEN ''Р'' WHEN coalesce(category, ''Р'') != ''Р'' OR code IN (SELECT DISTINCT substring(code,1,5)||''00000'' FROM koatuu_csv k2 WHERE category = ''Р'') AND category IS NULL OR code ~ ''(80|85)0{8}'' THEN ''НП'' ELSE NULL END'] ); CALL p_load_table_from_csv('staff','D:\\PostgreSQL\\csv\\staff.csv' ,array['uuid','laboratory','staff_status','researches','full_name','hygienist_flag','full_time_flag','salary','fixed_term_contract_flag','contract_end_date','specialization_date','specialization_end_date','dismissal_flag','dismissal_date'] ,array['laboratory_id::ref(lookup_col:laboratory,ref_table:laboratory,ref_col:name,ref_id:laboratory_id)' ,'staff_status_id::ref(lookup_col:staff_status,ref_table:staff_status,ref_col:name,ref_id:staff_status_id)' ,'researches::ref_array(lookup_col:researches,ref_table:research,ref_col:research_type,ref_id:research_id,delim:#)' ,'full_name','hygienist_flag','full_time_flag','salary','fixed_term_contract_flag','contract_end_date','specialization_date','specialization_end_date','dismissal_flag','dismissal_date'] ); To load data into the database, use the standard Liquibase functionality. CALL p_load_table_from_csv('research','${dataLoadPath}01-Typy doslidgen.csv', array['code','research_type'], array['research_type']); CALL p_load_table_from_csv('refusal_reason','${dataLoadPath}02-Prichiny vidmov.csv', array['code','document_type','name','constant_code'], array['document_type','name','constant_code']); CALL p_load_table_from_csv('kopfg','${dataLoadPath}05-kopfg.csv', array['code','name']); CALL p_load_table_from_csv('solution_type','${dataLoadPath}06-Typy rishen.csv', array['id','name','constant_code'], array['name','constant_code']); CALL p_load_table_from_csv('factor','${dataLoadPath}14-Himichni_factory_OBRV.csv', array['code','name','col3','col4'], array['name','factor_type::''Хімічний: ОБРВ''']); CALL p_load_table_from_csv('factor','${dataLoadPath}15-Himichni factory dovilni.csv', array['code','name'], array['name','factor_type::''Хімічний: довільні''']); For details on creating a physical data model of the registry using the Liquibase tool, see the Creating a physical data model section. The files used to upload data into the database must have a clear structure. File requirements for automatic uploads to the database: The file format must be CSV. The file name must contain only Latin letters. Files must use UTF8 encoding. The first row must contain field names. Starting from the second row, the file must contain field values. Their structure must match the field names in the first row. One row in the file must contain the values necessary to create a record in the database. Values are separated by commas or semicolons. The absence of a value (NULL) is conveyed by a missing value, not a space. For example: …​value 1,,value 3…​ The file must contain at least one unique business field (for example, Name) for directories. Use curly brackets { } to denote arrays of descriptive values. If you need to load a large amount of data (over 1 million rows), we recommend temporarily changing the database configuration. Set the following values for the connection waiting time between the replica and the main database in the postgresql.conf file: wal_sender_timeout = 900s wal_receiver_timeout = 900s","title":"PL/pgSQL procedure for initial loading of registry data","component":"platform","version":"1.9.6","name":"data-initial-data-load-pl-pgsql","url":"/platform/1.9.6/registry-develop/data-modeling/initial-load/data-initial-data-load-pl-pgsql.html","titles":[{"text":"1. PL/pgSQL procedure specification for the Platform database","hash":"_plpgsql_procedure_specification_for_the_platform_database","id":1},{"text":"2. Procedure call examples","hash":"_procedure_call_examples","id":2},{"text":"2.1. Simple scenario","hash":"simple-case","id":3},{"text":"2.2. Complex scenario 1","hash":"complex-case-1","id":4},{"text":"2.3. Complex scenario 2","hash":"complex-case-2","id":5},{"text":"3. Loading data into the database","hash":"_loading_data_into_the_database","id":6},{"text":"3.1. An example of an XML template for loading data","hash":"_an_example_of_an_xml_template_for_loading_data","id":7},{"text":"4. File requirements for automatic uploads to the database","hash":"initial-load-csv-requirements","id":8},{"text":"5. Recommendations for loading large amounts of data","hash":"_recommendations_for_loading_large_amounts_of_data","id":9}]},"108":{"id":108,"text":"On this page: 1. Introduction 2. Key issues to consider during the preparation stage 3. Data migration readiness checklist 4. Data migration stages 4.1. Preparing data upload templates 4.2. Identifying data sources 4.3. Extracting source data 4.4. Data mapping 4.4.1. Tables mapping 4.4.2. Fields mapping 4.5. Preparing transformation rules 4.5.1. Supported file versions and formats 4.5.1.1. Analyzing the upload files 4.6. Extract, transform, and load 4.7. Data validation Uploading data into the system, whether initial or ongoing, is implemented via CSV files. Before migrating data from an old registry to the new one, we recommend resolving organizational issues between the data owner and registry developer. Who prepares the files for the upload: the data owner or registry developer? Will the file transfer be accompanied by a handover certificate, protocol, accompanying letter, or as part of the standard working procedures? If the data contains personal information, you need to work out security requirements. Determine the format of interactions with the developer during the file upload process. This may include error notifications specifying the issue type and required changes or an official letter to notify the data owner of the successful upload. Other organizational issues. Describe the format and structure of fields for the \"To be\" data model. Map data model fields between the \"As is\" and \"To be\" states. Define the rules and requirements for the upload files (templates). Data migration stages are presented in the following diagram. The data upload template contains technical descriptions of the data tables to load, algorithms, and rules of loading. Each template is commonly used for one or several related tables in the new data model. A template contains the following: A description of all the fields in the CSV file, including: Field name Whether the field is required or not Sample value Comment A description of the rules of filling the table in the new registry based on the load data. This may include processing order in case of several related tables, search algorithms by key fields, uniqueness of names, and so on. A description of how exactly the table fields in the new registry should be filled in case the goal differs from a one-to-one data transfer from a file. Take reference fields, for example. During this stage, the new registry must be ready for the initial data upload. We recommend starting this stage simultaneously with preparing the data upload templates. At this stage, the experts on the customer’s side determine the sources, systems, and types of data that can be downloaded. It is also worth determining the data you might need. For large migration projects, identifying a comprehensive list of data sources will take some time and may continue based on subsequent stages. In practice, ensuring the integrity of information may require digitizing data from paper sources and even interviewing key employees. However, it is necessary to discover as much relevant data as possible. Extracting data from historical registries or systems can take some time, especially if the registry consists of several subsystems handled by different departments. You need to consider this during the test and final migrations. Keep in mind that downloading the data in full may not always be feasible due to security or other considerations, in which case loading is limited to the structure and several test records. This may lead to validation errors and additional efforts to fix them during the test and final data loads. Planning the test loads from historical registries in advance can help minimize this issue. In general, data mapping refers to the process of establishing a connection between the data fields from one system to another. In our case, we are mapping the old and new registries, or source data and the data to be loaded. The mapping stage is the most resource-intensive and can take up more than 50% of all migration work. This stage involves the entire working group of the migration project. The data mapping process involves the following phases: tables mapping fields mapping Tables mapping, or templates mapping, is the process of mapping the source data tables and data upload templates. The relationship can be one-to-one (1:1) or one-to-many (N:N). The result of this work is the table mapping registry that needs to be compiled and maintained. This phase is the prerequisite for the next phase of fields mapping and tracking the overall mapping status. Here is an example of how a table mapping registry may look like: New registry template name Source file name Source file compilation rules Responsible person Status Comment laboratory.xls Applications and laboratories registry.xlsx Laboratories staffing.xlsx Analyze and compile a selection of unique laboratory names. Create a single list of laboratories with unique values. File requirements: The first row must contain headers. The number of columns depends on the template structure. Analyze additional attributes required to fill out the template. The sheet must be called \"Sheet 1\". Jared O. Holmes In progress Test comment Fields mapping is the process of mapping the fields within the current tables mapping. The result of this work is the fields mapping registry. Here is an example of how a fields mapping registry may look like for a registry of certified laboratories: During this stage, you also need to perform data normalization. Based on the approved fields mapping registry, the experts on the customer’s side must develop the data transformation rules. This stage can be performed simultaneously with fields mapping. To speed up the process of preparing for migration and beyond, use the registry’s initial data load feature. After the mapping stage, you should have the template files filled out according to the fields format and other requirements. Only CSV files are supported for data uploading. Pivot tables are not supported. CSV files support only one table per sheet. Each column must have a header whose name must correspond to the field name in the data model (field name in the database). Data cannot contain merged rows or columns. Values in CSV files must be separated by commas. There are no empty rows above the headers. Note that CSV files do not support the same data formats as Excel. If a CSV file contains date or time fields, they are stored as strings. Therefore, you must ensure the values that start with zero (such as codes, phone numbers, date, time, and so on) are stored correctly. For details, see File requirements for automatic uploads to the database. The previous steps mark the end of the preparation stage. By now, all data sources are identified, the data is downloaded, the upload templates for the target database are ready, data mapping is prepared, and the transformation rules are defined. From this stage onwards, you can organize and run the test and final migrations. Note that running several tests before the final migration is highly recommended. Test migrations allow you to: Discover conversion and data loading errors. Conduct a preliminary assessment of the quality of the data uploaded to the new registry. Draw up or update the final migration plan based on test results. You need to assess the quality of the loaded data both after test migrations and after the final one. It is worth noting that various data assessments and normalization steps should be carried out throughout the migration process. Consider what you can do during the current stage to avoid having issues during the next stages. For example: Check for duplicates by key fields. This can and should be done even with the original data. Define field types. Check link integrity. Check for mathematical inconsistencies. Check that the mandatory fields are filled out. Check for invalid symbols, especially for key fields. Check that the string fields comply with the new registry field types and do not exceed the length limits. Check for spelling errors. Choose the delimiter type. Commas and semicolons may occur within the same line inside the directory, in which case it is advisable to use other characters—​for example, # or $. After the final migration is completed per the migration strategy and plan, a decision must be made regarding the further usage of the historical registry and the procedure for putting the new registry into operation. Each data migration project requires careful preparation and an individual plan. However, the overall migration pattern is almost identical in all cases, regardless of the type of registries being migrated, the number of databases, and other factors.","title":"Preparing data for migration","component":"platform","version":"1.9.6","name":"data-initial-data-load-prep","url":"/platform/1.9.6/registry-develop/data-modeling/initial-load/data-initial-data-load-prep.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Key issues to consider during the preparation stage","hash":"_key_issues_to_consider_during_the_preparation_stage","id":2},{"text":"3. Data migration readiness checklist","hash":"_data_migration_readiness_checklist","id":3},{"text":"4. Data migration stages","hash":"_data_migration_stages","id":4},{"text":"4.1. Preparing data upload templates","hash":"data-load-temp-preparation","id":5},{"text":"4.2. Identifying data sources","hash":"_identifying_data_sources","id":6},{"text":"4.3. Extracting source data","hash":"_extracting_source_data","id":7},{"text":"4.4. Data mapping","hash":"_data_mapping","id":8},{"text":"4.4.1. Tables mapping","hash":"tables-mapping","id":9},{"text":"4.4.2. Fields mapping","hash":"fields-mapping","id":10},{"text":"4.5. Preparing transformation rules","hash":"_preparing_transformation_rules","id":11},{"text":"4.5.1. Supported file versions and formats","hash":"_supported_file_versions_and_formats","id":12},{"text":"4.5.1.1. Analyzing the upload files","hash":"_analyzing_the_upload_files","id":13},{"text":"4.6. Extract, transform, and load","hash":"_extract_transform_and_load","id":14},{"text":"4.7. Data validation","hash":"_data_validation","id":15}]},"109":{"id":109,"text":"","title":"Initial data loading","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/data-modeling/initial-load/index.html","titles":[]},"110":{"id":110,"text":"data-modeling/reports/data-analytical-reports-creation.adoc data-modeling/reports/data-analytical-data-access-rights.adoc data-modeling/reports/data-analytical-reports-export-automation.adoc Restricting data samples based on token information","title":"Modeling reports","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/data-modeling/reports/index.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"111":{"id":111,"text":"On this page: 1. Overview 2. Creating a query in Redash The regulations administrator can restrict the data sample when creating queries in Redash. This can be done based on the context information obtained from the JWT token. Context information refers to the user attributes transmitted by the Keycloak service. For example, the edrpou attribute can indicate the user’s affiliation with a certain institution (such as a school, bank, or company). A report administrator can write a query limiting the data sample to records containing the given attribute value. For example, this way you can restrict the report to the classes of the school that a specific official represents. Authentication in the Redash service works through the Keycloak identity and access management service using the SOAP protocol in XML format. During authentication, all user attributes, including the edrpou attribute, are transferred from Keycloak to Redash via the token. Attributes become readable in Redash using placeholders in the following format: [[]]. For example, edrpou = '[[edrpou]]'. To limit the selection by the edrpou attribute, you need to know the user’s EDRPOU code. It must be specified as the edrpou attribute in the Keycloak service. Create a new query: Sign in to the Redash admin interface (redash-admin). Open the Queries section and click New query. Write a query to retrieve data from a corresponding view table. Example 1. Querying the registry.report_laboratory_v table SELECT * FROM registry.report_laboratory_v WHERE edrpou = '[[edrpou]]' Click the Execute button. As a result, the system returns data that matches the attribute you specified. For details on creating analytical reports in Redash, see Task No. 6. Developing analytical reports.","title":"Restricting data samples based on token information","component":"platform","version":"1.9.6","name":"restrict-select-data-based-on-token-context","url":"/platform/1.9.6/registry-develop/data-modeling/reports/restrict-select-data-based-on-token-context.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Creating a query in Redash","hash":"_creating_a_query_in_redash","id":2}]},"112":{"id":112,"text":"The User management section allows you to import registry users (officers) through a CSV file. After uploading the file, users and all their privileges are automatically created in the system. This section is independent of the selected version of the regulation. Any changes apply to all versions of the regulation, including the master version. The execution result of the import process and possible errors can be viewed in the technical logs of the Kibana service. The system also maintains an audit of user uploads to the system. For this purpose, the Redash service provides a \"User Management Log\". For detailed information on importing users through a file and granting access rights, you can refer to the following link: Importing users through a file and granting access rights","title":"Managing users","component":"platform","version":"1.9.6","name":"admin-portal-user-mgmt","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/admin-portal-user-mgmt.html","titles":[]},"113":{"id":113,"text":"In the event of non-critical errors that do not impact the rendering of web pages, users of the Officer portals, Citizen portals, and regulations administrators are provided with a quick and easy way to reach out to the support team. An enhanced error notification mechanism automatically provides a detailed description of the issue in a pop-up window. Within this window, an integrated Need help? button directs the user to another window with clear instructions on how to contact support. It also includes recommendations on the information the user should provide to facilitate a swift resolution of the problem. If you encounter an error, please follow these steps to contact support: Click the Need help? button in the window that appears in the upper right corner of the page. The pop-up window will automatically disappear after 8 seconds if you do not close it earlier or navigate to another page. The window will not close if you keep the cursor on it. A new Contacting technical support window will open, providing instructions on the actions you need to take to report the problem for review. Compose an email to the provided email address support@registry.gov.ua. Make sure to include the Trace ID in the message text, which is also provided in the pop-up window. It may have the following format: Trace ID: 0325982b325e444537f61f1f69203c85. What is a Trace ID Trace ID is a unique identifier generated for each request in the system. Trace ID helps track the entire path that a request takes through various components of the system. This is particularly useful for diagnosing problems or errors as it allows easy identification of where exactly the issue occurred. In our example, the support service uses the trace ID to determine the cause of an error that occurred during the execution of a specific request. Provide additional details such as the page where the error occurred, the specific actions leading up to it, and any screenshots, if available. The pop-up will remain visible until you close it or navigate to another page. Якщо Trace ID відсутній, то передайте до служби підтримки якомога більше деталей з описом проблеми. If the Trace ID is not present, please provide as many details as possible in describing the problem when contacting support. For details, refer to Contacting support in case of critical errors.","title":"Contacting support for non-critical errors","component":"platform","version":"1.9.6","name":"error-non-critical","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/error-non-critical.html","titles":[]},"114":{"id":114,"text":"","title":"Regulations administrator portal","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/overview.html","titles":[]},"115":{"id":115,"text":"On this page: 1. General description 2. Authenticating with the IIT widget 3. Authenticating via the id.gov.ua system 3.1. Prerequisites 3.2. Configuring 4. Related pages 5. Additional video materials Changing the authentication type is available for the registry versions 1.9.3 and later. All earlier versions of the registry use the authentication with the Qualified Electronic Signature (QES) and the IIT widget, which is the default authentication type for the Officer portal. Registry administrators can configure the desired authentication type for the Officer portal. The platform allows using their own IIT widget for authenticating with a Qualified Electronic Signature or configuring integration with an external provider id.gov.ua. Links to official resources: Institute of Information Technologies (IIT) — https://iit.com.ua/ Integrated System of Electronic Identification (ICEI) ID.GOV.UA — https://id.gov.ua/ Registry officers will be able to use only one type of authentication at a time when logging into the Officer portal: either a Qualified Electronic Signature or id.gov.ua. Log in to the Control Plane console as a registry administrator. Go to the Registries section, open the necessary registry, and click on EDIT. You can also configure authentication type for the officers during the registry creation. Select the Officer authentication section and perform the following configuration: Specify the authentication type as Widget. This type is intended for authenticating officers using the Qualified Electronic Signature on the login form of the Officer portal. Widget is the default authentication type. Add a link to the resource with a widget. The standard IIT widget is at the following URL: https://eu.iit.com.ua/sign-widget/v20200922/. You can use a widget from any provider with a different URL, but in that case, pay attention to the height parameter, which can be configured in the next field (see below). Define the widget height in pixels (px). By default, the parameter is set to 720 px for the IIT widget. Increase or decrease the height as needed. For example, 1000 px. Pay special attention to this if you use the URL of another provider to ensure the Qualified Electronic Signature widget appears correctly in the Cabinet. + Click Confirm to save the configuration. This will result in a merge request to the registry configuration. Go back to the registry details and find the section Update requests. Open the generated request by clicking on the view icon - 👁. The proposed changes will be saved to the registry configuration in the deploy-templates/values.yaml file upon confirmation. In the new window, compare the 2 versions of the changes, make sure the data you entered is correct, and click Confirm. You can also reject the changes to the configuration immediately by clicking Reject. The comparison window allows you to conveniently check the current (left) and new (right) versions of the changes. Registry officers will be able to use only one type of authentication at a time when logging into the Officer portal: either a Qualified Electronic Signature or id.gov.ua. When switching the authentication type, the parameters for the other type remain unchanged. Thus, two configurations can coexist at the same time, but only one can be active. When changing the browserFlow, the excessive resources in the Helm chart are deleted. In our example, the standard browserFlow is used for authentication via Qualified Electronic Signature — dso-officer-auth-flow. As a result, the request obtains the Confirmed status and triggers the Jenkins pipeline MASTER-Build-, where is name of the registry. It applies the parameters of the specified configuration. Wait while the code is being built. This may take up to 15 minutes. You can check the current status and execution result by following the CI link in the interface. Upon successful completion of the build, the specified configuration will be applied to the registry. Register in the ICEI id.gov.ua system. To do this, go to https://id.gov.ua/connect and conclude an electronic agreement on access to the integrated system of electronic identification. The conclusion of the agreement and other related legal and technical procedures are performed on the id.gov.ua side between the data owner (registry technical administrator) and ICEI. After registering as a client (of the registry), obtain the client identifier in the id.gov.ua system (client_id) and the password (secret) from ICEI. Use the obtained data to configure authentication with id.gov.ua in the Control Plane interface. Log in to the Control Plane console as the registry administrator. Go to the Registries section, open the necessary registry, and click EDIT. You can also configure authentication type for the officers during the registry creation. Select the Officer authentication section and perform the following settings: Specify the authentication type as id.gov.ua. This type is intended for authenticating officers using an external provider on the Officer portal login form. Add a link to the resource. For example, the URL may look like this: https://test.id.gov.ua?auth_type=dig_sign. In the request’s query parameters (in the URL after ?), specify the authentication types available for the official through id.gov.ua. Possible values for the auth_type parameter: dig_sign - authentication with a Qualified Electronic Signature (digital signature); bank_id - authentication via BankID; diia_id - authentication via Diia.Sign. ❗ Specify only auth_type=dig_sign, as shown in the example. This is due to the fact that the BankID and Diia.Sign methods do not pass the edrpou parameter, which is necessary for successful authentication of the official in the system. Other parameters required for successful official authentication - drfo and fullName (see Registry user authentication for more details). Specify the client identifier (client_id) obtained in the id.gov.ua system. For example, 17f33242543e4340b690391d6f1d1513. The client identifier in the id.gov.ua system is similar to the UUID format but without the hyphens (-) between characters. Specify the client secret (secret) obtained from the id.gov.ua system. This can be any randomly generated password in the id.gov.ua system. + Click Confirm to save the settings. This will result in a merge request to the registry configuration. Go back to the registry details and find the section Update requests section. Open the generated request by clicking the view icon - 👁. The proposed changes are saved to the registry configuration in the deploy-templates/values.yaml file upon confirmation. In the new window, compare the two versions of the changes, make sure the data you entered is correct, and click Confirm. You can also reject the changes to the configuration immediately by clicking Reject. The comparison window allows you to conveniently check the current (left) and new (right) versions of the changes. Registry officers will be able to use only one type of authentication at a time when logging into the Officer portal: either a Qualified Electronic Signature or id.gov.ua. When switching the authentication type, the parameters for the other type remain unchanged. Thus, two configurations can coexist at the same time, but only one can be active. When changing the browserFlow, the excessive resources in the Helm chart are deleted. In our example, browserFlow is used for authentication with redirection to an external provider — the id-gov-ua-officer-redirector. As a result, the request obtains the Confirmed status and triggers the Jenkins pipeline MASTER-Build-, where is name of the registry. It applies the parameters of the specified configuration. Wait while the code is being built. This may take up to 15 minutes. You can check the current status and execution result by following the CI link in the interface. Upon successful completion of the build, the specified configuration will be applied to the registry. Registry user authentication","title":"Configuring authentication for officers","component":"platform","version":"1.9.6","name":"cp-auth-setup-officers","url":"/platform/1.9.6/registry-develop/registry-admin/cp-auth-setup/cp-auth-setup-officers.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Authenticating with the IIT widget","hash":"_authenticating_with_the_iit_widget","id":2},{"text":"3. Authenticating via the id.gov.ua system","hash":"_authenticating_via_the_id_gov_ua_system","id":3},{"text":"3.1. Prerequisites","hash":"_prerequisites","id":4},{"text":"3.2. Configuring","hash":"_configuring","id":5},{"text":"4. Related pages","hash":"_related_pages","id":6},{"text":"5. Additional video materials","hash":"_additional_video_materials","id":7}]},"116":{"id":116,"text":"This section describes the process of configuring user authentication for two key user groups: officers (service providers) and citizens (service recipients). All configurations are performed through the Control Plane console, which provides a convenient unified interface for basic registry configurations. The platform allows administrators to configure the authentication type for the Officer portal by using their own IIT widget for authentication with the Qualified Electronic Signature (QES) or by integrating with an external provider such as ID.GOV.UA (ICEI). As a result, officials of the registry will be able to use one of two authentication types when accessing the Cabinet: either QES or ID.GOV.UA. Additionally, the platform provides the ability to configure self-registration for officers. This simplifies the user registration process as it does not require administrator involvement. With this approach, officers can register themselves, optimizing the work of administrators and improving the overall user experience. Officers Configuring authentication for officers Configuring self-registration for officers","title":"Configuring user authentication","component":"platform","version":"1.9.6","name":"cp-auth-setup-overview","url":"/platform/1.9.6/registry-develop/registry-admin/cp-auth-setup/cp-auth-setup-overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"117":{"id":117,"text":"On this page: 1. General description 2. Setting up self-registration for officers 3. Authenticating upon logging into the Officer portal The platform provides the ability to configure self-registration for officers, simplifying the registration process for users without the need for administrator involvement. This creates several advantages for organizations and users: Efficiency: reduces the time and effort administrators spend on creating user accounts, especially in registries with a large number of users. User autonomy: allows users to create their own accounts in the system without additional assistance from the administrator. Reduced errors: The self-registration process typically involves verifying the data entered by users, reducing the likelihood of administrator errors when creating user accounts. Time savings: With self-registration, users can quickly access the system and start using its functionality without waiting for administrator approval. Registry administrators can configure self-registration for officers through the Control Plane administrative panel, in the Registries > Officer authentication section. When enabled, officers can automatically register in Keycloak — the system for user and access management. Upon the user’s first login to the Officer portal, their account is created with the system role unregistered-officer assigned, and the user is automatically redirected to the self-registration business process. It is not recommended to grant the unregistered-officer role access to any business processes except for self-registration in the registry authorization file file bp-auth/officer.yml. When self-registration is disabled, authentication for officers follows the standard process, where users need to be initially created in the user management system (see Creating users in the system for more details). To enable or disable self-registration for officers, follow these steps: Log in to the Control Plane administrative panel. Go to the Registries > Edit > Citizen authentication section. Toggle the switch to allow or disallow self-registration. When the ability is turned off, users who have started the self-registration process will not be able to complete their tasks if they are modeled. User self-registration requires that a pre-modeled self-registration business process is already created in the registry. Click the Confirm button to save the changes. This will result in a merge request to the registry configuration, which needs to be confirmed. Go back to the Registries > Update Requests section and review the new request by clicking the \"View\" icon — 👁. In the new window, review the changes and click Confirm. The proposed changes will be applied to the registry configuration in the deploy-templates/values.yaml file upon confirmation. The setting is controlled by the keycloak.officerPortal.selfRegistration parameter, which can be set to either true or false. Example 1. Setting selfRegistration to true in the deploy-templates/values.yaml file: keycloak: keycloak: realms: officerPortal: browserFlow: dso-officer-auth-flow selfRegistration: true Wait for Jenkins to apply the configuration using the MASTER-Build- pipeline. This may take a few minutes. Officers can automatically start the self-registration process after logging into the portal if the self-registration business process has been pre-modeled in the registry and self-registration is enabled for that registry. After completing the registration, the system redirects the user to the login page, this time with the officer role assigned. After the login the officer will have access to the services available in the registry.","title":"Configuring self-registration for officers","component":"platform","version":"1.9.6","name":"cp-officer-self-registration","url":"/platform/1.9.6/registry-develop/registry-admin/cp-auth-setup/cp-officer-self-registration.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Setting up self-registration for officers","hash":"_setting_up_self_registration_for_officers","id":2},{"text":"3. Authenticating upon logging into the Officer portal","hash":"_authenticating_upon_logging_into_the_officer_portal","id":3}]},"118":{"id":118,"text":"On this page: 1. Creating a registry administrator Confirming the changes in the Gerrit interface (alternative method) 2. Creating a registry regulations administrator 3. Related articles Registry administrators are official administrators who perform the functions of registry support, as well as the deployment and maintenance of regulations for the respective registries. For more information about the Platform role classes and their functional responsibilities, refer to the following link: arch:architecture/platform/operational/user-management/platform-actors-roles.adoc After Creating Platform administrators and deploying the registry, you can add administrators for that registry. The first service registry administrator must be created by the Platform administrator with the appropriate access rights. Subsequently, the service registry administrator can add other registry administrators independently. Log in to the Control Plane registry management administrative panel using the provided login and password. Go to the Registries section and select the registry for which you need to add administrators. Click the Edit button in the upper right corner of the page. Go to the Administrators section and add a new registry administrator. Click the + (plus) icon. In the new opened window, fill in the following fields: First name Last name Email address Temporary password You can provide access to multiple registry administrators. To do this, repeat the action for each administrator separately (+ > provide data > click Confirm). Provide the email address in lowercase. Allowed characters: \"0-9\", \"a-z\", \"_\", \"-\", \"@\", \".\", \",\". Click Confirm to save the changes. As a result, a registry update request with the status New will be generated. Go back to the Registries section, scroll down the page, and find the Update requests section. Open the generated request by clicking the view icon — 👁 The proposed changes will be applied to the deploy-templates/values.yaml configuration file upon confirmation. In the new window, compare the two versions of the changes, make sure the data you entered is correct, and click Confirm. The comparison window allows you to conveniently check the two versions of changes: the current one (left) and the new one (right). As a result, the request will be assigned the Verified status, and the changes will take effect. Wait for the automatic code build to complete. This may take a few minutes. For more details, see Confirming the changes in the Gerrit interface (alternative method). You can also reject the changes to the registry configuration immediately by clicking Reject. The system automatically creates a registry administrator in the openshift realm of the Keycloak service and assigns them the cp-registry-admin- role and the group /cp-registry-admin-, where is the name of the registry. An alternative method for confirming changes to the registry configuration is to perform the confirmation in the Gerrit interface. After making a change in the Control Plane (adding a new administrator, etc.), follow these steps: У розділі Запити на оновлення з’явиться новий запит. Натисніть іконку Переглянути в Gerrit. A new request will appear in the Update requests section. Click the View in Gerrit icon. Perform the quality gate checks. To do this, enter the created change and click REPLY. Click the following buttons to confirm: +2 — for Code-Review; +1 — for Verified. SEND — to save. Click SUBMIT to merge the changes into the repository (git merge changes). In the pop-up window, click CONTINUE to confirm. At the bottom of the Gerrit page, locate the CI Jenkins build information and follow the link. In the new window, click Back to Project on the left side (return to the project). Ensure the build was successful. After a successful execution of the Jenkins job, the system creates a new registry administrator. The system automatically creates a registry administrator in the openshift Keycloak service realm and assigns them the cp-registry-admin- role and the /cp-registry-admin- group, where is the name of the registry. Registry regulations administrators are service administrators responsible for deploying and maintaining regulations for the corresponding registries. Within the regulations, an administrator works with specific entities such as data models, business processes, UI data entry forms, analytical reports, extracts, and more. It is necessary to manually create a registry regulations administrator and assign them roles. To do this, follow these steps: Log in to the Openshift console using the provided login and password. The login and password for access can be obtained from the technical support team. Go to Projects > user-management. Find the Networking section and follow the link to the keycloak service. Access the Keycloak Administration Console using the Keycloak secrets (username and password). The username and password can be obtained from the secrets for the Keycloak service. To do this, go to Workloads > Secrets > keycloak and copy the secrets. Log in to the -admin realm. This is where registry administrators are created and their roles (access rights) are defined. In the -admin realm, create a user and assign them the following roles: gerrit-administrators — Gerrit administrators, this role is necessary for deploying regulations and approving changes (passing Quality Gates); jenkins-administrators — Jenkins administrators, this role is necessary for running clean-up jobs, reviewing generated and added Jenkins pipelines, viewing logs, etc.; camunda-admin — Camunda Cockpit administrators, this role is necessary for viewing available business processes, rules, tasks, etc. In addition to the role, assign a group to the user: Go to the Groups > Available Groups tab. Select the camunda-admin group. Click join. As a result, the group should appear in the Group Membership list. After deploying the Platform in the target environment and before deploying any registry, it is necessary to first create the Platform administrator(s). You can find out how to do this by following the link: Creating Platform administrators","title":"Creating registry administrators","component":"platform","version":"1.9.6","name":"create-registry-admins","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/create-registry-admins.html","titles":[{"text":"1. Creating a registry administrator","hash":"_creating_a_registry_administrator","id":1},{"text":"Confirming the changes in the Gerrit interface (alternative method)","hash":"confirm-changes-in-gerrit","id":2},{"text":"2. Creating a registry regulations administrator","hash":"_creating_a_registry_regulations_administrator","id":3},{"text":"3. Related articles","hash":"_related_articles","id":4}]},"119":{"id":119,"text":"On this page: 1. General description 2. Configuring administrator attributes in Keycloak 3. Importing users through the Regulations administrator portal 4. Viewing the execution result in Kibana service 4.1. General validation rules for checking user data from the file. 4.2. Result of the import process with an error 4.3. Successful result of the user import process 5. Viewing audit logs in the User management journal of the Redash system To simplify the creation of a large number of users (officers) in Keycloak, the functionality to load a list of users into the system using a file has been implemented. A new page called User management has been added to the Regulations administrator portal. You can upload a file with user data for this registry there. To minimize errors when creating new users, preliminary validation rules have been introduced for the file (size, format, encoding). To meet the security and data storage reliability requirements, the file is encrypted and stored in the object storage of the registry (Ceph). All subsequent steps for initiating the user import process in Keycloak, parsing and validating user data from the file, processing data in the file, and creating users in Keycloak are performed automatically without the involvement of the registry administrator. To monitor the execution process and its results, functionality has been implemented in the Kibana logging service. The registry administrator can view information about the processed file and the summary result, including the number of processed records, successful imports, erroneous imports, as well as detailed information for each erroneous record. Additionally, based on the developed System event log in Redash, a new log called User management log has been created separately. In the User management log, the registry administrator can see actions related to the creation of users in Keycloak, including information about imports through a file. Before proceeding, the following actions need to be performed once in Keycloak: Go to the corresponding -admin realm in Keycloak and select the Users section. Choose the administrator user who will import the file and go to the Attributes section. Create three keys for the attributes: fullName — Full name; drfo — The personal registration number of the taxpayer’s account card. edrpou - The unique identification number of the legal entity in the Unified state register of enterprises and organizations of Ukraine. Click Save. If the above actions are not performed, the following error will be displayed: The necessary attributes are not created in the user management system. Please contact the administrator. The configuration of attributes in Keycloak is performed once. There is no need to repeat it during subsequent user import procedures. Go to the Regulations administrator portal. You can obtain the link to the Regulations administrator portal of the corresponding registry in Openshift. To do this, go to the Networking → Routes menu, select the necessary project, enter admin-portal in the search, and follow the link in the Location column. Select the User management section and click the Add users button. Download the Users_Upload.csv file template for filling in the user data. Familiarize yourself with the Instructions for filling in the Users_Upload file. Pay attention to the peculiarities of filling in the file template parameters to avoid errors. If any errors are detected during the user import from the file, the import process will be interrupted, and none of the users will be added to the Keycloak system. See the diagram below. Fill in the file with data of the users that need to be granted access to the registry. File requirements: Maximum file size - 30 MB; File format - CSV; File encoding - UTF-8. If the file does not meet any of the criteria described above, the user will receive the corresponding message: The file is too large. Incorrect file format. File has an incompatible encoding. This means that the file upload did not occur. Refer to the diagram below. Validation rules for data in the file: Attribute drfo: Required, must be unique in relation to attributes edrpou and fullName. Attribute edrpou: Required, must be unique in relation to attributes drfo and fullName, only digits are allowed. Attribute fullName: Required, must be unique in relation to attributes drfo and edrpou. Attribute Realm Roles: Required, may contain multiple roles (system and regulatory roles, if applicable), specified separated by commas. The specified roles must already be created in the Officer Realm in the corresponding registry in Keycloak. Attribute KATOTTG: Required for registries that use a territorial-based role model, optional for other cases. The value consists of the letters UA followed by 17 digits (for example, UA53060230000098362). If the user has access to multiple territorial units, their codes are entered separated by commas. The maximum number of values for one user is 16. In case the user is granted access to records throughout Ukraine, the value of KATOTTG should only be specified as two characters - UA. Any other attribute: Optional attribute with a custom name and value as needed (e.g., organization name, region, district, locality, etc.), if there is a future need to build statistics based on it for created users. It is prohibited to include special characters ([, ], {, }, , \"), as well as values containing more than 255 characters. The name of each additional attribute must be the same for all users in the registry and have a unique name among other parameters. Upload the file by dragging it to the corresponding Upload a list of officials field or selecting it from the appropriate directory. Click the Start import button. On the next step, there will be an indication that the file is being processed. Please wait a few minutes for the complete loading of registry users. The message will also include a link to the Kibana service, where you can view the processing results of the file: the number of processed records, the number of successful imports, and the number of errors. The module checks the entire file and writes all found issues to the Kibana technical log repository. The logs record information about each skipped entry during creation, along with the reason for skipping, while successfully processed entries are not logged (only the total count is displayed). Additionally, a unique user identifier in Keycloak (Username) is assigned and duplicated. During the initial use of the Kibana service, it is necessary to create an index pattern. To do this, follow these steps: Open the application and go to the Management section. що потрапляють до Elasticsearch. Click on Create index pattern to be able to read logs from the indexes that go to Elasticsearch. In the Define Index Pattern field, create your index pattern according to the template. For example, if all logs start with app-, create the index pattern app-* to display the corresponding logs. Click Next step to proceed to the next step. Use the filter on the Configure Settings tab to select the period for which the data should be shown. By default, logs for the last 15 minutes will be displayed. Click Create Index Pattern. After creating the index pattern app-*, navigate to the Discover tab to obtain the necessary information. The general schema of validation rules is presented below. In case of violating a validation rule during data entry in the file, the corresponding error will be displayed: A required field is empty or consists only of spaces or has multiple values separated by commas instead of one (for the fields edrpou, drfo, fullName) — an error indicating the absence of a mandatory attribute. The edrpou field contains invalid characters (it should only consist of digits) — an error indicating the presence of forbidden characters. The specified role is not present in the list of available roles in the Officer Realm of the corresponding registry in Keycloak — an error indicating the absence of the specified role. The file structure does not match the specified structure — an error indicating the file’s mismatch with the intended structure. In such cases, the user import process does not occur. If the user import to Keycloak violates the validation rules, it is necessary to repeat the user import procedure from the beginning after making the necessary adjustments. Partial import of users with errors is possible in the following cases: A user with the same username and attributes (drfo, edrpou, fullName) already exists in Keycloak. A user with the same username but different attributes already exists in Keycloak. A user with the same attributes but a different username already exists in Keycloak (in this case, the logs will indicate the actual username of the user in Keycloak). The user with the same attributes has been encountered in the CSV file before (duplicate entries). An error occurred in Keycloak during the import process. In such cases, the user import process occurs partially, and user records with errors are logged in Kibana as Failed to import and Skipped, and they are not added to the Keycloak system. All other successful user records are added to the Keycloak system. Logging algorithm for user import containing errors: If one of the requests in a group of N entries returns an error, the user record from that specific group starts sequentially. The user on which the error occurred is skipped. The logs record information about all skipped entries during creation, including the reason for skipping (marked as Skipped or Failed to import). If importing users into Keycloak was done with errors (partial user creation), it is necessary to reload the file with the users who couldn’t be created and make the necessary adjustments. First, it is necessary to find the corresponding entry in the logs with the overall result of the import processing. Total users in the file — displays the total number of users that were added via the file; Successfully imported — the number of users successfully added; Skipped — the number of skipped users; Failed to import — the number of users that couldn’t be added due to an error with the Keycloak service. For each user that couldn’t be added to the service (skipped), a separate log entry will be shown with information about the validation error. If importing users into Keycloak was done with errors (partial user creation), it is necessary to reload the file with the users who couldn’t be created (after making the necessary adjustments). Total users in file відповідає кількості Successfully imported. In case the validation rules are successfully passed, the import process will import all users from the file into Keycloak. Skipped and Failed to import will be indicated with zeros. Total users in the file corresponds to the number of Successfully imported. The creation of users in Keycloak is done in groups (individual requests) in batches of N records (N value is specified in the process settings). After successfully importing the users into Keycloak, user accounts with corresponding attributes and roles are created. Security administrator (with the appropriate access rights) can view the User management journal in Redash, for example, to conduct an audit of user access provision. To grant access rights to the Redash system, the user must have the redash-admin role assigned. The link to the Redash system can be found in the Openshift console → Networking → Routes and by selecting the relevant project, find the redash-viewer realm. The journal includes all entries that match the following parameters: applicationName=\"Keycloak\", type=\"SYSTEM_EVENT\". Each user created through file import is displayed as a separate row with the specified set of additional parameters. The report includes the following parameters: Redash name Parameter name Parameter description Query Identifier requestId Request identifier with MDC Event name in the database name \"USER_CREATE\" Application/Pod Name sourceApplication Pipeline name for user import (pod_name) Operation date and time timestamp Timestamp Administrator’s full name userName Full name of the user who initiated the import process Administrator’s identifier userKeycloakId Keycloak identifier of the user who initiated the import process Administrator’s tax identification number userDrfo Tax identification number of the user who initiated the import process Created user’s ID userId Keycloak identifier of the created user Created user’s username username Username of the created user User is active enabled true/false KATOTTG katottg Code of administrative-territorial units and territories of territorial communities. May contain multiple values. Custom Fields customAttributes Custom additional attributes of the user Realm identifier realmId Keycloak identifier of the realm in which the user was created Realm name realmName Name of the realm in which the user was created Keycloak client name clientId Value of the \"Client ID\" attribute of the realm from which the user was created Keycloak client identifier keycloakClientId Keycloak identifier of the client on behalf of which the user was created Roles of the created user roles Roles of the created user CSV file identifier sourceFileId Identifier of the CSV file in the Ceph storage Original CSV file name sourceFileName Original name of the CSV file from which the user import was performed Checksum of the CSV File sourceFileSHA256Checksum Checksum of the CSV file uploaded by the user (unencrypted) The Redash service functionality allows filtering, sorting parameters, and exporting the generated selection.","title":"Importing users through a file and granting access rights","component":"platform","version":"1.9.6","name":"import-users-officer","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/import-users-officer.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Configuring administrator attributes in Keycloak","hash":"_configuring_administrator_attributes_in_keycloak","id":2},{"text":"3. Importing users through the Regulations administrator portal","hash":"admin-portal-import-users","id":3},{"text":"4. Viewing the execution result in Kibana service","hash":"_viewing_the_execution_result_in_kibana_service","id":4},{"text":"4.1. General validation rules for checking user data from the file.","hash":"validation-rules","id":5},{"text":"4.2. Result of the import process with an error","hash":"_result_of_the_import_process_with_an_error","id":6},{"text":"4.3. Successful result of the user import process","hash":"_successful_result_of_the_user_import_process","id":7},{"text":"5. Viewing audit logs in the User management journal of the Redash system","hash":"_viewing_audit_logs_in_the_user_management_journal_of_the_redash_system","id":8}]},"120":{"id":120,"text":"On this page: 1. Creating a user in the system 2. Removing a role from a user To create a new user (officer) in Keycloak, follow these steps: Go to the -officer-portal realm of the respective registry: On the Users tab, click View all users. Click the Add user button. In the opened window, enter the following user’s data: Username (required) — the system name of the user in Keycloak. It does not affect user authentication. It can be used as an exception for logging into internal system services that require login and password authentication. First Name (optional) — the user’s first name. Last Name (optional) — the user’s last name. User Enabled (enabled by default) — a mark indicating that the user is activated in the system (if not active, the user’s access to the system will be restricted). Email Verified (optional) — activated if email confirmation is required. Click the Save button. Go to the Credentials tab. Enter the password in the Password field and confirm it in the Password Confirmation field. Check the Temporary box to generate a temporary password. For security reasons, it is necessary to change the temporary password during the first login to the system. Click the Set Password button. Go to the Role Mappings tab and assign the necessary roles to the user. Click the Add selected button. Verify that the user has the mandatory officer role assigned, which provides access to the Officer Portal. You can also assign additional roles depending on your registry’s logic. The assigned roles are displayed in the Assigned Roles section. Go to the Attributes tab and set values for the parameter keys: drfo, edrpou, fullName, which are mandatory for authentication with the user’s Qualified Electronic Signature (see Registry user authentication). A new parameter is added after you click the Add button. If the attribute values do not correspond to the values specified in the Qualified Electronic Signature, the user will not be able to access the Officer portal or sign the Qualified Electronic Signature tasks. Attribute Description Mandatory drfo State register of individuals taxpayers. The official’s personal registration number of the taxpayer’s account card (RNOKPP). If the person did not receive such a card due to religious beliefs, it is necessary to specify the series and number of the passport or the ID card number. Yes edrpou The unique identification number of the legal entity in the Unified state register of enterprises and organizations of Ukraine (8 digits). Yes fullName Last name, first name, patronymic (if available). Yes Any attribute with a custom name and value (e.g., organization name, region, district, locality, etc.) if there is a future need to generate statistics based on it. It is prohibited to include special characters ([, ], {, }, \\, \"), as well as values exceeding 255 characters. The name of each additional attribute must be the same for all users in the registry and have a unique name among other parameters. E.g. location, age and so on. No Click the Save button. The user has been successfully created. To remove roles assigned to a user, follow these steps: Select a user. To do this, choose the corresponding realm, go to the Users section, click View all users, and select the user from the list. Select the roles you want to remove from the list and click Remove selected. The removed roles will become available and will be shown in the Available Roles section.","title":"Creating a user and granting access rights","component":"platform","version":"1.9.6","name":"manual-user-creation","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/manual-user-creation.html","titles":[{"text":"1. Creating a user in the system","hash":"_creating_a_user_in_the_system","id":1},{"text":"2. Removing a role from a user","hash":"delete-user-role","id":2}]},"121":{"id":121,"text":"Creating a user and granting access rights Importing users through a file and granting access rights Creating registry administrators","title":"Creating users in the system","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"122":{"id":122,"text":"On this page: 1. Overview 2. Configuring external integrations in Control Plane Configuring integrations through the Control Plane admin console is available for registries version 1.9.3 or later. For registries version 1.9.2 or earlier, you can configure integrations at the registry regulations level using the bp-trembita/configuration.yml file. For details, see REST connector: configuring the regulations. To use the Platform’s REST connector for integration with external systems and registries and fetch data from them, you must first configure the connector at the registry instance level. To configure external interactions, you need to create a corresponding configuration in the Control Plane console. This enables deploying a Service Entry, which serves as an entry point for the outbound traffic, and creating a secret for accessing the external resources. A Service Entry is created automatically when a registry is deployed using the MASTER-Build- Jenkins pipeline. For details, see Rest connector: creating a Service Entry. Similarly, the secrets (such as a token or password) are created automatically after the settings are applied using the MASTER-Build- Jenkins pipeline. The secret is added to the user-management:hashicorp-vault for the system or service to which requests will be made. For details, see Rest connector: creating a secret for service authorization. Integration with third-party systems requires additional configuration at the regulations level. Namely, you need to list the operations and their types used by the registry through the standard Connect to external system integration extension (REST connector). For details, see REST connector: configuring the regulations. Configure an external integration in Control Plane: Sign in to the Control Plane admin console as a registry administrator. Open the Registries section and open your registry. You can only configure external integrations when editing a registry. Here is the general procedure: First, create a registry. Then an administrator can configure external integrations and secure exchange gateway (SEG). After the configuration is applied, the Service Entry and the service authorization secret are deployed automatically. Expand the Setting up interaction with other systems section and click Add external system. In the Add external system for interaction window that opens, configure the external integration with the registry regulations. Network access policies are created automatically. External system name: Enter the name of the system to integrate with. The name does not affect the integration, but you cannot change it once you apply the registry configuration. External system address: Enter the base URL of the server to connect to. For example, https://wallpapercave.com. The URL must start with http:// or https://, meaning that the external service will be accessible through port 80 or 443, respectively. These settings are automatically added to the Service Entry YAML configuration (see the steps further in this topic). Integration protocol: REST is the only supported option. Select authentication type: Select NO_AUTH from a dropdown list. This method allows accessing public resources without authorization. The Platform supports the following authentication methods: NO_AUTH An authentication method that does not require any credentials or authentication tokens to access a specific resource or service. This means that anyone can access the resource without restrictions or identity verification. AUTH_TOKEN AUTH_TOKEN is short for \"authentication token,\" which is a fragment of data used to grant a user or system access to a specific resource or service. Authentication tokens are typically used in web applications, APIs, and other network systems to ensure secure and efficient access to resources. Tokens come in various forms, such as random strings of characters, encrypted data, or JSON web tokens (JWT) that contain information about the user and expiration time. BEARER BEARER authentication method is used in HTTP-based communication. It is based on security tokens called bearer tokens. In this method, the client requesting access to a secured resource includes a bearer token in the request’s Authorization header, which is usually a long string of characters representing the user’s identity and permissions. The server then verifies the token’s validity and grants access to the secured resource. The bearer token can be obtained through a separate authentication process, such as OAuth or OpenID Connect, and is used in APIs for managing access to resources. Since the bearer token is included in the request header, it can be easily intercepted. Therefore, it is essential to ensure its secure transmission, for example, by using an HTTPS connection. BASIC BASIC authentication method is used in the HTTP protocol to protect web resources from unauthorized access. This method involves transmitting a username and password as unencrypted text in the HTTP request header. In BASIC authentication, the server requests the username and password from the client, and then verifies that they match the authentication records. If the username and password match the authentication records, the server grants access to the protected resource. If records do not match, the server returns an error code (usually 401). Most web servers and applications support BASIC authentication. However, since the username and password are sent in plain text, BASIC authentication is not a reliable authentication method. Therefore, it is essential to ensure connection protection through encryption, for example, using an HTTPS protocol. AUTH_TOKEN+BEARER A combined authentication method is usually used to protect access to APIs. This method uses two types of tokens: the \"access token\" (bearer token) and the \"authentication token\" (AUTH_TOKEN). This method involves a two-step authorization process with obtaining an access token (BEARER) based on an authentication token (AUTH_TOKEN). How bearer tokens are cached The Platform provides efficient caching of authorization tokens for external integrations when using a REST connector, which is part of the bpms service. Caching the tokens obtained for external integrations improves performance by avoiding unnecessary authentication requests. The token’s time to live is determined by the exp (expiration time) JWT claim in the authorization token. For details on this JWT specification, refer to RFC 7519. After the date and time specified in the exp claim have passed, the token is rejected by the verification system, and the Platform requests a new token. If the exp claim is absent, caching is not performed. Click Add to save your settings. As a result, the system creates a registry configuration update request. In registry settings, scroll down to the Update requests section and click the view icon 👁 to open your request. The system automatically confirms the changes and saves them to the registry configuration deploy-templates/values.yaml file. Review the parameters added to the configurations in the Update request window. The comparison window provides a convenient way of reviewing the differences between the two versions: the current (left) and the new (right). In our example, the configuration looks like this: Example 1. Configuring an external integration using the NO_AUTH method in deploy-templates/values.yaml external-systems: test-external-system: url: https://wallpapercave.com type: registry protocol: REST auth: type: NO_AUTH Review the integration settings for the selected system. You can edit or cancel these settings using edit (🖉) or delete (🗑) icons. As a result, the MASTER-Build- pipeline starts. It applies the integration settings you provided. Wait until the build is completed. This may take up to 15 minutes. To monitor the build status and result, use the link in the CI column. Once the build is completed successfully, the system applies your configuration and creates a new Service Entry in your registry project. You can check the result in the Openshift console. Configure additional parameters at the registry regulations level in the bp-trembita/configuration.yml file. External system integration parameters may look like this: Example 2. External integration parameters in the registry regulations version 1.9.3 or later external-systems: #provide the name of the system with which the integration is configured system-name: #specify the types of allowed operations operations: get-operation: resource-path: \"/get\" method: \"GET\" For details on configuring the regulations, see REST connector: configuring the regulations.","title":"Configuring integrations with external systems in Control Plane","component":"platform","version":"1.9.6","name":"cp-integrate-ext-system","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/cp-integrate-ext-system.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Configuring external integrations in Control Plane","hash":"external-integration","id":2}]},"123":{"id":123,"text":"On this page: 1. General description 2. Integration interaction types 2.1. Data exchange with other systems using REST 3. Additional video materials Management of external integrations plays a critical role in ensuring information exchange between different systems and data sources. REST (Representational State Transfer) and SOAP (Simple Object Access Protocol) are two main protocols used for interaction with other registries and systems to transmit data. REST, based on the HTTP protocol, allows interaction with other registries on the Platform and external systems by sending requests and receiving responses in JSON format. SOAP, on the other hand, uses an XML schema to interact with other systems, enabling the invocation of methods and passing parameters using a specific set of rules. Key principles of integration with other registries and systems: The registry regulations do not contain environment-specific settings to ensure consistency of settings across all instances. The registry regulations do not contain any confidential data in any form to prevent unauthorized use. Configuration settings for external integrations are not duplicated and are centrally used to ensure consistency. Adding external systems for integration with the registry does not require manual configuration of network policies to facilitate fast and secure integration. Secrets with access parameters to external systems are stored in a secure vault service called HashiCorp Vault to prevent unauthorized access to this data. The registry administrator configures integrations with other systems at the registry instance level in the Control Plane administrative panel, including integration protocol, address, authentication protocol, secrets, etc. The registry administrator is responsible for secret rotation and access parameter management for external systems. The administrator provides minimal pre-configuration at the registry regulation level for the use of external integrations in business processes. Integration with third-party systems requires additional configuration at the registry regulation level, including defining a list of operations and their types used by the registry through the standard integration connector extension Connect to external system (REST connector). For Platform versions 1.9.3 and above, major configurations are performed at the registry instance level in the Control Plane console. For versions 1.9.2 and below, all configurations are performed at the registry regulations level. Interaction settings with external systems are only possible during registry editing. The platform allows for flexible integration with other registries and systems and supports the following interaction: SOAP API Interaction through the API using SOAP integration connectors. This is the primary type of integration interaction. An instance of the API is installed at the Platform level. Each external system of this kind must have an instance of the API installed on its side and be a registered participant in the unified secure space, where SOAP is the main protocol of integration interaction. REST API Interaction with other registries on the Platform and external systems beyond its boundaries through REST interfaces. This is an additional type of connection that extends the capabilities of integration interaction. The integration REST interaction of registries with other registries on the Platform and external systems allows the transfer of data from one registry to another or between external systems using REST requests. REST (Representational State Transfer) is a software architecture style for creating web services. In the REST architecture, there are a set of constraints that ensure the interaction between the client and the server. REST utilizes the HTTP protocol for data transmission. Such interaction utilizes the REST API and HTTP requests to obtain information. The interface can provide access to the registry’s functionality and allow reading and modifying data. Data is transmitted in the JSON format. Data can be transferred in both directions - from the external system to the registry or from the registry to the external system. To set up the interaction with other systems using REST, you need to: Configure the interaction with registries in the Control Plane administrative panel. For more information, see Configuring integrations with external systems in Control Plane. Perform minimal configuration at the regulations level. For more information, see REST-конектор: налаштування регламенту. Model data exchange with other systems in business processes using the Connect to external system REST integration connector. For more information, see REST-конектор: моделювання у бізнес-процесі. For a detailed information on REST integration, see Interacting via REST between Platform registries and with external systems.","title":"Managing external integrations","component":"platform","version":"1.9.6","name":"ext-integration-overview","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/ext-integration-overview.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Integration interaction types","hash":"_integration_interaction_types","id":2},{"text":"2.1. Data exchange with other systems using REST","hash":"exchange-data-ext-system","id":3},{"text":"3. Additional video materials","hash":"_additional_video_materials","id":4}]},"124":{"id":124,"text":"On this page: 1. General description 2. Inter registry REST interaction schemes 2.1. REST interaction of registries on the Platform with an external information system 2.2. REST interaction of registries within a single Platform 3. Setting up interaction between registries 3.1. Configuring target registry (data owner) 3.2. Configuring the client registry (data consumer) 3.3. Obtaining authorization token from external systems 3.4. Outbound integration with external systems 3.5. Related pages The Platform supports integrative interaction of registries using REST API interfaces. This interaction is made possible due to the Inter registry integration subsystem. The functionality ensures interoperability of the Platform, providing access to business processes and data reading APIs, as well as allowing reading data and invoking business processes in other registers. Main functions of the inter registry integration subsystem: Providing an API for invoking registry business processes by external systems. Providing access for other registries or systems to individual data read requests of the registry data management subsystem. Routing requests to external registries with granted access. There are two schemes of integration of the registries deployed on the Platform: REST interaction of registries on the Platform with an external information system REST interaction of registries within a single Platform Integration interaction of registers with external systems can be divided into outbound and inbound, depending on the direction of traffic. Figure 1. Interaction of registries on the Platform with a third-party information system Outbound interaction is possible through the integration REST connector — Connect to external system. The connector has a REST interface for calling external endpoints. It can be used when modeling business processes in the regulations of a specific register. OpenShift (Kubernetes) secrets should be used for authentication. Inbound interaction is possible through the implemented registry services: external-system-api-kong-proxy and registry-rest-api-ext. The external system needs to initially obtain an access password from the registry administrator. With this password, it can obtain an access token in the Keycloak service. This token can then be used for authorization in services and accessing resources. The external-system-api-kong-proxy service is automatically deployed along with the register and has a REST interface that allows initiating business processes in registers on the Platform and retrieving data from them. The service uses the entry point (endpoint) /startBp to start a business process. The registry-rest-api-ext service is automatically deployed after creating the data model in the registry regulations. It allows accessing API representations of the registry operational database. During the integration interaction of registries within the Platform, there is always a registry client (data consumer/requester) and a target registry (data owner). Figure 2. REST Interaction of registries within a single Platform The registry client can request data from the target registry in two ways: The registry client needs to obtain an access token from the Keycloak service for another registry. This token can be used for authentication in the services. Through the bp-webservice-gateway service, which is automatically deployed with the registry and has a REST interface allowing the initiation of business processes in the registries on the Platform and retrieving data from them. The service utilizes the entry point (endpoint) /startBp to start a business process. Initiating business processes in another (target) registry is possible using a special delegate extension called Start business process in another registry. It is designed solely for registry integration within the Platform. To retrieve data from the operational database of another (target) registry within the execution of business processes, a special delegate extension called Search for entities from another registry data factory can be used. It is intended only for registry integration within the Platform. Through the registry-rest-api-ext service, which is automatically deployed after creating a data model in the registry regulations, it is possible to access the API representations of the registry’s operational database from the User interface (based on search condition) in the User portal. Configure REST interaction with other registries within a single Platform instance or external systems. If your registry receives requests and provides data, refer to the section Configuring target registry (data owner). If your registry queries data from other registries on the Platform, refer to the section Configuring the client registry (data consumer). For external systems, it is important to obtain an access token to the registry from Keycloak to use it for further authorization in registry services. An example of implementing token retrieval logic through Postman can be found here: Obtaining authorization token from external systems. A separate scenario is configuring outbound interaction with external systems, where the registry on the Platform needs to call other systems. This can be done using a REST connector (see Outbound integration with external systems). If your registry is the data owner and you want to expose integration API endpoints, receive requests, and provide data to other registries or systems, perform the following regulations settings: Configure authorization settings — provide access for invoking the business process. Model the business process to be invoked by another registry. Create a data model (grant read access to the registry data through the API representation). For more details on setting regulatory requirements for steps 1-3, refer to Configuring the regulations to provide access to data via SOAP and REST APIs. Also, for REST interaction, grant access to the registry for another registry on the Platform or external system in the Control Plane administrative panel. Administrators can add, delete, or suspend access to the registry for other registries on the Platform and external systems. For more details, see Configuring registry access. Configure interaction with other registries for the data-consuming registry. To do this: Model the business process with the ability to call an external registry. Example .bpmn process model, as well as custom .json forms for it, can be found in the consent-data demo registry regulatory document at the following link: https://admin-tools-consent-data.apps.envone.dev.registry.eua.gov.ua/gerrit. The process will be available under the name BPMN-create-school-auto.bpmn. You can find the form names inside the respective user tasks of the business process in the Form key field. Within the business process, use standard integration extensions to interact with other registries on the Platform: Start business processes in another registry on the Platform - use the standard integration extension-connector Start business process in another registry. Retrieve data from the operational database of another registry on the Platform - use the standard integration extension-connector Search for entities from another registry data factory. For descriptions and configurations of delegates, see Standard extensions for integration with business processes of other registries on the Platform. To start a business process in the target registry, you need to pass the initial variables that are expected by it. For example, you can pass the initial variables as a Map of input parameters (Input Parameters), for example, as key-value pairs when configuring the delegate for starting the business process. Figure 3. Formation of initial variables of the process in the client registry for transfer to the target registry Model a UI form to read data from the operational database of the registry based on search condition. This allows accessing the database of another registry from a user form. To do this: Go to the Regulations administrator portal> Open the UI Forms section > Create a data input form > Open the Form builder. In the Select component, switch to the Data tab > In the Data Source URL field, enter the path to the resource in the data factory of another registry: Example 1. Data Source URL field on the UI form /api/integration/data-factory/test-registry/resource-name Parameter/Path Description /api/integration/data-factory Root path (unchanged). test-registry Service name of the target registry specified in the Control Plane. resource-name Name of the resource/endpoint to be accessed for data retrieval. For example, /edu-type. Figure 4. Request to the database of another registry based on the search condition from the UI form. To access registry resources, an external system needs to obtain a special access token --a JWT token. It is intended for further authorization of external systems when interacting with registries deployed within the Platform. For more details see Calling the registry from an external system: getting a JWT token from Keycloak. If there is a need to integrate with an external service or a system outside the Platform cluster, use a special REST connector — Connect to external system. For more details, see Integration with external services using the REST connector. The functionality description includes related pages from the documentation. They are listed in this section for convenience. Configuring registry access Configuring the regulations to provide access to data via SOAP and REST APIs Setting access attributes for registry API views Standard extensions for integration with business processes of other registries on the Platform Calling the registry from an external system: getting a JWT token from Keycloak Integration with external services using the REST connector","title":"Interacting via REST between Platform registries and with external systems","component":"platform","version":"1.9.6","name":"rest-api-no-trembita","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/rest-api-no-trembita.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Inter registry REST interaction schemes","hash":"_inter_registry_rest_interaction_schemes","id":2},{"text":"2.1. REST interaction of registries on the Platform with an external information system","hash":"int-registry-ext-system","id":3},{"text":"2.2. REST interaction of registries within a single Platform","hash":"platform-registries","id":4},{"text":"3. Setting up interaction between registries","hash":"_setting_up_interaction_between_registries","id":5},{"text":"3.1. Configuring target registry (data owner)","hash":"target-registry-setup","id":6},{"text":"3.2. Configuring the client registry (data consumer)","hash":"client-registry-setup","id":7},{"text":"3.3. Obtaining authorization token from external systems","hash":"get-access-token-keycloak","id":8},{"text":"3.4. Outbound integration with external systems","hash":"rest-connector","id":9},{"text":"3.5. Related pages","hash":"_related_pages","id":10}]},"125":{"id":125,"text":"On this page: 1. Overview 2. Metrics setup and configuration 3. Dashboard general view 3.1. Process Engine general metrics 3.2. Business process general metrics 3.3. General metrics of message exchange within a business process 3.4. General metrics of asynchronous business process task execution 3.5. Deleting business process execution historical data A registry technical administrator can monitor business process metrics via Grafana web-interface. Administrators and developers can monitor the key metrics and use this info to identify and correct possible issues, and increase system productivity. The main points of monitoring include: Access to the dedicated Camunda Metrics dashboard: the technical administrator gets access to a dashboard with a defined list of metrics — Camunda Metrics. Selection of the registry project: if the administrator has access to multiple registries, they can specify a project (namespace) of a registry, which they need metrics for. The procedure of registry updating automatically provides the following abilities: Metrics registration is enabled by default: this means that the system automatically registers and monitors important execution metrics, such as productivity, load, response time, and other info on system state. Configuring gathering and storing of metrics in Prometheus: the system automatically configures the gathering and storing of metrics in Prometheus, ensuring continuous access to this data for analysis and optimization. Setup and configuration of Grafana dashboard: setting up and configuring Grafana dashboard allows the administrators to visualize the metrics, monitor live changes and get notifications about possible problems or anomalies. This way it’s easier to work with the metrics and react to any changes in the system. To view the dashboard, take the following steps: Navigate to the administrator panel Control Plane. Select your registry > Edit > Quick links See more info on quick links here: Quick links to registry services. Follow the link to Grafana monitoring Platform web-interface. Sign in using the Sign in with OAuth option. On the left side panel, select Manage > Dashboards > Go to folder. Open the Camunda Metrics Dashboard. Тут ви можете ознайомитися із групами метрик, представленими на дашборді. Camunda Metrics are differentiated by several groups, which are described later in this document. Process Engine general metrics provide important information about the state and functioning of the Process Engine, allowing the administrators to control and optimize system operation. These metrics include the following indicators: User count: shows the general number of registered users in the system. Authorization count: shows the number of rights for different actions granted to users of user groups. Active deployments: shows the number of current process deployments in the system. Active process definitions: shows the number of unique business process definitions currently active in the system. What is Active process definition? Active process definition means that the process may not be running yet, but is available for new instance deployment. Starting a process from the Active process definition state will deploy a new instance. Business process general metrics show the statistics on starting, executing and completing business processes. These metrics include the following indicators: Root Process Instances: the main process instances that represent certain business process use cases in Camunda. They differ from subprocesses that deploy within other processes. Camunda Total Root Process Instances: shows the general number of the created main process instances, including active, suspended, completed and terminated. Camunda Active Root Process Instances: shows the number of main process instances, which are currently active and running in the system. Camunda Suspended Root Process Instances: shows the number of main process instances, which were suspended and aren’t currently running. Camunda Completed Root Process Instances: shows the number of successfully completed main process instances. Camunda Terminated Root Process Instances: shows the number of main process instances terminated before completion, usually due to unplanned situations or administrator actions. + User Tasks: user tasks that user interaction during business process execution. They allow the administrators to monitor user workload and control decision making. Camunda Total User Tasks: shows the general amount of user tasks created within all the processes. Camunda Assigned User Tasks: shows the general amount of user tasks assigned to users or user groups. Camunda Unassigned User Tasks: shows the general amount of user tasks not assigned to a user or user group. These tasks may be assigned later or resolved using automatic rules. + General metrics of message exchange within a business process: these metrics show information about message exchange in a certain business process, including active event subscriptions and message processing. These metrics include the following indicators: Active Signal Event Subscriptions: shows the number of active subscriptions for signal events used to coordinate between different processes or different elements within a single process. Active Compensate Event Subscriptions: shows the number of active subscriptions for compensate events used to revert actions in a process in case of unplanned cases. Active Conditional Event Subscriptions: shows the number of active subscriptions for conditional events used to react on changes of process state, or external factors. Active Message Event Subscriptions: shows the number of active subscriptions for message events that allow for the exchange of messages between different processes and components. General metrics of asynchronous business process task execution: provide statistics of asynchronous task execution, like the number of active, timed and executed jobs. These metrics include the following indicators: Message Jobs: shows the number of active and timed tasks, associated with message processing in a business process. Timer Jobs: shows the number of active and timed tasks, associated with timers used to control time periods and other time restrictions in a business process. Executable Timer Jobs: a specific category of jobs that utilize timers and are ready for execution or are waiting for a free worker thread for their execution. They can be used to control time intervals and other time constraints within business processes. Executable Jobs: shows the number of tasks ready for execution, or awaiting a free workflow for execution. The deletion of business process execution historical data: contains metrics associated with the deletion of business process historical data for system resource optimization. These metrics include the following indicators: Removed process instances: shows the number of deleted historical business process instances within the system. It allows for the optimal resource usage, improving the productivity and reducing system workload. Removed tasks: shows the number of removed historical tasks within business processes. The deletion of historical tasks also improves the resource usage and system operation stability, because it reduces database and other components' workload.","title":"Monitoring business process execution metrics","component":"platform","version":"1.9.6","name":"grafana-camunda-metrics","url":"/platform/1.9.6/registry-develop/registry-admin/grafana-monitoring/grafana-camunda-metrics.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Metrics setup and configuration","hash":"_metrics_setup_and_configuration","id":2},{"text":"3. Dashboard general view","hash":"_dashboard_general_view","id":3},{"text":"3.1. Process Engine general metrics","hash":"_process_engine_general_metrics","id":4},{"text":"3.2. Business process general metrics","hash":"_business_process_general_metrics","id":5},{"text":"3.3. General metrics of message exchange within a business process","hash":"_general_metrics_of_message_exchange_within_a_business_process","id":6},{"text":"3.4. General metrics of asynchronous business process task execution","hash":"_general_metrics_of_asynchronous_business_process_task_execution","id":7},{"text":"3.5. Deleting business process execution historical data","hash":"_deleting_business_process_execution_historical_data","id":8}]},"126":{"id":126,"text":"On this page: 1. View 2. Configuration This dashboard provides an overview on registry operation, including external requests execution states, among others. It contains the following visualizations: Requests to API Gateway: Shows the general number of external HTTP-requests received by the registry. Errors in Rest API data factory : Shows the number of errors that appeared during the processing of requests to Rest API data factory. Using e-Signature in the registry : Shows the general number of operations conducted in the cryptoservice, with sorting by type and status. Requests to registry microservices : Shows the general number of requests to the registry microservices, with sorting by HTTP-code of the response. Figure 1. Requests to the API Gateway, errors in Rest API data factory, and using e-Signature in the registry Figure 2. Requests to registry microservices To set up this dashboard, take the following steps: Download the request-dashboard.json file. Change all the YOUR_REGISTRY_NAME placeholders (there are 5) in the file to the required registry name in your preferred text editor. Create 2 index pattern via Kibana web-interface: app-* and app--*. — name of your registry. For example, app-test-registry-*. Import the prepared file (see step 2) via Kibana web-interface. Select the corresponding index pattern for the visualization during the import (app-REGISTRY-NAME-*). Configure the dynamic filter. For the correct operation of the Filter for microservices , update the indexPattern ID: Open the API Gateway requests visualization. Copy the value of index parameter in the kibanaSavedObjectMeta.searchSourceJSON section. Open the Filter for microservices visualization. and change the value in visState section of the params.controls[0].indexPattern to the value from the previous point. Default indexPattern value: APP-*_INDEX_ID. Press Save visualization Object. In the Dashboard > Requests state section you can view the states of requests, during registry operation.","title":"Request state visualization in Kibana during registry operation","component":"platform","version":"1.9.6","name":"kibana-request-dashboard","url":"/platform/1.9.6/registry-develop/registry-admin/openshift-logging/kibana-request-dashboard.html","titles":[{"text":"1. View","hash":"_view","id":1},{"text":"2. Configuration","hash":"_configuration","id":2}]},"127":{"id":127,"text":"On this page: 1. User manual 2. Errors 2.1. Data filtering 2.2. Data visualisation 2.3. Dashboard import 2.4. Working with charts Kibana is a tool that visualizes all application logs. Logs of any virtual environment are recorded into the console and duplicated into Elasticsearch. To access the records, navigate to Kibana. You can get the link to Kibana technical logs in the Networking → Routes of Openshift console by specifying service name in the search. To do that, take the following steps: Open the application and navigate to the Management section. Click Create index pattern to view logs from the indexes that get into Elasticsearch. In the Define Index Pattern create your index-pattern according to the template. For example, if all the logs start with app-, create app-* index pattern to view the corresponding logs. Click Next step to continue. Use a filter in the Configure Settings tab to select the time period for the shown data. By default, the system shows logs from the last 15 minutes. Click Create Index Pattern. After the app-* index-pattern has been created, navigate to the Discover tab to get the following info: the number of logs created in the selected period; log list. Click the icon to the left of the corresponding row to view event parameters: time of the event; place of the event; type of the event (info/warning/error); event message. If there is an error during request processing, you can view all the info on this error with trace id, using the following methods: Method 1. To find the logs that contain information on the corresponding event, copy the trace id in the Registry on the portal, or Openshift. Then paste it to the search line in the Discover tab and specify the time period that you need the data for. Method 2. Navigate to the Filter window in Discover tab, select X-B3-Traceid, then is, and click Save. The resulting logs will have the given trace id. To control the number of results, and filter out less relevant search data, configure the corresponding fields, selecting Message and Level in the list to the left. Kibana allows you to visualize information using different charts. To do that, take the following steps: Select the Visualize tab; Click Create visualization; Select visualization type; Specify the timpe period for the data. You can see all the visualizations on the same dashboard in the Dashboard tab. To import a dashboard, download the kibana-logs-dashboard.json file. When done, take the following steps: Select the Management tab. Click Saved Objects. Click Import. In the prompt window, click Import again. When the download is complete, navigate to the Downloads folder and select kibana-logs-dashboard.json. Click Import and Done, to import all the objects that contain: dashboard; the created index-pattern; all visualizations. After completing the import, take the following steps to get consolidated information from all the logs: Navigate to the Dashboard tab. Select Logs Dashboard from the list. Select the environment using filters. Click Apply changes to get information on the environment aggregated in the last 15 minutes. Use filter to specify the required time period. Charts and tables contain the following information: the general number of requests in the specified time period: incoming; outgoing. the number of incoming requests by environment. the general number of: errors; replies. the number of replies by environment. Requests and replies are events recorded in dedicated logs. The number of replies must be equal to the number of requests. Successful replies are characterized by a numeric code, which is less than 500. Replies with a code of 500 or higher are errors. http traffic (the list of requests and replies) all the logs that contain information required to investigate the reasons for failed requests; next, filter the info by the specified trace id; you can see how many requests and replies match this trace id, and all the logs and log records that contain the following info: request duration; headers; reply status-code; message; all the logs that match the id. exceptions are sorted by number from high to low, and contain the following info: which exceptions occured; the service the exceptions occured on. To get detailed info on an exception: select the time; navigate to the container field and select the name of the service, where the error has occured; click apply changes. If the error does not belong to a particular service: Copy error name. Enter the name into the search field (it is recommended to use quotes \"\" to get a more precise result). The table below shows the following data: time; error level; message. The message section contains detailed information on the error and its reasons. The Dashboard tab shows the number of errors that occured in the selected time period. Clicking a number will filter errors by reply code: 501, 502, 503, 504, 505. You can find the information on these codes below. Requests can be filtered by trace id in the search field of the Dashboard tab. Here you can see the number of requests, replies, and errors with the specified trace id. Navigate to the table containing all the information on the failed request. The information is sorted by time, so start reading from the bottom. The table allows you to follow the entire path of the request and find where the error appeared, and its reasons. The request with an error always has an exception that tells us why the error appeared. To see it, check the level section, which may have one of the following values: info - information on the state of events; warning - warning; error - error. The former two values are non-critical and don’t require any special attention. To find the error, filter by err on the Dashboard tab. In the resulting logs, click the arrow on the right to see the detailed info. This will provide all the information on the error and its reason.","title":"Working with logs in Kibana UI","component":"platform","version":"1.9.6","name":"kibana","url":"/platform/1.9.6/registry-develop/registry-admin/openshift-logging/kibana.html","titles":[{"text":"1. User manual","hash":"_user_manual","id":1},{"text":"2. Errors","hash":"_errors","id":2},{"text":"2.1. Data filtering","hash":"_data_filtering","id":3},{"text":"2.2. Data visualisation","hash":"_data_visualisation","id":4},{"text":"2.3. Dashboard import","hash":"_dashboard_import","id":5},{"text":"2.4. Working with charts","hash":"_working_with_charts","id":6}]},"128":{"id":128,"text":"On this page: 1. Overview 2. Cleanup job stages and steps 3. Configuring and starting the cleanup process The cleanup pipeline (cleanup-job) in Jenkins is an automated process designed to optimize the registry regulations by removing obsolete or unnecessary data, resources, and components. The process performs the following tasks: Cleaning up temporary DB replicas deployed for version candidates. Removing resources and services. Cleaning up the Nexus repository. Additional cleanup operations set up by an administrator. We do not recommend running the cleanup job on production environments, as this may result in the loss of important data. The cleanup process includes the following stages: cleanup-of-version-candidate-dbs During this stage, the job cleans up temporary databases for version candidates, which frees up disk space and helps to keep the system in order. For details on deploying the databases for version candidates, see registry-admin/admin-portal/registry-modeling/tables/tables-data-structures.adoc#data-model-version-candidate. delete-data-services During this stage, the job removes buildConfig and Helm chart resources for the following data services: registry-kafka-api, registry-soap-api, registry-rest-api, and registry-model. Also, the job removes Kafka topics for the registry API service (registry-rest-api). Data services are services and tools that enable data collection, processing, storage, and provision for various applications, users, and systems. cleanup-trigger This stage contains several steps: Deleting the following data services: registry-kafka-api, registry-soap-api, registry-rest-api, and registry-model. Deleting history-excerptor. History excerptor is a tool that generates a readable excerpt with changes from a history table containing data about changes in all other registry database tables and enables downloading this excerpt in PDF format directly from the Jenkins console. Cleaning up the Nexus artifacts repository. One of the following options: Deleting the registry regulations repository (registry-regulations) and cleaning the Redash database and resources (if the DELETE_REGISTRY_REGULATIONS_GERRIT_REPOSITORY checkbox is selected). Leaving registry-regulations unchanged and cleaning the Redash database and resources (if the DELETE_REGISTRY_REGULATIONS_GERRIT_REPOSITORY checkbox is cleared). Creating new empty repositories for history-excerptor and registry-regulations. Creating registry-regulations is skipped if the cleanup process did not remove this component. Starting the MASTER-Build-registry-regulations pipeline with the FULL_DEPLOY option (provided that the cleanup process did not remove the registry-regulations component), which allows deploying the regulations correctly after the cleanup process. You can configure and start the regulations cleanup process in the registry Jenkins service using the following link: https://admin-tools-.apps..dev.registry.eua.gov.ua/cicd Sign in to the Control Plane admin console. Go to Registries > Quick links and click the Jenkins service link. For details, see Quick links to registry services. Open the cleanup-job pipeline and click Build with Parameters in the leftmost menu. Before starting the cleanup pipeline, you need to specify the parameters to ensure the process works correctly. All parameters are configured automatically, and changing their configuration is not recommended. The only parameter that needs to be set manually is the DELETE_REGISTRY_REGULATIONS_GERRIT_REPOSITORY checkbox that defines the pipeline’s logic. Here are the parameters with descriptions: DELETE_REGISTRY_REGULATIONS_GERRIT_REPOSITORY determines whether the registry-regulations repository should be deleted and re-created from an empty template. If this option is selected, the repository will be deleted and created from scratch. By default, the DELETE_REGISTRY_REGULATIONS_GERRIT_REPOSITORY option is cleared. STAGES contains options for configuring the various stages of the process (for details, see Cleanup job stages and steps). CODEBASE_NAME contains the name of your CodeBase. Set it to registry-regulations. CODEBASE_HISTORY_NAME contains the name of CodeBase history that shows the version and state of the code at a certain point in time. Set it to history-excerptor. REPOSITORY_PATH contains the path to your repository. This will help the system to find and work with the appropriate repository. LOG_LEVEL determines the logging level for the process. Possible values are ERROR, WARN, INFO, or DEBUG. This parameter allows you to control the level of detail of information that will be stored in the logs during the execution of the process. To view the process execution log, open the corresponding pipeline and click Console Output in the leftmost menu. DEPLOYMENT_MODE determines the system’s deployment mode. Possible values are development or production. After setting all parameters, start the cleanup process by clicking the Build button. The system performs the specified operations according to the configuration and ensures the appropriate state of the codebase and repositories. As a result, the regulations cleanup process starts, which either deletes the registry-regulations repository or not, depending on the DELETE_REGISTRY_REGULATIONS_GERRIT_REPOSITORY option at the cleanup-trigger stage. Completing the cleanup process automatically starts the MASTER-Build-registry-regulations pipeline with the FULL_DEPLOY option (provided that the cleanup process did not remove the registry-regulations component), which allows deploying the regulations correctly after the cleanup process.","title":"Regulations cleanup","component":"platform","version":"1.9.6","name":"cleanup-job","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/cleanup-job.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Cleanup job stages and steps","hash":"stages","id":2},{"text":"3. Configuring and starting the cleanup process","hash":"build-with-params","id":3}]},"129":{"id":129,"text":"This guide provides instructions on deploying pre-configured registry regulations. For an overview of the registry regulations' main elements, see Registry regulations structure. Step 1 Sign in to the registry’s Gerrit code review system. You can obtain the Gerrit link in the OpenShift web console. Go to Networking > Routes, select your project, search for gerrit, and copy the link from the Location column. In Gerrit, go to Browse > Repositories. Find the registry regulations' repository called registry-regulations. Step 2 Open the registry-regulations repository by clicking its name and copy the entire git clone command from the Clone with commit-smg hook field. Save it in any text editor. This command copies the remote repository to the local machine. Step 3 Start the Git Bash terminal from the directory to which you want to clone the repository. Paste the command you copied in step 2 into the console and run it. You can obtain the credentials in your Gerrit user profile in the Settings > User Settings > HTTP Credentials section. After the remote repository is copied successfully, it becomes available on the local machine. Step 4 Copy the pre-configured regulations files to their corresponding subdirectories inside the registry-regulations directory. You may copy the regulations files from a working registry and modify them if needed. Open the Git Bash terminal from the directory containing the regulations that are ready for deployment. Execute the following commands in the Git Bash terminal: git add . git commit -m \"Message commit with changes\" git push origin HEAD:refs/for/master Where: git add . adds all files (locally) git commit -m \"Message commit with changes\": git commit updates the registry regulations (locally) -m adds a comment to the commit \"Message commit with changes\" is a placeholder for the comment message git push origin HEAD:refs/for/master: git push origin pushes local changes to the remote repository containing the registry regulations HEAD:refs/for/master is the path to the master branch of the remote repository As a result, the local regulations files are deployed to the Gerrit repository. Step 5 Go to Gerrit > Changes > Open and ensure the change is created. Step 6 Open the change you created and follow the review procedure. Click Reply. In the new window, apply the following votes: +2 for Code-Review +1 for Verified Click SEND, then click SUBMIT to merge the changes to the remote repository (git merge). In the dialog, click CONTINUE. Step 7 In Gerrit, go to Changes > Merged. Find your change, open it, and ensure that the CI Jenkins pipeline named MASTER-Build- is running. Wait until it is completed. To monitor the pipeline in Jenkins, use one of these options: Click the CI Jenkins link in the Change Log section. Alternatively, open the Jenkins job using the link at the bottom of the page. In Jenkins, click Back to Project in the leftmost menu. Verify that the build is successful. All the build stages must be completed without errors and marked with green. If there are any errors during the regulations build, you must look through the logs to find the issue causing the error, solve it, and perform the update again. For an example of analyzing the Jenkins logs for errors, see xref:registry-admin/regulations-deploy/registry-regulations-auto-validation.adoc#example-validation-fk-name. After the Jenkins job is completed successfully, the registry regulations entities are created, and you can proceed to validate them.","title":"Deploying regulations in Gerrit","component":"platform","version":"1.9.6","name":"registry-admin-deploy-regulation","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-admin-deploy-regulation.html","titles":[]},"130":{"id":130,"text":"registry-develop:registry-admin/regulations-deploy/registry-admin-instruments-access.adoc Registry regulations structure Deploying regulations in Gerrit Automatic validation of the regulations changes Regulations cleanup","title":"Working with registry regulations in Gerrit","component":"platform","version":"1.9.6","name":"registry-admin-introduction","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-admin-introduction.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"131":{"id":131,"text":"On this page: 1. Overview 2. Checking the foreign keys letter case 3. Checking the officer roles letter case 4. Checking the uniqueness of attributes in the business process forms 5. Checking the uniqueness of business process identifiers 6. Checking the existence of business processes in the regulations This document illustrates how the regulations changes are validated using MASTER-build-registry-regulations pipeline errors as an example. Utilize the reference examples of regulations modeling in the demo registry. Please get in touch with the Platform administrator to deploy such a registry or gain access if the registry already exists. You can find instructions for deploying the demo registry and obtaining modeling examples on page Demo-registry deployment with reference examples. According to the security architecture of the Platform and the registries deployed on it, the regulations of each registry must go through a code review procedure before updating the target repository. A code review procedure provides a reliable way of detecting errors when modeling the regulations elements before the changes are applied. Still, there is always a possibility of human error. For example, when working with the regulations configuration files, someone may use the wrong letter case, provide non-unique values, or duplicate attributes. To avoid similar mistakes, the Platform performs additional automatic validation of changes. Automatic validation of the regulations changes currently includes the following checks: Checking that the foreign keys in the data model use the correct letter case. Checking that the officer roles use the correct letter case. Attribute values must use lower case. The validation works the same in both situations. Checking that the attributes in the business process forms are not duplicated and have unique values. Checking that the business process identifiers have unique values. Checking that the business processes with the specified identifiers are present in the regulations. Merging changes to the regulations automatically starts the regulations files build process titled MASTER-build-registry-regulations. For details, see Deploying regulations in Gerrit. If the regulations data is not correct, the build will fail. When building the regulations, the system performs letter case validation of the foreignKeyName attribute value as part of the registry data structures modeling in the data-model directory. If in one of the files at the data factory level (for example, data-model/tablesSubjects.xml, which defines the structure of the tables and the relationships between them) the value of the foreign key attribute foreignKeyName is specified in uppercase (for example foreignKeyName=\"FK_suBject_subject_id\"), the build will fail at the registry-regulations-validation step. Example 1. Automatic validation of the foreignKeyName attribute Consider an example of automatic validation triggering when you update the data-model/tablesSubjects.xml file. Perform these steps: Open the data-model/tablesSubjects.xml file in the regulations development and modeling environment. When modeling your data structures, provide a value that contains uppercase letters (\"Fk_subject_subject_id\") for the foreignKeyName attribute in the tag. Push local changes to the target repository in Gerrit (for details, see Deploying regulations in Gerrit). Go through the code review procedure in Gerrit. Merge the changes (via git merge) with the master branch of the repository. Merging the changes with the master branch of the Gerrit repository automatically starts the build process in Jenkins. To monitor the build process, go to Jenkins using a corresponding link. The build fails with a validation error at the registry-regulations-validation step. Click the build number to open its details and select the Console Output section in the leftmost menu. Find out what is causing the validation error. The log contains a corresponding error message and mentions the value of the parameter that triggered the validation check. [ERROR] The following foreign keys contain uppercase letters, which is not allowed: [Fk_subject_subject_id] Scroll to the bottom of the page and look for the build failed message: ERROR: Registry regulations files did not pass validation Finished: FAILURE When building the regulations, the system performs letter case validation of the name parameter value in the roles/officer.yml file. Only lowercase letters are allowed. If the value of the name parameter in the roles/officer.yml file at the business processes level contains uppercase letters (for example, name: Officer), the build will fail at the registry-regulations-validation step. For an example of how validation triggers when checking the letter case in the data-model directory, see the previous section. When building the regulations, the system checks the uniqueness of the name, display, title, and type attributes in the forms directory. This validation ensures that the name, type, and path to the form in user portals are generated correctly. If the attributes are duplicated and their values are not unique, the build will fail at the registry-regulations-validation step. There are 2 main criteria for this type of validation: The name, display, title, and type attributes cannot be duplicated in the forms directory. Example 2. The attribute is duplicated { \"path\": \"add-lab-bp-add-lab\", \"path\": \"add-lab-bp-add-lab\" } The name, display, title, and type attributes must have unique values in the forms directory when the registry regulations are deployed. Example 3. The attribute value is not unique { \"title\": \"Add lab info\", \"title\": \"Add lab address\" } For an example of how validation triggers when checking the letter case in the data-model directory, see the previous section. When building the regulations, the system checks the uniqueness of the process_definition_id attribute value is unique in the bp-auth directory. This validation ensures the correct identification of the business process to which access is given. If the value of the process_definition_id attribute in the process_definitions array is not unique, the build will fail on the registry-regulations-validation step. The log will display the following error message: \"[Process_id] Process_id is not unique\" Example 4. The process_definition_id value is not unique process_definitions: - process_definition_id: 'add-lab' - process_definition_id: 'add-lab' For an example of how validation triggers when checking the letter case in the data-model directory, see the previous section. When building the regulations, the system checks that a business process with a specified process_definition_id in the bp-auth directory exists. This validation ensures that the registry administrator only grants access to business processes that exist in the system. If the process_definition_id attribute value in the process_definitions array does not match any of the available business processes, the build will fail at the registry-regulations-validation step. Example 5. The process_definition_id value does not match any business processes in the registry authorization: realm: 'officer' process_definitions: - process_definition_id: 'add-lab777777777777777' process_name: 'Create lab' process_description: 'Lab creation regulations' roles: - officer For an example of how validation triggers when checking the letter case in the data-model directory, see the previous section.","title":"Automatic validation of the regulations changes","component":"platform","version":"1.9.6","name":"registry-regulations-auto-validation","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-regulations-auto-validation.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Checking the foreign keys letter case","hash":"_checking_the_foreign_keys_letter_case","id":2},{"text":"3. Checking the officer roles letter case","hash":"_checking_the_officer_roles_letter_case","id":3},{"text":"4. Checking the uniqueness of attributes in the business process forms","hash":"_checking_the_uniqueness_of_attributes_in_the_business_process_forms","id":4},{"text":"5. Checking the uniqueness of business process identifiers","hash":"_checking_the_uniqueness_of_business_process_identifiers","id":5},{"text":"6. Checking the existence of business processes in the regulations","hash":"_checking_the_existence_of_business_processes_in_the_regulations","id":6}]},"132":{"id":132,"text":"System deployment is based on one or several regulations. An administrator configures and deploys the registry regulations, which involves modifying a set of entities or elements of the regulations. The deployment of the registry regulations is automated by CI/CD tools. The MASTER-Build-registry-regulations Jenkins pipeline and other related pipelines are responsible for deploying the regulations. For details on the MASTER-Build-registry-regulations pipeline and deploying the regulations, see platform-develop:registry-regulations-deployment.adoc. The registry regulations directory has a well-defined structure. The following diagram shows a typical regulations structure. Example 1. Typical registry regulations structure Table 1. Regulations structure explained Regulations Directory/file Description registry-regulations A top-level directory containing nested directories with regulations entities. bp-auth A directory containing business processes access YAML files for the citizen (service recipients), officer (service providers), and external-system (external systems and registries) realms. bp-trembita A directory containing configuration files for interactions with external systems and services through SOAP and REST interfaces. bpmn A directory containing business process diagrams in .bpmn format (a type of XML). data-model A directory containing data model diagrams for deploying the database and API representations. Also includes CSV datasets used to populate tables with reference data. dmn A directory containing decision rules modeled in .dmn format (a type of XML). excerpts A directory containing templates for PDF excerpts from the registry. excerpts-csv A directory containing templates for CSV excerpts. excerpts-docx A directory containing templates for DOCX excerpts. forms A directory containing UI input forms modeled in JSON format. global-vars A directory containing global variables for the registry business processes. notifications A directory containing message templates for email and inbox notifications. reports A directory containing generated analytical reports (queries and dashboards) in JSON format. roles A directory containing configuration files for registry roles (officer.yml is used to assign officers of various ranks, and citizen.yml defines service recipients). settings A directory containing the registry’s general settings (such as full and system name of the registry and so on). settings.yaml A configuration file that contains the system settings of the registry and several services.","title":"Registry regulations structure","component":"platform","version":"1.9.6","name":"registry-regulations-structure","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-regulations-structure.html","titles":[]},"133":{"id":133,"text":"The Platform supports sending electronic messages to citizens using various communication channels, namely: inbox: sending in-app notifications using a citizen portal inbox. email: sending email messages using a Platform or external mail server. The regulations administrator needs to define message templates for each communication channel to enable user notifications. Templates are defined in the registry regulations, in the notifications directory. A user needs to opt in to receive messages by enabling a corresponding communication channel in their user portal profile. The inbox is activated by default. The system can only send messages to registered users. If all communication channels are enabled, the messages will be sent through each channel, provided that the registry regulations structure contains a corresponding template.","title":"User notifications","component":"platform","version":"1.9.6","name":"user-notifications-overview","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/user-notifications-overview.html","titles":[]},"134":{"id":134,"text":"On this page: 1. Objectives 2. Tasks 3. Expected result This test aims to give you in-depth practical knowledge of creating business processes on the Platform. Create a data model based on the following table. Table 1. Fields and descriptions No. Field name on the form and in the logical data model Field name in the physical data model Format Reference used Required field edu_organization entity 1 EDEBO ID edu_organization_id_external Number + 2 EDRPOU code edrpou dn_edrpou + 3 Full name full_name Text + 4 Short name short_name Text + 5 Institution status (Institution status ID) edu_status_id UUID Institution status (edu_status) + 6 Ownership type (Ownership type ID) ownership_id UUID Ownership type (ownership) + 7 Town settlement Text + 8 Address address Text + 9 Phone phone_number Text + 10 Email email Text + 11 Website website Text - 12 Institution head head_name Text + 13 Accreditation status accreditation_flag Boolean + 14 Accreditation date date_of_accreditation Date - Create a search condition endpoint to fill the Institution status field with READ ALL access support. Input parameters: SELECT edu_status_id, name, constant_code FROM edu_status ORDER BY name ASC; Parameters: none Constants: none Output parameters: UUID, working, WORKING UUID, suspended, SUSPENDED UUID, reorganized, REORGANIZED UUID, liquidated, LIQUIDATED Create a search condition endpoint to fill out the Ownership type field with LIKE and READ ALL support. Input parameters: SELECT ownership_id, name FROM ownership ORDER BY name ASC; Parameters: none Constants: none Output parameters: UUID, State UUID, Private UUID, Municipal UUID, Corporate SEARCH BY LIKE Input parameters: Input: SELECT ownership_id, name FROM ownership WHERE name LIKE '%держ%' ORDER BY name ASC ; Parameters: name Constants: none Output parameters: l.UUID, State Create a form for adding information about schools and a form for signing data. Use the previously created search conditions in the Select components. Develop a business process for adding schools using the following businessKey: EDEBO ID, Short name, EDRPOU code. After completing this test, you should have the following: A business process for adding schools to a test registry. Your business process must be available as a service in the user portal.","title":"Test No. 1","component":"platform","version":"1.9.6","name":"control-task-1","url":"/platform/1.9.6/registry-develop/study-project/control-tasks/control-task-1.html","titles":[{"text":"1. Objectives","hash":"_objectives","id":1},{"text":"2. Tasks","hash":"_tasks","id":2},{"text":"3. Expected result","hash":"_expected_result","id":3}]},"135":{"id":135,"text":"On this page: 1. Objectives 2. Tasks 3. Expected result This test aims to deepen your practical skills in developing business processes. Create a data model based on the following table. Table 1. Fields and descriptions No. Field name on the form and in the logical data model Field name in the physical data model Format Reference used Required field person_profile entity 1 Last name last_name Text + 2 First name first_name Text + 3 Middle name second_name Text - 4 Date of birth birthday Date + 5 Type of document certifying child’s identity (document type ID) doc_type_id UUID Document type (doc_type) + 6 Birth certificate series birthday_doc_series Text - 7 Birth certificate number birthday_doc_number Text - 8 Child’s document series (if available) and number document_series_number Text - 9 Gender gender Enum type=\"type_gender\" + unit entity 10 Institution of general secondary education ID edu_organization_id UUID + 11 Class name name Text + 12 Class type (class type ID) unit_type_id UUID Class type (unit_type) + 13 Grade parallel Text + 14 Academic year academic_year Text + 15 Maximum students students_max_number Smallint + For details on creating Enum type fields, see Tag for creating an enumerated data type (ENUM). Create the following search conditions: Create a search condition endpoint to fill the Name of the institution I represent and Name of the institution for enrollment fields with EQUALS (edu_organization_edrpou_equals) support. SEARCH BY EQUALS Input parameters: SELECT edu_organization_id, full_name FROM edu_organization WHERE edrpou ='23804735 ' Parameters: edrpou Constants: none Output parameters: 6731fad5-8c80-4965-9fc6-c2cebd508f24, Yaroslav Osmomysl Galicia Lyceum Create a search condition endpoint to check whether specific classes (name and grade) are available in the institution with EQUALS (unit_name_parallel_equals) support. SEARCH BY EQUALS Input parameters: SELECT unit_id, parallel, name, edu_organization_id FROM unit WHERE parallel =’1’ and name ='A ' and edu_organization_id=’UUID’ Parameters: parallel, name, edu_organization_id Constants: none Output parameters: 6731fad5-8c80-4965-9fc6-c2cebd508f24, 1, A, 5731fad5-8c80-4965-9fc6-c2cebd508f25 Or NULL Create a search condition endpoint to fill the Class type field with LIKE and READ ALL (unit_type_name_contains) support. READ ALL Input parameters: SELECT unit_type_id, name, constant_code FROM unit_type ORDER BY name ASC ; Parameters: none Constants: none Output parameters: UUID, General, GENERAL_TYPE UUID, Inclusive, INCLUSIVE_TYPE UUID, Special, SPECIAL_TYPE SEARCH BY LIKE Input parameters: Input: SELECT unit_type_id, name, constant_code FROM unit_type WHERE name LIKE '%Спе%' ORDER BY name ASC ; Parameters: name Constants: none Output parameters: UUID, Special, SPECIAL_TYPE Create a search condition endpoint to fill the Document type field with LIKE and READ ALL (doc_type_contains) support. READ ALL Input parameters: SELECT doc_type_id, name, constant_code FROM doc_type ORDER BY name; Parameters: none Constants: none Output parameters: UUID, Birth certificate of a citizen of Ukraine, BIRTH_CERT_UKRAINE UUID, Birth certificate of a foreign citizen, BIRTH_CERT_FOREIGN UUID, Passport of a foreign citizen, PASSPORT_FOREIGN When displaying values from the doc_type table, the \"Birth certificate of a citizen of Ukraine\" (BIRTH_CERT_UKRAINE) value must be displayed at the top. SEARCH BY LIKE Input parameters: SELECT doc_type_id, name, constant_code FROM doc_type WHERE name LIKE '%сві%' ORDER BY name ASC ; Parameters: name Constants: none Output parameters: UUID, Birth certificate of a citizen of Ukraine, BIRTH_CERT_UKRAINE UUID, Birth certificate of a foreign citizen, BIRTH_CERT_FOREIGN Create a search condition endpoint to fill out the Child’s name and Child’s date of birth fields (for citizens of Ukraine) with EQUALS (person_profile_equal_doc_type_birthday_ua) support. SEARCH BY EQUALS Input parameters: SELECT person_profile_id , last_name , first_name, second_name (не обов'язкове), birthday FROM person_profile WHERE doc_type =' Birth certificate of a citizen of Ukraine ' AND birthday_doc_series ='I-AB' AND birthday_doc_number ='214722' AND birthday ='01.01.2012' Parameters: doc_type , birthday_doc_series, birthday_doc_number , birthday Constants: none Output parameters: UUID, Ivanov, Ivan, Ivanovych, 01.01.2012 If the record does not exist Output:null Create a search condition endpoint to fill out the Child’s name and Child’s date of birth fields (for foreign citizens) with EQUALS (person_profile_equal_doc_type_birthday_foreigner) support. SEARCH BY EQUALS Input parameters: SELECT person_profile_id , last_name , first_name, second_name (не обов'язкове), birthday FROM person_profile WHERE doc_type =' Birth certificate of a foreign citizen ' OR 'Passport of a foreign citizen' AND document_series_number ='5577675' AND birthday ='18.07.2013' Parameters: doc_type , document_series_number , birthday Constants: none Output parameters: UUID, Magovaiev, Dmytro, Ibragymovych, 18.07.2013 If the record does not exist Output: null Create the following forms: A form for adding information about classes (start form). A form for signing class data. A form for adding information about children (start form). An informational form stating that the data has been validated in the State registry of civil status acts and may differ from the data provided. A form for signing child data. Create the following business processes: Develop a business process for adding classes, where businessKey is \"grade + class name\". Add validation to check whether a class with the same name has already been added and display an error message if true. Configure a dynamic task name so that the message about the execution of the task displays the following information: \"Sign class data for \"grade + class name\" using QES\". Before completing the business process, determine its status. Develop a business process for creating a child profile, where businessKey is child’s full name. Add validation to check whether a child profile with the same document has already been created and display an error message if true. If a child has a Ukrainian birth certificate, search for the child in the State registry of civil status acts. Currently, two search options are possible: certificate series, certificate number, date of birth certificate series, certificate number, full name Before completing the business process, determine its status. After completing this test, you should have the following: Business processes for adding classes and child profiles in a test registry. Your business processes must be available as services in the user portal.","title":"Test No. 2","component":"platform","version":"1.9.6","name":"control-task-2","url":"/platform/1.9.6/registry-develop/study-project/control-tasks/control-task-2.html","titles":[{"text":"1. Objectives","hash":"_objectives","id":1},{"text":"2. Tasks","hash":"_tasks","id":2},{"text":"3. Expected result","hash":"_expected_result","id":3}]},"136":{"id":136,"text":"On this page: 1. Objectives 2. Tasks 3. Expected result During this test, you will: Deepen your practical skills in developing the business processes on the Platform. Get familiar with nested entities. Create a data model based on the following table. Table 1. Fields and descriptions No. Field name on the form and in the logical data model Field name in the physical data model Format Reference used Required field person_edu_profile entity 1 Child profile ID person_profile_id Text + 2 Student status (Student status ID) person_edu_state_id UUID Student status (person_edu_state) + 3 Institution of general secondary education ID (Institution where the student is currently or was last studying) edu_organization_id UUID of the institution passport (Edu_organization) from the institution passport + orders entity 4 Class ID unit_id UUID + 5 Child profile ID person_profile_id UUID + 6 Order number order_number Text + 7 Order date order_date Date + 8 Order type (Order type ID) order_type_id UUID Order type (order_type) + 9 Enrollment date enrollment_date Date + transaction entity 10 Order ID order_id UUID + 11 Class ID unit_id UUID + 12 Student’s educational profile ID person_edu_profile_id UUID + Create a Composite Entity endpoint for the person_edu_profile, transaction, and orders entities, where orders and person_edu_profile entities are parents of the transaction entity. For details on creating Composite Entities, see Saving multiple entities within a single transaction. Create the following search conditions: Create a search condition (unit_edu_organization_id_equals) for searching institution classes with EQUALS support. SEARCH BY EQUALS Input parameters: SELECT unit.unit_id, unit.parallel, unit.name, unit_type.name, unit. students_max_number, COUNT (transaction_id) FROM unit INNER JOIN unit_type ON unit.unit_type_id = unit_type.unit_type_id INNER JOIN transaction on unit.unit_id = transaction.unit_id WHERE unit.edu_organization_id='UUID'; Parameters: UUID Constants: none Output parameters: UUID, 1, A, general, 25, 5 Create a search condition (person_profile_equal) to check the 'person_edu_profile_id' field with EQUALS support. SEARCH BY EQUALS Input parameters: SELECT person_edu_profile.person_profile_id, person_edu_profile.edu_organization_id, person_edu_state.constant_code FROM person_edu_profile INNER JOIN person_edu_state ON person_edu_profile.person_edu_state_id = person_edu_state.person_edu_state_id WHERE person_edu_profile.person_edu_profile_id ='UUID' Parameters: person_edu_profile.person_edu_profile_id Constants: none Output parameters: UUID, UUID, STUDYING If the record does not exist Output: null Create a search condition (person_edu_state_equal) to fill out the Student status field with READ ALL and EQUALS support. READ ALL Input parameters: SELECT person_edu_state_id, name, constant_code FROM person_edu_state ORDER BY name; Parameters: none Constants: none Output parameters: UUID, Studying, STUDYING UUID, Not attending, NOT_ATTENDING UUID, Excluded, EXCLUDED UUID, Graduated, GRADUATED EQUAL Input parameters: SELECT person_edu_state_id, name, constant_code FROM person_edu_state WHERE constant_code = 'STUDYING' ORDER BY name; Parameters: constant_code Constants: none Output parameters: UUID, Studying, STUDYING Create a search condition (order_type_code_equals) to fill out the Order type field with EQUALS support. SEARCH BY EQUALS Input parameters: SELECT order_type_id, name FROM order_type WHERE constant_code='INITIAL_ONBOARDING' ; Parameters: constant_code Constants: none Output parameters: UUID, Initial creation of an educational profile Create the following forms: A form for entering data to search for a child (start) A form for entering data into the educational profile A form for signing data for the educational profile Create the following business process: Develop a business process for creating a child’s educational profile, where businessKey is child’s full name. Add the following validations: A child’s profile was created in the registry. A child’s educational profile was not created previously. The object stored in the database is a nested entity. Before completing the business process, determine its status. After completing this test, you should have the following: A business process for creating a child’s educational profile in a test registry. Your business process must be available as a service in the user portal.","title":"Test No. 3","component":"platform","version":"1.9.6","name":"control-task-3","url":"/platform/1.9.6/registry-develop/study-project/control-tasks/control-task-3.html","titles":[{"text":"1. Objectives","hash":"_objectives","id":1},{"text":"2. Tasks","hash":"_tasks","id":2},{"text":"3. Expected result","hash":"_expected_result","id":3}]},"137":{"id":137,"text":"This section covers the self-assessment tests you can take after completing the learning part of the training. Tests go from simple to complex. Test No. 1: Gain in-depth practical knowledge of creating business processes on the Platform. Test No. 2: Deepen your practical skills in developing business processes. Test No. 3: Deepen your business process creation skills even further by mastering nested entities.","title":"Tests","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/registry-develop/study-project/control-tasks/overview.html","titles":[]},"138":{"id":138,"text":"On this page: 1. Objective of the task 2. The task 3. Development plan for the physical data model 4. Creating tables and their relationships 4.1. Table creation order 4.2. Creating \"Laboratory\" table 4.3. Creating the \"Ownership type\" table 4.4. Creating the \"Employee status\" table 4.5. Creating the \"Staff composition\" table 5. Creating search conditions for integration with business process forms 5.1. Search for a region in the \"KOATSU\" table. 5.2. Search for a locality by name and region code in the \"KOATSU\" table 5.3. Search for property type by name in the \"Ownership type\" table 5.4. Searching laboratories by name or EDRPOU code in the \"Laboratory\" table 5.4.1. Example of creating search condition #1 5.4.2. Example of creating search condition #2 5.5. Searching for an employee by name in the \"Staff composition\" table 6. Initial data loading 7. Applying the developed model to the database The completion of this task aims to: Teach how to model database structures. Teach the development of Liquibase XML templates for deploying structures in the database registry. Teach the creation of search conditions in the database for integrating data factory with business processes. Create a database structure for storing and processing information from laboratory certifications according to the following logical data model: Define primary keys for each entity. Identify secondary keys if present in the entity. Determine mandatory fields. Identify fields or combinations of fields with unique values. Define table and field names in Latin characters. Using the information defined in the development plan for the physical data model and the corresponding XML template provided below, create an empty file named createTables.xml. Use the provided createTables.xml file as an example. Copy the metadata from the XML template below and add it to your file as is, without any changes. Example: XML file template https:///nexus/repository/extensions/com/epam/digital/data/platform/liquibase-ext-schema/latest/liquibase-ext-schema-latest.xsd Variable — path to the Nexus server of central components (should be modified, for example, when moving the registry to another cluster). Each file with the extension .xml must contain system information at the top, within the tag. Alternatively, use the main-liquibase.xml template from the Gerrit repository as an example for copying metadata. The main-liquibase.xml file serves as an \"index\" and uses the directive to link to other necessary XML templates for deploying data structures. Change the order of change sets (changeSet) in the createTables.xml file so that tables with external references to other tables are created after the ones they reference. In other words, the tables for laboratories should be created after the Classifier of objects of administrative-territorial structure of Ukraine (now known as Codifier of administrative-territorial units and territories of territorial communities) and \"Ownership type\" tables. Arrange the change sets for table deployment in the following order: \"COATSU\" (Classifier of objects of administrative-territorial structure of Ukraine: UA-specific) \"Ownership type\" \"Laboratory\" \"Employee status\" \"Staff composition\" As an example, let us consider the process of creating changeSets within the deployment of the physical data model for the \"Laboratory\" table. At this stage, it is necessary to create a new table with the name \"Laboratory.\" The steps include: 1.Creating a changeSet: At this step, it is necessary to create a changeSet — a set of atomic changes in Liquibase. Inside the tag in the createTables.xml file, add a tag after the metadata. Table 1. Mandatory attributes Attribute Value id For example, \"table laboratory\" author Your full name Resulting structure: ... ... ... 2. Adding a comment It is preferable but not mandatory to add a tag inside the tag to provide an explanation of the specific changes implemented by this changeSet. The resulting structure is expanded as follows: ... ... Creating a \"laboratory\" table 3. Adding the createTable tag At this step, it is necessary to create an empty table. Within the tag, add the tag with the table name \"Laboratory\" in Latin characters. Table 2. Mandatory attributes Attribute Value tableName \"laboratory\" ext:historyFlag \"true\" As a result, we expand our structure as follows: ... ... Creating a \"laboratory\" table As part of the regulation verification process, the historyFlag attribute with a value of true is required when using or tags in a changeSet. Therefore, when creating the table, the historyFlag=“true” value must be specified. This will generate an additional historical table, and each table will have its specific set of service fields generated. Detailed information about the ext:historyFlag attribute is available at the following link: registry-develop:data-modeling/data/physical-model/liquibase-changes-management-sys-ext.adoc 4.Adding the column tag At this step, you need to specify the columns that the table will contain. + For each field defined for the \"Laboratory\" table in the physical data model development plan, add the tag within the tag, specifying the column name and the data type to be stored. Table 3. Attributes Attribute Value name Column name type Data type For example, \"INT\". As a result, we expand our structure as follows: ... ... Creating a \"laboratory\" table \" type=\"\"> + For the , enter the column name in Latin characters. For the , specify the data type. 5.Adding the constraints tag At this step, you need to specify constraints for each column of the table. For the column defined as the primary key, add the nested tag with the following attributes: Table 4. Attributes Attribute Value nullable \"false\" primaryKey \"true\" primaryKeyName For example, \"pk_laboratory_id\". Data type of the column: UUID The primary key name should be unique. defaultValueComputed \"uuid_generate_v4()\" Default value for the key. + The `nullable=\"false`\" attribute is required for all columns that, according to business logic, do not allow null values. Use ONLY the UUID data type for all table keys and the uuid_generate_v4() function as the default value. This function will generate a random numeric value (see https://www.uuidgenerator.net/version4). For all foreign references, add the tag with attributes foreignKeyName, referencedTableName, and referencedColumnNames, specifying a unique name for the foreign key, table, and column they refer to: Table 5. Attributes Attribute Value foreignKeyName \"fk_\" referencedTableName \"\" referencedColumnNames \"\" At the beginning of the foreignKeyName attribute value, add the corresponding prefix fk_, indicating the relationship with the external table. When adding foreign keys, pay attention to the order of table creation. As a result, we get the following structure: Example: ChangeSet with the tag for creating the laboratory table. ... ... Creating a \"laboratory\" table For all fields that should contain only a unique set of values, add the tag with attributes unique=\"true\" and uniqueConstraintName (optional): Example: Creating a table with a unique constraint In cases where multiple fields should form a unique value, after the tag, add the tag, specifying the tableName attribute with the name of the table to which the constraint applies, and the columnNames attribute with a list of fields that, in combination, should be unique. Example: Creating a table with the tag ... ... The process of creating subsequent tables is similar to the example with the \"Laboratory\" table. The parameter structure for the created tables remains the same for all tables in this task. Following the procedure used to create the \"Laboratory\" table, create a table with the name \"Ownership type\": At the end of the tag in the createTables.xml file, add a tag to define the set of changes. Inside the tag, add the tag with the table name \"Ownership Type\" in Latin (e.g., “ownership”). Add tags for each column of the \"Ownership Type\" table, as defined in the Physical Data Model Development Plan. Inside the tag, define the primary key of the table, as well as all mandatory fields. Following the procedure used to create the \"Laboratory\" table, create a table with the name \"Employee status\": At the end of the tag in the createTables.xml file, add a tag to define the set of changes. Inside the tag, add the tag with the table name \"Employee Status\" in Latin (e.g., “staff_status”). Add tags for each column of the \"Employee Status\" table, as defined in the Physical Data Model Development Plan. Inside the tag, define the primary key of the table, as well as all mandatory fields. Following the procedure used to create the \"Laboratory\" table, create a table with the name \"Staff composition\": At the end of the tag in the createTables.xml file, add a tag to define the set of changes. Inside the tag, add the tag with the table name \"Staff composition\" in Latin (e.g., \"staff\"). Add tags for each column of the \"Staff composition\" table, as defined in the Physical data model development plan. Inside the tag, define the primary key of the table, all foreign references to other tables, as well as all mandatory fields. Search Conditions are special objects used by forms and business processes to retrieve a set of data from one or multiple registry tables. At the database level, they are implemented through views defined by SQL queries to one or multiple tables. To create search condition, use the ext:createSearchCondition tag developed within the framework of the Liquibase physical data model creation and management extension on the The Platform for state registries. Example: XML template for using the tag to create Search condition in the database. Create a separate file named createSearchConditions.xml for search conditions using the same template as createTables.xml. Use the existing file createSearchConditions.xml as an example. Similar to tables, create the following search conditions in separate change sets (changeSet). Used in the business process: adding laboratory. Search condition name: koatuu_obl_contains_name. Search by field: name, search type: contains. Sorting by field: name, direction: asc. Example: XML template for creating a search condition. SQL query based on the XML template SELECT k.koatuu_id, k.code, k.name FROM koatuu k WHERE k.type = 'О'::text ORDER BY k.name; Used in the business process: adding laboratory. Search condition name: koatuu-np-starts-with-name-by-obl. Search by field: name, search type: startWith. Search by field: level1, search type: equal. Sorting by field: name, direction: asc. Example: XML template for creating a search condition. SQL query based on the XML template SELECT np.koatuu_id, np.name, np.level1, rn.name AS name_rn FROM koatuu np LEFT JOIN koatuu rn ON np.level2 = rn.code AND rn.type = 'Р'::text WHERE np.type = 'НП'::text ORDER BY np.name; Used in the business process: adding laboratory. Search condition name: ownership-contains-name. Search by field: name, search type: contains. Sorting by field: name, direction: asc. Example: XML template for creating a search condition. SQL query based on the XML template SELECT o.ownership_id, o.code, o.name FROM ownership o ORDER BY o.name; Used in the business process: Adding a laboratory. Condition name: laboratory-equal-edrpou-name-count. Search by field: edrpou, search type: equal. Search by field: name, search type: equal. Example: XML Template for creating the search condition CREATE search condition laboratory_equal_edrpou_name_count Original SQL query based on the XML template SELECT laboratory.edrpou, laboratory.name, count(laboratory.laboratory_id) AS cnt FROM laboratory GROUP BY laboratory.edrpou, laboratory.name; Used in the business process: Adding data to the staff composition. Condition name: laboratory-start-with-edrpou-contains-name. Search by field: edrpou, search type: startsWith. Search by field: name, search type: contains. Example: XML template for creating the search condition CREATE search condition laboratory_start_with_edrpou_contains_name Original SQL Query based on the XML template with READ ALL support SELECT laboratory.laboratory_id, laboratory.edrpou, laboratory.name FROM laboratory Original SQL Query based on the XML template with SEARCH BY LIKE support SELECT laboratory.laboratory_id, laboratory.edrpou, laboratory.name FROM laboratory WHERE laboratory.name LIKE '%name%' AND laboratory.edrpou LIKE 'edrpou%' Input parameters: name, edrpou Used in the business process: Adding staff. Condition name: staff-contains-name. Search by field: name, search type: contains. Sorting by field: name, direction: asc. Example: XML Template for creating the search condition CREATE search condition staff_contains_name Original SQL query based on the XML template SELECT s.staff_status_id, s.name FROM staff_status s ORDER BY s.name; For the proper population and management of data in the registry, reference tables must contain data. Their loading is possible before the registry’s actual operation through the invocation of a special database function. The function can be invoked using an appropriate Liquibase tag –- . Example of an XML template with a set of changes for initial data loading CALL p_load_table_from_csv('staff_status','${dataLoadPath}dict_status_spivrobitnyka.csv', array['code','name','constant_code'], array['name','constant_code']); CALL p_load_table_from_csv('ownership','${dataLoadPath}dict_formy_vlasnosti.csv', array['code','name']); For initial Loading of the KOATSU (Classifier of objects of administrative-territorial structure of Ukraine: UA-specific) directory, the function CALL p_load_table_from_csv() is to be used ONLY within the Registry of accredited laboratories. Further utilization of the KOATSU directory is not applicable during the data model deployment. Follow the steps below to perform the initial loading: Create a file named populateDictionaries.xml using the same template as createTables.xml. Use the provided populateDictionaries.xml file as an example. Add a separate tag with a set of changes. Inside the tag, add the tag with the attribute `dbms=\"postgresql`\" Within the tag, add calls to the p_load_table_from_csv() function for each dictionary table. Example 1. Function input parameters CALL p_load_table_from_csv('research','${dataLoadPath}dict_typy_doslidzhen.csv', array['code','research_type'], array['research_type']); де: 'staff_status' = 'p_table_name' — the name of the table in the database to which the data will be loaded; ${dataLoadPath}dict_typy_doslidzhen.csv = 'p_file_name' — the full path to the data file; array['code','name','constant_code'] = p_table_columns — an array with a list of fields from the CSV file; array['name','constant_code'] = p_target_table_columns — an array with a list of fields to be loaded into the target table. The field names specified in the p_table_columns parameter may not correspond to the names in the file; they may be used in the p_target_table_columns parameter for data transformation. Field names in the p_target_table_columns parameter should correspond to the list in the p_table_columns parameter (if the table fields fully match the file fields, this parameter may be omitted). After making changes to the data model in the Gerrit repository, all files in the data-model/data-load folder are copied to the /tmp/data-load folder on the database server. Therefore, the file path should look like this: /tmp/data-load/.csv, where: — the actual name of the .csv data file (see the XML template example above). As a result, we get three function calls that load data into the dictionary tables from the following files: Dictionary Data file KOATSU (optional) dict_koatuu_workshop.csv Ownership type dict_formy_vlasnosti.csv Employee status dict_status_spivrobitnyka.csv The platform uses the main-liquibase.xml file as the primary one for deploying the registry’s data model. All change sets included in the main-liquibase.xml file will be applied to the database. To include a change set from files created during previous steps, use the tag with the file attribute indicating the path to the XML file. The current directory for Liquibase is the root folder of the Gerrit repository, so the file path should look like this: *data-model/*.xml*. To apply the developed model, follow these steps: Create a file named main-liquibase.xml using the same template as createTables.xml. Use the provided template main-liquibase.xml from the Gerrit repository as an example. Add the tag for each of the files created during previous stages, specifying the file path in the `file attribute. Example of including a file in the XML template: Ensure that you add the context for the initial data loading. To correctly deploy the data model of your registry, it is essential to specify the context=\"pub\" attribute within the tag. For instance, if you want to include a file that contains procedures to populate dictionary tables with initial data - populateDictionaries.xml: Example 2. Adding the context=\"pub\" for populating tables with data The schema contains an element that refers to an external file populateDictionaries.xml, and the pub context specifies that the elements contained in this file will be used in the operational database of the registry. Place the XML files in the data-model folder of the Gerrit repository. Copy the data files to the data-model/data-load folder. In total, you should have 7 files for deploying the data model and initial data loading: 4 XML template files: createTables.xml createSearchConditions.xml populateDictionaries.xml main-liquibase.xml 3 CSV files for initial data loading: dict_formy_vlasnosti.csv dict_status_spivrobitnyka.csv dict_koatuu_workshop.csv Change the version of the regulation in the settings.yaml file located in the root folder of the Gerrit repository. The version of the regulation should be changed whenever changes are made to the data model. No need to change the version in settings.yaml when modifying business processes, configurations, forms, or reports. Apply the changes to Gerrit (commit, push). Undergo the code review process of your commit (Code Review). If you don’t have the required permissions, contact the responsible person. Wait for the execution of the Jenkins pipeline MASTER-Build-registry-regulations. Useful documentation for working with Liquibase: A list of standard Liquibase tags; A list of extended Liquibase tags.","title":"Task 1. Database registry structure modeling","component":"platform","version":"1.9.6","name":"task-1-registry-db-modeling","url":"/platform/1.9.6/registry-develop/study-project/study-tasks/task-1-registry-db-modeling.html","titles":[{"text":"1. Objective of the task","hash":"_objective_of_the_task","id":1},{"text":"2. The task","hash":"_the_task","id":2},{"text":"3. Development plan for the physical data model","hash":"physical-data-model-actions-plan","id":3},{"text":"4. Creating tables and their relationships","hash":"_creating_tables_and_their_relationships","id":4},{"text":"4.1. Table creation order","hash":"tables-creation-order","id":5},{"text":"4.2. Creating \"Laboratory\" table","hash":"create-laboratory-table","id":6},{"text":"4.3. Creating the \"Ownership type\" table","hash":"_creating_the_ownership_type_table","id":7},{"text":"4.4. Creating the \"Employee status\" table","hash":"_creating_the_employee_status_table","id":8},{"text":"4.5. Creating the \"Staff composition\" table","hash":"_creating_the_staff_composition_table","id":9},{"text":"5. Creating search conditions for integration with business process forms","hash":"_creating_search_conditions_for_integration_with_business_process_forms","id":10},{"text":"5.1. Search for a region in the \"KOATSU\" table.","hash":"_search_for_a_region_in_the_koatsu_table","id":11},{"text":"5.2. Search for a locality by name and region code in the \"KOATSU\" table","hash":"_search_for_a_locality_by_name_and_region_code_in_the_koatsu_table","id":12},{"text":"5.3. Search for property type by name in the \"Ownership type\" table","hash":"_search_for_property_type_by_name_in_the_ownership_type_table","id":13},{"text":"5.4. Searching laboratories by name or EDRPOU code in the \"Laboratory\" table","hash":"_searching_laboratories_by_name_or_edrpou_code_in_the_laboratory_table","id":14},{"text":"5.4.1. Example of creating search condition #1","hash":"_example_of_creating_search_condition_1","id":15},{"text":"5.4.2. Example of creating search condition #2","hash":"_example_of_creating_search_condition_2","id":16},{"text":"5.5. Searching for an employee by name in the \"Staff composition\" table","hash":"_searching_for_an_employee_by_name_in_the_staff_composition_table","id":17},{"text":"6. Initial data loading","hash":"initial-data-load","id":18},{"text":"7. Applying the developed model to the database","hash":"_applying_the_developed_model_to_the_database","id":19}]},"139":{"id":139,"text":"On this page: 1. Goal 2. Prerequisites 3. Task steps 3.1. Modeling the business process 3.1.1. Business process modeling stages 3.1.2. Creating a pool for the business process 3.1.3. Creating a start event 3.1.4. Creating a user task to add data 3.1.5. Creating a user task to view data 3.1.6. Creating a service task with the business process result 3.1.7. Creating an end event 3.1.8. Saving the business process schema 3.2. Modeling forms 3.2.1. Prerequisites 3.2.2. Form types 3.2.3. Creating a data entry form 3.2.4. Creating a form to view data 3.2.5. Saving the business process forms 3.3. Modeling business process access 3.4. Setting up mandatory configurations 4. Uploading the regulations files to a remote Gerrit repository The goal of this task is to learn how to: Model a simple business process without integration with the data factory using the following: User and service tasks Standard extensions for user and service tasks JUEL submission() functions for pre-filling the forms Model forms in the regulations administrator portal. Grant access to the business process from the officer portal. Before you start working on the task, complete these prerequisite steps: Install the Camunda Modeler app with standard extensions. Get familiar with FormIO components for modeling forms. Copy the remote repository to the local machine. At the business process modeling stage, you need to create and save the corresponding BPMN diagram. Download the add-lab-test.bpmn file with a sample business process schema to use as an example. For this task, you need to create a business process consisting of six stages: Create a pool for the business process. Create a start event. Create a user task to add data. Create a user task to view data. Create a service task with the business process result. Create an end event. After completing all the steps, be sure to save the business process schema you modeled to the appropriate folder with the registry regulations (for details, see Saving the business process schema). To model a pool for your business process, perform the following steps: Open the Camunda Modeler app and create a new BPMN diagram. To do this, open the menu in the upper left corner and click File > New File > BPMN Diagram. In the toolbar on the left, find the Create pool/Participant item and drag it to the modeling panel. Fill out the following fields: Name: Enter the task’s name — for example, Add lab data. Process Id: Enter the process ID, for example — add-lab-test. Process Name: Enter the process name — for example, Add lab data. You need to create a pool for each business process. This is necessary to set the following parameters: A unique Process Id to use the business process in the system and a Process Name to display the name of the process in the user portal. The Executable checkbox indicates business processes that should be deployed in the registry. The default value is true. To create a start event, perform the following steps: In the toolbar on the left, find the CreateStartEvent item (a circle) and drag it to the modeling panel. In the properties panel on the right, fill out the following parameters: Name: Enter start. Initiator: Enter initiator. This variable will contain information about the user who started the business process. For details on the \"initiator\" variable, see registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. Every business process must start with a StartEvent and end with an EndEvent. To create a user task to add data, perform the following steps: Select the circle with the start event from the previous stage and add a new user task by clicking the Append Task icon. Set the task type by clicking the wrench icon and selecting User Task from the menu. In the properties panel on the right, enter the task’s name into the Name field: Add lab data. In the properties panel on the right, configure the following parameters: Click Open Catalog, select the User Form template, and click Apply. Fill out the following fields: Id: Enter addLabForm. Name: Enter the task’s name — for example, Add lab data. Form key: Enter add-lab-bp-add-lab-test. Assignee: Enter ${initiator}. To create a user task to view data, perform the following steps: Select the rectangle with the user task from the previous stage and add a new user task by clicking the Append Task icon. In the properties panel on the right, enter the task’s name into the Name field: View lab data. Set the task type by clicking the wrench icon and selecting User Task from the menu. In the properties panel on the right, configure the following parameters: Click Open Catalog, select the User Form template, and click Apply. Fill out the following fields: Name: Enter View lab data. The task’s Name field is used to display the task’s name in the business process and does not affect the business logic in any way. Form key: Enter add-lab-bp-view-lab-test. The Form key field defines the unique ID of the form. It is set when creating a form through the regulations administrator portal. The process of creating a form and assigning an ID is covered further in this topic. Assignee: Enter ${initiator}. The Assignee field indicates which user will perform the task. Because the system supports transferring the business process execution between users, it is necessary to indicate the assignee. In our example, it’s the initiator — the user who initiated the execution of this business process. Form data pre-population: Enter the ${submission(\"addLabForm\").formData} variable. For details on using the JUEL functions in the business processes (such as submission() in our example), see registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. To create a service task to output the result of the business process, perform the following steps: Select the rectangle with the View lab data user task from the previous stage and add a new service task by clicking the Append Task icon. Set the task type by clicking the wrench icon and selecting Service Task from the menu. In the properties panel on the right, enter the task’s name into the Name field: Set BP result. In the properties panel on the right, configure the following parameters: Click Open Catalog, select the Define business process status template and click Apply. Fill out the following fields: Name: Enter Set BP result. Status: Enter Lab data is displayed. This service task sets the business process execution status, displayed in the user portal with the text you specified. This helps users better understand what happens during the business process execution. To model the end event to finish the business process, perform the following steps: Select the rectangle with the Set BP result service task from the previous stage and add an end event by clicking the Append EndEvent icon. In the properties panel on the right, enter the name into the Name field: end. After you finish modeling your business process, save the diagram to the add-lab-test.bpmn file in the project’s bpmn regulations folder in the Gerrit repository. To do this, select File > Save File As from the menu in the upper-left corner, and specify the appropriate name and path for your diagram. During the forms modeling stage, you need to create and connect JSON forms to the business process tasks you modeled previously. The forms are connected to business processes using the service name. Use the add-lab-bp-add-lab-test.json and add-lab-bp-view-lab-test.json sample files with form examples. The UI forms used in business processes are modeled in the regulations administrator portal web app. You can get a link to the regulations administrator portal in the OpenShift web console. To do this, go to Networking > Routes, select the appropriate project, search for admin-portal, and copy the link from the Location column. For details on modeling UI forms, see registry-develop:bp-modeling/forms/registry-admin-modelling-forms.adoc. For this task, you need to create two types of forms to configure interactions with the business process: data entry form data view form We recommend using the Google Chrome browser for this task. First, you need to create the form where users can enter data. Perform the following steps: Sign in to the regulations administrator portal. By default, the portal opens the master version of the regulations, displaying the forms that were already deployed. At this point, it will be empty. In the master version, forms are available in read-only mode and cannot be edited. To add and edit forms, you need to create a version candidate by selecting the Create new request item from the menu in the upper left corner. In the Create new request window, fill out the following fields: Version name: Enter task-1. Version description: Enter Creating forms for task 1. Click the Create button. After you create a request, the portal automatically redirects you to the version candidate, where you can add and edit forms. Go to the UI forms section. To create a new form for the business process, click the Create new form button. In the dialog window, fill out the following fields: Form’s business name: Enter the name of the appropriate user task — Add lab data. Form’s service name: Enter add-lab-bp-add-lab-test. Go to the Build tab. We recommend using the components from the Updated section. From the panel on the left, drag the Text Field component onto the modeling canvas and configure the following parameters: In the Display tab > Label field, enter Laboratory name: In the API tab > Property Name field, enter name. Click Save to save your changes. From the panel on the left, drag the Text Field component onto the modeling canvas and configure the following parameters: In the Display tab > Label field, enter EDRPOU or RNOKPP code: In the API tab > Property name field, enter edrpou. Click Save to save your changes. Save your form by clicking the Create form button in the upper right corner: After you create a data entry form, create another form to view data. You can copy the form you modeled previously by clicking the copy icon or create a new form by clicking the Create new form button in the upper right corner. Configure the form’s parameters: Form’s business name: Enter the name of the appropriate user task — View lab data. Form’s service name: Enter add-lab-bp-view-lab-test. For both Laboratory name and EDRPOU or RNOKPP code components, configure the following: In the Display tab, select the Disabled checkbox. Click Save to save your changes. Save your form by clicking the Create form button in the upper right corner. Download your forms by clicking the download icon. Copy them to the forms regulations folder of your project in the local Gerrit repository. At this stage, you need to grant access to the business process from the officer portal. Access parameters are configured via the officer.yml file. Create the officer.yml file and specify the following parameters: authorization: realm: 'officer' process_definitions: - process_definition_id: 'add-lab-test' process_name: 'Creating a laboratory' process_description: 'Laboratory creation regulations' roles: - officer Save the officer.yml file to the bp-auth regulations folder of your project in the local Gerrit repository. If you don’t specify this configuration, your business process will be deployed in the regulations but will not appear in the user portal. The bp-auth/officer.yml file contains the business processes available in the officer portal. The bp-auth/citizen.yml file contains the business processes available in the citizen portal. The roles parameter is a list of roles for which the business process will be visible in the user portal. Roles can be assigned to the user through the Keycloak service in the corresponding realm. For details on roles and access control, see Business Process Modeling and Access Control (RBAC). The camunda-global-system-vars.yml file cannot be empty. Add the following line to it: supportEmail: help@support.com To successfully deploy the business process with forms and apply the correct access settings in the target environment, the regulations administrator must upload the locally stored registry regulations files to the remote Gerrit code repository. To do this, perform the steps described in the following topic: Deploying regulations in Gerrit.","title":"Task No. 2. Modeling a business process without integration","component":"platform","version":"1.9.6","name":"task-2-bp-modeling-without-integration","url":"/platform/1.9.6/registry-develop/study-project/study-tasks/task-2-bp-modeling-without-integration.html","titles":[{"text":"1. Goal","hash":"_goal","id":1},{"text":"2. Prerequisites","hash":"_prerequisites","id":2},{"text":"3. Task steps","hash":"_task_steps","id":3},{"text":"3.1. Modeling the business process","hash":"bp-modeling","id":4},{"text":"3.1.1. Business process modeling stages","hash":"_business_process_modeling_stages","id":5},{"text":"3.1.2. Creating a pool for the business process","hash":"create-pool-bp","id":6},{"text":"3.1.3. Creating a start event","hash":"create-start-event","id":7},{"text":"3.1.4. Creating a user task to add data","hash":"create-task-add-lab-data","id":8},{"text":"3.1.5. Creating a user task to view data","hash":"create-task-view-lab-data","id":9},{"text":"3.1.6. Creating a service task with the business process result","hash":"create-service-task-bp-result","id":10},{"text":"3.1.7. Creating an end event","hash":"create-end-event","id":11},{"text":"3.1.8. Saving the business process schema","hash":"save-bp-schema","id":12},{"text":"3.2. Modeling forms","hash":"forms-modeling","id":13},{"text":"3.2.1. Prerequisites","hash":"_prerequisites_2","id":14},{"text":"3.2.2. Form types","hash":"form-types","id":15},{"text":"3.2.3. Creating a data entry form","hash":"form-insert-data","id":16},{"text":"3.2.4. Creating a form to view data","hash":"form-view-data","id":17},{"text":"3.2.5. Saving the business process forms","hash":"_saving_the_business_process_forms","id":18},{"text":"3.3. Modeling business process access","hash":"bp-access","id":19},{"text":"3.4. Setting up mandatory configurations","hash":"_setting_up_mandatory_configurations","id":20},{"text":"4. Uploading the regulations files to a remote Gerrit repository","hash":"_uploading_the_regulations_files_to_a_remote_gerrit_repository","id":21}]},"140":{"id":140,"text":"On this page: 1. Objective of the task 2. Prerequisites 3. Task execution process 3.1. Business process modeling 3.1.1. Stages of business process modeling 3.1.2. Creating a pool for the business process 3.1.3. Creating a start event 3.1.4. Creating a user task for entering laboratory data 3.1.5. Modeling a service task for creating a business key 3.1.6. Creating a service task for searching laboratory data 3.1.7. Creating and configuring an XOR gateway 3.1.8. Creating a branch with a validation error 3.1.9. Configuring the branch with continuing the business process 3.1.10. Creating the user task for data signing 3.1.11. Creating the script task \"Preparing data for record (transient var)\" 3.1.12. Modeling the service task for data signing with the system key 3.1.13. Creating the service task for saving data to the data factory 3.1.14. Creating the service task for setting the business process result 3.1.15. Creating the business process completion event 3.1.16. Saving the modeled business process schema 3.2. Form modeling 3.2.1. Creating the data entry form 3.2.2. Creating a form for data signature 3.2.3. Uploading modeled forms of the business process to the local directory 3.3. Modeling access to the business process Saving the access configuration file 4. Uploading regulation files to the remote Gerrit repository The execution of this task aims to: Teach modeling a business process that involves integration with a data factory. Teach modeling branches within a business process. Teach modeling unified steps in business processes using Call Activity. Teach modeling forms and configuring Select components to retrieve data from the data factory. Before proceeding with the task, the following prerequisites must be fulfilled: Встановіть додаток Camunda Modeler і типові розширення до нього. Ознайомтеся із компонентами FormIO для моделювання форм. Gain a more detailed understanding of business process components through the provided link. Familiarize yourself with the functioning logic of Call Activity through the provided посиланням. During the business process modeling phase, it is necessary to create and save the corresponding BPMN diagram. Please use the add-lab.bpmn file with the pre-designed business process schema as an example. In the context of this task, the modeler must create a business process consisting of the following stages: Creating a pool for the business process. Creating a start event. Creating a user task for entering laboratory data. Modeling a service task for creating a business key. Creating a service task for searching laboratory data. Creating and configuring an XOR gateway. Creating a branch with a validation error. Creating the service task for saving data to the data factory. Creating the service task for setting the business process result. Creating the business process completion event. Important! After completing all stages, remember to save the modeled business process diagram to the appropriate folder in the registry regulations (see Saving the modeled business process schema). First, model a pool for the business process. Follow the steps below: Business process diagram modeling should take place within the Create Pool/Participant element. Open the Camunda Modeler application and create a new BPMN diagram. To do this, click on the File → New File → BPMN Diagram option in the top left corner: On the toolbar on the left, find the Create Pool/Participant element and drag it to the modeling panel: Fill in the following fields with appropriate values: In the Name field, enter Lab creation. In the Process id field, enter add-lab. In the Process name field, specify Lab creation. Create a start event. Follow the steps below: On the toolbar on the left, find the CreateStartEvent element (a circle) and drag it to the modeling panel: In the settings panel on the right, fill in the following parameters with appropriate values: In the Name field, enter Start. In the Initiator field, enter initiator. Next, create a user task intended for users to entering data by the user. Follow the steps below: Select the circle with the start event, modeled in the previous stage, and attach a new task by clicking the Append Task icon: Specify the task type by clicking the key icon and choosing User Task from the menu: In the settings panel on the right, click Open Catalog, select the User Form template from the menu, and click Apply to confirm: On the settings panel on the right, fill in the following fields: In the Id field, specify addLabFormActivity. In the Name field, enter Add Laboratory Information. In the Form key field, enter add-lab-bp-add-lab. In the Assignee field, specify ${initiator}. Create a new Service Task: From the extensions catalog (Open Catalog), select the Define process business key template. In the settings panel, define the following fields (task name and script for generating the business key): In the Name field, enter Set business Key. In the Business key field, enter the following script: ${submission('addLabFormActivity').formData.prop('name').value().concat(' ').concat(submission('addLabFormActivity').formData.prop('edrpou').value())} For more detailed information on configuring business keys, you can follow the link. Using the business key, users can differentiate one business process from another (or one user task from another) in the list of business tasks in the User portals of the official and service recipient. Next, it is necessary to create a Service Task for searching laboratory data. Follow these steps: Create a new Service Task: From the extensions catalog (Open Catalog), select the Search for entities in data factory template, and press Apply to confirm. On the settings panel on the right, fill in the following fields: In the Id field, enter searchForLabByNameAndEdrpouActivity. In the Name field, it should be specified as Search for laboratory data (transient var). In the Input Parameters section → Resource, specify the following: In the Variable Assignment Type field, select String or Expression. In the Variable Assignment Value field, enter laboratory-equal-edrpou-name-count. In the Input Parameters → Search Variables section, provide the following: In the Variable Assignment type field, select Map. In the Add Entry field, add entries for parameters name and edrpou (UA-specific) by clicking the plus (+) sign and specifying their corresponding values: Key Value name ${submission('addLabFormActivity').formData.prop('name').value()} edrpou ${submission('addLabFormActivity').formData.prop('edrpou').value()} In the Input Parameters → X-Access-Token section, specify the following: In the Variable Assignment Type field, select String or Expression. In the Variable Assignment Value field, enter ${completer('addLabFormActivity').accessToken}. After the completion of the first User Task, try using the completer('') function to retrieve user data, instead of initiator(). The access token is taken from either the initiator (e.g., $initiator().accessToken} OR the executor of the last User Task (e.g., ${completer('taskDefinitionId').accessToken}). The JWT token has a validity period of 300 seconds. If the token of the initiator who started the business process is specified, and the user does not perform the task for a long time, the token will expire, and the business process will need to be restarted. For more details on JUEL functions, you can refer to the JUEL functions: registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. In the Output Parameters → Result Variable section, fill the Assign to Process Variable parameter with the value response. Next, it is necessary to attach an XOR gateway. Follow the steps below: Select the rectangle with the service task Search for laboratory data (transient var) modeled in the previous stage and attach the XOR gateway by clicking the Append Gateway icon. In the settings panel on the right, specify the ID and name of the gateway: In the Id field, enter isLaboratoryExistGateway. In the Name field, enter Are data present? At this stage, it is necessary to create a branch with a validation error. Follow the steps below: Select the rhombus with the XOR gateway \"Are data present?\" modeled in the previous stage and create a new service task by clicking the Append Task icon. Specify the task type by clicking the key icon and choosing Service Task from the menu. Click Open Catalog, select the Throw validation error template, and press Apply to confirm. In the settings panel on the right, fill in the following fields: у полі Name введіть Формування валідаційної помилки. In the Name field, enter Generating validation error. In the Input Parameters → Validation Errors section, provide the following: In the Variable Assignment Type field, select List. Add the following values for the Value field: Value 1 {\"field\": \"name\", \"value\": \"${submission('addLabFormActivity').formData.prop('name').stringValue().replaceAll(\"\\\"\", \"\\\\\\\\\\\"\")}\", \"message\": \"Data for this laboratory already exists\"} Value 2 {\"field\": \"edrpou\", \"value\": \"${submission('addLabFormActivity').formData.prop('edrpou').value()}\", \"message\": \"Data for this laboratory already exists\"} The Throw validation error delegate has the ability to display multiple messages simultaneously. In the event of generating this validation error, the user will see two pop-up messages approximately in the following format: name: \"Data for this laboratory already exists\". edrpou (UA-specific): \"Data for this laboratory already exists\". On the branch that goes from the \"Are Data Present?\" gateway to the user task Formation of validation error, configure the following parameters: In the Id field, enter isLaboratoryAlreadyExistFlow. In the Name field, enter yes. In the Condition Type field, enter Expression. In the Expression field, enter ${!response.value.responseBody.elements().isEmpty()}. On the branch that goes from the Are data present? gateway to the user task Sign laboratory data (see Creating the user task for data signing_ below), configure the following parameters: Leave the Id field with its default value. In the Name field, enter no. In the Condition Type field, select Expression. In the Expression field, enter ${response.value.responseBody.elements().isEmpty()}. Create a User Task for data signing. Follow these steps: Define the task type by clicking the key icon and choosing User Task from the menu. Click Open Catalog, select the Officer Sign Task template, and press Apply to confirm. In the settings panel on the right, fill in the following fields: In the Id field, enter signLabFormActivity. In the Name field, enter Sign laboratory data. In the Form key field, enter add-lab-sign-lab-data. In the Assignee field, enter ${initiator}. In the Form data pre-population field, enter ${submission('addLabFormActivity').formData}. Create a new Script Task to prepare data for record. Follow these further configurations: Select the rectangle with the User Task created in the previous step and append a new task by clicking the Append Task icon. Define the task type by clicking the key icon and choosing Script Task from the menu. Select the added Script Task and configure the following parameters: In the Id field, enter convertSignFormDataToDataFactoryFormatActivity. In the Name field, enter Preparing Data for Record (transient var). In the Script Format field, select groovy as the scripting language. In the Script Type field, choose InlineScript. Insert the groovy script directly into the Script field. Click to expand def signedFormData = submission('signLabFormActivity').formData signedFormData.prop('oblast', signedFormData.prop('oblast').prop('code').value()) signedFormData.prop('koatuuId', signedFormData.prop('koatuu').prop('koatuuId').value()) signedFormData.deleteProp('koatuu') signedFormData.prop('ownershipId', signedFormData.prop('ownership').prop('ownershipId').value()) signedFormData.deleteProp('ownership') if (signedFormData.hasProp('premisesFile') && !signedFormData.prop('premisesFile').isNull() && !signedFormData.prop('premisesFile').elements().isEmpty()) { signedFormData.prop('premisesFile', signedFormData.prop('premisesFile').elements()[0]) } else { signedFormData.prop('premisesFile', null as String) } if(signedFormData.hasProp('accreditationFile') && !signedFormData.prop('accreditationFile').isNull() && !signedFormData.prop('accreditationFile').elements().isEmpty()) { signedFormData.prop('accreditationFile', signedFormData.prop('accreditationFile').elements()[0]) } else { signedFormData.prop('accreditationFile', null as String) } set_transient_variable('dataPayload', signedFormData) Create a service task for data signing with the system key and configure the corresponding integration extension. Follow these steps: Select the rectangle with the script task modeled in the previous step and append a new task by clicking the Append Task icon. Define the task type by clicking the key icon and choosing Service Task from the menu. In the settings panel on the right, click Open Catalog to open the list of available delegate templates. From the list received, select the System signature by DSO service template, which should be used for data signing with the system key. In the settings panel on the right, go to the General tab and configure the delegate parameters: In the Name field, enter the task name as Sign data with system key; In the Payload field, pass the data that needs to be signed with the system signature as ${dataPayload}. In the X-Access-Token source field, pass the access token of the person currently executing the task with the ID 'signLabFormActivity' as ${completer('signLabFormActivity').accessToken}. After the completion of the first User Task, try using the completer('') function to retrieve user data, instead of initiator(). The access token is taken from either the initiator (e.g., $initiator().accessToken) OR the executor of the last User Task (e.g., ${completer('taskDefinitionId').accessToken}). The JWT token has a validity period of 300 seconds. If the token of the initiator who started the business process is specified, and the user does not perform the task for a long time, the token will expire, and the business process will need to be restarted. For more details on JUEL functions, you can refer to the JUEL functions at registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. In the Result variable field, specify the name of the variable to which the digital signature of the specified data will be recorded as system_signature_ceph_key. At this stage, you need to create and configure a new service task for saving data to the data factory. Follow the steps below: Using the example from Creating a service task for searching laboratory data, create a new service task Save data to data factory by clicking the key icon and choosing Service Task from the menu. Click Open Catalog, select the Create entity in data factory template, and press Apply to confirm. In the settings panel on the right, configure the following parameters: In the Id field, enter sendLabToDataFactoryActivity. In the Name field, enter Save data to data factory. In the Resource field, specify laboratory. In this example, the resource name corresponds to the table name laboratory in the database. The Resource field is used to determine the name of the resource (endpoint) in the data factory to which the data will be sent. Please note that when modeling the business process, you should use resource names with a dash \"-\" (instead of an underscore \"_\") that consist of two or more words. For example: Resource name in the business process: laboratory-test In the Payload field, enter ${dataPayload} as the data to be saved; In the X-Access-Token field, enter ${completer('signLabFormActivity').accessToken}. After the completion of the first user task, try using the completer('') function to retrieve user data, instead of initiator(). The access token is taken from either the initiator (e.g., $initiator().accessToken) or the executor of the last user task (e.g., ${completer('taskDefinitionId').accessToken}). The JWT token has a validity period of 300 seconds. If the token of the initiator who started the business process is specified, and the user does not perform the task for a long time, the token will expire, and the business process will need to be restarted. For more details on JUEL functions, you can refer to registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. In the X-Digital-Signature source field, enter ${sign_submission('signLabFormActivity').signatureDocumentId}. In the X-Digital-Signature-Derived source field, enter ${system_signature_ceph_key}. In the Result Variable field, specify response, the variable to which the server’s response will be recorded, if applicable. At this stage, you need to create and configure a service task that will set the result of the business process. Using the example from Creating the service task for saving data to the data factory, model a new service task Execution result: Laboratory created by clicking the key icon and choosing Service Task from the menu. Click Open Catalog, select the Define business process status template, and press Apply to confirm. In the settings panel on the right, configure the following parameters: In the Name field, enter Execution result: Laboratory created. In the Status field, enter Laboratory created!. The Name field has an informative value. \"Execution result: Laboratory created!\" will be displayed on the portal in the Status of the completed business process field, informing us about the completion of a certain business process. Приклад: At this stage, you need to create an event that will mark the completion of the main business process. Using the example from [create-end-event-call-activity] (external subprocess Call Activity), attach and configure the event for completing the business process. In the settings panel on the right, for the Name parameter, enter Laboratory created. As a result, you will have a complex business process modeled with the configuration and invocation of an external subprocess Call Activity. After completing the modeling process, save the obtained business process schema with the name add-lab.bpmn to the bpmn folder in the Gerrit repository. To do this, in the top-left corner, open the File menu, select Save File As..., and enter the corresponding name and path. During the form modeling stage, you need to create and link JSON forms to the previously modeled tasks within the business process. Forms are linked to business processes by the service name. Use the files add-lab-bp-add-lab.json and add-lab-sign-lab-data.json with the modeled forms as examples. First, create a form for data entry by the user. Follow these steps: Access the Regulations administrator portal. Create a new candidate version for Task 3: Go to the UI forms section. To create a new form for the business process, click the Create new form button: In the new window, in the Business form name field, enter the name corresponding to the modeled user task — Add laboratory information. Fill in the Form name field with the value add-lab-bp-add-lab (must match the value in the Form key field of the same user task). Go to the Constructor tab. From the components panel on the left, drag the Text Field component to the modeling panel and perform further settings: In the new window, go to the Display tab and fill in the Label field with Laboratory name: Go to the Validation tab and set the Required parameter to true: Go to the API tab and fill in the Property Name field with name. The Property Name field value must be unique. Click the Save button to save the changes: Similarly, model text fields (Text Field) for EDRPOU or RNOKPP Code (UA-specific), Address, Phone, and Manager. From the components panel on the left, drag the Checkbox component to the modeling panel and perform further settings: Go to the Display tab and fill in the Label field with Accreditation available: Go to the API tab and fill in the Property Name field with accreditationFlag. Click the Save button to save the changes: From the components panel on the left, drag the File component to the modeling panel and perform further settings: Go to the Display tab and fill in the Label field with Premises documents: Go to the File tab and fill in the following fields: In the Storage field, specify Url. In the Url field, specify /documents. In the File Pattern field, specify application/pdf,image/jpeg,image/png. In the File Minimum size field, specify 0KB. In the File Maximum size field, specify 50MB. Go to the Data tab and leave the Multiple Values field empty, i.e., with the value False: Go to the API tab and fill in the Property Name field with premisesFile. Click the Save button to save the changes: From the components panel on the left, drag the Select component to the modeling panel and perform further settings to obtain information from the directory: Go to the Display tab and fill in the Label field with Ownership form: Go to the Data tab and fill in the following fields: In the Data Source Type field, specify URL. In the Data Source URL field, specify /officer/api/data-factory/ownership-contains-name, where: де: /officer indicates that the request to the directory will be executed from the Officer portal. /api/data-factory/ indicates the path to the data factory. ownership-contains-name is the name of the search condition to obtain data from the ownership directory that was modeled and added to the repository. In the Value Property field, specify ownershipId. In the Item Template field, specify {{ item.name }}, where name is the name of the parameter that returns the search condition and will be displayed on the form. Go to the Validation tab and set the Required parameter to true. Go to the API tab and fill in the Property Name field with ownership: Click the Save button to save the changes. By analogy, perform the settings to obtain information from the Region directory. From the components panel on the left, drag the Select component to the modeling panel. Go to the Display tab and fill in the Label field with the value Region: Go to the Data tab and fill in the following fields: у полі Data Source Type вкажіть значення URL; у полі Data Source URL вкажіть /officer/api/data-factory/koatuu-obl-contains-name, In the Data Source Type field, specify the value URL. In the Data Source URL field, enter /officer/api/data-factory/koatuu-obl-contains-name, where: /officer indicates that the query to the directory will be executed from the Officer portal; /api/data-factory/ indicates the path to the data factory; koatuu-obl-contains-name is the search condition to obtain data from the directory of regions that was modeled and added to the repository. In the Value Property field, enter the value code. у полі Item Template вкажіть {{ item.name }}, In the Item Template field, enter {{ item.name }}, where name is the parameter name that returns the search condition and will be displayed on the form. In the Refresh Options On field, specify (the current value will be removed when the value in the Region field changes); Set the flag to True for the Clear Value On Refresh Options parameter. Go to the Validation tab and set the flag for the Required parameter to True. Go to the API tab and fill in the Property Name field with the value region: Click the Save button to save the changes. Configure the dependent component Select. Drag the Select component from the component panel on the left to the modeling panel and perform further settings to obtain information from the directory: Go to the Display tab and fill in the Label field with the value Settlement name: Go to the Data tab and fill in the following fields: In the Data Source Type field, enter URL. In the Data Source URL field, enter /officer/api/data-factory/koatuu-np-starts-with-name-by-obl, where: /officer indicates that the query to the directory will be executed from the Officer portal; /api/data-factory/ indicates the path to the data factory; koatuu-np-starts-with-name-by-obl is the search condition to obtain data from the directory of settlements that was modeled and added to the repository. In the Value Property field, enter koatuuId. In the Filter Query field, enter level1={{data.oblast.code}}, where: level1 is the input parameter for the endpoint koatuu-np-starts-with-name-by-obl; {{data.oblast.code}} is the path to obtain data from data.Property name.Value Property from the previous Select component. In the Item Template field, enter {{ item.name }}, where name is the parameter name that returns the search condition and will be displayed on the form. In the Refresh Options On field, enter Region (the current value will be removed when the value in the Region field changes); Set the flag for the Clear Value On Refresh Options parameter to True. Go to the Validation tab and set the flag for the Required parameter to True. Go to the API tab and fill in the Property Name field with the value koatsu (UA-specific). Click the Save button to save the changes. Save the form by clicking the Create form button in the upper right corner: After completing the previous stage of creating a form for data entry, create another form for data signature. To do this, copy the previously modeled form by clicking the copy icon — this will allow you to create a form from a ready-made template. Configure the form parameters: Enter the name of the corresponding user task Sign laboratory data in the Business form name field; Fill in the Form name field with the value add-lab-sign-lab-data (corresponding to the Form key field value of the same user task); In all components: On the Display tab, set the flag for the Disabled parameter. Click the Save button to save the changes. Save the form by clicking the Save changes button in the upper right corner. Upload the forms by clicking the upload icon and place them in the regulatory folder forms of the project in the local Gerrit repository. At this stage, it is necessary to provide access to the business process in the Officer portal for the standard officer role. Access parameters are configured in the configuration file named officer.yml in the bp-auth directory. Edit the file bp-auth/officer.yml by adding the following parameters: Example. Configuring access to the business process in the Officer portal authorization: realm: 'officer' process_definitions: - process_definition_id: 'add-lab-test' process_name: 'Laboratory creation' process_description: 'Regulation for creating laboratories' roles: - officer - process_definition_id: 'add-lab' process_name: 'Laboratory creation' process_description: 'Regulation for creating laboratories' roles: - officer Save the officer.yml file to the regulatory folder bp-auth of the project in the local Gerrit repository. For successful deployment of the business process, forms, and applying the correct access settings to the business process in the target environment, the regulation administrator needs to upload the saved local regulation files to the remote Gerrit code repository. To do this, follow the steps: Deploying regulations in Gerrit.","title":"Task 3. Business process modeling with integration","component":"platform","version":"1.9.6","name":"task-3-bp-modeling-with-integration","url":"/platform/1.9.6/registry-develop/study-project/study-tasks/task-3-bp-modeling-with-integration.html","titles":[{"text":"1. Objective of the task","hash":"_objective_of_the_task","id":1},{"text":"2. Prerequisites","hash":"_prerequisites","id":2},{"text":"3. Task execution process","hash":"_task_execution_process","id":3},{"text":"3.1. Business process modeling","hash":"bp-modeling","id":4},{"text":"3.1.1. Stages of business process modeling","hash":"_stages_of_business_process_modeling","id":5},{"text":"3.1.2. Creating a pool for the business process","hash":"create-pool-bp","id":6},{"text":"3.1.3. Creating a start event","hash":"create-start-event","id":7},{"text":"3.1.4. Creating a user task for entering laboratory data","hash":"create-task-add-lab-data","id":8},{"text":"3.1.5. Modeling a service task for creating a business key","hash":"create-service-task-bp-key","id":9},{"text":"3.1.6. Creating a service task for searching laboratory data","hash":"create-service-task-search-lab-data","id":10},{"text":"3.1.7. Creating and configuring an XOR gateway","hash":"create-xor-gateway","id":11},{"text":"3.1.8. Creating a branch with a validation error","hash":"create-validation-error-branch","id":12},{"text":"3.1.9. Configuring the branch with continuing the business process","hash":"create-branch-continue-bp","id":13},{"text":"3.1.10. Creating the user task for data signing","hash":"create-user-task-lab-data-signing","id":14},{"text":"3.1.11. Creating the script task \"Preparing data for record (transient var)\"","hash":"create-script-task-prepare-data-record-transient-var","id":15},{"text":"3.1.12. Modeling the service task for data signing with the system key","hash":"create-call-activity-sign-data-by-system-key","id":16},{"text":"3.1.13. Creating the service task for saving data to the data factory","hash":"create-service-task-save-data-to-data-factory","id":17},{"text":"3.1.14. Creating the service task for setting the business process result","hash":"create-service-task-create-entity-end","id":18},{"text":"3.1.15. Creating the business process completion event","hash":"create-task-entity-finish","id":19},{"text":"3.1.16. Saving the modeled business process schema","hash":"save-bp-schema","id":20},{"text":"3.2. Form modeling","hash":"forms-modeling","id":21},{"text":"3.2.1. Creating the data entry form","hash":"form-insert-data","id":22},{"text":"3.2.2. Creating a form for data signature","hash":"form-data-signing","id":23},{"text":"3.2.3. Uploading modeled forms of the business process to the local directory","hash":"_uploading_modeled_forms_of_the_business_process_to_the_local_directory","id":24},{"text":"3.3. Modeling access to the business process","hash":"bp-access","id":25},{"text":"Saving the access configuration file","hash":"_saving_the_access_configuration_file","id":26},{"text":"4. Uploading regulation files to the remote Gerrit repository","hash":"_uploading_regulation_files_to_the_remote_gerrit_repository","id":27}]},"141":{"id":141,"text":"On this page: 1. Goal 2. Prerequisites 3. Task steps 3.1. Modeling the business process 3.1.1. Business process modeling stages 3.1.2. Creating a pool for the business process 3.1.3. Creating a start event 3.1.4. Create a script task to prepare variables for records 3.1.5. Creating a service task to search lab data 3.1.6. Creating a script task to prepare document data for display (transient var) 3.1.7. Creating an error handling event 3.1.8. Creating a user task to add personnel data 3.1.9. Creating a user task to sign data with an electronic signature 3.1.10. Creating a script task to prepare data for saving (transient var) 3.1.11. Creating a service task to save data to the data factory 3.1.12. Creating a service task to set the business process result 3.1.13. Creating an end event 3.2. Modeling forms 3.2.1. Creating a form to search lab data 3.2.2. Modeling uniform entities on the forms using Edit Grid 3.2.2.1. Creating a form to enter data about new personnel 3.2.2.2. Configuring the display of one component based on the value of another component 3.2.3. Creating a form to sign data 3.2.4. Saving the business process forms 3.3. Modeling business process access 3.3.1. Saving the access config file 4. Uploading the regulations files to a remote Gerrit repository The goal of this task is to learn how to: Model a business process with a start form. Model forms with dependent components and an Edit Grid component. Before you start working on the task, complete these prerequisite steps: Install the Camunda Modeler app with standard extensions. Get familiar with FormIO components for modeling forms. At the business process modeling stage, you need to create and save the corresponding BPMN diagram. Download the add-personnel.bpmn file with a sample business process schema to use as an example. Use the following checklist to track the steps of the modeling process. Create a pool for the business process. Create a start event. Create a script task to prepare variables for records. Create a service task to search lab data. Create a script task to prepare document data for display (transient var). Create an error-handling event Create a user task to add personnel data. Create a user task to sign data with an electronic signature. Create a script task to prepare data for saving (transient var). Create a service task to save data to the data factory. Create a service task to set the business process result. Create an end event. After completing all the steps, be sure to save the business process schema you modeled to the appropriate folder with the registry regulations. To model a pool for your business process, perform the following steps: Open the Camunda Modeler app and create a new BPMN diagram. To do this, open the menu in the upper left corner and click File > New File > BPMN Diagram. In the toolbar on the left, find the Create pool/Participant item and drag it to the modeling panel. Fill out the following fields in the General tab: Name: Enter the task’s name — for example, Add personnel data. Process Id: Enter the process ID — for example, add-personnel. Process Name: Enter the process name — for example, Add personnel data. To create a start event, perform the following steps: In the toolbar on the left, find the CreateStartEvent item (a circle) and drag it to the modeling panel. In the properties panel on the right, fill out the following parameters in the General tab: Id: Enter event ID — for example, start_event. Name: Enter the event’s name — for example, Start process. Initiator: Enter initiator. This variable will contain information about the user who started the business process. In the Forms tab > Form key field, enter shared-search-lab: Fill out the following fields: Id: extractLabIdFromFormActivity Name: Prepare variables for records Script Format: groovy Script Type: InlineScript Result Variable: laboratoryId Script submission('start_event').formData.prop('laboratory').prop('laboratoryId').value() To create a service task to search lab data, perform the following steps: Set the task type by clicking the wrench icon and selecting Service Task from the menu. Click Open Catalog, select the Read entity from data factory template, and click Apply. Fill out the following fields: Id: Enter searchLabInDataFactoryActivity. Name: Enter the task’s name — for example, Search lab data. Resource: Enter laboratory. Resource id: Enter ${laboratoryId}. X-Access-Token: Enter ${initiator().accessToken}. After the first user task, it is preferable to use the completer('') function to get user data instead of initiator(). The access token is taken either from the initiator (for example, $initiator().accessToken}) or the completer of the last user task (for example, ${completer('taskDefinitionId').accessToken}). The JWT token has a validity period of 300 seconds. If you specify the token of the initiator of the business process, and the user takes a long time to do the task, then the token will expire, and the business process must be restarted. For details on the JUEL functions, see registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. Result Variable: Enter labResponse. Fill out the following fields: Id: extractAddPersonnelFormPrepopulationActivity Name: Prepare document data for display (transient var) Script Format: groovy Script Type: InlineScript Script var name = labResponse.responseBody.prop('name').value() var edrpou = labResponse.responseBody.prop('edrpou').value() var cephData = ['edrpou':edrpou,'name':name] execution.removeVariable('payload') set_transient_variable('payload', S(cephData, 'application/json')) Drag the Intermediate/Boundary event item from the toolbar on the left and add it to the \"Search lab data\" service task. Click the wrench icon and select the Error Boundary Event type from the menu. Create a Gateway that will act as a checkpoint for redirecting in case of an error. Add error handling logic by connecting the Error Boundary Event and the XOR Gateway. This way, if an error occurs at the \"Search lab data\" stage, the user will automatically return to the checkpoint, from where the process will start again. The DOC and Data Factory modeling components with the dashed lines in the example are purely demonstrational. This instruction does not cover how to create them. Set the task type by clicking the wrench icon and selecting User Task from the menu. Click Open Catalog, select the User Form template, and click Apply. Fill out the following fields: Id: addPersonnelFormActivity Name: Add personnel data Form key: add-personnel-bp-add-personnel Assignee: ${initiator} Form data pre-population: ${payload} Set the task type by clicking the wrench icon and selecting User Task from the menu. Click Open Catalog, select the Officer Sign Task template, and click Apply. Fill out the following fields: Id: signPersonnelFormActivity Name: Sign data with QES Form key: add-personnel-bp-sign-personnel Assignee: ${initiator} Form data pre-population: ${submission('addPersonnelFormActivity').formData} Fill out the following fields: Id: convertSignFormDataToDataFactoryFormatActivity Name: Prepare data for saving (transient var) Script Format: groovy Script Type: InlineScript Script def personnelGrid = submission('signPersonnelFormActivity').formData.prop('personnelGrid').elements() for (var personnel : personnelGrid) { personnel.prop(\"laboratoryId\", laboratoryId) personnel.prop(\"staffStatusId\", personnel.prop(\"staffStatus\").prop(\"staffStatusId\").value()) personnel.deleteProp(\"staffStatus\") if (personnel.hasProp('hygienistCertificateFile') && !personnel.prop('hygienistCertificateFile').elements().isEmpty()) { def hygienistCertificateFile = personnel.prop('hygienistCertificateFile').elements().first() } else { personnel.prop('hygienistCertificateFile', null as String) } if (personnel.hasProp('ordersFile') && !personnel.prop('ordersFile').elements().isEmpty()) { def ordersFile = personnel.prop('ordersFile').elements().first() personnel.prop('ordersFile', ordersFile) } else { personnel.prop('ordersFile', null as String) } if (personnel.hasProp('hireStaffFile') && !personnel.prop('hireStaffFile').elements().isEmpty()) { def hireStaffFile = personnel.prop('hireStaffFile').elements().first() } else { personnel.prop('hireStaffFile', null as String) } } execution.removeVariable('dataPayload') set_transient_variable('dataPayload', S(personnelGrid.toString())) Create a new service task by clicking the wrench icon and selecting Service Task from the menu. Click Open Catalog, select the Batch creation of entities in data factory template, and click Apply. Fill out the following fields: Id: createStaffInDataFactoryActivity Name: Save data to data factory Resource: staff Payload: ${dataPayload} X-Access-Token: ${completer('signPersonnelFormActivity').accessToken} After the first user task, it is preferable to use the completer('') function to get user data instead of initiator(). The access token is taken either from the initiator (for example, $initiator().accessToken}) or the completer of the last user task (for example, ${completer('taskDefinitionId').accessToken}). The JWT token has a validity period of 300 seconds. If you specify the token of the initiator of the business process, and the user takes a long time to do the task, then the token will expire, and the business process must be restarted. For details on the JUEL functions, see registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. X-Digital-Signature source: ${sign_submission('signPersonnelFormActivity').signatureDocumentId} Result Variable: response Create a new service task by clicking the wrench icon and selecting Service Task from the menu. Click Open Catalog, select the Define business process status template, and click Apply. Fill out the following fields: Id: defineBusinessProcessStatusActivity Name: \"Personnel data added\" execution result Status: Personnel data added Name the end event: Name: Data added. During the forms modeling stage, you need to create and connect JSON forms to the business process tasks you modeled previously. The forms are connected to business processes using the service name. Use the add-personnel-bp-add-personnel.json, add-personnel-bp-sign-personnel.json, and shared-search-lab.json sample files with form examples. We recommend using the Google Chrome browser for this task. First, you need to create a form where users can enter data. Perform the following steps: Sign in to the regulations administrator portal. By default, the portal opens the master version of the regulations, displaying the forms that were already deployed. At this point, it will be empty. In the master version, forms are available in read-only mode and cannot be edited. To add and edit forms, you need to create a version candidate by selecting the Create new request item from the menu in the upper left corner. In the Create new request window, fill out the following fields: Version name: Enter task-4. Version description: Enter Creating forms for task 4. Click the Create button. After you create a request, the portal automatically redirects you to the version candidate, where you can add and edit forms. Go to the UI forms section. To create a new form for the business process, click the Create new form button. In the dialog window, fill out the following fields: Form’s business name: Enter the name of the appropriate user task — Search lab data. Form’s service name: Enter shared-search-lab. Go to the Build tab. We recommend using the components from the Updated section. From the panel on the left, drag the Text Field component onto the modeling canvas and configure the following parameters: In the Display tab > Label field, enter EDRPOU: In the API tab > Property Name field, enter edrpou. By default, the value of the Property Name field is identical to the Label field. Unlike the Label field, the Property Name field can only contain Latin letters. In the Validation tab, select the Required checkbox to make the field mandatory. Click Save to save your changes. From the panel on the left, drag the Select component onto the modeling canvas and configure the following parameters: In the Display tab > Label field, enter Lab name: In the Data tab > Data Source Type field, select URL. In the Data Source URL field, enter the following value: /api/data-factory/laboratory-start-with-edrpou-contains-name This is a reference to the previously created endpoint of the laboratory_start_with_edrpou_contains_name search condition in the data model. Select the Lazy Load Data checkbox so that the valid values for the current Select component are updated each time it is accessed. In the Value Property field, enter laboratoryId. In the Filter Query field, enter edrpou={{data.edrpou}}. In the Limit field, enter 100. This limits the search to the first 100 results. When used correctly, restrictions like this will help reduce the load on the registry systems. In the Item Template field, enter {{ item.name }}. The {{ item.name }} value contains the following: item: The current object from the list of found laboratories. name: The object’s name. In this field, you specify what will be shown in the select query. In other words, the /api/data-factory/laboratory-start-with-edrpou-contains-name endpoint will return an array of found item objects in the following format: { \"laboratoryId\": \"466ad903-7bd0-4078-9f80-972ed66780a8\", \"edrpou\": \"12345678\", \"name\": \"Lab Name\" } To display laboratory names in the dropdown list of the select query, specify the name field: ({{ item.name }}). Similarly, if you need to display the edrpou code of each laboratory in the dropdown list, indicate the edrpou field: {{ item.edrpou }}. In the Refresh Options On field, select EDRPOU. This makes the select request dependent on the preceding EDRPOU field and will reset the previously selected value when the value specified in the EDRPOU field changes. For details on the Refresh Options On function, see Using the \"Refresh Options On\" function in the updated Select component. In the Validation tab, select the Required checkbox to make the field mandatory. In the API tab > Property Name field, enter laboratory. Click Save to save your changes. Go to the UI forms section. To create a new form for the business process, click the Create new form button. In the dialog window, fill out the following fields: Form’s business name: Enter the name of the appropriate user task — Add personnel data. Form’s service name: Enter add-personnel-bp-add-personnel. Go to the Build tab. We recommend using the components from the Updated section. Using Edit Grid, you can add and edit uniform data on your forms. From the panel on the left, drag the Edit Grid component onto the modeling canvas and configure the following parameters: In the Display tab > Label field, enter Add personnel data: In the Templates tab, fill out the following fields: Add Another Text: Add Save Row Text: Add record Remove Row Text: Delete record In the API tab > Property Name field, enter personnelGrid. Click Save to save your changes. Add components to Edit Grid. From the panel on the left, drag the Text Field component onto the Edit Grid field and configure the following parameters: In the Display tab > Label field, enter Full name: In the API tab > Property Name field, enter fullName. Click Save to save your changes. From the panel on the left, drag the Checkbox component onto the Edit Grid field and configure the following parameters: In the Display tab > Label field, enter Occupational hygienist: In the API tab > Property Name field, enter hygienistFlag. Click Save to save your changes. From the panel on the left, drag the Date/Time component onto the Edit Grid field and configure the following parameters to retrieve information from the directory: In the Display tab > Label field, enter Date of specialization completion. In the Format field, enter yyyy-MM-dd:: In the Time tab, clear the Enable Time Input checkbox — we don’t need it for the current task. In the API tab > Property Name field, enter specializationDate. In the Conditional tab, fill out the following fields: This component should Display: True When the form component: Occupational hygienist (personnel.Grid.hygienistFlag) Has the value: true This way, the component will be displayed only when the Occupational hygienist (personnel.Grid.hygienistFlag) component is true. Click Save to save your changes. Drag and configure the following additional components to the form: Radio component: Display tab > Label field: Employment type Data tab > Values > Label field: Full-time; Value field: true Data tab > Values > Label field: Part-time; Value field: false API tab > Property Name field: fullTimeFlag Number component: Display tab > Label field: Salary Validation tab > Minimum value field: 1 API tab > Property Name field: salary Day component: Display tab > Label field: Date of status change API tab > Property Name field: dismissalDate From the panel on the left, drag the Select component onto the Edit Grid field and configure the following parameters to retrieve information from the directory: In the Display tab > Label field, enter Employee status. In the Data tab, fill out the following fields: Data Source Type: URL Data Source URL: /api/data-factory/staff-contains-name, where: /api/data-factory/ is the data factory path staff-contains-name is the name of the search condition to retrieve data from the domain directory that was modeled and added to the repository Value Property: staffStatusId Item Template: {{ item.name }}, where name is the name of the parameter that returns the search condition and will be displayed on the form: In the API tab > Property Name field, enter staffStatus. Click Save to save your changes. From the panel on the left, drag the Checkbox component onto the Edit Grid field and configure the following parameters: In the Display tab > Label field, enter Fixed-term employment contract. In the API tab > Property Name field, enter fixedTermContractFlag. Click Save to save your changes. From the panel on the left, drag the Day component onto the Edit Grid field and configure the following parameters: In the Display tab > Label field, enter Contract end date. In the API tab > Property Name field, enter contractEndDate. In the Conditional tab, fill out the following fields: This component should Display: True When the form component: Fixed-term employment contract (personnelGrid.fixedTermContractFlag) Has the value: true This way, the component will be displayed only when the Fixed-term employment contract (personnelGrid.fixedTermContractFlag) component is true. Click Save to save your changes. From the panel on the left, drag the Text Field components outside the Edit Grid field and configure the following parameters: For the first Text Field component: In the Display tab: In the Label field, enter Full name of the lab or sole proprietor. Set the Disabled checkbox to true. In the API tab > Property Name field, enter name. For the second Text Field component: In the Display tab: In the Label field, enter EDRPOU or RNOKPP code. Set the Disabled checkbox to true. In the API tab > Property Name field, enter edrpou. These fields will contain data from the business process. Save your form by clicking the Create form button in the upper right corner. To display fields as columns inside the Edit Grid component, open the field’s settings and select the Table View checkbox in the Display tab. When this checkbox is selected, the field is displayed in a separate column. After you create a form to enter data, create one more form to sign data. Copy the form you modeled previously using the copy icon — this way, you can create a form from a template. Configure the form’s parameters: Form’s business name: Enter the name of the user task — Sign personnel data. Form’s service name: Enter add-personnel-bp-sign-personnel. For all components: In the Display tab, select the Disabled checkbox. Click Save to save your changes. Save your form by clicking the Create form button in the upper right corner. Download your forms by clicking the download icon. Copy them to the forms regulations folder of your project in the local Gerrit repository. At this stage, you need to grant access to the business process from the officer portal for the standard officer role. Access parameters are configured via the officer.yml file from the bp-auth folder. Edit the bp-auth/officer.yml file by adding the following parameters: Configuring access to the business process from the officer portal authorization: realm: 'officer' process_definitions: - process_definition_id: 'add-lab-test' process_name: 'Creating a laboratory' process_description: 'Laboratory creation regulations' roles: - officer - process_definition_id: 'add-lab' process_name: 'Creating a laboratory' process_description: 'Laboratory creation regulations' roles: - officer - process_definition_id: 'add-personnel' process_name: 'Entering personnel data' process_description: 'Entering personnel data' roles: - officer Save the officer.yml file to the bp-auth regulations folder of your project in the local Gerrit repository. To successfully deploy the business process with forms and apply the correct access settings in the target environment, the regulations administrator must upload the locally stored registry regulations files to the remote Gerrit code repository. To do this, perform the steps described in the following topic: Deploying regulations in Gerrit.","title":"Task No. 4. Modeling a business process with a start form and dependent components on the forms","component":"platform","version":"1.9.6","name":"task-4-bp-modeling-with-start-form-and-depending-components","url":"/platform/1.9.6/registry-develop/study-project/study-tasks/task-4-bp-modeling-with-start-form-and-depending-components.html","titles":[{"text":"1. Goal","hash":"_goal","id":1},{"text":"2. Prerequisites","hash":"_prerequisites","id":2},{"text":"3. Task steps","hash":"_task_steps","id":3},{"text":"3.1. Modeling the business process","hash":"bp-modeling","id":4},{"text":"3.1.1. Business process modeling stages","hash":"_business_process_modeling_stages","id":5},{"text":"3.1.2. Creating a pool for the business process","hash":"create-pool-bp","id":6},{"text":"3.1.3. Creating a start event","hash":"create-start-event","id":7},{"text":"3.1.4. Create a script task to prepare variables for records","hash":"create-script-task-changes-to-record","id":8},{"text":"3.1.5. Creating a service task to search lab data","hash":"create-service-task-search-result","id":9},{"text":"3.1.6. Creating a script task to prepare document data for display (transient var)","hash":"create-script-task-data-to-display","id":10},{"text":"3.1.7. Creating an error handling event","hash":"add-error-event","id":11},{"text":"3.1.8. Creating a user task to add personnel data","hash":"create-user-task-add-staff-details","id":12},{"text":"3.1.9. Creating a user task to sign data with an electronic signature","hash":"create-user-task-sign-data","id":13},{"text":"3.1.10. Creating a script task to prepare data for saving (transient var)","hash":"create-task-script-data-signing","id":14},{"text":"3.1.11. Creating a service task to save data to the data factory","hash":"create-service-task-save-data","id":15},{"text":"3.1.12. Creating a service task to set the business process result","hash":"create-service-task-set-bp-result","id":16},{"text":"3.1.13. Creating an end event","hash":"create-finish-event","id":17},{"text":"3.2. Modeling forms","hash":"forms-modeling","id":18},{"text":"3.2.1. Creating a form to search lab data","hash":"_creating_a_form_to_search_lab_data","id":19},{"text":"3.2.2. Modeling uniform entities on the forms using Edit Grid","hash":"form-edit-grid","id":20},{"text":"3.2.2.1. Creating a form to enter data about new personnel","hash":"_creating_a_form_to_enter_data_about_new_personnel","id":21},{"text":"3.2.2.2. Configuring the display of one component based on the value of another component","hash":"_configuring_the_display_of_one_component_based_on_the_value_of_another_component","id":22},{"text":"3.2.3. Creating a form to sign data","hash":"form-data-signing","id":23},{"text":"3.2.4. Saving the business process forms","hash":"_saving_the_business_process_forms","id":24},{"text":"3.3. Modeling business process access","hash":"bp-access","id":25},{"text":"3.3.1. Saving the access config file","hash":"_saving_the_access_config_file","id":26},{"text":"4. Uploading the regulations files to a remote Gerrit repository","hash":"_uploading_the_regulations_files_to_a_remote_gerrit_repository","id":27}]},"142":{"id":142,"text":"On this page: 1. Goal 2. Task steps 2.1. Creating an analytical layer at the database level 2.1.1. Creating an analytics view for laboratory details 2.1.2. Creating an analytics view for the territorial codes directory (KOATUU) 2.1.3. Creating an analytics view for the ownership types directory 2.2. Providing access to analytics views Providing access rights on the Platform version 1.5 or later 2.3. Applying changes to the database model 2.4. Creating a report in Redash 2.4.1. Creating a query for the ownership type parameter 2.4.2. Creating a query for the region parameter 2.4.3. Creating the main report query 2.4.4. Creating a dashboard 2.4.5. Publishing the objects to users The goal of this task is to learn to develop reports in the Redash environment. In this task, you will learn to: Model an analytics view. Provide access to the analytics view. Create three queries in Redash. Create a dashboard in Redash. Download the archive with the dashboard. Unpack the archive in the regulations. Apply the changes to the remote Gerrit repository. Verify the report. The Redash analytical reporting system has access only to the replica of the database and exclusively to analytics views. To create these views, use the tag, similar to creating search conditions. For details on creating analytics views and search conditions at the data model level, see: Managing search conditions Managing analytics views Create a separate createAnalyticsViews.xml file for analytics views using the createAnalyticsViews.xml template. The name of the analytics view must start with the report_ prefix. Analytics view name: report_laboratory. Information is taken from the following tables: laboratory, koatuu (region, town), ownership. An XML template for creating an analytics view SQL query based on XML template SELECT l.laboratory_id, l.name, l.address, l.edrpou, l.koatuu_id, l.ownership_id, k.name AS town, k.level1 AS obl_code, ko.koatuu_id AS region_id, ko.name AS region, o.name AS ownership FROM laboratory l JOIN koatuu k ON l.koatuu_id = k.koatuu_id LEFT JOIN koatuu ko ON ko.code = k.level1 JOIN ownership o ON l.ownership_id = o.ownership_id WHERE ko.type = 'О'; Analytics view name: report_koatuu. Information is taken from the following table: koatuu. An XML template for creating an analytics view SQL query based on XML template SELECT koatuu.koatuu_id, koatuu.code, koatuu.name, koatuu.type FROM koatuu; Analytics view name: report_ownership. Information is taken from the following table: ownership. An XML template for creating an analytics view SQL query based on XML template SELECT ownership.ownership_id, ownership.name FROM ownership; Each role specified in the roles/officer.yml file in the registry Gerrit repository has a database user in the replica prefixed with analytics_ — for example, analytics_officer. For the reports to work correctly, you must grant access to the analytics views for the corresponding role. Check the officer.yml file and add the officer role if it is not specified. Example 1. Specifying the regulations officer role in the officer.yml file roles: - name: officer description: Officer role In the createAnalyticsViews.xml file, add the tag. Inside this tag, put the tag with the name=\"analytics_officer\" attribute. An XML template for granting access rights Copy the createAnalyticsViews.xml file to the data-model folder of the Gerrit repository. To apply changes, perform the following steps: In the main-liquibase.xml file, add the tag with the file=\"data-model/createAnalyticsViews.xml\" attribute at the end of the tag: Update the regulations version in the settings.yaml file in the root directory of the Gerrit repository. Apply changes to Gerrit (git commit, git push). Perform a code review of your commit. If you don’t have the reviewer permissions, contact another reviewer. Wait until the MASTER-Build-registry-regulations Jenkins pipeline completes successfully. Analytical reporting is developed in the admin instance of Redash. To access it, you need to have the redash-admin role in the -admin realm of the registry. The role is assigned by the security administrator in the Keycloak service interface. For details on role management, see admin:user-management-auth/keycloak-create-users.adoc. Use the redash-viewer instance to view analytical reports and monitor events in the audit logs. Officer portal users have the officer role assigned by default. This role provides access to the user portal and standard reports of the corresponding registry. The system provides an additional auditor role. This extended role is meant for viewing audit logs in the Redash service. Use the redash-admin instance for creating and viewing analytical reports by the registry administrators. A reports administrator gets the redash-admin role in the -admin realm of the registry. This role provides full access to reporting in the Redash service. You can find links to Redash instances in the OpenShift admin console. In this step, you need to create a query for the parameter that will only show laboratories with a specific ownership type. First, create a Snippet (a default query): In Redash, go to Settings. Open the Query Snippets tab, click the New Snippet button, and fill out the required fields: Trigger: Enter select_query_based_dropdown_list. Snippet: Enter the following SQL code: SQL request template WITH cte AS ( SELECT -1 AS rn, uuid_nil() AS value, '( All values )' AS name UNION ALL SELECT 2 AS rn, AS value, name AS name FROM ) SELECT value, name FROM cte ORDER BY rn, name; Next, create a new query: Go to the redash-admin instance of Redash. Open the Queries section and click New Query. In the query box, type select_, then select a request template for creating parameters in reports from the dropdown list: select_query_based_dropdown_list. Change to ownership_id, and to report_ownership_v. The names must correspond to the ones defined during the Creating an analytical layer at the database level step of this task. The report_ownership is the analytics view created in the createAnalyticsViews.xml file during the Creating an analytical layer at the database level step. The system adds the _v postfix during the deployment. Always refer to all analytics views in Redash using the following pattern: analytics_view_name + _v. Example 2. The name specified when creating the analytics view Example 3. The name generated during the deployment Click the Execute button to send the query to the database. The table with data is displayed below the query box. Select the query name at the top (by default, it’s New Query) and provide a new name — for example, Select ownership type. Press Enter. Click Save to save your query. Click Publish to publish your query. In this step, you need to create a query for the parameter that will only show laboratories from a specific region. Create a new query: Go to the redash-admin instance of Redash. Open the Queries section and click New Query. In the query box, type select_, then select a request template for creating parameters in reports from the dropdown list: select_query_based_dropdown_list. Change to koatuu_id, and to report_koatuu_v. Add a WHERE type = 'R' condition to limit the values to regions. Click the Execute button to send the query to the database. The table with data is displayed below the query box. Select the query name at the top (by default, it’s New Query) and provide a new name — for example, Select region. Press Enter. Click Save to save your query. Click Publish to publish your query. The main query uses previous queries as filtering parameters. Create a new query: Go to the redash-admin instance of Redash. Open the Queries section and click New Query. In the query box, enter the following SQL script: SQL query template SELECT name AS \"Laboratory name\", edrpou AS \"EDRPOU\", address AS \"Address\", ownership AS \"Ownership type\", town AS \"Town\", region AS \"Region\" FROM report_laboratory_v WHERE region_id = '' Set the filtering by region option: Put the cursor between the single quotes and click the Add New Parameter button. Fill out the form using the following values: Keyword: region Title: Region Type: Query Based Dropdown List Query: Select region Click the Add Parameter button. You will get an expression like this: … WHERE region_id = '{{ region }}'. Figure 1. Region selection dropdown (final view) To this filtering expression, add the OR logical operator and the following expression: '{{ region }}'= uuid_nil(). This handles the \"All values\" condition. Enclose the expressions to the left and right of the OR operator in parentheses. Set the filtering by ownership option: In a new line, add the condition for filtering by the laboratory owner: AND ownership_id = ''. Put the cursor between the single quotes and click the Add New Parameter button. Fill out the form using the following values: Keyword: ownership Title: Ownership Type: Query Based Dropdown List Query: Select ownership type Click the Add Parameter button. You will get an expression like this: … AND ownership_id = '{{ ownership }}'. Figure 2. Ownership selection dropdown (final view) To this filtering expression, add the OR logical operator and the following expression: '{{ ownership }}'= uuid_nil(). This handles the \"All values\" condition. Enclose the expressions to the left and right of the OR operator in parentheses. The WHERE expression you should get as a result WHERE (region_id = '{{ region }}' OR '{{ region }}' = uuid_nil() ) AND (ownership_id = '{{ ownership }}' OR '{{ ownership }}' = uuid_nil()) Click the Execute button. The results table will contain the laboratories that were created earlier. Select the query name at the top (by default, it’s New Query) and provide a new name — for example, List of laboratories. Press Enter. Click Save to save your query. Click Publish to publish your query. Create a dashboard: Go to the redash-admin instance of Redash. Open the Dashboards section and click New dashboard. Specify the dashboard name: Laboratories. Click the Add Widget button, select the List of laboratories query from the list and click the Add to Dashboard button. Resize the widget to fit the screen. Click the Done Editing button. Click the Publish button to publish your dashboard. Notes on dashboard names We recommend using Latin characters for dashboard names in Redash. Starting with Redash version 10, new dashboards are named according to the following pattern: -. The slug parameter is an alias appended to the dashboard ID in the URL with a hyphen. In our example, it’s \"slug\": \"laboratories\" (see the following image). You can get a JSON representation of a dashboard by its ID. To do this, use the root path of the environment where redash-admin is deployed, plus /api/dashboards/. A query to get dashboard No. 8 https://redash-admin-.apps.envone.dev.registry.eua.gov.ua/api/dashboards/8 For details on Redash API, refer to https://redash.io/help/user-guide/integrations-and-api/api. Publish the objects you created in the regulations: Sign in to the regulations administrator portal. Open the Report templates section. Click the download icon (⤓) next to the Laboratories record. Unzip the archive and copy the files to the reports/officer folder of the Gerrit repository. Dashboard files must have unique names — for example, dashboard_1.json, dashboard_2.json, dashboard_3.json, and so on. The reports//queries/ folder must contain only one file named queries.json. This file must contain all the queries from the queries.json files from different archives. That is, you don’t overwrite one file with another but append new queries to the existing file. Here is an example of how this might look: { \"count\":172, \"page_size\":25, \"page\":1, \"results\":[ { \"query information\": 1 }, { \"query information\": 2 }, { \"query information\": 3 } ] } Figure 3. A queries.json file with queries from different archives Delete the .zip file from the reports/officer folder. Apply changes to Gerrit (git commit, git push). Perform a code review of your commit. If you don’t have the reviewer permissions, contact another reviewer. Wait until the MASTER-Build-registry-regulations Jenkins pipeline completes successfully. Check the dashboard you created in the viewer instance of Redash. For details on data access and access control, see: Managing analytics views registry-develop:data-modeling/reports/data-analytical-reports-creation.adoc registry-develop:data-modeling/reports/data-analytical-data-access-rights.adoc","title":"Task No. 6. Developing analytical reports","component":"platform","version":"1.9.6","name":"task-6-registry-reports-modeling","url":"/platform/1.9.6/registry-develop/study-project/study-tasks/task-6-registry-reports-modeling.html","titles":[{"text":"1. Goal","hash":"_goal","id":1},{"text":"2. Task steps","hash":"_task_steps","id":2},{"text":"2.1. Creating an analytical layer at the database level","hash":"create-analytical-views","id":3},{"text":"2.1.1. Creating an analytics view for laboratory details","hash":"_creating_an_analytics_view_for_laboratory_details","id":4},{"text":"2.1.2. Creating an analytics view for the territorial codes directory (KOATUU)","hash":"_creating_an_analytics_view_for_the_territorial_codes_directory_koatuu","id":5},{"text":"2.1.3. Creating an analytics view for the ownership types directory","hash":"_creating_an_analytics_view_for_the_ownership_types_directory","id":6},{"text":"2.2. Providing access to analytics views","hash":"_providing_access_to_analytics_views","id":7},{"text":"Providing access rights on the Platform version 1.5 or later","hash":"_providing_access_rights_on_the_platform_version_1_5_or_later","id":8},{"text":"2.3. Applying changes to the database model","hash":"_applying_changes_to_the_database_model","id":9},{"text":"2.4. Creating a report in Redash","hash":"_creating_a_report_in_redash","id":10},{"text":"2.4.1. Creating a query for the ownership type parameter","hash":"_creating_a_query_for_the_ownership_type_parameter","id":11},{"text":"2.4.2. Creating a query for the region parameter","hash":"_creating_a_query_for_the_region_parameter","id":12},{"text":"2.4.3. Creating the main report query","hash":"_creating_the_main_report_query","id":13},{"text":"2.4.4. Creating a dashboard","hash":"_creating_a_dashboard","id":14},{"text":"2.4.5. Publishing the objects to users","hash":"_publishing_the_objects_to_users","id":15}]},"143":{"id":143,"text":"To expand the interface capabilities of the Citizen portal and enhance its usability, support for pagination[1] and sorting functionality for services has been developed. This functionality provides the ability to: Divide the list of business processes in progress into pages; Divide the list of completed business processes into pages; Sort business processes in progress by their start date and time; Sort completed business processes by their start date and time and by the date of completion. The mechanism for pagination and sorting of elements on web pages in user portals, such as tasks or services, is identical. Therefore, from the perspective of end-users, including both officers and citizens registered in the system, the configuration of such interface features is the same. A detailed description of the functionality is presented in the section Pagination and sorting of services in the Officer portal. 1. Pagination is the breakdown of a vast amount of data (usually of the same type) into small page-sized portions, accompanied by displaying numbered navigation.","title":"Pagination and sorting of services in Citizen portal","component":"platform","version":"1.9.6","name":"citizen-portal-bp-sorting-pagination","url":"/platform/1.9.6/user/citizen/sorting-pagination/citizen-portal-bp-sorting-pagination.html","titles":[]},"144":{"id":144,"text":"On this page: 1. Activating the email communication channel 2. Deactivating the email communication channel This guide demonstrates the functionality of sending OTP codes to users' email addresses and confirming the email in the Citizen portal. A 6-digit pseudo-random code (e.g., 345870) will be automatically sent to the user’s email upon entry or modification of the email address in the user’s profile. To confirm the email address using the OTP code and activate the email communication channel, follow these steps: Log in to the Citizen portal. Open your personal user profile. In the Email section: Enter the email address where you want to receive the messages (if you are filling out the profile for the first time). Email address format: test@example.com. Edit or update the email address (if the field has already been filled previously). Click Next. A 6-digit code will be sent to your specified email address for confirming your details. Open your email client, find the confirmation code message, and copy the OTP code. Return to your profile and enter the received code from the email. The generated OTP code has a time limit, indicated by a countdown timer. By default, the OTP code is valid for 300 seconds (5 minutes). This parameter can be changed; please contact the registry administrator. After the code expires, it can be generated again by clicking Resend the code. If the code is entered incorrectly, the user will receive an error message with the corresponding prompt: Invalid confirmation code. If the code is entered correctly, the user will receive a notification about the confirmed email address and the activation of the communication channel. Turn off the sending of email notifications by deactivating the communication channel. You can do this in the user profile settings in the User portal. Open the user profile settings in the User portal. Find the Email section and click Disable notifications. In the new window, select Yes, disable. As a result, the communication channel will be deactivated, and the sending of email notifications will become unavailable, as indicated by corresponding notifications on the user interface.","title":"Confirming email address with OTP code in user profile","component":"platform","version":"1.9.6","name":"email-otp","url":"/platform/1.9.6/user/citizen/user-notifications/email-otp.html","titles":[{"text":"1. Activating the email communication channel","hash":"_activating_the_email_communication_channel","id":1},{"text":"2. Deactivating the email communication channel","hash":"_deactivating_the_email_communication_channel","id":2}]},"145":{"id":145,"text":"On this page: 1. Authentication page 2. Process flow This guidance demonstrate the capabilities of sending inbox messages to users in the User portals for service recipients. To configure the sending of messages, it is necessary to go through one of the available business processes. First of all, in order to access the Citizen portal, it is required to undergo authentication in the system using a key. You can learn more about the user authentication process by following this link. After logging into the Citizen portal, navigate to the Messages section. If you do not have any incoming messages in your inbox, you will see a welcome page. Proceed to the Available services section and configure the sending of messages in the business process. Initiate the business process for sending messages. On the form, fill in the fields with the appropriate data: In the templateName field, specify the name of the template defined by the registry regulations. For example, inbox-template-ubki. Fill in other fields with corresponding values that will be inserted into the designated placeholders of the template after processing. Confirm the provided information. In our example, the service provision process is completed. You can view this in the My services > Provided services section. Return to the Messages section. This is your inbox for incoming messages. Locate the new message marked with the corresponding indicator — NEW MESSAGE. All unread messages are marked as NEW MESSAGE, while read messages have no indicators. Click Show full message to expand the content. Click Hide to collapse the content. Scroll down and navigate to the next page to view other messages. The number of incoming messages on one page is 10. If there are more messages in your inbox, pagination is applied, meaning the entries are divided into pages, with 10 entries per page.","title":"Sending inbox messages to users","component":"platform","version":"1.9.6","name":"inbox-notifications","url":"/platform/1.9.6/user/citizen/user-notifications/inbox-notifications.html","titles":[{"text":"1. Authentication page","hash":"_authentication_page","id":1},{"text":"2. Process flow","hash":"_process_flow","id":2}]},"146":{"id":146,"text":"The platform allows configuring the sending of messages in the User portals through communication channels such as inbox and email. Sending inbox messages to users citizen/user-notifications/diia-push-otp.adoc Confirming email address with OTP code in user profile","title":"Sending messages to users","component":"platform","version":"1.9.6","name":"user-notifications-overview","url":"/platform/1.9.6/user/citizen/user-notifications/user-notifications-overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"147":{"id":147,"text":"Generating draft orders in DOCX format Generating reports in CSV format","title":"Reports generation","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/user/officer/reports/overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"148":{"id":148,"text":"On this page: 1. Requesting a report in CSV Format 2. Obtaining and viewing a report in CSV Format The functionality of the Officer portal includes the ability to generate and obtain reports excerpts in the .csv format based on registry data. The process involves several stages: pre-ordering, downloading, and viewing. Currently, ordering reports is only available for officers and based on the Registry of accredited laboratories data. The reports are populated with data from existing laboratories and employees registered in such laboratories. Therefore, before initiating the report generation process, ensure that the system has at least one created laboratory (business process \"Creating laboratory\") with at least one employee (business process \"Entering data in staff registry\"). Ordering reports in the officer portal involves the following steps: Log in to the officer portal by clicking the Log in to the portal button. Authenticate in the system using a qualified electronic signature. For more information about user authentication in the registry, follow the link. Go to the Available services section. Initiate the process of requesting a report. Use the Ctrl + F key combination to search for the service using keywords. Enter the full name of the laboratory for which the report needs to be generated or select the necessary name from the drop-down list. Click Next to continue the process. Verify the data that will be used to generate the report and click Next. For the reports in .csv format, data signing with a qualified electronic signature is not required. Upon successful task completion, the user will receive a corresponding message on the interface, and the report will be available for download in the Provided services section. After completing the report ordering process, the option to download the file in .csv format will become available. To obtain the report, go to the My services → Provided services section. Click Download report to initiate the file download. You can also download an example generated report here: report-output.csv. After downloading, the report can be opened on your PC using applications such as MS Excel, Notepad++, etc. The obtained report is available for further download and processing, for example, for use in a document management system.","title":"Generating reports in CSV format","component":"platform","version":"1.9.6","name":"reports-csv","url":"/platform/1.9.6/user/officer/reports/reports-csv.html","titles":[{"text":"1. Requesting a report in CSV Format","hash":"order-report-csv","id":1},{"text":"2. Obtaining and viewing a report in CSV Format","hash":"_obtaining_and_viewing_a_report_in_csv_format","id":2}]},"149":{"id":149,"text":"On this page: 1. Requesting a draft order in DOCX Format 2. Obtaining and viewing an draft order in DOCX Format The functionality of the Officer portal includes the ability to generate and obtain draft orders (excerpts) in .docx format based on registry data. The process involves several stages: pre-ordering, downloading, and viewing. Currently, ordering draft orders is only available for officers and based on the Registry of accredited laboratories data. == Ordering draft orders (excerpts) in the Officer portal involves the following steps: Log in to the Officer portal by clicking the Log in to the portal button. Authenticate in the system using a qualified electronic signature. For more information about user authentication in the registry, follow the link. Go to the Available services section. Initiate the process of requesting a report. Use the Ctrl + F key combination to search for the service using keywords. Enter the full name of the laboratory for which the draft order needs to be generated, and select the factors of the production environment and labor process from the dropdown list. Click Next to continue the process. Verify and sign the entered data with the qualified electronic signature. After applying the qualified electronic signature, click the Sign button. If all the above steps are successfully completed, a request for obtaining an order draft (excerpt) in .docx format is generated. Generation and downloading of order drafts in .docx format, as well as filling the files with corresponding registry business data, are only possible if the registry regulations have been previously configured. For detailed information, please refer to інструкції адміністратора регламенту реєстру. After completing the draft order request process, the option to download the file in .docx format will become available. To obtain the order draft file, go to the My Services → Provided services section. Click Download excerpt to initiate the file download. You can also download an example generated excerpt here: report-output.docx. After downloading, the draft order can be opened on your PC using applications such as MS Word, etc. The obtained excerpt is available for further download and processing, for example, for use in a document management system.","title":"Generating draft orders in DOCX format","component":"platform","version":"1.9.6","name":"reports-docx","url":"/platform/1.9.6/user/officer/reports/reports-docx.html","titles":[{"text":"1. Requesting a draft order in DOCX Format","hash":"order-report-docx","id":1},{"text":"2. Obtaining and viewing an draft order in DOCX Format","hash":"_obtaining_and_viewing_an_draft_order_in_docx_format","id":2}]},"150":{"id":150,"text":"To expandi the capabilities of the Officer portal’s interface and enhance usability, support for sorting functionality by execution status has been developed. This functionality allows sorting of business processes initiated by the officer in execution based on their status, with reference to the date and time of their start. Both ascending and descending alphabetical sorting is implemented for the Execution status column. When sorting, services are grouped by status (e.g., Pending task execution, In progress, Suspended by administrator, etc.), and an additional sorting based on the start date (service initiation) is automatically applied. Therefore, when the Execution status button is clicked, the services will be automatically sorted based on their start date, allowing the display of grouped services that were created earlier at the bottom or top of the list, depending on the selected sorting type: ascending ↑ or descending ↓↓. Thus, for each individual status, sorted alphabetically, a separate sorting based on the service start date will also be applied. The mechanism for pagination and sorting of elements on user interface web pages, such as task or service pagination and sorting, is identical. Therefore, from the perspective of end users, such as officers and citizens, the configuration of these interface features is the same.","title":"Sorting of services by execution status in the Officer portal","component":"platform","version":"1.9.6","name":"officer-portal-bp-sorting-by-status","url":"/platform/1.9.6/user/officer/sorting-pagination/officer-portal-bp-sorting-by-status.html","titles":[]},"151":{"id":151,"text":"On this page: 1. General overview 2. Pagination of the list of ongoing business processes 3. Pagination of the list of completed business processes 4. Sorting of business processes in progress by their start date and time 5. Sorting of business processes by their start and end date and time In order to expand the capabilities of the Officer portal interface and improve usability, support for sorting and pagination[1]. functionality for tasks has been developed. This functionality allows you to: Divide the list of ongoing business processes into pages; Divide the list of completed business processes into pages; Sort the business processes initiated by the officer by their start date and time; Sort the completed business processes by their start and end date and time. The mechanism for pagination and sorting of elements on user interface web pages, such as task or service pagination and sorting, is identical. Therefore, from the perspective of end users, such as officers and registry service recipients, the configuration of these interface features is the same. Log in to your Officer portal. For more details on user authentication for the registry, please follow the link. Open the My services section. Go to the Services in progress section. Scroll down the page and find the pagination settings. A detailed description of the functionality is provided in the example of Task queue pagination. Log in to your Officer portal. For more details on user authentication for the registry, please follow the link. Open the My services section. Go to the Provided services section. Scroll down the page and find the pagination settings. A detailed description of the functionality is provided in the example of Task queue pagination. Sorting of ongoing business processes by their start date and time can be either descending (newest at the top) or ascending (oldest at the top). Log in to your Officer portal. For more details on user authentication for the registry, please follow the link. Open the My services section. Go to the Services in progress section. Find the Start date column and sort it in ascending or descending order. By default, descending sorting is set, meaning that the newest ongoing business processes appear at the top of the list. Sorting of completed business processes by their start and end date and time can be either descending (newest at the top) or ascending (oldest at the top). Log in to your Officer portal. For more details on user authentication for the registry, please follow the link. Open the My services section. Go to the Provided services section. Find the End date column and sort it in ascending or descending order. By default, descending sorting by the end date and time is set, meaning that the latest completed processes appear at the top of the list. Find the Start date column and sort it in ascending or descending order. 1. Pagination is the division of a large dataset (typically homogeneous) into smaller page-sized portions, with the display of numbered navigation.","title":"Pagination and sorting of services in the Officer portal","component":"platform","version":"1.9.6","name":"officer-portal-bp-sorting-pagination","url":"/platform/1.9.6/user/officer/sorting-pagination/officer-portal-bp-sorting-pagination.html","titles":[{"text":"1. General overview","hash":"_general_overview","id":1},{"text":"2. Pagination of the list of ongoing business processes","hash":"bp-in-progress","id":2},{"text":"3. Pagination of the list of completed business processes","hash":"_pagination_of_the_list_of_completed_business_processes","id":3},{"text":"4. Sorting of business processes in progress by their start date and time","hash":"_sorting_of_business_processes_in_progress_by_their_start_date_and_time","id":4},{"text":"5. Sorting of business processes by their start and end date and time","hash":"_sorting_of_business_processes_by_their_start_and_end_date_and_time","id":5}]},"152":{"id":152,"text":"On this page: 1. General overview 2. Pagination of the task queue 3. Pagination of the completed task list 4. Sorting tasks in the queue by their creation date and time 5. Sorting completed tasks by their creation and execution date and time In order to expand the capabilities of the Officer portal interface and improve usability, support for sorting and pagination[1]. functionality for tasks has been developed. This functionality allows you to: Divide the task queue (tasks to be executed) in the Officer portal into pages; Divide the list of completed tasks into pages; Sort tasks in the queue according to their creation date and time; Sort tasks completed by the officer according to their creation and execution date and time. The mechanism for pagination and sorting of elements on user interface web pages, such as task or service pagination and sorting, is identical. Therefore, from the perspective of end users, such as officers and citizens, the configuration of these interface features is the same. Log in to your Officer portal. For more details on user authentication for the registry, please follow the link. Open the My tasks section. Go to the Tasks to execute section. Scroll down the page. The Rows per page parameter determines the number of tasks to be displayed on the current page. By default, it is set to 10 rows. Select one of the available values (10, 25, 50, or 100) from the dropdown list. If you set the value to 10, the page will display tasks from 1 to 10 (Rows 1-10). If you need to find the row with task number 11, you will need to go to the next page. Go to the next page to view the next set of ten tasks. To do this, click the > symbol (forward). Go back to the previous page by clicking the < symbol. Click < to go to the beginning of the pagination, i.e., the first page. Select a different value for rows per page, for example, 25. In this case, the number of tasks displayed on the page will be 25 (Rows 1-25). If you need to find the row with task number 26, you will need to go to the next page. Log in to your Officer portal. For more details on user authentication for the registry, please follow the link. Open the My tasks section. Go to the Completed tasks section. Refer to the Pagination of the task queue section. From the interface perspective, pagination for tasks awaiting execution and already completed tasks is set up in the same way. Sorting tasks in the queue by their creation date and time can be either descending (newest at the top) or ascending (oldest at the top). Log in to your Officer portal. For more details on user authentication for the registry, please follow the link. Open the My tasks section. Go to the Tasks to execute section. Find the Created column and sort it in ascending or descending order. By default, descending sorting is set, meaning that the newest tasks appear at the top of the list. Sorting completed tasks by their creation and execution date and time can be either descending (newest at the top) or ascending (oldest at the top). Log in to your Officer portal. Детальніше про автентифікацію користувачів реєстру — за посиланням. Open the My tasks section. Go to the Completed tasks section. Find the Execution date column and sort it in ascending or descending order. By default, descending sorting by execution date is set, meaning that the latest completed tasks appear at the top of the list. Find the Created column and sort it in ascending or descending order. By default, descending sorting is set, meaning that the latest tasks appear at the top of the list. 1. Pagination is the division of a large dataset (typically homogeneous) into smaller page-sized portions, with the display of numbered navigation.","title":"Pagination and sorting tasks in the Officer portal","component":"platform","version":"1.9.6","name":"officer-portal-task-sorting-pagination","url":"/platform/1.9.6/user/officer/sorting-pagination/officer-portal-task-sorting-pagination.html","titles":[{"text":"1. General overview","hash":"_general_overview","id":1},{"text":"2. Pagination of the task queue","hash":"tasks-to-do","id":2},{"text":"3. Pagination of the completed task list","hash":"_pagination_of_the_completed_task_list","id":3},{"text":"4. Sorting tasks in the queue by their creation date and time","hash":"_sorting_tasks_in_the_queue_by_their_creation_date_and_time","id":4},{"text":"5. Sorting completed tasks by their creation and execution date and time","hash":"_sorting_completed_tasks_by_their_creation_and_execution_date_and_time","id":5}]},"153":{"id":153,"text":"On this page: 1. General overview 2. Technical Design of the administrative zone of the Platform 3. Subsystems of the Administrative zone of the Platform The administrative zone of the Platform is a set of subsystems that provide management of the state and configurations of the Platform instance and the registries deployed on it using the GitOps approach, by making changes to corresponding repositories in the version control system and applying them automatically. The Platform and registries management subsystem in the administrative zone offers web interfaces for administrators to manage updates, configurations, scalability, backup, restoration, and other service functions of the Platform. For more information on the roles of service administrators, please refer to the Actors and Roles section of the Platform.. This diagram illustrates the subsystems that are part of the Administrative zone of the Platform and their interactions with other subsystems in the implementation of functional scenarios. Subsystem name Service name Platform and Registries management subsystem control-plane Subsystem for deploying and configuring the Platform and registries config-management","title":"Administrative zone of the Platform","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/platform/administrative/overview.html","titles":[{"text":"1. General overview","hash":"_general_overview","id":1},{"text":"2. Technical Design of the administrative zone of the Platform","hash":"_technical_design_of_the_administrative_zone_of_the_platform","id":2},{"text":"3. Subsystems of the Administrative zone of the Platform","hash":"_subsystems_of_the_administrative_zone_of_the_platform","id":3}]},"154":{"id":154,"text":"On this page: 1. Abstract 2. Business process modeling and configuration 2.1. Creating a pool for the first school business process 2.1.1. Modelling of the start event 2.1.2. Modeling of the user task for data entering 2.1.3. Modeling of the user task to sign the data using QES 2.1.4. Modeling of a user task for searching an officer 2.1.5. Modeling a service task for getting a list of users by their attributes 2.1.6. Modeling the \"Message\" end event 2.2. Creating a pool for the second school business process 2.2.1. Modelling of the message start event 2.2.2. Modeling the scripting task for downloading a list of officers 2.2.3. Modeling a user task to view application data 2.2.4. Simulation of the process end event 3. Access settings in Keycloak 4. Implementation at API level In order to support the functionality of organization access granting to business processes at the level of user attributes, a standard extension to business processes has been developed — the ${getUsersByAttributesFromKeycloak} delegate. For that, the Get users by attributes from keycloak template with the same name is implemented as a JSON file getUsersByAttributesFromKeycloak.json. The delegate is required in order to receive a list of users (officers) by certain attributes from the Keycloak identity and access management service when performing a business process. you can search in Keycloak using the following attributes: edrpou: The identification number of an entity in the Unified state register of enterprises and organizations of Ukraine (EDRPOU). drfo: The identification number of a natural person in the State Register of Individuals – Taxpayers (DRFO). Each officer of a certain organization has such attributes in the Keycloak service. As a result of the query, a list of usernames is returned to the business process. This is NOT the full name of a user, but a username. For example, username1, username2 etc. This list of names can be used later on in the Candidate users field when performing a user task in a business process. Candidate users are the users authorized to perform the task. This parameter is required to control user access to specific tasks of a business process. The list of Keycloak users is saved to the result variable in a service task of a business process. This variable is further processed by the groovy script when executing the scripting task. As a result, the list becomes a string that can be used in Candidate users. So, we get the list object from the Keycloak service using the edrpou and drfo attributes and use the script to convert it into a string, which values are comma separated and used in the Candidate users parameter for granting access to a specific task of a business process. Let’s consider setting up a delegate to search for user attributes in the Keycloak service as part of the process when transferring a student from one school to another. We have a complex business process of transferring a student from one school to another. The student must first be excluded from the first school, and then enrolled at the second. From the point of the security architecture, each organization (herein educational institution) in the Keycloak service has its own EDRPOU code. Therefore, two business processes in our example are different organizations, each one having its own employees and corresponding level of access within the organization. We have to launch automatically the business process of the second school after the first process finishes. The end of the business process in the first school (School 1) lanches the second process (School 2) by the \"Notification\" event. In the business process of the second school, the officer must perform the task (User Task) of transferring the student, that is, it is necessary to appoint a performer of the task in the new organization (school). To do this, you need first to get a list of potential users in the relevant organization (performers) from the Keycloak service, and then use this list to grant task access to users in the second business process. That means that each officer in the relevant organization can see the task in the citizen portal and appoint himself/herself as the performer. First of all, model the pool for the business process of the first school. To do this, follow the steps below: Modeling of the business process diagram has to be made within the Create Pool/Participant element. Open the Camunda Modeler application and create a new BPMN diagram. To do this, click File → New File → BPMN Diagram in the upper left-hand side corner. In the toolbar on the left-hand side, find the Create pool/Participant item and drag it to the modeling panel. Enter the corresponding values into the following fields: In the Participant Name field, enter the name of the pool to be displayed in the modeler — School 1. In the Process id field, enter the business process ID — firstversa. In the Process Name field, enter the process business name, optional. Create a start event. To do this, follow the following steps: On the toolbar on the left-hand side, find the CreateStartEvent element (circle) and drag it to the modeling panel. In the settings panel on the right-hand side, enter the corresponding values for the following parameters: In the Name field, enter the name of the start event — Start; In the Initiator field, enter initiator. initiator is a special variable set for the user who initiated the process. Next, create a user task for entering data by a user. To do this, follow these steps: Create a new task, enter its type by clicking the wrench icon and selecting User Task from the menu. In the settings panel on the right-hand side, click Open Catalog, select the User Form template and click Apply to confirm. In the settings panel, configure the following parameters: In the Id field, enter the task identifier — Zayava. Task ID is assigned automatically by default. Enter the value manually, if necessary. In the Name field, enter the name of the task — Enter application data. In the Form key field, enter the form key that corresponds to the service name of the data entry form — add-keyapp. In the Assignee field, enter the variable used to store the user who launched the process instance — ${initiator}. On the UI, after launching the business process, the officer can see a form for entering application data. The data are passed to the business process via the Form key parameter and will be used in the next task of the process. Model a user task (User form) for signing the application data using QES and link it to the business process form using the Form key parameter. In the Id field, enter the task identifier — Sign. It is a task definition key. In the Name field, enter the task name. For example, Sign the application data. In the Form key field, enter the business process form key — add-zayavasign. In the Assignee field, enter the variable used to store the user who launched the process instance — ${initiator}. On the UI, after data entering by the user, a new form appears for data signing using QES. The data are passed to the business process via the Form key parameter and will be used in the next task of the process. Model a user task (User form) to search for officers or for a specific officer by attributes and associate it with the business process form using the Form key parameter. In the Id field, enter the task identifier — Search. It is a task definition key. In the Name field, enter the name of the task. For example, Search for an officer. In the Form key field, enter the business process form key — add-zayavasearch. In the Assignee field, enter the variable used to store the user who launched the process instance — ${initiator}. On the UI, after the user signs the data, a new form appears for searching officers / an officer by attributes. That means, the user must enter the values of the edrpou and drfo attributes into the corresponding fields of the form. The data are passed to the business process via the `Form key' parameter and will be used in the next task of the process. Later on, the data is used in the service task \"Get a list of users by attributes\". In the task, you need to use a delegate to get a list of users by their attributes (Get users by attributes from keycloak). As a result, you get a list of users by their attributes. Model a new task. Define its type by clicking the wrench icon and selecting Service Task from the menu. Go to the settings panel on the right-hand side and apply the Get users by attributes from keycloak delegate. To do this, select the corresponding template from the catalog (`Open Catalog'). Make further settings: Enter the task name in the Name field. For example, Get a list of users by attributes. In the Edrpou attribute value field, enter the value of the edrpou attribute — ${submission('Search').formData.prop('edrpou').value()}. The value of the edrpou attribute is required. It can be submitted both directly (by entering the EDRPOU code, for example, 11111111), and using the submission() function, specifying the ID of the last user task (herein Search). In the Drfo attribute value field, enter the value of the drfo attribute — ${submission('Search').formData.prop('drfo').value()}. The value of the drfo attribute is optional. You can pass it both directly (by entering the DRFO code, for example, 2222222222), and using the submission() function, by entering the ID of the last user task (herein Search). In the Result variable field, enter the name of the variable where you want to save the response — usersByAttributes. As a result of the inquiry, you receive a list of users from Keycloak by their attributes. This list is stored in the usersByAttributes variable. If the user passes only the value of the edrpou parameter, the service returns a list of all officers in the corresponding organization. If the user passes the values of the edrpou and drfo parameters, the service returns a list with a name of a particular officier in the corresponding organization. At this stage, it is necessary to pass the received list of users to another business process. For this, the \"Message\" end event is used. That means that the termination of one process initiates another process by passing certain data in a message. We need to create a local variable, and pass the list of users and QES to another process in it. Model the end message event. To find out more about the \"Message\" event, read this information. Go to the settings panel on the right-hand side and configure the options: In the General tab, configure the following settings: In the Implementation field, select the Delegate Expression type. In the Delegate Expression field, enter the delegate to pass the message — ${startProcessByMessageDelegate}. In the Global Message Name field, enter the global name for establishing communication between message events — Startprocessmessage. In the Global Message referenced field, select Startprocessmessage. The value is filled in automatically, according to the Global Message Name parameter. The values of the Global Message Name and Global Message referenced parameters must match the corresponding values of the message receiving event. In the Input/Output tab, configure a local variable as an input parameter: In the Local Variable Name field, enter the name of the local variable — messagePayload. In the `Variable Assignment Type' field, enter the type of parameter passing using a variable — `Map' (key-value). Add entries for two parameters by clicking the plus sign (+): For the first entry, enter the users parameter and its value ${usersByAttributes} in the Key field. The user must pass a name of the variable where the array of users, obtained in the previous service task, is stored. For the second entry, enter the task parameter and its ${submission('Sign').formData} value in the Key field. The user must pass QES used in the last user task for data signing (herein, Sign) using the submission() function. Model the pool for the business process of the second school_. To do this, follow the steps below: Modeling of the business process diagram has to be made within the Create Pool/Participant element. Open the Camunda Modeler application and create a new BPMN diagram. To do this, click File → New File → BPMN Diagram in the upper left-hand side corner. In the toolbar on the left-hand side, find the Create pool/Participant item and drag it to the modeling panel. Enter the corresponding values into the following fields: In the Participant Name field, enter the name of the pool to be displayed in the modeler — School 2. In the Process id field, enter the business process ID — secondversa. In the Process Name field, enter the process business name, optional. At this stage, it is necessary to get a list of users from the business process of the first school. This is done using the initial \"Message\" event. Model the start message event. To find out more about the \"Message\" event, read this information. Go to the settings panel on the right-hand side and configure the parameters: In the Id field, enter the event identifier — Two. In the Global Message Name field, enter the global name for establishing communication between message events — Startprocessmessage. In the Global Message referenced field, select Startprocessmessage. The value is filled in automatically, according to the Global Message Name parameter. The values of the Global Message Name and Global Message referenced parameters must match the corresponding values of the message sending event. At this stage, it is necessary to create a script based on the data from the business process of the first school. This script converts the list of users received from the Keycloak service into a string of comma-separated values. These values can be used later on for granting access to the student transfer task in the business process of the second school. Create a new task, define its type by clicking the wrench icon and selecting Script Task from the menu. In the settings panel on the right-hand side, fill in the following fields: In the Name field, enter the task name — Download the list of officers. In the Script Format field, specify the script format — groovy. In the Script Type field, enter the script type — Inline Script. Enter the groovy script directly into the Script field: Example 1. Example. The groovy script to convert an object containing a list of users into a comma-separated string of values def users = message_payload('Two').data['users'] def usersstring = '' users.each { usersstring=usersstring+it+',' } set_variable('users',users) The result of script execution is written to the users variable. Model a user task (User form) for viewing application data and connect it to the business process form using the Form key parameter. In the Name field, enter the name of the task. For example, View application data. In the Form key field, enter the business process form key — add-zayavaview. In the Candidate users field, use the variable that stores the received list of users from Keycloak as a comma-separated string of values — ${users}. The list of usernames can be passed both directly (for example, username1, username2, username3, …​) and using a variable (herein, ${users}) where this list is stored. In this case, each officer in the corresponding organization (School 2) has access to review this task in the personal portal, and will also be able to appoint himself/herself as a performer. An officer may NOT have access to a business process, but only to a specific task. That means that such a user is not able to start a business process, but is able to perform a certain task within such a process. Model the process end event: In the Name field, enter the name of the event — End. Let’s see how users and their attributes look like from the perspective of the Keycloak service. All users of the Platform and registry, as well as their attributes, are stored in specific Keycloak realms[1], according to their roles. There are 4 main realms: -admin -officer-portal -citizen-portal -external-system. To find out more about creatnig users and granting them access rights, see this link. You have to get the list of users by their attributes from the -officer-portal realm, because access to a task is granted to users having the \"Officer\" role. Enter the -officer-portal realm. In the sidebar on the left-hand side, go to the Users section. Click View all users to display the list of all users in this realm. Go to the settings of a particular user. To do this, click the user ID. In the Details tab, find the username returned in a list to the business process. It corresponds to the Username parameter. Open the Attributes tab. User attributes are defined as pairs of keys and their values in the Key and Value fields. So we can see that the user with the auto-user-data name has the edrpou and drfo attributes configured. The parameters have the values of the EDRPOU and DRFO codes — 11111111 and 2222222222, respectively. The edrpou attribute defines that this user belongs to the organization with the 11111111 code. The drfo attribute defines the identification number of this user. Keycloak does not have a clear distribution into organizations. Such distribution is set by the edrpou attribute. That means, if a certain organization has the EDRPOU code 11111111, then every user with the attribute \"edrpou\":\"11111111\" belongs to that organization. For the functioning of the ${getUsersByAttributesFromKeycloak} delegate, an additional endpoint has been developed at the Java API level to receive a list of users from the Keycloak service by edrpou and drfo attributes. Example 2. A request to the Keycloak API resource Resource: POST /realms/{realm}/users/search POST: HTTP method. {realm}: The realm in Keycloak. For example, -officer-portal. /users/search: The resource/endpoint. Request body: { \"attributes\":{ \"edrpou\":\"edrpou\", \"drfo\":\"drfo\" } } The API returns an object with a list of users based on the specified attributes. Example 3. Example. Response from Keycloak API { \"id\":\"userId\", \"username\":\"username\", \"firstName\":\"firstName\", \"lastName\":\"lastName\" ... } 1. Realm is a concept in Keycloak that refers to an entity that manages a set of users and their credentials, roles, and groups.","title":"Granting organization access to business process tasks at the level of user attributes","component":"platform","version":"1.9.6","name":"bp-limiting-access-keycloak-attributes","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/access/bp-limiting-access-keycloak-attributes.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Business process modeling and configuration","hash":"_business_process_modeling_and_configuration","id":2},{"text":"2.1. Creating a pool for the first school business process","hash":"create-pool-bp-1","id":3},{"text":"2.1.1. Modelling of the start event","hash":"bp-1-start-event","id":4},{"text":"2.1.2. Modeling of the user task for data entering","hash":"_modeling_of_the_user_task_for_data_entering","id":5},{"text":"2.1.3. Modeling of the user task to sign the data using QES","hash":"_modeling_of_the_user_task_to_sign_the_data_using_qes","id":6},{"text":"2.1.4. Modeling of a user task for searching an officer","hash":"_modeling_of_a_user_task_for_searching_an_officer","id":7},{"text":"2.1.5. Modeling a service task for getting a list of users by their attributes","hash":"_modeling_a_service_task_for_getting_a_list_of_users_by_their_attributes","id":8},{"text":"2.1.6. Modeling the \"Message\" end event","hash":"_modeling_the_message_end_event","id":9},{"text":"2.2. Creating a pool for the second school business process","hash":"create-pool-bp-2","id":10},{"text":"2.2.1. Modelling of the message start event","hash":"_modelling_of_the_message_start_event","id":11},{"text":"2.2.2. Modeling the scripting task for downloading a list of officers","hash":"_modeling_the_scripting_task_for_downloading_a_list_of_officers","id":12},{"text":"2.2.3. Modeling a user task to view application data","hash":"_modeling_a_user_task_to_view_application_data","id":13},{"text":"2.2.4. Simulation of the process end event","hash":"_simulation_of_the_process_end_event","id":14},{"text":"3. Access settings in Keycloak","hash":"_access_settings_in_keycloak","id":15},{"text":"4. Implementation at API level","hash":"_implementation_at_api_level","id":16}]},"155":{"id":155,"text":"On this page: 1. Configuring roles and access rights 1.1. Defining the roles of officials and citizens 1.2. Granting access rights at the level of business processes 1.3. Granting access rights at the level of the data model (XML template) 2. Modeling of business processes 2.1. Granting access rights to implement business process tasks 2.2. Correspondence between user accesses to the business process/tasks and to the physical data model of the factory 2.3. Examples of modelling from RBAC Role Based Access Control (RBAC) is the development of selective access control policy. The access rights of the system users to its services depend on their particular application, forming the roles. Before modeling business processes, it is necessary first to identify the available roles in the simulated registry and define them in the registry’s Gerrit repository: roles/officer.yml: for definition of the officer roles. roles/citizen.yml: for definition of the citizen roles. Upon identification and definition of all the roles in the appropriate files, it is necessary to grant access rights and describe them in the defined files: bp-auth/officer.yml: for granting rights to access business processes for officers; bp-auth/citizen.yml: for granting rights to access business processes for citizens; data-model/role_permission.xml: for granting access rights at the level of the data model. After granting roles and access rights, you can proceed directly to business process modeling. In order to define the roles of officers/citizens, it is necessary to describe them in the corresponding files (roles/officer.yml, roles/citizen.yml), which are represented as a list of roles in the following format: roles: - name: officer-1 description: 'Officer first role' - name: officer-2 description: 'Officer second role' The names of roles must be written in Latin and only in the lower case. For granting access rights at the level of business processes, it is necessary to describe them in the appropriate files (bp-auth/officer.yml, bp-auth/citizen.yml) in the following format: authorization: realm: 'officer' process_definitions: - process_definition_id: first-business-process process_name: \"First process name\" process_description: 'First process description' roles: - officer-1 - process_definition_id: second-business-process process_name: \"Second process name\" process_description: 'Second process description' roles: - officer-1 - officer-2 Names of roles, realm and process_definition_id must be specified in Latin letters. In this way, three authorizations will be generated in Camunda: READ, CREATE_INSTANCE for the officer-1 role/group of the first-business-process process. READ, CREATE_INSTANCE for the officer-1 role/group of the second-business-process process. READ, CREATE_INSTANCE for the officer-2 role/group of the second-business-process process. In the example above, the officer-1 role has access to start both processes, and officer-2 only has access to the second one. SET PERMISSIONS Camunda has the capability to grant access rights for individual tasks. To do this, you need to choose one of the available element templates (element-templates) in the Camunda Modeler application: Citizen Sign Task: It is used to define a task that requires a signature (QES) of a citizen. This task can be accessible only to a business process initiator. Officer Sign Task: It is used to define a task that requires a signature of an officer. User form: This is used to define a task that does not require a signature (QES). When a task requiring an official signature or a regular task is selected, the template has three fields for granting access rights to the task: Assignee: This can be ${initiator}, (to assign the task immediately to the user who initiated the business process) or user ID (to assign the task to one clearly defined user). The user ID is the preferred_username set in Keycloak. If `Assignee' is defined, the following fields are ignored. To use ${initiator} for tasks and, in particular, for the tasks that require a citizen’s signature, it is necessary to define the initiator with the initiator value in the start event of a business process. Candidate users: A comma separated list of users having access to complete a task. As a part of the business process, each user can assign this task to himself/herself and complete it. Candidate roles: A list of comma separated roles having access to complete a task. As a part of the business process, each user having at least one of these roles can assign this task to himself/herself and complete it, even if he/she does not have access to the business process. For example, the business process bp1 can be initiated only by a user with the officer-bp1 role, although the task within this business process — that is available to the officer-task role — can be completed only by a user with the regulatory role officer-task). Candidate users and Candidate roles interact in pairs, because authorization in Camunda is only created for them. Since requests to the data platform (factory) are sent on behalf of a user, you must be careful when modeling such a request, because the user must have access to the requested data. In the Camunda modeler, the token transfer looks like this: The source of a token for delegation connectors to the factory is the Ceph document of a single completed user task. That is, the user whose task is used as a token source must have a role with configured access to the requested resource (see Resource : registration in the screenshot above). To make sure that a user completing a task has access to data, the process must be modeled to use the same role for the data model and the task. Examples: The Activity_shared-sign-app-include task defines Candidate Roles as officer-sign-app,officer-sing-app2. The token from this task is used to create registration in the data factory. In this case, both officer-sign-app and officer-sing-app2 roles must have access to create the registration resource. The Activity_shared-sign-app-include task defines Assignee as ${initiator} (from the files bp-auth/officer.yml and bp-auth/citizen.yml, it is known that the officer-1, officer-2 and officer-3 roles can initiate the business process). The token from this task is used to create the registration resource in the data factory. In this case, all roles with access to initiate this business process (officer-1, officer-2 and officer-3) must have access to create registration. Let’s assume that there is a completer() function for modeling a business process using RBAC that returns data about a user who completed the task. The syntax is as follows: ${completer('task_definition_id')}, where 'task_definition_id' is task_definition_id of the completed task. The completer() function returns the object having the following structure: { \"userId\": \"completer_user_id\", \"accessToken\" : \"accessToken as encoded string\" } Let’s also assume that when the business process starts, an initiator object is created with the same structure as completer(), and all input parameters of the integration delegates. And all input parameters where completer() or initiator appear are transient. An example of modeling a situation when data from the factory is needed after the user completes the task: An example of modeling a situation when data from the factory is needed before the first task assigned to the business process initiator: An example of modeling a situation when data from the factory is required before proceeding with the task: In this case, it is necessary to simulate an intermediate task that provides an opportunity to read a token with the required level of access:","title":"Business Process Modeling and Access Control (RBAC)","component":"platform","version":"1.9.6","name":"roles-rbac-bp-modelling","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/access/roles-rbac-bp-modelling.html","titles":[{"text":"1. Configuring roles and access rights","hash":"_configuring_roles_and_access_rights","id":1},{"text":"1.1. Defining the roles of officials and citizens","hash":"off-cit-roles-definition","id":2},{"text":"1.2. Granting access rights at the level of business processes","hash":"_granting_access_rights_at_the_level_of_business_processes","id":3},{"text":"1.3. Granting access rights at the level of the data model (XML template)","hash":"access-rights-distribution-data-model","id":4},{"text":"2. Modeling of business processes","hash":"_modeling_of_business_processes","id":5},{"text":"2.1. Granting access rights to implement business process tasks","hash":"_granting_access_rights_to_implement_business_process_tasks","id":6},{"text":"2.2. Correspondence between user accesses to the business process/tasks and to the physical data model of the factory","hash":"_correspondence_between_user_accesses_to_the_business_processtasks_and_to_the_physical_data_model_of_the_factory","id":7},{"text":"2.3. Examples of modelling from RBAC","hash":"_examples_of_modelling_from_rbac","id":8}]},"156":{"id":156,"text":"Tasks Gateways bp-modeling/bp/bpmn/events/overview.adoc bp-modeling/bp/bpmn/subprocesses/overview.adoc","title":"Modeling elements","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/index.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"157":{"id":157,"text":"On this page: Overview This section is being updated. Standard integration connectors/extensions, or Element Templates, are meant to simplify business process modeling. They serve as a link between the business processes execution layer and the data factory API. registry-develop:bp-modeling/bp/element-templates/bp-element-templates-installation-configuration.adoc Searching users by equal and Inverse startsWith functions Standard extensions for integration with business processes of other registries on the Platform","title":"Standard business process extensions","component":"platform","version":"1.9.6","name":"element-templates-overview","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/element-templates-overview.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"158":{"id":158,"text":"On this page: 1. Overview 2. Configuring the template in the business process 3. Using search parameters in the officer portal 3.1. Prerequisites 3.2. Search process The business name of the integration extension: Keycloak Get Officer Users By Attributes Equals And Start With The system name of the integration extension: ${keycloakGetOfficerUsersByAttributesEqualsAndStartWith} The file name in the extensions library: keycloakGetOfficerUsersByAttributesEqualsAndStartWith.json The delegate is needed to get a list of users with the officer system role by specific attributes from the Keycloak service when executing a business process. The following attributes are required for all registries: edrpou, drfo, and fullName. Registries may also use custom attributes, such as KATOTTG. In this topic, we’ll use the attributes mentioned above as search examples. The Keycloak API receives GET requests with the specified parameters and returns an array of usernames that can be used in the business process. The system searches the edrpou, drfo, and fullName attributes using the equal function, which returns values that exactly match the one you provide. The KATOTTG attribute is searched using the Inverse startsWith function, which returns values with the specified prefix—​that is, those that \"start with\" the specified condition. The startsWith () function: Searches for users whose specific Keycloak attribute value \"starts with\" the query specified in the UI form in the user portal. At the same time, Keycloak contains the full value of this attribute. For example, edrpou = 88888888. The Inverse startsWith () function: Works the same as the startsWith () function, but the Keycloak value of the attribute is not full. For example, KATOTTG = UA0510003 when the full value of the attribute in the codifier is UA05100030000051497. Before configuring the template in Camunda Modeler, ensure the resources/element-templates folder of the application contains the keycloakGetOfficerUsersByAttributesEqualsAndStartWith.json file. Open the business process modeling interface. Model a new task. Click the key icon and select Service Task from the dropdown menu. In the settings panel on the right, click the Open Catalog button and select the Keycloak Get Officer Users By Attributes Equals And Start With delegate from the list. Click Apply to confirm your action. Configure the following settings: Name: Specify the task name. For example, Find users by attributes. Attributes Equals: Specify the value to search by EDRPOU, and/or DRFO, and/or full name: ${attributesEquals}. Attribute Inverse Start With: Specify the value to search by KATOTTG: ${attributesStartsWith}. Keys and attribute values can only be passed as variables. In our example, we use the following variables to search by attributes: ${attributesEquals} and ${attributesStartsWith}. The objects, or key-value pairs, for the search attributes are generated by a script in the previous task of the business process. Task data is passed from a corresponding user UI form and processed by the script. The result of the script is stored in search variables, which are used to configure the delegate template. Result variable: Specify the search result variable to store the list of retrieved users: usersByAttributes. For details on using the delegate, download the BPMN schema of a test business process and open it in the modeler. The system allows searching by one attribute or a combination of attributes: KATOTTG, edrpou, drfo, and fullName. The system contains three users with the following EDRPOU and KATOTTG attributes: Ivanov, EDRPOU 11111111, KATOTTG UA0502 (Vinnytsia district). Petrov, EDRPOU 22222222, KATOTTG UA05 (Vinnytsia region). Sydorenko, EDRPOU 34554362, KATOTTG UA05 (Vinnytsia region). Let’s consider three search scenarios: By the EDRPOU attribute value 34554362. By the KATOTTG attribute value UA05100030000051497 (Vapnyarska territorial community, Tulchyn district, Vinnytsia region). By a combination of attributes: EDRPOU=34554362 та KATOTTG=UA05100030000051497. Sign in to the officer portal using your digital signature. For details on user authentication, see Registry user authentication. Go to All services and start the business process of searching users by attributes. In the task’s UI form, enter 34554362 into the EDRPOU field and click Search. As a result, the system finds one user who matches the search criteria. Restart the task and enter UA05100030000051497 into the KATOTTG field. Click Search. As a result, the system finds two users who match the search criteria. Restart the task and enter a combination of attributes: 34554362 for EDRPOU and UA05100030000051497 for KATOTTG. Click Search. As a result, the system finds one user who matches the search criteria.","title":"Searching users by equal and Inverse startsWith functions","component":"platform","version":"1.9.6","name":"keycloak-get-officer-users-by-attributes-equals-start-with","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/keycloak-get-officer-users-by-attributes-equals-start-with.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Configuring the template in the business process","hash":"_configuring_the_template_in_the_business_process","id":2},{"text":"3. Using search parameters in the officer portal","hash":"_using_search_parameters_in_the_officer_portal","id":3},{"text":"3.1. Prerequisites","hash":"prerequisites","id":4},{"text":"3.2. Search process","hash":"_search_process","id":5}]},"159":{"id":159,"text":"On this page: 1. Initial steps for creating a business process 2. Data preparation and signing 3. Generating a report 4. Setting the conditions of the output generation result checks 5. Process execution result 5.1. Unsuccessful result of business process execution 5.2. Successful result of business process execution 6. Modeling forms 6.1. Modeling the starting form 6.2. Modeling the personnel data display form 7. An example of using the business process by a user The description of the business process modeling mechanism is given in the example of Register of certified laboratories, namely in creation of the \"Laboratory report in csv format\" excerpt. Modeling a business process for generating excerpts in the docx format is similar, except for the step where the file format is selected. Fulfil the required preconditions for creating a business process, follow the link for instructions. Create a new BPMN diagram. Add the Create pool/Participant element. In the right-hand side window with parameters, you have to enter the appropriate values into the fields: In the Participant Name field, enter the pool name — Generate a report on laboratories in csv format. In the Process id field, enter the ID of the business process — zvit-csv-bp. In the Process name field, enter the business name of the process — Generate a report on laboratories in csv format. Create the start event for starting the business process by a user. In the settings panel on the right-hand side, enter the appropriate values into the following parameters: In the General tab: In the Id field, enter the StartEvent_lab1 value. In the Name field, enter the name of the start event — Start Form. in the Initiator field, enter the initiator value. initiator is a special variable set for the user, which initiated the process. In the ``Form'' tab: in the FormKey field, enter the form ID — add-startform-zvit. In the FormKey field, enter the service name of the created UI form in the Regulations administrator portal. The following steps describe modelling of the start form. Create a service task \"Read data by laboratoryId\". Select the customized Read entity from data factory template. You can find more details about the Read entity from data factory delegate by following the link. In the settings panel, enter the following values: In the Name field, enter the name of the task — Data reading by laboratoryId. In the Resource field, enter the laboratory resource. in the Resource id field, enter the resource ID — ${submission('StartEvent_lab1').formData.prop('laboratory').prop('laboratoryId').value()}. In our case, we pass the StartEvent_lab1 resource identifier from the start form of the business process using the submission() function. In the X-Access-Token field, specify the access token to the user’s system that is used to perform the ${initiator().accessToken} operation. In the Result Variable field, enter the output parameter name — labResponse. Create the \"Search for employee data\" service task. Select the configured Search for entities in data factory template. You can find more details about the Search for entities in data factory delegate by following the link. In the settings panel, enter the following values: In the Name field, enter the name of the task — Search for employee data. In the Input Parameters section: Expand the Resource block: Local Variable Assignment is set to on. This allows creation of a local variable for the request body. Variable Assignment Type, select the String of Expression variable assignment type from the dropdown list. Variable Assignment Value, enter staff-equal-laboratory-id. staff-equal-laboratory-id is the endpoint name for the search criteria, where a request is made to find entities. Expand the Search variable block: Local Variable Assignment has the on value. Variable Assignment Type, select Map. Add Entry, enter laboratoryId in Key, and enter ${submission('StartEvent_lab1').formData.prop('laboratory').prop('laboratoryId').value()} in Value. Expand the X-Access-Token block: Local Variable Assignment has the on value. Variable Assignment Type, select String of Expression. Variable Assignment Value, enter ${initiator().accessToken}. In the Output Parameters section: Expand the Result variable block: Local Variable Assignment has the on value. Assign to Process Variable, enter the value of the variable used for writing the request result — staffResponse. Create the \"Prepare data for displaying\" script task. In the settings panel, enter the following values: In the Name field, enter the Prepare data for displaying name. In the Script Format field, enter the script type (language) — groovy. In the Script Type field, select the script type — Inline Script. In the Script field, insert the following groovy script: def labResponseBody = labResponse.responseBody def payload = [:] def personnelGrid = [] def addPersonPropClosure = { person, staffIt, key -> if (staffIt.hasProp(key)) { if (!staffIt.prop(key).isNull()) { person[key] = staffIt.prop(key).value() } } } staffResponse.responseBody.elements().each { def person = [:] addPersonPropClosure(person, it, 'fullName') addPersonPropClosure(person, it, 'specializationDate') addPersonPropClosure(person, it, 'salary') addPersonPropClosure(person, it, 'hygienistFlag') addPersonPropClosure(person, it, 'fullTimeFlag') personnelGrid.add(person) } payload['name'] = labResponseBody .prop('name').value() payload['edrpou'] = labResponseBody .prop('edrpou').value() payload['address'] = labResponseBody .prop('address').value() payload['headName'] = labResponseBody .prop('headName').value() payload['personnelGrid'] = personnelGrid execution.removeVariable('payload') set_transient_variable('payload', S(payload, 'application/json')) Create the \"Display personnel data\" custom task. In the settings panel, set the following values: In the Id field, enter the personnelDataZvitForm value. In the Name field, enter the Display personnel data name. In the Form key field, enter the read-personnel-data-zvit value. In the FormKey field, you have to enter the service name of the created UI form in the Regulations administrator portal. The following steps describe modelling of the personnel data display form. In the Assignee field, enter the ${initiator} value. ${initiator} indicates that the business process will be assigned to the user who initiated the business process. In the Form data pre-population field, enter the ${payload} value. Create the \"Prepare data for writing (transient var)\" script task. In the settings panel, set the following values: In the Name field, enter the Prepare data for writing (transient var) value. In the Script Format field, enter the script type (language) — groovy. In the Script Type field, select the Inline Script script type. In the Script field, insert the following groovy script: def personnelFormData = submission('personnelDataZvitForm').formData def excerptInputData = [:] def requests = [] def prepopulatedDataMap = [:] prepopulatedDataMap['name'] = personnelFormData.prop('name').value() prepopulatedDataMap['address'] = personnelFormData.prop('address').value() prepopulatedDataMap['headName'] = personnelFormData.prop('headName').value() prepopulatedDataMap['edrpou'] = personnelFormData.prop('edrpou').value() personnelFormData.prop('personnelGrid').elements().each { def request = [:] request.putAll(prepopulatedDataMap) it.fieldNames().each { fieldName -> request[fieldName] = it.prop(fieldName).value() } request['hygienistFlag'] = it.prop('hygienistFlag').boolValue() ? '1' : '0' request['fullTimeFlag'] = it.prop('fullTimeFlag').boolValue() ? '1' : '0' requests.add(request) } excerptInputData['requests'] = requests def request = [:] request['recordId'] = null request['excerptType'] = 'lab-staff-excerpt-csv' request['excerptInputData'] = excerptInputData request['requiresSystemSignature'] = false def payload = S(request, 'application/json') execution.removeVariable('payload') set_transient_variable('payload', payload) execution.removeVariable('excerpt') set_transient_variable('excerpt', excerptInputData) Add the task for calling an external business process (Call Activity) \"Signing data using the system key\". You can find more details about the System digital signature delegate by following the link. Select the configured System digital signature template. In the settings panel, enter the following values: In the Name field, enter the name of the task — Signing data using the system key. In the Input Parameters section enter the input data that must be signed and passed to a business process called by ${payload}; In the Output variable name field, enter the system_signature_ceph_key variable, where the system signature key, obtained as a result of execution of the called subprocess, has to be saved. Create a service task \"Request for generating an excerpt report\". Select the `Generate Excerpt' configured template. In the Name field, enter the Request for generating an excerpt report name. In the Excerpt Type field, enter the name of the file that defines the format — lab-staff-excerpt-csv. In the Excerpt Input Data field, enter the ${excerpt} value. In the Requires System Signature field, enter the false value. A possibility to sign excerpt data in .csv and .docx formats using a system key is not available. Therefore, the Requires System Signature parameter should contain the false value by default. If true is set, the business process will not run. Signing using the system key is only available for the .pdf format. In the X-Access-Token field, enter the token to access the user system, which is used to perform the ${initiator().accessToken} operation. In the X-Digital-Signature source field, enter the source of the digital signature — ${sign_submission('StartEvent_lab1').signatureDocumentId}. In the X-Digital-Signature-Derived source field, enter the source of the system digital signature — ${system_signature_ceph_key}. In the Result variable field, enter the response output parameter name. The data transmitted to generate the excerptInputData excerpt must have the following format: { \"requests\":[ { \"field1\":\"value1\" }, { \"field2\":\"value2\" } .......... ] } Create a file in the root of the cluster, placing it in the corresponding project directory. The file name has to be identical to the name entered in Excerpt Type (at the previous step). In our example, that is lab-staff-excerpt-csv.csv. At this stage, the .csv and .docx file format is determined. Create a \"Save extract report request ID\" script task. In the settings panel, set the following values: In the Name field, enter the name of the task — \"Save extract report request ID\". In the Script Format field, enter the script type (language) — groovy. In the Script Type field, select the Inline Script script type. In the Script field, insert the following groovy script: response.responseBody.prop('excerptIdentifier').value() In the Result Variable field, enter the name of the variable to which the extract identifier will be written, — excerptIdentifier. Add the task for calling an external business process (Call Activity) \"Check excerpt generation status\". Select the configured Check excerpt status template. Follow the link to find more details about the Check excerpt status delegate. In the settings panel, enter the following values: In the Name field, enter the name of the task — Check the status of excerpt generation. In the Input excerpt identifier field, enter the excerpt ID that has to be passed to the called business process — ${excerptIdentifier}. In the Output variable name field, enter the excerptStatus variable, where the excerpt status, recived as the result of a sub-process execution, has to be saved. Example 1. \"Check excerpt generation status\" business process Add the Create Intermediate/Boundary Event element, define its type by clicking the key icon (Change type) and selecting the Timer Boundary Event item from the menu. Follow the link to find more detailed description of the \"Timer\" event modeling element. Go to the settings panel and configure the event: In the Name field, enter the P2M waiting time expired. In the Timer Definition Type field, set the Duration timer type; In the Timer Definition field, set the P2M timer duration. Add XOR gateways for the \"Check excerpt generation status\" Call Activity and for the \"P2M Timed Out\" Timer Boundary Event. Create the \"Save the identifier of the generated excerpt to the system BP\" service task. In the settings panel, set the following values: In the General tab: In the Name field, enter the value Save the identifier of the generated excerpt to the system BP. in the Implementation field ,select the Delegate Expression value. In the Delegate Expression field, enter ${defineProcessExcerptIdDelegate}. In the Input/Output tab: In the Local Variable Name field, enter the excerptId value. In the Variable Assignment Type field, select String or Expression. In the Variable Assignment Value field, enter ${excerptIdentifier}. ↓ The value specified in the Id field is used as the name of the file that a user downloads from the portal. Configure the flow process for the XOR gateway. Create Connect using sequence (branches): To the \"Save the identifier of the generated excerpt to the system BP\" service task: Enter yes in the Name field. In the Condition Type field, select Expression. In the Expression field, enter the ${excerptStatus.equals('COMPLETED')} value. To another XOR gateway: In the Name field, enter no. In the Condition Type field, select Expression. In the Expression field, enter ${excerptStatus.equals('FAILED')}. Create the \"Execution result \"Excerpt not generated\"\" service task. Choose the Define business process status configured template. In the settings panel, set the following values: In the Name field, enter the Execution result \"Excerpt not generated\" value. In the Status field, enter the Excerpt not generated value. This status is displayed after process completion. Configure the flow process from the XOR gateway to the service task \"Execution result \"Excerpt not generated\"\" by creating a Connect using sequence (branch). And create the business process completion event. In the Name field, enter the Excerpt document not generated value. Create the \"Execution result \"Excerpt generated\"\" service task. Choose the Define business process status configured template. In the settings panel, set the following values: In the Name field, enter the Execution result \"Excerpt generated\" value. In the Status field, enter the Excerpt generated value. This status is displayed after process completion. Create the business process completion event. In the Name field, enter the Excerpt document generated value. Model the forms in accordance with the instructions at the link. Modeling the starting form involves creation of a form for searching a laboratory by its name. In the Form business name field, enter the Start form lab report value. In the Form service name field, enter the add-startform-zvit value (which is used at the previous step as the value of the Form Key parameter). The configured form can be downloaded from the following link: add-startform-zvit.json Modeling the personnel data display form involves creation of a form for generating the data of the called laboratory. In the Business name of the form field, enter the Display personnel data report value. In the Form service name field, enter the read-personnel-data-zvit value (which is used at the previous step as the value of the Form Key parameter). The configured form can be downloaded from the following link: read-personnel-data-zvit.json You can learn more about the process of creating excerpts by users, based on the result of the modeled business process, at following the links: Generating reports in CSV format Generating draft orders in DOCX format","title":"Modeling business processes for generating extracts in csv and docx format","component":"platform","version":"1.9.6","name":"bp-modeling-excerpt-csv-docx","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/excerpts/bp-modeling-excerpt-csv-docx.html","titles":[{"text":"1. Initial steps for creating a business process","hash":"_initial_steps_for_creating_a_business_process","id":1},{"text":"2. Data preparation and signing","hash":"_data_preparation_and_signing","id":2},{"text":"3. Generating a report","hash":"_generating_a_report","id":3},{"text":"4. Setting the conditions of the output generation result checks","hash":"_setting_the_conditions_of_the_output_generation_result_checks","id":4},{"text":"5. Process execution result","hash":"_process_execution_result","id":5},{"text":"5.1. Unsuccessful result of business process execution","hash":"_unsuccessful_result_of_business_process_execution","id":6},{"text":"5.2. Successful result of business process execution","hash":"_successful_result_of_business_process_execution","id":7},{"text":"6. Modeling forms","hash":"_modeling_forms","id":8},{"text":"6.1. Modeling the starting form","hash":"create-ui-form-1","id":9},{"text":"6.2. Modeling the personnel data display form","hash":"create-ui-form-2","id":10},{"text":"7. An example of using the business process by a user","hash":"_an_example_of_using_the_business_process_by_a_user","id":11}]},"160":{"id":160,"text":"On this page: 1. Overview 2. Configuring a business key at the start of the process 3. Configuring a business key at the start of the process initiated by a message start event. 4. Configuring a business key at the process execution stage 5. An example of configuring the business keys in a user task 5.1. Configuring the business keys using the submission() function 5.2. Configuring business keys when modeling user forms 6. Displaying business keys in user portals A business key or business process key is a domain-specific identifier of a business process instance in Camunda BPM. A business key is an additional attribute that identifies business processes and user tasks during modeling. Example 1. Searching for the business process using the business key Let’s consider an example: We have a process for shipping book orders, and we manage our orders in a secondary database where every order is identified by an ID. When we start the shipping process, we can link the process instance directly to the order by using the order ID as the business key. To find the process instance, we can simply query by the order ID: RuntimeService runtimeService = ..; String orderId = ..; ProcessInstance shipmentInstance = runtimeService .createProcessInstanceQuery() .processInstanceBusinessKey(orderId) .singleResult(); The orderId argument is the business key for finding the order. In reality, shipping an order may be more complex and involve multiple process instances. We can link them all together by the same business key. This way, we can find all process instances related to a particular customer order with a simple query. Any single attribute or a combination of business-significant attributes of a specific business process or user task can serve as a business key. Business keys allow users to distinguish one business process or user task from another in the list of business tasks in the user portals. For details on business keys, refer to this Camunda blog post: How to Use Business Keys? Business keys use cases During modeling, you can use business keys to: Identify the business process at the start of the process. Identify the business process at the start of the process initiated by a message start event. Identify the business process at the execution stage. To configure a business key at the start of the business process, perform these steps: Open the Camunda Modeler app and create a new BPMN diagram by clicking the BPMN diagram button. A new diagram window opens. Drag the Create Pool/Participant element to the diagram canvas. For details, see Adding the Create pool/Participant element. Modeling the business process diagram must take place within the Create Pool/Participant element. Add and configure the start event: From the toolbar on the left, drag the Create StartEvent element (a circle) to the diagram canvas. Select the Create StartEvent element and configure the start event in the properties panel on the right: In the General tab, configure the main parameters of starting the business process. For details, see Configuring the start event. In the Forms tab > Form Key field, specify the service name of the form whose parameters will be passed to the submission() function when executing the process. In the Extensions tab, configure the business keys parameters: In the Add Property field, click the plus icon and specify the following options: Name: Enter businessKeyExpression. Value: Specify an expression to set the value of the business key using the submission() function. For details, see The submission() function. Example 2. The submission() function ${submission('').formData.prop('').value()+\" \"+submission('').formData.prop('').value()} To create the businessKeyExpression expression, you need to determine which attribute or combination of attributes will identify this business process. In user portals (for officers and citizens), the result of the businessKeyExpression expression is a text field with concatenated values of the attributes specified in the expression. Example 3. Configuring business keys in the process of entering a person’s passport data Let’s consider an example: Let’s configure the business keys in the process of entering a person’s passport data using the submission() function. When modeling the event, set the businessKeyExpression parameter to the following expression: The submission() function with placeholders ${submission('').formData.prop('').value()+\" \"+submission('start event ID').formData.prop('').value()} The placeholder, for example, can correspond to the person’s surname parameter. The placeholder, for example, can correspond to the person’s name parameter. The placeholder must contain the ID of the start event for which the business keys are applied. The ID may be assigned automatically when modeling the event, or it can be defined manually—​for example, StartEvent_1. After substituting the placeholders, we get the following expression: The submission() function with proper parameters ${submission('StartEvent_1').formData.prop('surname').value()+\" \"+submission('StartEvent_1').formData.prop('name').value()} The resulting business key will be represented by two fields: surname (API surname attribute) and name (API name attribute) in the user forms interface. To configure a business key at the start of the process initiated by a message start event, perform these steps: Open the Camunda Modeler app and create a new BPMN diagram by clicking the BPMN diagram button. A new diagram window opens. Drag the Create Pool/Participant element to the diagram canvas. For details, see Adding the Create pool/Participant element. Modeling the business process diagram must take place within the Create Pool/Participant element. Add and configure the start event: From the toolbar on the left, drag the Create StartEvent element (a circle) to the diagram canvas. Select the Create StartEvent element, click the wrench icon, and select the start event type to initiate the business process: Message Start Event. Configure the start event in the properties panel on the right: In the General tab, configure the event’s parameters. For details, see Configuring the message start event. In the Extensions tab, configure the business keys parameters: In the Add Property field, click the plus icon and specify the following options: Name: Enter businessKeyExpression. Value: Specify an expression to set the value of the business key using the submission() function. For details, see The submission() function. For an example of using the business keys via the submission() function, jump to Configuring business keys in the process of entering a person’s passport data. You can model and configure a business key at the business process execution stage. Modeling and configuring a business key requires the business process to contain at least one user form (user task or start event). To configure a business key at the process execution stage, perform these steps: Add a service task to your business process: Select the task, click the wrench icon (Change type), and select the Service Task item from the menu. Select the service task. In the properties panel on the right, open the General tab and go to the templates catalog by clicking the Open Catalog button in the Template field. Select the Define process business key template. Click Apply to confirm your action. In the properties panel, configure the following parameters: Name: Specify the name of the service task—​for example, Service task 1. Business key: Specify an expression to set the value of the business key using the submission() function. For details, see The submission() function. Example 4. The submission() function example ${submission('').formData.prop('').value()+\" \"+submission('').formData.prop('').value()} For an example of using the business keys via the submission() function, jump to Configuring business keys in the process of entering a person’s passport data. As a result, the configured service task becomes available in the business process. Business process keys configured in the BPMN diagram are displayed in user forms as the users walk through the process. Let’s consider an example of displaying business keys in a user form using the JUEL submission() function. For an example of using this function in the process, jump to Configuring a business key at the start of the process. Example 5. Using the business key attributes in the submission() function ${submission('Usertask').formData.prop('').value()+\" \"+submission('Usertask').formData.prop('').value()} The Usertask parameter is the identifier for the user task User task 1 (see the diagram below). This way, you can use the attributes from User task 1 for the business keys in Service task 1. The data is configured using the submission() function. In the Form key field, enter the service name of the previously modeled form: add-usertask. The and placeholders are the parameters of the Property Name field used for the user forms' API (the API tab) in the regulations administrator portal. For details, see bp-modeling/forms/registry-admin-modelling-forms.adoc. To model user forms for further configuration of business process keys, perform these steps: Sign in to the regulations administrator portal and create a user form for your business process. In the components panel on the left, select the Text Field component and drag it onto the modeling canvas. In the window that opens, open the Display tab and enter the value of the variable in the Label field: Surname. In the API tab > Property Name field, enter the service name of the Surname attribute, which will be used in the submission() function when modeling the business process in Camunda, i.e., the parameter for the API endpoint—​in our example, surname. Click Save to save your changes. In the components panel on the left, select a new Text Field component and drag it onto the modeling canvas. In the window that opens, open the Display tab and enter the value of the variable in the Label field: Name. In the API tab > Property Name field, enter the service name of the Name attribute, which will be used in the submission() function when modeling the business process in Camunda, i.e., the parameter for the API endpoint—​in our example, name. Click Save to save your changes. As a result, we get a business process form with two fields for user data, which will act as business keys (surname and name). Click the Create form button in the upper right corner to save your user form. Link your user form to your business process using the form’s service name: When modeling the business process, enter the value of the Form’s service name parameter into the Form key field: add-usertask. As mentioned before, a business key is an additional attribute that identifies business processes and user tasks during modeling. Business keys are defined and configured in forms and are used when modeling processes using JUEL functions. As a result, the keys are displayed in the user portals as identifiers of services or tasks. Business keys allow users to distinguish the business processes they are responsible for or single out a specific task in these processes among thousands of other records available in their accounts. An example of displaying a business key/service identifier in the officer portal An example of displaying a business key/business process task identifier in the officer portal","title":"Configuring business keys in business processes","component":"platform","version":"1.9.6","name":"bp-business-keys","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/modeling-facilitation/bp-business-keys.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Configuring a business key at the start of the process","hash":"bp-key-start","id":2},{"text":"3. Configuring a business key at the start of the process initiated by a message start event.","hash":"bp-key-start-message-event","id":3},{"text":"4. Configuring a business key at the process execution stage","hash":"bp-key-bp-stage","id":4},{"text":"5. An example of configuring the business keys in a user task","hash":"bp-keys-forms-usage","id":5},{"text":"5.1. Configuring the business keys using the submission() function","hash":"_configuring_the_business_keys_using_the_submission_function","id":6},{"text":"5.2. Configuring business keys when modeling user forms","hash":"user-form-bp-keys-settings","id":7},{"text":"6. Displaying business keys in user portals","hash":"_displaying_business_keys_in_user_portals","id":8}]},"161":{"id":161,"text":"On this page: 1. Overview 2. Usage and configuration in a business process 2.1. Creating a pool for the business process 2.2. Modelling start form 2.3. Modelling a form for signing the data with Qualified Electronic Signature 2.4. Modelling \"Preparing data for writing (transient var)\" script task 2.5. Modelling a service task for entity creation in the database 2.6. Modelling the entity search service task 2.7. Modelling script task for getting student data 2.8. Modelling user form for data editing 2.9. Modelling user form for the signing of updated data with e-Signature 2.10. Modelling script task for the forming of an object with updated data 2.11. Modelling the service task for the partial entity update according to the changes made 2.12. Modelling process end event 3. API implementation 4. Data model level implementation The Platform uses 4 main HTTP-methods for all the tables in Data Factory, which the services interact with: POST, GET, PUT and DELETE. To update an entity in Data Factory, we use the PUT method and the corresponding Update entity in data factory* implemented delegate. When using PUT, it is imperative to enter the values of all table fields in the request body, even those that don’t require updating. This behavior is default for PUT method. Example 1. Example For example, let’s take a table with 5 fields: First name, Last name, Middle name, Birth date, Work place. We need to update only the first field, which is First name. When using PUT method, we must set values for each of the five fields of the object. Otherwise, all unfilled fields will autofill with NULL. partialUpdate functionality solves this proble. Partial update uses PATCH HTTP-method on the API level. This method ignores all unfilled fields, not defined in request body. It only processes the parameters that require updating. To work with the PATCH method on the API level there is a dedicated endpoint that allows for the partial database updates (see API implementation). On the business process level, a typical extension has been developed to interact with the API and allow for the sending of business data to the database — the ${dataFactoryConnectorPartialUpdateDelegate} delegate. The Update entity in data factory partially template was implemented for it, represented by dataFactoryConnectorPartialUpdateDelegate.json JSON file. This delegate was developed to update certain parameter values in the database table. Let’s look at an example of business process modelling using the partial (selective) entity parameters update delegate. The puprose of this business process is the creation of an entity in Data Factory, search for this entity by ID, and updating of certain parameters in the entity, meaning its partial update. Найперше, необхідно змоделювати пул для бізнес-процесу. Для цього виконайте такі налаштування: To model a pool for the business process, take the following steps: Open Camunda Modeler and create a new BPMN diagram by clicking File → New File → BPMN Diagram in the top left corner. On the left panel, find the Create pool/Participant element and drag it to the modelling canvas. Fill in the following fields with the corresponding values: In the Participant Name field, enter the name of the pool — Partial data update. In the Process id field, enter business process ID — partially-data-update. In the Process Name field, enter business process name — Partial data update. On this stage we need to model the start form for data enteroing. This business process is initiated by a start form that is filled with user data, not a start event. To configure the start form, take the following steps: On the left panel, find the CreateStartEvent element, and drag it to the modelling canvas. On the right panel, open the General tab: In the Id field, enter element ID. For example, addPersonalProfile. In the Name field, enter start event name — Entering student data In the Initiator field, enter initiator. initiator — is a special variable set for the user who started the process. Navigate to the Forms tab. In the Form Key field, enter the key for the business process form — add-person-profile. Now we need to model a user form for the signing of entered data with an e-Signature. The data is transferred from data entering form to the signing form via the submission() function in the Form data pre-population field. Model a User form user task for the signing of user profile data with e-Signature, and connect it with the business process form using the Form key parameter. On the right panel, configure the following parameters: In the Id field, enter task ID — signPersonalProfile. That’s the task definition key. In the Name field, enter task name. For example, Signing of student data. In the Form key field, enter business process form key — sign-person-profile. In the Assignee field, enter the variable of the user who initiated the process instance — ${initiator}. In the Form data pre-population field, enter the data that needs to be transferred from the start form for signing. Use the submission() function for this — ${submission('addPersonalProfile').formData}. The data entered into the form, and signed with an e-Signature are transferred to a Script task, where a groovy-script is used to form a JSON-object from the data, and write it into the createPersonPayload variable. Create a new task, define its type by clicking the key icon and selecting Script Task from the menu. On the right panel, fill in the following fields: In the Name field, enter task name — Preparing data for writing (transient var). In the Script Format field, enter script format — groovy. In the Script Type field, enter script type — Inline Script. In the Script field, enter the groovy-script: Example 2. The groovy-script that forms the JSON-object to be written to the database def formData = submission('signPersonalProfile').formData def cephData = [:] cephData['secondName'] = 'Tiberius' cephData['lastName'] = formData.prop('lastName').value() cephData['firstName'] = formData.prop('firstName').value() cephData['birthday'] = formData.prop('birthday').value() def createPersonPayload = S(cephData, 'application/json') execution.removeVariable('createPersonPayload') set_transient_variable('createPersonPayload', createPersonPayload) As a result of the task execution we get a formed JSON, stored in the createPersonPayload variable to be used in the business process later. Example 3. A formed JSON-object, stored in the createPersonPayload variable { \"secondName\": \"string\", \"firstName\": \"string\", \"lastName\": \"string\", \"birthday\": \"2022-02-16T13:17:10.952Z\" } The received data is used in a service task for user profile creation. It is necessary to use the Create entity in data factory delegate for entity creation, using the Payload from the ${createPersonPayload} variable, and send a request to the corresponding person-profile API-endpoint. The resource access token, e-Signature, and system signature key are sent with the data. Model a new task. Define its type by clicking the key icon and selecting Service Task from the menu. Navigate to the right panel and apply the Create entity in data factory delegate by selecting the corresponding template from the Open Catalog. Perform the following configurations: In the Name field, enter task name. For example, Save data into the DB In the Resource field, enter the resource (API-endpoint), where the request will be performed — person-profile. On the API level, the endpoint looks like this: /, where is the name of the resource. In the Resource field, the value after slash (/) must be entered. In the Payload field, enter request body — the JSON-object, meaning the data from ${createPersonPayload} variable, which needs to be saved in the Data Factory. Please be advised that this JSON-object (the payload) must be created earlier within the Script Task. In the X-Access-Token field, enter resource access token — ${completer('signPersonalProfile').accessToken}. The access token is taken from EITHER the initiator (for example, ${initiator().accessToken}), OR task completer (for example, ${completer('taskDefinitionId').accessToken}): If there is no other user task before the service task in the business proces, we use an initiator token. If there is another user task before the service task, we use the completer token. This way we create an entity in the database EITHER on behalf of the business process initiator, OR on behalf of the completer of the previous user task. In the X-Digital-Signature-source field, enter e-Signature source — ${sign_submission('signPersonalProfile').signatureDocumentId}. In the X-Digital-Signature-Derived-source field, enter the source of the system signature, meaning the variable where the system key is taken from — ${createPersonPayloadDerivedKey}. In the Result variable field, enter variable name, where the API response will be written to — response. As a result, a transaction that creates the entity with the user profile data in the database, is performed. Now we need to find the data written to the DB, using a search condition, looking for a person with the newest last name written into the DB. So we are trying to search for a user ID using lastName as the search condition. The result will be written into the response variable, Model a new task. Define its type by clicking the key icon and selecting Service Task from the menu. Navigate to the right panel and apply the Create entity in data factory delegate by selecting the corresponding template from the Open Catalog. Perform the following configurations: In the Name field, enter task name. For example, Defining record ID Expand the Resource section: In the Local Variable Assigment field, set the option for defining local variables — On. In the Variable Assignment Type field, select the type of variable assignment from the menu — String or Expression. In the Variable Assignment Value field, enter the value for the local variable — person-profile-equal-last-name. This is the name of our search condition for the resource on Data Factory level, for the corresponding view. Expand the Search variables section: In the Local Variable Assigment field, set the option for defining local variables — On. In the Variable Assignment Type field, select the type of variable assignment from the menu — Map, which is a \"key-value\" pair. Click Add Entry (+) and add a new pair: in the Key field, enter lastName, meaning the key for parameter search in the DB. This allows us to send the search parameter to the resource (API-endpoint for data search). in the Value field, enter data from the user form, where the lastName was entered — ${submission('signPersonalProfile').formData.prop('lastName').value()}. Expand the Access Token section. Enter resource access token — ${completer('signPersonalProfile').accessToken}. The access token is taken from EITHER the initiator (for example, ${initiator().accessToken}), OR task completer (for example, ${completer('taskDefinitionId').accessToken}): If there is no other user task before the service task in the business proces, we use an initiator token. If there is another user task before the service task, we use the completer token. This way we create an entity in the database EITHER on behalf of the business process initiator, OR on behalf of the completer of the previous user task. In the Result Variable field, enter the name for the transit variable, where the request result will be written to — `response. On this stage we need to fet element ID from the response transit variable from the previous task, using a script. This action is required to write the result to another, non-transit variable, and store the ID there. The new variable will be used further during the partial entity update. Create a new task, define its type by clicking the key icon and selecting Script Task from the menu. On the right panel, fill in the following fields: In the Name field, enter task name — Getting student data. In the Script Format field, enter script format — groovy. In the Script Type field, enter script type — Inline Script. In the Script field, enter the groovy-script: response.responseBody.elements().get(0).prop('personProfileId').value() + TIP: The script gets the value from the first element of the response variable. In the Result Variable, enter value for the new variable for ID rewriting. Now we need to model a form, where the user will be able to enter updated information on the student profile. Model a User Form for the signing of user profile data with e-Signature, and connect it with the business process form using Form key parameter. On the right panel, configure the following parameters: In the Id field, enter task ID — editPersonalProfile. It is the task definition key. In the Name field, enter task name. For example, Student data editing. In the Form key field, enter business process form key — edit-person-profile. In the Assignee field, enter the variable of the user who initiated the process instance — ${initiator}. In the Form data pre-population field, enter the data that needs to be edited — ${submission('addPersonalProfile').formData}. Now we need to model the user form for the signing of updated data with e-Signature. Model a User Form for the signing of user profile data with e-Signature, and connect it with the business process form using Form key parameter. On the right panel, configure the following parameters: In the Id field, enter task ID — signEditedPersonalProfile. It is the task definition key. In the Name field, enter task name. For example, Sign updated data In the Form key field, enter business process form key — sign-edited-person-profile. In the Assignee field, enter the variable of the user who initiated the process instance — ${initiator}. In the Form data pre-population field, enter the edited data that needs to be signed — ${submission('editPersonalProfile').formData}. The data entered into the form, and signed with an e-Signature are transferred to a Script task, where a groovy-script is used to form a JSON-object from the data, and write it into the updatePersonPayload variable. Create a new task, define its type by clicking the key icon and selecting Script Task from the menu. On the right panel, fill in the following fields: In the Name field, enter task name — Preparing data for writing (transient var). -* In the Script Format field, enter script format — groovy. In the Script Type field, enter script type — Inline Script. In the Script field, enter the groovy-script: Example 4. The groovy-script that forms the JSON-object to be written to the database def formData = submission('signEditedPersonalProfile').formData def cephData = [:] cephData['lastName'] = formData.prop('lastName').value() cephData['firstName'] = formData.prop('firstName').value() cephData['birthday'] = formData.prop('birthday').value() set_transient_variable('updatePersonPayload', S(cephData, 'application/json')) + Now we need to model the service task for entity update according to the changes made into the form. This is done via a dedicated delegate. The ]Update entity in data factory partially* extension is a delegate for the partial update of an entity in Data Factory, which is configured through the developed Update entity in data factory partially template (dataFactoryConnectorPartialUpdateDelegate.json). Before configuring the template in Camunda Modeler, ensure that the application folder resources → element-templates includes the dataFactoryConnectorPartialUpdateDelegate.json file. Create a Service Task. On the right panel, click Open Catalog, select the corresponding Update entity in data factory partially template from the list, and click Apply to confirm. Configure the selected template: In the Name field, enter task name. For example, Partial update completed. In the Resource field, enter the resource, meaning the name of the endpoint to send the request to — person-profile. On the API level, the endpoint looks like this: /partial//, where is the name of the and is the resource Data Factory ID. In the Resource field, the value between /partial and / must be entered without slash (/). In the Resource id field, enter the ID of the resource, meaning the entity in Data Factory that needs to be updated. For example, {id}. Resource ID is defined in UUID format. It can be transferred as a variable taken from previous tasks of the business process, or plain — f7dc68fe-98e1-4d95-b80f-df5ce42cebb9. In the Payload field, enter request payload — a JSON-structure with the parameters that need to be updated in Data Factory. For example, ${updatePersonPayload}. In the X-Access-Token field, enter resource access token. For example, ${completer('signEditedPersonalProfile').accessToken}. The access token is taken from EITHER the initiator (for example, ${initiator().accessToken}), OR task completer (for example, ${completer('taskDefinitionId').accessToken}). In the X-Digital-Signature source field, enter the source for the Ceph-document, where the user’s signature, used on the UI-form data during the entering, is stored — ${sign_submission('signEditedPersonalProfile').signatureDocumentId}. In the X-Digital-Signature-Derived source field, enter the source for the Ceph-document, where the system signature, automatically attached to request body, is stored — ${updatePersonPayloadDerivedKey}. In the Result variable field, enter the process variable name, where the result will be written (default — response). End the business process by modelling an end event and entering Process end in the Name field. On the API level, Data Factory has a dedicated endpoint for processing PATCH method for partial entity update. Example 5. Partial entity update request parameters Method and resource: PATCH /partial// Request payload: { \"firstName\":\"John\", \"lastName\":\"Doe\", \"birthday\":\"2020-01-01\" } On the data structure level, add the corresponding changeSet with the tag to the createSearchConditions.xml file. This way you’ll automatically create a dedicated PATCH-endpoing on the API level to support partial entity update. The tag must be added to each table. Example 6. changeSet for the partial entity update in the DB","title":"Partial entity update in Data Factory","component":"platform","version":"1.9.6","name":"partial-update","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/modeling-facilitation/partial-update.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Usage and configuration in a business process","hash":"_usage_and_configuration_in_a_business_process","id":2},{"text":"2.1. Creating a pool for the business process","hash":"_creating_a_pool_for_the_business_process","id":3},{"text":"2.2. Modelling start form","hash":"_modelling_start_form","id":4},{"text":"2.3. Modelling a form for signing the data with Qualified Electronic Signature","hash":"_modelling_a_form_for_signing_the_data_with_qualified_electronic_signature","id":5},{"text":"2.4. Modelling \"Preparing data for writing (transient var)\" script task","hash":"_modelling_preparing_data_for_writing_transient_var_script_task","id":6},{"text":"2.5. Modelling a service task for entity creation in the database","hash":"_modelling_a_service_task_for_entity_creation_in_the_database","id":7},{"text":"2.6. Modelling the entity search service task","hash":"_modelling_the_entity_search_service_task","id":8},{"text":"2.7. Modelling script task for getting student data","hash":"_modelling_script_task_for_getting_student_data","id":9},{"text":"2.8. Modelling user form for data editing","hash":"_modelling_user_form_for_data_editing","id":10},{"text":"2.9. Modelling user form for the signing of updated data with e-Signature","hash":"_modelling_user_form_for_the_signing_of_updated_data_with_e_signature","id":11},{"text":"2.10. Modelling script task for the forming of an object with updated data","hash":"_modelling_script_task_for_the_forming_of_an_object_with_updated_data","id":12},{"text":"2.11. Modelling the service task for the partial entity update according to the changes made","hash":"_modelling_the_service_task_for_the_partial_entity_update_according_to_the_changes_made","id":13},{"text":"2.12. Modelling process end event","hash":"_modelling_process_end_event","id":14},{"text":"3. API implementation","hash":"api-implementation","id":15},{"text":"4. Data model level implementation","hash":"_data_model_level_implementation","id":16}]},"162":{"id":162,"text":"On this page: 1. Overview 2. Installing standard integration connectors 3. General integration SOAP HTTP connector 3.1. Configuring the connector 3.2. An example of querying the EDR service as part of the business process 3.2.1. A user task for entering data to search another registry 3.2.2. A script for making requests through the SOAP connector 3.2.3. A service task for sending a search query to another registry 3.2.4. A script for outputting data to the user’s UI form 3.2.5. A user task for passing data to the UI form Integration with registries outside the Platform is possible through a secure exchange gateway (SEG). The goal of using SEG is to provide a secure interface for electronic interactions between various state systems. Once SEG is deployed within the Platform as a service, it enables receiving information from external systems using its own resources. To call external services, you can use the Platform’s standard integration connector that enables communication with external services via the SOAP protocol over the SEG interface. The SOAP connector is used in business processes to receive data from registries outside the Platform. The SOAP connector can only be used with mock servers that simulate a live connection. Connectors are configured in the Camunda Modeler application. Before you start, ensure all prerequisites described in the Installing a catalog of standard extensions to business processes section are fulfilled. You can use the SOAP http connector extension to call any external SOAP service. This connector is configured using the SOAP http connector template (soapHttpConnector.json). Prerequisites When configuring the template in Camunda Modeler, ensure the resources/element-templates folder of the application contains the soapHttpConnector.json file. The connector is configured via an extension template for the service task of the business process. Open the business process modeling interface. Create a Service Task. In the panel on the right, click Select, then select the SOAP http connector from the list. Configure the template: Name: Specify the task name — for example, Search by registry subject. Url: Specify the resource address — for example, https://trembita-edr-registry-mock.apps.envone.dev.registry.eua.gov.ua/mockEDRService. Headers: Specify the request headers — for example, ${requestHeaders}. Payload: Provide the request body — for example, `${requestPayload}. Result variable: Specify the variable to store the service response — for example, edrResponseBody. Example 1. API response from EDR service ... 1 registered Sydorenko Vasyl Leonidovych http://zqedr-api.nais.gov.ua/1.0/subjects/2222 2222 2222 The response from a service returns in the form of a string — that is, a String type object in XML format. You can further use the response in the script for outputting data to the UI form. Let’s consider an example of using the integration connector in a business process that interacts with the EDR SOAP service. In our case, it searches for information about officers by their EDRPOU code (the edrpou attribute). Download the following business process and UI form examples for reference: Business process: soap-http-connector-edr.bpmn Data entry form: soap-http-connector-edrpou-search-in-edr.json Result view form: soap-http-connector-edrpou-edr-result-view.json Create a business process and add a pool to the modeling canvas. Create a start task to initiate the process. To use the initiator variable in the business process, you need to define it in the Start initiator field of the start event. Next, model the User Task, select the User Form template, and configure it. Specify the task name — for example, Enter EDRPOU to search by. In the ID field, enter the task ID (activity_id). You can use it in the business process according to your business logic — for example, searchEdrpouCodeOfficer. In the Form key field, enter the service name of the data entry UI form — for example, soap-http-connector-edrpou-search-in-edr. In the Assignee field, specify the process initiator token — for example, ${initiator}. Here is an example of a UI form as it appears to the users: Next, create a Groovy script defining the parameters to be used by the SOAP connector to get data from another registry — namely, the request headers and body. Create a Script Task. Specify the task name — for example, Preparing request data. Open the script visual editor and create your script. Here is an example of a script: 3.1. Get the EDRPOU code from the first form: def edrpou = submission('searchEdrpouCodeOfficer').formData.prop('edrpou').value() 3.2. Prepare the request headers: def requestHeaders = [:] requestHeaders['SOAPAction'] = 'SearchSubjects' requestHeaders['Content-Type'] = 'text/xml;charset=UTF-8;' Replace 'SearchSubjects' with your own request. 3.3. Save headers to the requestHeaders transient variable. We will use the value of this variable as an input parameter of the request in the SOAP connector settings. set_transient_variable('requestHeaders', requestHeaders) 3.4. Form the body of the SOAP request to the EDR API according to the contract: SOAP request body def requestPayload = \"\"\" a90606bb-242b-4937-a707-c860e2e2f8db MDTUDDM 4.0 1dc9f1f9b1e5be4d37c2b68993af243923ea7620 SEVDEIR-TEST GOV 43395033 IDGOV_TEST_01 SEVDEIR-TEST GOV 00015622 2_MJU_EDR_prod SearchSubjects ${edrpou} \"\"\" Put the ${edrpou} variable into the request body: ${edrpou} 3.5. Save the request body to the requestPayload transient variable. We will use the value of this variable as an input parameter of the request in the SOAP connector settings. set_transient_variable('requestPayload', requestPayload as String) The requestPayload variable must be passed as a string. Use the parameters from the script’s variables for the service task and to configure the SOAP connector. Next, you need to create a service task and apply and configure the SOAP-http-connector template. For details, jump to Configuring the connector. Next, you need to pass the data obtained from another registry using the SOAP HTTP connector to the UI form. For this, you need to create a corresponding script. Create a Script Task. Specify the task name — for example, Preparing the obtained data for the form. Open the script visual editor and create your script. Here is an example of a script: 3.1. Form a JSON object with the state, name, code, and id parameters to pass to the form. 3.2. Save the object to the payload variable, which we will use as an input parameter for passing data to the form. A script for outputting data to the user’s UI form def payload = [:] payload['state'] = getValueByPropertyName(\"state_text\") payload['name'] = getValueByPropertyName(\"name\") payload['code'] = getValueByPropertyName(\"code\") payload['id'] = getValueByPropertyName(\"id\") set_transient_variable('payload', S(payload, 'application/json')) def getValueByPropertyName(String propName) { return S(edrResponseBody, 'application/xml').childElement(\"Body\") .childElement(\"http://nais.gov.ua/api/sevdeir/EDR\", \"SearchSubjectsResponse\") .childElement(\"SubjectList\") .childElement(\"SubjectInfo\") .childElement(propName) .textContent() } The S(edrResponseBody, 'application/xml') function returns the object using the SpinXmlElement specification. Finally, you need to output the data obtained from another registry and processed by the script to the user’s UI form. Model the User Task, select the User Form template, and configure it. Specify the task name — for example, View EDR data. In the ID field, enter the task ID (activity_id) — for example, writeResultForm. У полі Form key введіть службову назву UI-форми вводу даних. Наприклад, soap-http-connector-edrpou-edr-result-view. In the Form key field, enter the service name of the result view UI form — for example, soap-http-connector-edrpou-edr-result-view. In the Assignee field, specify the process initiator token — for example, ${initiator}. In the Form data pre-population field, specify the variable for the object with parameters to pass to the form: ${payload}. The variable is formed in the following task: A script for outputting data to the user’s UI form. Here is an example of a UI form as it appears to the users: Model the process end task and save your changes.","title":"SOAP-based integration with other registries","component":"platform","version":"1.9.6","name":"connectors-external-registry","url":"/platform/1.9.6/registry-develop/bp-modeling/external-integration/api-call/connectors-external-registry.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Installing standard integration connectors","hash":"_installing_standard_integration_connectors","id":2},{"text":"3. General integration SOAP HTTP connector","hash":"_general_integration_soap_http_connector","id":3},{"text":"3.1. Configuring the connector","hash":"configure-soap-http-delegate","id":4},{"text":"3.2. An example of querying the EDR service as part of the business process","hash":"_an_example_of_querying_the_edr_service_as_part_of_the_business_process","id":5},{"text":"3.2.1. A user task for entering data to search another registry","hash":"_a_user_task_for_entering_data_to_search_another_registry","id":6},{"text":"3.2.2. A script for making requests through the SOAP connector","hash":"request-soap-http-connector","id":7},{"text":"3.2.3. A service task for sending a search query to another registry","hash":"_a_service_task_for_sending_a_search_query_to_another_registry","id":8},{"text":"3.2.4. A script for outputting data to the user’s UI form","hash":"soap-http-script-form-output","id":9},{"text":"3.2.5. A user task for passing data to the UI form","hash":"_a_user_task_for_passing_data_to_the_ui_form","id":10}]},"163":{"id":163,"text":"This section provides an overview of the updated components for UI form modeling. We recommend using these components to develop the regulations more efficiently and improve the user experience. The updated components of the standard Form IO set provide more flexibility and expanded functionality. You can use these features in the regulations administrator portal > UI forms (creating or editing) > Builder > Updated. Table 1. Updated UI form modeling components Component Description Text Field A component for text input. Used for short fields such as a name, address, and so on. Number A component limited to number type values. Content A component for displaying static content such as text, images, or HTML. Email A specialized text component for entering and validating email addresses. Edit Grid A component for creating, editing, and deleting rows in a table. Columns A component for creating column layouts on a page or within other components. Text Area A component for longer text input. Field Set A component that groups several fields or components for better organization. Date/Time A component that enables users to select a date and/or time. Table A component for creating and displaying a table. Select A component that enables users to select one or more options from a predefined list. Checkbox A component that enables users to select one or more options from a list. Map A component for displaying geographic data on an interactive map. Radio A component that allows users to select only one option from a predefined set. File A component that enables users to upload files to a server.","title":"UI form modeling components","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/index.html","titles":[]},"164":{"id":164,"text":"On this page: 1. Data modeling concept 2. \"As is\" data model analysis 2.1. Raw data analysis 2.2. Creating a logical model 2.3. Creating a physical model 2.4. Going into production 3. Designing a \"to be\" data model Data modeling is the process of defining and analyzing the data requirements necessary to support business processes within the respective information system. Data modeling typically involves professional data modelers working closely with business stakeholders and potential users of the information system. The general data modeling process is presented in the diagram below. The diagram illustrates the way data models are developed and used today. This section covers the principles and approaches to describing the \"as is\" data model and aligning it between the analysts and data developers. Data models are typically designed and developed in the following main iterations: analyzing raw data creating a logical model creating a physical model going into production The following diagram presents these iterations: The first step to building a data model is to analyze raw data using the following criteria: data sources (regulatory documents, state standards, other registries) data constraints (validation, calculation rules, and so on) data inconsistencies and gaps (errors related to manual input, outdated data, and so on) source values correction (by data owners) As a result, the analyst should gain an understanding of the subject domain, homogeneous objects (entities), and their relationships. The logical data model describes the concepts of the subject domain, their relationships, and data constraints imposed by the domain. A project analyst creates these models to define the elements and functionality of the system to be implemented. Building a logical model is an iterative process that includes the following steps: Visualizing the entities. Defining the attributes (data types that belong to an entity). Defining relationships between entities. The rules and constraints of relationships between the entities are described using different types of relationships: for example, \"one-to-one,\" \"one-to-many,\" or \"many-to-many.\" The relationship type is specified according to the entity-relationship model (ER model). For details, refer to this Wikipedia article: Entity–relationship model The physical data model depends on the specific database management system (DBMS). The physical model contains information about all the database objects. Since there are no common standards for database objects (for example, there is no standard for data types), the physical model depends on the specific DBMS implementation. Therefore, a single logical model can correspond to several different physical models. While the logical model does not specify the exact data type an attribute should have, it is essential for the physical model to describe all the properties of specific physical objects, such as tables, columns, relationships between entities, indices, procedures, functions, and so on. If you plan to upload raw data, you need to work out the format of the upload files and ensure they are filled out correctly between the stages of validating the logical model and developing the physical model. Going into production contains the following stages: Deployment, the engineering part. Includes completing all Jenkins jobs to deploy the created model. Finalizing the job. Data represents information in a formalized form suitable for transmission, communication, or processing. In simple terms, data is information organized according to specific rules. At this stage, it is necessary to develop the \"to be\" data model of the registry database as thoroughly as possible. The logical level of modeling refines the conceptual model by transforming it into a logical diagram where previously identified entities, attributes, and relationships are represented according to the modeling rules of a particular database type or even a specific DBMS. A properly developed logical model must adequately represent the subject domain, which should enable the registry to handle all the operations objectively required in the real-world scenarios for which the registry is intended.","title":"Creating a logical data model","component":"platform","version":"1.9.6","name":"data-modelling-logical-datamodel","url":"/platform/1.9.6/registry-develop/data-modeling/data/logical-model/data-modelling-logical-datamodel.html","titles":[{"text":"1. Data modeling concept","hash":"_data_modeling_concept","id":1},{"text":"2. \"As is\" data model analysis","hash":"_as_is_data_model_analysis","id":2},{"text":"2.1. Raw data analysis","hash":"_raw_data_analysis","id":3},{"text":"2.2. Creating a logical model","hash":"_creating_a_logical_model","id":4},{"text":"2.3. Creating a physical model","hash":"_creating_a_physical_model","id":5},{"text":"2.4. Going into production","hash":"_going_into_production","id":6},{"text":"3. Designing a \"to be\" data model","hash":"_designing_a_to_be_data_model","id":7}]},"165":{"id":165,"text":"On this page: 1. Overview 2. Configuration 3. Using the ext:autoGenerate attribute in a business process The Platform supports generating a unique number for a specific attribute of an entity. Each entity created via a business process receives a unique and user-friendly number. The number is generated when the entity is saved and is unique within the registry instance. The entities may include documents such as certificates of completion and so on. A data modeler can choose the entities for which a number should be generated and the attribute where it should be stored. The number is generated according to the mask you specify. The mask may vary depending on the entities and business processes. You can specify a default mask template. The number generator feature is configured at the registry regulations' data model level, in the data-model directory. A data modeler must do the following: Open the data-model directory in the registry regulations. Open the file for creating tables. Within the changeSet for creating a new table, find the tag. Define the ext:autoGenerate attribute and a mask for generating numbers in the appropriate format within the tag. Commit the changes to the registry regulations Gerrit repository. For details, see Applying changes to the regulations. XML schema of using the ext:autoGenerate attribute ... ... AA-{dd-MM-yyyy}-{SEQ} is the template used to generate the number for the entity (such as a document or certificate), where: The AA constant is the document code. The {dd-MM-yyyy} variable is the date in Java format. The {SEQ} variable is the sequence number. It is generated using the {SEQ} + 1 principle, meaning that each new document will have a unique number incremented by 1. Example of generating numbers for certificates in the registry The system uses the Java Date Time Format to generate and validate the timestamp template. The sequence of characters, the use of hyphens, and the letter case for days, months, and years are not important. We recommend using the following Java Date Time format schemas when defining a template in the data model: Table 1. Java date and time schemas and examples Schema Example dd-MM-yyyy hh:mm:ss 02-09-2022 06:07:59 YYYYMMDD hh:mm:ss 20220902 06:07:59 MM/dd/yyyy 09/02/2022 dd/MM/yyyy 02/09/2022 After deploying the regulations using the ext:autoGenerate attribute for the database table columns, the system generates a unique and user-friendly number for each document according to the defined template once a relevant business process is executed. This number is then stored in the registry database and can be used when generating analytical reports and so on. Let’s consider an example of running a business process to generate a number in the officer portal. Sign in to the officer portal. Open the All services section. Start a corresponding business process. Fill out the form and click Submit. Sign the data you provided. Once you sign the data, the system will generate the number for the newly created document and save it to the registry database. The number of the document matches the template defined in the data model at the regulations level: AA-{dd-MM-yyyy}-{SEQ} In our example, the system generated a certificate number 4 with an AA code dated 09-14-2022. Click Submit to finish the process.","title":"Generating a unique number for registry entities","component":"platform","version":"1.9.6","name":"auto-generate-number","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/auto-generate-number.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Configuration","hash":"_configuration","id":2},{"text":"3. Using the ext:autoGenerate attribute in a business process","hash":"_using_the_extautogenerate_attribute_in_a_business_process","id":3}]},"166":{"id":166,"text":"On this page: 1. Overview 2. Usage examples 2.1. Prerequisites 2.2. Scenarios 2.2.1. Using INNER JOIN without additional conditions 2.2.2. Using INNER JOIN with an AND condition 2.2.3. Using INNER JOIN with an OR condition 2.2.4. Using INNER JOIN with AND and OR conditions 3. Other usage examples 3.1. Using LEFT JOIN with a single additional OR condition 3.2. Using LEFT JOIN with several additional AND and OR conditions The operation enables joining tables using different conditions. It is used when creating search conditions inside the tag to get the necessary data in roll-up tables. There are three main join types: INNER JOIN: An intersection of data from two tables. For example, . LEFT JOIN: Extracts data from the first table (left) and joins data from the second table (right) where possible. For example, . RIGHT JOIN: The opposite of LEFT JOIN. For example, . You can use the operation with additional AND and OR operators, which you can define within the tag as the value of the logicOperator attribute. Let’s consider several examples of using JOIN in search conditions with additional AND and OR operators in the context of the role model and the KATOTTG territorial units codifier. Create two tables to join and use in search conditions. creates a table with KATOTTG codes. Example of the \"katottg\" table Let’s create a search condition called get_regions_or_city_regions. This search condition creates an endpoint in the data factory, which can return a list of regions, cities with a special status, their KATOTTG codes, and KATOTTG code categories using the following conditions: Joining tables using JOIN with an AND condition: Joining tables using JOIN with an OR condition: The result depends on the condition you specify in the request. A data sample is formed from several records joined in a roll-up table. Example 1. XML schema. Using INNER JOIN without additional conditions At the output, Liquibase generates the following SQL query: Example 2. SQL query. Using INNER JOIN without additional conditions CREATE OR REPLACE VIEW registry.get_regions_or_city_regions_v AS SELECT k.katottg_id, k.name AS name_region, cat.name AS name_category, cat.code FROM katottg k JOIN katottg_category cat ON k.category = cat.code Example 3. XML schema. Using INNER JOIN with an AND condition At the output, Liquibase generates the following SQL query: Example 4. SQL query. Using INNER JOIN with an AND condition CREATE OR REPLACE VIEW registry.get_regions_or_city_regions_v AS SELECT k.katottg_id, k.name AS name_region, cat.name AS name_category, cat.code FROM katottg k JOIN katottg_category cat ON k.category = cat.code AND k.category = 'K' :: text; The result of the request is as follows: When joining the tables using JOIN with an AND condition, you will get a sample of 2 records: Figure 1. Request result when using JOIN + AND condition Example 5. Using INNER JOIN with an OR condition At the output, Liquibase generates the following SQL query: Example 6. SQL query. Using INNER JOIN with an OR condition CREATE OR REPLACE VIEW registry.get_regions_or_city_regions_v AS SELECT k.katottg_id, k.name AS name_region, cat.name AS name_category, cat.code FROM katottg k JOIN katottg_category cat ON k.category = cat.code OR k.category = cat.code AND k.category <> 'K'::text AND k.level = 1; The result of the request is as follows: When joining the tables using JOIN with an OR condition, you will get a sample of 25 records: Figure 2. Request result when using JOIN + OR condition Example 7. XML schema. Using INNER JOIN with AND and OR conditions At the output, Liquibase generates the following SQL query: Example 8. SQL query. Using INNER JOIN with AND and OR conditions CREATE OR REPLACE VIEW registry.get_regions_or_city_regions_v AS SELECT k.katottg_id, k.name AS name_region, cat.name AS name_category, cat.code FROM katottg k JOIN katottg_category cat ON k.category = cat.code AND k.category = 'K' :: text OR k.category = cat.code AND k.category <> 'K'::text AND k.level = 1; The result of the request is as follows: When joining the tables using JOIN with AND and OR conditions, you will get a sample of 27 records: Figure 3. Request result when using JOIN + AND + OR conditions You can add custom conditions to the primary conditions using Liquibase’s functional extension. For example, to join two tables, cities and katottg_dictionary, on the condition that katottg equals either level4 or add_level, you would use the following conditions combined with an OR operator: and in to define the main condition, katottg=level4 to define the additional condition, katottg=add_level Example 9. XML schema of joining the \"cities\" and \"katottg_dictionary\" tables using a single additional OR condition At the output, Liquibase generates the following SQL query: Example 10. SQL query. Using LEFT JOIN with an OR condition SELECT ci.city_id, ci.name, ci.katottg, kd.name AS name_dict FROM cities AS ci LEFT JOIN katottg_dictionary AS kd ON (ci.katottg = kd.level4) or (ci.katottg = kd.add_level); You can use to model more complex conditions of joining tables. For example, to join the same two tables, cities and katottg_dictionary, on the condition that katottg equals level4 when category does not equal 'B', or katottg equals add_level when category equals 'B', you would use the following search condition: Example 11. XML schema of joining the \"cities\" and \"katottg_dictionary\" tables using several additional AND and OR conditions At the output, Liquibase generates the following SQL query: Example 12. SQL query. Using LEFT JOIN with several additional AND and OR conditions SELECT ci.city_id, ci.name, ci.katottg, kd.name AS name_dict FROM cities AS ci LEFT JOIN katottg_dictionary AS kd ON (ci.katottg = kd.level4) and (kd.category = 'B') or ((ci.katottg = kd.add_level) and (kd.category <> 'B')); Note that the nested conditions in are grouped by parentheses inside the code. For this example, grouping is optional: without the parentheses, the code will work the same as with the parentheses because the AND conditions have a higher priority than OR and will be resolved first. Keep this in mind for other potential use cases.","title":"Scenarios of combining tables using JOIN with additional AND and OR conditions","component":"platform","version":"1.9.6","name":"join-and-or-usage","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/join-and-or-usage.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Usage examples","hash":"_usage_examples","id":2},{"text":"2.1. Prerequisites","hash":"_prerequisites","id":3},{"text":"2.2. Scenarios","hash":"_scenarios","id":4},{"text":"2.2.1. Using INNER JOIN without additional conditions","hash":"_using_inner_join_without_additional_conditions","id":5},{"text":"2.2.2. Using INNER JOIN with an AND condition","hash":"_using_inner_join_with_an_and_condition","id":6},{"text":"2.2.3. Using INNER JOIN with an OR condition","hash":"_using_inner_join_with_an_or_condition","id":7},{"text":"2.2.4. Using INNER JOIN with AND and OR conditions","hash":"_using_inner_join_with_and_and_or_conditions","id":8},{"text":"3. Other usage examples","hash":"_other_usage_examples","id":9},{"text":"3.1. Using LEFT JOIN with a single additional OR condition","hash":"_using_left_join_with_a_single_additional_or_condition","id":10},{"text":"3.2. Using LEFT JOIN with several additional AND and OR conditions","hash":"_using_left_join_with_several_additional_and_and_or_conditions","id":11}]},"167":{"id":167,"text":"On this page: 1. Overview 2. Table management 2.1. Creating tables 2.1.1. Table creation attributes and possible values 2.1.1.1. bulkLoad attribute 2.1.1.2. readMode attribute 2.1.1.3. ext:autoGenerate attribute 2.2. Changing API behavior at the level of the table creation structure 3. Managing search conditions 3.1. Tag for creating a simple search criteria 3.2. Tag for creating a search condition 3.2.1. operator 3.2.2. Search conditions attributes and possible values searchType attribute limit attribute indexing attribute returning attribute pagination attribute 3.2.3. Using the JOIN operation with AND and OR conditions 3.3. Tag for deleting a search condition 3.4. Tag for setting integration points with other registries and external systems 4. Managing custom data types 4.1. Tag for creating an enumerated data type (ENUM) 4.2. Tag for creating a composite data type 4.3. Tag for deleting a data type 4.4. A tag for creating a custom data type with optional constraints 4.5. Tag for deleting custom data types 5. Creating a many-to-many relationship type 6. Saving multiple entities within a single transaction 7. Generating endpoints for partial updates of database entities 8. Managing analytics views 8.1. Tag for creating an analytics view 8.2. Tag for deleting an analytics view 8.3. Tag for creating an index 9. Managing access rights to analytical data 9.1. Tag for granting access to all analytics views 9.2. Tag for revoking access to all analytics views 9.3. Tag for granting access to an individual analytics view 9.4. Tag for revoking access to an individual analytics view 10. Using nested structures in registry database tables by a specified parameter 10.1. Tag for using nested structures 11. Managing the code review process Configuring the data model Use UTF-8 encoding to describe the registry data model. The registry data model is defined declaratively using XML templates that the Liquibase tool processes and generates SQL structures. Due to the Platform’s architecture complexity, standard Liquibase functionality only covers some of the needs when working with data structures. The Platform’s liquibase-ddm-ext module extends Liquibase’s functionality and provides additional custom tags for the Liquibase XML templates. In Liquibase terminology, these tags are called Change Types. Custom tags cover the following categories: Creating tables with data history support Creating and deleting user data (domain) Creating and deleting user data types Creating and deleting simple search conditions Creating and deleting search conditions Creating many-to-many relationship type Creating an analytics view for a replica Storing multiple entities within a single transaction (composite entity) Generating endpoints for modifying separate parts of an entity (partial update) Granting and revoking rights to all analytics views (grantAll/revokeAll) A complete list of advanced tags and their parameters is stored in this XSD schema. Figure 1. Files for creating tables in the structure of the registry regulations The createTable tag creates a table in the database. When using the createTable tag, you must also use the ext:historyFlag attribute and set it to true. This extended attribute is used to track the history of changes. XML schema example Each createTable tag is required to have a historyFlag attribute with a true value as part of the regulations verification. Therefore, the historyFlag=\"true\" attribute is required when creating a table. This way, the system generates a historical table and a set of service fields for each table. For details on creating tables, see data-modeling/data/physical-model/liquibase-changes-management-sys-ext.adoc#create-table-hst. The bulkLoad attribute lets you quickly load data into tables from files or arrays. Possible values: true: Enable bulk data loading into the table from files (for example, CSV) or arrays (LIST). This ensures optimal performance and efficiency when working with large datasets. false: Disable bulk data loading into the table from files or arrays. In this case, data is imported into the table using separate INSERT operations, which can be less efficient when working with large volumes of data. Example of creating a table with bulkLoad=\"true\" ... ... The readMode attribute lets you control the read behavior for the registry’s database tables. It determines how the system should read data from the table: synchronously or asynchronously. Set the read behavior depending on your performance requirements. Possible values: sync: Set synchronous read mode. In this mode, the system reads data in a sequence (data is read at the registry-rest-api level). The read request is blocked until the database server returns data. This means the application is paused while waiting for the query results. The synchronous mode can be useful in cases where it is important to ensure the sequence of operations. async: Set asynchronous read mode. In this mode, the read request sent to the database server does not block the application from running (data is read via rest-api > registry-kafka-api > rest-api). Instead, the application continues working, and the reading results are processed when available. The asynchronous mode increases the application’s performance because it does not wait until the reading operations are completed. This can be useful in cases where it is necessary to process a large number of requests simultaneously or when the response time of the database server is unpredictable. Example of creating a table with readMode=\"sync\" ... ... The ext:autoGenerate attribute is a custom Liquibase extension attribute that automatically generates column values when inserting records into a table. It is used in the tag. Use this attribute to generate a unique and user-friendly number for an entity created in the registry (such as a document or certificate). The number is generated when the entity is saved and is unique within the registry instance. XML schema ... ... In this example, the ext:autoGenerate attribute defines a template for the column_name column values using the following format: AA-{dd-MM-yyyy}-{SEQ} The system will automatically generate values that will look like this: AA-day-month-year-sequence. Here \"AA\" is the document code, \"day,\" \"month,\" and \"year\" define the date in the dd-MM-yyyy format, and \"sequence\" contains a unique record number. For details, see Generating a unique number for registry entities. Regulations developers can modify API behavior settings at the level of the table creation structure. For this, you can use ext:alterTableApi, a custom Liquibase extension tag. This tag enables you to modify specific table attributes that do not affect the data structure but influence the API code generation. For example, ext:alterTableApi can allow editing attributes such as bulkLoad or readMode that control the ability to load data into the table from files or arrays and the data read mode (synchronous or asynchronous), respectively. For details on bulkLoad and readMode, jump to: bulkLoad attribute readMode attribute This tag helps regulations developers and modelers control API behavior settings for tables after they are created without changing the data structure. The tag uses the ext:attribute extension, which accepts the key (name) and the value (value) of the attribute for which the behavior needs to be changed. Specifying the table’s name and at least one of the two attributes (bulkLoad or readMode) is mandatory. Attributes and their values are stored in the ddm_liquibase_metadata table. If both the bulkLoad and readMode attributes are absent in the ext:alterTableApi tag, the values in the ddm_liquibase_metadata metadata table remain unchanged, and system behavior is unaffected. XML schema of using the ext:alterTableApi tag Use the ext:alterTableApi tag in a new changeSet after executing a changeSet to create the table. Existing data structures can only be extended. Tags in the regulations that have already been processed cannot be changed. All changes are idempotent, meaning that if you execute the same changeSet multiple times, the database state will remain the same after the first execution. Extended XML schema. Deploying tables with certain attribute values and subsequently changing these values using the ext:alterTableApi tag ... ... ... ... You build the registry data model in the regulations using XML tags. One of these tags, , creates search conditions, or SC for short. For example: . Figure 2. Search conditions in the structure of the registry regulations Each condition contains information about search parameters such as the table and the column to search, which type of search to use, and so on. Liquibase processes the XML model and creates view tables, virtual tables that contain information from one or more real tables within the database. View tables have a _v prefix added to their name—​for example, search_condition_test_v. When the registry data model is deployed, the system creates a REST API endpoint for each search condition using the table name without the prefix but with a dash-case convention—​for example, search-condition-test. When you make a request to the /search-condition-test API resource, the response returns data from the search_condition_test_v view table. Example of calling the SC API: https://-/search-condition-test?offset=0&limit=10. Change type name: The createSimpleSearchCondition tag creates a simple search condition, including a view for one table and an index for the specified search field. XML schema example CREATE simple test search condition If you create an index without specifying the search field, the system will return an error. For details on creating a simple search condition, see the XML template for a simple search condition (scenario 1) section. Change type name: The createSearchCondition tag creates a search condition, including a view for several tables and their relationships. This tag can also create indexes for each search field. Set the additional indexing attribute to true within the tag, as shown in the following example: XML schema example If you create an index without specifying the search field, the system will return an error. The first tag in the condition must not contain the logicOperator attribute. All other tags must contain it. The first tag in the condition must contain the logicOperator attribute, the same as other tags. Possible values of the logicOperator attribute are and and or. If the tag is nested, you must wrap it in parentheses. For details on different scenarios of using search conditions, see the following sections: XML template for a search condition (scenario 2); XML template for a search condition (scenario 3); XML template for a search condition (scenario 4); Possible values: Value Description Symbol (Unicode) Comment eq equals = ne not equal <> gt greater than > ge greater than or equal to >= lt less than , you can use aggregate functions: min(), max(), avg(), count(), sum(). The fields used in these functions are removed from the output (SELECT). All other table fields are included in grouping (GROUP BY). The searchType attribute in the element indicates the type of operation to perform for a specific column when searching the table. Possible values: equal Returns values that exactly match the one you specified. Example 1. XML schema startsWith Returns values with the prefix you specified—​that is, values that \"start with\" the given condition. Example 2. XML schema example contains Returns values that match the value you specified anywhere in the string (beginning, middle, or end). Example 3. XML schema in Returns values that exactly match the values you specified in an array. Similar to equal but works with multiple values. Example 4. XML schema Example 5. An HTTP request using the \"in\" operator https://..../findInAge?age=18,21,42 notIn Returns values that do not match the values you specified in an array. The opposite of the in search type. Example 6. XML schema Example 7. An HTTP request using the \"notIn\" operator https://..../findNotInAge?age=18,21,42 between Returns values that belong to the range you specified (from/to). Example 8. XML schema Example 9. An HTTP request using the \"between\" operator https://..../findBetweenAge?ageFrom=18&ageTo=42 The limit attribute specifies the maximum number of results (rows) to return in an API response for a search condition. Possible values: limit=\"all\": Returns all results for a search condition. limit=\"10\" (any number provided as string): Returns a limited number of results for a search condition. If this attribute is not specified, all results are returned. For example, if the limit attribute in the tag has a value of 10, the maximum number of results that the API for the search condition will return will be 10. Example 10. A simple search condition using the \"limit\" attribute CREATE simple test search condition In other words, if the search_condition_simple_test table has more than 10 records that meet the search criteria defined in the tag, and the limit attribute is set to 10, the search condition will return only the first 10 rows. The indexing attribute automatically creates indexes for the columns that are searched. Possible values: indexing=\"true\": Create an index. indexing=\"false\": Don’t create an index. You can omit this attribute if you don’t need to create indexes. Use indexing=\"false\" when it is necessary to state this in the data model schema explicitly. Example 11. A simple search condition using the \"indexing\" attribute CREATE simple test search condition The indexing=\"true\" attribute in the tag indicates that indexing for the specified column (person_full_name) must be enabled. In this example, an index will be created for the person_full_name column since indexing is set to true. The index speeds up the search, reduces the time it takes to process the queries, and makes them more efficient. The returning attribute indicates whether to return a value in an API response. Possible values: returning=\"true\": Return the value. returning=\"false\": Don’t return the value. Example 12. Search condition using the \"returning\" attribute CREATE test search condition If the returning attribute in the element is set to true, the values of the corresponding column will be included in the query result. In this example, the values of person_full_name, person_pass_number, and consent_date columns from the consent_data_person table and the legal_entity_name and edrpou columns from the consent_subject table will be included in the query result since returning is set to true. By default, returning is set to true. If you want to exclude the values of specific columns from the response, set returning=\"false\". Allowing external systems to run requests works by adding the tag (for details, jump to Tag for setting integration points with other registries and external systems). The pagination attribute can have the following values: offset Returns a specified number of records, considering offset-based pagination. In an API request, the number of records is determined by the limit parameter. By default, pagination is enabled and set as pagination=\"offset\". How do offset and limit work? Consider a table with 100 records. To get just the first 10 records (from 1 to 10), set your API request to offset=0 (or omit it) and limit=10. To get the next 10 records (from 11 to 20), set offset=10 and limit=10. If you need to get the records from 11 to 30, set offset=10 and limit=20, and so on. This way, the records in a request are offset by 10s. Example 13. Creating a search condition in the registry data model using the pagination=\"offset\" attribute This example creates a search condition called get_requests_by_search_param_offset and allows querying the request_by_search_param table using the search_param parameter with offset-based pagination (the pagination=\"offset\" attribute). Example 14. An HTTP request using query \"offset\" and \"limit\" parameters https://registry-rest-api-mdtu-ddm-edp-cicd-platform-demo.apps.cicd2.mdtu-ddm.projects.epam.com/get-requests-by-search-param-offset?offset=0&limit=10 Example 15. API response [ { \"searchParam\": \"string\", \"requestBySearchParamId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"name\": \"string\" } ] Example of OpenAPI specification page Returns information about the current page, the number of items on the page, the total number of items, and the total number of pages. By default, pagination is enabled and set as pagination=\"offset\". Example 16. Creating a search condition using the pagination=\"page\" attribute This example creates a search condition called get_requests_by_search_param_page and allows querying the request_by_search_param table using the search_param parameter with page-based pagination (the pagination=\"page\" attribute). Example 17. An HTTP request using query \"pageSize\" and \"pageNo\" parameters https://registry-rest-api-mdtu-ddm-edp-cicd-platform-demo.apps.cicd2.mdtu-ddm.projects.epam.com/get-requests-by-search-param-page?pageSize=10&pageNo=0 Request query parameters: pageSize: The number of elements on the page. 10 by default. pageNo: The page number. 0 by default. Example 18. API response { \"content\": [ { \"searchParam\": \"string\", \"name\": \"string\", \"requestBySearchParamId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\" } ], \"totalElements\": 0, \"totalPages\": 0, \"pageNo\": 0, \"pageSize\": 10 } API returns the following attributes: content: An array of elements that match the search criteria. totalElements: The total number of elements requested. totalPages: The total number of pages requested. pageSize: The number of elements on the page. pageNo: The page number being returned. An example of OpenAPI specification none This attribute allows disabling pagination for API queries. By default, pagination is enabled and set as pagination=\"offset\". Example 19. Creating a search condition using the pagination=\"none\" attribute This example creates a search condition called get_requests_by_search_param_nopage and allows querying the request_by_search_param table using the search_param parameter without pagination (the pagination=\"none\" attribute). The operation enables joining tables using different conditions. It is used when creating search conditions inside the tag to get the necessary data in roll-up tables. There are three main join types: INNER JOIN: An intersection of data from two tables. For example, . LEFT JOIN: Extracts data from the first table (left) and joins data from the second table (right) where possible. For example, . RIGHT JOIN: The opposite of LEFT JOIN. For example, . You can use the operation with additional AND and OR operators, which you can define within the tag as the value of the logicOperator attribute. Example 20. Using inner join in a search condition Example 21. Using inner join with an AND operator in a search condition Example 22. Using inner join with an OR operator in a search condition To learn more about using JOIN and additional operators, see Scenarios of combining tables using JOIN with additional AND and OR conditions. Change type name: The dropSearchCondition tag deletes a search condition. XML schema example For details, see the following section: XML template for deleting a search condition. Change type name: The exposeSearchCondition tag enables you to set integration points with other registries and external systems. XML schema example The exposeSearchCondition tag accepts the following attributes: name: Search condition name. platform: A flag that provides access to the registry’s views and REST API for another registry on the Platform. externalSystem: A flag that provides access to the registry’s views and REST API for an external system. Change type name: This tag creates an enumerated data type (ENUM). XML schema example FEMALE MALE Change type name: This tag creates a composite data type. XML schema example For details, see the following section: Schema for creating enumerated and composite data types. Change type name: The dropType tag deletes a data type. XML schema example Change type name: The createDomain tag creates a custom data type with optional constraints. XML schema example For details, see the following section: Schema for creating a domain data type. Change type name: The dropDomain tag deletes a custom data type. XML schema example Change type name: The createMany2Many tag creates a many-to-many relationship type that performs the following functions: Creates a data view by unwrapping an array into rows. Creates an index. XML schema example Where \"columns\" has the following type: \"UUID[ ]\" -\"Array of identifiers\" For details on creating relationships between the tables, see the following section: Schema for modeling relationships between database entities. Change type name: The createCompositeEntity tag enables you to save multiple entities within a single transaction. XML schema example Change type name: The partialUpdate tag generates endpoints for updating separate parts of an entity. XML schema example column_name1 column_name2 column_name3 Change type name: The createAnalyticsView tag creates analytics views on a replica. XML schema example Change type name: The dropAnalyticsView tag deletes analytics views on a replica. XML schema example Change type name: The createAnalyticsIndex tag creates an index only on a replica. XML schema example For details, see registry-develop:data-modeling/reports/data-analytical-data-access-rights.adoc. Change type name: The grantAll tag grants access to all analytics views for a specific role. XML schema example Change type name: The revokeAll tag revokes access to all analytics views for a specific role. XML schema example Change type name: The grant tag grants access to an individual analytics view for a specific role. XML schema example Change type name: The revoke tag revokes access to an individual analytics view for a specific role. XML schema example Change type name: The tableReadParameters tag enables you to model nested structures in registry database tables by a specified parameter. You can specify the fetchType attribute for a column containing a data array to use it in search conditions. It applies to two types of relationships: Columns with a Many2Many relationship type. Columns with a foreign key to another table. The fetchType attribute can have the following values: id: Fetch identifiers (default value). entity: Fetch information from a referenced table. XML schema example with a \"tableReadParameters\" tag XML schema example with a \"fetchType\" attribute Example 23. Using the \"tableReadParameters\" tag and \"fetchType\" attribute when modeling data Table 1 has a Many2Many relationship with Table 2. Table 1 has a column with an array of IDs (foreign keys to Table 2). When a resource from Table 1 is requested, Table 1 fields referencing Table 2 must have values corresponding to Table 2 records in the response. Table 1 { \"vpoId\":\"57152fa5-742c-4b1e-bd53-acc36524cc2d\", \"vpoLastName\":\"Holmes\", \"vpoFirstName\":\"Jared\", \"vpoSecondName\":\"Oliver\", \"personTypes\":[ \"2d89ffea-118c-4be9-9fa0-c3007991c811\", \"0d756563-d6a4-46fe-a0c8-ddf4a935ec35\" ] } Table 2 [ { \"constantCode\":\"1100\", \"name\":\"Large family\", \"personTypeVpoId\":\"2d89ffea-118c-4be9-9fa0-c3007991c811\" }, { \"constantCode\":\"1200\", \"name\":\"Kids\", \"personTypeVpoId\":\"0d756563-d6a4-46fe-a0c8-ddf4a935ec35\" } ] An example of creating a vpo_person_type_contains_name search condition An example of creating a table using fetchType An example of a default response (search conditions or resource) { \"vpoId\":\"57152fa5-742c-4b1e-bd53-acc36524cc2d\", \"vpoLastName\":\"Holmes\", \"vpoFirstName\":\"Jared\", \"vpoSecondName\":\"Oliver\", \"personTypes\":[ \"2d89ffea-118c-4be9-9fa0-c3007991c811\", \"0d756563-d6a4-46fe-a0c8-ddf4a935ec35\" ] } An example of executing a request with \"fetchType\" attribute (search conditions or resource) { \"vpoId\":\"57152fa5-742c-4b1e-bd53-acc36524cc2d\", \"vpoLastName\":\"Holmes\", \"vpoFirstName\":\"Jared\", \"vpoSecondName\":\"Oliver\", \"personTypes\":[ { \"id\":\"2d89ffea-118c-4be9-9fa0-c3007991c811\", \"constantCode\":\"1100\", \"name\":\"Large family\" }, { \"id\":\"0d756563-d6a4-46fe-a0c8-ddf4a935ec35\", \"constantCode\":\"1200\", \"name\":\"Kids\" } ] } You can configure attributes in the data model to exclude individual change sets or entire files from the deployment process of the Code Review pipeline. This helps accelerate the code review process when working with the registry data model in scope of version candidates in the regulations administrator’s portal. For details on working with the data model in scope of version candidates, see Registry data model tables and their structures. The Code Review pipeline is a process to ensure the code meets quality requirements and coding standards. The main Code Review pipeline in your registry regulations is MASTER-Code-review-registry-regulations. You can find it using the following link: https://admin-tools-.apps.envone.dev.registry.eua.gov.ua/cicd/job/registry-regulations/job/MASTER-Code-review-registry-regulations/. When working with the registry’s data model in scope of version candidates, the Code Review pipeline additionally deploys a temporary replica of the registry database. The corresponding step is shown in the image below. Figure 3. An overview of the MASTER-Code-review-registry-regulations pipeline You can exclude changes from the Code Review pipeline using the context=\"!code-review\" attribute in two ways: Exclude a specific change set. To do this, add the context=\"!code-review\" attribute at the tag level. Figure 4. Excluding a specific changeSet from the Code Review pipeline Exclude an entire file with changes. To do this, add the context=\"!code-review\" attribute at the tag level. Figure 5. Excluding a file from the Code Review pipeline If the tag already contains the context attribute (for instance, context=\"pub\"), the !code-review value should be added to the attribute using the and operator. For example: context=\"pub and !code-review\" If you add !code-review to a changeSet that has already been deployed, this changeSet will still be executed during the first Code Review pipeline. However, after applying the changeSet one more time with context=\"!code-review\", it will be skipped in subsequent Code Review pipelines. If you add !code-review to an entirely new changeSet, this changeSet will be ignored during the first Code Review pipeline and all subsequent ones.","title":"A list of extended Liquibase tags","component":"platform","version":"1.9.6","name":"liquibase-ddm-ext","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/liquibase-ddm-ext.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Table management","hash":"table-management","id":2},{"text":"2.1. Creating tables","hash":"createTable","id":3},{"text":"2.1.1. Table creation attributes and possible values","hash":"create-table-attributes","id":4},{"text":"2.1.1.1. bulkLoad attribute","hash":"bulk-load","id":5},{"text":"2.1.1.2. readMode attribute","hash":"read-mode","id":6},{"text":"2.1.1.3. ext:autoGenerate attribute","hash":"ext-auto-generate","id":7},{"text":"2.2. Changing API behavior at the level of the table creation structure","hash":"alter-table-api","id":8},{"text":"3. Managing search conditions","hash":"create-search-conditions","id":9},{"text":"3.1. Tag for creating a simple search criteria","hash":"createSimpleSearchCondition","id":10},{"text":"3.2. Tag for creating a search condition","hash":"createSearchCondition","id":11},{"text":"3.2.1. <ext:where> operator","hash":"ext-where-operator-values","id":12},{"text":"3.2.2. Search conditions attributes and possible values","hash":"sc-attribute-values","id":13},{"text":"searchType attribute","hash":"_searchtype_attribute","id":14},{"text":"limit attribute","hash":"_limit_attribute","id":15},{"text":"indexing attribute","hash":"_indexing_attribute","id":16},{"text":"returning attribute","hash":"_returning_attribute","id":17},{"text":"pagination attribute","hash":"pagination-attribute-values","id":18},{"text":"3.2.3. Using the JOIN operation with AND and OR conditions","hash":"_using_the_join_operation_with_and_and_or_conditions","id":19},{"text":"3.3. Tag for deleting a search condition","hash":"dropSearchCondition","id":20},{"text":"3.4. Tag for setting integration points with other registries and external systems","hash":"exposeSearchCondition","id":21},{"text":"4. Managing custom data types","hash":"_managing_custom_data_types","id":22},{"text":"4.1. Tag for creating an enumerated data type (ENUM)","hash":"ENUM","id":23},{"text":"4.2. Tag for creating a composite data type","hash":"Composite","id":24},{"text":"4.3. Tag for deleting a data type","hash":"dropType","id":25},{"text":"4.4. A tag for creating a custom data type with optional constraints","hash":"createDomain","id":26},{"text":"4.5. Tag for deleting custom data types","hash":"_tag_for_deleting_custom_data_types","id":27},{"text":"5. Creating a many-to-many relationship type","hash":"createMany2Many","id":28},{"text":"6. Saving multiple entities within a single transaction","hash":"createCompositeEntity","id":29},{"text":"7. Generating endpoints for partial updates of database entities","hash":"partialUpdate","id":30},{"text":"8. Managing analytics views","hash":"create-analytical-views","id":31},{"text":"8.1. Tag for creating an analytics view","hash":"createAnalyticsView","id":32},{"text":"8.2. Tag for deleting an analytics view","hash":"dropAnalyticsView","id":33},{"text":"8.3. Tag for creating an index","hash":"createAnalyticsIndex","id":34},{"text":"9. Managing access rights to analytical data","hash":"_managing_access_rights_to_analytical_data","id":35},{"text":"9.1. Tag for granting access to all analytics views","hash":"_tag_for_granting_access_to_all_analytics_views","id":36},{"text":"9.2. Tag for revoking access to all analytics views","hash":"revokeAll","id":37},{"text":"9.3. Tag for granting access to an individual analytics view","hash":"grant","id":38},{"text":"9.4. Tag for revoking access to an individual analytics view","hash":"revoke","id":39},{"text":"10. Using nested structures in registry database tables by a specified parameter","hash":"_using_nested_structures_in_registry_database_tables_by_a_specified_parameter","id":40},{"text":"10.1. Tag for using nested structures","hash":"_tag_for_using_nested_structures","id":41},{"text":"11. Managing the code review process","hash":"_managing_the_code_review_process","id":42},{"text":"Configuring the data model","hash":"_configuring_the_data_model","id":43}]},"168":{"id":168,"text":"On this page: 1. Introduction 2. Starting Liquibase with extensions 2.1. What happens on the Java side? 2.1.1. Starting Liquibase and extensions locally from the command line 2.1.2. Liquibase changelog and changesets 2.1.3. Changeset rollback 2.2. What happens on the database side? Additional protection with checksum The Platform for deployment and maintenance of state electronic registers is a set of constructors, each of which performs a specific role. The Platform uses Liquibase to create a physical data model of the registry for PostgreSQL DBMS. Out of the box, Liquibase supports deploying and versioning objects in a database, that is, creating or deleting tables, establishing relationships between these tables, creating views, setting constraints, and more. Liquibase uses its own constructs called Change Types, each defining a specific version of database changes using XML tags. For example: , . Since Liquibase is used within the Platform as a single tool for working with the physical data model in PostgreSQL, its out-of-the-box functionality can be insufficient and redundant at the same time. For security purposes, database developers and other categories of users do not have direct access to the data, meaning they cannot run SQL queries directly to PostgreSQL. Liquibase has a set of built-in extensions, which: Extend the functionality of the standard Liquibase application with an external Liquibase DDM Extension module. Extend the Liquibase data model change management system: registry-develop:data-modeling/data/physical-model/liquibase-changes-management-sys-ext.adoc. Liquibase is an open-source program written in Java and distributed via a liquibase.jar file. The Liquibase architecture allows developing extensions with additional functionality and compiling them into separate .jar files, typically called liquibase-ext.jar (in our case, liquibase-ddm-ext.jar). For Liquibase and its extensions to work, you need to start Liquibase with the extensions file from the command line. Here is an example of starting Liquibase with extensions locally from the Windows command line: Java -jar liquibase.jar --driver=org.postgresql.Driver --classpath=postgresql-{version}.jar;liquibase-ddm-ext-{version}.jar --changeLogFile=changeLog.xml --url=\"jdbc:postgresql://{server_ip}:{server_port}/{db_name}\" --username={username} --password={password} --labels=\"!citus\" update -Dbname={db_name} Here is an example of starting Liquibase with extensions locally from the Linux command line: Java -jar liquibase.jar --driver=org.postgresql.Driver --classpath=postgresql-{version}.jar:liquibase-ddm-ext-{version}.jar --changeLogFile=changeLog.xml --url=\"jdbc:postgresql://{server_ip}:{server_port}/{db_name}\" --username={username} --password={password} --labels=\"!citus\" update -Dbname={db_name} Since this is a Java application, the developer must explicitly specify the following: The file with Liquibase: liquibase.jar. The driver: org.postgresql.Driver (since we are connecting to PostgresSQL). The file with the extensions: liquibase-ddm-ext-{version}.jar. The changelog to be applied: changeLog.xml. The username and password for which a session must be created to connect to the database. Running .jar files with Liquibase and its extensions locally is convenient for testing. In a production environment, the process is automated by the Jenkins pipelines. In this case, the XML templates are uploaded to the source code repository of a specific registry, where Jenkins tracks and applies changes automatically. A changelog is a text-based file that contains all changes made to the database. An individual unit of change in a changelog is called a changeset. A changelog can be set up as a single file or several files arranged in a hierarchy. For example, a changeLog.xml file may contain \"master\" changesets followed by references to separate files with minor changesets. Each file may contain descriptions of several changesets. In summary, a changelog is a collection of changes called changesets that populate the XML templates, which are then converted into SQL queries and executed on the target database (for details, see registry-develop:data-modeling/data/physical-model/liquibase-changes-management-sys-ext.adoc). You can revert each changeset to one of the previous states. Rollback statements are implemented automatically for some tags, for example, createIndex. For custom rollbacks, you need to add the tag within the tag. When Liquibase applies a changelog for the first time, it verifies that the following two service tables exist in the database: ddm_db_changelog ddm_db_change_loglock The ddm_db_changelog table stores the history of changesets applied in Liquibase. Each changeset is represented as a separate record. The id, author, and filename columns store the most critical information: the change identifier, change author, and the name of the file in which the change was made. The ddm_db_change_loglock table ensures that only one instance of Liquibase is running at a time. Why keep track of all this information? If the same changelog is executed repeatedly, Liquibase will apply only those changesets that have not been applied yet. Liquibase computes a checksum (hash) for each changeset and stores it in the md5sum column. If an administrator accidentally modifies an existing changeset and tries to execute it again, Liquibase will check the exectype column and its status. If the status is EXECUTED, Liquibase will determine that this changeset has already been executed. It will then generate a checksum for the version the administrator is trying to re-execute, and if the hashes don’t match, the user will receive an error. Checksums cannot match when a changeset is modified. A changeset with an EXECUTED status should never be modified — only reverted to a previous state via a rollback. There is an exception when a changeset contains changes that constantly evolve. In this case, changeset modification is allowed. When a changeset is applied again, it gains a REEXECUTED status in the database.","title":"Liquibase: physical data model creation and management tool","component":"platform","version":"1.9.6","name":"liquibase-introduction","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/liquibase-introduction.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Starting Liquibase with extensions","hash":"_starting_liquibase_with_extensions","id":2},{"text":"2.1. What happens on the Java side?","hash":"_what_happens_on_the_java_side","id":3},{"text":"2.1.1. Starting Liquibase and extensions locally from the command line","hash":"_starting_liquibase_and_extensions_locally_from_the_command_line","id":4},{"text":"2.1.2. Liquibase changelog and changesets","hash":"_liquibase_changelog_and_changesets","id":5},{"text":"2.1.3. Changeset rollback","hash":"_changeset_rollback","id":6},{"text":"2.2. What happens on the database side?","hash":"_what_happens_on_the_database_side","id":7},{"text":"Additional protection with checksum","hash":"_additional_protection_with_checksum","id":8}]},"169":{"id":169,"text":"The following table lists standard Liquibase tags supported by the Platform’s architecture. These tags are guaranteed to work with current databases. Table 1. A list of standard Liquibase tags Tag Description createTable (ext:historyFlag required) Liquibase docs: createTable addColumn (ext:historyFlag required) Liquibase docs: addColumn addUniqueConstraint Liquibase docs: addUniqueConstraint dropUniqueConstraint Liquibase docs: dropUniqueConstraint sql (initial load) Liquibase docs: sql createIndex Liquibase docs: createIndex dropIndex Liquibase docs: dropIndex","title":"A list of standard Liquibase tags","component":"platform","version":"1.9.6","name":"liquibase-standard-change-types","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/liquibase-standard-change-types.html","titles":[]},"170":{"id":170,"text":"Liquibase: physical data model creation and management tool A list of standard Liquibase tags A list of extended Liquibase tags registry-develop:data-modeling/data/physical-model/liquibase-changes-management-sys-ext.adoc Setting access attributes for registry API views Generating a unique number for registry entities Scenarios of combining tables using JOIN with additional AND and OR conditions","title":"Creating a physical data model","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"171":{"id":171,"text":"On this page: 1. Overview In addition to granting access to the registry for other registries or external systems in the Control Plane admin console (see Configuring registry access), the registry administrator must provide access to the views and REST API endpoints generated based on these views at the data model level. You can configure access to the registry’s REST API views using access attributes at the Liquibase data model level. This way you can provide access to the registry API based on those views for other registries on the Platform or external systems. Access to registry API views is configured using the tag. For details on the tag, see A list of extended Liquibase tags. The tag accepts several attributes: one for the search condition name, and others for various usage scenarios. Providing access to the registry’s views and REST API for another registry on the Platform is done via the platform attribute. Providing access to the registry’s views and REST API for an external system is done via the externalSystem attribute. Example 1. XML schema example of using the tag and its attributes in the data model name: Search condition name. platform: Set to \"true\" to give access. externalSystem: Set to \"true\" to give access. To revoke access to the registry’s API views, set the corresponding attributes to false. In this example, access to the registry data can be granted to another registry on the Platform, as well as to an external system.","title":"Setting access attributes for registry API views","component":"platform","version":"1.9.6","name":"rest-api-view-access-to-registry","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/rest-api-view-access-to-registry.html","titles":[{"text":"1. Overview","hash":"_overview","id":1}]},"172":{"id":172,"text":"","title":"Modeling registry","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/overview.html","titles":[]},"173":{"id":173,"text":"On this page: 1. Support service mailing address 2. Full registry name 3. Abbreviated registry name 4. Interface theme The platform provides the ability to manage the global settings of the registry within the administrator portal interface. Currently, the registry administrator can configure the following parameters: Support service mailing address Full registry name Abbreviated registry name Interface theme The list of settings will be expanded in the future. Editing the components of the registry regulations can only be done within change candidate versions. For the master version, only the view option is available. To apply the desired parameters, click the Save changes button as shown in the image above. If a user of the Officer or the Citizen portal encounters a critical error, they can contact support using this address. The parameter is set in the Support service mailing address field. The email address should be in the format \"test@example.com\". If the entered address does not match the specified format, the user will receive a corresponding validation error: ❗ The email address should be in the format \"test@example.com\" Users cannot enter domain addresses that are prohibited by current legislation in Ukraine (for example, domains like mail.ru or yandex.ru). The system will display a corresponding validation error: ❗ This email address cannot be used due to security policy The full name is the official legal name of the registry. It is used in official correspondence, documents, and cabinet headers, among others. It can have 3 to 512 characters. Permissible characters are: \"A-Z,\" \"a-z\" of the Ukrainian alphabet, \"0-9,\" \"-\", \",\", \".\", apostrophe ('), space. Example 1. Full name of the Unified state register STATE REGISTER OF LEGAL ENTITIES, INDIVIDUAL ENTREPRENEURS, AND PUBLIC FORMATIONS The abbreviated name is used in informal communication and where there is limited space for the full name, such as in the upper part of portals. It can have 1 to 42 characters. Permissible characters are: \"A-Z,\" \"a-z\" of the Ukrainian alphabet, \"0-9,\" \"-\", \",\", \".\", apostrophe ('), space. The selected theme is applied to all portals (Citizens, Officers, Administrators). It does not affect the interface of the platform’s administrative control panel and Control Plane registries. Currently, two themes for user interfaces are supported: Light theme (default) Dark theme","title":"Configuring global registry settings","component":"platform","version":"1.9.6","name":"registry-global-settings","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/registry-global-settings.html","titles":[{"text":"1. Support service mailing address","hash":"support-email","id":1},{"text":"2. Full registry name","hash":"registry-full-name","id":2},{"text":"3. Abbreviated registry name","hash":"registry-short-name","id":3},{"text":"4. Interface theme","hash":"ui-theme","id":4}]},"174":{"id":174,"text":"This section is currently under construction. Please come back later.","title":"Managing registry report templates","component":"platform","version":"1.9.6","name":"report-templates","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/report-templates.html","titles":[]},"175":{"id":175,"text":"On this page: 1. Creating a request After deploying the registry regulations, only one version of changes is available — the master version. Users have the ability to create a new merge request. This operation will create a new merge request based on the current master version of the regulations. Each request creates a new branch, which represents a candidate version, for making changes to the regulations. Making any changes to the regulations in the master version is not possible. It is necessary to create a new merge request to work with the regulations. Any new version of changes is always created based on the latest changes in the master version. So, even if you are on a candidate version and want to create a new merge request, the new candidate version will still be created based on the master version. To create a merge request, follow these steps: Expand the drop-down menu for version control in the top left corner of the page. Select Create new request. In the new window, fill in the required fields: In the Version name field, enter the name of the change. This will be the name of your candidate version. For example, candidate-version-01. Length: 3-32 characters. Allowed characters are “a-z”, “а-я”, 0-9, “-”. In the Change description field, briefly describe the proposed changes for this candidate version. For example, Test changes to the registry regulations. Length up to 512 characters. All characters are allowed except \"\" (double quotes), use '' (single quotes) instead. If the Change description field contains double quotes (\" \"), you will not be able to create the merge request due to validation. The same logic applies to the validation rules described in the tooltip for each field. In this case, you will see an error prompt on the interface: \"Check the format of the field\": Click Create. As a result, a new candidate version will be created. The user will automatically switch to the newly created version. After creating a new candidate version, you can view its status and settings.","title":"Creating merge requests","component":"platform","version":"1.9.6","name":"create-new-change-request","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/create-new-change-request.html","titles":[{"text":"1. Creating a request","hash":"_creating_a_request","id":1}]},"176":{"id":176,"text":"The master version of changes represents the main version or branch containing the registry regulations updates. It includes changes from all other candidate versions. The master branch is a permanent branch that is automatically created with the deployment of the git repository. It always reflects the production-ready state of the changes. Upon logging into the portal, the administrator is directed to the home page - Version overview > Regulations master version. You can also navigate to the master version by opening the dropdown menu for version control in the top left corner of the page. The configuration of the master version of regulations includes: Master version name Date and time of the latest changes Change description In the future, the list of master version configurations will be expanded. Making any changes to the regulations is not possible in the master version. It is necessary to create a new merge request to work with the regulations.","title":"Reviewing and configuring the master version of changes","component":"platform","version":"1.9.6","name":"master-version-settings","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/master-version-settings.html","titles":[]},"177":{"id":177,"text":"On this page: 1. General description 2. Conflicting changes relative to the master version 3. Reviewing the list of changes 4. Getting updates and updating the status of open change requests 5. Applying changes to the master version 6. Withdrawing a change request within the candidate version By creating a new candidate version for making changes to the registry regulations, you can review its status and settings. You can find the new candidate version in the top left corner of the page by expanding the dropdown menu for managing regulations version. When creating a version, the regulation administrator can view the date and time of creation, as well as the description of the change. The regulations administrator can also: Get information about conflicting changes relative to the master version Review the list of the changes made Get updates Apply changes to the master version Withdraw the request A merge conflict is an event that occurs when the system (Git) cannot automatically resolve differences in code between two versions of changes. Example 1. Merge conflict scenario Suppose there are two persons working on changes to the regulations: user A and user B. Both are working on the same code file from the repository and trying to make different changes to this file within their candidate versions (e.g., simply changing the name of a business process). After making changes, user A applies the changes to the master version. Now, when user B tries to apply their changes to the same file within their candidate version, they cannot do so because the file has already been modified by user A, and the changes are merged into the master branch. Example 2. Making changes to the business process model by user A in candidate Example 3. Updating candidate version-01 and applying changes to the master version by user A Example 4. Updating candidate version-02 and applying changes to the master version by user B In such a case, user B cannot get updates from the master version due to the conflict. The way to resolve the conflict is to withdraw the change request, i.e., cancel candidate version-02 and create a new change request. In the Regulations administrator portal, you can easily review the list of changes made. To review the changes made to the candidate version, follow these steps: Go to the respective candidate version in the top left corner of the page by expanding the dropdown menu for managing regulation versions. Navigate to the section Latest changes. Expand the change category. For example, Business Process Models. Review the files that have been changed. To continuously synchronize the master version with all candidate versions and update the status of open requests according to the latest master version, the system automatically updates all open change requests (candidate versions). The regulations administrator can also manually update their candidate version from time to time. This can be done as follows: Go to the respective candidate version in the top left corner of the page by expanding the dropdown menu for managing regulations versions. Click the Update button. After completing the work within the candidate version, it is necessary to apply the changes made to the master version so that other administrators can see the current state of the registry regulations repository. To do this, follow these steps: Go to the corresponding candidate version in the top left corner of the page by expanding the drop-down menu for version control. Before applying changes to the master version, you need to get updates first. Click the Apply changes to master version button. In the warning window, confirm the changes to the master version or close it. You will receive a confirmation window for the following action: Please note that the deployment and verification process is not yet complete or has encountered errors. Applying changes may result in errors in the master version of the regulations. The deployment and verification process is the MASTER-Code-review-registry-regulations pipeline in Jenkins. It precedes the process of code compilation and publishing changes to the MASTER-Build-registry-regulations regulations. Currently, the regulations administrator can manually bypass the Code review process by directly applying changes to the master branch of the repository. As a result, the changes will be included in the master branch, and the selected candidate version will be automatically removed from the list of versions. If necessary to withdraw a change request within your own candidate version, for example, due to merge conflicts, follow these steps: Go to the corresponding candidate version in the top left corner of the page by expanding the drop-down menu for regulations version control. Click the Withdraw button. As a result, the changes will be canceled, and the selected candidate version will be automatically removed from the list of versions.","title":"Reviewing metadata and managing settings for the candidate version","component":"platform","version":"1.9.6","name":"overview-new-change-request","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/overview-new-change-request.html","titles":[{"text":"1. General description","hash":"general-description","id":1},{"text":"2. Conflicting changes relative to the master version","hash":"merge-conflict","id":2},{"text":"3. Reviewing the list of changes","hash":"review-changes-candidate","id":3},{"text":"4. Getting updates and updating the status of open change requests","hash":"pull-changes-master","id":4},{"text":"5. Applying changes to the master version","hash":"push-changes-master","id":5},{"text":"6. Withdrawing a change request within the candidate version","hash":"abandon-changes","id":6}]},"178":{"id":178,"text":"Reviewing and configuring the master version of changes Creating merge requests Reviewing metadata and managing settings for the candidate version","title":"Managing regulations versions","component":"platform","version":"1.9.6","name":"version-control-overview","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/version-control-overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"179":{"id":179,"text":"On this page: 1. Overview 2. Obtaining a JWT token to access a registry To access the registry resources, an external system must obtain a JWT access token. This token is used to authorize external systems when interacting with the registries deployed on the Platform. A JWT access token is issued by the Keycloak identity and access management service. To obtain the token, you need to make an API request to the corresponding /token endpoint of the Keycloak API. This guide illustrates obtaining a JWT token from Keycloak using the Postman tool. First, create a request to obtain a registry access token. You can do this using Postman, an API testing and development tool. Download and install the Postman app from https://www.postman.com/downloads/, or use the web version of the tool. Open the app and create a request by clicking Create a request. Set up the request to obtain a JWT token: Set HTTP method to POST. Specify the resource path: Example 1. Resource URL: /token endpoint https:///auth/realms//protocol/openid-connect/token Replace with your server name. Replace with the name of your Keycloak realm. For example: https://platform-keycloak.apps.your-server.mdtu-ddm.projects.epam.com/auth/realms/consent-01-external-system/protocol/openid-connect/token Provide request body parameters. Example 2. Request body { \"grant_type\": \"client_credentials\", \"client_id\": \"test-ext\", \"client_secret\": \"u43exi9l6kc4gcm6ksjbbsg7gu2dyocyjey1\" } Parameter Description grant_type An OpenID Connect (OIDC) grant type. The \"client_credentials\" grant can be used for machine-to-machine authentication. In this grant, a specific user is not authorized, but the credentials are verified, and a generic access_token is returned. client_id An external system identifier (a service name of an external system in Control Plane). client_secret A password generated as a result of granting an external system access to the registry in Control Plane. For details, see Changing the registry access password. Click Send to send your request. In response, the API service returns an object with an encoded JWT token (Base64Url) and additional attributes. The response returns a list of Keycloak roles for which access is granted. A JWT token can only be obtained for one client at a time. Example 3. API service response body { \"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJxdk4walJlNzJJNzBwQl9rdjBWVkZHR0lWSk50OF9mN3AtdzhKRHE2SlZvIn0.eyJleHAiOjE2NTcyOTUzMjUsImlhdCI6MTY1NzI5NTAyNSwianRpIjoiNDY5NDA3MDYtMzQ0MS00ZWMyLWJmNDUtYzhiYWRjZGM3ZDIyIiwiaXNzIjoiaHR0cHM6Ly9wbGF0Zm9ybS1rZXljbG9hay5hcHBzLmNpY2QyLm1kdHUtZGRtLnByb2plY3RzLmVwYW0uY29tL2F1dGgvcmVhbG1zL21kdHUtZGRtLWVkcC1jaWNkLWxvd2NvZGUtZGV2LWRldi1leHRlcm5hbC1zeXN0ZW0iLCJzdWIiOiI0YTYyMmY0Yy1hOGE4LTQ5M2UtOGQ4ZS03MjMyNGJlODEwZGMiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJ0cmVtYml0YS1pbnZva2VyIiwiYWNyIjoiMSIsImFsbG93ZWQtb3JpZ2lucyI6WyIiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbInRyZW1iaXRhLWludm9rZXIiXX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImVkcnBvdSI6IjAiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImNsaWVudEhvc3QiOiI4NS4yMjMuMjA5LjE4IiwiY2xpZW50SWQiOiJ0cmVtYml0YS1pbnZva2VyIiwiZHJmbyI6IjAiLCJmdWxsTmFtZSI6ItCh0LXRgNCy0ZbRgdC90LjQuSDQutC-0YDQuNGB0YLRg9Cy0LDRhyDQotGA0LXQvNCx0ZbRgtC4IiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRyZW1iaXRhLWludm9rZXIiLCJjbGllbnRBZGRyZXNzIjoiODUuMjIzLjIwOS4xOCJ9.uhf6GZFd9fc1IDehIlo9kspsOPxxLSqtsOTAmUt3cneMZFs77AE-Ew7UoirLUfy0kmjfGy0tfcG1gj2nM6EXmAW1_XDCvHB_ygM-NnkS8B_FkgoIdcB5XkBWQ2HrE0YnSN5QnOWMkgi2dtYkubgd3g37__46-2Uxeg6l-OVYjdDEQ_kEa2rrGl9ckYLflZgM_-PKG3XxvXuJjuKuC2GqLGF-ngpWg_S672pwIqqr0li20JjXYdpO-jtEqPMKU6pckBwmkAWsiO6lmz2b9XUe0i2nWECsChA9IHmgds1UgCjxtp0KoToqAwcbNhXgdyh8hOI0WCNig56dSWc3sAoDmw\", \"expires_in\": 300, \"refresh_expires_in\": 0, \"token_type\": \"Bearer\", \"not-before-policy\": 0, \"scope\": \"profile email\" } The token can be used an unlimited number of times during its validity period, which is specified in the expires_in parameter and has a default value of 300 seconds. Token validity period: 300 seconds (by default) Token type: Bearer For convenience, you can decode the access token into the JSON format and check the client and realm for which the token was issued. You can use the https://jwt.io/ tool. The output contains the following object: { \"realm_access\": { \"roles\": [ \"trembita-invoker\" ] } } In our example, access is granted to the trembita-invoker role in the consent-01-external-system realm of a corresponding registry in Keycloak. For details on JWT tokens, see arch:architecture/platform/operational/user-management/user-profile.adoc. You can now use the access_token you received to authorize requests to the registry resources. Set the token type to Bearer in the Authorization header. Figure 1. A Bearer token set as the {{access_token}} variable There are several types of resources that can be accessed in a target registry: Business process resources: endpoints for interacting with the business processes. A single endpoint is currently supported for starting a business process: /start-bp. For example: https://external-service-api-/api/gateway/business-process/api/start-bp Where is the name of the registry and the server on which the registry is deployed. A path to the /start-bp resource in the \"consent-02\" registry on the demo server: https://external-service-api-consent-02-main.apps.test-server.mdtu-ddm.projects.epam.com/api/gateway/business-process/api/start-bp Data factory resources: search conditions provisioned by the data model, to which you provide access through the corresponding attributes. For details, see Setting access attributes for registry API views. For example: https://external-service-api-/api/gateway/data-factory/ Where is the name of the registry and the server on which the registry is deployed, and is the endpoint based on the database search condition. A path to the /count-units-in-parallel resource in the \"mon-school\" registry on the \"envone\" server: https://external-service-api-mon-school-main.apps.envone.dev.registry.eua.gov.ua/api/gateway/data-factory/count-units-in-parallel","title":"Calling the registry from an external system: getting a JWT token from Keycloak","component":"platform","version":"1.9.6","name":"get-jwt-token-postman","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/api-publish/get-jwt-token-postman.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Obtaining a JWT token to access a registry","hash":"_obtaining_a_jwt_token_to_access_a_registry","id":2}]},"180":{"id":180,"text":"Configuring the regulations to provide access to data via SOAP and REST APIs Calling the registry from an external system: getting a JWT token from Keycloak","title":"Providing registry API endpoints for integration","component":"platform","version":"1.9.6","name":"index","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/api-publish/index.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"181":{"id":181,"text":"On this page: 1. Setting up authorization to access the registry business processes 2. Configuring the data model 3. Modeling the business process to be called in a target registry If your registry is the data owner, and you wish to establish integration API points, receive requests, and provide data to other registries and systems, configure the following regulations settings: Set up authorization and grant permission to call the business process. Model the business process to be called by another registry. Create a data model and provide read access to the registry data via the API representation). For REST interactions, you must also grant access to the registry in the Control Plane admin console. For details, see Configuring registry access. Registry administrator must set up authorization at the regulations level. Configure the following files: bp-auth/external-system.yml defines access to business processes bp-trembita/external-system.yml configures the exchange of parameters for starting the business processes Set up access to the business processes in the target registry, which will provide a data exchange API. To do this, configure the bp-auth/external-system.yml file in the regulations: Example 1. A configuration that grants access to the business processes in the target registry authorization: realm: 'external-system' process_definitions: - process_definition_id: 'my-process-id' process_name: 'Your business process name' process_description: 'Your business process description' roles: - 'trembita-invoker' In this example, access to the my-process-id business process is granted for the trembita-invoker role from the -external-system Keycloak realm. The process_name and process_description parameters are optional and do not affect authorization. The trembita-invoker client with the same role is automatically created by the Keycloak operator in the -external-system realm when the registry is deployed. All external systems that require access to the registry on the Platform must use this client’s credentials. Configure the bp-trembita/external-system.yml file in the regulations: Configure the start variables for the business process. To do this, specify which parameters the business process will expect in the start_vars section. If start_vars are not defined, the business process will not work. Configure the return variables. To do this, specify which parameters the business process will return in the return_vars section. Example 2. Configuring an API contract for a business process trembita: process_definitions: - process_definition_id: 'my-process-id' start_vars: - eduname return_vars: - id - name In this example, the my-process-id business process in a target registry requires start variables to run. Without them, the process cannot be initiated. In particular, the process expects the eduname parameter to contain a student’s name. For an example of accepting variables in a target process, jump to Modeling the business process to be called in a target registry. Configure the return variables. In this example, the business process will return the id and name parameters. They will be written to the result variable in the Output Parameters of the same service task with the delegate. Create a registry data model. Add new search conditions to provide read access to database data through the registry API representation. For details on configuring the data model, see Setting access attributes for registry API views. Model a business process that other registries will call to obtain data. This can be any process within your registry’s business logic. To start a business process in your registry, the system needs to accept the incoming start variables it expects. This is done using a scripted task, as shown in the following example. Figure 1. Accepting the process start variables in a target registry To see an example of the .bpmn model of a process with a user .json form, refer to the consent-data demo registry’s regulations here: https://admin-tools-consent-data.apps.envone.dev.registry.eua.gov.ua/gerrit The process is called BPMN-create-school-auto-sign.bpmn. You can find the names of the forms inside the corresponding user tasks of the business process in the Form key field.","title":"Configuring the regulations to provide access to data via SOAP and REST APIs","component":"platform","version":"1.9.6","name":"rest-soap-api-expose","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/api-publish/rest-soap-api-expose.html","titles":[{"text":"1. Setting up authorization to access the registry business processes","hash":"authorization-settings","id":1},{"text":"2. Configuring the data model","hash":"create-data-model","id":2},{"text":"3. Modeling the business process to be called in a target registry","hash":"target-registry-bp-modeling","id":3}]},"182":{"id":182,"text":"On this page: 1. Overview 2. Configuring an SMTP connection to an external mail server 3. Configuring an SMTP connection to an internal mail server You can configure the registry communication channels using the Control Plane admin console when creating or editing a registry. The Platform supports one of the following mail server options, depending on the registry requirements: Internal mail server (platform-mail-server) is a mail server distributed as part of the Platform. This service is available to all registries within a single instance of the Platform. External mail server (external-mail-server) is a mail server outside the Platform (such as Gmail). Mail server settings are stored in the registry’s values.yaml configuration file as shown in the following examples: External server: global: notifications: email: type: external host: smtp.gmail.com port: 587 address: registry@gmail.com password: 123 Internal server: global: notifications: email: type: internal To connect your registry to an external mail server, perform the following steps. Sign in to the Control Plane admin console. Open the Registries section. Find your registry and click its name to open its settings. Click the Edit button in the upper-right corner. Select the Edit SMTP settings checkbox. From the Mail server dropdown list, select External mail server. Specify the following mail server parameters: Host Port Email address Password Click Confirm to save your settings. Moving forward, all messages will be sent from the external email address you specified. To configure your registry to use an internal mail server, perform the following steps. Sign in to the Control Plane admin console. Відкрийте меню Реєстри. Open the Registries section. Find your registry and click its name to open its settings. Click the Edit button in the upper-right corner. Select the Edit SMTP settings checkbox. From the Mail server dropdown list, select Platform mail server. Click Confirm to save your settings. The Registry email address field is not editable and only displays the template for the email address. Moving forward, all messages will be sent from the Platform’s email address. @ Where: is the name of your registry. is the cluster domain name. An internal SMTP server is configured by the Platform administrator. For details, see Configuring internal SMTP server","title":"Configuring the mail server","component":"platform","version":"1.9.6","name":"config-smtp-server","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/config-smtp-server.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Configuring an SMTP connection to an external mail server","hash":"_configuring_an_smtp_connection_to_an_external_mail_server","id":2},{"text":"3. Configuring an SMTP connection to an internal mail server","hash":"_configuring_an_smtp_connection_to_an_internal_mail_server","id":3}]},"183":{"id":183,"text":"On this page: 1. Prerequisites 2. Configuring the message template 3. Modeling business processes 3.1. Notifying a single user 3.2. Notifying multiple users 3.3. Related delegates for getting usernames 4. Notifications logging The Platform supports sending email messages via the SMTP protocol using one of the following mail server options, depending on the registry requirements: Platform mail server External mail server You must configure the communication channels before registry users can receive notifications. For details on configuring the mail server, see: Configuring the mail server Configuring internal SMTP server The system can only send messages to registered users. To enable sending email notifications to portal users, you must create a message template to use when modeling a business process. The message template must be created in HTML using the Apache FreeMarker template language. The recommended practice is using the .ftlh file extension for HTML templates and .ftl for regular text documents. To learn more about Apache FreeMarker, refer to https://freemarker.apache.org/ To support sending notifications to users, the regulations structure contains an additional directory called /notifications. A typical email message template has the following structure: Where: is the directory containing the template resources. The directory name must be unique for the corresponding communication channel. /css/style.css is a unified CSS file that contains the styles used in the HTML document. For example: /image/*.* contains image files used in the HTML document. For example: /notification.ftlh is the HTML template used to generate the message body. An HTML template used to generate the message body RegistryPlatform ${processName} process completed successfully Contacts or service information /notification.yml is the configuration file with email metadata. Example 1. A configuration file with email metadata title: \"Process completed successfully\" There are two main scenarios for sending notifications when modeling business processes: Notifying a single user Notifying multiple users When modeling a business process, you can use a standard send task extension called Send User Notification. The Send User Notification extension is a delegate for sending email notifications to citizens using a specified HTML template. Before configuring templates in Camunda Modeler, make sure the resources > element-templates application folder contains the sendUserNotification.json file. To set up the template, perform these steps: Open the business process modeling interface. Create a Send Task. In the settings panel on the right, click the Open Catalog button and select the Send User Notification delegate template. Click Apply to confirm your action. Set up the following options: Name: Specify the task name. For example, Sending an email notification. Recipient: Specify the notification recipient’s unique identifier (). For example, ${initiator().userName}. Subject: Specify the text subject of the notifications. For example, Notification is generated successfully. Notification message template: Specify the unique name of a template to use for the body of the message. The template name must match this template’s directory name in the regulations (for example, business-process-notification-template). Notification template model: Specify the variable to use for template processing — ${templateModel}. To notify multiple users, you need to model a business process similarly to notifying a single user, but this time using the Multi-Instance function. This function allows sending messages to all users in an array simultaneously. In the Collection field, specify the array of users obtained via Keycloak service attributes. In our example, the array is stored in the ${usersByAttributes} variable, so we enter it here. In our example, we use the ${usersByAttributes} variable, which already contains an array of usernames from the business process. Alternatively, you can provide usernames as comma-separated values. For example: username1,username2,username3. In the Element Variable field, specify the local instance variable under the given name. The message-sending process does not block the main flow of the business process and runs asynchronously. For details on the Multi-Instance function, refer to Camunda documentation: Multi-Instance. You can obtain a list of citizens to send notifications to using the following standard extension for service tasks: The getCitizenUsersByAttributesFromKeycloak delegate is used to find citizen portal users in Keycloak by their attributes. For details on setting up the delegate, see Finding citizens in Keycloak by their attributes. Successful or failed attempts to send a notification are logged in the audit log and saved to the audit database. Example 2. Email notification events audit Logging a successful notification event in the audit DB { \"result\": \"SUCCESS\", \"notification\": { \"channel\": \"email\", \"subject\": \"A notification from the Bureau of Credit Histories\", \"message\": \"\\n \\n \\n \\n \\n body {\\n margin: 0;\\n padding: 0;\\n line-height: 1;\\n font-family: 'e-Ukraine', Verdana, sans-serif;\\n}\\n\\n.header {\\n padding: 0 48px;\\n margin: 32px 0;\\n color: #000;\\n font-size: 16px;\\n}\\n\\n.logo-wrap {\\n float: left;\\n margin-right: 16px;\\n}\\n\\n.logo {\\n width: 48px;\\n height: 48px;\\n}\\n\\n.platform-name {\\n font-size: 16px;\\n line-height: 24px;\\n}\\n\\n.main {\\n padding: 0 48px;\\n margin: 48px 0;\\n color: #000;\\n font-size: 16px;\\n line-height: 24px;\\n}\\n\\n.main-title {\\n margin-bottom: 24px;\\n font-size: 24px;\\n line-height: 28px;\\n}\\n\\n.footer {\\n padding: 16px 48px 80px;\\n background: #000;\\n color: #fff;\\n font-size: 12px;\\n line-height: 16px;\\n}\\n\\n \\n \\n \\n Information about a new credit agreement was added to the credit history: effective date - Wed Jul 26 12:54:51 UTC 1978, creditor - auto-user-notification-f278366. In case of fraud or creditor's mistake, you can file a dispute in the credit history. \\n \\n \\n Contacts or service information \\n \\n \\n\", \"recipient\": { \"id\": \"auto-user-notification-f\", \"email\": \"auto-user-notification-f@inbucket.inbucket.svc.cluster.local\" } }, \"delivery\": { \"channel\": \"email\", \"status\": \"SUCCESS\", \"failureReason\": null }, \"action\": \"SEND_USER_NOTIFICATION\", \"step\": \"AFTER\" } Where: The result parameter indicates the result of sending the message. The channel parameter specifies which communication channel was used. The subject parameter indicates the subject of the message. The message parameter is the message body with business data created from the template. The recipient attribute provides information about the recipient, namely their ID and email. The delivery attribute reflects the delivery status for the corresponding communication channel. Logging a failed notification event in the audit DB { \"result\": \"FAILURE\", \"notification\": { \"context\": { \"system\": \"Low-code Platform\", \"application\": \"ddm-bpm\", \"businessProcess\": \"bpmn-send-inbox-with-form\", \"businessProcessDefinitionId\": \"bpmn-send-inbox-with-form:2:1f54abab-65b2-11ed-8fda-0a580a822841\", \"businessProcessInstanceId\": \"b84ceb8f-65b8-11ed-8fda-0a580a822841\", \"businessActivity\": \"Activity_0l2g5sf\", \"businessActivityInstanceId\": \"Activity_0l2g5sf:b84e9948-65b8-11ed-8fda-0a580a822841\" }, \"notification\": { \"title\": null, \"templateName\": \"inbox-template-ubki111\", \"ignoreChannelPreferences\": false }, \"recipients\": [ { \"id\": \"auto-user-citizen\", \"channels\": [ { \"channel\": \"diia\", \"email\": null, \"rnokpp\": \"1010101014\" }, { \"channel\": \"email\", \"email\": \"auto1-user-citizen@inbucket.inbucket.svc.cluster.local\", \"rnokpp\": null } ], \"parameters\": { \"dateCredOpen\": \"inbox-template-ubki\", \"creditor\": \"inbox-template-ubki\" } } ] }, \"delivery\": { \"channel\": \"email\", \"status\": \"FAILURE\", \"failureReason\": \"Notification template inbox-template-ubki111 not found\" }, \"action\": \"SEND_USER_NOTIFICATION\", \"step\": \"AFTER\" } Where: The result parameter indicates the result of sending the message. The context parameter provides details about the business process for which the message is modeled and its components. The templateName parameter indicates which template was used to send the message. The recipients array shows information about message recipients and communication channels. The delivery attribute reflects the delivery status for the corresponding communication channel and the failure reason.","title":"Notifying users via email","component":"platform","version":"1.9.6","name":"e-mail-notification","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/e-mail-notification.html","titles":[{"text":"1. Prerequisites","hash":"_prerequisites","id":1},{"text":"2. Configuring the message template","hash":"_configuring_the_message_template","id":2},{"text":"3. Modeling business processes","hash":"_modeling_business_processes","id":3},{"text":"3.1. Notifying a single user","hash":"send-user-notification","id":4},{"text":"3.2. Notifying multiple users","hash":"send-many-user-notifications","id":5},{"text":"3.3. Related delegates for getting usernames","hash":"related-delegates","id":6},{"text":"4. Notifications logging","hash":"audit-log","id":7}]},"184":{"id":184,"text":"On this page: 1. Overview 2. Regulations modeling To enable email notifications, the user must first confirm their consent to use the email communication channel. This way, the user verifies the exchange of data (email messages). The confirmation of a communication channel is based on a data verification mechanism that uses a pseudorandom 6-digit OTP[1] code that the Platform generates and sends to the email address specified by the user. An email message with an OTP code is also a notification that requires a configured template in the registry regulations structure. The base registry-regulations deployment repository includes the channel-confirmation directory containing an email message template with a placeholder for an OTP code that the Platform generates and sends to the email address specified by the user. The message template must be created in HTML using the Apache FreeMarker template language. The recommended practice is using the .ftlh file extension for HTML templates and .ftl for regular text documents. To learn more about Apache FreeMarker, refer to https://freemarker.apache.org/ A typical email message template has the following structure: Where: channel-confirmation is the directory containing the template resources. channel-confirmation/css/style.css is a unified CSS file that contains the styles used in the HTML document. For example: channel-confirmation/image/*.* contains image files used in the HTML document. For example: channel-confirmation/notification.ftlh is the HTML template used to generate the message body. The template contains a placeholder for an OTP code. An HTML template used to generate the message body with an OTP code placeholder RegistryPlatform Verification code: ${verificationCode} Contacts or service information channel-confirmation/notification.yml is the configuration file with OTP code email metadata. Example 1. A configuration file with OTP code email metadata title: \"Email confirmation\" The generated 6-digit pseudorandom code (for example, 345870) will be automatically emailed to the user for verification and confirmation when they enter or change their email address in their citizen portal profile. For details, see Confirming email address with OTP code in user profile. After updating the registry, the regulations administrator must manually add the channel-confirmation folder with the corresponding confirmation template files to the notifications/email directory, as shown in the examples above. 1. A one-time password (OTP) is a password that is valid for only one authentication session. Its validity may also be limited to a specific time interval. The advantage of such a password over a static one is that it cannot be reused.","title":"Setting up a message template with an email confirmation code","component":"platform","version":"1.9.6","name":"email-channel-confirmation","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/email-channel-confirmation.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Regulations modeling","hash":"registry-regulations-modeling","id":2}]},"185":{"id":185,"text":"On this page: 1. Section overview The Platform supports sending email messages via the SMTP protocol using an internal (Platform) or external mail server. Figure 1. Sample email with a verification code Setting up a message template with an email confirmation code Notifying users via email Configuring the mail server","title":"Sending email notifications","component":"platform","version":"1.9.6","name":"email-overview","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/email-overview.html","titles":[{"text":"1. Section overview","hash":"_section_overview","id":1}]},"186":{"id":186,"text":"On this page: 1. Overview 2. Regulations settings 3. Modeling in-app notifications 3.1. Notifying a single user 3.2. Notifying multiple users 3.3. Related delegates for getting usernames 4. Notifications logging To be able to send notifications to the user’s inbox in the citizen portal, the regulations administrator must first define the template for the inbox communication channel and add it to the structure of the registry regulations. The regulation deployment repository registry-regulations includes the base directory called inbox/business-process-notification-template. This directory contains template files for in-app messages that users can receive through the inbox communication channel in their account. The registry administrator can design and add any number of templates to the regulations structure, depending on business needs. The business-process-notification-template is the default template for this communication channel. You can have multiple templates. The names of each template within the same communication channel must be unique. To support sending notifications to users, the regulations structure contains an additional directory called /notifications. Here is the path to the template: registry-regulations/notifications/inbox/ A typical template for in-app notifications has the following structure: Where: is the directory containing the template resources. The directory name must be unique for the corresponding communication channel. /notification.ftl is the text-based FreeMarker template for generating the message body. Example 1. A FreeMarker template with placeholders inside the message body Information about a new credit agreement was added to the credit history: effective date - ${dateCredOpen}, creditor - ${creditor}. In case of fraud or creditor's mistake, you can file a dispute in the credit history. /notification.yml is the configuration file with template metadata that contains the message title. Example 2. A configuration file with the message title title: \"A notification from the Bureau of Credit Histories\" The administrator can edit templates and create new ones. When a new template is added to the regulations structure, the deployment pipeline calls an additional step to publish the new template to the repository. Each published template must have a unique name that can be used later when modeling business processes. There are two main scenarios for sending notifications when modeling business processes: Notifying a single user Notifying multiple users After deploying the regulations and publishing the notification template to the repository, you can use the unique template name in the Notification message template field when modeling the push notification step in a business process. When modeling a business process, you can use a standard send task extension called Send User Notification. The Send User Notification extension is a delegate for sending messages to citizens through a configured communication channel using a specified template. Before configuring templates in Camunda Modeler, make sure the resources > element-templates application folder contains the sendUserNotification.json file. To model sending notifications to a user, perform these steps: Open the business process modeling interface. Create a Send Task. In the settings panel on the right, click the Open Catalog button and select the Send User Notification delegate template. Click Apply to confirm your action. Set up the following options: Name: Specify the task name. For example, Sending an in-app notification. Recipient: Specify the notification recipient’s unique identifier (). For example, ${initiator().userName}. In this case, the recipient is the user who initiated the process, specified as ${initiator().userName}. Alternatively, you set the recipient to the user who completed the task by specifying ${completer('').userName}, where is the identifier of the user task. Subject: Specify the text subject of the notifications. For example, Notification is generated successfully. Notification message template: Specify the unique name of a template to use for the body of the message. The template name must match this template’s directory name in the regulations (for example, business-process-notification-template). Notification template model: Specify the variable to use for template processing — ${templateModel}. A user can read the notifications in the citizen portal in the Notifications section. For details, see Sending inbox messages to users. To notify multiple users, you need to model a business process similarly to notifying a single user, but this time using the Multi-Instance function. This function allows sending messages to all users in an array simultaneously. In the Collection field, specify the array of users obtained via Keycloak service attributes. In our example, the array is stored in the ${usersByAttributes} variable, so we enter it here. In our example, we use the ${usersByAttributes} variable, which already contains an array of usernames from the business process. Alternatively, you can provide usernames as comma-separated values. For example: username1,username2,username3. In the Element Variable field, specify the local instance variable under the given name. The message-sending process does not block the main flow of the business process and runs asynchronously. For details on the Multi-Instance function, refer to Camunda documentation: Multi-Instance. You can obtain a list of citizens to send notifications to using the following standard extension for service tasks: The getCitizenUsersByAttributesFromKeycloak delegate is used to find citizen portal users in Keycloak by their attributes. For details on setting up the delegate, see Finding citizens in Keycloak by their attributes. Successful or failed attempts to send a notification are logged in the audit log and saved to the audit database. You can manually view notification events in the audit database logs. To learn how to connect to this database, see admin:connection-database-openshift.adoc. Example 3. Inbox notification events audit Logging a successful notification event in the audit DB { \"result\": \"SUCCESS\", \"notification\": { \"channel\": \"inbox\", \"subject\": \"A notification from the Bureau of Credit Histories\", \"message\": \"Information about a new credit agreement was added to the credit history:\\neffective date - Wed Jul 26 12:54:51 UTC 1978, creditor - auto-user-notification-f278366.\\nIn case of fraud or creditor's mistake, you can file a dispute in the credit history.\", \"recipient\": { \"id\": \"auto-user-notification-f\", \"email\": null } }, \"delivery\": { \"channel\": \"inbox\", \"status\": \"SUCCESS\", \"failureReason\": null }, \"action\": \"SEND_USER_NOTIFICATION\", \"step\": \"AFTER\" } Where: The result parameter indicates the result of sending the message. The channel parameter specifies which communication channel was used. The subject parameter indicates the subject of the message. The message parameter is the message body with business data created from the template. The recipient attribute provides information about the recipient, namely their ID and email. The delivery attribute reflects the delivery status for the corresponding communication channel. Logging a failed notification event in the audit DB { \"result\": \"FAILURE\", \"notification\": { \"context\": { \"system\": \"Low-code Platform\", \"application\": \"ddm-bpm\", \"businessProcess\": \"bpmn-send-inbox-with-form\", \"businessProcessDefinitionId\": \"bpmn-send-inbox-with-form:2:1f54abab-65b2-11ed-8fda-0a580a822841\", \"businessProcessInstanceId\": \"b84ceb8f-65b8-11ed-8fda-0a580a822841\", \"businessActivity\": \"Activity_0l2g5sf\", \"businessActivityInstanceId\": \"Activity_0l2g5sf:b84e9948-65b8-11ed-8fda-0a580a822841\" }, \"notification\": { \"title\": null, \"templateName\": \"inbox-template-ubki111\", \"ignoreChannelPreferences\": false }, \"recipients\": [ { \"id\": \"auto-user-citizen\", \"channels\": [ { \"channel\": \"diia\", \"email\": null, \"rnokpp\": \"1010101014\" }, { \"channel\": \"email\", \"email\": \"auto1-user-citizen@inbucket.inbucket.svc.cluster.local\", \"rnokpp\": null } ], \"parameters\": { \"dateCredOpen\": \"inbox-template-ubki\", \"creditor\": \"inbox-template-ubki\" } } ] }, \"delivery\": { \"channel\": \"inbox\", \"status\": \"FAILURE\", \"failureReason\": \"Notification template inbox-template-ubki111 not found\" }, \"action\": \"SEND_USER_NOTIFICATION\", \"step\": \"AFTER\" } Where: The result parameter indicates the result of sending the message. The context parameter provides details about the business process for which the message is modeled and its components. The templateName parameter indicates which template was used to send the message. The recipients array shows information about the recipients and communication channels. The delivery attribute reflects the delivery status for the corresponding communication channel and the failure reason.","title":"Configuring in-app notifications","component":"platform","version":"1.9.6","name":"inbox-bp-notification","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/inbox/inbox-bp-notification.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Regulations settings","hash":"_regulations_settings","id":2},{"text":"3. Modeling in-app notifications","hash":"_modeling_in_app_notifications","id":3},{"text":"3.1. Notifying a single user","hash":"send-user-notification","id":4},{"text":"3.2. Notifying multiple users","hash":"send-many-user-notifications","id":5},{"text":"3.3. Related delegates for getting usernames","hash":"related-delegates","id":6},{"text":"4. Notifications logging","hash":"_notifications_logging","id":7}]},"187":{"id":187,"text":"On this page: 1. Section overview The Platform allows sending notifications using a citizen portal inbox. Figure 1. In-app notifications in the citizen portal Configuring in-app notifications","title":"Sending in-app notifications using a citizen portal inbox","component":"platform","version":"1.9.6","name":"inbox-overview","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/inbox/inbox-overview.html","titles":[{"text":"1. Section overview","hash":"_section_overview","id":1}]},"188":{"id":188,"text":"The functionality for custom DNS name configuration for Platform for state registries routes in OpenShift 4.x cluster, and provision of their safe usage. Domain Name System, DNS - a hierarchical system for transforming the name of any network device into an IP-address. External access to cluster resources is performed via routes. Route — an abstraction in OpenShift configuration, which allows for the deployment of web-applications at generally available URL. The following diagram displays platform components involved in requirements realization, and their interaction. This section lists system components that are involved, or need to be changed/created within the realization of functional requirements according to the technical solution design. Table 1 Component Service name Purpose Platform administration UI control-plane-console Applying changes to the configuration of available communication channels for the registry target environment Storing configurations for the platform and registries control-plane-gerrit Platform component for storing of configurations for the platform and registries Platform and registries deployment edp-library-stages-fork Platform deployment pipeline Officer portal officer-portal Processing tasks by an officer Citizen portal citizen-portal Receiving services by a citizen To allow for the use of custom DNS name for the public citizen and officer Portals, the Platform for state registries provides the means to configure DNS in the administration UI. Must have a registered domain name. For example, registry.example.com Must have an SSL-certificate for the registry.example.com domain/subdomain, or all the first level *.example.com subdomains. Using Platform for state registries administration UI, an administrator can enter DNS name and upload PEM (Privacy Encoded Mail) certificate on the registry editing page. . The administration UI divides the received certificate into CA (Certificate Authority), certificate, and key. It stores them in the central HashiCorp Vault, using KV engine, and adds the received DNS names to values.yaml in the following format: + global: customDNS: officerPortal: \"officer.example.com\" citizenPortal: \"citizen.example.com\" The registry pipeline receives certificate data from HashiCorp, and creates additional custom resources of the Ingress type for Kong Gateway configuration, and a custom route to istio-ingressgateway with the added certificate. Example: kind: Route apiVersion: route.openshift.io/v1 metadata: name: custom-host-registry-kong-proxy namespace: registry spec: host: registry.example.com to: kind: Service name: istio-ingressgateway-main weight: 100 port: targetPort: http2 tls: termination: edge certificate: | -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- key: |- -----BEGIN PRIVATE KEY----- -----END PRIVATE KEY----- caCertificate: |- -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- insecureEdgeTerminationPolicy: Redirect wildcardPolicy: None Perform external configuration outside of the OpenShift cluster and registry. After creating a route with a custom DNS name, you need to: Create a CNAME record with your DNS provider. It must direct to the Load Balancer, attached to the OpenShift router (HAProxy). OpenShift router domain is different for each cluster. Canonical name record (CNAME record) is a resource type in the DNS. It matches one domain name (ALIAS) with the other (CNAME). Practically, a CNAME record may look like this: www.example.net. CNAME www.example.com. CNAME records must only be set on another domain name, not the IP-address. You can see the currently set CNAME records via dns.google service. CNAME can’t be set for apex-domains (example.com). A subdomain must be defined (www.example.com). Most of the DNS updates take effect within one hour, and global updates may take up to 48 hours to complete. Write a request for the addition of a new address to the eu.iit.com.ua test widget into the [EPAM] IIT Digital Signature Library Questions Telegram channel.","title":"Configuring custom DNS name for registry portals in OpenShift 4.x","component":"platform","version":"1.9.6","name":"custom-dns","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/custom-dns.html","titles":[{"text":"Solution design","hash":"_solution_design","id":1},{"text":"Components and their purpose within solution design","hash":"_components_and_their_purpose_within_solution_design","id":2},{"text":"Functional capacity","hash":"_functional_capacity","id":3},{"text":"Prerequisites","hash":"_prerequisites","id":4},{"text":"Configuration process","hash":"_configuration_process","id":5},{"text":"External configuration outside of the OpenShift cluster","hash":"_external_configuration_outside_of_the_openshift_cluster","id":6}]},"189":{"id":189,"text":"This document provides information on the general points and technical design during Platform deployment. Components involved in the processes of registry development must not be deployed together with production version of the Platform for state registries. Public routes of components involved in the processes of registry development must not be created together with production version of the Platform for state registries. Registry template must include a variable to set the current Platform deployment mode. Two deployment modes are supported: production and development. The following table lists the components and their routes, which are involved, or need to be changed/created within the realization of functional requirements according to the technical solution design. Table 1. Components and endpoints used by regulations developers Component for regulations development Production use Public endpoint admin-portal Not required None registry-regulation-management Not required None kafka-ui Not required None redash-admin Not required None redash-admin-adhocworker Not required None redash-admin-scheduledworker Not required None redash-admin-exporter Not required None form-management-modeler (legacy) Not required None pgAdmin Not required None registry-vault Required None external-integration-mocks Not required None registry-rest-api Required None To configure the corresponding modes for the templates, set the mode the following way: global: deploymentMode: development In case you need to deploy a registry without a defined Portal (Citizen Portal, for example), add the following parameter: global: excludePortals: ['citizen'] By default, excludePortals variable is absent, which means the deployment of all Portals. Excluding Citizen Portal from deployment process means the following services must also not be deployed: citizen-portal ddm-notification-service user-service-api user-service-persistence","title":"Platform deployment in production without registry development tools","component":"platform","version":"1.9.6","name":"dev-prod-deployment-mode","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/dev-prod-deployment-mode.html","titles":[{"text":"General points","hash":"_general_points","id":1},{"text":"High level technical design","hash":"_high_level_technical_design","id":2}]},"190":{"id":190,"text":"On this page: General provisions High-level technical design: This document contains information about general provisions for adding administrators to the registry and platform. All changes to registry administrators and platform administrators must be made in the values.yaml of the respective repositories using the GitOps approach. The Jenkins stage should create a single KeycloakRealUser resource for the registry or platform administrator and manage it. When updating users, the pipeline should update the KeycloakRealmUser resource with the corresponding changes in values.yaml. This diagram depicts the components involved in implementing the platform requirements and their interactions.","title":"Setting up registry and Platform administrators","component":"platform","version":"1.9.6","name":"gitops-administrators","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/gitops-administrators.html","titles":[{"text":"General provisions","hash":"_general_provisions","id":1},{"text":"High-level technical design:","hash":"_high_level_technical_design","id":2}]},"191":{"id":191,"text":"On this page: 1. Overview 2. Subsystem functions 3. Technical design of the subsystem 4. Registry configuration structure 5. Subsystem components 6. The process stack 7. Subsystem quality atttributes 7.1. Portability 7.2. Observability 7.3. Maintainability The subsystem for the Platform and registries deployment and configuring is a set of various tools and processes allowing efficient and continuous functioning of the Platform and Registries in accordance with the needs of the Platform users. The subsystem provides such functions as deployment, configuring, updating, component storage and version control of the Platform and Registries components and their configurations. The subsystem is implemented on the basis of GitOps practices, which means the state of the Platform and registries is stored in the repository of the Git version control system (Gerrit). Other components of the subsystem, such as operators and CI/CD tools (Jenkins), monitor the state of the Platform and registries and make it consistent with the one stored in the repository. Deployment, configuring and updating of the Platform components and registries. Storage of the Platform and registries components. Versioning of the Platform and registries configuration. Figure 1. Diagram of subsystem components and their interactions Figure 2. Registry configuration components Component name Namespace Deployment Origin Repository Function Configuration changes control and storage service control-plane gerrit 3rd-party github:/epam/edp-ddm-control-plane-gerrit Software tool allowing version management for components and configurations. It is closely integrated with the Git distributed version control system. Using this tool, Platform administrators are abile to view all code and configuration modifications using a web browser, and approve or reject those changes. Configuration deployment service control-plane jenkins 3rd-party github:/epam/edp-ddm-control-plane-jenkins Software system that provides automation throughout the life cycle of the Platform and Registries. It performs the actual deployment of the Registry, configuring, updating and many other automated tasks in the Platform. Storage of the Platform artefacts control-plane-nexus nexus 3rd-party github:/epam/edp-ddm-control-plane-nexus Central repository of artifacts, components and their dependencies that make up every individual subsystem and the Platform as a whole. Storage of platform artifacts. Jenkins operator control-plane jenkins-operator epam-origin github:/epam/edp-jenkins-operator Auxiliary software with the functions of deployment, configuring and recovery of Jenkins as a subsystem component. Gerrit operator control-plane gerrit-operator epam-origin github:/epam/edp-gerrit-operator Auxiliary software with the functions of deployment, configuring and recovery of Gerrit as a subsystem component. Codebase operator control-plane codebase-operator epam-origin github:/epam/edp-codebase-operator Codebase operator is an auxiliary software with the function of registering a new registry as a platform component, and performing initial configuration. Nexus operator control-plane-nexus nexus-operator epam-origin github:/epam/edp-nexus-operator Auxiliary software with the functions of deployment, configuring and recovery of Nexus Repository Manager as a subsystem component. In the course of the subsystem designing and development, the following technologies were used: Gerrit Jenkins Nexus EDP Codebase Operator EDP Gerrit Operator EDP Jenkins Operator EDP Nexus Operator Containers with subsystem components can be deployed or transferred to different cloud environments, to an own local infrastructure, or between other instances of the Platform for state registries. The management subsystem of the Platform for state registries supports logging of incoming requests, event logging and collection of performance metrics for further analysis through the web interfaces of the corresponding Platform subsystems. You can find out more about the design of the subsystems in the relevant sections: architecture/platform/operational/logging/overview.adoc architecture/platform/operational/monitoring/overview.adoc The subsystem is developed using the Gitops approach, which provides a description as a code of the Platform and registries configuration, that simplifies maintenance and deployment. It also allows you to automate the deployment process, minimizing the risk of human error. It also allows tracking of changes and ensures stability during deployment, and makes it easy for technical administrators to update the Platform and registries, roll back changes as required, and maintain a history of all changes made.","title":"Subsystem for deploying and configuring the Platform and registries","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/overview.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Subsystem functions","hash":"_subsystem_functions","id":2},{"text":"3. Technical design of the subsystem","hash":"_technical_design_of_the_subsystem","id":3},{"text":"4. Registry configuration structure","hash":"_registry_configuration_structure","id":4},{"text":"5. Subsystem components","hash":"_subsystem_components","id":5},{"text":"6. The process stack","hash":"_the_process_stack","id":6},{"text":"7. Subsystem quality atttributes","hash":"_subsystem_quality_atttributes","id":7},{"text":"7.1. Portability","hash":"_portability","id":8},{"text":"7.2. Observability","hash":"_observability","id":9},{"text":"7.3. Maintainability","hash":"_maintainability","id":10}]},"192":{"id":192,"text":"On this page: General provisions Top-level technical design This document contains information regarding general provisions and technical design related to updating the platform and registry keys and the configuration of the digital signature service. The administrator can edit the registry or platform keys of the digital signature using the Administrative platform management interface. The platform management web interface saves the changes made by the administrator to the HashiCorp Vault service of the secret management and encryption subsystem, or to the Gerrit service of the Platform and registries deployment and configuration subsystem. The platform management web interface shows the path to values and files in corresponding values.yaml. Pipeline fetches required data from HashiCorp Vault or Gerrit and generates required secrets in OpenShift. The following diagram shows the platform components engaged in the implementation of the requirements of the platform components and interaction between them. The table below shows the engaged components or those to be changed/created under implementation of the functional requirements in accordance with the technical design of the solution. Table 1 Component Official name Function Platform administration interface control-plane-console Setting available communication channels for the target registry environment Saving platform configuration and registries control-plane-gerrit The platform component for storing registry and platform configurations Platform and registries deployment edp-library-stages-fork Platform and registries deployment pipeline Platform and registries deployment edp-library-pipelines-fork Stages for platform and registries deployment Content of values.yaml when using a file key: digital-signature: data: CACertificates: CAs: Key-6-dat: allowed-keys-yml: osplm.ini: \"\" env: sign.key.device-type: file sign.key.file.issuer: sign.key.file.password: sign.key.hardware.device: \"\" sign.key.hardware.password: \"\" sign.key.hardware.type: \"\" Content of values.yaml when using a hardware key: digital-signature: data: CACertificates: CAs: Key-6-dat: \"\" allowed-keys-yml: osplm.ini: env: sign.key.device-type: hardware sign.key.file.issuer: \"\" sign.key.file.password: \"\" sign.key.hardware.device: sign.key.hardware.password: sign.key.hardware.type: The name of the secret in the vault must concatenate with the current date of secrets updating in the short ISO8601 format (without colons and dashes) and get updated in values.yaml of the registry and the platform. The path in the Gerrit repositories: cluster-mgmt.git: config/dso/ registry-template.git: config/dso/","title":"Updating platform and registry keys and digital signature service configuration","component":"platform","version":"1.9.6","name":"registry-platform-keys","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/registry-platform-keys.html","titles":[{"text":"General provisions","hash":"_general_provisions","id":1},{"text":"Top-level technical design","hash":"_top_level_technical_design","id":2}]},"193":{"id":193,"text":"The functionality for secure route publishing in OpenShift 4.x cluster, and resource access control mechanism. External access to the resources is performed via routes. Route — an abstraction in OpenShift configuration, which allows for the deployment of web-applications at generally available URL. The following diagram displays the Platform components involved in requirements realization, and interaction between them. The diagram shows the main traffic flows to the main operational zones (each zone has its onw list of allowed CIDR): The purpose is to provide secure access to the following components of OpenShift 4.x cluster: Platform components; Registry components; Infrastructure components. You can learn more about each category here. The Platform realizes access blocking functionality for every route on HAProxy level, the following way: While creating a registry, an Administrator can set IP-addresses that will have access to the registry components. Platform administration UI adds the listed IP-addresses to values.yaml file into the registry configuration, in the following format: global: whiteListIP: adminRoutes: \"192.168.1.64/26 172.16.0.192/27\" officerPortal: \"192.168.1.240/29\" citizenPortal: \"0.0.0.0/0\" that is further used by components Helm-charts to deploy the registry with annotations in corresponding routes: metadata: annotations: haproxy.router.openshift.io/ip_whitelist: 192.168.1.64/26 172.16.0.192/27 The administrator can set the IP-address lists separately for the Officer Portal, Citizen Portal, and administration components. Each component must include the public IP-address of the cluster. Keycloak must include all the CIDR from other operational zones, or be generally accessible, if the Citizen Portal has no restrictions. The adding interface looks like this: IP-address entering process: registry IP address list display and editing interface looks like this: During the editing of an existing registry, the administrator can add or delete IP-addresses with allowed access to registry components. Platform Administration UI updates the added IP-addresses in the values.yaml, in the registry configuration repository, which is then used by Helm-chart to deploy the registry. The adding interface looks the same as the one in the registry creation process. In the \"Cluster management\" section, the administrator can set CIDR to restrict external access for platform and infrastructure components. The Administration UI creates a merge request for the values.yaml file, and after administrator approval, the cluster-mgmt pipeline performs the update and adding of required annotations. To add/change annotations in other routes that aren’t managed by Helm-charts, the annotate-routes stage of cluster-mgmt pipeline is used. values.yaml example: global: whiteListIP: adminRoutes: \"192.168.1.64/26 172.16.0.192/27\" The CIDR set by the administrator for the registry must also be added for platform components automatically. This section lists system components that are involved, or need to be changed/created within the realization of functional requirements according to the technical solution design. Table 1 Component Service name Function Administration UI control-plane-console Applying changes to the configuration of available communication channels for the registry target environment Storing configurations for the platform and registries control-plane-gerrit Platform component for storing of configurations for the platform and registries Platform and registries deployment edp-library-stages-fork Platform deployment pipeline Table 2 lists the routes that must be restricted: Table 2 Type Component Route Registry bp-admin-portal business-process-administration-portal Registry admin-portal admin-portal-kong-proxy Registry bp-webservice-gateway bp-webservice-gateway Registry nexus docker-registry, nexus Registry gerrit gerrit Registry hashicorp-vault hashicorp-vault Registry jenkins jenkins Registry officer-portal officer-portal-kong-proxy Registry registry-rest-api * registry-rest-api Registry pgadmin * pgadmin Registry registry-rest-api-external registry-rest-api-external Registry redash redash-admin, redash-viewer Platform control-plane-console control-plane-console Platform gerrit gerrit Platform jenkins jenkins Platform nexus nexus Platform ddm-architecture ddm-architecture Platform external mocks * sign-widget-mock, trembita-dracs-registry-mock, trembita-edr-registry-mock Platform hashicorp-vault hashicorp-vault Platform keycloak keycloak-management-console Infrastructure noobaa noobaa-mgmt, s3 Infrastructure openshift-monitoring alertmanager-main, thanos-querier, prometheus-k8s, grafana Infrastructure openshift-logging kibana Infrastructure openshift-console console, downloads Infrastructure openshift-authentication oauth-openshift Infrastructure istio jaeger, kiali Infrastructure grafana grafana-monitoring * only in case of dev mode deployment Consequently, requests from IP-addresses not listed in added annotations will be rejected.","title":"Secure resource publishing mechanism in OpenShift 4.x cluster","component":"platform","version":"1.9.6","name":"secure-endpoints","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/secure-endpoints.html","titles":[{"text":"Solution design","hash":"_solution_design","id":1},{"text":"Functional capacity","hash":"_functional_capacity","id":2},{"text":"Registry components","hash":"_registry_components","id":3},{"text":"Platform components, infrastructure components, and other routes","hash":"_platform_components_infrastructure_components_and_other_routes","id":4},{"text":"Components and their function within the solution design","hash":"_components_and_their_function_within_the_solution_design","id":5}]},"194":{"id":194,"text":"On this page: 1. General description 2. Subsystem functions 3. Subsystem technical design 4. Subsystem components 5. Technology stack 6. Subsystem Quality Attributes 6.1. Portability 6.2. Scalability 6.3. Observability Platform and Registries management subsystem provides simplified management of the central components of the Platform, registries and OpenShift resources. Allows you to create and configure registries, as well as aggregates links to all available in the WEB API Platform and is a single point start of work with the Platform of registers. In general, the subsystem consists of components that provide users and administrators of the Platform with convenient interfaces that are accessible from a browser, simplifying the industrial operation of the Platform of Registers. Deployment of registers Viewing, managing and configuring resources of the Platform and Registries Management of Administrators and users Setting up IP filters for access to the services of the Platform and Registries Management of external integrations Scaling of the Platform and Registries Platform and Registries backup settings Restoration of the Platform and Registries View and manage logging, metrics, and important cluster health information Cluster update Updating the Platform and registers Provision of Platform and registry documentation The subsystem consists of administrative user interfaces for interaction with the Platform, registries and the platform container orchestration at the technical administrator level. Each of the components of the subsystem and the connections with other subsystems are depicted in the following diagram: Figure 1. Diagram of subsystem components Name of component Namespace Deployment Source Repository Prescription Cluster management web interface OpenShift openshift-console console 3rd-party github:/openshift/console The OpenShift Container Platform web console is a user interface accessible from a web browser. Platform administrators can use the OpenShift Web Console to visualize, view, and manage OpenShift content or resources cluster, Platform and registries. Web interface for managing the Platform and registries control-plane control-plane-console origin github:/epam/edp-ddm-control-plane-console A single web interface for managing the Registry Platform and registries. Allows you to add administrators, configure accesses, DNS, update registries, etc. Admin console operator control-plane admin-console-operator epam-origin github:/epam/edp-admin-console-operator Utility software that performs the functions of deploying, configuring and restoring the admin console as subsystem component. OpenShift-console operator openshift-console-operator console-operator 3rd-party github:/openshift/console-operator A utility that performs the functions of deploying, configuring and restoring the openshift console as subsystem component. Platform documentation documentation ddm-architecture origin gerrit:/mdtu-ddm/general/ddm-architecture A complete collection of architecture documentation and articles containing how-tos, feature descriptions, and APIs, use cases and other information necessary to understand and use the Registries Platform. During the design and development of the subsystem, the following technologies were used: OKD Go Gin Web Framework VueJS TypeScript JavaScript Containers with subsystem components can be deployed or moved to different cloud environments or to your own local infrastructure. The Platform and Registries management subsystem supports both horizontal and vertical scaling. You can read more about scaling subsystems in the section architecture/container-platform/container-platform.adoc The Platform and Registries management subsystem supports logging of incoming requests, event logging, and metrics collection performance for further analysis through the web interfaces of the relevant subsystems of the Platform. You can read more about the design of subsystems in the relevant sections: * architecture/platform/operational/logging/overview.adoc * architecture/platform/operational/monitoring/overview.adoc","title":"Platform and Registries management subsystem","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/platform/administrative/control-plane/overview.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Subsystem functions","hash":"_subsystem_functions","id":2},{"text":"3. Subsystem technical design","hash":"_subsystem_technical_design","id":3},{"text":"4. Subsystem components","hash":"_subsystem_components","id":4},{"text":"5. Technology stack","hash":"_technology_stack","id":5},{"text":"6. Subsystem Quality Attributes","hash":"_subsystem_quality_attributes","id":6},{"text":"6.1. Portability","hash":"_portability","id":7},{"text":"6.2. Scalability","hash":"_scalability","id":8},{"text":"6.3. Observability","hash":"_observability","id":9}]},"195":{"id":195,"text":"On this page: 1. Context 1.1. Information exchange with external systems 1.2. Integration scenarios 2. Current technical design 2.1. Configuring the citizen authenticator 2.2. Configuring external integrations at the regulation level 2.3. Disadvantages of the current implementation 3. Target technical design 3.1. General principles 3.2. Technical design of the solution 3.3. Configuring external integrations of the registry through the Platform Management Center 3.4. Configuring external integrations at the regulation level 3.5. Creating ConfigMap resources when publishing regulation changes 3.6. Creating ConfigMap resources when applying changes to registry settings 3.7. Creating ExternalSecret resources when applying changes to registry settings 3.8. Applying changes to Kubernetes Secret resources via External Secrets Operator 3.9. Mounting Secret resources onto the file system 3.10. Types of supported authentication protocols used for integrations and secret storage in HashiCorp Vault 3.10.1. Integrations with other registries through Trembita 3.10.2. Integrations with other systems 3.10.3. Service accounts for accessing HashiCorp Vault 4. Regulation modeling 4.1. Changes to the USR connectors for integration 4.2. Changes to the Universal REST connector 5. Registry settings management 5.1. Registry’s external integrations management interfaces 6. Security 6.1. Business data 6.2. Simplified threat model 6.3. Ways of countering security risks and meeting security requirements Interaction in the context of business scenarios was implemented with the following external systems: Diia public services (for details, see architecture/registry/operational/notifications/diia-notifications-api.adoc) Information exchange was implemented with the following registries (for details, see registry-develop:registry-admin/external-integration/api-call/trembita/overview.adoc): Unified State Register (USR) State Register of Civil Status Acts (SRCSA) Unified Information Database of Internally Displaced Persons (UIDIDP) Component Level External system/registry Configuration Integration method Scenario dso-citizen-authenticator Platform USR Integrations and secrets are configured in the registry regulation Built-in Authenticating business representatives in the electronic cabinet of a citizen (checking for an activated entry in the registry) notification-service Registry Diia Integration and secret are configured through the control-plane interface Built-in Sending push-notifications to citizens bpms Registry USR SRCSA UIDIDP Integrations and secrets are configured in the registry regulation Standard SOAP connectors for integration Information exchange with the registries through Trembita as part of business processes Diia Integrations are configured in the registry regulation, and secret is created manually Universal REST connector for integration Information exchange as part of business processes Integrations are configured in the registry regulation, and secrets are created manually Universal REST connector for integration Information exchange as part of business processes To authenticate citizens, the system fetches user data from USR. Integration configuration and secret are stored at the regulation level and are used by the Regulation publishing pipeline to configure the registry’s dso-citizen-authenticator: Currently, integrations with registries through Trembita are implemented via standard SOAP connectors for integration. For details, see SOAP-based integration with other registries REST-based integrations with external systems are implemented using the Universal REST connector, which supports the following authorization methods: BASIC (username + password) PARTNER_TOKEN (partner_token + Bearer token) For details, see Integration with external services using the REST connector registry-gerrit:.git/bp-trembita/configuration.yml trembita-exchange-gateway: registries: edr-registry: user-id: 'DDM' protocol-version: '4.0' trembita-url: 'trembita.url/mockEDRService' authorization-token: 'token' client: x-road-instance: 'SEVDEIR-TEST' member-class: 'GOV' member-code: '43395033' subsystem-code: 'IDGOV_TEST_01' service: x-road-instance: 'SEVDEIR-TEST' member-class: 'GOV' member-code: '00015622' subsystem-code: '2_MJU_EDR_prod' external-systems: diia: url: http://api2.diia.gov.ua methods: get-damaged-property: path: /api/v1/public-service/damaged-property/filtered method: GET auth: type: PARTNER_TOKEN secret-name: diia-partner-token partner-token-auth-url: https://api2t.diia.gov.ua/api/v1/auth/partner token-json-path: $.token httpbin: url: http://httpbin.org/ methods: get: path: /get method: GET auth: type: BASIC secret-name: httpbin-basic-authentication Environment-specific integration settings are defined at the regulation level, which prohibits promoting the regulation between registry instances (such as locations and secrets of external systems). The secrets for accessing external systems are defined at the regulation level. Regulation administrator needs to handle secrets rotation. Registry administrator needs to manually create OpenShift secrets for external systems. Network policies must be configured manually (this includes creating Istio Service Entry for external systems). Trembita client settings for the registry are duplicated at the regulation level. Registry regulation should not contain environment- or instance-specific settings. Registry regulation should not contain confidential data in any form. External integration parameters are stored centrally and not duplicated. Integrating the registry with additional external systems does not require configuring network policies manually. Secrets with access parameters to external systems are stored in a secure storage of the HashiCorp Vault secrets management service. Registry administrator and security administrator determine the validity of registry’s interactions with external systems. Registry administrator configures integrations with external systems (including integration protocol, locations, authentication protocol, and secrets) at the registry instance level. Registry administrator handles rotation of secrets with access parameters to external systems. Regulation administrator performs minimal initial configuration at the regulation level to use external integrations in business processes (BPs). Integration between registries through Trembita is implemented as a catalogue of typical extensions-connectors to registries and does not require additional configuration at the regulation level. Integration with third-party systems requires additional configuration at the regulation level in the form of a list of operations and their types used by the registry through a typical BP extension called Universal REST connector. Control Plane Console and External Secrets Operator access the HashiCorp Vault secrets management service using a dedicated service account. Every service account used to access HashiCorp Vault must have a configured policy with a minimum set of Capabilities to perform their tasks (using the principle of least privilege). Changes between HashiCorp Vault secrets and registry’s Secret resources are synchronized via External Secrets Operator. Implementing this design requires making corresponding changes to the settings and usage of the notifications channels configuration with Diia within the notifications subsystem architecture/registry/operational/notifications/notifications-channels-configuration.adoc#_налаштування_каналу_звязку_для_відправки_push_повідомлень_у_мобільний_додаток_дія. The registry administrator creates and edits the registry configuration and enters the settings of the client registry into SEG Trembita through the control-plane-console. This results in: Saving the trembita.consumer configuration entry to control-plane-gerrit:.git/deployment-templates/values.yaml Initializing the platform-jenkins pipeline and applying the corresponding Helm chart to the registry namespace using the settings obtained from the Git repository. The registry administrator creates and edits the registry configuration and defines the Diia integration properties through the control-plane-console. This results in: Saving the secret and metadata to user-management:hashicorp-vault using the registry-kv/registry/external-systems/diia path depending on the selected authentication method (AUTH_TOKEN+BEARER). Saving the external-systems.diia configuration entry and the vault:-link for external Vault-secret to control-plane-gerrit:.git/deployment-templates/values.yaml Initializing the platform-jenkins pipeline and applying the corresponding Helm chart to the registry namespace using the settings obtained from the Git repository. Creating the ConfigMap resource diia-configuration in the registry namespace to be used by the bpms and ddm-notification-service services. Creating the Istio ServiceEntry resource to give the bpms and ddm-notification-service services access to the external system. External Secrets Operator creating the Secret resource diia-secret after processing the ExternalSecret resource diia-external-secret and receiving data from user-management:hashicorp-vault to be used by the bpms and ddm-notification-service services. Connecting a registry to the information exchange requires specifying the location of SEG Trembita that serves as the only means of integration with other registries. We need to consider the possibility of defining it globally instead of duplicating it across each registry. Currently, duplicating enables us to define separate mock services for the registries, but this approach needs to change going forward. Currently, when making changes through the control-plane-console, the system automatically creates a merge request in Gerrit and integrates it into the target registry’s configuration repository: .git. control-plane-gerrit:.git/deployment-templates/values.yaml trembita: # External registries used through Trembita / business processes specific integration connectors - can be updated & can't be removed by \"control-plane\" administrator registries: edr-registry: user-id: \"DDM\" protocol-version: \"4.0\" url: \"https://trembita.mdtu-ddm.projects.epam.com\" type: \"platform\" # non-removable record + secret metadata protocol: \"SOAP\" client: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"43395033\" subsystem-code: \"IDGOV_TEST_01\" service: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"00015622\" subsystem-code: \"2_MJU_EDR_prod\" auth: type: \"AUTH_TOKEN\" secret: \"vault:registry-kv/registry//trembita-registries/\" dracs-registry: user-id: \"DDM\" protocol-version: \"4.0\" url: \"https://trembita.mdtu-ddm.projects.epam.com\" type: \"platform\" # non-removable record + secret metadata protocol: \"SOAP\" client: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"43395033\" subsystem-code: \"IDGOV_TEST_01\" service: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"00015622\" subsystem-code: \"2_MJU_EDR_prod\" idp-exchange-service-registry: user-id: \"DDM\" protocol-version: \"4.0\" url: \"https://trembita.mdtu-ddm.projects.epam.com\" type: \"platform\" # non-removable record + secret metadata protocol: \"SOAP\" client: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"43395033\" subsystem-code: \"IDGOV_TEST_01\" service: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"00015622\" subsystem-code: \"2_MJU_EDR_prod\" external-systems: # External system used both by registry services and business processes - can be updated & can't be removed by \"control-plane\" administrator diia: url: \"https://api2t.diia.gov.ua\" protocol: \"REST\" type: \"platform\" # non-removable record + secret metadata auth: type: \"AUTH_TOKEN+BEARER\" auth-url: \"https://api2t-auth.diia.gov.ua/api/v1/auth/partner\" # can be used both as an absolute url to external auth server or relative path to external system base url ('/api/v1/auth/partner') access-token-json-path: \"$.token\" secret: \"vault:registry-kv/registry//external-systems/\" # Example external systems added for particular registry and explicitly \"used\" on regulation level - can be added/updated/removed if necessary by \"control-plane\" administrator http-bin: url: \"http://httpbin.org/\" protocol: \"REST\" type: \"registry\" # removable record + secret metadata auth: type: \"BASIC\" secret: \"vault:registry-kv/registry//external-systems/\" secured-service: url: \"http://secured-service.org/\" protocol: \"REST\" type: \"registry\" # removable record + secret metadata auth: type: \"BEARER\" secret: \"vault:registry-kv/registry//external-systems/\" For each record containing integration settings for external systems, an Istio Service Entry resource must be created automatically to allow the exchange according to the design. registry-gerrit:.git/bp-trembita/configuration.yml # reusing external system names configured on registry level external-systems: diia: operations: get-damaged-property: resource-path: \"/api/v1/public-service/damaged-property/filtered\" method: \"GET\" create-distribution: resource-path: \"/api/v1/notification/distribution/push\" method: \"POST\" http-bin: operations: get-operation: resource-path: \"/get\" method: \"GET\" ConfigMap: \"external-systems-endpoint-configuration\" kind: ConfigMap apiVersion: v1 metadata: name: external-systems-endpoint-configuration namespace: data: external-systems-endpoint-configuration.yml: | external-systems: diia: operations: get-damaged-property: resource-path: \"/api/v1/public-service/damaged-property/filtered\" method: \"GET\" create-distribution: resource-path: \"/api/v1/notification/distribution/push\" method: \"POST\" http-bin: operations: get-operation: resource-path: \"/get\" method: \"GET\" ConfigMap: \"trembita-registries-configuration\" kind: ConfigMap apiVersion: v1 metadata: name: trembita-registries-configuration namespace: data: trembita-registries-configuration.yml: | trembita: registries: edr-registry: user-id: \"DDM\" protocol-version: \"4.0\" url: \"https://trembita.mdtu-ddm.projects.epam.com\" protocol: \"SOAP\" client: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"43395033\" subsystem-code: \"IDGOV_TEST_01\" service: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"00015622\" subsystem-code: \"2_MJU_EDR_prod\" auth: type: \"AUTH_TOKEN\" dracs-registry: user-id: \"DDM\" protocol-version: \"4.0\" url: \"https://trembita.mdtu-ddm.projects.epam.com\" protocol: \"SOAP\" client: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"43395033\" subsystem-code: \"IDGOV_TEST_01\" service: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"00015622\" subsystem-code: \"2_MJU_EDR_prod\" idp-exchange-service-registry: user-id: \"DDM\" protocol-version: \"4.0\" url: \"https://trembita.mdtu-ddm.projects.epam.com\" protocol: \"SOAP\" client: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"43395033\" subsystem-code: \"IDGOV_TEST_01\" service: x-road-instance: \"SEVDEIR-TEST\" member-class: \"GOV\" member-code: \"00015622\" subsystem-code: \"2_MJU_EDR_prod\" ConfigMap: \"external-systems-configuration\" kind: ConfigMap apiVersion: v1 metadata: name: external-systems-configuration namespace: data: external-systems-configuration.yml: | external-systems: http-bin: url: \"http://httpbin.org/\" protocol: \"REST\" auth: type: \"BASIC\" secured-service: url: \"http://secured-service.org/\" protocol: \"REST\" auth: type: \"BEARER\" ConfigMap: \"diia-configuration\" kind: ConfigMap apiVersion: v1 metadata: name: diia-configuration namespace: data: diia-configuration.yml: | external-systems: diia: url: \"https://api2t.diia.gov.ua\" protocol: \"REST\" auth: type: \"AUTH_TOKEN+BEARER\" auth-url: \"https://api2t-auth.diia.gov.ua/api/v1/auth/partner\" access-token-json-path: \"$.token\" ExternalSecret: \"trembita-registries-external-secrets\" kind: ExternalSecret apiVersion: external-secrets.io/v1beta1 metadata: name: trembita-registries-external-secrets namespace: spec: refreshInterval: \"10s\" secretStoreRef: name: user-management:hashicorp-vault kind: SecretStore target: name: trembita-registries-secrets dataFrom: - extract: key: \"registry//trembita-registries\" ExternalSecret: \"external-systems-external-secrets\" kind: ExternalSecret apiVersion: external-secrets.io/v1beta1 metadata: name: external-systems-external-secrets namespace: spec: refreshInterval: \"10s\" secretStoreRef: name: user-management:hashicorp-vault kind: SecretStore target: name: external-systems-secrets dataFrom: - extract: key: \"registry//external-systems\" ExternalSecret: \"diia-external-secret\" kind: ExternalSecret apiVersion: external-secrets.io/v1beta1 metadata: name: diia-external-secret namespace: spec: refreshInterval: \"10s\" secretStoreRef: name: user-management:hashicorp-vault kind: SecretStore target: name: diia-secret data: - secretKey: \"external-systems.diia.auth.secret.token\" remoteRef: key: \"registry//external-systems\" property: \"external-systems.diia.auth.secret.token\" External Secrets Operator supports creating a unified Secret resource based on N secret records from HashiCorp Vault with transformation options. Secret: \"trembita-registries-secrets\" kind: Secret apiVersion: v1 metadata: name: trembita-registries-secrets namespace: data: trembita.registries..auth.secret.token: \"\" trembita.registries..auth.secret.token: \"\" trembita.registries..auth.secret.token: \"\" Secret: \"external-systems-secrets\" kind: Secret apiVersion: v1 metadata: name: external-systems-secrets namespace: data: external-systems..auth.secret.username: \"\" external-systems..auth.secret.password: \"\" external-systems..auth.secret.token: \"\" external-systems.diia.auth.secret.token: \"\" Secret: \"diia-secret\" kind: Secret apiVersion: v1 metadata: name: diia-secret namespace: data: external-systems.diia.auth.secret.token: \"\" Deployment: \"bpms\" apiVersion: apps/v1 kind: Deployment metadata: name: bpms spec: template: containers: - name: bpms volumeMounts: - name: bpms-trembita-registries-secrets mountPath: /app/secrets/trembita-registries - name: bpms-external-systems-secrets mountPath: /app/secrets/external-systems - name: bpms-diia-secret mountPath: /app/secrets/diia volumes: - name: bpms-trembita-registries-secrets secret: secretName: trembita-registries-secrets - name: bpms-external-systems-secrets secret: secretName: external-systems-secrets - name: bpms-diia-secret secret: secretName: diia-secret Figure 1. File system When saving secrets to user-management:hashicorp-vault, adding metadata related to the integration record type is required to enable further secrets filtering: type: platform type: registry NO_AUTH — Interaction with the registry through SEG Trembita does not require additional authorization. AUTH_TOKEN — Interaction with the registry through SEG Trembita requires additional authorization using an authorization token. Secrets used to interact with the registries are stored in HashiCorp Vault (user-management:hashicorp-vault) using the path generated according to the following convention: registry-kv/registry//trembita-registries/ Where: is the service name of the registry is the service name of the registry for which the integration is configured through SEG Trembita An example of storing the \"AUTH_TOKEN\" secret in HashiCorp Vault: \"registry-kv/registry//trembita-registries/\" { \"trembita.registries..auth.secret.token\": \"\" } NO_AUTH — Interaction with an external system does not require authorization. BASIC — Interaction with an external system requires standard authentication with a username and password. AUTH_TOKEN — Interaction with an external system requires authorization with an authorization token. AUTH_TOKEN+BEARER — Interaction with an external system requires two-step authorization, using the authorization token to obtain an access token. BEARER — Interaction with an external system requires authorization with an authorization token. Secrets used to interact with external systems are stored in HashiCorp Vault (user-management:hashicorp-vault) using the path generated according to the following convention: registry-kv/registry/external-systems/ Where: is the service name of the registry is the service name of the system for which the integration is configured An example of storing a \"BASIC\" secret in HashiCorp Vault: registry-kv/registry/external-systems/ { \"external-systems..auth.secret.username\": \"\", \"external-systems..auth.secret.password\": \"\" } An example of storing the \"BEARER\" | \"AUTH_TOKEN\" | \"AUTH_TOKEN+BEARER\" secrets in HashiCorp Vault: registry-kv/registry//external-systems/ { \"external-systems..auth.secret.token\": \"\" } Every component accessing Vault must use a dedicated OpenShift service account. Service accounts created in HashiCorp Vault must have the Kubernetes Auth Method type and must be created during the initial HashiCorp Vault setup by running script-init ConfigMap. Component Service account name Bound namespaces Capabilities External Secrets Operator external-secrets-operator Registry namespace [\"read\"] Admin console control-plane-console control-plane [\"create\", \"update\"] An example of HashiCorp Vault Capability Policy { \"policy\": \"path \\\"registry-kv/registry/external-systems/\\\" \\\"{ capabilities = [ \\\"read\\\" ]}\\\"\"} } An example of binding an OpenShift service account in HashiCorp Vault { \"bound_service_account_names\": [\"control-plane-console\"], \"bound_service_account_namespaces\": \"ns\", \"policies\": [\"policy-name\"], \"ttl\": \"1h\" } We need to switch to using the environment variable trembita.registries.edr-registry.auth.secret.token, which is based on the \"trembita-registries-secrets\" secret, to receive the authorization token in these typical extensions: com.epam.digital.data.platform.bpms.extension.delegate.connector.registry.edr.SearchSubjectsEdrRegistryConnectorDelegate com.epam.digital.data.platform.bpms.extension.delegate.connector.registry.edr.SubjectDetailEdrRegistryConnectorDelegate For an external system defined at the REST connector level, authorization type is identified by the environment variable external-systems..auth-type set by the registry administrator (\"NO_AUTH\" | \"BASIC\" | \"BEARER\" | \"AUTH_TOKEN+BEARER\"). Depending on the type, the credentials required to authorize the request are obtained from the \"external-systems-secrets\" secret: com.epam.digital.data.platform.bpms.extension.delegate.connector.rest.ExternalSystemConnectorDelegate Figure 2. Registry’s external integrations management Figure 3. Managing interactions with a registry through Trembita Figure 4. Managing interactions with an external system Data category Description Confidentiality Integrity Availability Technical data that contains information with restricted access System settings, configs, and parameters that contain information with restricted access, modifying which can negatively affect system attributes Medium High High Technical data that contains service information System settings, configs, and parameters that constitute service information High High High Risk Security controls Implementation Priority Vault data compromise through a root token. Currently, a root token that has access to everything, including vault unseal, is used as the primary token by all services. Create service accounts and differentiate access to Vault. Set up RBAC for accessing secrets containing the root token. Risk eliminated Critical Compromise of external integrations account data due to incorrect configuration of the error-handling system. Mounting OpenShift secrets onto the target service as an environment variable may lead to their reveal if software returns all information about operating environment when an error occurs. Mount secrets for target services as files. Set up a general error-handling mechanism. Considered in the initial design Critical Vault data compromise through the secret operator’s access token. External Secrets Operator creates its own custom resources which may contain account information with access to Vault. Create a dedicated service account to integrate with External Secrets Operator using the principle of least privilege. Set up RBAC for accessing External Secrets Operator custom resource definition (CRD). Not considered in the initial design High Lack of accountability. Absence of an audit log and information about accessing the Vault secrets. Set up the logging and audit system for Vault. Not considered in the initial design High Backdoor risk in the External Secrets Operator component. Prohibit any communications between External Secrets Operator and external resources at the network policies level and allow communication with services involved according to business logic. Not considered in the initial design High Unauthorized data access in the data center. Incorrect decommissioning of data center components. Unauthorized access to backups. Set up encryption for partitions that use Vault. Not considered in the initial design Medium Risk of detection evasion and anchoring in the system due to the absence of secrets rotation. Set up the system/process of secrets rotation. Not considered in the initial design Medium","title":"Managing settings and secrets for external integrations","component":"platform","version":"1.9.6","name":"registry-regulation-secrets","url":"/platform/1.9.6/arch/architecture/platform/administrative/control-plane/registry-regulation-secrets.html","titles":[{"text":"1. Context","hash":"_context","id":1},{"text":"1.1. Information exchange with external systems","hash":"_information_exchange_with_external_systems","id":2},{"text":"1.2. Integration scenarios","hash":"_integration_scenarios","id":3},{"text":"2. Current technical design","hash":"_current_technical_design","id":4},{"text":"2.1. Configuring the citizen authenticator","hash":"_configuring_the_citizen_authenticator","id":5},{"text":"2.2. Configuring external integrations at the regulation level","hash":"_configuring_external_integrations_at_the_regulation_level","id":6},{"text":"2.3. Disadvantages of the current implementation","hash":"_disadvantages_of_the_current_implementation","id":7},{"text":"3. Target technical design","hash":"_target_technical_design","id":8},{"text":"3.1. General principles","hash":"_general_principles","id":9},{"text":"3.2. Technical design of the solution","hash":"_technical_design_of_the_solution","id":10},{"text":"3.3. Configuring external integrations of the registry through the Platform Management Center","hash":"_configuring_external_integrations_of_the_registry_through_the_platform_management_center","id":11},{"text":"3.4. Configuring external integrations at the regulation level","hash":"_configuring_external_integrations_at_the_regulation_level_2","id":12},{"text":"3.5. Creating ConfigMap resources when publishing regulation changes","hash":"_creating_configmap_resources_when_publishing_regulation_changes","id":13},{"text":"3.6. Creating ConfigMap resources when applying changes to registry settings","hash":"_creating_configmap_resources_when_applying_changes_to_registry_settings","id":14},{"text":"3.7. Creating ExternalSecret resources when applying changes to registry settings","hash":"_creating_externalsecret_resources_when_applying_changes_to_registry_settings","id":15},{"text":"3.8. Applying changes to Kubernetes Secret resources via External Secrets Operator","hash":"_applying_changes_to_kubernetes_secret_resources_via_external_secrets_operator","id":16},{"text":"3.9. Mounting Secret resources onto the file system","hash":"_mounting_secret_resources_onto_the_file_system","id":17},{"text":"3.10. Types of supported authentication protocols used for integrations and secret storage in HashiCorp Vault","hash":"_types_of_supported_authentication_protocols_used_for_integrations_and_secret_storage_in_hashicorp_vault","id":18},{"text":"3.10.1. Integrations with other registries through Trembita","hash":"_integrations_with_other_registries_through_trembita","id":19},{"text":"3.10.2. Integrations with other systems","hash":"_integrations_with_other_systems","id":20},{"text":"3.10.3. Service accounts for accessing HashiCorp Vault","hash":"_service_accounts_for_accessing_hashicorp_vault","id":21},{"text":"4. Regulation modeling","hash":"_regulation_modeling","id":22},{"text":"4.1. Changes to the USR connectors for integration","hash":"_changes_to_the_usr_connectors_for_integration","id":23},{"text":"4.2. Changes to the Universal REST connector","hash":"_changes_to_the_universal_rest_connector","id":24},{"text":"5. Registry settings management","hash":"_registry_settings_management","id":25},{"text":"5.1. Registry’s external integrations management interfaces","hash":"_registrys_external_integrations_management_interfaces","id":26},{"text":"6. Security","hash":"_security","id":27},{"text":"6.1. Business data","hash":"_business_data","id":28},{"text":"6.2. Simplified threat model","hash":"_simplified_threat_model","id":29},{"text":"6.3. Ways of countering security risks and meeting security requirements","hash":"_ways_of_countering_security_risks_and_meeting_security_requirements","id":30}]},"196":{"id":196,"text":"On this page: 1. Introduction 2. Configuration of rules for token validation 3. Token validation on the Envoy proxy side =JWT token validation using Istio Envoy JWT-token (eng. JSON Web Token) — a secure data exchange format that is most commonly used to transfer sensitive information or authorize user HTTP requests. The JWT token can be signed with a secret (using the HMAC algorithm) or a public/private key pair using the RSA or ECDSA algorithms. Standardized in RFC 7519. JWT token is usually sent as a Bearer token in the header of a custom HTTP request. Before the request reaches the microservice, Istio Envoy can: Check the JWT token inside the HTTP header of the request for correctness and compliance with the established rules Pass traffic with the correct JWT token to the microservice Do not allow traffic with an incorrect JWT token. In general, the configuration of Envoy proxy rules consists of creating the following API objects in the OpenShift cluster for each service that performs user authorization: apiVersion: security.istio.io/v1beta1 kind: RequestAuthentication metadata: name: request-auth-digital-signature-ops spec: jwtRules: - forwardOriginalToken: true fromHeaders: - name: X-Access-Token issuer: >- https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-platform-sit-officer-portal jwksUri: >- https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-platform-sit-officer-portal/protocol/openid-connect/certs selector: matchLabels: app: digital-signature-ops The configuration consists of several fields: forwardOriginalToken — the token from the initial request will be forwarded; fromHeaders — header name with token; `issuer' — the provider that generated the token; jwksUri — URL of the public key of the provider set to verify the signature of the JWT token; selector — the selector determines to which microservice the configuration should be applied. To reject requests without valid JWT tokens, you need to add an authorization policy with a rule specifying the DENY' action for requests without a `RequestPrincipal', shown as `notRequestPrincipals: [\"*\"] in the following example. apiVersion: \"security.istio.io/v1beta1\" kind: \"AuthorizationPolicy\" metadata: name: digital-signature-ops spec: selector: matchLabels: app: digital-signature-ops action: DENY rules: - from: - source: notRequestPrincipals: [\"*\"] Thus, the AuthorizationPolicy rule rejects requests without valid JWT tokens. Next, the Istio Envoy proxy receives the configuration from istiod in the following order: When starting a new pod, using the ``MutationWebhooks'' mechanism, an additional Envoy proxy container is added to it, which is responsible for intercepting all traffic in front of the main microservice container. During initialization, the Envoy-proxy receives the necessary configuration from istiod, which contains the following information, which was specified in the previous step when creating the RequestAuthentication object: ... { \"name\": \"envoy.filters.http.jwt_authn\", \"typed_config\": { \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication\", \"providers\": { \"origins-0\": { \"issuer\": \"https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-sk-test-qa-admin\", \"local_jwks\": { \"inline_string\": \"\" }, \"forward\": true, \"from_headers\": [{ \"name\": \"X-Access-Token\" }], \"payload_in_metadata\": \"https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-sk-test-qa-admin\" } ... In the next step, the Envoy proxy, using the URL from the issuer field, receives JWKS with a public key from the JWT token generation microservice (Keycloak) and writes it in the local_jwks field. By default, the duration after which the cached public key will expire is for 2 minutes. Next, another additional configuration is performed and soon the Envoy proxy is ready to process requests. Every request that comes to the microservice is intercepted by the Envoy proxy and checked for compliance specified in RequestAuthentication, namely: Checking if the JWT token is present at all Getting the JWT token from the header Validating the JWT token using the public key obtained earlier from the URL. The following is an example of Envoy logs: 2021-12-24T12:48:45.867291Z debug envoy http [C8][S790218861205563098] request end stream 2021-12-24T12:48:45.867334Z debug envoy jwt Called Filter : setDecoderFilterCallbacks 2021-12-24T12:48:45.867376Z debug envoy jwt Called Filter : decodeHeaders 2021-12-24T12:48:45.867393Z debug envoy jwt Prefix requirement '/' matched. 2021-12-24T12:48:45.867400Z debug envoy jwt extract x-access-token 2021-12-24T12:48:45.867447Z debug envoy jwt Jwt authentication completed with: OK 2021-12-24T12:48:45.867497Z debug envoy filter AuthenticationFilter::decodeHeaders with config policy { peers { mtls { mode: PERMISSIVE } } origins { jwt { issuer: \"https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-sk-test-qa-admin\" } } origins { jwt { issuer: \"https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-sk-test-qa-citizen-portal\" } } origins { jwt { issuer: \"https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-sk-test-qa-external-system\" } } origins { jwt { issuer: \"https://platform-keycloak.apps.cicd2.mdtu-ddm.projects.epam.com/auth/realms/mdtu-ddm-edp-cicd-sk-test-qa-officer-portal\" } } origin_is_optional: true principal_binding: USE_ORIGIN } skip_validate_trust_domain: true 2021-12-24T12:48:45.867507Z debug envoy filter [C8] validateX509 mode PERMISSIVE: ssl=false, has_user=false 2021-12-24T12:48:45.867616Z debug envoy rbac checking request: requestedServerName: , sourceIP: 10.128.32.10:55660, directRemoteIP: 10.128.32.10:55660, remoteIP: 10.128.32.10:55660,localAddress: 10.130.18.67:8080, ssl: none, headers: ':authority', '10.130.18.67:8080' 2021-12-24T12:48:45.867628Z debug envoy rbac enforced allowed, matched policy none","title":"","component":"platform","version":"1.9.6","name":"istio-jwt-token-validation","url":"/platform/1.9.6/arch/architecture/platform/operational/service-mesh/istio-jwt-token-validation.html","titles":[{"text":"1. Introduction","hash":"_introduction","id":1},{"text":"2. Configuration of rules for token validation","hash":"_configuration_of_rules_for_token_validation","id":2},{"text":"3. Token validation on the Envoy proxy side","hash":"_token_validation_on_the_envoy_proxy_side","id":3}]},"197":{"id":197,"text":"On this page: 1. General description 2. Subsystem functions 3. Subsystem technical design 4. Subsystem components 5. Technology stack 6. Subsystem quality attributes 6.1. Observability 6.2. Security 6.3. Reliability 6.4. Performance Interservice interaction management subsystem implementing the Service Mesh network pattern helps developers and registry administrators securely connect external systems to the Registry Platform and vice versa, protects and monitors components of the Platform and registries, provides a set of components for managing external/internal traffic, network policies, telemetry and security, provides load balancing, traffic routing and encryption. You can read more about the list of services included in Service Mesh in the section Service Mesh and Platform components The subsystem provides mechanisms to protect services from attacks and malicious actions, in particular, authentication, authorization, encryption and access control. The subsystem allows you to control how traffic passes between services, in particular, it determines routing and load balancing. The subsystem provides collection and display of various metrics, which allows Platform administrators to view and to analyze the operation of components of the registers and the Platform, in particular, the level of availability and performance. Creating and managing security policies and restricting access to Platform components and registries. Component name Namespace Deployment Source Repository Appointment Istio control plane istio-system istiod 3rd-party gerrit:/mdtu-ddm/infrastructure/service-mesh Istiod - it is the main component of the subsystem that provides the main functions of the service mesh, such as traffic routing, traffic management and security. Istiod consists of several components, namely: Pilot - manages traffic routing and provides load balancing between services. Citadel - responsible for traffic security, encryption, authentication and authorization. Citadel creates and distributes certificates for every service on the network. Galley - used to process and validate Istio Envoy configuration data. Sidecar Injector - automatically adds Envoy containers to the required pods of Platform components and registries. Istio operator istio-operator istio-operator 3rd-party Istio operator allows you to install, configure, and manage various `istiod' components. This simplifies the setup and deployment of `istio' as a component of the Platform Prometheus istio-system prometheus 3rd-party Prometheus is a performance metrics monitoring and analysis component used with Istio to collect, analysis and visualization of metrics of Platform components and registers. Service Mesh management and monitoring web interface istio-system kiali 3rd-party A component that provides Platform administrators and registries with the ability to configure and analyze status components of service-mesh Platforms and registries, monitor components included in service-mesh in real life time and quickly detect problems in the network. During the design and development of the subsystem, the following technologies were used: Istio Kiali Prometheus Istio Operator Kiali Operator The subsystem provides the ability to monitor the Platform and registries and provides the collection of helpful metrics administrators to understand the behavior and performance of Platform components and registries to identify issues and improve their performance. The subsystem provides protection of Platform components and registries against external attacks and internal threats through authentication, authorization, restriction of network interaction, verification of JWT tokens, encryption of traffic between services (mTLS), which fully corresponds to the Zero-trust approach. There is a mechanism for limiting access to the interface, which in turn minimizes the attack surface of the subsystem from the outside. The subsystem will meet the requirements of cryptoresistance using strong ciphers and TLS 1.2 or higher. Certificates generated by the subsystem are stored in a secure, encrypted storage, access to which is controlled. All communication between subsystem components takes place over a secure communication channel with mandatory identification and authentication. The subsystem ensures the resistance of Platform components and registries to failures by means of automatic redirection traffic, retries of requests The subsystem provides load balancing between the components of the Platform and registries and provides the possibility of use different balancing strategies, which allows you to increase the performance of applications and manage their versions.","title":"Interservice interaction management subsystem","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/platform/operational/service-mesh/overview.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Subsystem functions","hash":"_subsystem_functions","id":2},{"text":"3. Subsystem technical design","hash":"_subsystem_technical_design","id":3},{"text":"4. Subsystem components","hash":"_subsystem_components","id":4},{"text":"5. Technology stack","hash":"_technology_stack","id":5},{"text":"6. Subsystem quality attributes","hash":"_subsystem_quality_attributes","id":6},{"text":"6.1. Observability","hash":"_observability","id":7},{"text":"6.2. Security","hash":"_security","id":8},{"text":"6.3. Reliability","hash":"_reliability","id":9},{"text":"6.4. Performance","hash":"_performance","id":10}]},"198":{"id":198,"text":"This section lists the components of the Registry Platform that make up the Service Mesh. |Zone|Subsystem|Component name|Representation in the register |Administrative area of the Platform |Platform and Registries management subsystem |Platform and register management web interface |control-plane-console 4+.<|Administrative area of the Platform |External traffic management subsystem |Administrative zone external API gateway |kong-admintools-kong 2+.<|Subsystem for modeling the registry regulation |Regulation management service |registry-regulation-management-deployment |Language сервер |ddm-language-server |Registry regulation deployment subsystem |Report template export service |report-exporter-deployment 23+.<|Register operation area |External traffic management subsystem |Operating Zone External API Gateway |kong-kong 2+.<|Registry data management subsystem |Asynchronous registry data management service |registry-kafka-api-deployment |Synchronous registry data management service |registry-rest-api-deployment 8+.<|Business process execution subsystem |Business process execution service |bpms |User process management service |user-process-management |User task management service |user-task-management |Service of digital documents |digital-document-service |UI forms supply service |form-schema-provider-deployment |UI form data validation service |form-submission-validation |Access service to BP historical data |process-history-service-api-deployment |Service for recording historical events of BP |process-history-service-persistence-deployment 4+.<|Subsystem for generating registry extracts |Extraction management service |excerpt-service-api-deployment |CSV extract generation service |excerpt-worker-csv-deployment |PDF extract generation service |excerpt-worker-deployment |DOCX extract generation service |excerpt-worker-docx-deployment |Subsystem of user notifications |User notification service |ddm-notification-service |User settings management subsystem |User settings management service |user-settings-service-api-deployment 4+.<|Subsystem of external integrations |API gateway for reading registry data by external systems |registry-soap-api-deployment |API-gateway for BP calls by external systems |bp-webservice-gateway |API-gateway of inter-registry interaction |platform-gateway-deployment |Synchronous registry data management service for inter-registry interaction |registry-rest-api-ext-deployment |Non-relational database management subsystem |Sentinel service |rfs-redis-sentinel |Geodata management subsystem |Geo-data service |geo-server","title":"Service Mesh and Platform components","component":"platform","version":"1.9.6","name":"service-mesh-components","url":"/platform/1.9.6/arch/architecture/platform/operational/service-mesh/service-mesh-components.html","titles":[]},"199":{"id":199,"text":"On this page: 1. General description 2. Subsystem functions 3. Subsystem technical design 4. Component subsystems 5. Technology stack 6. Subsystem Quality Attributes 6.1. Scalability 6.2. Observability 6.3. Portability The subsystem, the purpose of which is to manage external traffic and control access to the API services of the administrative zone of the Registry. Authentication and authorization of requests Traffic routing to the API services of the registry administrative zone subsystems Setting and controlling rate limits Transformation of requests and responses Logging of incoming requests Component name Representation in the register Source Repository Appointment Administrative zone external API gateway kong-admintools-kong 3rd-party gerrit:/mdtu-ddm/general/kong-admin-tools Provides traffic management, authorization, API access control, load balancing, request/response conversion and analytics/monitoring. ServiceMesh gateway istio-ingressgateway 3rd-party github:/istio/proxy A network gateway running on the istio service-mesh interface and receiving incoming HTTP/TCP connections. Operational storage of user sessions redis:sessions_admin_tools 3rd-party - Storage of custom JWT tokens During the design and development of the subsystem, the following technologies were used: Kong Kong Ingress Controller Redis Istio ServiceMesh The external traffic management subsystem of the registry administrative zone supports both horizontal and vertical scaling. You can read more about scaling subsystems in the section architecture/container-platform/container-platform.adoc The external traffic management subsystem of the registry administrative zone supports the logging of incoming requests and the collection of performance metrics for further analysis through the web interfaces of the corresponding subsystems of the Platform. You can read more about the design of subsystems in the relevant sections: arch:architecture/platform/operational/logging/overview.adoc arch:architecture/platform/operational/monitoring/overview.adoc The external traffic management subsystem of the registry administrative zone can be migrated, deployed and managed uniformly and reliably on different container orchestration platforms deployed in various cloud environments or own infrastructure in the data center. For more information, see Container Orchestration Platform","title":"External traffic management subsystem of the registry administrative zone","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/registry/administrative/ext-api-management/overview.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Subsystem functions","hash":"_subsystem_functions","id":2},{"text":"3. Subsystem technical design","hash":"_subsystem_technical_design","id":3},{"text":"4. Component subsystems","hash":"_component_subsystems","id":4},{"text":"5. Technology stack","hash":"_technology_stack","id":5},{"text":"6. Subsystem Quality Attributes","hash":"_subsystem_quality_attributes","id":6},{"text":"6.1. Scalability","hash":"_scalability","id":7},{"text":"6.2. Observability","hash":"_observability","id":8},{"text":"6.3. Portability","hash":"_portability","id":9}]},"200":{"id":200,"text":"On this page: 1. General description 2. Data structure 2.1. sessions_admin_tools Registry administrative zone external traffic management subsystem uses a distributed in-memory database Redis with Non-relational database management subsystems for storing user session data (JWT-tokens). You can read more about the technical approach by link. Storage of custom JWT tokens, the key is stored as a string in HEX format. More details can be found in the documentation of the library lua-resty-session.","title":"Non-relational data store","component":"platform","version":"1.9.6","name":"redis-storage","url":"/platform/1.9.6/arch/architecture/registry/administrative/ext-api-management/redis-storage.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Data structure","hash":"_data_structure","id":2},{"text":"2.1. sessions_admin_tools","hash":"_sessions_admin_tools","id":3}]},"201":{"id":201,"text":"On this page: 1. General description 2. Top-level technical design 3. List of endpoints in the system 4. System components and their purpose within the solution design This document contains information about the general provisions for the formation of external access points of administrative endpoints. All external administrative tool endpoints are called through a separate Kong API Gateway from registry components In Kong API Gateway, a single URI is configured through which access to the form is performed: https://admin-tools-. OIDC plugin must be configured on the service The path to the endpoints must not contain the name of the service to which this or that resource belongs This diagram shows the platform components involved in the implementation of the requirements and the interaction between them. Admin tool name Ingress name Ingress host Route path Service name Jenkins admin-tools-jenkins admin-tools-. /cicd admin-tools-jenkins Gerrit admin-tools-gerrit /vcs admin-tools-gerrit Nexus admin-tools-nexus /artifacts admin-tools-nexus Camunda admin-tools-bp-admin-portal /bp-admin bp-admin-portal Redash admin-tools-redash-admin /analytics-admin admin-tools-redash-admin Redash admin-tools-redash-viewer /analytics admin-tools-redash-viewer Kafka-UI admin-tools-kafka-ui /kafka-ui admin-tools-kafka-ui Admin portal admin-tools-admin-portal / admin-tools-admin-portal This section provides a list of system components that are involved or need to be changed/created within the framework of the implementation of functional requirements according to the technical design of the solution. Component Official title Saving and retrieving binary artifacts nexus Saving platform configuration and registries gerrit Deployment of registers jenkins API Gateway administrative-kong Business process modeling tool bp-admin-portal Data analysis tool redash/redash-admin Kafka cluster monitoring tool kafka-ui Settings of service mesh istio-configuration Settings of network policies network-management","title":"External Kong API Gateway route structure for administrative endpoints","component":"platform","version":"1.9.6","name":"registry-admin-routes.yaml","url":"/platform/1.9.6/arch/architecture/registry/administrative/ext-api-management/registry-admin-routes.yaml.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Top-level technical design","hash":"_top_level_technical_design","id":2},{"text":"3. List of endpoints in the system","hash":"_list_of_endpoints_in_the_system","id":3},{"text":"4. System components and their purpose within the solution design","hash":"_system_components_and_their_purpose_within_the_solution_design","id":4}]},"202":{"id":202,"text":"On this page: 1. Abstract 2. Structure of the registry regulations 2.1. Logical representation 2.2. Physical representation 3. Components of the registry regulations 3.1. General registry settings 3.2. Registry data model 3.3. Registry business processes 3.4. UI forms of registry business processes 3.5. Registry user roles 3.6. Access rights to the registry business processes 3.7. Templates for analytical reports 3.8. Templates of excerpts from the registry 3.9. Templates for registry information notifications 3.10. Registry integration with external systems 3.11. Registry regulations testing Registry Regulations is a digital representation of important aspects of the registry functioning, consisting of declarative descriptions of the organizational structure, data model, information and administrative services, access rights, templates of excerpts and messages, settings of integrations with external systems, etc. The registry regulation together with the operational registry configuration constitute a necessary and sufficient description of the functionalities implemented in the registry and settings to ensure that the appropriate level of quality of their provision to end users. The Platform for state registries implements a Low-code approach to development of digital regulations using service web interfaces — Registry Regulation Modeling Subsystems. Registry regulations, along with change history, are stored in the appropriate version control repository Git (Gerrit) of the registry instance on the Platform to ensure auditability and rollback. The registry regulations deployment subsystem handles validation, automated testing, and applying changes to the regulations of the registry operational zone services. This flowchart shows the components of the registry regulations that are currently supported by the Platform to implement the functionality of the registries. When modeling regulations, the relationships shown in the diagram below are supported between their components. The registry regulations are represented in the Git repository as a set of directories with files. Each file is responsible for configuring a separate aspect of registry functioning according to requirements. Redesign planned and documented. You can find out more in the Management of registry settings at the regulation level section. This component of the regulations is responsible for configuring registry customizations, and is represented in the repository as two directories and settings files in the YAML format: ./settings/settings.yml: Registry customization settings (short name, full name, etc.) The format of defining general registry settings in the YAML format: settings: general: title: \"\" titleFull: \"\" ./global-vars/camunda-global-system-vars.yml: Registry settings (applied portal theme, email address of Support, etc.) The format of defining general registry settings in the YAML format: supportEmail: \"\" themeFile: \"\" You can find out more about design of the subsystems responsible for configuring and applying general registry settings in the corresponding sections: Registry regulations modeling subsystem Registry regulations deployment subsystem User portals subsystem This component of the regulations is represented as an individual directory: ./data-model - contains a set of Liquibase files for management of: Physical model of the database Specification of API access to data Data access rights Data for initial download You can learn more about the design of the subsystems responsible for modeling and using the data model in the corresponding sections: Registry regulations modeling subsystem Library of Liquibase extensions Registry regulations deployment subsystem Registry data management subsystem This component of the regulations is responsible for the models of business processes, business rules and is represented as individual directories: ./bpmn: Contains files in BPMN format with models of administrative and information registry services. ./dmn: Contains files in DMN format with models of business rules for using in registry business processes. ./bp-grouping/bp-grouping.yml: Contains settings of grouping and the order of display in portals of user of business processes of the registry administrative and information services. The format of defining settings for business processes grouping in the YAML format: groups: - name: \"\" processDefinitions: - \"\" - ... - ... ungrouped: - \"\" - ... You can read more about the design of subsystems responsible for modeling and using business processes and business rules in the relevant sections: Registry regulations modeling subsystem Registry regulations deployment subsystem Business processes management subsystem User portals subsystem This component of the regulations is responsible for setting up UI forms of user tasks in the registry business processes. It is represented as two directories: ./forms: Contains files with a description of the UI form structures in JSON format, compatible with Form.UI. ./form-scripts: Contains JavaScript files describing functions used in UI forms. You can find out more about the design of subsystems responsible for modeling and using UI forms in business processes in the relevant sections: Registry regulations modeling subsystem Registry regulations deployment subsystem Business processes management subsystem This component of the regulations is responsible for setting up the roles of registry users and is represented in the repository as an individual directory with two settings files in YAML format: ./roles/citizen.yml: Contains a list of the citizen roles. ./roles/officer.yml: Contains a list of the officer roles. The format of defining the registry regulatory roles in YAML format: roles: - name: \"\" description: \"\" - ... This component of the regulations is responsible for setting access rights to business processes and is represented in the repository as an individual directory with three settings files in YAML format: ./bp-auth/officer.yml: Settings of access rights for officers to business processes. ./bp-auth/citizen.yml: Settings of access rights for citizens to business processes. ./bp-auth/external-system.yml: Settings of access rights for external systems to business processes. The format of defining access rights to business processes in YAML format: authorization: realm: \"\" process_definitions: - process_definition_id: \"\" process_name: \"\" process_description: \"\" roles: - '' - '...' - ... You can learn more about the design of the subsystems responsible for setting up and using access rights in the corresponding sections: Registry regulations modeling subsystem Registry regulations deployment subsystem Business processes management subsystem User portals subsystem External integrations subsystem This component of the regulations is responsible for setting up dashboard templates for viewing data and registry audit event logs. It is represented as the relevant directory: ./reports: Contains templates of information panels as JSON-format files compatible with Redash. You can find out more about the design of the subsystems responsible for modeling and using dashboard templates in the corresponding sections: Registry regulations modeling subsystem Registry regulations deployment subsystem Registry analytical reporting subsystem This component of the regulations is responsible for setting templates for generating excerpts from the registry. It is represented as three directories, taking into account the types of excerpts supported by the Platform for state registries: ./excerpts: Contains template files in FTLH format for generating PDF excerpts. ./excerpts-docx: Contains template files in DOCX format for generating DOCX excerpts. ./excerpts-csv: Contains template files in JSON format for generating CSV excerpts. You can learn more about the design of the subsystems responsible for modeling and using excerpt templates in the corresponding sections: Registry regulations modeling subsystem Registry regulations deployment subsystem Registry excerpts generation subsystem This component of the regulations is responsible for setting up templates for sending informational messages to registry users. It is represented as three directories, taking into account the communication channels supported by the Platform for state registries: ./notifications/inbox: Contains template files in FTL format for generating in-app notifications. ./notifications/email: Contains template files in FTLH format for generating the body of email notifications. ./notifications/diia: Contains template files in the DIIA text format used in the Diya ecosystem to generate notifications. You can read more about the design of the subsystems responsible for modeling and using information notification templates in the corresponding sections: Registry regulations modeling subsystem Registry regulations deployment subsystem User notification subsystem This component of the regulations is responsible for setting up the outgoing and incoming integrations of the registry and is represented as an individual directory with two settings files in YAML format: ./bp-trembita/configuration.yml: Configuration of integration points with external systems according to registry configuration. The format of defining general registry settings in YAML format: external-systems: external-system-name1: operations: ... external-system-name2: operations: ... ... ./bp-trembita/external-systems.yml: API settings for calling business processes by external systems. The format of defining general registry settings in YAML format: trembita: process_definitions: - process_definition_id: '' start_vars: [] return_vars: [] - ... You can learn more about the design of the subsystems, responsible for configuring and using the settings for integrations with external systems, in the corresponding sections: Registry regulations modeling subsystem Registry regulations deployment subsystem Business processes management subsystem External integrations subsystem This component of the regulations is responsible for setting up the API modeling of external systems and a set of automated tests. It is represented as two directories: ./autotests: A suite of BDD functional tests for automated registry testing. ./mock-integrations: A set of JSON-files in Wiremock-format with a description of the API rules for mocking external systems for the purpose of their further modeling in the process of manual and automated registry testing. You can read more about the design of the subsystems responsible for modeling and using the regulation component in the corresponding sections: Registry regulations modeling subsystem Registry regulations deployment subsystem External systems simulation API subsystem","title":"Registry digital regulations","component":"platform","version":"1.9.6","name":"registry-regulation","url":"/platform/1.9.6/arch/architecture/registry/administrative/registry-regulation/registry-regulation.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Structure of the registry regulations","hash":"_structure_of_the_registry_regulations","id":2},{"text":"2.1. Logical representation","hash":"_logical_representation","id":3},{"text":"2.2. Physical representation","hash":"_physical_representation","id":4},{"text":"3. Components of the registry regulations","hash":"_components_of_the_registry_regulations","id":5},{"text":"3.1. General registry settings","hash":"_general_registry_settings","id":6},{"text":"3.2. Registry data model","hash":"_registry_data_model","id":7},{"text":"3.3. Registry business processes","hash":"_registry_business_processes","id":8},{"text":"3.4. UI forms of registry business processes","hash":"_ui_forms_of_registry_business_processes","id":9},{"text":"3.5. Registry user roles","hash":"_registry_user_roles","id":10},{"text":"3.6. Access rights to the registry business processes","hash":"_access_rights_to_the_registry_business_processes","id":11},{"text":"3.7. Templates for analytical reports","hash":"_templates_for_analytical_reports","id":12},{"text":"3.8. Templates of excerpts from the registry","hash":"_templates_of_excerpts_from_the_registry","id":13},{"text":"3.9. Templates for registry information notifications","hash":"_templates_for_registry_information_notifications","id":14},{"text":"3.10. Registry integration with external systems","hash":"_registry_integration_with_external_systems","id":15},{"text":"3.11. Registry regulations testing","hash":"_registry_regulations_testing","id":16}]},"203":{"id":203,"text":"On this page: 1. Abstract 2. Data structures 2.1. user-import 2.2. user-import-archive The Registry regulations modeling subsystem uses the Ceph object storage of the Distributed data storage subsystem for saving CSV files containing a list of officers scheduled for importing or already imported to the register. The bucket for storing CSV files with a list of officers for importing to the registry. Read this article to learn about the CSV file structure. Table 1. Description of object meta-data attributes Attribute Data type Description name String (Base64) The name of the file containing users for downloading Table 2. Description of the stored document structure Attribute Data type Description vault:v1: String Encrypted content of the file containing users for downloading Example of a stored document vault:v1:q5Rd32QX1bg4CZAmCqeZtliQBZUVfmnqS4wMIXCi9lAp95FRf0Tzx0a7tyFom87ebEbPzR91Yoe2lbAaWbf+Gi547r7MI+YEiFEYXPNeWorO2XReVXJ8pMRdUOz8AxOPkmfOG2/gbDN2cYuWWOpqpXGHrz/QHmKSt7PdT66E7Dc49u3hDxbkiMVwfd0bYxph8ysV7XEkbmxZMK7OEPv07CKx93ePfdGVyQuvNOLNpmocDf The bucket for storing files with a list of officers imported to the registry. Documents have the same structure and meta-data as in the `user-import' bucket.","title":"Object data storage","component":"platform","version":"1.9.6","name":"ceph-storage","url":"/platform/1.9.6/arch/architecture/registry/administrative/regulation-management/ceph-storage.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Data structures","hash":"_data_structures","id":2},{"text":"2.1. user-import","hash":"_user_import","id":3},{"text":"2.2. user-import-archive","hash":"_user_import_archive","id":4}]},"204":{"id":204,"text":"On this page: 1. Abstract 2. Subsystem functions 3. Subsystem technical design 4. Subsystem components 5. Technology stack 6. Subsystem quality attributes 6.1. Security 6.2. Usability 6.3. Modifiability The subsystem that provides capability of the registry development functionality based on the Lowcode principles in the form of digital registry regulations and provides capabilities for managing the officer accounts. Modeling of the registry regulations components based on the Lowcode principles: Batch download of users. Amendments to the declarative description of the registry regulations. Versioning of the registry regulations with a history of changes. Monitoring of changes before entering them into the registry regulations. Viewing the results of monitoring of changes to the registry regulations by the Registry regulations deployment subsystem. Figure 1. Component diagram of regulations modeling subsystem. General (1) - The report archive is a zip archive that contains a list of requests and report settings in a declarative format. (2) - Scenarios that are relevant for modeling (3) - The internal structure of the Redash components is described in the Registry analytical reporting subsystem Component name Representation in register Origin Repository Purpose Regulation modeling web interface admin-portal origin github:/mdtu-ddm/low-code-platform/platform/frontend/applications/common-web-app Client web application for modeling registry regulations based on Lowcode principles Report modeling web interface redash-admin redash-admin-adhocworker redash-admin-scheduler redash-admin-postgresql redash-admin-redis-master fork gerrit:/mdtu-ddm/data-architecture/devops-application/redash-chart gerrit:/mdtu-ddm/data-architecture/application/redash github:/getredash/redash Client web application for creating and configuring analytical reports and dashboards Service for monitoring and storage of changes to regulations gerrit gerrit-operator 3rd-party gerrit:/mdtu-ddm/devops/operators/gerrit-operator gerrit:/googlesource/gerrit Software tool allowing storage and management of registry regulations versions. Regulations management service registry-regulation-management origin github:/epam/edp-ddm-registry-regulation-management The service that provides a REST API for working with versions of the registry regulations and their components Language server ddm-language-server origin gerrit:/mdtu-ddm/low-code-platform/platform/backend/applications/ddm-language-server The service that provides the functionality of hints, autocompletion of functions and checks when editing code in the Regulation modeling web interface Reports exporting service report-exporter origin github:/epam/edp-ddm-report-exporter The service that provides REST API access to export reports from the Report modeling web interface Utility for downloading officers publish-users-job origin github:/epam/edp-ddm-user-publisher The service that provides REST API access to export reports from the Report modeling web interface Operational storage of file with users ceph:user-import origin github:/epam/edp-ddm-registry-configuration/blob/main/deploy-templates/templates/CephObjectBucketClaim.yaml Storing a file with users for import Archive storage of files with users ceph:user-import-archive origin github:/epam/edp-ddm-registry-configuration/blob/main/deploy-templates/templates/CephObjectBucketClaim.yaml Archive of files with users for import Git repository of the Digital registry regulations gerrit:registry-regulations origin github:/epam/edp-ddm-empty-template-registry-regulation Git repository of the Digital registry regulations in the service for monitoring and storage of changes to the regulations The following technologies were used when designing and developing the subsystem: Java Spring Spring Boot JavaScript TypeScript ReactJS Redux Material UI BPMN JS Leaflet Form.IO SDK i18next Redash Liquibase Nginx Gerrit EDP Gerrit Operator Only authorized users can access to the subsystem web interfaces. The standard system mechanisms, such as OpenID Connect and SAML integration with the Users and roles management subsystem, are used for authorization. Modeling of the regulations in the subsystem web interfaces is performed according to the principles of Lowcode with auto-prompts for users, auto-completion and validation of the entered information. This allows to reduce the time for development of the regulations and enhance training of users. The structure of the subsystem’s digital registry regulations is divided onto individual elements that are loosely coupled to each other (the principle of Low coupling) and use the principles of Lowcode for development, which simplifies implementation of new changes to the regulations, accelerates the speed of development and reduces the required expertise of a modeler.","title":"Registry regulations modeling subsystem","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/registry/administrative/regulation-management/overview.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Subsystem functions","hash":"_subsystem_functions","id":2},{"text":"3. Subsystem technical design","hash":"_subsystem_technical_design","id":3},{"text":"4. Subsystem components","hash":"_subsystem_components","id":4},{"text":"5. Technology stack","hash":"_technology_stack","id":5},{"text":"6. Subsystem quality attributes","hash":"_subsystem_quality_attributes","id":6},{"text":"6.1. Security","hash":"_security","id":7},{"text":"6.2. Usability","hash":"_usability","id":8},{"text":"6.3. Modifiability","hash":"_modifiability","id":9}]},"205":{"id":205,"text":"The Business Process Management Service (BPMS) keeps a minimal set of necessary data on the state of running business process (BP) instances inside the database. We provisionally call this group of dedicated tables the Runtime Database. Additionally, to meet audit requirements, the system creates a separate audit log of meaningful events we call the History Event Stream. By default, this event stream is saved to the History Database group of database tables. The HistoryLevel setting controls the amount and level of events generated. HistoryLevel is defined using the camunda.bpm.history-level property. The camunda.bpm.history-level property is defined once during the initial run of the Camunda application. To change this property, you also need to change the history level in the Camunda database: UPDATE ACT_GE_PROPERTY SET VALUE_ = ? WHERE NAME_ = 'historyLevel'; The camunda.bpm.history-level property can have the following properties: NONE (VALUE_ = 0) — No history events are logged into the database, which minimizes impact on performance. ACTIVITY (VALUE_ = 1) — Meaningful history events are logged for these objects: PROCESS, ACTIVITY, TASK. AUDIT (VALUE_ = 2) — In addition to the events provided by the ACTIVITY history level, BP variables events are logged. FULL (VALUE_ = 3) — In addition to the events provided by the AUDIT history level, BP variables change history is logged. Not recommended due to maximum impact on performance. Saving history data to the History Database works synchronously, while the amount and level of events generated is controlled by HistoryLevel. Note that history data accumulation is not limited by default. The following sequence diagram presents the algorithm of logging history events when running BPs: Several anti-patterns of history usage directly influence the Business Process Management Service performance: Using History Database for long-term storage and further querying. Setting HistoryLevel to a redundant level of events logging leads to a considerable increase in the amount of synchronous storage operations and volume of history data. Having no control over the accumulation of history data in the History Database. Using history data from the History Database to serve operational scenarios of user interactions through the cabinet. Using History Database to serve scenarios of viewing history data through the cabinet. Implementing operational and history data usage scenarios separately on the level of individual components and databases. Setting HistoryLevel to the minimal level of logging sufficient for administrators and support engineers to maintain the system. Enabling automatic history cleanup to limit the accumulation of business processes run history data in the BPMS database. Limiting history data’s time to live (TTL) to the corresponding BP execution time when providing this data to support engineers. Generating a separate stream of meaningful BP run history events and publishing them asynchronously through the Kafka message broker for further processing and storage. Processing BP history events messages from the Kafka message broker and saving them to a separate Process Execution History Database in a denormalized form. Making sure history data from the History Database is not used as utility data for operational scenarios. Implementing history data viewing scenarios using the Process Execution History Database. The following diagram presents platform services involved in the implementation and their interactions. The diagram also outlines aspects that are important to consider during the implementation. To minimize impact on the business processes performance and generate a separate history data storage, we need to implement the Process Engine Plugin with the Process History Event Publisher component that will handle events with AUDIT history level from the BPMN Core Engine and publish them to a separate topic of the Kafka message broker. We need to consider implementing a custom level of history events logging to publish messages to Kafka using the following rules: Resource Event type Resource identifier Save operation Process Instance START, UPDATE, END - INSERT OR UPDATE BPM_HISTORY_PROCESS BY PROCESS_INSTANCE_ID Task Instance CREATE, UPDATE, COMPLETE - INSERT OR UPDATE BPM_HISTORY_TASK BY ACTIVITY_INSTANCE_ID Variable Instance CREATE, UPDATE, DELETE System variables: sys-var-process-completion-result, sys-var-process-excerpt-id UPDATE BPM_HISTORY_PROCESS BY PROCESS_INSTANCE_ID To save business processes run history, we need to implement the User Process History Event Subscriber component that will handle the messages from the history events topic of the Kafka message broker and save them into a separate database in a denormalized form. To give cabinet users access to their personal history of business processes and tasks, we need to implement a separate User Process History Management component that will provide the API necessary to support historical querying by authenticated users. The following sequence diagram presents the algorithm of logging history events when running a BP: Data access is limited to the requests from authenticated users. The user ID obtained from the request’s X-Access-Token HTTP header is mandatory when generating a data sample using the startUserId field. When generating a business processes data sample request, a criterion for obtaining a top-level BP is added unconditionally (SUPER_PROCESS_INSTANCE_ID IS NULL). GET /api/process-instances Parameter Type Request part Optional Default value Description X-Access-Token JWT HTTP header No - User access token offset Number Request parameter Yes 0 Record offset limit Number Request parameter Yes 10 Records limit sort String Request parameter Yes desc(endTime) Field to sort by and sort order. Example: asc() / desc() Sample response [ { \"processInstanceId\": \"\", \"superProcessInstanceId\": \"\", \"processDefinitionId\": \"\", \"processDefinitionKey\": \"\", \"processDefinitionName\": \"\", \"businessKey\": \"\", \"startTime\": \"\", \"startUserId\": \"\", \"status\": { \"code\": \"\", \"title\": \"\" } } ] Table 1. Error codes Code Description 200 OK with the request results in the message body 400 Incorrect request (wrong data format) 401 Authentication error (no access token) 500 Server-side error when processing the request Figure 1. Sequence diagram of the request to business processes current data Table 2. Statuses localization Status Localized status (Ukrainian) ACTIVE У виконанні PENDING Очікує виконання задачі SUSPENDED Призупинено адміністратором Data access is limited to the requests from authenticated users. The user ID obtained from the request’s X-Access-Token HTTP header is mandatory when generating a data sample using the startUserId field. When generating a business processes data sample request, a criterion for obtaining a top-level BP is added unconditionally (SUPER_PROCESS_INSTANCE_ID IS NULL). GET /api/history/process-instances Parameter Type Request part Optional Default value Description X-Access-Token JWT HTTP header No - User access token offset Number Request parameter Yes 0 Record offset limit Number Request parameter Yes 10 Records limit sort String Request parameter Yes desc(endTime) Field to sort by and sort order. Example: asc() / desc() Sample response [ { \"processInstanceId\": \"\", \"superProcessInstanceId\": \"\", \"processDefinitionId\": \"\", \"processDefinitionKey\": \"\", \"processDefinitionName\": \"\", \"businessKey\": \"\", \"startTime\": \"\", \"endTime\": \"\", \"startUserId\": \"\", \"excerptId\": \"\", \"status\": { \"code\": \"\", \"title\": \"\" } } ] Table 3. Error codes Code Description 200 OK with the request results in the message body 400 Incorrect request (wrong data format) 401 Authentication error (no access token) 500 Server-side error when processing the request Figure 2. Sequence diagram of the request to business processes history data Table 4. Statuses localization Status Localized status (Ukrainian) completionResult != null Значення completionResult COMPLETED Надання послуги завершено EXTERNALLY_TERMINATED Відмінено адміністратором Data access is limited to the requests from authenticated users. The user ID obtained from the request’s X-Access-Token HTTP header is mandatory when generating a data sample using the assignee field. GET /api/history/tasks Parameter Type Request part Optional Default value Description X-Access-Token JWT HTTP header No - User access token offset Number Request parameter Yes 0 Record offset limit Number Request parameter Yes 10 Records limit sort String Request parameter Yes desc(endTime) Field to sort by and sort order. Example: asc() / desc() Sample response [ { \"activityInstanceId\": \"\", \"taskDefinitionKey\": \"\", \"taskDefinitionName\": \"\", \"processInstanceId\": \"\", \"processDefinitionId\": \"\", \"processDefinitionKey\": \"\", \"processDefinitionName\": \"\", \"startTime\": \"\", \"endTime\": \"\", \"assignee\": \"\" } ] Table 5. Error codes Code Description 200 OK with the request results in the message body 400 Incorrect request (wrong data format) 401 Authentication error (no access token) 500 Server-side error when processing the request When working with the system, users may require the support team to investigate errors and find the reasons why the users' business processes have stopped. To fully utilize the Camunda Cockpit admin interface to monitor business process status and variables, we recommend setting the required level of history events logging using the camunda.bpm.database-history-level property. The camunda.bpm.database-history-level property can have the following values: NONE — No history events are logged into the database, which minimizes impact on performance. ACTIVITY — Meaningful history events are logged for these objects: PROCESS, ACTIVITY, TASK. AUDIT — In addition to the events provided by the ACTIVITY history level, BP variables events are logged. FULL — In addition to the events provided by the AUDIT history level, BP variables change history is logged. Not recommended due to maximum impact on performance. The following default settings are recommended: camunda.bpm.history-level: AUDIT camunda.bpm.database-history-level: ACTIVITY The settings need to be adjusted depending on the system’s stability and the need to improve performance or increase the level of events detail. To further improve performance, it is possible to provide a custom level of history events logging by implementing the TypeBasedHistoryLevel interface and registering it in the Process Engine configuration. The camunda.bpm.history-level property should not be used to define the history events logging level because this property defines the level of generating history events, not the level of their filtering prior to processing. The camunda.bpm.database-history-level custom property should be used instead. The suggested mechanism of business processes history cleanup is intended for process instances and has no impact on the metadata that belongs to the currently installed and outdated versions of Deployment. Should the need arise, removing outdated versions can be implemented separately. To improve performance and reduce the accumulation of history data, it is necessary to apply the following settings to the Business Process Management Service. This implements the automatic process of deleting outdated data using the Removal-Time-based strategy: Setting Value Description historyCleanupEnabled true Enable history cleanup execution on a regular basis. historyCleanupStrategy removalTimeBased Enable the Removal-Time-based history cleanup strategy (removal time = base time + TTL). historyRemovalTimeStrategy end Configure base time to define removal time for BP history cleanup. historyTimeToLive P1D Configure TTL to define removal time for BP history cleanup. historyCleanupBatchWindowStartTime 20:00 Specify the start time of the batch window during which daily cleanup should run. historyCleanupBatchWindowEndTime 22:00 Specify the end time of the batch window during which daily cleanup should run. historyCleanupDegreeOfParallelism 1 Set the degree of parallel execution for history cleanup (the number of job executor threads). historyCleanupBatchSize 500 Set the number of BP instances removed in one cleanup transaction. When working with history data, there are two main scenarios of user interaction through the cabinet: Getting the history of business processes started and finished by the user Getting the history of user’s completed tasks To optimize these requests, history data should be stored in a denormalized form in a separate storage: BPM_HISTORY_PROCESS - Business processes history BPM_HISTORY_TASK - Tasks history A relationship between these tables was not defined on purpose. After denormalization both tables contain all the necessary attributes to serve historical requests and get data independently.","title":"Business processes run history","component":"platform","version":"1.9.6","name":"bpm-history","url":"/platform/1.9.6/arch/architecture/registry/operational/bpms/bpm-history.html","titles":[{"text":"General context","hash":"_general_context","id":1},{"text":"Anti-patterns of history usage","hash":"_anti_patterns_of_history_usage","id":2},{"text":"Principles built into the solution design to support proper history usage","hash":"_principles_built_into_the_solution_design_to_support_proper_history_usage","id":3},{"text":"Technical design of the solution","hash":"_technical_design_of_the_solution","id":4},{"text":"Components of history maintenance","hash":"_components_of_history_maintenance","id":5},{"text":"Publishing history events","hash":"_publishing_history_events","id":6},{"text":"Saving published historical events","hash":"_saving_published_historical_events","id":7},{"text":"History data access API","hash":"_history_data_access_api","id":8},{"text":"System components interaction","hash":"_system_components_interaction","id":9},{"text":"Get user’s business processes history data API","hash":"_get_users_business_processes_history_data_api","id":10},{"text":"Get currently initiated business processes","hash":"_get_currently_initiated_business_processes","id":11},{"text":"Get initiated business processes history","hash":"_get_initiated_business_processes_history","id":12},{"text":"Get completed business process tasks history","hash":"_get_completed_business_process_tasks_history","id":13},{"text":"Configuring history data in Business Process Management Service","hash":"_configuring_history_data_in_business_process_management_service","id":14},{"text":"Logging business processes history events","hash":"_logging_business_processes_history_events","id":15},{"text":"Automatic history cleanup","hash":"_automatic_history_cleanup","id":16},{"text":"Model of business processes history data","hash":"_model_of_business_processes_history_data","id":17}]},"206":{"id":206,"text":"On this page: 1. General description 2. Data structures 2.1. datafactory-ceph-bucket 2.2. file-ceph-bucket 2.3. response-ceph-bucket Registry data management subsystem uses object storage Ceph with Subsystems of distributed data storage for storing data and their digital signatures when entering the register, files of digital documents and data for transmission during inter-service interaction. A bucket for storing data and their digital signatures when entered in the register. Object key generation pattern $UUID Table 1. Description of the structure of the JSON document for storing the system signature Attribute (JSON-path) Data type Description signature String (Base64) Digital seal data JSON Object The signed data structure Table 2. Description of the structure of a JSON document for storing a user request to change registry data Attribute (JSON-path) Data type Description signature String (Base64) User QES data JSON Object The signed data structure x-access-token String JWT token of the user who signed the data Table 3. Description of the structure for checking the integrity of messages during interservice interaction Data type Description String (Base64) A digital stamp is placed on a message during inter-service interaction A bucket for storing digital registry documents. Object key generation pattern $UUID Table 4. Structure description Data type Description byte[] The contents of the registry file A bucket for temporary storage of data for transfer as part of interservice interaction. Object key generation pattern datafactory-$UUID Table 5. Description of the structure of the JSON document for storage Attribute (JSON-path) Data type Description payload JSON Object A data structure representing the result of a request status String (Enum) Operation status details String A detailed description of the operation status","title":"Object data storage","component":"platform","version":"1.9.6","name":"ceph-storage","url":"/platform/1.9.6/arch/architecture/registry/operational/registry-management/ceph-storage.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Data structures","hash":"_data_structures","id":2},{"text":"2.1. datafactory-ceph-bucket","hash":"_datafactory_ceph_bucket","id":3},{"text":"2.2. file-ceph-bucket","hash":"_file_ceph_bucket","id":4},{"text":"2.3. response-ceph-bucket","hash":"_response_ceph_bucket","id":5}]},"207":{"id":207,"text":"On this page: 1. Interaction with Low-Code 2. Modeling 2.1. DB data structure for saving files 3. File operations 3.1. Changing the structures that contain files 3.2. Return file ==Context Files are stored in the Data Factory according to the id reference principle, where the file is directly stored in the Ceph \"bucket\", and the file key and its checksum are stored in the relational registry database. Reading and returning files to the Low-Code system is done by reading or writing a file to a Ceph \"bucket\" accessible to Low-Code. A special \"file\" type is provided for saving files in the Data Factory. Such a record allows you to save one file of any format (archive, multi-page document, picture). ... ... Changing files directly in the Data Factory is prohibited. Each new version of the file is stored in the database with a new unique key. All added files are stored in a Ceph \"bucket\" to maintain data history. Changing the file version is possible only if an \"update\" or \"partialUpdate\" request is received with a key different from the existing one. In case of receiving an empty key of the link to Ceph - the link will be deleted together with the checksum, but the file itself will remain saved. The same principle is used to return a file from Data Factory, the key to the file object in the structure of which the file is a part is returned. If a file with such a key exists in the Low-Code \"bucket\", then this file is overwritten.","title":"Downloading files","component":"platform","version":"1.9.6","name":"file-upload","url":"/platform/1.9.6/arch/architecture/registry/operational/registry-management/file-upload.html","titles":[{"text":"1. Interaction with Low-Code","hash":"_interaction_with_low_code","id":1},{"text":"2. Modeling","hash":"_modeling","id":2},{"text":"2.1. DB data structure for saving files","hash":"_db_data_structure_for_saving_files","id":3},{"text":"3. File operations","hash":"_file_operations","id":4},{"text":"3.1. Changing the structures that contain files","hash":"_changing_the_structures_that_contain_files","id":5},{"text":"3.2. Return file","hash":"_return_file","id":6}]},"208":{"id":208,"text":"On this page: 1. General description 2. Subsystem functions 3. Technical design of the subsystem 4. Component subsystems 5. Technological stack 6. Subsystem Quality Attributes 6.1. Scalability 6.2. Observability 6.3. Auditability 6.4. Security A subsystem whose purpose is to provide access to registry data via the REST API and the Asynchronous Messaging Subsystem, with the ability to write, read, modify, and delete data. The subsystem is also responsible for managing saved files, checking data integrity, and detecting unauthorized changes. Create, read, modify and delete registry entries. Search data by parameters. Implementation of role-based access to data (RBAC). Keeping track of changes. Saving information about the origin of data. Saving associated registry files. Saving signed requests as grounds for changing registry data. Component name Representation in the register Source Repository Appointment Service of synchronous management of registry data registry-rest-api-deployment origin github:/epam/edp-ddm-service-generation-utility github:/epam/edp-ddm-rest-api-core-base-image github:/epam/edp-ddm-kafka-api-core-base-image Processes of synchronous REST API requests to read and write registry data. Asynchronous register data management service registry-kafka-api-deployment origin Processes of asynchronous requests to read and write registry data. Operational database of the registry registry origin github:/epam/edp-ddm-registry-postgres The database containing official service tables and all registry tables is modeled by the regulation administrator. It also captures the history of data changes and checks permissions according to RBAC. Operational storage of digital registry documents ceph:file-ceph-bucket origin - Storage of digital registry documents Input data storage ceph:datafactory-ceph-bucket origin - Storage of signed data when entered in the register. Source data repository ceph:response-ceph-bucket origin - Temporary storage of data for transmission as part of interservice interaction within the subsystem During the design and development of the subsystem, the following technologies were used: Java Spring Spring Boot Spring Cloud Kafka PostgreSQL Ceph The Registry Data Management Subsystem supports both horizontal and vertical scaling. You can read more about scaling subsystems in the relevant sections: architecture/container-platform/container-platform.adoc The Registry Data Management Subsystem supports logging and collection of performance metrics for further analysis through the web interfaces of the corresponding Platform subsystems. You can read more about the design of subsystems in the relevant sections: arch:architecture/platform/operational/logging/overview.adoc arch:architecture/platform/operational/monitoring/overview.adoc The Registry Data Management Subsystem captures significant technical and business events related to system operation by end users using audit event logging subsystem In the Registry Data Management Subsystem, all requests to services that directly perform operations on registry data require authentication. The services of the subsystem are available only in the internal network of the registry.","title":"Registry data management subsystem","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/arch/architecture/registry/operational/registry-management/overview.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Subsystem functions","hash":"_subsystem_functions","id":2},{"text":"3. Technical design of the subsystem","hash":"_technical_design_of_the_subsystem","id":3},{"text":"4. Component subsystems","hash":"_component_subsystems","id":4},{"text":"5. Technological stack","hash":"_technological_stack","id":5},{"text":"6. Subsystem Quality Attributes","hash":"_subsystem_quality_attributes","id":6},{"text":"6.1. Scalability","hash":"_scalability","id":7},{"text":"6.2. Observability","hash":"_observability","id":8},{"text":"6.3. Auditability","hash":"_auditability","id":9},{"text":"6.4. Security","hash":"_security","id":10}]},"209":{"id":209,"text":"On this page: 1. General description 2. Database Schema 3. Data structure 3.1. ddm_liquibase_metadata 3.2. ddm_rls_metadata 3.3. ddm_role_permission 3.4. ddm_source_application 3.5. ddm_source_business_process 3.6. ddm_source_system The registry database contains both official service tables and all registry tables modeled by the regulation administrator. Service tables are created in the public schema when the registry is created. Registry tables are created in the `registry' scheme when deploying the regulation. This document deals with service tables. Legend Unresolved include directive in modules/arch/pages/architecture/registry/operational/registry-management/registry-db.adoc - include::partial$architecture-workspace/documentation-templates/component-design-template/db-schema-legend.adoc[] The metadata is obtained from the data model of the regulation. Data API is built on their basis. Currently, each type of data model change uses its own metadata recording format, so in most cases the contents of the columns do not correspond to their original purpose. Column name Description Row ID change_type text Type of change change_name text Name of change attribute_name text Attribute name attribute_value text Attribute value created_at timestamp with time zone Record creation time Uniqueness constraint change_name, change_type, attribute_name, attribute_value Configuring Row-Level Security Rules for Data API Requests Column name Description rls_id integer (PK) Row ID name text Name of rule type text Type of operation read write jwt_attribute text The name of the attribute of the jwt-token, in which the values by which the filtering takes place are transferred check_column text The name of the discriminator column on which the filtering takes place check_table text The name of the table or representation of the search criteria to which the rule applies Uniqueness constraint name, type check_table, type Catalog of rights issued for the role. Used for role-based access control (RBAC) to registry data. Column name Description permission_id integer (PK) Row ID role_name text User role name object_name text The name of the table or search criteria for which the permission is granted column_name text The name of the column for which permission is granted operation enum The type of operation for which permission is granted S - reading I - creating U - updating D - deleting created_at timestamp with time zone Permission creation time Uniqueness constraint role_name,object_name,operation,column_name Catalog of applications - data sources. Entries to the directory are added automatically when data is first sent to the registry from the application. Column name Description application_id uuid (PK) Row ID application_name text Application name created_by text The ID of the user at whose request the record was created created_at timestamp with time zone Record creation time Uniqueness constraint application_name Catalog of business processes - data sources. Entries to the directory are added automatically when data is first sent to the registry from the business process. Column name Description business_process_id uuid (PK) Row ID business_process_name text Business process name created_by text The ID of the user at whose request the record was created created_at timestamp with time zone Record creation time Uniqueness constraint business_process_name Catalog of systems - data sources. Entries in the catalog are added automatically when data is first received from the system to the registry. Column name Description system_id uuid (PK) Row ID system_name text System name created_by text The ID of the user at whose request the record was created created_at timestamp with time zone Record creation time Uniqueness constraint system_name","title":"Operational registry database","component":"platform","version":"1.9.6","name":"registry-db","url":"/platform/1.9.6/arch/architecture/registry/operational/registry-management/registry-db.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Database Schema","hash":"_database_schema","id":2},{"text":"3. Data structure","hash":"_data_structure","id":3},{"text":"3.1. ddm_liquibase_metadata","hash":"_ddm_liquibase_metadata","id":4},{"text":"3.2. ddm_rls_metadata","hash":"_ddm_rls_metadata","id":5},{"text":"3.3. ddm_role_permission","hash":"_ddm_role_permission","id":6},{"text":"3.4. ddm_source_application","hash":"_ddm_source_application","id":7},{"text":"3.5. ddm_source_business_process","hash":"_ddm_source_business_process","id":8},{"text":"3.6. ddm_source_system","hash":"_ddm_source_system","id":9}]},"210":{"id":210,"text":"On this page: 1. Overview 2. Modelling and configuring Link Intermediate Throw Event 3. Modelling and configuring Link Intermediate Catch Event Link Event — BPMN-modelling element that provides the ability to interconnect two parts of a business process, and works like a portal. The Link Event is a separate case. This element does not influence the contents of a business process, but simplifies the creation of BPMN-diagrams and allows for the modelling of two interconnnected links as an alternative to sequence flow. Link Event are- most useful when you need to: spread the process diagram through several pages with links for reader navigation. model complex process diagrams with numerous sequence flows. Links allow you to avoid long \"spaghetti\"-diagrams. Link Events can be used exclusively as intermediate events. :Link Event is only used within a single business process. It can’t interconnect a parent process with a subprocess, or different business processes. Check the official documentation for more info on Link Events in Camunda. There are 2 types of Link Events: Link Intermediate Throw Event — is a source point (point A) of one business process section to be interconnected with another section. Link Intermediate Catch Event — is a target point (point B) of a business process section that is being interconnected with another section. Link Intermediate Throw Event and Link Intermediate Catch Event elements allow us to interconnect two parts of a business process — source and target into a single flow. Link Events modelling prerequisites To model Link Events you need to define enter and exit points of the business process section. To model and configure a Link Intermediate Throw Event, take the following steps: Open Camunda Modeler application and create a new BPMN diagram by clicking BPMN diagram, or use a scheme with a pre-made business process. + Diagram window will appear. + Add Link Intermediate Throw Event element to the enter point of a business process section: From the left panel, drag Create Intermediate/Boundary Event to the modelling canvas. Select the event and define its type by clicking the key icon (Change type), and selecting Link Intermediate Throw Event from the menu. Click the Link element and navigate to the configuration panel. In the General tab, enter element name into Name field (for example, Link-A), then enter link name into Link Name field (for example, Link-A-B). As a result, Link Intermediate Throw Event is modelled and configured. To model and configure a Link Intermediate Catch Event, take the following steps: Open Camunda Modeler application and create a new BPMN diagram by clicking BPMN diagram, or use a scheme with a pre-made business process. + Diagram window will appear. + Add Link Intermediate Catch Event element to the enter point of a business process section: From the left panel, drag Create Intermediate/Boundary Event to the modelling canvas. Select the event and define its type by clicking the key icon (Change type), and selecting Link Intermediate Catch Event from the menu. Click the Link element and navigate to the configuration panel. In the General tab, enter element name into Name field (for example, Link-b), then enter link name into Link Name field (for example, Link-A-B). AUTION: Link Name value in the Link Intermediate Catch Event must be the same as Link Name field value in Link Intermediate Throw Event. As a result, Link Intermediate Catch Event is modelled and configured.","title":"","component":"platform","version":"1.9.6","name":"bp-link-events","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/bp-link-events.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modelling and configuring Link Intermediate Throw Event","hash":"link-throw-event","id":2},{"text":"3. Modelling and configuring Link Intermediate Catch Event","hash":"link-catch-event","id":3}]},"211":{"id":211,"text":"On this page: 1. Overview 2. Modelling Error End Event 3. Modelling Error Start Event for a subprocess 4. Modelling Error Boundary Interrupting Intermediate Event An Error Event is an event initiated by a certain error. Using Error Event allows the business process model to react on events within a task (business-error) and trigger alternative ways of process execution. During BPMN-modelling, only business-errors are processed. They are different from Java-exceptions, which are processed in another way by default. The following Error Event types are used in the modelling: Error End Event — an event modelled at the end of a business process, or subprocess. Error Sub-Process Interrupting Start Event — an event modelled at the initiation of subprocess start with a business-error. Error Boundary Interrupting Intermediate Event — an event modelled at the boundary between a container and a transactional subprocess or task. To model and configure an Error End Event, take the following steps: Model all the required business process activities. Add an end event to the business process. Select Error End Event in configuration. On the General tab, configure the element: In the Id field, enter element identificator, or leave default value. In the Name field, enter element name. Expand the Details block by clicking +. In the Name field, enter error name. For example, errorNoValid. Optionally, in the Code field, enter error variable. For example, codeErrorNoValid. In the Global Error referenced field, select error element link. Values in this field are set automatically and corresponds to the error name defined in the Name field. In this case — errorNoValid. If error code variable is also defined, Global Error referenced value will also be set automatically, according to the defined code. In our case, the value will be: errorNoValid (code=codeErrorNoValid). Optionally, in the Message field, enter error data (description) that will be sent by the system. If the Error End Event element sends an Error Sub-Process Interrupting Start Event or Error Boundary Interrupting Intermediate Event signal to the receiving element, then Global Error referenced value of the receiving and transferring elements must be identical. This connection is not necessary, but rather can be called for by the business process specifics, as Error Sub-Process Interrupting Start Event and Error Boundary Interrupting Intermediate Event can be initiated by a business-error that appeared during task (user task, service task, etc.) execution. Error Start Event modelling process is described in the following document. Error Boundary Interrupting Intermediate Event modelling process is described in the following document.","title":"Error Event","component":"platform","version":"1.9.6","name":"error-event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/error-event.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modelling Error End Event","hash":"error-end-event","id":2},{"text":"3. Modelling Error Start Event for a subprocess","hash":"error-start-event","id":3},{"text":"4. Modelling Error Boundary Interrupting Intermediate Event","hash":"error-boundary-interrupting-event","id":4}]},"212":{"id":212,"text":"On this page: 1. Overview 2. Message End Event modelling and configuring 3. Message Start Event modelling and configuring 4. Intermediate Throw Event modelling and configuring 5. Message Intermediate Catch Event modelling and configuring Message event — is a business process event used to transfer information from one business process to another one, or a subprocess. The generated outgoing message (sender-event) activates the element that receives the corresponding message (receiver-event). The event elements that send and receive messages must be interconnected and have the corresponding information exchange configuration. The following types of message events are used in modelling: Message End Event — an event that is modelled at the end of a business process or subprocess. It is configured to send a data array, certain attributes, or a text message. Message Start Event — an event that is modelled at the initiation of a business process or subprocess start. It is configured to receive a data array, certain attributes, or a text message from End Message Event or Message Intermediate Throw Event element. Message Intermediate Throw Event — an event that is modelled during business process or subprocess running. It is configured to send a data array, certain attributes, or a text message. Message Intermediate Catch Event — an event that is modelled during business process or subprocess running. It is configured to receive a data array, certain attributes, or a text message from End Message Event or Message Intermediate Throw Event element. To model and configure Message End Event, make the following configurations: Prerequisites Prepare 2 modelled business process within 2 pools that will interact with each other via messages (here we will use Send Message and Receive Message processes). Add a process end event in the Send Message business process. Select the process end event and define its type by clicking the key icon and selecting Message End Event in configuration. On the General tab configure a delegate for message data sending: In the Id field, enter element identificator, or use the default value. In the Name field, enter element name. In the Implementation field, select Delegate Expression from the list. In the Delegate Expression field, enter delegate value — ${startProcessByMessageDelegate}. As opposed to other delegate expressions for business process modelling that have developed templates, the startProcessByMessageDelegate delegate used in Message events is configured manually. Expand the Details block by clicking the + button. In the Global Message Name field, enter a name for the message receiving element (for example startProcessReceiveMessageAfterSystemTask). The name must be identical for two interconnected elements - the data sending element, and the data receiving element. One message sending element can be interconnected with only one message receiving element. In the Global Message referenced field, select data receiving element link value from the list (referenced in Global Message Name field). If several interconnected elements of message events are used in the business process modelling within one .bpmn-file, then the dropdown list will show all the previously set values of message receiving elements. Be attentive when configuring this parameter and select the corresponding element. When changing values in the Global Message referenced field, an identical value automatically fills in the Global Message Name field. Navigate to the Input\\Output tab and configure data array, attributes or text message that will be transferred to the receiving business process or subprocess: Click the + button in front of the Input Parameters section. This will automatically enter the incoming parameter, which you need to configure according to the data that is to be transferred to the other business process or subprocess. In the Local Variable Name field, enter the name for the local variable, or use default name. In the Variable Assignment Type field, select variable type and configure it in the following way: There are for ways to assign the variable: String or Expression; Script; List; Map. When selecting String or Expression type, set the transferred variable expression in the Variable Assignment Value field via JUEL-function. You can find more details on the JUEL-functions supported by the Platform on the following page: bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. When selecting Script type, enter script data in the Script Format, Script Type and Script fields. When selecting List type, click + (Add Value), and set variable value (text or JUEL-function) in the Value field. When selecting Map type, click + (Add Entry), set variable name in the Key field, and set variable value (text or JUEL-function) in the Value field. If needed, click + in front of the Input Parameters section, and configure the next variable value. Example 1. Examples of variable configuration for the message end event Use business process reference example for details: Process_checkIntermediateThrowEvent.bpmn. To model and configure Message Start Event, make the following configurations: Prerequisites Prepare 2 modelled business process within 2 pools that will interact with each other via messages (here we will use Send Message and Receive Message processes). Add a process start event in the Receive Message business process. Select the process start event and define its type by clicking the key icon and selecting Message Start Event in configuration. In the General tab, configure the message receiving element: In the Id field, enter element identificator, or use the default value. In the Name field, enter element name. Click + in front of the Details section. In the Global Message Name field, enter the name of the data receiving element with the same value that was set for message event sender (End Message Event or Message Intermediate Throw Event). For example, startProcessReceiveMessageAfterSystemTask. The name must be identical for two interconnected elements - the data sending element, and the data receiving element. One message sending element can be interconnected with only one message receiving element. In the Global Message referenced field, select data receiving element link value from the list (referenced in Global Message Name field). If several interconnected elements of message events are used in the business process modelling within one .bpmn-file, then the dropdown list will show all the previously set values of message receiving elements. Be attentive when configuring this parameter and select the corresponding element. When changing values in the Global Message referenced field, an identical value automatically fills in the Global Message Name field. To model and configure Intermediate Throw Event, make the following configurations: Prerequisites Prepare 2 modelled business process within 2 pools that will interact with each other via messages (here we will use Send Message and Receive Message processes). Add an Intermediate/Boundary Event event in the Receive Message business process. Model the interaction between the two processes. Select the intermediate event and define its type by clicking the key icon and selecting Message Intermediate Throw Event in configuration. On the General tab configure a delegate for message data sending: In the Id field, enter element identificator, or use the default value. In the Name field, enter element name. In the Implementation field, select Delegate Expression from the list. In the Delegate Expression field, enter delegate value — ${startProcessByMessageDelegate}. As opposed to other delegate expressions for business process modelling that have developed templates, the startProcessByMessageDelegate delegate used in Message events is configured manually. Expand the Details block by clicking +. * In the Global Message Name field, enter a name for the message receiving element (for example startProcessReceiveMessageExec). The name must be identical for two interconnected elements - the data sending element, and the data receiving element. One message sending element can be interconnected with only one message receiving element. In the Global Message referenced field, select data receiving element link value from the list (referenced in Global Message Name field). If several interconnected elements of message events are used in the business process modelling within one .bpmn-file, then the dropdown list will show all the previously set values of message receiving elements. Be attentive when configuring this parameter and select the corresponding element. When changing values in the Global Message referenced field, an identical value automatically fills in the Global Message Name field. Navigate to the Input\\Output tab and configure data array, attributes or text message that will be transferred to the receiving business process or subprocess: Input/output parameters of the delegate are descriped in the Message End Event modelling and configuring section. Example 2. Configuration examples for the Message Intermediate Throw event Use business process reference example for details: Process_checkIntermediateThrowEvent.bpmn. To model and configure Message Intermediate Catch Event, make the following configurations: Prerequisites Prepare 2 modelled business process within 2 pools that will interact with each other via messages (here we will use Send Message and Receive Message processes). В рамках бізнес-процесу, що прийматиме інформацію (тут — Receive Message), додайте проміжну подію. Add an intermediate event in the Receive Message business process. Select the intermediate event and define its type by clicking the key icon and selecting Message Intermediate Catch Event in configuration. On the General tab, configure the message data receiving element: In the Id field, enter element identificator, or use the default value. In the Name field, enter element name. Click + in front of the Details section. In the Global Message Name field, enter the name of the data receiving element with the same value that was set for message event sender (End Message Event or Message Intermediate Throw Event). For example, sendIntermediateMessage. The name must be identical for two interconnected elements - the data sending element, and the data receiving element. One message sending element can be interconnected with only one message receiving element. In the Global Message referenced field, select data receiving element link value from the list (referenced in Global Message Name field). If several interconnected elements of message events are used in the business process modelling within one .bpmn-file, then the dropdown list will show all the previously set values of message receiving elements. Be attentive when configuring this parameter and select the corresponding element. When changing values in the Global Message referenced field, an identical value automatically fills in the Global Message Name field.","title":"Message event","component":"platform","version":"1.9.6","name":"message-event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/message-event.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Message End Event modelling and configuring","hash":"message-end-event","id":2},{"text":"3. Message Start Event modelling and configuring","hash":"message-start-event","id":3},{"text":"4. Intermediate Throw Event modelling and configuring","hash":"message-intermediate-throw-event","id":4},{"text":"5. Message Intermediate Catch Event modelling and configuring","hash":"message-intermediate-catch-event","id":5}]},"213":{"id":213,"text":"On this page: 1. Overview 2. Timer types and their configuration 3. Time Intermediate Boundary Interrupting Event modelling 4. Time Intermediate Catch Event modelling 5. Example of using Timer Events in a business process A Timer Event is an event that is activated by a defined timer. It can be a defined time and date, or a time interval (for example, \"every Monday\"). Each timer has its own waiting time and corresponding configuration. Timer can’t be an end event, due to process approach. We differentiate 2 types of Timer Events currently supported by the Platform: Time Intermediate Boundary Interrupting Event — an event that works like a stopwatch and processes events by activating a timer. When the timer triggers (for example, after a certain interval), a sequence flow that comes from the intermediate timer event is executed. The current flow of business process execution is not paused during the event waiting period. Basically, when an event execution is triggered, provided the event has an interconnected boundary event, the flow is continued. When a timer is triggered (for example, after a certain interval), the activity is nullified, and an alternative sequence flow that comes from the timer event is executed. Time Intermediate Catch Event — an event that acts like a stopwatch or an alarm clock, and cuts business process execution at a certain point, waiting for the execution of the next element of the business process (continuing the sequence flow execution). The current flow of business process execution is paused during the event waiting period. The timers used in Timer Events modelling can be defined by: Date Date timer sets a moment in time, defined as a combined representation of date and time according to ISO 8601 standard. Optionally, it can contain time zone identificator. For example, 2019-10-02T08:09:40+02:00[Europe/Kyiv] (follow the link more info). Duration Duration timer is set according to the ISO 8601 duration format, which defines the amount of time in a certain time period. For example, P14DT1H30M — 14 days, 1 hour and 30 minutes (follow the link more info). If the duration is set to zero or a negative value, the timer will trigger immediately. Cycle Cycle timer is defined as ISO 8601 repeated interval format; it includes duration and the number of cycles. For example, R5/PT10S — repeat every 10 second, 5 times (follow the link more info). If the number of cycles is not set, the timer will trigger infinitely, until cancelled. To model Time Intermediate Boundary Interrupting Event, take the following steps: Open Camunda Modeler application and create a new BPMN diagram by clicking BPMN diagram. This will open the new diagram window. Add the Intermediate Boundary Interrupting Event element Select Create Intermediate/Boundary Event on the panel on the left and drag it onto the modelled task (in this case — user task). To add a timer you can use any type of task: user, service, script, etc. Select an event, define its type by clicking the key icon (Change type) and selecting Timer Boundary Event from the menu. Click the Timer Boundary Event element, navigate to the configuration panel and configure the event: In the Name field, enter element name (optional). It can be timer purpose, or business-related name. In the Timer Definition Type field, set timer type by selecting one from the dropdown. For example, Duration (follow the link more info) In the Timer Definition field, define timer duration. For example, PT3S for 3 seconds. In Camunda, date and time for timers are set in a special format, according to ISO 8601 standard (follow the link more info). As a result, your Time Intermediate Boundary Interrupting Event is modelled and configured. To model Time Intermediate Catch Event, make the following steps: Open Camunda Modeler application and create a new BPMN diagram by clicking BPMN diagram. This will open the new diagram window. First, model a start event and a user task. Add the Time Intermediate Catch Event element: On the left panel, select Create Intermediate/Boundary Event and drag it to the modelling canvas. * Select an event, define its type by clicking the key icon (Change type) and selecting Timer Intermediate Catch Event from the menu. Click the Timer Intermediate Catch Event element, navigate to configuration panel and configure the event: In the Name field, enter element name (optional). It can be timer purpose, or business-related name. In the Timer Definition Type field, set timer type by selecting one from the dropdown. For example, Duration (follow the link more info) In the Timer Definition field, set time and date for the timer. For example, 2022-15-05T16:30:00+03:00[Europe/Kyiv] — timer will trigger on May 15th, 2022 at 16:30 Kyiv time (UTC+3). In Camunda, date and time for timers are set in a special format, according to ISO 8601 standard (follow the link more info). As a result, your Time Intermediate Catch Event is modelled and configured. In this example we will review the logic of 2 types of Timer Event, using a simple synthetic business process, which registers transactions as a bank service. Start event initiates the process. The bank service awaits money transfer to the client’s account or card. A Time Intermediate Boundary Interrupting Event modelled in the service task has a timer set on a certain date (15.05.2022). If the transfer is made before 15.05.2022, the next element of the main sequence flow will initiate. If the transfer wasn’t made before 15.05.2022, main flow activity is nullified, and an alternative sequence flow that comes from the timer is executed — the service must form a report on account balance and end the process. In this case we see that the event cancelled the main flow, and the token went along the alternative branch. The money was transferred, and the service must wait 2 hours, as Time Intermediate Catch Event is configured. In this case, activity is not interrupted, and the main flow is suspended for the timer period. After the 2 hours passed, the main flow continued, the service will send the client a notification about the money transfer, and end the process.","title":"Timer Event","component":"platform","version":"1.9.6","name":"timer-event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/timer-event.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Timer types and their configuration","hash":"_timer_types_and_their_configuration","id":2},{"text":"3. Time Intermediate Boundary Interrupting Event modelling","hash":"time-interm-boundary-interrupt-event","id":3},{"text":"4. Time Intermediate Catch Event modelling","hash":"time-interm-catch-event","id":4},{"text":"5. Example of using Timer Events in a business process","hash":"_example_of_using_timer_events_in_a_business_process","id":5}]},"214":{"id":214,"text":"On this page: 1. Overview 2. Modeling an exclusive event-based gateway An exclusive event-based gateway is an exclusive OR operator where alternative paths of a process are determined by events (such as a message, timer, or condition). Simply put, this operator enables you to make decisions based on certain events. An exclusive event-driven gateway must have at least two output sequence flows. The output control flows of this gateway should be associated only with Intermediate Catching Events or Receive Tasks. The Platform supports two event types for event-based gateways: Timer and Message, plus a Receive Task. When the gateway is activated, the process waits for the gateway to select one of the events. The business process flow is directed by the branch where the event occurred or the task was completed first. The rest of the events are ignored. To model a business process using an exclusive event-based gateway, perform these steps: Open the Camunda Modeler app and create a new BPMN diagram by clicking the BPMN diagram button. A new diagram window opens. Model a start event and a task of any type (for example, a user task). Attach and configure an Event-based Gateway element: From the toolbar on the left, drag the Create Gateway element to the diagram canvas. Select the event, click the wrench icon (Change type), and select the Event based Gateway item from the menu. Select the gateway one more time and switch to the properties panel. Enter a gateway name (optional) and attach one of the available elements: ReceiveTask; MessageIntermediateCatchEvent; TimeIntermediateCatchEvent; ConditionIntermediateCatchEvent; SignalIntermediateCatchEvent. An event-based gateway element can only interact with Intermediate Catching Events or Receive Tasks. As a result, an exclusive event-based gateway is configured. An example of a business process using an exclusive event-based gateway","title":"Exclusive event-based gateway","component":"platform","version":"1.9.6","name":"event-based-gateway","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/gateways/event-based-gateway.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modeling an exclusive event-based gateway","hash":"_modeling_an_exclusive_event_based_gateway","id":2}]},"215":{"id":215,"text":"Exclusive event-based gateway","title":"Gateways","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/gateways/overview.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"216":{"id":216,"text":"On this page: 1. Overview 2. Types of Call Activity element template extensions 3. Modelling business processes using Call Activity extensions 3.1. Process modelling stages 3.2. Creating parent process pool 3.3. Modelling start event of the parent process 3.4. Modelling the user task for entering online order data 3.5. Modelling Call Activity to call external subprocess 3.6. Creating a pool for the global subprocess 3.7. Modelling start event for the global subprocess 3.8. Modelling the \"Decision for order confirmation\" user task 3.9. Modelling the script task to prepare the data for output 3.10. Modelling global subprocess end event 3.11. Modelling the user task for order payment 3.12. Modelling main process end event 4. Restricting nesting levels when calling subprocesses with Call Activity 5. Displaying business processes in user Portals Call Activity — is a standard BPMN-modelling element supported by Camunda Engine. It allows you to call another process as part of the currently running process. Call Activity is similarl to embedded subprocess, but is external, meaning it’s modelled within a separate business process pool, and can be used multiple times by different Parent[1] business processes. In Camunda BPMN the calling of global (external) subprocess can be executed between processes modelled in separate .bpmn files, or within a single .bpmn file. This way an independent business process can start another one, and vice versa, The registry platform currently supports only one type — calling a global subprocess from a Parent process. From a global subprocess you can execute the Call Activity — a subprocess of the 2nd level (see ref:#restrictions[]). Example. Calling between processes, modelled in separate BPMN files Example. Calling between processes, modelled in one BPMN file. When Call Activity element is brought into action, a new instance is created for the process the element is linked to. The new instance is activated during none start[2] event. The process can have start events of other types, but they are ignored. When the created instance is ended, the call action is stopped, and the sequence flow continues. In other words, when Call Activity is executed, the process that initiated the call awaits the end of the global subprocess, and continues after that. To simplify business process modelling within the registry Platform, a number of extension (delegate) types that are configured using the developed Call Activity element templates, were implemented: Call Activity — general template for global subprocess call. Check excerpt status — specialized template for the calling of check excerpt status subprocess. We differentiate Call Activity as a BPMN element and Call Activity as this element’s extension that is configured using the callActivity.json developed template, used to call the global subprocess. Let’s look at the application of Call Activity BPMN-element using callActivity.json developed template-extension to call global subprocesses on the example of online order processing business processes (further in the text — main or parent process) and confirmation of the order (further in the text — subprocess). On the modelling stage it is required to create 2 business process pools and save them within one .bpmn file. To model 2 processes (the parent process and the global subprocess in our case) using Call Activity, we need to go through the following stages: Creating parent process pool. Modelling start event of the parent process. Modelling the user task for entering online order data. Modelling Call Activity to call external subprocess. Creating a pool for the global subprocess. Modelling start event for the global subprocess. Modelling the \"Decision for order confirmation\" user task. Modelling the script task to prepare the data for output. Modelling global subprocess end event. Modelling the user task for order payment. Modelling main process end event. To model a pool for the parent process, take the following steps: Parent process pool modelling must be performed within the Create Pool/Participant element. Open Camunda Modeler and create a new BPMN diagram by clicking File menu → New File → BPMN Diagram. On the left panel, find Create pool/Participant and drag it onto the modelling canvas. Fill in the fields with the corresponding values: In the Participant Name field, enter the name for the pool — Creating an order on the website. In the Process id enter business process ID — create-order. In the Process Name field enter process name — Creating an order on the website. To model a start event, take the following steps: On the left panel, find the CreateStartEvent and drag it onto the modelling canvas. On the right panel, fill in the following parameters with the corresponding values: In the Name field, enter the name for the start event — Cart; In the Initiator field, enter initiator. initiator — is a special variable set for the user who started the process. + To create a user task for data entering, take the following steps: Create a new task, define its type by clicking the key icon and selecting User Task from the menu. On the right panel, click Open Catalog, select User Form template, and click Apply to confirm. On the right panel, fill in the following fields: In the Id field, set task ID — user-form-1. Task ID is automatically set by default. Enter it manually if required. In the Name field, enter task name — Order data form. In the Form key field, enter form key that will correspond with the form service name — add-order-bp-add-order-test. In the Assignee field, enter the variable of the user who initiated the process instance — ${initiator}. To model Call Activity, take the following steps: You can find an example of Call Activity delegate configuration here. Create Call Activity element. Perform the following configurations: In the Name field, enter element name — Decision on order confirmation. In the Called Element field, set the ID of the global subprocess to be called — order-confirm. In the Input data field, set the input data to be sent to the called business process. The parameters must be transferred in the form of key-value pairs (here — ${submission('user-form-1').formData}). You can find more detauls on using the submission() function on the following page: registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. In the Output variable name set the payload-carrying variable name (here — callActivityOutput). This way the current configuration starts a global subprocess from the main pool. The main process can’t end while the global subprocess is running. Model a pool for the global subprocess as shown in the example Creating parent process pool. On the left panel, find the Create pool/Participant element and drag it to the modelling canvas. Fill in the following fields with the corresponding values: In the Participant Name field, enter the name of the pool displayed in the modeller — Decision on order confirmation. In the Process id field, enter business process ID — order-confirm. In the Process Name field, enter business process name — Decision on order confirmation. Model a start event for the global subprocess as shown in the example Modelling start event of the parent process. To do that, take the following steps: On the left panel, find the CreateStartEvent element and drag it to the modelling canvas. On the right panel, fill in the following parameters with the corresponding values: In the Name field, enter the name of the start event — Receiving order data. In the Initiator field, enter initiator. initiator — is a special variable set for the user who started the process. Create the \"Decision for order confirmation\" user task based on the example Modelling the user task for entering online order data, by taking the following steps: Create a new task, define its type by clicking the key icon and selecting User Task from the menu. On the right panel, click Open Catalog, select User Form template, and click Apply to confirm. On the right panel, fill in the following fields: In the Id field, enter task ID — user-form-2. Task ID is automatically set by default. Enter it manually if required. In the Name field, enter task name — Decision for order confirmation. In the Form key field, enter form key that will correspond with the form service name — add-order-bp-order-confirm-test. In the Assignee field, enter the variable of the user who initiated the process instance — ${initiator}. Create a script task for data processing and preparation for output. The task purpose is to take the data that the user filled in the form, using groovy-script with submission() function, form an output in JSON format, and write it into callActivityOutput variable, defined in Output variable name field when modelling Call Activity of the main process. Create a new task, define its type by clicking the key icon and selecting Script Task from the menu. On the right panel, fill in the following fields: In the Name field, enter task name — Preparing data for output In the Script Format field, enter script format — groovy. In the Script Type field, enter script type — Inline Script. In the Script field, enter the groovy-script: var data = submission('user-form-2').formData execution.removeVariable('outputPayload') set_transient_variable('outputPayload', S(data, 'application/json')) Create a business process end event. On the right panel, set the Name parameter to Order confirmed. The data received as a result of the \"Decision for order confirmation\" global subprocess execution are written into the callActivityOutput variable, defined in the Output variable name field when modelling Call Activity of the main process, and can be used on the order payment form in the main process. After that, the main process execution continues. Create the user task for order payment based on the example Modelling the user task for entering online order data, by taking the following steps: Create a new task, define its type by clicking the key icon and selecting User Task from the menu. On the right panel, click Open Catalog, select User Form template, and click Apply to confirm. On the right panel, fill in the following fields: In the Name field, enter task name — Order payment. In the Form key field, enter form key that will correspond with the form service name — add-order-bp-view-order-test. In the Assignee field, enter the variable of the user who initiated the process instance — ${initiator}. Create the business process end event. On the right panel, fill in Name parameter with Order paid. The Platform has certain restrictions on how many nesting levels are allowed for business processes during the calling of global subprocesses with Call Activity. For proper calling of global subprocesses with Call Activity functionality operation, use no more than 3 nesting levels for bysiness processes. This means: main process, global subprocess of the 1st level, and global subprocess of the 2nd level. Users of Officer and Citizen Portals will see only the names of parent business processes of the highest level on My services and My tasks pages during the execution of called or in-built subprocesses. If business process A called subprocess B, and subprocess B called subprocess C, the user will only see business process A name in the Portal. 1. Parent Process is a process that initiates subprocess start. A subprocess is a Child Process to a Parent Process. 2. None events are undefined events, also called \"empty\".","title":"Call activity","component":"platform","version":"1.9.6","name":"call-activities","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/call-activities.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Types of Call Activity element template extensions","hash":"_types_of_call_activity_element_template_extensions","id":2},{"text":"3. Modelling business processes using Call Activity extensions","hash":"element-temp-call-activity","id":3},{"text":"3.1. Process modelling stages","hash":"_process_modelling_stages","id":4},{"text":"3.2. Creating parent process pool","hash":"create-pool-bp-1","id":5},{"text":"3.3. Modelling start event of the parent process","hash":"bp-start-event","id":6},{"text":"3.4. Modelling the user task for entering online order data","hash":"bp-user-form-insert-data-online-order","id":7},{"text":"3.5. Modelling Call Activity to call external subprocess","hash":"bp-call-activity","id":8},{"text":"3.6. Creating a pool for the global subprocess","hash":"create-pool-bp-2","id":9},{"text":"3.7. Modelling start event for the global subprocess","hash":"bp-start-event-called-process","id":10},{"text":"3.8. Modelling the \"Decision for order confirmation\" user task","hash":"bp-user-form-approval-decision","id":11},{"text":"3.9. Modelling the script task to prepare the data for output","hash":"bp-script-task","id":12},{"text":"3.10. Modelling global subprocess end event","hash":"bp-end-event-called-process","id":13},{"text":"3.11. Modelling the user task for order payment","hash":"bp-user-form-order-payment","id":14},{"text":"3.12. Modelling main process end event","hash":"bp-end-event-caller-process","id":15},{"text":"4. Restricting nesting levels when calling subprocesses with Call Activity","hash":"restrictions","id":16},{"text":"5. Displaying business processes in user Portals","hash":"_displaying_business_processes_in_user_portals","id":17}]},"217":{"id":217,"text":"On this page: 1. Overview 2. Using embedded subprocess in modelling 2.1. Process modelling stages 2.2. Creating a pool for the business process 2.3. Modelling main process start event 2.4. Modelling the user task for entering online order data 2.5. Modelling embedded subprocess 2.5.1. Modelling subprocess start event 2.5.2. Creating the changes approval user task 2.5.3. Modelling subprocess end event 2.6. Modelling main process end event An Embedded subprocess is a subprocess that is configured and run inside the main (parent) business process. An embedded subprocess allows the user to avoid running two business processes separately, leaving the Portal every time to start each process. Embedding a subprocess provides a smooth transfer between business processes without separating the main process and the subprocess. For example, the main process has a purpose of entering contract data, but it requires approval of the changes by an authorized officer. This approval process logically fits into an embedded subprocess, thus having a dedicated process for everything, and still fitting into one sequence flow. An embedded subprocess must only contain one none start event[1]. On embedded subprocess activation, a Start event initiates it. The subprocess remains active while at least one element in its container is active. At the end of the last element of the subprocess, meaning the final event, the subprocess ends, and the output sequence flow continues in the Parent[2] process. We’ll show how to use the Embedded Subprocess BPMN-element with a data input business process (_further in this text — main or parent process) and changes approval embedded subprocess (_further in this text — subprocess) as an example. At the modelling stage, create 1 pool with a business process and save it in one .bpmn file. To model 2 processes (in our case — the main process and the subprocess), using Embedded subprocess element, we’ll go through the following stages: Creating a pool for the business process. Modelling main process start event. Modelling the user task for entering online order data. Modelling embedded subprocess. Modelling subprocess start event. Creating the changes approval user task. Modelling subprocess end event. Modelling main process end event. Model a pool for the main process by taking the following steps: Modelling of business process diagram must be performed within the Create Pool/Participant element. Open Camunda Modeler and create a new BPMN diagram by clicking File → New File → BPMN Diagram in the top left corner. On the left panel, find the Create pool/Participant element and drag it to the modelling canvas. Fill in the following fields with the corresponding values: In the Participant Name field, enter the name of the pool — Data input business process. In the Process id field, enter business process ID (for example, processId). In the Process Name field, enter business process name — Data input business process. Create a start event by taking the following steps: On the left panel, find CreateStartEvent element and drag it to the modelling canvas. On the right panel, fill in the following parameters with the corresponding values: In the Name field, enter name for the start event — Process start. In the Initiator field, enter initiator. initiator — is a special variable set for the user who started the process. To create a user task for data entering, take the following steps: Create a new task, define its type by clicking the key icon and selecting User Task from the menu. On the right panel, click Open Catalog, select User Form template, and click Apply to confirm. On the right panel, fill in the following fields: In the Id field, set task ID — user-form-1. In the Name field, enter task name — Order data form. In the Form key field, enter form key that will correspond with the form service name — add-order-bp-add-order-test. In the Assignee field, enter the variable of the user who initiated the process instance — ${initiator}. Next, we need to model the embedded subprocess. It is configured inside a dedicated container within the same pool. On the left panel, find the Create expanded SubProcess element, and drag it into the pool. Next, model the three elements within the subprocess: subprocess start event; user task for changes approval; subprocess end event. Configure subprocess start event. As opposed to configuring the main process, subprocess start event is added automatically, along with the Create expanded SubProcess container. On the right panel, fill in the Name field with the start event name — Subprocess start. Create the user task for changes approval by taking the following steps: Create a new task, define its type by clicking the key icon, and selecting User Task from the menu. On the right panel, click Open Catalog, select User Form template, and click Apply to confirm. On the configuration panel, fill in the following fields: In the Name field, enter task name — Making decision on contract approval. In the Form key field, enter the form key that corresponds with the service name of the form — add-applicationsecond. In the Assignee field, enter the variable used to store the user that initiated the instance — ${initiator}. Create subprocess end event. On the right panel, for the Name parameter, enter the value Subprocess end. Create main process end event. On the right panel, for the Name parameter, enter the value Process end. 1. None events are undefined events, also called \"empty\". 2. Parent Process is a process that initiates subprocess start. A subprocess is a Child Process to a Parent Process.","title":"Embedded subprocess","component":"platform","version":"1.9.6","name":"embedded-subprocess","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/embedded-subprocess.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Using embedded subprocess in modelling","hash":"_using_embedded_subprocess_in_modelling","id":2},{"text":"2.1. Process modelling stages","hash":"_process_modelling_stages","id":3},{"text":"2.2. Creating a pool for the business process","hash":"create-pool-bp","id":4},{"text":"2.3. Modelling main process start event","hash":"bp-start-event","id":5},{"text":"2.4. Modelling the user task for entering online order data","hash":"bp-user-form-insert-data","id":6},{"text":"2.5. Modelling embedded subprocess","hash":"create-expanded-subprocess","id":7},{"text":"2.5.1. Modelling subprocess start event","hash":"bp-start-event-subprocess","id":8},{"text":"2.5.2. Creating the changes approval user task","hash":"bp-user-form-approval-decision","id":9},{"text":"2.5.3. Modelling subprocess end event","hash":"bp-end-event-subprocess","id":10},{"text":"2.6. Modelling main process end event","hash":"bp-end-event","id":11}]},"218":{"id":218,"text":"On this page: 1. Overview Event types 2. Modelling a subprocess initiated by Message Event 2.1. Prerequisites 2.2. Modelling 3. Modelling a subprocess initiated by Error Event An Event Subprocess — is a subprocess initiated by an event. It can be added locally within an in-built subprocess. Event Subprocess is initiated on its corresponding start event. A Parent process[1] stops at the point of awaiting subprocess results. The following events can be used to initiate an Event Subprocess: Message Event Message Event — is a business process event used to transfer information from one business process to another one, or a subprocess with a message. Error Event During process automation you can often encounter deviations from the standard scenario. One of the ways top fix the deviations is using an Error BPMN-event, which allows the business process model to react to certain errors within task execution. Error Start Event can only be used to start an Event Subprocess. You can’t use an Error Event to start a process instance. An Error Start Event is always an interruption event. Before starting a subprocess with a Message Event, take the following steps: Model a Parent Process (which may either start the subprocess, or not). Optionally, model another process that will start the subprocess. The process that sends the message must have a modelled ref:bp-modeling/bp/bpmn/events/message-event.adoc[message sending event] (intermediate or end) to initiate a subprocess (see example below). Example. Modelling a subprocess initiated by a Message Event. Configure the message sending event: Select the element and navigate to configuration panel. In the Global Message Name and Global Message referenced fields, enter values for Global Message. Global Message referenced is filled in automatically. For example, sendMessagefirst. Global Message Name and Global Message referenced values for sending and receiving events must be identical. For the sending element, the values are filled manually. For receiving element, you’ll have to select the corresponding values from dropdown lists. Once all the prerequisites are met, proceed with the modelling and configuring of the Event Subprocess: Select the Create expanded SubProcess element on the left panel and drag it to the modelling canvas, inside of the Parent Process pool. Select the container with in-built subprocess and define subprocess type by clicking the key icon (Change Type) and selecting Event Sub Process. Select the start event in the subprocess, and define its type by clicking the key icon and selecting Message Start Event (non-interrupting). As opposed to the process configuration, subprocess start event is added automatically with the Create expanded SubProcess container. The non-interrupting event selection is caused by the fact that selecting an interrupting event, the Parent Event token is nullified right at the start of subprocess, so the Parent Event won’t continue. Configure the start event that will receive the message in the subprocess: Select the element and navigate to configuration panel. In the Global Message Name and Global Message referenced fields, enter values for Global Message. Global Message referenced is filled in automatically. For example, sendMessagefirst. Global Message Name and Global Message referenced values for sending and receiving events must be identical. For the sending element, the values are filled manually. For receiving element, you’ll have to select the corresponding values from dropdown lists. Connect any intermediate task and end the subprocess. As a result, the subprocess initiated by a Message Event is modelled and configured. To start a subprocess with an Error Event, an Error Sub-Process Interrupting Start Event is used. An Error Sub-Process Interrupting Start Event can only be used to start an Event Subprocess, and can’t initiate a process instance. This event is always interrupting. To model and configure and Error Sub-Process Interrupting Start Event, take the following steps: Model the Parent Process that ends, for example, with an Error End Event. Learn more about modelling and configuring an Error End Event here. The Error Sub-Process Interrupting Start Event element can be initiated not only with an Error End Event, but also with a business-error that appeared during the execution of a certain task (service task, user task, etc.) in the Parent Process. On the left panel, select the Create expanded SubProcess element. Drag the Create expanded SubProcess to the pool with the Parent Process. Change the subprocess type by clicking key icon (Change Type) and selecting Event Sub Process. Select the start event in the subprocess, and define its type by clicking key icon and selecting Error Start Event. As opposed to the process configuration, subprocess start event is added automatically with the Create expanded SubProcess container. On the General tab, configure the element: In the Id field, enter element identificator, or leave default value. In the Name field, enter element name. Expand the Details block by clicking +. If the error is initiated with Error End Event, then the Global Error referenced field must be filled with the link to error sender element (for example, one modelled and configured on the Parent Process). The Name and Code fields will be filled automatically. The Global Error referenced field value must be identical for interconnected elements: error sender and receiver elements. If the error event is initiated by an error within business logic during the execution of a business process, then it’s essential to: In the Name field, set error name. For example, startError. In the Code field, define the type of any Java exception as error code. For example, java.lang.Exception. java.lang.Exception definition will catch any logical error that will appear in the Parent Process. The Global Error referenced field value is entered automatically, according to the Name and Code. For example, startError (code=java.lang.Exception). Optionally, in the Message field, enter error data (description) that will be sent by the system. If the error is initiated by a variable, its value can be set in the following way: in the Code Variable field, define a constant or a JUEL-function that includes error code; in the Message Variable define a constant or a JUEL-function that includes error data. Complete subprocess activity modelling. As a result, the subprocess initiated by error event is modelled and configured. Example. Modelling of a process, that starts initiated with by an error event in the Parent Process 1. Parent Process is a process that initiates subprocess start. A subprocess is a Child Process to a Parent Process.","title":"","component":"platform","version":"1.9.6","name":"event-subprocess","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/event-subprocess.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"Event types","hash":"_event_types","id":2},{"text":"2. Modelling a subprocess initiated by Message Event","hash":"_modelling_a_subprocess_initiated_by_message_event","id":3},{"text":"2.1. Prerequisites","hash":"_prerequisites","id":4},{"text":"2.2. Modelling","hash":"_modelling","id":5},{"text":"3. Modelling a subprocess initiated by Error Event","hash":"event-subprocess-error-start-event","id":6}]},"219":{"id":219,"text":"","title":"Tasks","component":"platform","version":"1.9.6","name":"overview","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/tasks/overview.html","titles":[]},"220":{"id":220,"text":"Additional extensions, or delegates, are implemented to transfer and receive data as part of the REST interaction between the different registries on the Platform and the business process modeled within their regulations. The Platform supports the following delegates: Start business process in another registry: A delegate for initiating a business process modeled in the regulations of another registry on the Platform. Search for entities in another registry data factory: A delegate for obtaining data from entities (tables) in the database of another registry deployed on the Platform. Using integration connectors is not enough to interact with a target registry on the Platform, as well as its business processes. You also need to: Grant access to the target registry using the Control Plane admin console. For details, see Configuring registry access. Grant access to the relevant views and registry’s REST API at the data model level. For details, see Setting access attributes for registry API views.","title":"Standard extensions for integration with business processes of other registries on the Platform","component":"platform","version":"1.9.6","name":"rest-integration-registries-overview","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/rest-integration-registries/rest-integration-registries-overview.html","titles":[]},"221":{"id":221,"text":"The Search for entities in another registry data factory extension is a delegate for searching entities in the databases of other registries on the Platform. This extension is configured using the template with the same name: Search for entities from another registry data factory (registryDataFactoryConnectorSearchDelegate.json). To configure the delegate template in Camunda Modeler, perform these steps: Open the business process modeling interface. Create a Service Task. In the settings panel on the right, click the Open Catalog button and select the Search for entities in another registry data factory delegate template from the list. Click Apply to confirm your action. Configure the template: Before configuring the template in Camunda Modeler, ensure the resources/element-templates folder of the application contains the registryDataFactoryConnectorSearchDelegate.json file. In the Name field, specify the name of the task in which the delegate is configured. For example, Get entities from the DB of another registry on the Platform. Continue to the Input Parameters section. Expand the Target registry section and enter the name of the target registry to search for entities. The name of the registry must match the name specified for the registry (namespace) in the Control Plane admin console. Set Local Variable Assignment to ON. This will create a local variable for the name of the registry to search for entities. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, specify the name of the registry to search for entities. For example, test-another-registry. In our example, we specify the registry name directly: test-another-registry. You can also use the submission() function and specify the registry name from the UI form as ${submission('').formData.prop('namespace').value()}, where '' should be replaced with the ID of the user task (form) in the business process, and 'namespace' is an attribute for the environment (namespace) of the cluster where the registry is deployed. Example 1. Example of specifying the registry name through the submission() function ${submission('childDataInput').formData.prop('namespace').value()} Expand the Resource section and specify the name of the endpoint for the search condition (view) in the data factory API of the target registry. Set Local Variable Assignment to ON. This will create a local variable for the resource. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, specify the resource for the search condition. For example, edu-type-contains. Expand the Search variables section and specify the search variables (parameters) to pass in the request. Set Local Variable Assignment to ON. This will create a local variable for searching another registry. From the Variable Assignment Type dropdown list, select Map. In other words, we need to pass a set of \"key-value\" pairs. In the Variable Assignment Value field, specify the keys and their values for the search parameters. Add a record by clicking Add Entry: In the Key field, enter name. In the Value field, enter the parameter value—​for example, ${submission('').formData.prop('name').value()}. In our example, we are passing one search parameter (name) and its value from the corresponding form () using the submission() function. You can also define the values of the search parameters as a constant—​for example, some-value-for-name-key. Expand the X-Access-Token section and specify the access token for the resource: Set Local Variable Assignment to ON. This will create a local variable for the access token. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, specify the access token. For example, ${initiator().accessToken}. The access token is taken either from the initiator (for example, $initiator().accessToken}) or the executor of the last user task (for example, ${completer('taskDefinitionId').accessToken}). In the Output Parameters section: Expand the Result variable section and specify the name of the process variable that should contain the result. By default, it is set to response. Set Local Variable Assignment to ON. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, specify the name of the result variable (default value is response).","title":"Search for entities in another registry data factory","component":"platform","version":"1.9.6","name":"search-for-entities-another-registry","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/rest-integration-registries/search-for-entities-another-registry.html","titles":[]},"222":{"id":222,"text":"The Start business process in another registry extension is a delegate for starting business processes in other registries on the Platform. This extension is configured using the template with the same name: Start business process in another registry (registryConnectorStartBpDelegate.json). To configure the delegate template in Camunda Modeler, perform these steps: Open the business process modeling interface. Create a Service Task. In the settings panel on the right, click the Open Catalog button and select the Start business process in another registry delegate template from the list. Click Apply to confirm your action. Configure the template: Before configuring the template in Camunda Modeler, ensure the resources/element-templates folder of the application contains the registryConnectorStartBpDelegate.json file. In the Name field, specify the name of the task in which the delegate is configured. For example, Initiate a business process in another registry on the Platform. Continue to the Input Parameters section. Expand the Target registry section and enter the name of the target registry where the business process should be started. The name of the registry must match the name specified for the registry (namespace) in the Control Plane admin console. Set Local Variable Assignment to ON. This will create a local variable for the name of the registry where the business process should be started. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, specify the name of the registry where the business process should be started. For example, test3. In our example, we specify the registry name directly: test3. You can also use the submission() function and specify the registry name from the UI form as ${submission('').formData.prop('namespace').value()}, where '' should be replaced with the ID of the user task (form) in the business process, and 'namespace' is an attribute for the environment (namespace) of the cluster where the registry is deployed. Example 1. Example of specifying the registry name through the submission() function ${submission('childDataInput').formData.prop('namespace').value()} Expand the Business process definition key section and specify the ID of the business process that should be started in the target registry. The business process ID is unique within the regulations of a particular registry and corresponds to the process_definition_id parameter in the bp-auth directory or the process_definition_key parameter in bpms. Set Local Variable Assignment to ON. This will create a local variable for the ID of the business process that should be started. From the Variable Assignment Type dropdown list, select String or Expression. In our example, it will be a String. In the Variable Assignment Value field, specify the ID of the business process that should be started. For example, called-bp—​another-registry-test. Expand the Start variables section and specify the start variables for the business process that should be started in the target registry. For the target process to start, it needs the appropriate startup parameters. These parameters must be passed as a set of start variables to start the business process. Set Local Variable Assignment to ON. This will create a local variable for initiating the process in another registry. From the Variable Assignment Type dropdown list, select Map. In other words, we need to pass a set of \"key-value\" pairs. In the Variable Assignment Value field, specify the keys and their values for the start variables of the process that should be started. Add two records by clicking Add Entry: In the first Key row, enter eduname and provide the parameter value in the Value field. For example, ${submission('ChildDataInput').formData.prop('eduFullName').value()}. In the second Key row, enter formData and provide the parameter value in the Value field. For example, ${submission('ChildDataInput').formData.toString()}. In our example, we are passing two parameters from the ChildDataInput form using the submission() function. Expand the X-Access-Token section and specify the access token for the resource: Set Local Variable Assignment to ON. This will create a local variable for the access token. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, specify the access token. For example, ${initiator().accessToken}. The access token is taken either from the initiator (for example, $initiator().accessToken}) or the executor of the last user task (for example, ${completer('taskDefinitionId').accessToken}). In the Output Parameters section: Expand the Result variable section and specify the name of the process variable that should contain the result. By default, it is set to response. Set Local Variable Assignment to ON. From the Variable Assignment Type dropdown list, select String or Expression. In the Variable Assignment Value field, specify the name of the result variable (default value is response).","title":"Start business process in another registry","component":"platform","version":"1.9.6","name":"start-bp-another-registry","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/rest-integration-registries/start-bp-another-registry.html","titles":[]},"223":{"id":223,"text":"On this page: 1. Overview 2. Modeling Confirmation (pop-up) dialogues can be useful for several reasons: Prevent accidental actions: A confirmation dialogue can ask users to confirm an action before performing it. This can help prevent accidental or unintended actions, such as deleting data or submitting incorrect information. Provide additional information: A confirmation dialogue can provide additional information to the user before they perform an action. For example, a pop-up window can explain the consequences of deleting data or provide instructions for filling out a form. Verify user’s intent: A confirmation dialogue can ensure that a user intends to perform an action. For example, a pop-up window can ask a user to confirm their decision to unsubscribe from a mailing list or sign out of their account. Enhance user experience: A confirmation dialogue can improve user experience by providing information about the consequences of entering data. For example, a pop-up window can notify a user about unsaved data and so on. Administrators can configure confirmation dialogues for data entry forms in the user portals. Confirmation dialogues are configured in the UI forms modeling section of the regulations administrator portal for the Button component. To model a confirmation dialogue for the Button component, perform these steps: Editing the components of the registry regulations is only possible for version candidates. The master version can only be previewed. Sign in to the regulations administrator portal. Open the Model UI forms section. Open any form. Open the Builder tab and drag the Button component from the components panel to the modeling canvas. Open the component’s settings. This happens automatically when creating a new component. Open the Confirmation tab and configure the confirmation dialogue: Select the Pop-up should Display checkbox. This setting enables confirmation dialogues in the user portals. Enter the confirmation message for the portal users in the Description field. Save your settings. Open the Preview tab to check how the confirmation will work in a form. Click the modeled button. As a result, you will see a pop-up window with a confirmation message and options to confirm or cancel the action. Return to the form and save your changes. If the action is confirmed, the user leaves the page. If the action is canceled, the confirmation dialogue closes, and the user remains on the current page. See also: System warning windows for action confirmation in User portals.","title":"Modeling confirmation dialogues in the Button component","component":"platform","version":"1.9.6","name":"button-popup","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/button/button-popup.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modeling","hash":"_modeling","id":2}]},"224":{"id":224,"text":"When working with the Edit Grid component, the modeler can choose the sort type to apply to the component’s columns. You can sort values as numeric (Sort as number) or as text for components that are part of the Edit Grid. Sign in to the regulations administrator portal. Open the UI forms section. Create a form or select one from the list. Open the Builder tab. In the components panel on the left, select Updated. Find the Edit Grid component and drag it onto the modeling canvas. In the new window, click Save. Add components to the Edit Grid according to the business logic—​for example, Text Field та Number. As a result, the modeling canvas looks like this: Open the settings for each component (Text Field and Number) and select the Sort As Number checkbox in the Display tab. The Sort As Number function determines whether the component’s value should be treated as numeric when sorting in grids. Click Save. Open the Preview tab to see how sorting works. Click Add to fill out the table. In the new window, fill out the fields and click Save. Add more records to the table if necessary. As a result, if you sort the Text Field component in descending order, numeric values are displayed at the top, and text values at the bottom. If you sort the Number component, the numeric values are sorted in ascending or descending order.","title":"Setting the sort type for columns in the Edit Grid component","component":"platform","version":"1.9.6","name":"edit-grid-columns-sorting","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/edit-grid/edit-grid-columns-sorting.html","titles":[]},"225":{"id":225,"text":"To load an array of data to the data factory, use the Edit Grid component when modeling the UI form. The Edit Grid component enables you to model records from different components as a single array and upload them to the database. The array must follow the structure defined by the data model. If the structure of an array in a form does not follow the model defined in the database, the values from the form will not be loaded, and the system will return an error. This topic demonstrates a test scenario of modeling a data array for loading documents using the Edit Grid component. Sign in to the regulations administrator portal. Open the UI forms section. Create a form or select one from the list. Open the Builder tab. In the components panel on the left, select Updated. Find the Edit Grid component and drag it onto the modeling canvas. In the new window, click Save. Add components to the Edit Grid according to the business logic—​for example, Text Field (twice) and Date / Time. As a result, the modeling canvas looks like this: Open the Preview tab to see how the form will appear in the UI. Click Add to fill out the table. In the new window, fill out the fields and click Save. Add more records to the table if necessary. This is how you create a table with fields of different types (in our example, Text Field and Date / Time) combined into a single array under the Edit Grid component. From now on, officer users can fill out the task forms with real data as part of the business processes. After the data is digitally signed, it will be saved to corresponding tables in the database.","title":"Saving form data to the database as an array","component":"platform","version":"1.9.6","name":"edit-grid-save-data-list","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/edit-grid/edit-grid-save-data-list.html","titles":[]},"226":{"id":226,"text":"On this page: 1. Component description 2. Main features 3. Data format The Edit Grid component is a powerful tool for working with tables in UI forms that enables you to dynamically add, edit, and delete table rows. This component appears as a table with data that users can edit. You can customize each row’s display, validation, and other options. An extension to the standard Edit Grid component supports additional options that simplify modeling. Regulations developers and modelers can use this component more flexibly and adapt it to the specific needs of various business scenarios. Use Edit Grid from the list of Updated components. The Edit Grid component supports many options for interacting with the process forms, organized by tabs. Display Data Validation API Logic Label: Displays a title next to the component. Label Position: Positions the label relative to the component (top, right, left, or bottom). Description: Adds a component description to help users better understand its purpose. Tooltip: Displays a tooltip when hovering over the component. Quick Search: Provides a simple search filter for quickly searching records in a table. Hidden: Hides fields from a user. Hidden fields are passed along with other form data. Multiple-record selection: Enables a user to select several records in a table. Read Only: Shows data via a context menu (three vertical dots) in read-only mode. Redraw On: Redraws the component when another component changes. Clear value when hidden: Clears the value when the field is hidden. Validate On: Determines when this component should trigger client-side validation (Change or Blur options). Required: Indicates fields that must be completed before a form can be submitted. Minimum length: Defines the minimum number of characters a user must enter. Maximum length: Defines the maximum number of characters a user can enter. Custom error message: Specifies an error message to display when form data does not pass validation. Custom validation: Enables custom validation, which enables you to create validation checks specific to your needs. Property name: Names the field for the API endpoint. Must correspond to the table’s name in the registry database—​for example, licenses. Record Actions: Specifies up to 5 actions available for the table records. For example, changing the license expiration date (Action: _action_update) or canceling a license (Action: _action_cancel). The Edit Grid component accepts an array of objects. Each object in the array can contain different fields with values. The following example shows a single object with a \"textfield\" field and a \"test\" value. Submission Array // Example: [ { textfield: 'test' } ]","title":"Edit Grid component","component":"platform","version":"1.9.6","name":"edit-grid","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/edit-grid/edit-grid.html","titles":[{"text":"1. Component description","hash":"_component_description","id":1},{"text":"2. Main features","hash":"_main_features","id":2},{"text":"3. Data format","hash":"_data_format","id":3}]},"227":{"id":227,"text":"On this page: 1. Configuring the updated File component for bulk loading of files 2. How bulk loading of files works 3. Related pages The updated File component allows uploading multiple files in one form field. All the uploaded files are shown on the form and can be downloaded for viewing. Sign in to the regulations administrator portal. Open the Model UI forms section. Click Create new form. Specify the form’s business name and service name in the corresponding fields. In the components panel on the left, select Updated. Find the File component and drag it onto the modeling canvas. Configure the component’s basic settings. In the Data tab, select the Multiple Values checkbox. This setting enables loading multiple files in the form. Configure the component’s required settings and click Save. The file size settings of the File component apply to each file in a bulk load. Each file in the form must match the defined format and satisfy the maximum or minimum file size requirements. The maximum and minimum size of each file is determined by the File Maximum Size and File Minimum Size fields. The maximum and minimum total size of all the files is determined separately by the Maximum total size and Minimum total size fields. Limits on the total volume of multiple files loaded through a business process: When modeling a form for uploading multiple files (the Multiple Values checkbox in the Data tab of the File component is selected), two fields appear in the File tab: Maximum total size: Set the maximum total size of all uploaded files. Minimum total size: Set the minimum total size of all uploaded files. The maximum possible value for the Maximum total size field is 100 MB. This value is set by default; a user can only change it to a smaller number. This ensures compliance with the technical restrictions set by the registry administrator. These limits apply separately to each file field (each upload widget) on the form, not to the entire page. If the total volume of the uploaded files exceeds 100 MB, the system displays the following message below the upload field: \"Total size of uploaded files exceeds 100 MB\". See also: admin:registry-management/control-plane-digital-documents.adoc. Figure 1. The maximum total size of files loaded through one File component Specify the allowed file format for uploading in the File Pattern field. The system uses a save_digital_document() function to load the files (digital documents) into the registry. This function enables the system to automatically validate files uploaded through the UI forms in the user portals. The validation checks whether the files comply with specific restrictions, such as allowed file types. The system supports uploading the following file formats: \"application/pdf\": \"pdf\" \"image/png\": \"png\" \"image/jpeg\": \"jpg\", \"jpeg\" \"text/csv\": csv \"application/octet-stream\": \"asics\" \"application/pkcs7-signature\": \"p7s\" You can specify the format as application/pdf or simply .pdf. Separate several formats by commas. Specify any value for the maximum total size of all uploaded files—​for example, 10 MB. Specify any value for the minimum total size of all uploaded files—​for example, 1 MB. Figure 2. Setting the restrictions in the File component’s settings Figure 3. Uploading one file Figure 4. Uploading multiple files in different formats All files uploaded at once must have unique names if they are in the same format. The updated File component supports uploading multiple files through the File Upload window or dragging and dropping multiple files at once. You can also add the files one by one. All uploaded files are displayed on the form. You can delete each file separately by clicking the cross (x) icon next to the file name. You can also click the file name to download it for viewing. For security reasons, users cannot upload files where the extension has been manually changed. The content of the file uploaded into the system must match its extension. For example, if you change the Word file’s extension to .pdf and try to upload it through the user portal, the system will return a validation error. Downloading digital documents at an external link admin:registry-management/control-plane-digital-documents.adoc bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc Modeling the business process for loading data from a CSV file as an array into a database","title":"Loading multiple files in one field using the File component","component":"platform","version":"1.9.6","name":"component-file-multiple-values","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/file/component-file-multiple-values.html","titles":[{"text":"1. Configuring the updated File component for bulk loading of files","hash":"_configuring_the_updated_file_component_for_bulk_loading_of_files","id":1},{"text":"2. How bulk loading of files works","hash":"_how_bulk_loading_of_files_works","id":2},{"text":"3. Related pages","hash":"_related_pages","id":3}]},"228":{"id":228,"text":"ЗМІСТ 1. Основні положення 1.1. Формат даних 2. Налаштування компонента File Документ у процесі формування. Submission Object // Приклад: Розділ у процесі наповнення.","title":"Компонент File","component":"platform","version":"1.9.6","name":"file","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/file/file.html","titles":[{"text":"1. Основні положення","hash":"_основні_положення","id":1},{"text":"1.1. Формат даних","hash":"_формат_даних","id":2},{"text":"2. Налаштування компонента File","hash":"_налаштування_компонента_file","id":3}]},"229":{"id":229,"text":"On this page: 1. Tips for developers 1.1. Debug 2. Available variables 2.1. data 2.2. instance 2.3. input, value 2.4. row 2.5. formVariables 2.6. currentUser When modeling UI forms, sometimes you need to define the specific behavior of a component. To do this, you can use the parameters that support custom JS code: Calculated Value Custom Default Value Custom Validation Advanced Conditions These parameters can contain regular JS code that will be executed in the user’s browser. Usually, a set of variables is available when this code is executed. Each parameter has its own set of variables, but most are shared. Use the console.log function in JS plugins to check the execution of a script and find a possible error. When this function is called, it prints the values of its arguments to the browser console. For example: Sequentially entering the characters 1, 2, 3, and 4 into the Text Field gives us the following: How you open DevTools depends on your browser—​for example, Ctrl + Shift + I for Chrome. An object with the current form data. This object is sent to the backend API when the task is completed. The current component. This object contains many methods and properties that differ between components. You can read more about specific properties on the pages of individual components. The value of a component. Some parameters provide input; others provide value. This variable is only available if the current component is in an Edit Grid component. This is a reference to a specific element of the table—​the one currently being edited. Business process variables. For details, see arch:archive/admin-form-variables.adoc An object that contains information about an authenticated user. This object is available to all plugins. For details, see the Get user profile API.","title":"Variables in JavaScript plugins","component":"platform","version":"1.9.6","name":"eval","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/general/eval.html","titles":[{"text":"1. Tips for developers","hash":"_tips_for_developers","id":1},{"text":"1.1. Debug","hash":"_debug","id":2},{"text":"2. Available variables","hash":"_available_variables","id":3},{"text":"2.1. data","hash":"_data","id":4},{"text":"2.2. instance","hash":"_instance","id":5},{"text":"2.3. input, value","hash":"_input_value","id":6},{"text":"2.4. row","hash":"_row","id":7},{"text":"2.5. formVariables","hash":"_formvariables","id":8},{"text":"2.6. currentUser","hash":"_currentuser","id":9}]},"230":{"id":230,"text":"On this page: 1. Component overview 2. Related pages The Map component allows you to use map data from various map services (for example, OpenStreetMap) and add your own layers and geospatial objects. You can configure the Map component in the regulations administrator portal in the UI forms section. Sign in to the regulations administrator portal. Open the Model UI forms section. Create a new form. Open the Builder tab. Go to Components > Updated. Find the Map component and drag it onto the modeling canvas. In the component’s settings, open the Display tab. In the Label field, specify your map field’s business name—​for example, Map. Open the Data tab and configure the following parameters: In the Base Layers section, specify the map service to use: Url: Specify the map service URL. For example, to download map tiles from the OpenStreetMap server, use https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png. Name: Specify the name of the layer. Attribution: Specify the attribution text for the layer if required. Max Zoom: Specify the maximum zoom level to display. The Overlay Search Field and Search Zoom parameters are used to search geodata on the map. You can specify the name of the field to search when a user enters a query and the zoom level at which the search results will be displayed. In the Overlay Layers section, you can specify custom layers to overlay the base layer. For example, you can use data from your database to show the locations of certain objects on the map. In this case, you need to specify the URL of the GeoServer where your geodata is stored and the table and view names in the DB to display the geodata on the map. You can specify the GeoServer’s URL as either a relative or full address: Relative address: /geoserver/registry/ows Full address: https://geo-server-.apps.envone.dev.registry.eua.gov.ua/geoserver/registry/ows If you specify the full address of the GeoServer, you can view points and search objects on the map directly in the UI form builder. The Details Title Path field is used to display details about the geospatial objects shown on the map. You can specify the path to a field in your database that contains the name of the object (Name) to display this information in the details window when someone clicks the object on the map. The Address parameter is used to display the address of the geospatial object. Configure geocoding on the Data tab: What is geocoding? Geocoding is the process of converting addresses or other descriptions of places into geographic coordinates (latitude and longitude). In our case, the geocoding functionality uses the Nominatim service, which is based on OpenStreetMap data. Enable Geocode: Activate geocoding and connect to Nominatim. Use this option to enable or disable the geocoding feature in the app. Geocode Search Placeholder: The text displayed in the geocode search field by default. Use this option to ask users to enter an address or location to search for. Geocode Search Url: The URL used to send requests to the Nominatim server for geocoding: https://nominatim.openstreetmap.org/search?format=json&q={s} The {s} variable contains the user query from the search field. You can use other services as well. Geocode Search Zoom: The map’s zoom level after successful geocoding. For example, 12 means that the map will be displayed with a medium level of detail, providing users with an overview of the area. Geocode Marker Radius: The radius of the marker that displays geocoding results on the map. For example, 10 indicates an average marker size, which helps users easily see it on the map. Open the API tab and specify the name of the property to use in API requests in the Property Name field—​for example, entityLocation. Click Save to save your changes and close the component’s settings. Check if the map is working properly. You can find a specific object on the map manually or use the search and geocoding options. Working with geodata in the registry","title":"Map component","component":"platform","version":"1.9.6","name":"map","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/map/map.html","titles":[{"text":"1. Component overview","hash":"_component_overview","id":1},{"text":"2. Related pages","hash":"_related_pages","id":2}]},"231":{"id":231,"text":"On this page: 1. Configuring the Select component to get data from an endpoint 2. Configuring a dependent Select component to filter data from another component An API endpoint is a service entry point that enables communication between different systems, allowing them to interact and exchange data. To integrate business process UI forms with the data factory, you need to use the Select component with additional settings. This topic shows how to configure a Select component to display data from an endpoint and filter data from another Select component. You can configure the Select component to get data from internal and external resources (endpoints). To get data from an external resource, you need to specify an absolute URL. The resource must be a public API without authentication and return data in JSON format as an array of objects: [{},{},{}] Here is an example of an absolute URL address that returns data in JSON format using the GET method and provides a list of objects: https://jsonplaceholder.typicode.com/comments This URL points to a public API called JSONPlaceholder that provides dummy data for testing and prototyping. In this case, the endpoint is /comments, which returns a list of comments. Here’s an example of the data you can get: [ { \"postId\": 1, \"id\": 1, \"name\": \"id labore ex et quam laborum\", \"email\": \"Eliseo@gardner.biz\", \"body\": \"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo...\" }, { \"postId\": 1, \"id\": 2, \"name\": \"quo vero reiciendis velit similique earum\", \"email\": \"Jayne_Kuhic@sydney.com\", \"body\": \"est natus enim nihil est dolore omnis voluptatem numquam\\net omnis...\" }, { \"postId\": 1, \"id\": 3, \"name\": \"odio adipisci rerum aut animi\", \"email\": \"Nikita@garfield.biz\", \"body\": \"quia molestiae reprehenderit quasi aspernatur\\naut expedita occaecati...\" } ] Sign in to the regulations administrator portal and create a form. Open the Components tab and add a Select component. Open component settings by clicking the gear icon. In the Display tab > Label field, specify the component name. Open the API tab and enter the component name for the API endpoint into the Property Name field—​for example, selectProcessInstanceId. Open the Data tab and enter URL into the Data Source Type field. Enter the endpoint URL into the Data Source URL field—​for example, https://user-proc-mng-lowcode-pipe-qa.apps.cicd.mdtu-ddm.projects.epam.com/api/process-instance. Specify the name of the property from the endpoint’s JSON response that will be stored as the value property after the select in the Value Property field—​for example, id. Define the HTML template to display values in a select in the Item Template field, as shown in the following example. processDefinitionName and id are taken from the endpoint’s response and shown in the select. Example 1. HTML template {{ item.processDefinitionName }} {{ item.id}} Example 2. Request and response in Swagger (registry’s \"registry-rest-api\" service) Click Save to save changes to the component. As a result, the dropdown list will contain the names and IDs of all the services initiated by an officer. Open the form with the component whose data you need to filter. Open the Components tab and add a Select component. Open component settings by clicking the gear icon. In the Display tab > Label field, specify the component name. Open the API tab and enter the component name for the Form.io API endpoint into the Property Name field—​for example, selectRelatedTasks. Enter the endpoint URL into the Data Source URL field—​for example, https://user-task-mng-lowcode-pipe-qa.apps.cicd.mdtu-ddm.projects.epam.com/api/task. Specify the name of the property from the endpoint’s JSON response that will be stored as the value property after the select in the Value Property field—​for example, formKey. Enter the query with parameters to add to the endpoint and filter its response into the Filter Query field—​for example, processInstanceId={{data.selectProcessInstanceId}}. data.selectProcessInstanceId is the name (Property Name field in the API tab) of the component whose data needs to be filtered and which is stored in the data object. Define the HTML template to display values in a select in the Item Template field, as shown in the following example. name and id are taken from the endpoint’s response and shown in the select. Example 3. HTML template {{ item.name}} {{ item.id}} In Refresh Options On, set the component which the current component should depend on when filtering data. Select the Clear Value On Refresh Options checkbox. Example 4. Request in Swagger (registry’s \"registry-rest-api\" service) Click Save to save changes to the component. As a result, the dropdown list will contain the names and IDs of all the tasks that belong to the service selected in the other Select component.","title":"Configuring the Select component to get and filter data from API resources","component":"platform","version":"1.9.6","name":"bp-select-component-form-io","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/select/bp-select-component-form-io.html","titles":[{"text":"1. Configuring the Select component to get data from an endpoint","hash":"_configuring_the_select_component_to_get_data_from_an_endpoint","id":1},{"text":"2. Configuring a dependent Select component to filter data from another component","hash":"_configuring_a_dependent_select_component_to_filter_data_from_another_component","id":2}]},"232":{"id":232,"text":"The regulations administrator can simultaneously connect several stylized components to the Refresh Options On function within the Select component. The Refresh Options On function allows updating data when another field changes. You can set this up in the regulations administrator portal when modeling UI forms for business processes. Sign in to the regulations administrator portal. Open the Model UI forms section. Click Create new form. Specify the form’s business name and service name in the corresponding fields. In the components panel on the left, select Updated. Find the Select component and drag it onto the modeling canvas. Click Save. Add two more components to the modeling canvas: Checkbox and Text Field. Open the updated Select component’s settings. Change the component name (form field) from Default Label to Select for convenience. In the Data Source Values section, enter test data—​for example, 1,2,3. Open the Data tab. The Refresh Options On field’s dropdown menu contains the previously selected Checkbox and Text Field components. Add both components as the field’s values and click Submit. This way, we are connecting several stylized components to the Refresh Options On function. Select the Clear Value on Refresh Options checkbox so that the data can be updated. Scroll up and click Save. Enable the Preview mode. In the Select component’s field, enter 1. Select the Checkbox checkbox. As a result, the value from the Select field is deleted. Enter another value into the Select field—​for example, 3. Enter values into the Text Field. As a result, the values from the Select field are deleted due to the enhanced Refresh Options On feature.","title":"Using the \"Refresh Options On\" function in the updated Select component","component":"platform","version":"1.9.6","name":"select-refresh-options","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/select/select-refresh-options.html","titles":[]},"233":{"id":233,"text":"Utilize the functionality of business process copying. This allows for easier and faster creation of process diagrams. There is no need to model processes from scratch — simply select a similar diagram that has been previously modeled and copy it. Open the Process models section and click on the copying icon next to the desired business process. As a result, a complete copy of the selected process (duplicate) is created, meaning that the entire code is copied. The default business name of the process is created with the prefix Copy_. The default technical name of the process is new-bp. Editing the components of the registry regulations is only possible within change candidate versions. The master version only has the viewing option available. For more information on working with registry regulation versions, please refer to the following page: Managing regulations versions","title":"Copying business processes","component":"platform","version":"1.9.6","name":"copy-process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/copy-process.html","titles":[]},"234":{"id":234,"text":"The Regulations administrator portal allows for easy and straightforward modeling of business processes using the built-in BPMN.io web editor in your browser. The functionality provides viewing, creation, and editing of diagrams in BPMN 2.0 notation based on XML. Create a new business process in a few simple steps: In the Regulations administrator portal, open the Process models section. Click the + Create new process button. On the General tab, fill in the business and technical names of the business process: Enter a convenient and understandable name in the Business process name field. The business name serves an informative function and can be used, for example, for display in the interfaces of the Officer and Citizen portals, for legal purposes, in document circulation, and so on. It can have 3 to 100 characters. Allowed characters: \"A-Z,\" \"a-z,\" \"А-Я,\" \"а-я,\" Ukrainian alphabet, \"0-9,\" \"-\", \"_,\" \",\", \".\", apostrophe ('), space. Enter the technical name of the process in the Business process technical name field. The technical name is the process identifier (process ID) in the system. It is used for technical purposes, such as in code, BPMN notation, configuration files, and so on. It must be unique within the registry instance. Length: 3-50 characters. Allowed characters: \"A-Z,\" \"a-z,\" \"0-9,\" \"-\", \"_.\" However, digits and \"-\" cannot be at the beginning or end of the technical name. Switch to the Builder tab and model the business process in the web editor. The capabilities of the Builder tab are more detailed at: Modeling business processes in BPMN editor. Press the Save changes button to save the entered information. The user receives a notification of successful process creation: ✅ Business process successfully created. You can see the created business process in the general list of processes. It can be edited later (more details at Editing business processes). When a user tries to save changes during creation or editing of a business process or UI forms and is on any tab of the Process models and UI Forms sections, validation is triggered if: A business process with the same technical name already exists — then the user sees the following validation message in the top right corner: A business process with this technical name already exists. Validation rules are violated — then the user sees a validation message in the top right corner: Check the format of mandatory fields. For the business process name: Validation rules are violated — then the user sees a validation message in the top right corner: Check the format of mandatory fields. When the checks are triggered, the user stays on the current page/tab. The creation of a business process occurs only within your candidate version. To create a new candidate version, refer to Creating merge requests. You can review the made changes and their status in the Latest changes section (see Viewing list of latest changes) ) If you have finished creating a business process and want to publish the changes to the Gerrit repository, you need to apply the changes to the master version (more details on Applying changes to the master version).","title":"Creating business processes","component":"platform","version":"1.9.6","name":"create-process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/create-process.html","titles":[]},"235":{"id":235,"text":"Remove unnecessary and outdated business processes to keep the regulations up to date. Open the Process models section and click on the deletion icon next to the desired business process. As a result, the user receives a notification of successful process deletion: ✅ Business process \"\" successfully deleted. The deletion of the process occurs within your change candidate version. If you need to delete a business process from the regulations in the Gerrit repository, you need to apply changes to the master version. Editing the components of the registry regulations is only possible within change candidate versions. The master version only has the viewing option available. For more information on the features of working with registry regulations versions, please refer to the following page: Managing regulations versions","title":"Deleting business processes","component":"platform","version":"1.9.6","name":"delete-process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/delete-process.html","titles":[]},"236":{"id":236,"text":"The Regulations administrator portal allows for editing, modifying, and developing existing business processes. If the modeler has made an error in the name, wants to change an element of the process diagram, or modify the XML code, they can enter the editing mode and make the necessary changes. It is not possible to edit the internal technical name. Upon initial save, the technical name is stored in the repository as a unique identifier for the process within the registry instance and cannot be changed. Відредагуйте наявний бізнес-процес у кілька простих кроків: Edit an existing business process in a few simple steps: In the Regulations administrator portal, open the Process Models section. Select the process and click on the 🖉 editing icon. Modify any component of the business process (business name, code, or BPMN element in the modeler). Click the Save changes button to save the entered information. The user receives a notification of successful process creation: ✅ Business process \"\" successfully saved. Editing the components of the business process applies only to your change candidate version. To create a new change candidate version, refer to the page Creating merge requests. You can review changes and their status in the Latest changes section (more details at Viewing latest changes). If you have finished editing and want to publish the changes to the Gerrit repository, you need to apply the changes to the master version (more details at Applying Changes to the Master Version page).","title":"Editing business processes","component":"platform","version":"1.9.6","name":"edit-process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/edit-process.html","titles":[]},"237":{"id":237,"text":"On this page: 1. Problem statement 2. General principles and provisions 3. Configuring business process groups in the Regulations administrator portal 3.1. Operations with process groups 3.1.1. Creating a business process group 3.1.2. Renaming a business process group 3.1.3. Deleting a business process group 3.1.4. Sorting business process groups 3.2. Operations with processes 3.2.1. Adding business processes to a group 3.2.2. Removing a business process from a group 3.2.3. Sorting business processes within a group 4. Modeling the registry regulations 5. User portal interfaces In user portals, all available services are presented in a single list, which is inconvenient for users of registries with a large number of such services. To improve user experience, the ability to categorize services using groups and the ability to manage their display order has been implemented. This allows for more efficient display and easier access to the necessary services in registries. The regulations developer can group and sort business processes through the web interface of the administrative portal. Changes to grouping and sorting settings are validated during the publication of the registry regulations and deployed in the corresponding environment. Subsequently, users of the Officer and Citizen portals will be able to view the list of business processes divided into groups and ordered according to the regulation settings. A business process cannot be assigned to two or more groups simultaneously. The group is not mandatory, and if a business process is not assigned to a group, it is displayed outside of any group. If there are no group settings, it means that no business process is assigned to a group. Groups that do not have any business processes available to the user are not displayed in user portals but are shown in the Regulations administrator portal’s interface. Nesting of groups is not supported. You can group business processes, sort groups, and manage accessible services for display in the portals. Users will only see the services they have access to. A group will not be displayed if all its processes are inaccessible to the user. To configure the categorization of business processes using groups, follow these steps: Access the Regulations administrator portal in your registry. Open or create a new candidate version for merging changes. Go to the Process models section and navigate to the Display in portals tab. Customize the settings according to your needs. The regulations administrator can: Create a group Rename a group Delete a group Sort groups Add processes to a group Remove processes from a group Sort business processes within a group The regulations administrator can create, rename, and delete process groups. All creation and editing operations can only be performed within a change candidate version of the regulations. The master version only allows viewing mode (see more at Managing regulations versions) To create a group for consolidating business processes, follow these steps: Open the Display in portals tab and click on Create group. Enter a unique name for the new group within the regulations. The name can have 3 to 512 characters. Allowed characters include \"A-Z,\" \"a-z\" of the Ukrainian alphabet, space, apostrophe, hyphen, parentheses, \"/\", \":\", \";\", \",\", \".\", \"№,\" and numbers 0-9. If the data input format is violated, you will receive the following validation error: If a group with the same name already exists, you will receive the following validation error: Click Save changes. To rename a group, follow these steps: Open the Display in portals tab. Next to the corresponding group or inside the group, select the \"ellipsis\" menu (⋮) and click on Rename. In the new window, enter the desired name. The name can have 3 to 512 characters. Allowed characters include \"A-Z,\" \"a-z\" of the Ukrainian alphabet, space, apostrophe, hyphen, parentheses, \"/\", \":\", \";\", \",\", \".\", \"№,\" and numbers 0-9. Click Save changes. Note that when deleting a group, the business processes are not deleted but become ungrouped. To delete a group, follow these steps: Open the Display in portals tab. Next to the corresponding group or inside the group, select the \"ellipsis\" menu (⋮) and click on Delete. In the new window, confirm or cancel the action. Click Save changes. Using the vertical arrows on the interface to move business process groups allows users to conveniently and quickly find and select the desired processes from the list. For example, if the interface has a list of groups such as \"Personnel,\" \"Requests,\" \"Assets,\" etc., using the vertical arrows allows sorting these groups based on different logical criteria to provide users with convenient access to the necessary information. When creating a group through the Regulations administrator portal, it is placed at the bottom of the group list. Later on, it can be moved wherever necessary. Additionally, sorting business process groups can help ensure consistency and logical structure in the interface, facilitating user navigation and improving their interaction experience with the system. To add a business process to a group, follow these steps: Open the Display in portals tab. Create a group (see Creating a business process group). Next to the respective business process, click on the folder icon (📁) In the new window, select the desired group to which you want to transfer the business process. You can move the business process to another group or exclude it from the current one. It will be added to the end of the selected list of business processes. Click Confirm. Save changes. To remove a business process from a group, follow these steps: Open the Display in portals tab. Open the existing group with processes. Next to the respective business process, click on the folder icon (📁) In the new window, select Exclude from the group to remove the business process from the group. You can also move the business process to another group. It will be added to the end of the selected list of business processes. Click Confirm. Save changes. Implementing the ability to sort business processes in the interface allows users to easily and quickly find and select the required services. Vertical arrows can be used to move processes within groups or outside of them. The configuration of categorization (grouping) of business processes in user portals is located in the bp-grouping.yaml configuration file within the regulations of your registry. If such a file is absent, create and fill it accordingly (see the example below). There are two ways to configure service grouping in user portals: In the Regulations administrator portal interface — in this case, after making changes to the master version of the regulations, the settings will automatically be applied to the bp-grouping.yaml file in the Gerrit repository. In the structure of the regulations in the Gerrit repository manually — in this case, after deploying the regulations through the publication pipeline, the changes will become available in the interfaces of the Regulations administrator portal. By default, the bp-grouping.yaml grouping settings are empty. Figure 1. Registry regulations structure Example 1. Registry configuration example: bp-grouping/bp-grouping.yaml groups: - name: Перша група processDefinitions: - bp-1-process_definition_id - bp-2-process_definition_id - name: Друга група processDefinitions: - bp-3-process_definition_id - name: Третя група ungrouped: - bp-4-process_definition_id - bp-5-process_definition_id The groups array contains groups of business processes. The ungrouped array contains ungrouped business processes. The business processes listed in the processDefinitions and ungrouped arrays must exist in the registry’s regulations, in the bpmn directory. When a business process is deleted, it is automatically removed from the bp-grouping.yaml file. After deploying the regulations and applying the settings, groups of business processes will be displayed in the user portals for the Officers and Citizens. Figure 2. Process groups in the Officer portal Figure 3. Process groups in the Citizen portal","title":"Categorization of available services in user portals","component":"platform","version":"1.9.6","name":"process-groups","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/process-groups.html","titles":[{"text":"1. Problem statement","hash":"_problem_statement","id":1},{"text":"2. General principles and provisions","hash":"_general_principles_and_provisions","id":2},{"text":"3. Configuring business process groups in the Regulations administrator portal","hash":"configure-bp-groups-in-admin-portal","id":3},{"text":"3.1. Operations with process groups","hash":"_operations_with_process_groups","id":4},{"text":"3.1.1. Creating a business process group","hash":"create-group","id":5},{"text":"3.1.2. Renaming a business process group","hash":"rename-group","id":6},{"text":"3.1.3. Deleting a business process group","hash":"delete-group","id":7},{"text":"3.1.4. Sorting business process groups","hash":"sorting-groups","id":8},{"text":"3.2. Operations with processes","hash":"_operations_with_processes","id":9},{"text":"3.2.1. Adding business processes to a group","hash":"add-bp-to-group","id":10},{"text":"3.2.2. Removing a business process from a group","hash":"delete-bp-from-group","id":11},{"text":"3.2.3. Sorting business processes within a group","hash":"sorting-grouped-bp","id":12},{"text":"4. Modeling the registry regulations","hash":"_modeling_the_registry_regulations","id":13},{"text":"5. User portal interfaces","hash":"_user_portal_interfaces","id":14}]},"238":{"id":238,"text":"This section demonstrates the functionality of modeling and managing business process diagrams in Regulations administrator portal. The functionality allows you to: Create processes Edit processes Search for processes by name Copy processes Upload processes Sort processes Categorize services Delete processes View and edit process components, and namely: Manage process names; View and edit the processes XML representation code; Model processes in the BPMN constructor. Editing the components of the registry regulations is only possible within change candidate versions. For the master version, only the view option is available. Within the master version, the regulation modeler can: View available business processes Sort business processes View components of business processes on the General, Code, and Constructor tabs For more information on working with regulation versions, please refer to the page: Managing regulations versions Recommendations for saving and deleting objects in the Regulations administrator portal: Please note that there are no warning windows in the Regulations administrator portal, so be particularly careful when working with objects. Exercise caution and attentiveness when saving or deleting objects such as business processes, forms, and so on. Before creating or deleting an object, it is recommended to check it to avoid unforeseen consequences. Please be aware that deleting or modifying an object may result in data loss and disruption of business processes.","title":"Managing business process models in the registry","component":"platform","version":"1.9.6","name":"process-models-overview","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/process-models-overview.html","titles":[]},"239":{"id":239,"text":"Utilize the functionality of searching for business processes by name. This helps to streamline and expedite work with process diagrams. Open the Process models section and enter at least the first 3 characters of the process name in the Search by name field 🔍`. As a result, you will receive a list that matches the entered value. You can search for a process by both the business name and the technical name.","title":"Searching for processes by name","component":"platform","version":"1.9.6","name":"search-process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/search-process.html","titles":[]},"240":{"id":240,"text":"Utilize the functionality of sorting business processes. This allows you to arrange available process models in ascending ↑ or descending ↓ order, improve user experience, and explore the history of creation and modification of processes. Apply the desired sorting type to the following columns: Process name Technical name Created Last Edited The sorting mechanism is the same for both business processes and UI forms. For more detailed information on sorting records in the Regulations administrator portal, please refer to Sorting UI forms.","title":"Sorting business processes","component":"platform","version":"1.9.6","name":"sorting-process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/sorting-process.html","titles":[]},"241":{"id":241,"text":"You can upload a business process to the regulation by copying and pasting the XML schema of the ready process in the Code tab. The direct option of Drag & Drop (dragging a file with the schema) is not available. Figure 1. Inserting BPMN diagram code in the Code tab For more details on working with the code of a business process, please refer to Viewing and Editing XML Code Representation of Processes. Editing components of the registry regulations is only possible within change candidate versions. For the master version, only the viewing option is available. For more information on working with regulations versions, please refer to Managing regulations versions","title":"Uploading business processes","component":"platform","version":"1.9.6","name":"upload-process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/upload-process.html","titles":[]},"242":{"id":242,"text":"On this page: 1. General overview 2. Searching tables by name 3. Sorting tables 4. Viewing table structures 4.1. \"General\" tab 4.2. \"Indexes\" tab 4.3. \"Columns\" tab 5. Working with tables within candidate versions 5.1. Deploying temporary replicas 5.2. Verifying the operability of the temporary database deployment configuration 5.3. Reconciling outdated schemas of temporary databases The development of regulations involves the creation of a registry data model. The Regulations administrator portal allows working with registry database tables in a read-only mode. The list of tables and their structures is available for both the master and candidate versions of the regulations. For more information about the versioning of regulations, see Managing regulations versions The administrator can search for a table by its name (in Latin characters), sort tables by name, historicity, subjectivity, and description, as well as explore their structure according to the data model. You can view the complete list of tables as follows: Sign in to the Regulations administrator portal. Select either the master version of changes, or the candidate version. Майстер-версія — це гілка регламенту за замовчуванням. При вході до Кабінету, адміністратор завжди потрапляє на ⌂ Домашню сторінку із майстер-версією змін. TIP: Master version is the default branch of the regulations. Upon entering the portal, the administrator always lands on the ⌂ Home page with the master version of changes. Navigate to the Tables section. Registry regulations administrator can quickly and conveniently find the required table using the Search by name field. Simply enter the initial letters. Registry regulations administrator can sort tables by name, historical relevance, subjectivity, and description, quickly finding the necessary values. There are 2 types of sorting supported: ↓ — Descending sorting. ↑ — Ascending sorting. Fields to which sorting is applied: Table name; Historical; Subject; Description. Registry regulations administrator can view the structure of the database registry tables according to the provided model. To view the table structures, open any table in the Tables section. The General tab provides basic information about the table, allowing a superficial understanding of the purpose of the table, as well as some of its attributes, namely: Name field — contains the name of the table from the database registry. For example, diplomas. Description field — contains the description, i.e., the purpose of the table in the database registry. For example, Received diplomas. Subject checkbox — allows determining the subjectivity of the table. The checkbox indicates the presence of a connection with the subject. At the object level, it is possible to set the attribute isObject=“true`,\" which adds a column with a reference to the subject table (`tableName=”`subject`\"), i.e., to a specific data owner. The Indexes tab allows viewing the list of indexes for a specific table in the database, as well as the rules by which they operate. An index is a database object created to improve query execution efficiency. Database tables can contain a large number of rows stored in arbitrary order, and searching for them based on a given value by sequentially scanning the table row by row can be time-consuming. The index is formed from the values of one or more columns of the table and pointers to the corresponding rows of the table, thus enabling the retrieval of the required row based on the given value. The tab contains 2 columns: Name — the name of the index (of an object). Rule — the rule applied to the corresponding index when selecting data. For example, how to represent the data in response to a query - in ascending order (ASC), or descending (DESC), and so on. The modeler can also sort the indexes by name and the rule applied to the index when searching for data. Pagination option (paging) is also available if the number of records with indexes exceeds 10 per page. The Columns tab allows you to view the structure of columns in a specific table of the registry database. Currently, you can view the following parameters: Column — the name of the column in the registry database. Type — the data type stored in the field. Default value — the default value of the field if another value is not explicitly specified. Two types of sorting by all columns are supported: ↓ — Descending sorting. ↑ — Ascending sorting. The development of regulations involves designing a data model for the registry. Viewing the list of tables and their structure is available in read-only mode for candidate versions (for more information, see Managing regulations versions). Functional scenarios: Viewing the current state of the data model for the registry regulations (list of tables) being developed (within a candidate version). Obtaining the result of checking the feasibility of successful deployment of the data model. Viewing the \"subjectivity\" attribute value in the list of tables. Deleting temporary databases for candidate versions. When working with registry data, a temporary replica is created and deployed for each candidate version from the reference database (PostgreSQL). The reference database contains only the structure without any registry data. The regulations deployment subsystem (regulatory Jenkins) creates the database structure by deploying the liquibase configurations of the registry regulations. For more details, see Creating a physical data model). Example 1. Script for automatic deployment of temporary replica from the reference database CREATE DATABASE [registry-dev-] WITH TEMPLATE registry-template OWNER [our owner user]; This script creates a new temporary database with the name registry-dev-, which is copied from the reference database registry-template. is a unique identifier of the candidate version. registry-template — the name of the reference database obtained after running the OKD run-db-script-job. registry-dev- — the template name for the temporary database for the candidate version. The regulations management subsystem (registry-regulations-management) reads the data model structure of the temporary database and saves it as a snapshot of the current state of the data model to the DataModelSnapshot file in JSON format. Later, this data is passed to the Regulations administrator portal, where the current state of the database tables is displayed for each individual candidate version. After successfully generating the temporary database for a specific candidate version, the administrator can work with the created replica and view all the tables and their structure in the Tables section of the Regulations administrator portal. The general interface of the Regulations administrator portal for master and candidate versions when working with tables is the same (see General overview_). During the deployment of temporary databases, the operability of the existing liquibase changelog configuration of the registry regulations is also checked. During this process, information about the execution status of the corresponding Jenkins pipeline is passed to the Regulations administrator portal. The deployment status of the temporary database is published to the corresponding merge request (MR or change request to merge the changes into the master branch) in Gerrit. The regulations management subsystem reads the deployment status of the registry regulations (liquibase deployment) from the corresponding merge request in Gerrit. The execution status of the corresponding pipeline is displayed in the Gerrit merge request for the candidate version using specific labels: SUCCESS: the deployment and verification process is successful (Verified +1) FAILED: the deployment and verification process is unsuccessful (Verified -1) UNKNOWN: the deployment and verification process is ongoing/not performed (Verified label is absent) When working with registry data, a temporary replica is created and deployed from the reference database (PostgreSQL) for each candidate version. Often, this leads to a situation where the candidate branch may have been deleted, but the temporary database continues to exist and utilize registry resources. To address this issue, a special reconciliation process has been implemented to periodically remove outdated database schemas based on candidate versions (candidate versions that have been integrated/merged into the master version or those that have been deleted without integration). Reconciliation process (cleanup-of-version-candidate-db pipeline) is a Jenkins process scheduled to run at a specific time. The frequency parameter for triggering the process is configured at the helm configuration file level of the registry and passed to the Jenkins pipeline trigger level. The default value is once a day at 17:00 GMT+2 (Kyiv time). You can configure the process in your registry’s Jenkins service by following these steps: Open the Jenkins console in your registry project. Find the cleanup-of-version-candidate-db pipeline. Open the settings (⚙ Configure). Go to the Build Triggers section and set the desired frequency for running the process. The frequency is configured in the unix-cron format. When the reconciliation process is triggered, the following actions are performed: Retrieval of the list of candidate versions from the Gerrit repository. Retrieval of the list of temporary databases for candidate versions in the database. Deletion of temporary database schemas for candidate versions for which there are no open merge requests (MR) in Gerrit. After running the cleanup-of-version-candidate-db process, the system deletes all temporary databases that are not in an \"Open\" status in Gerrit.","title":"Registry data model tables and their structures","component":"platform","version":"1.9.6","name":"tables-data-structures","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/tables/tables-data-structures.html","titles":[{"text":"1. General overview","hash":"overview","id":1},{"text":"2. Searching tables by name","hash":"_searching_tables_by_name","id":2},{"text":"3. Sorting tables","hash":"_sorting_tables","id":3},{"text":"4. Viewing table structures","hash":"_viewing_table_structures","id":4},{"text":"4.1. \"General\" tab","hash":"tab-general","id":5},{"text":"4.2. \"Indexes\" tab","hash":"_indexes_tab","id":6},{"text":"4.3. \"Columns\" tab","hash":"_columns_tab","id":7},{"text":"5. Working with tables within candidate versions","hash":"data-model-version-candidate","id":8},{"text":"5.1. Deploying temporary replicas","hash":"_deploying_temporary_replicas","id":9},{"text":"5.2. Verifying the operability of the temporary database deployment configuration","hash":"_verifying_the_operability_of_the_temporary_database_deployment_configuration","id":10},{"text":"5.3. Reconciling outdated schemas of temporary databases","hash":"_reconciling_outdated_schemas_of_temporary_databases","id":11}]},"243":{"id":243,"text":"Registry data model tables and their structures Modeling the structure of registry database tables in an XML code editor","title":"Tables","component":"platform","version":"1.9.6","name":"tables-overview","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/tables/tables-overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"244":{"id":244,"text":"On this page: 1. General provisions 2. Usage scenarios 3. Functional capabilities 3.1. General usage process 3.2. Code syntax analysis, hints, and auto-completion 4. Integration of database table structures from various rule files for display in the administrative portal The administrative portal offers a built-in XML editor specialized in working with the table structure in the data-model/createTables.xml file, simplifying the data model management in the registry regulations. There are two approaches to creating and editing tables: Working directly with the registry regulations files in Gerrit. In this case, there can be multiple files for different tables. For more information on working with tables in the data model, refer to Керування таблицями. Working through the XML editor in the administrative portal. Changes made here, after being applied to the master branch of the registry-regulations repository, only affect one file - data-model/createTables.xml. In this case, it is necessary to follow the following recommendations: All operations related to creating or modifying the structure of database tables should be saved in the data-model/createTables.xml file. This ensures proper organization of data structure and facilitates work with them. The data-model/createTables.xml file should be explicitly included in the list of deployment files in the data-model/main-liquibase.xml configuration. This guarantees that changes in database table structures are correctly accounted for during system deployment. By adhering to these recommendations, you can ensure efficient work with table structures and ensure the correctness of database deployment in your registry. You can choose which approach to use for creating and editing tables. If you choose to work with the administrative portal through the built-in XML editor, for easier handling of table structures in the createTables.xml file, the Monaco Editor solution has been implemented, visualized with the Visual Studio Dark theme. This allows for quick and convenient changes through a unified interface and reduces the number of errors, ensuring a more productive data model management process. One advantage of this editor is syntax code analysis, which provides notifications about syntax errors, if any occur. Additionally, the editor provides suggestions and enables auto-completion, simplifying the process of adding new tables to the data model. Convenient editing of data structure in the registry regulations model using a simple editing window. Automatic saving of changes made to the candidate version of the regulations, facilitating efficient editing process. Display of error messages in the table structure editing window of the registry regulations data model, aiding in quick error detection and correction. Provision of auto-suggestions and auto-completion while editing liquibase changelog xml, simplifying the editing process and preventing errors. Verification of liquibase configuration according to liquibase and DDM xsd, helping configure the configuration correctly and avoid issues. Use the visual code editor to create and edit tables in the registry data model using XML tags. Editing registry regulations components is only possible within change candidate versions. For the master version, only the viewing option is available. For more information on working with regulation versions, refer to Managing regulations versions. In the Regulations administrator portal open the Tables section. You can find the Regulations administrator portal at https://admin-tools-.apps.envone.dev.registry.eua.gov.ua/. Within the change candidate version, open the Structure description file tab and expand the visual editor in full-screen mode by clicking on Expand. Make the necessary changes to the data model and click Save Changes. For more information on working with the registry data model, refer to Creating a physical data model. You will receive a corresponding notification indicating that the changes have been saved. Cancel the changes by clicking Cancel changes. When you click this button, you will receive the following warning message with options for proceeding: Are you sure you want to cancel the changes? If you have made changes to the file but have not saved them and want to exit the editing window, you will receive the following message: The structure description file has been modified. If you leave the page now, unsaved changes will be discarded. The Save changes button is disabled if the structure description file contains errors detected during code analysis and liquibase configuration according to liquibase and DDM xsd (for more details, see Code syntax analysis, hints, and auto-completion) Go to the Version overview section and verify that the changes in the file have been added to the list of changes in your change candidate version with the corresponding status. If changes have been made to the data-model/createTables.xml file through the administrative portal or directly by adding a patch set to Gerrit in the corresponding merge request for the change candidate version, the Structure the database tables section will be displayed on the Version overview page under Latest changes. Apply the changes to the master version of the regulation. For more information, see Reviewing metadata and managing settings for the candidate version. Error handling during the processing of the data model description file. При відкритті вкладки Файл опису структури в адміністративному порталі, у разі відсутності файлу data-model/createTables.xml у репозиторії з регламентом, може виникнути 404 помилка. У випадку проблем із обробкою файлу data-model/createTables.xml, може виникнути 500 помилка. The built-in code syntax analyzer in the Monaco editor offers advantages specific to working with XML markup: XML syntax highlighting: The Monaco editor highlights the relevant elements of an XML file, such as tags, attributes, and text content. This makes it easier to read and edit XML files. Auto-completion of XML tags: The Monaco editor provides auto-completion for closing tags based on open tags. It also offers auto-completion for tags and their contents. Additionally, it suggests auto-completion for standard and non-standard (extended) Liquibase tags and attributes, promoting proper XML file structure and reducing the risk of errors. For more information on available tags for building a data model, refer to A list of standard Liquibase tags and A list of extended Liquibase tags respectively. XML validation: The syntax analyzer checks the correctness of the XML structure in real-time, detecting incorrect or missing tags and attributes. This allows for quick error correction. The code syntax analyzer functions are based on the rules established in the XSD for editing Liquibase XML documents. The corresponding XSD files are stored in the Nexus artifact repository of the Platform. To use auto-suggestions, auto-completion, and code analysis according to the Liquibase XSD and DDM Liquibase Extension while editing the data model structure file, replace http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.5.xsd and https://nexus-public-mdtu-ddm-edp-cicd.apps.cicd2.mdtu-ddm.projects.epam.com/repository/extensions/com/epam/digital/data/platform/liquibase-ext-schema/latest/liquibase-ext-schema-latest.xsd with the updated schemas hosted in Nexus. Please contact the platform administrator for the links to the schemas. This section will help you integrate the structure of database tables from different rule files to display them in the Regulations administrator portal. The goal is to gather all database table structures in one file, createTables.xml. Analysing regulations files Review the files in the data-model directory, such as createTables.xml, tablesCommon.xml, tablesKatottg.xml, etc., which contain sets of changesets with tables and their attributes. Transferring table structures to the createTables.xml file Identify all changesets related to the structure of the database tables in the different regulations files. Transfer these changesets to the createTables.xml file in chronological order. Determining the creation date of a changeset To find the creation date of a changeset, use the Annotate with Git Blame function in IntelliJ IDEA (or any other development environment): Right-click on the left column with line numbers in the file. Select the Annotate with Git Blame option. After that, the left column will expand, and next to each line number, you will see the date of the last update and the author of that line. Checking the results in the Regulations administrator portal. After completing the previous steps, open the administrative portal and navigate to the Tables section > Structure description file. You should now see the entire structure of the database tables collected from various rule files and displayed in the createTables.xml file. Please note that integrating the database table structure in one file is a recommendation to improve the visualization of data structure in the Regulations administrator portal. You can always continue developing the data structure directly in the administrative portal, considering your own requirements and limitations.","title":"Modeling the structure of registry database tables in an XML code editor","component":"platform","version":"1.9.6","name":"xml-editor","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/tables/xml-editor.html","titles":[{"text":"1. General provisions","hash":"_general_provisions","id":1},{"text":"2. Usage scenarios","hash":"_usage_scenarios","id":2},{"text":"3. Functional capabilities","hash":"_functional_capabilities","id":3},{"text":"3.1. General usage process","hash":"_general_usage_process","id":4},{"text":"3.2. Code syntax analysis, hints, and auto-completion","hash":"xsd-liquibase-validation","id":5},{"text":"4. Integration of database table structures from various rule files for display in the administrative portal","hash":"_integration_of_database_table_structures_from_various_rule_files_for_display_in_the_administrative_portal","id":6}]},"245":{"id":245,"text":"The platform provides the ability to view and edit the JSON representation of a form on the Code tab. This functionality allows for quick and easy changes to the form data without using the modeling constructor. Editing the components of a registry regulation is only possible within change candidate versions. The master version only allows viewing. Go to the section for managing UI forms. Open any form. Let’s assume you have noticed an error in the label of a text field and would like to correct it. Go to the Code tab and make changes to the respective field (in our example, the value of the label parameter in the components array). The General, Code, and Constructor tabs are interconnected. Changes made on one of these tabs will appear on the others as well. Open a preview of the form and ensure that the changes have been applied correctly. Open a preview of the form and ensure that the changes have been applied correctly. . Click Save changes to apply the updated form code. When a user attempts to save changes during the creation or editing of a business process or UI form and is on any tab within the Process models or UI Forms sections, validation is triggered if: An UI form with the same system name already exists. In this case, the user will see the following validation message in the top right corner: Form with this system name already exists. Validation rules are violated. In this case, the user will see the validation message in the top right corner: Check the format of required fields. For the business name of the UI form: Validation rules are violated. In this case, the user will see the validation message in the top right corner: Check the format of required fields. During validation checks, the user remains on the current page/tab.","title":"Viewing and editing JSON representation of a form","component":"platform","version":"1.9.6","name":"json-code-view-edit","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/ui-forms/json-code-view-edit.html","titles":[]},"246":{"id":246,"text":"On this page: 1. Sorting forms by name 2. Sorting forms by creation or modification date and time The platform allows you to sort modeled forms by various parameters: by name; by creation or modification date and time. The platform provides you with the ability to sort existing forms by name in the Regulations administrator portal. This type of sorting allows generating an ascending or descending list of forms for convenience and improved user experience. Navigate to the section for managing UI forms. Figure 1. Forms management section In the Form name column, select the sorting option: ↓ — Descending sorting by name (from A to Z alphabetically). ↑ — Ascending sorting by name (from Z to A alphabetically). Figure 2. Sorting forms by name The platform allows sorting existing forms by creation or modification date and time in the Regulations administrator portal. This type of sorting enables creating an ascending or descending list of forms for convenience and improved user experience. Navigate to the section for managing UI forms. Figure 3. Forms management section In the Creation date column, select the sorting option by creation date and time: ↓ — Descending sorting (most recent on top of the list). ↑ — Ascending sorting (most recent at the bottom of the list). Figure 4. Sorting forms by the date and time modified In the Modified column, select the sorting option by modification date and time of the form: ↓ — Descending sorting (most recent on top of the list). ↑ — Ascending sorting (most recent at the bottom of the list). Figure 5. Sorting forms by creation date and time After editing a form, the modification date and time change, and the form moves up the list if descending sorting is chosen. UI forms can only be edited within the change candidate version. To apply the changes from the candidate version to the master version, they need to be applied. After applying the changes to the master version, all candidate branches will automatically receive updates, including the form’s modification dates. This approach allows regulations developers to work in different change candidate branches and explore the history of forms.","title":"Sorting UI forms","component":"platform","version":"1.9.6","name":"sorting-forms","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/ui-forms/sorting-forms.html","titles":[{"text":"1. Sorting forms by name","hash":"sorting-by-name","id":1},{"text":"2. Sorting forms by creation or modification date and time","hash":"sorting-by-date","id":2}]},"247":{"id":247,"text":"After creating a route with a custom DNS name, you need to: Create a CNAME record with your DNS provider. It must direct to the Load Balancer, attached to the OpenShift router (HAProxy). OpenShift router domain is different for each cluster. Canonical name record (CNAME record) is a resource type in the DNS. It matches one domain name (ALIAS) with the other (CNAME). Practically, a CNAME record may look like this: www.example.net. CNAME www.example.com. CNAME records must only be set on another domain name, not the IP-address. You can see the currently set CNAME records via dns.google service. CNAME can’t be set for apex-domains (example.com). A subdomain must be defined (www.example.com). Most of the DNS updates take effect within one hour, and global updates may take up to 48 hours to complete. Write a request for the addition of a new address to the eu.iit.com.ua test widget into the [EPAM] IIT Digital Signature Library Questions Telegram channel.","title":"","component":"platform","version":"1.9.6","name":"custom-dns-external-configuration","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/custom-dns/custom-dns-external-configuration.html","titles":[{"text":"External configuration outside of the OpenShift cluster","hash":"_external_configuration_outside_of_the_openshift_cluster","id":1}]},"248":{"id":248,"text":"To allow for the use of custom DNS name for the public citizen and officer Portals, the Platform for state registries provides the means to configure DNS in the administration UI. Must have a registered domain name. For example, registry.example.com Must have an SSL-certificate for the registry.example.com domain/subdomain, or all the first level *.example.com subdomains. Using Platform for state registries administration UI, an administrator can enter DNS name and upload PEM (Privacy Encoded Mail) certificate on the registry editing page. . The administration UI divides the received certificate into CA (Certificate Authority), certificate, and key. It stores them in the central HashiCorp Vault, using KV engine, and adds the received DNS names to values.yaml in the following format: + global: customDNS: officerPortal: \"officer.example.com\" citizenPortal: \"citizen.example.com\" The registry pipeline receives certificate data from HashiCorp, and creates additional custom resources of the Ingress type for Kong Gateway configuration, and a custom route to istio-ingressgateway with the added certificate. Example: kind: Route apiVersion: route.openshift.io/v1 metadata: name: custom-host-registry-kong-proxy namespace: registry spec: host: registry.example.com to: kind: Service name: istio-ingressgateway-main weight: 100 port: targetPort: http2 tls: termination: edge certificate: | -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- key: |- -----BEGIN PRIVATE KEY----- -----END PRIVATE KEY----- caCertificate: |- -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- insecureEdgeTerminationPolicy: Redirect wildcardPolicy: None Perform external configuration outside of the OpenShift cluster and registry.","title":"","component":"platform","version":"1.9.6","name":"custom-dns-overview","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/custom-dns/custom-dns-overview.html","titles":[{"text":"Functional capacity","hash":"_functional_capacity","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Configuration process","hash":"_configuration_process","id":3}]},"249":{"id":249,"text":"The following diagram displays platform components involved in requirements realization, and their interaction. This section lists system components that are involved, or need to be changed/created within the realization of functional requirements according to the technical solution design. Table 1 Component Service name Purpose Platform administration UI control-plane-console Applying changes to the configuration of available communication channels for the registry target environment Storing configurations for the platform and registries control-plane-gerrit Platform component for storing of configurations for the platform and registries Platform and registries deployment edp-library-stages-fork Platform deployment pipeline Officer portal officer-portal Processing tasks by an officer Citizen portal citizen-portal Receiving services by a citizen","title":"","component":"platform","version":"1.9.6","name":"custom-dns-technical-design","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/custom-dns/custom-dns-technical-design.html","titles":[{"text":"Solution design","hash":"_solution_design","id":1},{"text":"Components and their purpose within solution design","hash":"_components_and_their_purpose_within_solution_design","id":2}]},"250":{"id":250,"text":"This section lists system components that are involved, or need to be changed/created within the realization of functional requirements according to the technical solution design. Table 1 Component Service name Function Administration UI control-plane-console Applying changes to the configuration of available communication channels for the registry target environment Storing configurations for the platform and registries control-plane-gerrit Platform component for storing of configurations for the platform and registries Platform and registries deployment edp-library-stages-fork Platform deployment pipeline Table 2 lists the routes that must be restricted: Table 2 Type Component Route Registry bp-admin-portal business-process-administration-portal Registry admin-portal admin-portal-kong-proxy Registry bp-webservice-gateway bp-webservice-gateway Registry nexus docker-registry, nexus Registry gerrit gerrit Registry hashicorp-vault hashicorp-vault Registry jenkins jenkins Registry officer-portal officer-portal-kong-proxy Registry registry-rest-api * registry-rest-api Registry pgadmin * pgadmin Registry registry-rest-api-external registry-rest-api-external Registry redash redash-admin, redash-viewer Platform control-plane-console control-plane-console Platform gerrit gerrit Platform jenkins jenkins Platform nexus nexus Platform ddm-architecture ddm-architecture Platform external mocks * sign-widget-mock, trembita-dracs-registry-mock, trembita-edr-registry-mock Platform hashicorp-vault hashicorp-vault Platform keycloak keycloak-management-console Infrastructure noobaa noobaa-mgmt, s3 Infrastructure openshift-monitoring alertmanager-main, thanos-querier, prometheus-k8s, grafana Infrastructure openshift-logging kibana Infrastructure openshift-console console, downloads Infrastructure openshift-authentication oauth-openshift Infrastructure istio jaeger, kiali Infrastructure grafana grafana-monitoring * only in case of dev mode deployment","title":"","component":"platform","version":"1.9.6","name":"secure-endpoints-components","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/secure-endpoints/secure-endpoints-components.html","titles":[{"text":"Components and their function within the solution design","hash":"_components_and_their_function_within_the_solution_design","id":1}]},"251":{"id":251,"text":"The purpose is to provide secure access to the following components of OpenShift 4.x cluster: Platform components; Registry components; Infrastructure components. You can learn more about each category here. The Platform realizes access blocking functionality for every route on HAProxy level, the following way: While creating a registry, an Administrator can set IP-addresses that will have access to the registry components. Platform administration UI adds the listed IP-addresses to values.yaml file into the registry configuration, in the following format: global: whiteListIP: adminRoutes: \"192.168.1.64/26 172.16.0.192/27\" officerPortal: \"192.168.1.240/29\" citizenPortal: \"0.0.0.0/0\" that is further used by components Helm-charts to deploy the registry with annotations in corresponding routes: metadata: annotations: haproxy.router.openshift.io/ip_whitelist: 192.168.1.64/26 172.16.0.192/27 The administrator can set the IP-address lists separately for the Officer Portal, Citizen Portal, and administration components. Each component must include the public IP-address of the cluster. Keycloak must include all the CIDR from other operational zones, or be generally accessible, if the Citizen Portal has no restrictions. The adding interface looks like this: IP-address entering process: registry IP address list display and editing interface looks like this: During the editing of an existing registry, the administrator can add or delete IP-addresses with allowed access to registry components. Platform Administration UI updates the added IP-addresses in the values.yaml, in the registry configuration repository, which is then used by Helm-chart to deploy the registry. The adding interface looks the same as the one in the registry creation process. In the \"Cluster management\" section, the administrator can set CIDR to restrict external access for platform and infrastructure components. The Administration UI creates a merge request for the values.yaml file, and after administrator approval, the cluster-mgmt pipeline performs the update and adding of required annotations. To add/change annotations in other routes that aren’t managed by Helm-charts, the annotate-routes stage of cluster-mgmt pipeline is used. values.yaml example: global: whiteListIP: adminRoutes: \"192.168.1.64/26 172.16.0.192/27\" The CIDR set by the administrator for the registry must also be added for platform components automatically.","title":"","component":"platform","version":"1.9.6","name":"secure-endpoints-overview","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/secure-endpoints/secure-endpoints-overview.html","titles":[{"text":"Functional capacity","hash":"_functional_capacity","id":1},{"text":"Registry components","hash":"_registry_components","id":2},{"text":"Platform components, infrastructure components, and other routes","hash":"_platform_components_infrastructure_components_and_other_routes","id":3}]},"252":{"id":252,"text":"The following diagram displays the Platform components involved in requirements realization, and interaction between them. The diagram shows the main traffic flows to the main operational zones (each zone has its onw list of allowed CIDR):","title":"","component":"platform","version":"1.9.6","name":"secure-endpoints-tech-design","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/secure-endpoints/secure-endpoints-tech-design.html","titles":[{"text":"Solution design","hash":"_solution_design","id":1}]},"253":{"id":253,"text":"On this page: 1. General description 2. User roles 3. Functional scenarios 4. General principles and provisions 5. Current technical design 6. Technical solution design 7. Management interface 8. High-level development plan 8.1. Technical examinations 8.2. Development plan 9. Data migration when updating the registry 10. Security 10.1. Business Data 10.2. Спрощена модель загроз 10.3. Security risk mitigation mechanisms and security compliance 11. Glossary and acronyms In the current version of the Registry Platform, there is no process for managing the settings of the registry backup subsystem. To implement such functionality, it is proposed to improve the admin console interface, which the administrator uses the registry can configure the schedule and time to store registry backups. Registry administrator Entering the backup schedule through the admin console Setting the storage time of backup copies through the admin console Entry of the backup schedule in unix-cron format is set by the administrator Backup storage time settings are specified in days by the administrator and set in hours for the backup system Setting the backup schedule and backup storage time is optional when creating the registry When the storage period expires, the backup system deletes outdated backup copies The entered schedule must correspond to the unix-cron format and be validated by the admin console Backup storage time must be greater than or equal to one, be an integer, and contain no special characters Automatic backups can be turned off or on with a switch When entering a backup schedule, the admin console should show when the next three backup runs will take place When updating the registry to a new version, the backup schedule and backup storage time settings should remain unchanged By default, the automatic backups setting is disabled for new registries The admin console should show the date of the last successful backup and the date of its deletion By default, the time zone Europe/Kiev is set in values.yaml and at the pod level with Jenkins, as an environment variable When backup is disabled, existing backups are not deleted The admin console should reflect the specified time zone in values.yaml when configuring the backup schedule. In the current version of the platform, registry backup is available only when the corresponding job is manually launched. Setting the storage time of backup copies is not provided. This diagram shows the services involved in fulfilling the requirements and the interaction between them. In addition, important features that must be taken into account in the framework of implementation are depicted. The backup schedule and backup retention time are passed in values.yaml global: timeZone: Europe/Kiev ..... registryBackup: enabled: true schedule: \"30 19 * * *\" expiresInDays: 3 and in the registry-parameters/values codebase annotation of the registry resource. The operator must react to the change in the CR codebase and trigger the job provisioner, which will recreate Create-registry-backup job with new parameters. An example of configuring a schedule in Jenkins: 30 19 * * * Expand to see more mockups Initial state. Backup is disabled: Previous backups exist in the system. We output the date of creation of the copy and the number of days until its deletion: BE / DevOps Extending the functionality of the codebase operator with a jenkins job provisioner trigger after updating the CR codebase Extension of the UI functionality of the admin console for entering / saving backup schedule settings and their storage time Development of groovy functions in jenkins job provisioner for updating parameters in Create-registry-backup job. When updating the registry to a new version of the backup schedule settings, the current settings should remain unchanged. It is necessary to provide for the possibility of disabling automatic backup of the registry. Data category Description Privacy Integrity Accessibility Technical data containing open information System settings, configs, parameters with non-confidential values, but changing which can negatively affect system attributes Absent High High Risk Security controls Realization Priority Remote command execution (RCE). The expiresInDays value without sanitization is committed to herit from the admin console interface. When starting the backup procedure, the value is passed to the backup-registry.sh script as an argument, again without sanitization, which allows you to execute any system command on the provisioner Implement a positive validation mechanism for the \"Schedule\" form on the frontend Implement a positive validation mechanism for data from the \"Schedule\" form on the backend Implement a strict typing and validation mechanism for expiresInDays data on the frontend Implement a mechanism of strict typing and validation for data from the expiresInDays form on the backend Implement the argument sanitization mechanism in the backup-registry.sh script Partially considered in the initial design. It remains to implement the argument sanitization mechanism in the backup-registry.sh script Critical Refusal of Service (DOS) by scheduling backups to run every minute Design a limit for the backup schedule to run at least once an hour. Not considered in the initial design High Risk of data loss if the storage period for backup copies is too short Develop a minimum limit for the storage period of backup copies equal to 7 days. Not considered in the initial design High Risk of data loss if backup is not enabled by default. (Secure by default) Develop a default backup and retention schedule and use it for new registries. Not considered in the initial design High Disclaimer of authorship. Lack of audit log and information about who was involved in the backup configuration. The target service should log all requests and send them to a centralized logging and monitoring system. Make sure that all unsuccessful requests and errors during operations will be logged. The logging system must use a unified time and time zone. Logs must be in a unified format and contain all the necessary information for the investigation of security incidents. Logs should not contain sensitive information or it should be obfuscated accordingly Not considered in the initial design Average Risk of data leakage when using external domain name space Transfer all internal interservice communication to private domain names. Partially considered in the initial design. Some services may use external addresses. It is necessary to transfer all services to communication within a private network Average Security requirements: Configuring network security policies Configure network policies to conform to the principle of least privilege. Considered in the initial design Average Term Description СR Custom Resource","title":"Manage the schedule and storage time of registry backups","component":"platform","version":"1.9.6","name":"backup-schedule","url":"/platform/1.9.6/arch/architecture/platform/administrative/control-plane/platform-evolution/backup-schedule.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. User roles","hash":"_user_roles","id":2},{"text":"3. Functional scenarios","hash":"_functional_scenarios","id":3},{"text":"4. General principles and provisions","hash":"_general_principles_and_provisions","id":4},{"text":"5. Current technical design","hash":"_current_technical_design","id":5},{"text":"6. Technical solution design","hash":"_technical_solution_design","id":6},{"text":"7. Management interface","hash":"_management_interface","id":7},{"text":"8. High-level development plan","hash":"_high_level_development_plan","id":8},{"text":"8.1. Technical examinations","hash":"_technical_examinations","id":9},{"text":"8.2. Development plan","hash":"_development_plan","id":10},{"text":"9. Data migration when updating the registry","hash":"_data_migration_when_updating_the_registry","id":11},{"text":"10. Security","hash":"_security","id":12},{"text":"10.1. Business Data","hash":"_business_data","id":13},{"text":"10.2. Спрощена модель загроз","hash":"_спрощена_модель_загроз","id":14},{"text":"10.3. Security risk mitigation mechanisms and security compliance","hash":"_security_risk_mitigation_mechanisms_and_security_compliance","id":15},{"text":"11. Glossary and acronyms","hash":"_glossary_and_acronyms","id":16}]},"254":{"id":254,"text":"On this page: 1. General description 1.1. User roles 2. Functional scenarios 3. General principles and provisions 4. Technical solution design 4.1. Registry components and their purpose within the solution design 5. Development plan 5.1. Technical examinations 5.2. Development plan 6. Data migration when updating the registry 7. Security Providing the ability to edit registry settings depending on its version. In the current version of the Platform, the admin console version is a component of the Platform and registers management subsystem and is updated together with the Platform. After the update, provided that there were changes in the work with registry settings in values.yaml may cause problems with managing those registries that, for one reason or another, have not yet been updated to of the latest version due to the incompatibility of the specification of the old values.yaml and the new logic of the admin console. To solve this versioning problem, three options were considered: Version control at the code base level of the admin console Separation of the admin console into two separate consoles: platform and registry and update them independently Routing between different versions of the admin console using Istio rules In this transitional design, it was decided to consider a third option to solve these problems because of its relative ease of implementation Technical registry administrator Technical administrator of the Platform Application of Istio routing rules for automatic network switching of traffic between versions of the admin console Deployment of the new version of the admin console as a separate deployment with the specified version. Along with the Platform update, the admin consoles of previous versions should remain deployed The root for all existing admin consoles remains the same The admin console, when going to the page for viewing/editing a specific registry, must insert its version in query parameters The admin console controller must check the correspondence of the version set in the request parameter and the version of the registry where the user goes If there are no registries left on the cluster with the version for which the admin console is intended, then it must be deleted together with by routing rules when starting cluster-mgmt pipeline To support the function of creating registries of old versions, the admin console of the previous version (N-1) must always remain on the cluster and versions of existing registers on the Platform Routing logic between versions is transferred to the Istio layer Tags on the registry creation page should display only the current version and one previous version, and all others should be hidden. The Istio VirtualService defines a set of traffic routing rules that are applied when contacting a host. Each routing rule defines eligibility criteria for traffic of a specific protocol. If the traffic matches, it is sent to the appropriate version of the admin console. In this case, the criterion of compliance will be HTTP Request parameter. Figure 1. Top-level diagram For example, consider two versions of the admin console 1.9.3 and 1.9.4. Figure 2. Two versions of the admin console are deployed in the cluster By default, there are no additional options, and the technical administrator is in this case uses the latest available version of the admin console to view the list of created registers, manage the Platform and creation of new registers. Figure 3. Without parameters, traffic goes to the latest version by default When you go to the page for viewing/editing a specific registry, the admin console takes its version and pastes it parameter version=1.9.3 in the request. Istio Envoy reads the version parameter and redirects traffic to on instances of the admin console of the corresponding version by selector. Figure 4. With the parameter, the traffic goes to the specific specified version To prevent the issue of version conflicts when a user forwards or bookmarks a link to the registry, the admin console controller must check the version set in the request parameter and the registry version where the user goes. If the versions do not match, show the page with the offer to return to the page from list of registers. When deploying the admin console, the following changes should occur: In the labels and deployment selectors of the admin console, the version of the Platform for which it is intended should be inserted. For example, consider version 1.9.4: app: control-plane-console version: 1.9.4 The `control-plane' namespace has the following annotations: istio-injection: enabled kiali-enabled: 'true' Istio-ingressgateway must also be deployed in the `control-plane' namespace. Examples: Gateway deployment ingressGateways: - enabled: true k8s: hpaSpec: maxReplicas: 1 minReplicas: 1 service: type: ClusterIP label: istio: istio-ingressgateway-control-plane name: istio-ingressgateway-control-plane namespace: control-plane Gateway description kind: Gateway apiVersion: networking.istio.io/v1alpha3 metadata: name: gateway namespace: control-plane labels: app.kubernetes.io/managed-by: Helm spec: servers: - hosts: - control-plane-console.apps. port: name: http2 number: 80 protocol: HTTP selector: istio: istio-ingressgateway-control-plane The admin console deployment has the istio sidecar inject label: sidecar.istio.io/inject: 'true' The route of the admin console points to the service `istio-ingressgateway'. Example: spec: host: control-plane-console.apps. to: kind: Service name: istio-ingressgateway-control-plane weight: 100 port: targetPort: http2 Configuring VirtualService and DestinationRule for routing depending on the request parameter. Example: kind: DestinationRule apiVersion: networking.istio.io/v1alpha3 metadata: name: control-plane namespace: control-plane spec: host: control-plane-console.control-plane.svc.cluster.local subsets: - labels: app: control-plane-console version: 1.9.3 name: v1-9-3 - labels: app: control-plane-console version: 1.9.4 name: v1-9-4 kind: VirtualService apiVersion: networking.istio.io/v1alpha3 metadata: name: cp-console namespace: control-plane spec: hosts: - control-plane-console.apps. gateways: - gateway http: - match: - uri: regex: /registry/[^/]+ queryParams: version: exact: 1.9.3 name: version-1.9.3 route: - destination: host: control-plane-console.control-plane.svc.cluster.local port: number: 8080 subset: v1-9-3 - match: - uri: regex: /registry/[^/]+ queryParams: version: exact: 1.9.4 name: version-1.9.4 route: - destination: host: control-plane-console.control-plane.svc.cluster.local port: number: 8080 subset: v1-9-4 - name: version-1.9.4 route: - destination: host: control-plane-console.control-plane.svc.cluster.local port: number: 8080 subset: v1-9-4 Component Official title Appointment / The essence of the changes The web interface is the interface for managing the Platform and registries control-plane-console Changes in the controller, adding headers Deployment of the platform and registries edp-library-stages-fork Changing the deployment logic of Istio-ingressgateway Service for inspection and storage of configuration changes control-plane-gerrit Change of cluster-mgmt templates to deploy istio configuration Інсталлятор Платформи control-plane-installer Changing the packaging and versioning logic of admin consoles FE DevOps Extending the functionality of the admin console to manage registry version parameters, control the registry version and the version in the header, hiding past tags in the registry creation menu Changing logic of packing, versioning and updating admin consoles in control-plane-installer Development of Istio routing rules Extension of deploy-via-helmfile stage with Istio-ingressgateway deployment functionality For Platform versions below 1.9.5, provide the ability to configure Istio routing rules for legacy clusters with one console","title":"Providing the ability to edit registry settings depending on its version","component":"platform","version":"1.9.6","name":"handling-cp-console-versions","url":"/platform/1.9.6/arch/architecture/platform/administrative/control-plane/platform-evolution/handling-cp-console-versions.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"1.1. User roles","hash":"_user_roles","id":2},{"text":"2. Functional scenarios","hash":"_functional_scenarios","id":3},{"text":"3. General principles and provisions","hash":"_general_principles_and_provisions","id":4},{"text":"4. Technical solution design","hash":"_technical_solution_design","id":5},{"text":"4.1. Registry components and their purpose within the solution design","hash":"_registry_components_and_their_purpose_within_the_solution_design","id":6},{"text":"5. Development plan","hash":"_development_plan","id":7},{"text":"5.1. Technical examinations","hash":"_technical_examinations","id":8},{"text":"5.2. Development plan","hash":"_development_plan_2","id":9},{"text":"6. Data migration when updating the registry","hash":"_data_migration_when_updating_the_registry","id":10},{"text":"7. Security","hash":"_security","id":11}]},"255":{"id":255,"text":"On this page: 1. General description 1.1. User roles 2. Functional scenarios 3. General principles and provisions 4. Design of an existing solution 4.1. Keycloak DNS 4.2. DNS names for administrative user interfaces 4.3. Disadvantages of the current implementation 5. Technical solution design 5.1. Approximate layouts of the design of the admin console 5.1.1. Service users to access HashiCorp Vault: 5.2. Registry components and their purpose within the design of the solution 6. Development plan 6.1. Technical examinations 6.2. Development plan 7. Data migration when updating the registry 8. Security 8.1. Business Data 8.2. Simplified threat model 8.3. Security risk mitigation mechanisms and security compliance Providing the ability to configure DNS names for the Keycloak user and role management service using the interface admin console. Design by DNS name configuration (separate on behalf of the OpenShift cluster) for the Cabinet of the official and the Cabinet of the recipient of services did not take into account the need in the configuration, also the appropriate name for the user and role management service (Keycloak) through the admin console. Also, if the OpenShift cluster is created entirely in a private network, then certificate verification is performed at the subsystem level inter-service interaction management and Keycloak authentication are not working correctly with some registry components. This transitional design offers a solution to these problems. Technical registry administrator Technical administrator of the Platform Configuration of DNS names of the Keycloak component through the admin console at the Platform level Choosing a DNS name for logging into user accounts through the admin console at the registry level Removal of DNS names added to Keycloak The configuration of existing Keycloak DNS names is set by the technical administrator of the Platform Along with the DNS name, the platform administrator must also specify the TLS certificate in .pem format for the domain DNS names for user registry offices are configured by the registry technical administrator The registered administrator can select a domain for Keycloak from the list of available ones The list of domains available in the system is formed from the specified DNS names of the Keycloak platform In the cabinet settings, it is possible to download separate TLS certificates in .pem format for each cabinet user The Platform Administrator is responsible for the rotation of Keycloak certificates and user accounts The system must be able to edit previously installed TLS certificates and DNS names The admin console must validate that the downloaded TLS certificate really corresponds to the entered domain and is not self-signed and its validity period has not yet expired. Access to HasiCorp Vault for reading certificates is only through a separate service user In the case of deployment of the registry without a portal (official or citizen), appropriate UI elements for configuring DNS names should not be shown. The specified URL for Keycloak and cabinets cannot be more than 63 characters and must be validated for correctness. In the current version of the Platform, the DNS configuration of the Keycloak name is as follows: Manually add the following setting to values.yaml of the registry: keycloak: customHost: keycloak.example.com Manually configure the Keycloak Frontend URL in the corresponding realm to the new DNS name Manually create an OpenShift Route with an added TLS certificate Manually change the Redash SAML URL DNS name configuration design for user accounts Setting the DNS name of the central Keycloak component takes place from the registry configuration Requires a lot of manual settings (route, request auth, keycloak realm, etc.) The technical administrator of the Platform does not control the DNS settings of the Keycloak platform DNS names are set at the common-web-app component level, not at the registry configuration level Before starting to configure a custom DNS name for Keycloak at the registry level, you must first add the appropriate one domain in the Platform settings. With the configured Keycloak DNS name, it should appear in the dropdown item in the registry settings with the offer choose DNS names for logging into registry offices: the default cluster or one of the custom ones. Figure 1. High-level interaction diagram at the level of subsystems The platform and registry management subsystem stores received TLS certificates in the secrets management subsystem and encryption and adds to values.yaml the domain and path to the TLS certificate according to the example: An example of configuration at the values.yaml level of the cluster-mgmt.git repository keycloak: customHosts: - host: keycloak.example.com certificatePath: registry-kv/.... - host: keycloak-login.instance.com certificatePath: registry-kv/.... An example of configuration at the values.yaml level of the registry repository portals: officer: customHost: enabled: true host: officer.example.com certificatePath: registry-kv/.... Platform TLS certificates are stored in HashiCorp Vault (user-management:hashicorp-vault) with a path generated by convention: registry-kv/cluster/domains/ key:caCertificate value: key:certificate value: key:key value: Registered TLS certificates are stored in HashiCorp Vault (user-management:hashicorp-vault) with a path generated according to the convention: registry-kv/registry//domains// key:caCertificate value: key:certificate value: key:key value: Figure 2. High-level interaction diagram at the configuration deployment level With a given custom DNS name for Keycloak and for cabinets in the corresponding registry, the following should happen: configuration of Redash Viewer: Redash Viewer environment variable configuration example REDASH_SAML_METADATA_URL # the default Keycloak URL of the OpenShift cluster REDASH_SAML_REDIRECT_URL # external (custom) Keycloak DNS name create additional istio request authentication to the already existing ones: Istio RequestAuthentication Configuration Example for Registry Components jwtRules: - forwardOriginalToken: true fromHeaders: - name: X-Access-Token issuer: {{ template \"issuer.officer\" . }} #external (custom) Keycloak DNS name jwksUri: {{ template \"jwksUri.officer\" . }} #default Keycloak URL of the OpenShift cluster Must be configured for registry-rest-api, excerpt-service-api and registry-regulation-management configuration of Keycloak Frontend URL: Keycloak Frontend URL configuration example via KeycloakRealm CR spec: frontendUrl: #external (custom) Keycloak DNS-імʼя configuration of Keycloak redash viewer client web URL: Example configuration of Redash client webURL spec: webUrl: #external (custom) Redash DNS name configuration of Kong OIDC plugin: Example configuration of Kong OIDC plugin config: issuers_allowed: #external (custom) Keycloak DNS name discovery: #default Keycloak URL of the OpenShift cluster introspection_endpoint: #external (custom) Keycloak DNS name Istio Gateway configuration for user accounts: Istio Gateway Configuration Example spec: .... servers: - hosts: .... - #external (custom) officer-portal DNS-name Istio Virtual Service configuration for user accounts: Virtual Service configuration example spec: gateways: - gateway hosts: - #external (custom) officer-portal DNS-name Figure 3. Platform level DNS configuration layout Cluster Keycloak default DNS name is read by the admin console from the Keycloak CR specification in user-management Figure 4. Platform-level DNS configuration layout Figure 5. Platform level DNS configuration layout Figure 6. DNS configuration layout at the registry level Each component accessing the Vault must be run from a separate OpenShift service account. Service users created in HashiCorp Vault must be of type Kubernetes Auth Method and created during the initial setup of HashiCorp Vault via the ConfigMap script-init execution. Component The name of the service account Connected Namespaces Capabilities Jenkins control-plane-jenkins Registry namespace, user-management [\"read\"] Example Capability Policy HashiCorp Vault { \"policy\": \"path \\\"registry-kv/registry//domains/\\\" \\\"{ capabilities = [ \\\"read\\\" ]}\\\"\"} } An example of linking the OpenShift account service to HashiCorp Vault { \"bound_service_account_names\": [\"control-plane-jenkins\"], \"bound_service_account_namespaces\": \"ns\", \"policies\": [\"policy-name\"], \"ttl\": \"1h\" } Component Official title Purpose / The essence of the changes Status The web interface is the interface for managing the Platform and registries control-plane-console Changes to interfaces and logic for storing certificates in Vault To Do Deployment of the platform and registries edp-library-stages-fork Changing the logic for obtaining certificates from the Vault and deploying Keycloak and registries To Do User portals common-web-app Configuration of Kong plugins Done Report viewing service redash-viewer Configuration of environment variables To Do Registry settings registry-configuration Settings of Keycloak Frontend URL To Do Keycloak Operator keycloak-operator Configuration of Keycloak Frontend URL To Do HashiCorp Vault vault policy and service user configuration To Do BE DevOps Add functionality to configure the Realm Frontend Url Keycloak operator Change admin console UI according to layouts and general provisions Develop functionality for configuring DNS names in pipelines and registry component charts Already configured custom DNS names should remain during migration. If the DNS name for Keycloak was already configured, the pre-upgrade script should transfer it to values.yaml and Vault Taking into account the number of manual actions that were performed on different prod clusters to configure domains, heterogeneity and the individuality of the settings after the update, the old resources are suggested to be deleted by the administrator of the registry/platform Data category Description Privacy Integrity Accessibility Technical data containing open information System settings, configs, parameters with non-confidential values, but changing which can negatively affect system attributes Absent High High Technical data containing service information System settings, configurations, parameters that are service information High High High Technical data containing restricted information System settings, configs, parameters containing information with limited access, the change of which can negatively affect system attributes Medium High High All risks have been eliminated in the architectural design","title":"Custom URL configuration for the Keycloak user and role management service","component":"platform","version":"1.9.6","name":"keycloak-custom-url","url":"/platform/1.9.6/arch/architecture/platform/administrative/control-plane/platform-evolution/keycloak-custom-url.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"1.1. User roles","hash":"_user_roles","id":2},{"text":"2. Functional scenarios","hash":"_functional_scenarios","id":3},{"text":"3. General principles and provisions","hash":"_general_principles_and_provisions","id":4},{"text":"4. Design of an existing solution","hash":"_design_of_an_existing_solution","id":5},{"text":"4.1. Keycloak DNS","hash":"_keycloak_dns","id":6},{"text":"4.2. DNS names for administrative user interfaces","hash":"_dns_names_for_administrative_user_interfaces","id":7},{"text":"4.3. Disadvantages of the current implementation","hash":"_disadvantages_of_the_current_implementation","id":8},{"text":"5. Technical solution design","hash":"_technical_solution_design","id":9},{"text":"5.1. Approximate layouts of the design of the admin console","hash":"_approximate_layouts_of_the_design_of_the_admin_console","id":10},{"text":"5.1.1. Service users to access HashiCorp Vault:","hash":"_service_users_to_access_hashicorp_vault","id":11},{"text":"5.2. Registry components and their purpose within the design of the solution","hash":"_registry_components_and_their_purpose_within_the_design_of_the_solution","id":12},{"text":"6. Development plan","hash":"_development_plan","id":13},{"text":"6.1. Technical examinations","hash":"_technical_examinations","id":14},{"text":"6.2. Development plan","hash":"_development_plan_2","id":15},{"text":"7. Data migration when updating the registry","hash":"_data_migration_when_updating_the_registry","id":16},{"text":"8. Security","hash":"_security","id":17},{"text":"8.1. Business Data","hash":"_business_data","id":18},{"text":"8.2. Simplified threat model","hash":"_simplified_threat_model","id":19},{"text":"8.3. Security risk mitigation mechanisms and security compliance","hash":"_security_risk_mitigation_mechanisms_and_security_compliance","id":20}]},"256":{"id":256,"text":"On this page: 1. User roles 2. Functional scripts 3. General principles and provisions 4. Design of an existing solution 4.1. Disadvantages of the current implementation 5. Technical solution design 5.1. Indicative design layouts of the admin console 6. Data migration when updating the registry 7. Development plan 7.1. Technical examinations 7.2. Development plan Enabling technical administrators to update certificates of service providers and the list of Accredited key certification centres for the Platform and registries separately from the service key update procedure. Technical registry administrator Technical administrator of the Platform Update of data for key verification (root certificates CACertificates.p7b and list of Accredited key certification centres CAs.json) through the admin console Updating key data Updating the list of allowed keys After updating key secrets, the DSO component must be restarted in order for the new values to be pulled When creating and editing the registry or the Platform, the menu items Key data, Key verification data and The Allowed Key List must be configured separately and independently of each other Separate settings apply to all types of keys (hardware and file) Functionality for updating keys, certificates and the list of Accredited key certification centres is combined together and all fields are mandatory To replace the certificates CACertificates.p7b and the list of Accredited key certification centres, the administrator must also update the registry keys. The technical implementation of updating the keys does not change. You can see the current implementation here Figure 1. Key data setup layout Figure 2. Data setup layout for key validation All changes made must be backwards compatible with previous versions of the console. DevOps FrontEnd/BE Logically divide UI elements into groups and configure validation Add the current date and time to the file name in Gerrit","title":"Separation of service provider certificate renewal process and key renewal process","component":"platform","version":"1.9.6","name":"update-certs-without-keys","url":"/platform/1.9.6/arch/architecture/platform/administrative/control-plane/platform-evolution/update-certs-without-keys.html","titles":[{"text":"1. User roles","hash":"_user_roles","id":1},{"text":"2. Functional scripts","hash":"_functional_scripts","id":2},{"text":"3. General principles and provisions","hash":"_general_principles_and_provisions","id":3},{"text":"4. Design of an existing solution","hash":"_design_of_an_existing_solution","id":4},{"text":"4.1. Disadvantages of the current implementation","hash":"_disadvantages_of_the_current_implementation","id":5},{"text":"5. Technical solution design","hash":"_technical_solution_design","id":6},{"text":"5.1. Indicative design layouts of the admin console","hash":"_indicative_design_layouts_of_the_admin_console","id":7},{"text":"6. Data migration when updating the registry","hash":"_data_migration_when_updating_the_registry","id":8},{"text":"7. Development plan","hash":"_development_plan","id":9},{"text":"7.1. Technical examinations","hash":"_technical_examinations","id":10},{"text":"7.2. Development plan","hash":"_development_plan_2","id":11}]},"257":{"id":257,"text":"On this page: 1. Abstract 2. Actors and user roles 3. General principles and provisions 4. Functional scenarios 5. Current implementation 6. Target design 6.1. Schema and Liquibase tag extension module 6.2. Service generator 6.3. System components and their designation in the solution design 7. Modeling of registry regulations 7.1. Modeling search criteria 7.2. Validation of registry regulations 8. High-level development plan 8.1. Technical assessments 8.2. Development plan This article covers implementation of a possibility for a modeler to manage logical operators, OR or AND, for combining the search parameters, and the order of their defining. Registry developer The behavior and the contract of existing search criteria do not change. Reverse compatibility of search criteria configuration is maintained. Setting up search criteria Generation of search criteria services In the search criteria, there is a possibility to set the fields for searching using the searchType attribute of the ext:column tag. For example, for a search criterion defined as follows: when calling, provided that all parameters have been passed, the following search string is generated that combines all the parameters using the `AND' operator. name like '$1%' AND live = $2 AND id = $3 According to the API search criteria contract, the search parameters are optional. Therefore, if a parameter is not passed, it is not included into the search string. For example, if the id parameter is not passed, then the search string is generated without it. name like '$1%' AND live = $2 In any case, all parameters are combined by the `AND' operator, and the regulation modeler cannot change this. In the scheme of extended tags, the ext:logicOperator element of new tableLogicOperatorType type is added to the allowed child elements of the ext:table tag with the tableSearchConditionType type (the one used for tables, not the tag having the same name used in the CTE and having a different type). It has one mandatory type attribute, the type of or or and logical operator , and can contain ext:column and ext:logicOperator elements, i.e. itself. Changes to the Liquibase extended tag scheme .... The possibility to write all the information about ext:logicOperator tags required for service generation in the ddm_liquibase_metadata metadata table when processing the createSearchCondition tag is added to the Liquibase tag extension module. Placing the ext:column tags without the searchType attribute inside the ext:logicOperator tag is prohibited. The ext:logicOperator tag controls which column conditions are bracketed and which operator is used to combine these bracketed conditions. That is, opening a tag is equivalent to the opening bracket, and closing a tag is equivalent to the closing bracket in the resulting request to the database, and the type attribute indicates which logical operator to use. When implementing the algorithm, the following rules shall be kept in mind: First-level ext:table search conditions are combined using the and operator, just like before the changes. Search conditions between different tables are combined using the and operator. If no conditions are passed for any of the columns inside the ext:logicOperator element during a call, then this element is not processed. For example, when calling for the following search criterion the following search string should be generated, provided that all parameters are passed: -- -- -- registration_no=$0 -- AND ( -- solution_date=$1 -- OR laboratory_id=$2 -- OR ( -- firstname=$3 -- AND surname=$4 -- ) -- ) -- -- AND -- ( -- name=$5 -- OR constant_code=$6 -- ) -- -- This section gives a list of system components that are engaged or need to be changed/created in the framework of the implementation of functional requirements according to the technical design of the solution. Component Service name Designation / Changes Service Generator service-generation-utility Generation of Java projects for services Liquibase extended tagging scheme liquibase-ext-schema Scheme validation Liquibase tag extension module liquibase-ddm-ext Processing of extended tags at the regulations deployment stage The regulations administrator gets a possibility to control which logical operator, OR or AND, to use for combining the search parameters and in which order they are determined. Figure 1. Registry regulations structure Configuration example As part of the implementation of the solution, the xml scheme of extended liquibase tags used for validation will be extended. BE Extension of the Liquibase extended tags scheme. Liquibase tag extension module extension. Extension of service generator. Development of instructions for the regulations developer and reference examples.","title":"Management of the logical operator type in the search criteria","component":"platform","version":"1.9.6","name":"sc-where-logic-operators","url":"/platform/1.9.6/arch/architecture/registry/administrative/regulation-management/platform-evolution/sc-where-logic-operators.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Actors and user roles","hash":"_actors_and_user_roles","id":2},{"text":"3. General principles and provisions","hash":"_general_principles_and_provisions","id":3},{"text":"4. Functional scenarios","hash":"_functional_scenarios","id":4},{"text":"5. Current implementation","hash":"_current_implementation","id":5},{"text":"6. Target design","hash":"_target_design","id":6},{"text":"6.1. Schema and Liquibase tag extension module","hash":"_schema_and_liquibase_tag_extension_module","id":7},{"text":"6.2. Service generator","hash":"_service_generator","id":8},{"text":"6.3. System components and their designation in the solution design","hash":"_system_components_and_their_designation_in_the_solution_design","id":9},{"text":"7. Modeling of registry regulations","hash":"_modeling_of_registry_regulations","id":10},{"text":"7.1. Modeling search criteria","hash":"_modeling_search_criteria","id":11},{"text":"7.2. Validation of registry regulations","hash":"_validation_of_registry_regulations","id":12},{"text":"8. High-level development plan","hash":"_high_level_development_plan","id":13},{"text":"8.1. Technical assessments","hash":"_technical_assessments","id":14},{"text":"8.2. Development plan","hash":"_development_plan","id":15}]},"258":{"id":258,"text":"There are two vastly different approaches to horizontal scaling of traditional databases: read scalability and write scalability. The only way to achieve horizontal write scalability is by using database sharding. Horizontal read scalability is achievable by separating reads and writes. Based on our research and Citus solution tests, sharding turned out to be impractical. We found two key issues. First, BPMS (Camunda) database structure does not allow sharding the tables in such a way that increasing the number of working pods would increase performance. On the contrary, performance decreased in all the configurations that were tested. Second, loading the sharded tables with requests sometimes leads to distributed locks. Automatic horizontal scaling is a viable option, but it involves a substantial drop in performance, albeit temporarily. This scaling approach usually makes sense to use on a schedule tied to planned load changes. Applications BPMS, data fabric, User/Excerpt/Audit/etc. services Pgpool-II A load balancer. Pgpool-II takes advantage of the replication feature to reduce the load on each PostgreSQL server by distributing SELECT queries among multiple servers, improving system’s overall throughput. Write requests are sent to the master server. PGO Postgres Operator from Crunchy Data automatically manages PostgreSQL clusters based on a simple declarative description. Postgres Operator controls the following elements: Master DB A PostgreSQL instance that acts as a replication master. Replica DB PostgreSQL instances that act as replicas and receive data from the master synchronously. Master Service A Kubernetes service that provides a DNS name to the pod that acts as a master. Replica Service A Kubernetes service that provides a single DNS name to a number of pods that act as a replica. It can balance the load between them. Cluster Service A Kubernetes service that provides a single DNS name to all pods in a cluster. It can balance the load between them. S3 AWS S3 (or S3-compatible) storage that keeps backups and archived WAL logs. It is possible to use other storage types such as Azure, GCS, or Kubernetes persistent volume. Operational Cluster A cluster that serves the registry’s applications and services. Analytical Cluster A cluster that serves analytical tools such as Redash. It receives data through logical replication from the operational cluster. External access is read-only. Example 1. Operational cluster sample definition apiVersion: postgres-operator.crunchydata.com/v1beta1 kind: PostgresCluster metadata: name: operational spec: image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres:centos8-14.2-0 postgresVersion: 14 instances: - name: instance1 replicas: 3 backups: pgbackrest: image: registry.developers.crunchydata.com/crunchydata/crunchy-pgbackrest:centos8-2.36-1 patroni: dynamicConfiguration: synchronous_mode: true synchronous_node_count: 2 pause: false postgresql: parameters: synchronous_standby_names: \"*\" use_slots: true pg_hba: - host all all all md5 users: - name: postgres Example 2. Pgpool-II sample definition apiVersion: apps/v1 kind: Deployment metadata: name: pgpool spec: replicas: 1 selector: matchLabels: app: pgpool template: metadata: labels: app: pgpool spec: containers: - name: pgpool image: pgpool/pgpool env: - name: POSTGRES_USERNAME valueFrom: secretKeyRef: name: operational-pguser-postgres key: user - name: POSTGRES_PASSWORD valueFrom: secretKeyRef: name: operational-pguser-postgres key: password volumeMounts: - name: pgpool-config mountPath: /config volumes: - name: pgpool-config configMap: name: pgpool-config Example 3. Pgpool-II sample config apiVersion: v1 kind: ConfigMap metadata: name: pgpool-config labels: name: pgpool-config data: pgpool.conf: |- listen_addresses = '*' port = 5432 pool_passwd = /config/pool_passwd socket_dir = '/var/run/pgpool' pcp_listen_addresses = '*' pcp_port = 9898 pcp_socket_dir = '/var/run/pgpool' backend_hostname0 = 'operational-primary' backend_port0 = 5432 backend_weight0 = 0 backend_flag0 = 'ALWAYS_PRIMARY|DISALLOW_TO_FAILOVER' backend_hostname1 = 'operational-replicas' backend_port1 = 5432 backend_weight1 = 1 backend_flag1 = 'DISALLOW_TO_FAILOVER' sr_check_period = 0 enable_pool_hba = off backend_clustering_mode = 'streaming_replication' num_init_children = 200 max_pool = 1 reserved_connections = 0 child_life_time = 300 child_max_connections = 0 connection_life_time = 0 client_idle_limit = 0 connection_cache = on load_balance_mode = on statement_level_load_balance = off ssl = off failover_on_backend_error = off logging_collector = off pool_hba.conf: |- local all all trust host all all 127.0.0.1/32 trust host all all ::1/128 trust host all all 0.0.0.0/0 md5 Operational and analytical clusters can be scaled independently. A cluster can work both in the master-only mode, without scaling, and in master + replicas mode, with separate reads and writes. Cluster scaling is configured by changing PostgresCluster CRD and Pgpool-II configuration in ConfigMap if separate reads and writes are enabled or disabled. Switching the configuration from master-only to master + replicas and vice versa causes all connections to the database cluster to be broken. Reducing the number of pods breaks connections created for the deleted pods. In both cases connections are renewed after several seconds, but during this scaling operation services may return errors. Example 4. Analytical cluster Set spec.instances.replicas to the total number of pods. This parameter includes the master and replicas. When set to 1, only the master without replicas is deployed. Set spec.patroni.dynamicConfiguration.synchronous_node_count to the number of replicas. This parameter is always 1 less than the total number of pods (spec.instances.replicas). Apply manifest changes. Example 5. Operational cluster Perform the steps described for the analytical cluster. When switching from a single-pod configuration (spec.instances.replicas=1) to a configuration with two or more pods, add or uncomment the replicas endpoint settings in pgpool.conf: backend_hostname1 = 'operational-replicas' backend_port1 = 5432 backend_weight1 = 1 backend_flag1 = 'DISALLOW_TO_FAILOVER' When switching from a configuration with two or more pods to a single-pod configuration, delete or comment out the replicas endpoint settings in pgpool.conf: #backend_hostname1 = 'operational-replicas' #backend_port1 = 5432 #backend_weight1 = 1 #backend_flag1 = 'DISALLOW_TO_FAILOVER' When switching from a configuration with two or more pods to a different configuration with two or more pods, no additional steps are necessary. For example, when switching from 2 to 5 pods, or from 5 to 3 pods, there is no need to change the pgpool config.","title":"Scaling PostgreSQL instances","component":"platform","version":"1.9.6","name":"db_scaling","url":"/platform/1.9.6/arch/architecture/registry/operational/data-storage/relational-db/db_scaling.html","titles":[{"text":"PostgreSQL cluster structure","hash":"_postgresql_cluster_structure","id":1},{"text":"Manifest examples","hash":"_manifest_examples","id":2},{"text":"Cluster scaling","hash":"_cluster_scaling","id":3}]},"259":{"id":259,"text":"On this page: 1. Overview 2. Modelling and configuring Cancel Event 2.1. Modelling and configuring Cancel End Event 2.2. Modelling and configuring Cancel Boundary Interrupting Intermediate Event Cancel Events are used to initiate and process transaction cancellation during the modelling of transactional subprocesses. Cancel Event element is only used for transaction modelling. There are two types of Cancel Events: Cancel End Event — an event modelled at the end of transactional subprocess cancellation. It initiates cancellation when being caught by the Cancel Boundary Interrupting Intermediate Event. Cancel Boundary Interrupting Intermediate Event — works as an intermediate catch event for transaction cancellation. It initiates when a transaction is cancelled by a Cancel End Event. When a Cancel Boundary Interrupting Intermediate Event initiates, it interrupts all activities in the transactional subprocess. To model and configure Cancel End Event, take the following steps: Mode a parent process[1] process. Model a transactional subprocess that includes the required activities. Add an end event to the transactional process to allow for an alternative activity sequence. Select the end event in the subprocess alternative branch, click the key icon and select Cancel End Event in the configuration. On the configuration panel on the right, open the General tab and configure the element: In the Id field, enter element ID, or leave default value. In the Name field, enter element name (for example, Cancelled). Proceed with modelling transactional process: On the transactional subprocess boundary, add an intermediate event for an alternative activity sequence. Select the intermediate event modelled on the subprocess boundary, click the key icon and select Cancel Boundary Event in the configuration. On the right panel, open the General tab and configure the element: In the Id field, enter element ID, or leave the default value. In the Name field, enter element name (for example, Cancel Boundary). Finish the parent process modelling, and all the alternative outcomes from the transaction subprocess. 1. Parent Process is a process that initiates subprocess start. A subprocess is a Child Process to a Parent Process.","title":"\"Cancel\" event","component":"platform","version":"1.9.6","name":"cancel-event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/transaction-subprocess/cancel-event.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modelling and configuring Cancel Event","hash":"_modelling_and_configuring_cancel_event","id":2},{"text":"2.1. Modelling and configuring Cancel End Event","hash":"_modelling_and_configuring_cancel_end_event","id":3},{"text":"2.2. Modelling and configuring Cancel Boundary Interrupting Intermediate Event","hash":"_modelling_and_configuring_cancel_boundary_interrupting_intermediate_event","id":4}]},"260":{"id":260,"text":"On this page: 1. Overview 2. Modelling and configuring Error Event when working with transaction subprocess 2.1. Modelling and Configuring Error End Event 2.2. Modelling and configuring Error Boundary Interrupting Intermediate Event When modelling transaction subprocesses, if the subprocess ends with an Error Event, then the transaction results in an error. Such an error is not processed within the subprocess, and the transaction cuts without any compensation. The parent process countinues with an Error Boundary Interrupting Intermediate Event on the boundary of the transaction process. Within the modelling 2 types of Error Event are used: Error End Event — an event that is modeled when a transaction process ends with an error. When an Error End Event appears, all active flows of the process end, and the error is caught by Error Boundary Interrupting Intermediate Event. Error Boundary Interrupting Intermediate Event — an event that is modelled on the boundary of a transaction subprocess as a catch Error event. Such an event is initiated when a transaction ends with the Error End Event element. To model and configure an Error End Event, take the following steps: Model Parent business process. Model transaction subprocess with all necessary activities. In the transaction subprocess, add an end event for the alternative sequence flow. Select the end event in the alternative branch of subprocess, click the key icon, and select Error End Event in the configuration. On the right panel, open the General folder and configure the element: In the Id field, enter element ID, or leave the default value. In the Name field, enter element name. For example, credit card is NOT valid Expand the Details block by clicking the plus icon (+). * In the Name field, enter error name for the database. For example, cardNotValid. * In the Code field, optionally, enter the variable of error code. For example, InvalidCreditCard. * In the Global Error referenced field, select the link to error element. For example, cardNotValid (code= InvalidCreditCard). + The value in this field is set automaticallu, and corresponds with the Name field error name value. If the error code variable is also set, then the value will be set automatically in the Global Error referenced field, linked to the Code field. Optionally, enter error data for the database in the Message field. Continue the modelling of transaction subprocess: On the transaction subprocess boundary, add an intermediate event for the alternative sequence flow. To do that, on the left panel select Create Intermediate/Boundary Event element and place it on the boundary of transaction subprocess container. Select the boundary event modelled on subprocess boundary, click the key icon and select Error Boundary Event in the configuration. On the right panel, open the General folder, and configure the element: In the Id field, enter element ID, or leave the default value. In the Name field, enter element name. For example, Error charge credit card Expand the Details block by clicking the plus icon (+). If the error is initiated by Error End Event element, select a link to the caught error element in the Global Error referenced field. Name and Code fields will be filled automatically. The value in Global Error referenced must be identical for all linked elements: error send and catch elements. If the Error Event is initiated by a business logic error during the execution of a business process, perform the following: in the Code Varuable field, define the constant or JUEL-function that contains error code; in the Message Variable field, define the constant or JUEL-function that contains error data. You can initiate Error Event by generating an Error Event in a defined process, or via `Delegation Code'. Another way to define an error is to set a type of any Java exception as an error code. Connection error happens when a transaction process has an unprocessed error (for example, an invalid receipt number) that doesn’t allow the debit and credit operation subprocesses to continue. In this case, a subprocess ends without compensation. The database performs a rollback, and the process continues via Credit Error event. Exception processing is performed via via Credit Error event. Cancel event flow goes as follows: Attempt to perform debit from client account, but the server doesn’t respond. The UI generates error result, and Error Boundary Event starts. The process continues with Perform phone transfer. Complete the modelling of parent process and all alternative sequences of the transaction process.","title":"Подія «Помилка» у транзакційному підпроцесі","component":"platform","version":"1.9.6","name":"error-event-transaction","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/transaction-subprocess/error-event-transaction.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modelling and configuring Error Event when working with transaction subprocess","hash":"_modelling_and_configuring_error_event_when_working_with_transaction_subprocess","id":2},{"text":"2.1. Modelling and Configuring Error End Event","hash":"error-end-event-transaction","id":3},{"text":"2.2. Modelling and configuring Error Boundary Interrupting Intermediate Event","hash":"error-boundary-interrupting-event","id":4}]},"261":{"id":261,"text":"On this page: 1. Overview 2. Modelling transaction subprocess A Transaction subprocess is a subprocess used to model transaction business processes that can be executed for days or weeks, until all their activities are finished. A Transaction is a set of activities that comprise a logical unit of operation, which must be executed together. The process is regulated by a special protocol (defined in the execution environment) that provides either the full execution or full cancellation of all activities of the transaction process. A Transaction can have one of the three following results: The transaction is considered successfull, if all the activities in the process were successfully executed, and the process continues normally. Such a transaction subprocess can be compensated with a Compensation Event if required (this element is currently not described). The transaction ends with an error, if the subprocess ends with an Error Event, which is not processed within transaction subprocess. In this case, transactions are interrupted without any compensation, and the process continues with an intermediate error event. The transaction is cancelled if the execution reaches a Cancel Event. All the actions that have already been executed, need to be stopped and cancelled. This is achieved with compensation actions (Compensation Event is currently not described). After compensation, the execution is continued via the output sequence flow(s) of boundary cancel event. To model a transaction subprocess, take the following steps: Model the Parent[1] business process, that we’ll add transaction subprocess to. On the left panel, select the Create expanded SubProcess element, and drag it to the modelling canvas. Select the container with the subprocess, click the key icon and select Transaction type in configuration. Model transaction business process using the required activities. Finish the parent process modelling, and all the alternative outcomes from the transaction subprocess. 1. Parent Process is a process that initiates subprocess start. A subprocess is a Child Process to a Parent Process.","title":"Transaction subprocess","component":"platform","version":"1.9.6","name":"transaction","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/transaction-subprocess/transaction.html","titles":[{"text":"1. Overview","hash":"_overview","id":1},{"text":"2. Modelling transaction subprocess","hash":"_modelling_transaction_subprocess","id":2}]},"262":{"id":262,"text":"On this page: 1. General description 2. Functional capabilities 2.1. General usage process 2.2. Code autocompletion and custom JUEL function autocompletion 2.2.1. Code autocompletion 2.2.2. Autocompletion for custom JUEL functions 2.3. Code syntax analysis and error checking 2.3.1. Critical errors 2.3.2. Non-critical errors 2.4. Code commenting 2.4.1. Single-line comments 2.4.2. Multi-line comments 2.5. Code folding and unfolding The developer of the registry regulations can edit Groovy scripts using the visual code editor in the embedded BPMN.iO diagram editor. The solution implements the Monaco Editor, visualized with the Visual Studio Dark theme. The solution provides an enriched web code editor (a simplified version of an IDE development environment) that significantly enhances working with Groovy scripts in business processes. The tool supports essential functions for working with source code, allowing you to create and edit scripts in a single place — the script tasks of the registry’s business processes, without the need for external desktop applications. The following features are supported when working with the editor: Autocompletion Autocompletion for custom functions Syntax code analysis and error checking Comment support Code folding and unfolding Use the visual code editor when creating and editing scripts within the scope of business process modeling. Editing components of the registry regulations is only possible within change candidate versions. For the master version, only the viewing option is available. For more details on working with versions of the regulations, refer to Managing regulations versions. In the Regulations administrator portal, open the Process models section. You can find the Regulations administrator portal at the following link: https://admin-tools-.apps.envone.dev.registry.eua.gov.ua/. Within the candidate version, select the process and click the 🖉 edit icon. Navigate to the Builder tab and model the business process in the web editor. The capabilities of the Builder tab are described in more detail at Modeling business processes in BPMN editor. Create a script task (Script Task). Click Open script editor to open the Script editor. Create or edit the script. Expand the editing window or view the script in full-screen mode for convenience. Click Save to save the changes. Click Close to cancel the changes. If the script contains any potential errors, the editor will provide a corresponding message on the screen. When working with scripts in the modeling editor, you can utilize code autocompletion, including autocompletion for custom JUEL functions from the dropdown list. This helps prevent errors during manual parameter entry. The built-in intelligent completion features predict data type and flow and suggest parameters based on the context. For example, prompts for possible methods used in variables, function completions, and more. The built-in intelligent completion features also include autocompletion for custom JUEL functions that enhance business process capabilities and facilitate modeling. Use platform JUEL functions to simplify business process modeling. Currently, the following functions and their autocompletion are implemented in the visual code editor: initiator() completer() system_user() submission() sign_submission() get_variable() set_variable() set_transient_variable() process_caller() message_payload() save_digital_document_from_url() get_trembita_auth_token(). For more information on using JUEL functions, please refer to bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. The editor supports code syntax analysis and provides explanations to detail errors. When hovering over specific elements, such as a variable used in the script, the editor suggests the package and class it refers to. If the code contains a critical error made by the modeler, the editor highlights the error in red within the script and displays a corresponding explanation on the screen. If the code contains a non-critical error made by the modeler, when hovering over the cursor, the editor highlights the error in yellow within the script and displays a corresponding explanation on the screen. The built-in script editor allows you to add comments to the code. Comments provide clear explanations or annotations in the source code of the script/program. They are added to make the source code easier to understand for humans and are ignored by compilers and interpreters. This means you can \"hide\" parts of the program or specific lines from execution. Use single-line or multi-line comments. Single-line comments start with // (double forward slash) and can be used anywhere within a line. Characters after // until the end of the line are considered part of the comment. Multi-line comments start with /* (forward slash followed by an asterisk) and can be used anywhere within a line. Characters after /* are considered part of the comment, including newline characters, until the first */ (asterisk followed by a forward slash) that closes the comment. Therefore, multi-line comments can be placed at the end or even within an expression, and so on. Use code folding and unfolding functions to make your code more readable and hide or reveal details of specific blocks as needed. You can organize block structure using reserved statements such as def, for, if, else, and so on. When hovering the cursor next to a specific statement (an open block), a switch will appear allowing you to fold it. Unfolding switches are always visible. Simply click on one to show the details in the code block.","title":"Editing business process scripts in a visual code editor","component":"platform","version":"1.9.6","name":"edit-groovy-scripts","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/edit-groovy-scripts.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Functional capabilities","hash":"_functional_capabilities","id":2},{"text":"2.1. General usage process","hash":"_general_usage_process","id":3},{"text":"2.2. Code autocompletion and custom JUEL function autocompletion","hash":"_code_autocompletion_and_custom_juel_function_autocompletion","id":4},{"text":"2.2.1. Code autocompletion","hash":"_code_autocompletion","id":5},{"text":"2.2.2. Autocompletion for custom JUEL functions","hash":"_autocompletion_for_custom_juel_functions","id":6},{"text":"2.3. Code syntax analysis and error checking","hash":"_code_syntax_analysis_and_error_checking","id":7},{"text":"2.3.1. Critical errors","hash":"_critical_errors","id":8},{"text":"2.3.2. Non-critical errors","hash":"_non_critical_errors","id":9},{"text":"2.4. Code commenting","hash":"_code_commenting","id":10},{"text":"2.4.1. Single-line comments","hash":"_single_line_comments","id":11},{"text":"2.4.2. Multi-line comments","hash":"_multi_line_comments","id":12},{"text":"2.5. Code folding and unfolding","hash":"_code_folding_and_unfolding","id":13}]},"263":{"id":263,"text":"The Regulations administrator can work with the components of business processes on the corresponding General, Code, and Builder tabs. Managing process names Viewing and Editing XML Code Representation of Processes Modeling business processes in BPMN editor Editing business process scripts in a visual code editor","title":"Viewing and editing components of a business process","component":"platform","version":"1.9.6","name":"process-components-overview","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/process-components-overview.html","titles":[{"text":"Section overview","hash":"_section_overview","id":1}]},"264":{"id":264,"text":"The Regulations administrator portal allows easy and straightforward modeling of business processes using the built-in web editor BPMN.io in your browser. This tool enables you to view, create, and edit diagrams in BPMN 2.0 notation based on XML. Figure 1. Visual representation of a business process in the web editor on the Builder tab The functionality offers a standard solution that enables modeling of business processes in BPMN 2.0 notation with the use of built-in integration extensions-connectors within the administrator portal. The catalog includes typical integration extensions (delegates) that allow you to create predefined configurations for BPMN elements (conditional notation system and their description for business process modeling), such as service and user tasks, and more. After applying them through the properties panel, they provide customized parameters for the user. These typical extensions simplify the modeling process, reduce large diagrams, scripts, and save your time. The latest versions of typical business process extensions will be automatically available in the Regulations administrator portal after updating the registry. A detailed description of available integration extensions can be found at Standard business process extensions. The use of scripts also facilitates working with business processes. Scripts are executed directly by the process engine (BPMN Engine). The main scripting language for the Platform is Groovy. Scripts are used within the Script Task element. Alongside scripts, support for JUEL functions has been implemented to streamline modeling. For more information on the use of JUEL functions in business processes, please refer to bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc. You can create new, or edit an existing business process diagram on the Builder tab, in the built-in web editor BPMN.io. Figure 2. Editing a business process diagram in the web editor The modeler can utilize both the capabilities of the Regulations administrator portal and model business processes in any other BPMN editor, such as Camunda Modeler, and more. The process modeling is illustrated at bp-modeling/bp/bp-modeling-instruction.adoc. Additional useful links for working with business processes and the registry: Task No. 2. Modeling a business process without integration Task 3. Business process modeling with integration Task No. 4. Modeling a business process with a start form and dependent components on the forms study-project/study-tasks/task-5-bp-modeling-multiple-participants.adoc study-project/study-tasks/task-7-bp-modeling-trembita-invocation.adoc The principle of process modeling based on the BPMN 2.0 standard is the same for all editors. At the same time, working with processes on the Builder tab in the registry administrator interface does not require additional software installation, such as a modeler, extension libraries, and plugins, as it is an out-of-the-box solution. Developers can model a new business process using the capabilities of the Code tab. The tab allows direct work with the process code, i.e., its XML representation. For more information on working with process code, please refer to Viewing and Editing XML Code Representation of Processes All changes on the General, Code, and Builder tabs are synchronized. This means that if you modify an element in the constructor, it will be reflected in the code and vice versa.","title":"Modeling business processes in BPMN editor","component":"platform","version":"1.9.6","name":"tab-bpmn-editor","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/tab-bpmn-editor.html","titles":[]},"265":{"id":265,"text":"Utilize the capabilities of the Code tab to model business processes. This functionality allows you to work directly with the code of the process, namely its XML representation. Figure 1. XML representation of a business process on the Code tab Editing the components of the registry regulations is only possible within change candidate versions. For the master version, only the viewing option is available. For more information on working with registry versions, please refer to the following page: Managing regulations versions Creating BPMN models directly in the code is generally challenging and impractical when there is a visual editor at hand. However, access to the XML code opens up new possibilities and simplifies modeling when, for example, you need to: quickly adjust parts of the diagram (process name, tasks, etc.). migrate old business processes modeled in other editors and systems (such as Camunda Modeler). rapidly integrate a process into the registry if it was sent via email or chat. utilize useful examples while developing a business process: code snippets from various thematic communities (Stack Overflow, Camunda, BPMN communities, etc.) or ready-made solutions for your business processes and tasks. Simply copy the ready BPMN diagram and paste the XML description into the corresponding field on the Code tab. The XML code of business processes is validated against an XSD schema. When transferring code to a process, the system validator kicks in. If the Business-process code field is empty or contains syntax errors, you will see a corresponding warning on the screen, indicating a validation error: Attention! The XML representation of the business process contains errors. Figure 2. Copying BPMN diagram code in a text editor Figure 3. Field for inserting BPMN diagram code on the Code tab Figure 4. Inserting BPMN diagram code on the Code tab All changes on the General, Code, and Builder tabs are synchronized. This means that if you modify an element in the constructor, it will be reflected in the code and vice versa.","title":"Viewing and Editing XML Code Representation of Processes","component":"platform","version":"1.9.6","name":"tab-code","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/tab-code.html","titles":[]},"266":{"id":266,"text":"On this page: 1. General description 1.1. User roles 2. General principles and provisions 3. Solution design 3.1. Repository packaging with reference examples of registry regulations 3.2. Writing detailed technical instructions for deploying the demo registry and its regulations 3.3. Registry components and their purpose within the design of the solution 4. Development plan 4.1. Technical examinations 4.2. Development plan Enabling the technical administrator of the Platform to deploy a demo registry with reference examples for modeling business processes and creating regulations. To deploy the demo registry by the technical administrator of the Platform, he needs an existing reference example of the regulation. Technical administrator of the Platform The repository with reference examples consent-data is present in the Platform service of inspection and storage of changes gerrit configurations The documentation includes a section for Platform administrators with instructions for deployment, support and maintenance registry demo For this purpose, at the assembly level of the Platform installer, the consent-data repository is packaged as a gitsource component in control-plane-gerrit. Consent-data must be versioned and updated with the Platform. The instruction must be present in Antor in a separate section with reference examples and contain the following sections: How to deploy a demo registry How to transfer the contents of the `consent-data' repository to `registry-regulations' and what changes should be made to it (change links to Nexus etc.) How to update the demo register and its regulations after updating the Platform How to return the demo registry to its original state if something went wrong Component Official title Appointment / The essence of the changes Platform installer control-plane-installer Stage update of PushControlPlaneLibrary Technical repository of DevOps devops-technical Update pipeline for updating library versions Service for inspection and storage of configuration changes control-plane-gerrit Updating of stageCR.json Technical documentation of the Platform ddm-architecture Updating the instructions of the technical administrator of the Platform DevOps Package consent-data in control-plane-gerrit Write instructions for the technical administrator of the Platform","title":"Deploying a demo registry with examples of how to correctly model business processes","component":"platform","version":"1.9.6","name":"demo-registry","url":"/platform/1.9.6/arch/architecture/platform/administrative/control-plane/platform-evolution/demo-registry/demo-registry.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"1.1. User roles","hash":"_user_roles","id":2},{"text":"2. General principles and provisions","hash":"_general_principles_and_provisions","id":3},{"text":"3. Solution design","hash":"_solution_design","id":4},{"text":"3.1. Repository packaging with reference examples of registry regulations","hash":"_repository_packaging_with_reference_examples_of_registry_regulations","id":5},{"text":"3.2. Writing detailed technical instructions for deploying the demo registry and its regulations","hash":"_writing_detailed_technical_instructions_for_deploying_the_demo_registry_and_its_regulations","id":6},{"text":"3.3. Registry components and their purpose within the design of the solution","hash":"_registry_components_and_their_purpose_within_the_design_of_the_solution","id":7},{"text":"4. Development plan","hash":"_development_plan","id":8},{"text":"4.1. Technical examinations","hash":"_technical_examinations","id":9},{"text":"4.2. Development plan","hash":"_development_plan_2","id":10}]},"267":{"id":267,"text":"On this page: 1. Abstract 1.1. User roles 2. Functional scenarios 3. Target design 3.1. Example of a file containing an externalized script 3.2. System components and their purpose in the solution design 3.3. Registry regulations 3.4. Regulations publication pipeline 3.5. Portals and validation service 3.6. Form providing service 3.6.1. Changes in Redis 3.6.2. Add endpoints: 3.7. Regulations management service 3.7.1. Add endpoint: 4. Development plan 4.1. Technical assessments 4.2. Plan When modeling forms for tasks, it is often necessary to use the same Javascript functions that have to be duplicated. This relates both to functions that are relevant for any registry, and to those that make sense to reuse within specific regulations or even a business process. To process all these scenarios, it is suggested to save individual javascript files at the regulations level. These files are available through API in form-schema-provider and are used when performing tasks. Regulations developer Reusing Javascript repeated functions within Javascript inserts when modeling forms. The following form parameters are supported: Custom Default Value Calculated Value Custom Validation Advanced Conditions others, including specific to some components (for example, Filter Query and Custom Filter on the Select component) After adding such a file, users are able to use the myUtil function and the myConst variable in their Javascript inserts: function myUtil() { return JSON.stringify(data); // you can use common formio variables here } var myConst = 'veryCustom'; This section provides a list of system components that are involved or need to be changed/created as part of the implementation of functional requirements according to the technical design of the solution. Component Official name Purpose / Essence of changes Register regulations registry-regulations-publications Add the form-scripts folder for storing externalized scripts. Regulations publication pipeline registry-regulations-publication-pipeline Add processing of externalized scripts — their storage and updating in the form-schema-provider service (similar to forms). Form providing service form-schema-provider Forms will now require externalized scripts. In the form-schema-provider service, it is necessary to add the ability to store and update scripts separately from forms. You also need to add a separate GET formScriptList endpoint so that it returns all scripts together in the String format. Regulations management service registry-regulation-management For correct work with form preview on admin-portal, externalized scripts must be connected to the form. Therefore, in addition to form-schema-provider, changes are also required in the regulation management service. As part of these changes, one more endpoint should be added for the candidate and master versions that will read script files and return them in String format. UI form data validation service form-submission-validation For the correct validation of entered data, it is necessary to make the same computations as in the portals. Therefore, the validation service must also take into account externalized scripts. Register administrator portal admin-portal Change the form component so that it accepts arbitrary scripts as text and performs all Javascript computations based on these scripts. Officer portalи officer-portal Add script data processing and transfer it to the form component as text Citizen portal citizen-portal Add script data processing and transfer it to the form component as text Add the form-scripts folder to regulations' Gerrit for storing scripts: Figure 1. Structure of the registry regulations The UploadFormScripts.groovy file in /platform/pipelines/stages/impl/lowcode must be added to registry-regulations-publications. The implementation of this script is similar to the UploadFormChanges.groovy script for saving forms. One way or another, portals will receive externalized scripts in the String format and pass them to the form component. The form component will add the script text to any Javascript attribute of the form components. This way, all functions and constants will be available when computing Javascript attributes. This applies to officer-portal, citizen-portal, admin-portal and form-submission-validation. Figure 2. Execution order of the Javascript attribute Create the new namespace (keyspace): bpm-form-scripts form-schema-provider new API registry-regulation new API FE (changes in portals) BE (changes in services) DevOps (changes in the publication pipeline) Add an endpoint to the registry-regulation-management service for getting scripts Add endpoints to the form-schema-provider service for saving, changing and getting scripts Update the form component Request externalized scripts on the admin-portal and transfer them to the form component Process the parameter of the externalized scripts on the citizen and officer portal and pass it to the form component Add request for form-schema-provider in form-submission-validation and process scripts Add changes to the publication pipeline Add a reference business process to consent","title":"Externalization of UI form scripts","component":"platform","version":"1.9.6","name":"form-scripts","url":"/platform/1.9.6/arch/architecture/registry/administrative/regulation-management/platform-evolution/form-scripts/form-scripts.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"1.1. User roles","hash":"_user_roles","id":2},{"text":"2. Functional scenarios","hash":"_functional_scenarios","id":3},{"text":"3. Target design","hash":"_target_design","id":4},{"text":"3.1. Example of a file containing an externalized script","hash":"_example_of_a_file_containing_an_externalized_script","id":5},{"text":"3.2. System components and their purpose in the solution design","hash":"_system_components_and_their_purpose_in_the_solution_design","id":6},{"text":"3.3. Registry regulations","hash":"_registry_regulations","id":7},{"text":"3.4. Regulations publication pipeline","hash":"_regulations_publication_pipeline","id":8},{"text":"3.5. Portals and validation service","hash":"_portals_and_validation_service","id":9},{"text":"3.6. Form providing service","hash":"_form_providing_service","id":10},{"text":"3.6.1. Changes in Redis","hash":"_changes_in_redis","id":11},{"text":"3.6.2. Add endpoints:","hash":"_add_endpoints","id":12},{"text":"3.7. Regulations management service","hash":"_regulations_management_service","id":13},{"text":"3.7.1. Add endpoint:","hash":"_add_endpoint","id":14},{"text":"4. Development plan","hash":"_development_plan","id":15},{"text":"4.1. Technical assessments","hash":"_technical_assessments","id":16},{"text":"4.2. Plan","hash":"_plan","id":17}]},"268":{"id":268,"text":"On this page: 1. Abstract 2. Functional scenarios 3. User roles 4. General principles and provisions 5. High-level design of the solution 5.1. Overwrite protection 6. Scope of work 6.1. Preliminary decomposition 6.2. Changes to the REST API 6.3. Limitations of the solution In the process of developing or correcting minor errors that do not require significant changes in the regulations, the developer still has to do a large number of actions, namely — create a candidate version in the Admin portal, make changes to the regulations and integrate changes into the master version. It consumes a lot of time and effort. To improve the modeling experience, it is necessary to provide an opportunity to introduce changes directly into the master version of regulations. Editing a form directly in the master version of the registry regulations. Editing a business process directly in the master version of the registry regulations. Creating a form directly in the master version of the registry regulations. Creating a business process directly in the master version of the registry regulations. Editing a form in the master version of the registry regulations with a simplified process of creating a candidate version. Editing a business process in the master version of the registry regulations with a simplified process of creating a candidate version. Creating a form in the master version of the registry regulations with a simplified process of creating a candidate version. Creation a business process in the master version of the registry regulations with a simplified process of creating a candidate version. Copying a form to the master version of the registry regulations. Copying a business process to the master version of the registry regulations. Deleting a form from the master version of the registry regulations. Deleting a business process from the master version of the registry regulations. All the functional scenarios refer to the Regulations modeling web interface. Regulations developer The regulations developer can edit, create or delete a form or business process directly in the master version of the registry regulations. Entity is the general name of a form or business process in this document. The simplified process of creating a candidate version includes an automated sequence of steps after clicking the edit/create/delete entity button, namely entering information about the candidate version, creating a candidate version, making changes to the entity and saving changes to a candidate version. When editing, creating and deleting an entity, it is necessary to ensure protection against overwriting the changes that may be made by other modelers. When creating an entity, a verification for existence of an entity having the same name must be performed. When editing and deleting an entity, a verification must be performed to ensure that the changes are applied in relation to the latest version of the entity (regardless of the candidate or master version). When checking for availability of changes, it has to be taken into account that changes can be made both in the Admin portal and directly in Gerrit. When editing and deleting an entity (http method PUT, DELETE), the general arch:architecture/registry/administrative/regulation-management/services/registry-regulation-management/rest-api/rest-api-partials/optimistic-locking.adoc approach has to be used that is used in the system. If conflicting changes are available, the system must remain in a consistent state after processing such a request. If conflicting changes are available, a user must manually copy the edited content, refresh the entity page and make changes manually. When making changes directly to master, a Gerrit MR must be created together with the submit and private parameters. Submit indicates that the changes must be integrated immediately. Private is used for separation to mark changes that do not require for running the pipeline to check the regulations (additional setting in the Jenkins-Gerrit integration). Figure 1. Component diagram Figure 2. Action chart. Creating an entity Figure 3. Action chart. Updating an entity Figure 4. Action chart. Deleting an entity Figure 5. Creating a form/business process. Protection against changes overwriting Figure 6. Updating a form/business process. Protection against changes overwriting Figure 7. Deleting a form/business process. Protection against changes overwriting [FE] Add the ability to create/edit a form/business process in the master version. [BE] Extend the API for working with forms and business processes in the master version. [DEVOPS] Configure the regulations checks pipeline to work only with the public Gerrit changes (exclude Private changes). [FE] Add a simplified process for creating a candidate version from the entity creation page. [FE] Add a link to Jenkins to track the regulations publication result in the Admin Portal. [FE] Add user action prompts in handling of errors containing conflicts. [BE] Implement BusinessProcessEtagInterceptor to check etag when updating a business process. [BE] Add a check for duplicate names when creating an entity at the VersionedFileRepository level. [BE] Add the etag check when updating an entity at the VersionedFileRepository level. [BE] Add handling of merge conflicts when publishing changes to Gerrit. [BE] Extend HeadFileRepositoryImpl with support for writing files to the repository. [BE] Extend HeadFileRepositoryImpl with support for deleting files in the repository. [FE] Add the ability to copy entity in the master version. [FE] Add the ability to delete entity in the master version. [DEVOPS] Add account service rights to RRM to perform the update by submit operation in Gerrit. Registry Regulation Management In case of conflicting changes, a user needs to manually copy the content, refresh the page and repeat saving and conflict analysis. The current design does not cover the actual deletion of forms and business processes in Form-management-provider and BPMS respectively.","title":"Simplified regulations development process using the master version for forms and business processes and protection against changes overwrite","component":"platform","version":"1.9.6","name":"master-development","url":"/platform/1.9.6/arch/architecture/registry/administrative/regulation-management/platform-evolution/master-development/master-development.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Functional scenarios","hash":"_functional_scenarios","id":2},{"text":"3. User roles","hash":"_user_roles","id":3},{"text":"4. General principles and provisions","hash":"_general_principles_and_provisions","id":4},{"text":"5. High-level design of the solution","hash":"_high_level_design_of_the_solution","id":5},{"text":"5.1. Overwrite protection","hash":"_overwrite_protection","id":6},{"text":"6. Scope of work","hash":"_scope_of_work","id":7},{"text":"6.1. Preliminary decomposition","hash":"_preliminary_decomposition","id":8},{"text":"6.2. Changes to the REST API","hash":"_changes_to_the_rest_api","id":9},{"text":"6.3. Limitations of the solution","hash":"_limitations_of_the_solution","id":10}]},"269":{"id":269,"text":"On this page: 1. Abstract 2. Functional scenarios 3. User Roles 4. General principles and provisions 5. Glossary and acronyms 6. Modeling examples 6.1. An example of a BP simulation with an ASiC container as an input parameter that contains several files 6.2. Example of a BP modeling to get a p7s container with an embedded signature as part of the data from an external API 7. Delegate for validation 7.1. Delegate parameters 7.2. REST API 7.3. Low-level design 8. signature_details(, ) 8.1. JUEL function 8.2. REST API 8.3. Low-level design 9. signature_content((, ) 9.1. JUEL function 9.2. REST API 9.3. Low-level design 10. Updating IIT library 11. High level development plan 12. Technical expertise 13. Development Plan When integrating with third-party systems at the business process level, there is a need to work with signed files that are downloaded or transferred to a business process by these systems. Namely, there is a need to ensure the integrity of these files by checking the QES applied to these files. Get information about the signatory for further processing or entry into registers. There is also a need to view the contents of container files. Verification of data integrity by validating the signature indicating the container type. Getting information about all data signatories. Getting content from a signed data array. Modeler Data is processed in the script-tasks of a business process. Getting data from third-party sources outside of this design. Byte data between systems is transmitted encoded using Base64. The default format is CAdES-X-Long. Data and signature in a given iteration always arrive in the same data array. Implementation of different validation formats outside of this design. Signing files outside of this design. Implementation of algorithms for working with signatures undergoes using the IIT library. Container is the resulting file type. The following containers are distinguished: XAdES (xml), PAdES (pdf), CAdES (p7s), ASiC (asic). The most modern and recommended is the ASiC container type. ASiC: a feature of this container is that it is built as an archive for storing files, and the only one from the listed ones allows you to store several files in different formats. Format is an algorithm used for data signing (XAdES-B-LT/CAdES-X-Long/CAdES-BASE/PAdES-B-LT). The recommended format is CAdES-X-Long. Signature type: THere are two types of signatures: separated (detached) and enveloped (embedded). The file and data terms in this design are interchangeable. Example of a script task def formData = submission('start_event').formData def file = formData.prop('signed_data').value() def allSignInfo = signature_details(file, SignFormat.ASiC).getAllSignInfo() for (signInfo in allSignInfo) { if (signInfo.subjDRFOCode == null) { println \"DRFO should be present\" } } def allFiles = get_content(file, SignFormat.ASiC).getAllContent() for (singleFile in allFiles) { set_variable(singleFile.getReference(), singleFile.getReferenceData()) } Example of an external system response { \"name\": \"Ololow\", \"day-of-birth\": \"01/01/01\", \"request\": \"dGVzdCBkYXRh\", \"request_received\": \"20/02/14\" } Example of a script task def containerType = validationResult.prop('container').value() def info = signature_details(request, containerType).getSignInfo() if (info.subjDRFOCode == null) { println \"DRFO should be present\" } originRequestDate = signature_content(request, containerType).getContent().getData() def requestBytes = Base64.decode(originRequestDate) save_digital_document(requestBytes, 'request.pdf') set_variable('fileContent', originRequestDate) Parameter Description Type Data type data Data containing a signature in Base64 format Input String container List of available file types Input Enum (ASiC/CAdES) result Validation result Output ValidatioResult POST /api/esignature/validate Example of the request body { \"data\": \"dGVzdCBkYXRh\", \"container\": \"CAdES/ASiC/XdES/...\" } Table 1. Structure of the response body Json Path Type Description $result.isValid boolean Result of data validation $result.container String Container type $.error.code String Corresponding status code $.error.message String Error details and description $.error.localizedMessage String Localized details and error description To validate the signatures of ASiC containers, the number of signatories is obtained using EndUser::ASiCGetSignsCount(base64Data), and then the validity of each EndUser::ASiCVerify(index, base64Data) is checked. EndUser::VerifyInternal(base64Data) is used for CAdES. Parameter Description Type Data type data Data containing signature in Base64 format Input String container List of available file types Input Enum (ASiC/CAdES) signInfo Signature details Output SignatureInfo Figure 1. Structures for receiving content in a BP Table 2. SignDetails structure Json Path Type Description issuer String Certificate issuer issuerCN String Certificate issuer name serial String Certificate serial number subject String General information about the certificate owner subjCN String Certificate owner name subjOrg String Organization of the certificate owner subjOrgUnit String Unit of the certificate owner subjTitle String Position of the certificate owner subjState String Certificate owner region/province subjLocality String Signatory locale subjFullName String Signatory full name subjAddress String Signatory address subjPhone String Signatory phone number subjDNS String DNS or other name of a device subjEDRPOUCode String Signatory EDRPOU subjDRFOCode String Signatory DRFO POST /api/esignature/info Example of the request body { \"data\": \"dGVzdCBkYXRh\", \"container\": \"CAdES/ASiC/XdES/...\" } Table 3. Structure of the response body Json Path Type Description $.info[] array[SignatureInfo] Data array containing details about each signature $.error.code String Corresponding status code $.error.message String Error details and description $.error.localizedMessage String Localized description For data in ASiC format, it is possible to put several signatures, therefore, when receiving information about a signature, an array with details about each signature on the data is returned. Example of ASiC logics validation IntStream.rangeClosed(0, endUser.ASiCGetSignsCount(data)) .mapToObj(index -> endUser.ASiCVerify(index, data)) .collect(Collectors.toList()); For CAdES data, EndUser::VerifyInternal(base64Data) is used, and the details from the 'EndUserSignInfo' object are returned as a single element in the array. Parameter Description Type Data type data Data containing signature in Base64 format Input String container List of available file types Input Enum (ASiC/CAdES) response Object with data Output SignData Figure 2. Structures for getting content in a BP POST /api/esignature/content Example of the request body { \"data\": \"dGVzdCBkYXRh\", \"container\": \"CAdES/ASiC/XdES/...\" } Table 4. Structure of the response body Json Path Type Description $.content[] array[Content] Container contents $.error.code String Corresponding status code $.error.message String Error details and description $.error.localizedMessage String Localized details and error description For an ASiC container, EndUser::ASiCGetSignReferences(index, base64Data) is used to get a list of all files in a container for each index, and EndUser::ASiCGetReference(reference) is used to get the content. For CAdES containers, the data is a part of the EndUser::VerifyInternal(base64Data)::GetData() output parameter. The crypto library is provided as a link to the https://iit.com.ua/download/EUSignCP-Java-20230629.zip archive. The archive with library consists of the folders: Documentation: Up-to-date documentation for the current version of the crypto library. Modules and\\or Installs: Up-to-date modules and\\or installation packages of the current version of the crypto library. Usage: A real example of the crypto library usage. The documentation includes a manual for a system programmer (contains general information on the library: how to connect, configure and use the library), and an application (contains a description of functions and parameters). Updates containing non-critical improvements can be provided upon request to supp@iit.com.ua (in the letter it is necessary to indicate the number of the actual technical support contract). We inform you about critical updates by mail, to the address specified in the contacts for your organization. BE (java) IIT library update. Extension of DSO with appropriate integration points. Creation of a delegate for validation. Adding JUEL functions. Adding a utility function for Base64 encoding and decoding. Development of reference examples.","title":"Ability to check the QES signature validity and who signed the content received in a business process through the API","component":"platform","version":"1.9.6","name":"sign-validation","url":"/platform/1.9.6/arch/architecture/registry/administrative/regulation-management/platform-evolution/sign-validation/sign-validation.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Functional scenarios","hash":"_functional_scenarios","id":2},{"text":"3. User Roles","hash":"_user_roles","id":3},{"text":"4. General principles and provisions","hash":"_general_principles_and_provisions","id":4},{"text":"5. Glossary and acronyms","hash":"_glossary_and_acronyms","id":5},{"text":"6. Modeling examples","hash":"_modeling_examples","id":6},{"text":"6.1. An example of a BP simulation with an ASiC container as an input parameter that contains several files","hash":"_an_example_of_a_bp_simulation_with_an_asic_container_as_an_input_parameter_that_contains_several_files","id":7},{"text":"6.2. Example of a BP modeling to get a p7s container with an embedded signature as part of the data from an external API","hash":"_example_of_a_bp_modeling_to_get_a_p7s_container_with_an_embedded_signature_as_part_of_the_data_from_an_external_api","id":8},{"text":"7. Delegate for validation","hash":"_delegate_for_validation","id":9},{"text":"7.1. Delegate parameters","hash":"_delegate_parameters","id":10},{"text":"7.2. REST API","hash":"_rest_api","id":11},{"text":"7.3. Low-level design","hash":"_low_level_design","id":12},{"text":"8. signature_details(<string|data>, <enum|dataFormat>)","hash":"_signature_detailsstringdata_enumdataformat","id":13},{"text":"8.1. JUEL function","hash":"_juel_function","id":14},{"text":"8.2. REST API","hash":"_rest_api_2","id":15},{"text":"8.3. Low-level design","hash":"_low_level_design_2","id":16},{"text":"9. signature_content((<string|data>, <enum|dataFormat>)","hash":"_signature_contentstringdata_enumdataformat","id":17},{"text":"9.1. JUEL function","hash":"_juel_function_2","id":18},{"text":"9.2. REST API","hash":"_rest_api_3","id":19},{"text":"9.3. Low-level design","hash":"_low_level_design_3","id":20},{"text":"10. Updating IIT library","hash":"_updating_iit_library","id":21},{"text":"11. High level development plan","hash":"_high_level_development_plan","id":22},{"text":"12. Technical expertise","hash":"_technical_expertise","id":23},{"text":"13. Development Plan","hash":"_development_plan","id":24}]},"270":{"id":270,"text":"On this page: 1. Abstract 2. Concepts 3. Functional scenarios 4. User roles 5. General principles and provisions 5.1. Server Validation 5.2. Validation in the Regulations Modeling Web Interface (current state) 6. High-level solution design 7. Decision log 8. Scope of work 8.1. Preliminary decomposition 8.2. Out of scope 9. Limitations of the solution When modeling business processes, Element Templates are used for the typical BPMN elements (service tasks, user tasks, etc.) together with a description of the corresponding contract. For the input parameters of this type of templates, validation is configured, which works on the client side in Regulation Modeling Web Interface. However, as part of the implementation, the validation rules were not applied to all required parameters of Element Templates. Because of this, a modeler sees the absence of a required field only when executing the business process, and not when simulating it. It is necessary to apply validation rules within the current solution for all Element Templates and additionally develop a server validation mechanism. Element Templates: Camunda element templates that simplify the process of business process modeling. See details at the link. Regulations validation pipeline: Jenkins Code Review pipeline that is launched when changes are made to the candidate version, or directly to the RM in Gerrit. Regulation publication pipeline: Jenkins Build pipeline that is launched when changes are made to the master version of the registry regulations. Using Element Templates when modeling business processes of the registry regulations in the Regulations Modeling Web Interface. Validation of the task template input parameters in the Regulations validation pipeline when modeling the regulations. Validation of the task template input parameters in the Regulations publishing pipeline when modeling the regulations. Validation of the task template input parameters in the Regulations modeling pipeline when modeling the regulations. Validation the task template input parameters in the Regulations publication pipeline when deploying the regulations to the production environment Registry developer Registry administrator Server validation of Element Templates takes place according to the general principles of the registry regulations validation in the Regulations publication pipeline and the Regulations verification pipeline. The registry regulations validation step adds to the Regulations verification pipeline. Validation of the Element Templates input parameters must be performed using the registry-regulations-validator-cli utility. In case of input parameter validation errors in Element Templates, the Regulations validation pipeline must display an error with a clear message to understand the error. Validation rules use the same version of Element Templates as for Regulations Modeling Web Interface. The version of Element Templates must correspond to the version of the registry. That is, Element Templates can be modified only when the registry version is updated. ConfigMap is used for saving Element Templates, which is updated when the registry version is updated. The standard element templates (constraints) mechanism is used to describe the validation rules. As part of the current solution, only notEmpty constraint validation is supported (100% of use cases in platform version 1.9.5). When developing a task template, you can specify the field type of the input parameter. The client-side validation is supported only when the input parameter type is specified. In Camunda version 7.x, it is possible not to specify the type of the input parameter. The following types of input parameters are currently supported: String, Text, Boolean, Dropdown and Hidden. For listing the task templates in the platform, the Map type must be used, which is not supported in Camunda version 7.x/8.x. If you do not specify the input parameter type, the modeler will have to independently choose the Map type from the list. Typed input parameters are shown in the Custom Properties section, while untyped ones are shown in the Input Parameters section. Camunda 8.x does not support untyped input parameters. Read details here. Figure 1. Modeling panel. Typed parameters Figure 2. Modeling panel. Untyped parameters Figure 3. Modeling panel. Mixed parameters Figure 4. Component diagram Figure 5. Deployment diagram (current) Figure 6. Deployment diagram (target) Figure 7. Validation of the element template parameters in the regulations validator Approach to validation: 2 approaches to the validation of Element Templates were compared at the level of the Regulations publication pipeline and the Regulations validation pipeline: Parameter validation rules are stored directly in the BPMN file. Validation rules are stored separately together with the specifications of input parameters in Element Templates. The main principles behind choosing the 2nd approach: Centralized approach to storing validation rules. Maintaining the standard BPMN/camunda schema for the bpmn files for compatibility reasons. Making it impossible for a modeler to exclude validation rules when using Element Template. Client-side validation: A POC was conducted, as a result of which it was found that customization of the simulator panel is possible only in case of a fork of the bpmn-js-properties-panel library. It was decided not to fork the library for updating to new versions and to leave the client-side validation unchanged. Further extension of the simulator panel for autotips is possible without a fork of the library. Approach to the ConfigMap deployment with a list of Element Templates has to be redone, and the files and templates has to be made a part of the registry-configuration component. [DEVOPS] Move files from element templates to the registry-configuration repository and create OpenShift ConfigMap. [DEVOPS] [FE] Rename ConfigMap from element templates to business-process-modeler-element-templates. [FE] Rework the logic for reading the value from ConfigMap (common json instead of js file). [DEVOPS] Add the regulations validation step to the regulations validation pipeline. [DEVOPS] Remove the post-upgrade script from common-web-app for filling ConfigMap with element templates. [BE] Add the element template validation parameters to the regulations validator (in the scope only the notEmpty constraint type with possible further extension). [BE] Add typing of input parameters in Element Templates with required validation (switching to a mixed approach of input parameters). [FE] Add blocking for saving changes in the Regulation Modeling Web Interface if Element Template has not been validated. Customization of the simulator panel that requires a fork of the library: Adding the new Map input parameter type. Blocking for saving changes in the Regulations Modeling Web Interface if Element Template has not been validated. Combining two sections — Inputs (untyped input parameters) and Custom Properties (typed input parameters) — into one. Support of the server-side validation for types not supported by the standard element templates mechanism. Support of the server validation using the pattern (regexp), minLength and maxLength. The client-side validation remains incomplete due to the lack of support of the Map parameter type. The backend-side Validation is asynchronous in the publication pipeline (there is no quick feedback to a user). Existing business processes with element templates that do not meet the validation rules may cause a pipeline deployment error when upgrading to a new version.","title":"Validation for checking empty required fields at the level of element templates in a business process","component":"platform","version":"1.9.6","name":"template-validation","url":"/platform/1.9.6/arch/architecture/registry/administrative/regulation-management/platform-evolution/template-validation/template-validation.html","titles":[{"text":"1. Abstract","hash":"_abstract","id":1},{"text":"2. Concepts","hash":"_concepts","id":2},{"text":"3. Functional scenarios","hash":"_functional_scenarios","id":3},{"text":"4. User roles","hash":"_user_roles","id":4},{"text":"5. General principles and provisions","hash":"_general_principles_and_provisions","id":5},{"text":"5.1. Server Validation","hash":"_server_validation","id":6},{"text":"5.2. Validation in the Regulations Modeling Web Interface (current state)","hash":"_validation_in_the_regulations_modeling_web_interface_current_state","id":7},{"text":"6. High-level solution design","hash":"_high_level_solution_design","id":8},{"text":"7. Decision log","hash":"_decision_log","id":9},{"text":"8. Scope of work","hash":"_scope_of_work","id":10},{"text":"8.1. Preliminary decomposition","hash":"_preliminary_decomposition","id":11},{"text":"8.2. Out of scope","hash":"_out_of_scope","id":12},{"text":"9. Limitations of the solution","hash":"_limitations_of_the_solution","id":13}]},"271":{"id":271,"text":"On this page: 1. General description 2. Functional scenarios 3. User`s roles 4. General principles and provisions 5. High-level solution design 5.1. Key scenarios of services interaction 6. Simulation of the registry regulation 6.1. Simulation extension 7. Low-level service design 7.1. Library of Liquibase-extensions for modeling the date model of the registry 7.2. Delegate for sending asynchronous messages 7.3. Synchronous registry data management service 7.4. Asynchronous registry data management service 7.5. Handler of data loading results event messages for the business process execution service 8. High-level development plan 8.1. Technical examinations 8.2. Development plan In the current implementation, there is a mechanism that allows you to download a csv file with data that will be uploaded to the corresponding table. This process occurs synchronously, so the client should receive a response within 30 seconds (the maximum allowable timeout). In addition, since the communication between the synchronous and asynchronous registry data management services takes place through a message broker, there is a limit of one megabyte for messages. Therefore, an artificial limit of 50 lines was set. In the process of operation, it became necessary to download larger volumes of data, the size of which can take a much longer time to download. Saving data from a file that is larger than one megabyte and may take longer than 30 seconds to save. Saving data from a file to several tables. Developer of regulations Service provider Saving data from a file takes place in one transaction. The file is processed line by line. The business process is built on events that occur when a message is sent to the broker. Events loaded into a business process must be processed by the main process and cannot be associated with a sub-process. The save operation is asynchronous. Download progress is not tracked. As a reference to the derived document for all entities, there will be one key for the entire file without specifying a specific line. Files that do not comply with the rules of the installed simulators cannot be loaded. The file size limit is managed at the control plane level Figure 1. File processing To implement the possibility of asynchronous loading of entities to the database, the configuration consists of several parts: Configuration at the level of the data model using the liquibase extension, modeling the file upload form, and using the asynchronous interaction delegate for BP modeling. An extension of the liquibase library The limit attribute is required when creating createAsyncLoad Example 1. Configuring a delegate for asynchronous loading As a result of processing, several events may occur, depending on the status of the result. An event type consists of an entity name and a status. Example 2. Examples of setting event handling of successful loading of the item entity Example 3. Examples of setting event processing for when saving the item entity The general rule for forming events during asynchronous interaction is formed using `camel case' and consists of `the name of the entity on which the operation is performed + the name of the operation + the result of the operation' Table 1. Possible statuses of the processing result The result of the operation Description An example of an event on a business process SUCCESS The operation ended successfully. %item%DataLoadCsvSuccess CONSTRAINT_VIOLATION Data from the file cannot be loaded because one of them violates existing database rules. %item%DataLoadCsvConstraintViolation OPERATION_FAILED An error occurred while processing the file. %item%DataLoadCsvOperationFailed The result of processing the createAsyncLoad deleteAsyncLoad tags is the formation of a list of structures for which asynchronous loading of data from files in the metadata table is allowed. When sending a message using a delegate, service headers for tracing are sent along with the message body. Delegate fields that are filled in during modeling. Entity name_ - name of the object date of the model (table or complex object) File is a structure that represents a file and consists of a key to the file and a checksum. Signature - a structure that represents the form that was signed with the contents of the file. Derived file (optional) - a structure that represents a file that was created in a business process or as a result of processing the original file. Variable - the name of the variable in which the result of file processing will be saved. JWT token - user token. An example of a message body for saving data from a file { \"payload\": { \"file\": { \"checksum\": \"....\", \"id\": \"process/bp-instance-id/uuid\" }, \"derivedFile\": { \"checksum\": \"...\", \"id\": \"process/bp-instance-id/uuid\" } } } Всі метадані до повідомлення передаються в заголовках до повідомлення разом з типовими для БП \"X-Digital-*\" заголовками. X-Digital-Signature - користувацький підпис. X-Digital-Signature-Derived - підпис який генерується на підставі фінального повідомлення. EntityName - назва обʼєкту дата моделі. ResultVariable - назва персистеної змінної в яку буде збережено результат обробки файлу. Validation takes place according to the existing process by proxying requests to the synchronous data management service, the rules regarding the permitted number of entities exposed by the modeler are formed at the service generation stage. The process of processing the message is carried out by existing handlers for saving entities (createEntity, createCompositeEntity) which is dynamically selected according to the entity name depending on the value of the entityName field, the formation of the routing list of entityName to the handler takes place at the generation stage. The processing result will be the status and details for the message. { \"status\": \"SUCCESS\", \"details\": \"OK\" } { \"status\": \"CONSTRAINT_VIOLATION\", \"details\": \"error: {%s} in line: {%d}\" } The text from the error about the violation of the database rules is taken from the procedure, and the line number is due to keeping a counter in the middle of the transaction. Correlation of the result with the business process occurs due to BusinessProcessInstanceId from the context. The message type is generated dynamically based on the entity type and the result. An example of a possible correlation @Component public class AsyncDataLoadResponseKafkaListener { private static final String ACTION = \"DataLoadCsv\"; @Autowired private RuntimeService runtimeService; @KafkaListener(\"data-load.csv.outbound\") public void processAsyncMessages( @Payload AsyncDataLoadResponse message, MessageHeaders headers) { AsyncDataLoadResult payload = message.geyPayload(); RequestContext requestContext = message.getRequestContext(); Result result = new Result(message.getStatus(), message.getDetails()); runtimeService.createMessageCorrelation(payload.getEntityName() + ACTION + message.getStatus()) .processInstanceId(requestContext.getProcessInstanceId()) .setVariable(payload.getResultVariable(), result) .correlate(); } } BE FE Creation of a new form for uploading data from CSV files Liquibase library extension with additional tags. Development of a new delegate for sending asynchronous messages. Extension of the asynchronous registry data management service to work with data download notifications. Extension of the business process execution service with a component for processing incoming messages. Development of an abstract example of BP. Changing the existing form in terms of the need to specify the entity for validation (the field becomes optional and validation is carried out only if there is a value in this field) Expanding the ability to save CSV files as files in registry data management services","title":"Asynchronous data loading","component":"platform","version":"1.9.6","name":"async-load","url":"/platform/1.9.6/arch/architecture/registry/operational/registry-management/platform-evolution/async-load/async-load.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Functional scenarios","hash":"_functional_scenarios","id":2},{"text":"3. User`s roles","hash":"_users_roles","id":3},{"text":"4. General principles and provisions","hash":"_general_principles_and_provisions","id":4},{"text":"5. High-level solution design","hash":"_high_level_solution_design","id":5},{"text":"5.1. Key scenarios of services interaction","hash":"_key_scenarios_of_services_interaction","id":6},{"text":"6. Simulation of the registry regulation","hash":"_simulation_of_the_registry_regulation","id":7},{"text":"6.1. Simulation extension","hash":"_simulation_extension","id":8},{"text":"7. Low-level service design","hash":"_low_level_service_design","id":9},{"text":"7.1. Library of Liquibase-extensions for modeling the date model of the registry","hash":"_library_of_liquibase_extensions_for_modeling_the_date_model_of_the_registry","id":10},{"text":"7.2. Delegate for sending asynchronous messages","hash":"_delegate_for_sending_asynchronous_messages","id":11},{"text":"7.3. Synchronous registry data management service","hash":"_synchronous_registry_data_management_service","id":12},{"text":"7.4. Asynchronous registry data management service","hash":"_asynchronous_registry_data_management_service","id":13},{"text":"7.5. Handler of data loading results event messages for the business process execution service","hash":"_handler_of_data_loading_results_event_messages_for_the_business_process_execution_service","id":14},{"text":"8. High-level development plan","hash":"_high_level_development_plan","id":15},{"text":"8.1. Technical examinations","hash":"_technical_examinations","id":16},{"text":"8.2. Development plan","hash":"_development_plan","id":17}]},"272":{"id":272,"text":"On this page: 1. General description 2. Functional scripts 3. User roles 4. General principles and provisions 5. High-level solution design 5.1. Interservice interaction diagram 6. Simulation of the registry regulation 6.1. Structure of the regulation 6.2. Simulation extension 7. Deployment of services 7.1. NetworkPolicy configuration 8. Low-level design of services 8.1. Components and their purpose 8.2. Health and load monitoring for public APIs 8.3. Get documentation for the public API 8.4. Create a service account to perform public requests. 8.5. Providing access and setting rate limits at the configuration level. 9. Administrative access 10. Registry configuration management 10.1. Registry configuration 10.2. Admin interfaces 11. High-level development plan 11.1. Technical examinations 11.2. Development plan In order to ensure public access to registry data that is considered public and to ensure the possibility for third-party systems to receive such data in an up-to-date state, process and visualize them, it is possible to mark individual search criteria (`search conditions') as public, which will allow their further use without need to authenticate. Publication of search requests Configuration of public API resources Creation of integration points for the public API by the registry technical administrator. Getting documentation and using the public API. Status monitoring and use of public search criteria. Changing `rate-limits' for existing integration points. Unauthorized user or third-party system Developer of regulations Technical registry administrator An API that does not require client authentication is considered public. Requests to the Data Factory are made on behalf of the system user Only search queries (`search conditions') can be presented as a public API Restriction of access to the public API (ip blacklist, geoip, protection against ddos attacks) outside the scope of this design The integration points are set up in two stages - through the configuration of the regulation by the registry modeler and through changing the registry settings by adding the corresponding integration points to the ``Public access'' list by the technical administrator of the registry Wildecard links are prohibited In the first iteration, it was decided not to allocate a separate instance of API Gateway for the public API. Access control is carried out at the data model configuration level using the exposeSearchCondition tag When exposing an API as public and modeling searchCondition for them, the modeler should take into account the following recommendations: Each searchCondition that should be published as public should be created separately for this scenario, it is not necessary to expose to public access searchCondition that are used for offices, business processes and integrations with SHO Trembita. Recommended pagination type page as it allows you to see the total number of records without displaying them. limit for such searchCondition should be selected depending on the data type and should be the smallest sufficient. To ensure fault tolerance and separate public requests from others, a separate instance of the rest-api service is deployed to improve security. A public `REST API' instance can only be accessed: User public-user from realm to external-system Only using the GET method Only to `urls' that have been exposed publicly and links to the OpenAPI specification Technical links for the actuator and health-check should be available only in the middle of the cluster Component Appointment infrastructure/monitoring Installation and configuration of platform monitoring data-architecture/libraries/ddm-starter-swagger A library for generating an OpenAPI specification based on internal rules general/registry-configuration Configuration and creation of registry resources general/kong-admin-tools Configuration of global plugins for API Gateway To monitor the current state of the API, metrics are downloaded from API Gateway (Kong) using the plugin: apiVersion: configuration.konghq.com/v1 kind: KongClusterPlugin metadata: name: kong-prometheus-plugin annotations: kubernetes.io/ingress.class: kong labels: global: \"true\" config: status_code_metrics: true latency_metrics: true bandwidth_metrics: true per_consumer: true plugin: prometheus This configuration will be applied to absolutely all integration points that are exposed through API Gateway. According to the documentation, these settings can lead to a deterioration in the performance of ``API Gateway'', therefore, in the case of significant performance degradation, the list of metrics can be revised downwards, and their configuration can be brought to the level of individual integration points. Creating a service for collecting metrics apiVersion: v1 kind: Service metadata: name: kong-prometheus-monitoring labels: app: kong-prometheus-monitoring spec: selector: app.kubernetes.io/name: kong type: ClusterIP ports: - name: metrics protocol: TCP port: 8100 targetPort: 8100 and ServiceMonitor apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: name: kong-service-monitor spec: namespaceSelector: any: true endpoints: - port: metrics selector: matchLabels: app: kong-prometheus-monitoring It is suggested to use official as a basis for the Grafana Dashboard. Creation of ConfigMap with dashboard for monitoring monitoring/deploy-templates/dashboard/public-api.yaml apiVersion: v1 kind: ConfigMap metadata: name: grafana-public-api data: public-api-statistic.json: |- ... monitoring/deploy-templates/values.yaml dashboardsConfigMaps: - configMapName: grafana-public-api fileName: public-api-statistic.json Key metrics: The number of requests for each integration point The number of successful 2xx codes, 5xx server errors, and 4xx client errors, all other codes can be assigned to a separate group Performance statistics (longest request, average, fastest) Getting the specification (OpenAPI) for an API that has been marked as public. (example) `Rate-limits' are not applied to the documentation link, however, to reduce the load on the service, the response is additionally cached on the `API Gateway' (`Kong') using the `proxy-cache' plugin. TTL-based caching is used. The configuration of which is carried out at the plug-in configuration level through Gerrit General caching configuration requirements: Caching is set only by the reference to the documentation and only by the GET method ``TTL'' is 15 minutes by default The cache is stored in memory by API Gateway Although formally the integration points are public, in order to maintain uniformity of auditing and logging in the middle of the platform, such requests will be made on behalf of the official user from realm' to `external-system'. Creation of service user `public-user for authorization at platform-gateway level. general/registry-configuration/values.yaml publicUser: name: public-user clientId: public-user public: false secretName: keycloak-public-user-client-secret targetRealm: name: external-system ... Authentication header checking must be disabled for all `urls' listed. The service settings should be such that `GET'' request to https://{domin}/api/public/data-factory/search-laboratories-by-city made a request to `registry-rest-api-public.{registry-namespace}.svc.cluster.local:8080/search-laboratories-by-city An example of a simplified configuration apiVersion: v1 kind: Service metadata: name: public-city-lab-route labels: app: registry-rest-api-public annotations: konghq.com/plugins: post-transformer, city-lab-rate-limiting konghq.com/override: registry-rest-api-public:/search-laboratories-by-city konghq.com/path: /search-laboratories-by-city spec: ports: - port: 80 targetPort: 8080 protocol: TCP name: registry-rest-api-public selector: app: registry-rest-api-public General requirements for the configuration of rate-limits: The request counter is stored in ``Redis'' memory Set at the level of integration points (`routes') Maintained for each `IP' address of the user An example of the configuration of the main aspects apiVersion: configuration.konghq.com/v1 kind: KongPlugin metadata: name: city-lab-rate-limiting plugin: rate-limiting config: second: 5 hour: 100 limit_by: ip policy: redis ... In order to prevent the API from being mistakenly presented as public, it is assumed that such integration points need to be configured not only by the modeler of the regulation, but also by the technical administrator of the registry. Also, the technical administrator of the registry should set rate limits. Management is carried out by adding the path registry to the Public access list by the technical administrator, In case of deleting existing integration points or temporarily disabling them when accessing them, the user receives HTTP 404 that such integration points do not exist. In Helm chart registry-configurations section public API which provides configuration of technical name for public API, relative path to integration point in public-rest-api and limits. publicApi: - name: city-lab enabled: true url: /search-laboratories-by-city limits: second: 5 hour: 100 - ... The current values are used to create the kong service and configure the rate-limit plugin for it. When the limit is reached, a response from API Gateway with code 429 and a body is generated { \"message\": \"API rate limit exceeded\" } Attribute name Functional value name The technical name of the rule, serves as the unique identifier of the rule and cannot be changed enabled Displays the state of the integration point, if false the route is not removed API Gateway generates a response with code 503 url The relative path to the search entry can be changed limits List of limits applied to the integration point Actual mockups FE BE Public API Extension of ``Liquibase'' scheme and library. Changed deployment template for registry-rest-api. Adding plugin for collecting metrics from API Gateway. Grafana dashboard adaptation and deployment. Adding section to configure public API in registry-configuration. Adding validation of the uniqueness of the name and `url' to the pipeline of making changes to the registry. Adding \"Public access\" integration type at Admin Technical Console level and configuration registry-configuration from registry configuration. Rate limits Change of deployment template and creation of `rate limit' plugins in `registry-configuration' Extension of the configuration section of the public API with rate limits. Adding a check for the presence of rate limits on the pipeline of making changes to the register. Documentation caching settings Transferring settings to the registry configuration level. Adding the ability to configure through the administrative console.","title":"Public API and rate limits for reading registry data","component":"platform","version":"1.9.6","name":"public-api","url":"/platform/1.9.6/arch/architecture/registry/operational/registry-management/platform-evolution/public-api/public-api.html","titles":[{"text":"1. General description","hash":"_general_description","id":1},{"text":"2. Functional scripts","hash":"_functional_scripts","id":2},{"text":"3. User roles","hash":"_user_roles","id":3},{"text":"4. General principles and provisions","hash":"_general_principles_and_provisions","id":4},{"text":"5. High-level solution design","hash":"_high_level_solution_design","id":5},{"text":"5.1. Interservice interaction diagram","hash":"_interservice_interaction_diagram","id":6},{"text":"6. Simulation of the registry regulation","hash":"_simulation_of_the_registry_regulation","id":7},{"text":"6.1. Structure of the regulation","hash":"_structure_of_the_regulation","id":8},{"text":"6.2. Simulation extension","hash":"_simulation_extension","id":9},{"text":"7. Deployment of services","hash":"_deployment_of_services","id":10},{"text":"7.1. NetworkPolicy configuration","hash":"_networkpolicy_configuration","id":11},{"text":"8. Low-level design of services","hash":"_low_level_design_of_services","id":12},{"text":"8.1. Components and their purpose","hash":"_components_and_their_purpose","id":13},{"text":"8.2. Health and load monitoring for public APIs","hash":"_health_and_load_monitoring_for_public_apis","id":14},{"text":"8.3. Get documentation for the public API","hash":"_get_documentation_for_the_public_api","id":15},{"text":"8.4. Create a service account to perform public requests.","hash":"_create_a_service_account_to_perform_public_requests","id":16},{"text":"8.5. Providing access and setting rate limits at the configuration level.","hash":"_providing_access_and_setting_rate_limits_at_the_configuration_level","id":17},{"text":"9. Administrative access","hash":"_administrative_access","id":18},{"text":"10. Registry configuration management","hash":"_registry_configuration_management","id":19},{"text":"10.1. Registry configuration","hash":"_registry_configuration","id":20},{"text":"10.2. Admin interfaces","hash":"_admin_interfaces","id":21},{"text":"11. High-level development plan","hash":"_high_level_development_plan","id":22},{"text":"11.1. Technical examinations","hash":"_technical_examinations","id":23},{"text":"11.2. Development plan","hash":"_development_plan","id":24}]}},"components":{},"componentVersions":{"platform/1.9.6":{"displayVersion":"1.9.6","title":"The Registries Platform","version":"1.9.6","name":"platform","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Platform for deployment and maintenance of state electronic registers","site-url":"/edp-ddm-architecture/en","page-lang":"en"},"sourcemap":false,"extensions":[{},{},{}]},"url":"/platform/1.9.6/index.html","navigation":[{"items":[{"content":"Platform administrators","url":"/platform/1.9.6/admin/admin-overview.html","urlType":"internal","items":[{"content":"Installing and configuring","url":"/platform/1.9.6/admin/installation/overview.html","urlType":"internal","items":[{"content":"Platform for state registries: requirements for OKD clusters","url":"/platform/1.9.6/admin/installation/okd-requirements.html","urlType":"internal"},{"content":"Deploying the Platform on target environments","url":"/platform/1.9.6/admin/installation/platform-deployment/platform-deployment-overview.html","urlType":"internal","items":[{"content":"Deploying the Platform in an AWS environment from scratch","url":"/platform/1.9.6/admin/installation/platform-deployment/platform-aws-deployment.html","urlType":"internal"}]},{"content":"Configuring internal SMTP server","url":"/platform/1.9.6/admin/installation/internal-smtp-server-setup.html","urlType":"internal"},{"content":"Changing the network provider of the OKD 4.x cluster","url":"/platform/1.9.6/admin/installation/changing-network-provider.html","urlType":"internal"}]},{"content":"Managing the Platform and registries in the Control Plane console"},{"content":"Platform and registries management in Control Plane","url":"/platform/1.9.6/admin/registry-management/overview.html","urlType":"internal","items":[{"content":"Creating Platform administrators","url":"/platform/1.9.6/admin/registry-management/control-plane-assign-platform-admins.html","urlType":"internal"},{"content":"Deploying a registry","url":"/platform/1.9.6/admin/registry-management/control-plane-create-registry.html","urlType":"internal"},{"content":"Viewing and editing registry configuration","url":"/platform/1.9.6/admin/registry-management/control-plane-edit-registry.html","urlType":"internal"},{"content":"Deleting a registry","url":"/platform/1.9.6/admin/registry-management/control-plane-remove-registry.html","urlType":"internal"},{"content":"Configuring registry access","url":"/platform/1.9.6/admin/registry-management/control-plane-registry-grant-access.html","urlType":"internal"},{"content":"Configuring digital signature keys and certificates","url":"/platform/1.9.6/admin/registry-management/system-keys/system-keys-overview.html","urlType":"internal"},{"content":"Managing registry resources","url":"/platform/1.9.6/admin/registry-management/control-plane-registry-resources.html","urlType":"internal"},{"content":"Configuring custom DNS","url":"/platform/1.9.6/admin/registry-management/custom-dns/custom-dns-overview.html","urlType":"internal","items":[{"content":"Configuring custom DNS for user portals","url":"/platform/1.9.6/admin/registry-management/custom-dns/cp-custom-dns-portals.html","urlType":"internal"},{"content":"Configuring custom DNS for Keycloak","url":"/platform/1.9.6/admin/registry-management/custom-dns/cp-custom-dns-keycloak.html","urlType":"internal"}]},{"content":"Restricting access to administrative and registry components","url":"/platform/1.9.6/admin/registry-management/control-plane-cidr-access-endpoints.html","urlType":"internal"},{"content":"Approving registry configuration update requests","url":"/platform/1.9.6/admin/registry-management/control-plane-submit-mr.html","urlType":"internal"},{"content":"Quick links to registry services","url":"/platform/1.9.6/admin/registry-management/control-plane-quick-links.html","urlType":"internal"}]},{"content":"Migrating registries","url":"/platform/1.9.6/admin/migrate-registry.html","urlType":"internal"},{"content":"Updating","url":"/platform/1.9.6/admin/update/overview.html","urlType":"internal","items":[{"content":"Updating Platform infrastructure components","url":"/platform/1.9.6/admin/update/update_cluster-mgmt.html","urlType":"internal"},{"content":"Updating registry components","url":"/platform/1.9.6/admin/update/update-registry-components.html","urlType":"internal"},{"content":"Updating OpenShift cluster certificates","url":"/platform/1.9.6/admin/update/certificates-update.html","urlType":"internal"}]},{"content":"Backing up and restoring","items":[{"content":"Central components","items":[{"content":"Central components backup and restoring","url":"/platform/1.9.6/admin/backup-restore/control-plane-components-backup-restore.html","urlType":"internal"},{"content":"Setting up the central components backup schedule","url":"/platform/1.9.6/admin/backup-restore/backup-schedule-cluster-mgmt.html","urlType":"internal"}]},{"content":"Registry components","items":[{"content":"Registry backing up and restoring","url":"/platform/1.9.6/admin/backup-restore/control-plane-backup-restore.html","urlType":"internal"},{"content":"Registry backup creation schedule and retention time management","url":"/platform/1.9.6/admin/backup-restore/backup-schedule-registry-components.html","urlType":"internal"}]},{"content":"Backing up and restoring registry databases","url":"/platform/1.9.6/admin/backup-restore/postgres-backup-restore.html","urlType":"internal"},{"content":"Restoring the cluster after changing the IP addresses of master nodes","url":"/platform/1.9.6/admin/backup-restore/master_ip_repair.html","urlType":"internal"}]},{"content":"Scaling","url":"/platform/1.9.6/admin/scaling/overview.html","urlType":"internal","items":[{"content":"Vertical scaling of master nodes for OKD in AWS and vSphere","url":"/platform/1.9.6/admin/scaling/vertical-scaling-master-nodes.html","urlType":"internal"}]},{"content":"Distributed file system management","items":[{"content":"Extending Ceph storage","url":"/platform/1.9.6/admin/file-system/ceph-space.html","urlType":"internal"},{"content":"Ceph File System scaling","url":"/platform/1.9.6/admin/file-system/ceph_scaling.html","urlType":"internal"},{"content":"S3 Ceph Object Storage","items":[{"content":"S3 Ceph Object Storage policy","url":"/platform/1.9.6/admin/file-system/s3/lifecycle-policy.html","urlType":"internal"}]}]},{"content":"Technical platform administrator crash course","items":[{"content":"Technical platform administrator: duties and responsibilities","url":"/platform/1.9.6/admin/admin-study/admin-profile.html","urlType":"internal"}]}]}],"root":true,"order":0},{"items":[{"content":"registry-develop:overview.adoc","url":"#registry-develop:overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"registry-develop:registry-admin/index.adoc","url":"#registry-develop:registry-admin/index.adoc","urlType":"internal","unresolved":true,"items":[{"content":"Demo-registry deployment with reference examples","url":"/platform/1.9.6/registry-develop/registry-admin/cp-deploy-consent-data.html","urlType":"internal"},{"content":"Regulations administrator portal","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/overview.html","urlType":"internal","items":[{"content":"Managing regulations versions","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/version-control-overview.html","urlType":"internal","items":[{"content":"Reviewing and configuring the master version of changes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/master-version-settings.html","urlType":"internal"},{"content":"Creating merge requests","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/create-new-change-request.html","urlType":"internal"},{"content":"Reviewing metadata and managing settings for the candidate version","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/version-control/overview-new-change-request.html","urlType":"internal"}]},{"content":"Managing users","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/admin-portal-user-mgmt.html","urlType":"internal"},{"content":"Modeling registry","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/overview.html","urlType":"internal","items":[{"content":"Configuring global registry settings","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/registry-global-settings.html","urlType":"internal"},{"content":"Managing business process models in the registry","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/process-models-overview.html","urlType":"internal","items":[{"content":"Creating business processes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/create-process.html","urlType":"internal"},{"content":"Editing business processes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/edit-process.html","urlType":"internal"},{"content":"Searching for processes by name","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/search-process.html","urlType":"internal"},{"content":"Copying business processes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/copy-process.html","urlType":"internal"},{"content":"Uploading business processes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/upload-process.html","urlType":"internal"},{"content":"Sorting business processes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/sorting-process.html","urlType":"internal"},{"content":"Categorization of available services in user portals","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/process-groups.html","urlType":"internal"},{"content":"Deleting business processes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/delete-process.html","urlType":"internal"},{"content":"Viewing and editing components of a business process","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/process-components-overview.html","urlType":"internal","items":[{"content":"Viewing and Editing XML Code Representation of Processes","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/tab-code.html","urlType":"internal"},{"content":"Modeling business processes in BPMN editor","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/tab-bpmn-editor.html","urlType":"internal"},{"content":"Editing business process scripts in a visual code editor","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/process-models/components/edit-groovy-scripts.html","urlType":"internal"}]}]},{"content":"registry-develop:registry-admin/admin-portal/registry-modeling/ui-forms/ui-forms-overview.adoc","url":"#registry-develop:registry-admin/admin-portal/registry-modeling/ui-forms/ui-forms-overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"Sorting UI forms","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/ui-forms/sorting-forms.html","urlType":"internal"},{"content":"Viewing and editing JSON representation of a form","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/ui-forms/json-code-view-edit.html","urlType":"internal"}]},{"content":"Tables","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/tables/tables-overview.html","urlType":"internal","items":[{"content":"Registry data model tables and their structures","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/tables/tables-data-structures.html","urlType":"internal"},{"content":"Modeling the structure of registry database tables in an XML code editor","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/tables/xml-editor.html","urlType":"internal"}]},{"content":"Managing registry report templates","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/registry-modeling/report-templates.html","urlType":"internal"}]},{"content":"Contacting support for non-critical errors","url":"/platform/1.9.6/registry-develop/registry-admin/admin-portal/error-non-critical.html","urlType":"internal"}]},{"content":"Working with registry regulations in Gerrit","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-admin-introduction.html","urlType":"internal","items":[{"content":"registry-develop:registry-admin/regulations-deploy/registry-admin-instruments-access.adoc","url":"#registry-develop:registry-admin/regulations-deploy/registry-admin-instruments-access.adoc","urlType":"internal","unresolved":true},{"content":"Registry regulations structure","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-regulations-structure.html","urlType":"internal"},{"content":"Deploying regulations in Gerrit","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-admin-deploy-regulation.html","urlType":"internal"},{"content":"Automatic validation of the regulations changes","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/registry-regulations-auto-validation.html","urlType":"internal"},{"content":"Regulations cleanup","url":"/platform/1.9.6/registry-develop/registry-admin/regulations-deploy/cleanup-job.html","urlType":"internal"}]},{"content":"Creating users in the system","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/overview.html","urlType":"internal","items":[{"content":"Creating a user and granting access rights","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/manual-user-creation.html","urlType":"internal"},{"content":"Importing users through a file and granting access rights","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/import-users-officer.html","urlType":"internal"},{"content":"Creating registry administrators","url":"/platform/1.9.6/registry-develop/registry-admin/create-users/create-registry-admins.html","urlType":"internal"}]},{"content":"Configuring user authentication","url":"/platform/1.9.6/registry-develop/registry-admin/cp-auth-setup/cp-auth-setup-overview.html","urlType":"internal","items":[{"content":"Officers","items":[{"content":"Configuring authentication for officers","url":"/platform/1.9.6/registry-develop/registry-admin/cp-auth-setup/cp-auth-setup-officers.html","urlType":"internal"},{"content":"Configuring self-registration for officers","url":"/platform/1.9.6/registry-develop/registry-admin/cp-auth-setup/cp-officer-self-registration.html","urlType":"internal"}]},{"content":"Citizens","items":[{"content":"registry-develop:registry-admin/cp-auth-setup/cp-auth-setup-citizens.adoc","url":"#registry-develop:registry-admin/cp-auth-setup/cp-auth-setup-citizens.adoc","urlType":"internal","unresolved":true}]}]},{"content":"Hierarchical model","url":"/platform/1.9.6/registry-develop/registry-admin/hierarchical-model.html","urlType":"internal"},{"content":"registry-develop:registry-admin/hierarchical-model-katottg.adoc","url":"#registry-develop:registry-admin/hierarchical-model-katottg.adoc","urlType":"internal","unresolved":true},{"content":"Working with geodata in the registry","url":"/platform/1.9.6/registry-develop/registry-admin/geoserver.html","urlType":"internal"},{"content":"User notifications","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/user-notifications-overview.html","urlType":"internal","items":[{"content":"Sending in-app notifications using a citizen portal inbox","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/inbox/inbox-overview.html","urlType":"internal","items":[{"content":"Configuring in-app notifications","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/inbox/inbox-bp-notification.html","urlType":"internal"}]},{"content":"Sending email notifications","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/email-overview.html","urlType":"internal","items":[{"content":"Setting up a message template with an email confirmation code","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/email-channel-confirmation.html","urlType":"internal"},{"content":"Notifying users via email","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/e-mail-notification.html","urlType":"internal"},{"content":"Configuring the mail server","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/config-smtp-server.html","urlType":"internal"}]},{"content":"registry-develop:registry-admin/user-notifications/diia/diia-overview.adoc","url":"#registry-develop:registry-admin/user-notifications/diia/diia-overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"registry-develop:registry-admin/user-notifications/diia/diia-channel-confirmation-temp.adoc","url":"#registry-develop:registry-admin/user-notifications/diia/diia-channel-confirmation-temp.adoc","urlType":"internal","unresolved":true},{"content":"registry-develop:registry-admin/user-notifications/diia/diia-bp-notification.adoc","url":"#registry-develop:registry-admin/user-notifications/diia/diia-bp-notification.adoc","urlType":"internal","unresolved":true}]}]},{"content":"Administering business processes in Camunda Cockpit","url":"/platform/1.9.6/registry-develop/registry-admin/registry-admin-bp-management-cockpit.html","urlType":"internal"},{"content":"registry-develop:registry-admin/openshift-logging/openshift-logging-overview.adoc","url":"#registry-develop:registry-admin/openshift-logging/openshift-logging-overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"Working with logs in Kibana UI","url":"/platform/1.9.6/registry-develop/registry-admin/openshift-logging/kibana.html","urlType":"internal"},{"content":"Request state visualization in Kibana during registry operation","url":"/platform/1.9.6/registry-develop/registry-admin/openshift-logging/kibana-request-dashboard.html","urlType":"internal"}]},{"content":"Моніторинг систем Платформи (Grafana)","items":[{"content":"Monitoring business process execution metrics","url":"/platform/1.9.6/registry-develop/registry-admin/grafana-monitoring/grafana-camunda-metrics.html","urlType":"internal"}]},{"content":"Управління налаштуваннями регламенту","url":"/platform/1.9.6/registry-develop/registry-admin/regulation-settings.html","urlType":"internal"},{"content":"Changing registry deployment mode","url":"/platform/1.9.6/registry-develop/registry-admin/change-dev-prod-mode.html","urlType":"internal"},{"content":"Generating regulations excerpts (reports) in PDF, DOCX, CSV format","url":"/platform/1.9.6/registry-develop/registry-admin/registry-admin-reports-pdf-docx-csv.html","urlType":"internal"},{"content":"Integration with external registries and systems","items":[{"content":"Managing external integrations","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/ext-integration-overview.html","urlType":"internal"},{"content":"registry-develop:registry-admin/external-integration/registration-subsystem-trembita/registration-subsystem-trembita.adoc","url":"#registry-develop:registry-admin/external-integration/registration-subsystem-trembita/registration-subsystem-trembita.adoc","urlType":"internal","unresolved":true},{"content":"Interacting via REST between Platform registries and with external systems","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/rest-api-no-trembita.html","urlType":"internal"},{"content":"Calling external registries and systems","items":[{"content":"Other registries and systems","items":[{"content":"Integration with external services using the REST connector: configuring the regulations","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/rest-connector.html#regulations-configuration","urlType":"internal","hash":"#regulations-configuration"},{"content":"Configuring integrations with external systems in Control Plane","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/cp-integrate-ext-system.html","urlType":"internal"}]}]},{"content":"Providing registry API endpoints for integration","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/api-publish/index.html","urlType":"internal","items":[{"content":"Configuring the regulations to provide access to data via SOAP and REST APIs","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/api-publish/rest-soap-api-expose.html","urlType":"internal"},{"content":"Other registries and systems","items":[{"content":"Calling the registry from an external system: getting a JWT token from Keycloak","url":"/platform/1.9.6/registry-develop/registry-admin/external-integration/api-publish/get-jwt-token-postman.html","urlType":"internal"}]}]},{"content":"registry-develop:registry-admin/external-integration/cp-mock-integrations.adoc","url":"#registry-develop:registry-admin/external-integration/cp-mock-integrations.adoc","urlType":"internal","unresolved":true}]},{"content":"API Rate Limits: limiting the number of requests per time unit","url":"/platform/1.9.6/registry-develop/registry-admin/api-rate-limits.html","urlType":"internal"},{"content":"Connecting to services remotely","url":"/platform/1.9.6/registry-develop/registry-admin/remote_connection.html","urlType":"internal"}]},{"content":"Data modelers","url":"/platform/1.9.6/registry-develop/data-modeling/index.html","urlType":"internal","items":[{"content":"Creating a logical data model","url":"/platform/1.9.6/registry-develop/data-modeling/data/logical-model/data-modelling-logical-datamodel.html","urlType":"internal"},{"content":"Creating a physical data model","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/overview.html","urlType":"internal","items":[{"content":"Liquibase: physical data model creation and management tool","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/liquibase-introduction.html","urlType":"internal"},{"content":"A list of standard Liquibase tags","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/liquibase-standard-change-types.html","urlType":"internal"},{"content":"A list of extended Liquibase tags","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/liquibase-ddm-ext.html","urlType":"internal"},{"content":"registry-develop:data-modeling/data/physical-model/liquibase-changes-management-sys-ext.adoc","url":"#registry-develop:data-modeling/data/physical-model/liquibase-changes-management-sys-ext.adoc","urlType":"internal","unresolved":true},{"content":"Setting access attributes for registry API views","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/rest-api-view-access-to-registry.html","urlType":"internal"},{"content":"Generating a unique number for registry entities","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/auto-generate-number.html","urlType":"internal"},{"content":"Scenarios of combining tables using JOIN with additional AND and OR conditions","url":"/platform/1.9.6/registry-develop/data-modeling/data/physical-model/join-and-or-usage.html","urlType":"internal"}]},{"content":"Initial data loading","url":"/platform/1.9.6/registry-develop/data-modeling/initial-load/index.html","urlType":"internal","items":[{"content":"Preparing data for migration","url":"/platform/1.9.6/registry-develop/data-modeling/initial-load/data-initial-data-load-prep.html","urlType":"internal"},{"content":"PL/pgSQL procedure for initial loading of registry data","url":"/platform/1.9.6/registry-develop/data-modeling/initial-load/data-initial-data-load-pl-pgsql.html","urlType":"internal"}]},{"content":"Modeling reports","url":"/platform/1.9.6/registry-develop/data-modeling/reports/index.html","urlType":"internal","items":[{"content":"registry-develop:data-modeling/reports/data-analytical-reports-creation.adoc","url":"#registry-develop:data-modeling/reports/data-analytical-reports-creation.adoc","urlType":"internal","unresolved":true},{"content":"registry-develop:data-modeling/reports/data-analytical-data-access-rights.adoc","url":"#registry-develop:data-modeling/reports/data-analytical-data-access-rights.adoc","urlType":"internal","unresolved":true},{"content":"registry-develop:data-modeling/reports/data-analytical-reports-export-automation.adoc","url":"#registry-develop:data-modeling/reports/data-analytical-reports-export-automation.adoc","urlType":"internal","unresolved":true},{"content":"Restricting data samples based on token information","url":"/platform/1.9.6/registry-develop/data-modeling/reports/restrict-select-data-based-on-token-context.html","urlType":"internal"}]}]},{"content":"Business process modelers","url":"/platform/1.9.6/registry-develop/bp-modeling/index.html","urlType":"internal","items":[{"content":"Business process modeling and decision tables","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/index.html","urlType":"internal","items":[{"content":"registry-develop:bp-modeling/bp/bp-modeling-general-description.adoc","url":"#registry-develop:bp-modeling/bp/bp-modeling-general-description.adoc","urlType":"internal","unresolved":true},{"content":"registry-develop:bp-modeling/bp/bp-modeling-instruction.adoc","url":"#registry-develop:bp-modeling/bp/bp-modeling-instruction.adoc","urlType":"internal","unresolved":true},{"content":"Standard business process extensions","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/element-templates-overview.html","urlType":"internal","items":[{"content":"registry-develop:bp-modeling/bp/element-templates/bp-element-templates-installation-configuration.adoc","url":"#registry-develop:bp-modeling/bp/element-templates/bp-element-templates-installation-configuration.adoc","urlType":"internal","unresolved":true},{"content":"Searching users by equal and Inverse startsWith functions","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/keycloak-get-officer-users-by-attributes-equals-start-with.html","urlType":"internal"},{"content":"Standard extensions for integration with business processes of other registries on the Platform","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/rest-integration-registries/rest-integration-registries-overview.html","urlType":"internal","items":[{"content":"Start business process in another registry","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/rest-integration-registries/start-bp-another-registry.html","urlType":"internal"},{"content":"Search for entities in another registry data factory","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/element-templates/rest-integration-registries/search-for-entities-another-registry.html","urlType":"internal"}]}]},{"content":"Modeling elements","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/index.html","urlType":"internal","items":[{"content":"Tasks","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/tasks/overview.html","urlType":"internal"},{"content":"Gateways","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/gateways/overview.html","urlType":"internal","items":[{"content":"Exclusive event-based gateway","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/gateways/event-based-gateway.html","urlType":"internal"}]},{"content":"registry-develop:bp-modeling/bp/bpmn/events/overview.adoc","url":"#registry-develop:bp-modeling/bp/bpmn/events/overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"registry-develop:bp-modeling/bp/bpmn/events/bp-link-events.adoc","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/bp-link-events.html","urlType":"internal"},{"content":"Message event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/message-event.html","urlType":"internal"},{"content":"Timer Event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/timer-event.html","urlType":"internal"},{"content":"Error Event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/events/error-event.html","urlType":"internal"}]},{"content":"registry-develop:bp-modeling/bp/bpmn/subprocesses/overview.adoc","url":"#registry-develop:bp-modeling/bp/bpmn/subprocesses/overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"Embedded subprocess","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/embedded-subprocess.html","urlType":"internal"},{"content":"Call activity","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/call-activities.html","urlType":"internal"},{"content":"registry-develop:bp-modeling/bp/bpmn/subprocesses/event-subprocess.adoc","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/event-subprocess.html","urlType":"internal"},{"content":"Transaction subprocess","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/transaction-subprocess/transaction.html","urlType":"internal","items":[{"content":"Подія «Помилка» у транзакційному підпроцесі","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/transaction-subprocess/error-event-transaction.html","urlType":"internal"},{"content":"\"Cancel\" event","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bpmn/subprocesses/transaction-subprocess/cancel-event.html","urlType":"internal"}]}]}]},{"content":"registry-develop:bp-modeling/bp/modeling-facilitation/overview.adoc","url":"#registry-develop:bp-modeling/bp/modeling-facilitation/overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc","url":"#registry-develop:bp-modeling/bp/modeling-facilitation/modelling-with-juel-functions.adoc","urlType":"internal","unresolved":true},{"content":"Configuring business keys in business processes","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/modeling-facilitation/bp-business-keys.html","urlType":"internal"},{"content":"registry-develop:bp-modeling/bp/modeling-facilitation/bp-nested-entities-in-data-factory.adoc","url":"#registry-develop:bp-modeling/bp/modeling-facilitation/bp-nested-entities-in-data-factory.adoc","urlType":"internal","unresolved":true},{"content":"Partial entity update in Data Factory","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/modeling-facilitation/partial-update.html","urlType":"internal"}]},{"content":"Supporting alternative branches in business processes","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/bp-alternative-branches.html","urlType":"internal"},{"content":"Limiting access to business processes and tasks","items":[{"content":"Business Process Modeling and Access Control (RBAC)","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/access/roles-rbac-bp-modelling.html","urlType":"internal"},{"content":"Granting organization access to business process tasks at the level of user attributes","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/access/bp-limiting-access-keycloak-attributes.html","urlType":"internal"}]},{"content":"Modeling excerpts","items":[{"content":"Modeling business processes for generating extracts in csv and docx format","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/excerpts/bp-modeling-excerpt-csv-docx.html","urlType":"internal"}]},{"content":"Notifying users via email","url":"/platform/1.9.6/registry-develop/registry-admin/user-notifications/email/e-mail-notification.html","urlType":"internal"},{"content":"Modeling the business process for loading data from a CSV file as an array into a database","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/loading-data-from-csv.html","urlType":"internal"},{"content":"registry-develop:bp-modeling/bp/file-upload-bp.adoc","url":"#registry-develop:bp-modeling/bp/file-upload-bp.adoc","urlType":"internal","unresolved":true},{"content":"Downloading digital documents at an external link","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/save-digital-doc-remote-url.html","urlType":"internal"},{"content":"Setting global registry variables","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/global-vars.html","urlType":"internal"}]},{"content":"Modeling UI forms for business processes","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/bp-modeling-forms-general-description.html","urlType":"internal","items":[{"content":"UI form modeling components","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/index.html","urlType":"internal","items":[{"content":"registry-develop:bp-modeling/forms/components/general/index.adoc","url":"#registry-develop:bp-modeling/forms/components/general/index.adoc","urlType":"internal","unresolved":true,"items":[{"content":"Variables in JavaScript plugins","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/general/eval.html","urlType":"internal"}]},{"content":"Text Field","url":"#registry-develop:bp-modeling/forms/components/text-field.adoc","urlType":"internal","unresolved":true},{"content":"Content","url":"#registry-develop:bp-modeling/forms/components/content.adoc","urlType":"internal","unresolved":true},{"content":"Email","url":"#registry-develop:bp-modeling/forms/components/email.adoc","urlType":"internal","unresolved":true},{"content":"Text Area","url":"#registry-develop:bp-modeling/forms/components/text-area.adoc","urlType":"internal","unresolved":true},{"content":"Number","url":"#registry-develop:bp-modeling/forms/components/number.adoc","urlType":"internal","unresolved":true},{"content":"Edit Grid","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/edit-grid/edit-grid.html","urlType":"internal","items":[{"content":"Saving form data to the database as an array","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/edit-grid/edit-grid-save-data-list.html","urlType":"internal"},{"content":"Setting the sort type for columns in the Edit Grid component","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/edit-grid/edit-grid-columns-sorting.html","urlType":"internal"}]},{"content":"Date/Time","url":"#registry-develop:bp-modeling/forms/components/date-time.adoc","urlType":"internal","unresolved":true},{"content":"Checkbox","url":"#registry-develop:bp-modeling/forms/components/checkbox.adoc","urlType":"internal","unresolved":true},{"content":"Select","url":"#registry-develop:bp-modeling/forms/components/select/select-overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"Configuring the Select component to get and filter data from API resources","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/select/bp-select-component-form-io.html","urlType":"internal"},{"content":"Using the \"Refresh Options On\" function in the updated Select component","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/select/select-refresh-options.html","urlType":"internal"}]},{"content":"Radio","url":"#registry-develop:bp-modeling/forms/components/radio.adoc","urlType":"internal","unresolved":true},{"content":"File","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/file/file.html","urlType":"internal","items":[{"content":"Loading multiple files in one field using the File component","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/file/component-file-multiple-values.html","urlType":"internal"}]},{"content":"Button","items":[{"content":"Button","url":"#registry-develop:bp-modeling/forms/components/button/button.adoc","urlType":"internal","unresolved":true},{"content":"Modeling confirmation dialogues in the Button component","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/button/button-popup.html","urlType":"internal"}]},{"content":"Map","items":[{"content":"Map component","url":"/platform/1.9.6/registry-develop/bp-modeling/forms/components/map/map.html","urlType":"internal"}]}]},{"content":"registry-develop:bp-modeling/forms/registry-admin-modelling-forms.adoc","url":"#registry-develop:bp-modeling/forms/registry-admin-modelling-forms.adoc","urlType":"internal","unresolved":true},{"content":"registry-develop:bp-modeling/forms/transferring-forms-to-admin-portal.adoc","url":"#registry-develop:bp-modeling/forms/transferring-forms-to-admin-portal.adoc","urlType":"internal","unresolved":true},{"content":"bp-modeling/forms/components/file/component-file-multiple-values.adoc","url":"#bp-modeling/forms/components/file/component-file-multiple-values.adoc","urlType":"internal","unresolved":true}]},{"content":"Integration with external registries and systems","items":[{"content":"Calling external registries and systems","items":[{"content":"SOAP integration","items":[{"content":"SOAP-based integration with other registries","url":"/platform/1.9.6/registry-develop/bp-modeling/external-integration/api-call/connectors-external-registry.html","urlType":"internal"}]},{"content":"Other systems","items":[{"content":"Modeling business processes using the \"Connect to external system\" delegate","url":"/platform/1.9.6/registry-develop/bp-modeling/bp/rest-connector.html#bp-modeling","urlType":"internal","hash":"#bp-modeling"}]}]}]}]},{"content":"registry-develop:best-practices/best-practices-overview.adoc","url":"#registry-develop:best-practices/best-practices-overview.adoc","urlType":"internal","unresolved":true,"items":[{"content":"Business process examples for reference","items":[{"content":"Launching a business process by schedule","url":"/platform/1.9.6/registry-develop/best-practices/bp-timer-launch.html","urlType":"internal"},{"content":"Self-registration","items":[{"content":"registry-develop:best-practices/bp-officer-self-register-auto.adoc","url":"#registry-develop:best-practices/bp-officer-self-register-auto.adoc","urlType":"internal","unresolved":true},{"content":"registry-develop:best-practices/bp-officer-self-register-manual.adoc","url":"#registry-develop:best-practices/bp-officer-self-register-manual.adoc","urlType":"internal","unresolved":true}]},{"content":"Selecting one or multiple rows in a table and performing actions on the data in the records","url":"/platform/1.9.6/registry-develop/best-practices/edit-grid-rows-action.html","urlType":"internal"},{"content":"registry-develop:best-practices/bp-upload-edit-file.adoc","url":"#registry-develop:best-practices/bp-upload-edit-file.adoc","urlType":"internal","unresolved":true}]}]}]},{"content":"Technical documentation","items":[{"content":"Architectural documentation","url":"/platform/1.9.6/arch/architecture/overview.html","urlType":"internal","items":[{"content":"Conceptual architecture of the Platform","url":"/platform/1.9.6/arch/architecture/platform-conceptual.html","urlType":"internal"},{"content":"Platform logical architecture","url":"/platform/1.9.6/arch/architecture/platform-logical.html","urlType":"internal"},{"content":"Security Architecture","url":"/platform/1.9.6/arch/architecture/security/overview.html","urlType":"internal","items":[{"content":"Standarts and compliance","url":"/platform/1.9.6/arch/architecture/security/standarts-and-compliance.html","urlType":"internal"},{"content":"Data classification","url":"/platform/1.9.6/arch/architecture/security/data-classification.html","urlType":"internal"},{"content":"Encryption at rest","url":"/platform/1.9.6/arch/architecture/security/data-encryption-at-rest.html","urlType":"internal"},{"content":"Encryption in transit","url":"/platform/1.9.6/arch/architecture/security/data-encryption-in-transit.html","urlType":"internal"},{"content":"Data retention","url":"/platform/1.9.6/arch/architecture/security/data-retention.html","urlType":"internal"},{"content":"Secrets persistence","url":"/platform/1.9.6/arch/architecture/security/secret-persistence.html","urlType":"internal"},{"content":"Secrets management","url":"/platform/1.9.6/arch/architecture/security/secret-management.html","urlType":"internal"},{"content":"Access control","url":"/platform/1.9.6/arch/architecture/security/access-control.html","urlType":"internal"},{"content":"Data integrity","url":"/platform/1.9.6/arch/architecture/security/data-integrity.html","urlType":"internal"}]},{"content":"Platform technology stack","url":"/platform/1.9.6/arch/architecture/platform-technologies.html","urlType":"internal"},{"content":"Platform subsystems","items":[{"content":"Administrative zone of the Platform","url":"/platform/1.9.6/arch/architecture/platform/administrative/overview.html","urlType":"internal","items":[{"content":"Subsystem for deploying and configuring the Platform and registries","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/overview.html","urlType":"internal","items":[{"content":"Subsystem evolution","items":[{"content":"Configuring custom DNS name for registry portals in OpenShift 4.x","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/custom-dns.html","urlType":"internal"},{"content":"Secure resource publishing mechanism in OpenShift 4.x cluster","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/secure-endpoints.html","urlType":"internal"},{"content":"Setting up Platform and registry administrators","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/gitops-administrators.html","urlType":"internal"},{"content":"Platform deployment in production without registry development tools","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/dev-prod-deployment-mode.html","urlType":"internal"},{"content":"Updating platform and registry keys and digital signature service configuration","url":"/platform/1.9.6/arch/architecture/platform/administrative/config-management/registry-platform-keys.html","urlType":"internal"}]}]}]}]}]}]},{"content":"Quality Attributes Testing","url":"/platform/1.9.6/testing/testing-overview.html","urlType":"internal","items":[{"content":"Security Testing","url":"/platform/1.9.6/testing/security-testing/security-testing.html","urlType":"internal"}]},{"content":"Glossary","url":"/platform/1.9.6/platform-glossary.html","urlType":"internal"}],"root":true,"order":0.5}]}}}})