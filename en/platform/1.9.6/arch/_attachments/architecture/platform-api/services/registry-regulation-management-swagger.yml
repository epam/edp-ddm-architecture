openapi: 3.0.3
info:
  title: Registry regulations admin-portal
  description: This document describes REST API of 'Registry regulations admin-portal'
  version: '1.0'
tags:
  - name: Registry regulations version-candidate tables management Rest API
  - name: Registry regulations version-candidate management Rest API
  - name: Registry regulations version-candidate Business processes management Rest API
  - name: Registry regulations version-candidate Forms management Rest API
  - name: Registry regulations version-candidate data-model tables file management Rest API
  - name: Registry regulations version candidates settings Rest API
  - name: Registry regulations master version management Rest API
  - name: Registry regulations master version data-model tables file management Rest API
  - name: Registry regulations master Business processes management Rest API
  - name: Registry regulations Master version Groups management Rest API
  - name: Registry regulations candidate version Groups management Rest API
  - name: Registry regulations Master version settings Rest API
  - name: Users bulk upload RestAPI
  - name: Registry regulations Master version Forms management Rest API
  - name: Registry regulations master version tables management Rest API
paths:
  /versions/master/forms/{formName}:
    get:
      tags:
        - Registry regulations Master version Forms management Rest API
      description: Get specific form full details
      operationId: getForm
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: formName
          in: path
          description: Form name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
        - Registry regulations Master version Forms management Rest API
      description: Update existing form within master
      operationId: updateForm
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag to verify whether user has latest data
          schema:
            type: string
        - name: formName
          in: path
          description: Name of the form to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
        - Registry regulations Master version Forms management Rest API
      description: Create new form within master
      operationId: formCreate
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: formName
          in: path
          description: Name of the new form to be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
        - Registry regulations Master version Forms management Rest API
      description: Delete existing form within master
      operationId: deleteForm
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag to verify whether user has latest data
          schema:
            type: string
        - name: formName
          in: path
          description: Name of the form to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/business-processes/{businessProcessName}:
    get:
      tags:
        - Registry regulations master Business processes management Rest API
      description: Get business process
      operationId: getBusinessProcess
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Process name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/xml:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
        - Registry regulations master Business processes management Rest API
      description: Update business process
      operationId: updateBusinessProcess
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag to verify whether user has latest data
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Process name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            text/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
        - Registry regulations master Business processes management Rest API
      description: Create new business process
      operationId: createBusinessProcess
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Name of the new process to be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            text/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
        - Registry regulations master Business processes management Rest API
      description: Delete business process
      operationId: deleteBusinessProcess
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag to verify whether user has latest data
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Process name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/settings:
    get:
      tags:
        - Registry regulations version candidates settings Rest API
      description: Get existing settings for version-candidate
      operationId: getSettings_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsInfoDto'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
        - Registry regulations version candidates settings Rest API
      description: Update existing settings for version-candidate
      operationId: updateSettings
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsInfoDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/rebase:
    put:
      tags:
        - Registry regulations version-candidate management Rest API
      description: Rebase changes from master version
      operationId: rebase
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/forms/{formName}:
    get:
      tags:
        - Registry regulations version-candidate Forms management Rest API
      description: Get full details of the specific form within version-candidate
      operationId: getForm_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: formName
          in: path
          description: Form name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
        - Registry regulations version-candidate Forms management Rest API
      description: Update existing form within version-candidate
      operationId: updateForm_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag to verify whether user has latest data
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: formName
          in: path
          description: Name of the form to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
        - Registry regulations version-candidate Forms management Rest API
      description: Create new form within specific version-candidate
      operationId: formCreate_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: formName
          in: path
          description: Name of the new form to be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
        - Registry regulations version-candidate Forms management Rest API
      description: Delete existing form within version-candidate
      operationId: deleteForm_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag to verify whether user has latest data
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: formName
          in: path
          description: Name of the form to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/data-model/tables:
    get:
      tags:
        - Registry regulations version-candidate data-model tables file management Rest API
      description: Get data-model tables file content from requested version-candidate
      operationId: getTablesFileContent_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Version-candidate doesn't exist or tables file doesn't exists in requested version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
        - Registry regulations version-candidate data-model tables file management Rest API
      description: Put data-model tables file content to specified version-candidate
      operationId: putTablesFileContent
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Version-candidate doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-processes/{businessProcessName}:
    get:
      tags:
        - Registry regulations version-candidate Business processes management Rest API
      description: Get business process
      operationId: getBusinessProcess_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Process name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    put:
      tags:
        - Registry regulations version-candidate Business processes management Rest API
      description: Update business process
      operationId: updateBusinessProcess_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: If-Match
          in: header
          description: ETag to verify whether user has latest data
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Process name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            text/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
        - Registry regulations version-candidate Business processes management Rest API
      description: Create new business process
      operationId: createBusinessProcess_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Name of the new process to be created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            text/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    delete:
      tags:
        - Registry regulations version-candidate Business processes management Rest API
      description: Delete business process
      operationId: deleteBusinessProcess_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Process name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates:
    get:
      tags:
        - Registry regulations version-candidate management Rest API
      description: Get list of existing opened version-candidates
      operationId: getVersionsList
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionInfo'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
        - Registry regulations version-candidate management Rest API
      description: Create new version-candidate from current state of master version.
      operationId: createNewVersion
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionRequest'
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfoDetailed'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/submit:
    post:
      tags:
        - Registry regulations version-candidate management Rest API
      description: Integrate version-candidate changes into master version of registry regulation
      operationId: submitVersionCandidate
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier to be merged into master version
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/forms/{formName}/rollback:
    post:
      tags:
        - Registry regulations version-candidate Forms management Rest API
      description: Rollback existing form within version-candidate
      operationId: rollbackForm
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: formName
          in: path
          description: Name of the form to be rolled back
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/decline:
    post:
      tags:
        - Registry regulations version-candidate management Rest API
      description: Abandon the existing opened version-candidate. After this operation the version-candidate won't take any changes anymore.
      operationId: declineVersionCandidate
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier to abandon
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/data-model/tables/rollback:
    post:
      tags:
        - Registry regulations version-candidate data-model tables file management Rest API
      description: Rollback data-model tables file content to specified version-candidate
      operationId: rollbackTables
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Version-candidate doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-processes/{businessProcessName}/rollback:
    post:
      tags:
        - Registry regulations version-candidate Business processes management Rest API
      description: Rollback business process
      operationId: rollbackProcess
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
        - name: businessProcessName
          in: path
          description: Process name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-process-groups:
    get:
      tags:
        - Registry regulations candidate version Groups management Rest API
      description: Get business process groups for candidate
      operationId: getBusinessProcessGroups_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessGroupsResponse'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
    post:
      tags:
        - Registry regulations candidate version Groups management Rest API
      description: Save business process groups for version-candidate
      operationId: saveBusinessProcessGroups
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupListDetails'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-process-groups/rollback:
    post:
      tags:
        - Registry regulations candidate version Groups management Rest API
      description: Rollback business process groups for version-candidate
      operationId: rollbackBusinessProcessGroups
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /batch-loads/users:
    get:
      tags:
        - Users bulk upload RestAPI
      description: Get file information
      operationId: getFileInfo
      parameters:
        - name: securityContext
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CephFileInfoDto'
    post:
      tags:
        - Users bulk upload RestAPI
      description: Store file endpoint
      operationId: handleFileUpload
      parameters:
        - name: securityContext
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
                securityContext:
                  $ref: '#/components/schemas/SecurityContext'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CephFileInfoDto'
  /batch-loads/users/imports:
    post:
      tags:
        - Users bulk upload RestAPI
      description: Start import endpoint
      operationId: imports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityContext'
      responses:
        '200':
          description: OK
          content:
            '*/*': {}
  /versions/master:
    get:
      tags:
        - Registry regulations master version management Rest API
      description: Acquire master version full details
      operationId: getMasterVersionInfo
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterVersionInfoDetailed'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/tables:
    get:
      tags:
        - Registry regulations master version tables management Rest API
      description: Get tables list from master version
      operationId: getTables
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TableInfoShort'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/tables/{tableName}:
    get:
      tags:
        - Registry regulations master version tables management Rest API
      description: Get specific table full details
      operationId: getTable
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: tableName
          in: path
          description: Table name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableInfo'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/settings:
    get:
      tags:
        - Registry regulations Master version settings Rest API
      description: Get existing settings for master version
      operationId: getSettings
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsInfoDto'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/forms:
    get:
      tags:
        - Registry regulations Master version Forms management Rest API
      description: Get lest of forms for master version
      operationId: getFormsFromMaster
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormDetailsShort'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/data-model/tables:
    get:
      tags:
        - Registry regulations master version data-model tables file management Rest API
      description: Get data-model tables file content from master version
      operationId: getTablesFileContent
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/xml: {}
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Tables file doesn't exists in master version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/business-processes:
    get:
      tags:
        - Registry regulations master Business processes management Rest API
      description: Get business processes list for master version
      operationId: getBusinessProcessesFromMaster
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessDetailsShort'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/master/business-process-groups:
    get:
      tags:
        - Registry regulations Master version Groups management Rest API
      description: Get business process groups for master version
      operationId: getBusinessProcessGroups
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessGroupsResponse'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}:
    get:
      tags:
        - Registry regulations version-candidate management Rest API
      description: Acquire version-candidate full details
      operationId: getVersionDetails
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version-candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfoDetailed'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/tables:
    get:
      tags:
        - Registry regulations version-candidate tables management Rest API
      description: Get tables list from version-candidate
      operationId: getTables_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TableInfoShort'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Version-candidate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/tables/{tableName}:
    get:
      tags:
        - Registry regulations version-candidate tables management Rest API
      description: Get specific table full details from version-candidate
      operationId: getTable_1
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: tableName
          in: path
          description: Table name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableInfo'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Version candidate or table not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/forms:
    get:
      tags:
        - Registry regulations version-candidate Forms management Rest API
      description: Acquire list of forms for specific version-candidate
      operationId: getFormsByVersionId
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormDetailsShort'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/changes:
    get:
      tags:
        - Registry regulations version-candidate management Rest API
      description: Get version changes by version-candidate id
      operationId: getVersionChanges
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionChangesInfo'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /versions/candidates/{versionCandidateId}/business-processes:
    get:
      tags:
        - Registry regulations version-candidate Business processes management Rest API
      description: Get business processes list
      operationId: getBusinessProcessesBuVersionId
      parameters:
        - name: X-Access-Token
          in: header
          description: Token used for endpoint security
          required: true
          schema:
            type: string
        - name: versionCandidateId
          in: path
          description: Version candidate identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessDetailsShort'
        '401':
          description: Unauthorized
          content:
            application/json: {}
        '403':
          description: Forbidden
          content:
            application/json: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
  /batch-loads/users/{id}:
    delete:
      tags:
        - Users bulk upload RestAPI
      description: Delete file endpoint
      operationId: deleteFile
      parameters:
        - name: id
          in: path
          description: Resource identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CephFileInfoDto'
components:
  schemas:
    DetailedErrorResponse:
      required:
        - code
        - details
        - traceId
      type: object
      properties:
        traceId:
          type: string
          description: Request identifier
        code:
          type: string
          description: Error code
        details:
          type: string
          description: Error details
        localizedMessage:
          type: string
          description: Localized error message
    SettingsInfoDto:
      type: object
      properties:
        titleFull:
          type: string
        title:
          type: string
        themeFile:
          type: string
        supportEmail:
          type: string
    Inspection:
      required:
        - inspector
        - name
        - result
        - resultDetails
      type: object
      properties:
        name:
          type: string
          description: Name of inspection
        inspector:
          type: string
          description: Person who performed inspection
        result:
          type: string
          description: Inspection result
          enum:
            - PENDING
            - SUCCESS
            - FAILED
        resultDetails:
          type: string
          description: Inspection result detailsN
      description: Version candidate inspections
    Validation:
      required:
        - name
        - result
        - resultDetails
        - type
      type: object
      properties:
        name:
          type: string
          description: Validation name
        type:
          type: string
          description: Validation type
          enum:
            - REGULATION_INTEGRITY
            - TEST
            - DEPLOYMENT_STATUS
        result:
          type: string
          description: Validation result
          enum:
            - PENDING
            - SUCCESS
            - FAILED
        resultDetails:
          type: string
          description: Validation result details
      description: Version candidate validations
    VersionInfoDetailed:
      required:
        - author
        - creationDate
        - hasConflicts
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: Version candidate identifier
        name:
          type: string
          description: Version candidate name
        description:
          type: string
          description: Version candidate description
        author:
          type: string
          description: Version candidate author
        creationDate:
          type: string
          description: Version candidate creation time
          format: date-time
        latestUpdate:
          type: string
          description: Version candidate update time
          format: date-time
        latestRebase:
          type: string
          description: Version candidate last rebase time
          format: date-time
        hasConflicts:
          type: boolean
          description: Version candidate conflicts flag
        inspections:
          type: array
          description: Version candidate inspections
          items:
            $ref: '#/components/schemas/Inspection'
        validations:
          type: array
          description: Version candidate validations
          items:
            $ref: '#/components/schemas/Validation'
    CreateVersionRequest:
      required:
        - description
        - name
      type: object
      properties:
        name:
          type: string
          description: Name from request
        description:
          type: string
          description: Description from request
    GroupDetails:
      type: object
      properties:
        name:
          type: string
        processDefinitions:
          type: array
          items:
            type: string
    GroupListDetails:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDetails'
        ungrouped:
          type: array
          items:
            type: string
    CephFileInfoDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        size:
          type: integer
          format: int64
    SecurityContext:
      type: object
      properties:
        accessToken:
          type: string
    MasterVersionInfoDetailed:
      type: object
      properties:
        id:
          type: string
          description: Last version candidate identifier
        name:
          type: string
          description: Last version candidate name
        description:
          type: string
          description: Last version candidate description
        author:
          type: string
          description: Last version candidate author
        latestUpdate:
          type: string
          description: Last version candidate update time
          format: date-time
        published:
          type: boolean
          description: Last version candidate publication flag
        inspector:
          type: string
          description: Last version candidate inspector
        validations:
          type: array
          description: Last version candidate validations
          items:
            $ref: '#/components/schemas/Validation'
        status:
          type: string
          description: Last version candidate status
    TableInfoShort:
      required:
        - name
        - objectReference
      type: object
      properties:
        name:
          type: string
          description: Table name
        objectReference:
          type: boolean
          description: Flag that indicates that the entity is an object in the subject data-model
        description:
          type: string
          description: Table description
          nullable: true
    Column:
      required:
        - name
        - sorting
      type: object
      properties:
        name:
          type: string
          description: Name of the column from current table
        sorting:
          type: string
          description: Column index sorting
          enum:
            - ASC
            - DESC
            - NONE
      description: Array of index columns
    ColumnPair:
      required:
        - sourceColumnName
        - targetColumnName
      type: object
      properties:
        sourceColumnName:
          type: string
          description: Name of the column from current table
        targetColumnName:
          type: string
          description: Name of the column from target table
      description: List of related column pairs
    ColumnShortInfo:
      required:
        - name
        - notNullFlag
        - type
      type: object
      properties:
        name:
          type: string
          description: Table column name
        description:
          type: string
          description: Table column description
        type:
          type: string
          description: Table column data type
        defaultValue:
          type: string
          description: Table column default value
        notNullFlag:
          type: boolean
          description: Flag that indicates if table column can not be nullable
      description: Current table column map
    ForeignKeyShortInfo:
      required:
        - name
        - targetTable
      type: object
      properties:
        name:
          type: string
          description: Table foreign key name
        targetTable:
          type: string
          description: Foreign key target table name
        columnPairs:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ColumnPair'
      description: Current table foreign key map
    IndexShortInfo:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Table index name
        columns:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Column'
      description: Current table index map (unique constraints and primary key excluded)
    PrimaryKeyConstraintShortInfo:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Table index name
        columns:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Column'
      description: Current table primary key index
    TableInfo:
      required:
        - columns
        - name
        - objectReference
      type: object
      properties:
        name:
          type: string
          description: Table name
        objectReference:
          type: boolean
          description: Flag that indicates that the entity is an object in the subject data-model
        description:
          type: string
          description: Table description
          nullable: true
        columns:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColumnShortInfo'
          description: Current table column map
        foreignKeys:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ForeignKeyShortInfo'
          description: Current table foreign key map
        primaryKey:
          $ref: '#/components/schemas/PrimaryKeyConstraintShortInfo'
        uniqueConstraints:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UniqueConstraintShortInfo'
          description: Current table unique constraint index map (primary key excluded)
        indices:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndexShortInfo'
          description: Current table index map (unique constraints and primary key excluded)
    UniqueConstraintShortInfo:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Table index name
        columns:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Column'
      description: Current table unique constraint index map (primary key excluded)
    FormDetailsShort:
      required:
        - created
        - name
        - title
      type: object
      properties:
        name:
          type: string
          description: Form service name
        title:
          type: string
          description: Form name
        created:
          type: string
          description: Form creation date
          format: date-time
        updated:
          type: string
          description: Form updated date
          format: date-time
    BusinessProcessDetailsShort:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    BusinessProcessDefinition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    BusinessProcessGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDetailsResponse'
        ungrouped:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessDefinition'
    GroupDetailsResponse:
      type: object
      properties:
        name:
          type: string
        processDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessDefinition'
    VersionInfo:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          description: Version candidate identifier
        name:
          type: string
          description: Version candidate name
        description:
          type: string
          description: Version candidate description
    DataModelChangesInfo:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Data model file name
        fileType:
          type: string
          description: Data model file type.
          enum:
            - TABLES_FILE
        status:
          type: string
          description: Data model file status. It's NEW or CHANGED
          enum:
            - NEW
            - CHANGED
        conflicted:
          type: boolean
          description: Is data model has conflicts
          nullable: true
      description: List of changed data-model files
    EntityChangesInfo:
      required:
        - name
        - status
        - title
      type: object
      properties:
        name:
          type: string
          description: Changed entity name
        title:
          type: string
          description: Changed entity title
        status:
          type: string
          description: Entity status. It's NEW, CHANGED or DELETED
          enum:
            - NEW
            - CHANGED
            - DELETED
        conflicted:
          type: boolean
          description: Is entity has conflicts
          nullable: true
      description: List of changed groups
    VersionChangesInfo:
      required:
        - changedBusinessProcesses
        - changedDataModelFiles
        - changedForms
        - changedGroups
      type: object
      properties:
        changedForms:
          type: array
          description: List of changed forms
          items:
            $ref: '#/components/schemas/EntityChangesInfo'
        changedBusinessProcesses:
          type: array
          description: List of changed business processes
          items:
            $ref: '#/components/schemas/EntityChangesInfo'
        changedDataModelFiles:
          type: array
          description: List of changed data-model files
          items:
            $ref: '#/components/schemas/DataModelChangesInfo'
        changedGroups:
          type: array
          description: List of changed groups
          items:
            $ref: '#/components/schemas/EntityChangesInfo'
