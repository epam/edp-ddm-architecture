@startuml
skinparam shadowing false
skinparam DatabaseBackgroundColor white
skinparam DatabaseBorderColor #2688d4
skinparam QueueBackgroundColor white
skinparam QueueBorderColor #2688d4
skinparam NoteBackgroundColor white
skinparam NoteBorderColor #2688d4
skinparam ActorBackgroundColor white
skinparam ControlBackgroundColor white
skinparam ControlBorderColor #2688d4
skinparam sequence {
    ArrowColor #2688d4
    ActorBorderColor #2688d4
    LifeLineBorderColor #2688d4
    ParticipantBorderColor #2688d4
    ParticipantBackgroundColor white
    BoxBorderColor #2688d4
    BoxBackgroundColor white
}

actor "Адміністратор \nрегламенту" as registry_admin
participant "Сервіс перегляду \nта інспекції змін \nрегламенту \n(**gerrit**)" as gerrit
database "Репозиторій \nрегламенту \n(**git**)" as regulation_repository
box Registry Jenkins
control "Пайплайн \nпублікації змін регламенту" as publication_pipeline
end box
participant "Утиліта \nпублікації шаблонів \n(**notification-template-publisher**)" as template_publisher
participant "Сервіс відправки \nповідомлень користувачам\n(**notification-service**)" as notification_service
participant "Diia Notification \nTemplate Service" as diia_template_service
participant "Шлюз нотифікацій Дія\n(**diia-notification-service**)" as diia_notification_service
database "Сховище шаблонів \n(**citus**)" as template_database

registry_admin -> gerrit: Формування запиту \nна внесення змін \nдо шаблонів
activate gerrit
  gerrit -> gerrit: Інспекція змін
  gerrit -> regulation_repository: Інтеграція змін \nдо основної гілки
  regulation_repository --> gerrit
  gerrit --> registry_admin
deactivate gerrit

publication_pipeline -> regulation_repository: Відслідковування змін \n в '**/notifications/**'
activate publication_pipeline
  publication_pipeline -> publication_pipeline: Формування переліку \nнових/змінених шаблонів
  publication_pipeline -> template_publisher: Публікація \nнових/змінених шаблонів \n**[email|diia|inbox]**
  activate template_publisher
    loop Для кожного нового/зміненого шаблону
      template_publisher -> template_publisher: Завантаження мета-даних шаблону \n**<channel>/<template_name>/notification.yml**
      template_publisher -> template_publisher: Завантаження шаблону та пов'язаних ресурсів \nз директорії шаблону \n**<channel>/<template_name>**
      alt channel=email
        template_publisher -> template_publisher: Побудова об'єктної моделі \nHTML-документу шаблону \nна базі "template.ftlh" файлу
        template_publisher -> template_publisher: Інтеграція зовнішніх ресурсів зображень \nяк частини єдиного HTML-документу шаблону \n(data:image/jpeg;base64)
        template_publisher -> template_publisher: Інтеграція стилів (css/style.css) \nяк частини єдиного HTML-документу шаблону
        template_publisher -> template_publisher: Формування результуючого \nHTML-документу шаблону
      end
      template_publisher -> template_publisher: Побудова запиту в залежності \nвід наявності додаткових атрибутів шаблону,\nвказаних у "notification.yml" файлі

      template_publisher -> notification_service: Створення або зміна шаблону \n**PUT /api/notifications/{channel}:{name}**
      note left
        {
          "title": "{title}",
          "content": "{template content}",
          "attributes": // приклад секції для "diia" канала
            {
              "name": "actionType",
              "value": "message"
            },
            {
              "name": "templateType",
              "value": "attention"
            },
            {
              "name": "shortText",
              "value": "{shortText}"
            }
          ]
        }
      end note
      activate notification_service
        notification_service -> notification_service: Валідація запиту на створення/зміну шаблону

        alt Валідацію запиту не пройдено
          notification_service --> template_publisher: 400 - Помилка валідації
        end

        notification_service -> notification_service: Калькуляція SHA-256 чек-суми \nна контент шаблону
        notification_service -> template_database: Отримання запису про шаблон \nза критеріями (**channel, name**)
        template_database --> notification_service: Запис шаблону
        note left
          {
              "id": "{UUID}",
              "name": "{template_name}",
              "title": "{title}",
              "channel:": "{channel}",
              "content:": "{content}",
              "checksum": "{sha256-hash}",
              "createdAt": "{timestamp}",
              "updatedAt": "{timestamp}",
              "externalTemplateId": "{external_id}",
              "externallyPublishedAt": "{timestamp}",
              "attributes": [
                {
                  "name": "{attr_name}",
                  "name": "{attr_value}"
                }
              ]
          }
        end note
        alt Запис шаблону не знайдено
          notification_service -> notification_service: Побудова нового запису шаблону для збереження \nна базі тіла запиту

          alt channel=diia
            notification_service -> diia_template_service: Аутентифікація партнера
            diia_template_service -> diia_notification_service: Аутентифікація партнера: \n**GET /api/v1/auth/partner/{partnerToken}**
            diia_notification_service --> diia_template_service: Токен доступу
            note right
              {
                "token": "<authorization token>"
              }
            end note
            diia_template_service --> notification_service: Токен доступу
            notification_service -> diia_template_service: Створення шаблону
            diia_template_service -> diia_notification_service: Створення шаблону \n**POST /api/v1/notification/template**
            note left
              {
                "actionType": ""{attributes['actionType']}"",
                "templateType": ""{attributes['templateType']}"",
                "title" : "{content}",
                "shortText" : "{attributes['shortText']}",
                "fullText" : "{content}"
              }
            end note
            diia_notification_service --> diia_template_service: Ідентифікатор шаблона
            note right
              {
                "templateId": "<external template id>"
              }
            end note
            diia_template_service --> notification_service: Ідентифікатор шаблона
            notification_service -> notification_service: Встановлення значення \n'externalTemplateId' для запису
            notification_service -> notification_service: Встановлення значення \n'externallyPublishedAt' для запису
          end
          notification_service -> template_database: Збереження нового запису шаблону
          template_database --> notification_service
          notification_service --> template_publisher
        else Запис знайдено
          notification_service -> notification_service: Перевірка повного співпадіння заголовків \nіснуючого шаблону та отриманого з запиту
          notification_service -> notification_service: Перевірка співпадіння SHA-256 чек-сум \nіснуючого контенту шаблону та отриманого з запиту
          notification_service -> notification_service: Перевірка повного співпадіння набору атрибутів \nіснуючого шаблону та отриманого з запиту
          alt Заголовки, чек-суми контенту або атрибути не співпадають
            notification_service -> notification_service: Побудова зміненого запису шаблону для збереження \nна базі тіла запиту
            alt channel=diia
              notification_service -> diia_template_service: Аутентифікація партнера
              diia_template_service -> diia_notification_service: Аутентифікація партнера: \n**GET /api/v1/auth/partner/{partnerToken}**
              diia_notification_service --> diia_template_service: Токен доступу
              diia_template_service --> notification_service: Токен доступу
              notification_service -> diia_template_service: Створення шаблону
              diia_template_service -> diia_notification_service: Створення шаблону \n**POST /api/v1/notification/template**
              diia_notification_service --> diia_template_service: Ідентифікатор шаблона
              diia_notification_service --> notification_service: Ідентифікатор шаблона
              notification_service -> notification_service: Встановлення значення \n'externalTemplateId' для запису
              notification_service -> notification_service: Встановлення значення \n'externallyPublishedAt' для запису
            end
            notification_service -> template_database: Збереження зміненого запису шаблону
            template_database --> notification_service
            notification_service --> template_publisher
          else Заголовки, чек-суми контенту та атрибути співпадають
            notification_service --> template_publisher
          end
        end
      end
    template_publisher --> publication_pipeline: Шаблони опубліковано
  deactivate template_publisher
deactivate publication_pipeline
@enduml