@startuml

abstract class  Validator {
  {abstract} validate()
}

class SignatureDrfoPresenceValidator extends Validator{
  validate()
 }
class SignatureEdrpouPresenceValidator extends Validator{
  validate()
 }
class SignatureFullNamePresenceValidator extends Validator{
  validate()
 }
class SignatureTimeInfoPresenceValidator extends Validator{
  validate()
 }
class SignatureTimeValidator extends Validator{
  validate()
 }
class SignatureDrfoMatchValidator extends Validator{
  validate()
 }
class SignatureEdrpouMatchValidator extends Validator{
  validate()
 }
class SignatureFullNameMatchValidator extends Validator{
  validate()
 }

interface SignatureService {
  ValidationResult verifyOfficer(String xAccessToken, String data, String signature);
  ValidationResult verifyCitizen(String xAccessToken, String data, String signature, List<Subject> allowedSubjects);
  ValidationResult verifySeal(String data, String signature) throws Exception;
  SignResponseDto sign(String data) throws Exception
  OwnerResponseDto getOwner(String data, String signature);
}

SignatureService *-- Validator

@enduml