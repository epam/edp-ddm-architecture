@startuml
skinparam monochrome true

participant "Користувач" as user
participant "Клієнтський додаток\n кабінету користувача" as cabinet
participant "Kong \nAPI Management" as kong
participant "Сервіс \nцифрових документів" as digital_documents
participant "Сервіс \nвиконання \nбізнес-процесів" as bpms
participant "Сервіс \nмета-даних \nUI-форм" as form_provider
participant "Об'єктне сховище Ceph \n(бакет: lowcode-file-storage)" as lowcode_ceph_bucket
skinparam responseMessageBelowArrow true

title Сценарії взаємодії з сервісом цифрових документів

=== Завантаження документу ===

user -> cabinet: Завантаження цифрового документа
activate cabinet
  cabinet -> kong: Запит на завантаження файлу: \nPOST "/documents/{processInstanceId}/{taskId}/{fieldName}" \n* Ідентифікатор сесії Kong; \n* Мета-атрибути файлу; \n* Бінарний контент файлу;
  activate kong
    kong -> kong: Перевірка наявності сесії \nавтентифікованого користувача
    kong -> digital_documents: Запит на завантаження файлу: \nPOST "/documents/{processInstanceId}/{taskId}/{fieldName}" \n* X-Access-Token; \n* Мета-атрибути файлу; \n* Бінарний контент файлу;
    activate digital_documents
      digital_documents -> bpms: Отримання даних про задачу за {taskId}
      bpms --> digital_documents: <task, processInstanceId, formKey>
      digital_documents -> bpms: Отримання даних про стан процесу за {processInstanceId}
      bpms --> digital_documents: <process>
      digital_documents -> digital_documents: Перевірка, що задача належить вказаному процесу
      digital_documents -> digital_documents: Перевірка, що процес в AСTIVE стані
      digital_documents -> digital_documents: Перевірка, що користувач є assignee задачі
      alt Помилка авторизації
        digital_documents --> cabinet: 403
        cabinet --> user: Передача управління
      end
      digital_documents -> form_provider: Запит на отримання мета-даних UI-форми за {formKey}
      note right digital_documents
        {
          "components": [
            {
              "label": "<file_property_label>",
              "storage": "url",
              "key": "<file_property_name>",
              "type": "file",
              "url": "/documents",
              "input": true
            }
          ]
        }
      end note
      form_provider --> digital_documents: JSON-документ опису UI-форми
      digital_documents -> digital_documents: Пошук опису поля за key={fieldName} в мета-даних форми
      alt Опис поля з key={fieldName} не знайдено для форми задачі
        digital_documents --> cabinet: 403: Доступ заборонено
        cabinet --> user: Передача управління
      end
      digital_documents -> digital_documents: Валідація документа
      digital_documents -> digital_documents: Визначення ім'я, типу та розміру файлу <filename, type, size>
      digital_documents -> digital_documents: Зчитати бінарний контент файлу
      digital_documents -> digital_documents: Згенерувати геш файлу за SHA256 алгоритмом
      digital_documents -> digital_documents: Згенерувати id документу для збержеення у мета-даних
      digital_documents -> digital_documents: Згенерувати ключ Ceph-об'єкта на базі {processInstanceId} та {id}
      digital_documents -> lowcode_ceph_bucket: Створити Ceph об'єкт цифрового документа: \nputObject(bucketName, key, input, metadata)
      lowcode_ceph_bucket --> digital_documents: Результат виконання операції
      digital_documents -> digital_documents: Підготовка відповіді з мета-даними збереженого документу
    digital_documents --> kong: 200 OK: <id, url, name, size, type, checksum>
    deactivate digital_documents
    kong -> cabinet: 200 OK: <id, url, name, size, type, checksum>
  deactivate kong
  cabinet --> user: Передача управління
deactivate cabinet

=== Вивантаження документу ===

user -> cabinet: Вивантаження цифрового документа
activate cabinet
  cabinet -> kong: Запит на вивантаження файлу: \nGET "/documents/{processInstanceId}/{taskId}/{fieldName}/{id}" \n* Ідентифікатор сесії Kong;
  activate kong
    kong -> kong: Перевірка наявності сесії \nавтентифікованого користувача
    kong -> digital_documents: Запит на вивантаження файлу: \nGET "/documents/{processInstanceId}/{taskId}/{fieldName}/{id}" \n* X-Access-Token;
    activate digital_documents
      digital_documents -> bpms: Отримання даних про задачу за {taskId}
      bpms --> digital_documents: <task, processInstanceId, formKey>
      digital_documents -> bpms: Отримання даних про стан процесу за {processInstanceId}
      bpms --> digital_documents: <process>
      digital_documents -> digital_documents: Перевірка, що задача належить вказаному процесу
      digital_documents -> digital_documents: Перевірка, що процес в AСTIVE стані
      digital_documents -> digital_documents: Перевірка, що користувач є assignee задачі
      alt Помилка авторизації
        digital_documents --> cabinet: 403
        cabinet --> user: Передача управління
      end
      digital_documents -> form_provider: Запит на отримання мета-даних UI-форми за {formKey}
      note right digital_documents
        {
          "components": [
            {
              "label": "<file_property_label>",
              "storage": "url",
              "key": "<file_property_name>",
              "type": "file",
              "url": "/documents",
              "input": true
            }
          ]
        }
      end note
      form_provider --> digital_documents: JSON-документ опису UI-форми
      digital_documents -> digital_documents: Пошук опису поля за key={fieldName} в мета-даних форми
      alt Опис поля з key={fieldName} не знайдено для форми задачі
        digital_documents --> cabinet: 403: Доступ заборонено
        cabinet --> user: Передача управління
      end
      digital_documents -> digital_documents: Формування ключа для отримання Ceph-об'єкта \nна базі {processInstanceId} та {id}
      digital_documents -> lowcode_ceph_bucket: Зчитати Ceph об'єкт цифрового документа: \ngetObject(bucketName, key)
      lowcode_ceph_bucket --> digital_documents: Ceph-об'єкт
      digital_documents -> digital_documents: Зчитати мета-дані документу (id, type, size, checksum)
      digital_documents -> digital_documents: Згенерувати url для подальшого отримання документу
      digital_documents -> digital_documents: Встановити Response мета-дані (type, size)
      digital_documents -> digital_documents: Отримати ObjectInputStream
      digital_documents -> digital_documents: Зформувати відповідь з використанням стримінгу даних: \nObjectInputStream.transferTo(StreamingResponseBody)
    digital_documents --> kong: 200 OK: <binary content>
    deactivate digital_documents
    kong -> cabinet: 200 OK: <binary content>
  deactivate kong
  cabinet --> user: Цифровий документ
deactivate cabinet

@enduml