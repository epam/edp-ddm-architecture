openapi: 3.0.3
info:
  title: Digital document service API
  description: This document describes REST API of 'Digital document service'
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: digital-document-service-api
  description: Digital document service Rest API
- name: digital-document-service-internal-api-v2
  description: Digital document service internal Rest API
- name: digital-document-service-internal-api
  description: Digital document service internal Rest API
paths:
  /internal-api/v2/documents/{rootProcessInstanceId}:
    post:
      tags:
      - digital-document-service-internal-api-v2
      summary: Upload MultiPart document
      description: |-
        ### Endpoint purpose:
         This endpoint allows to upload a document as part of a specified process instance. It accepts a multi-part file and an optional file name. The uploaded document's metadata is returned upon successful storage.
        ### Validation:
         The file size should not exceed the system limit; otherwise, a _413 Payload Too Large_ status code is returned. For batch file uploads, the total file size should not exceed the expected limit. Media type validation accepts the following formats: PDF, PNG, JPG/JPEG, CSV, ASICs, P7S. If a different format is used, a _422 Unprocessable Entity_ status code is returned.
      operationId: upload
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: filename
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data: {}
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: "Document uploaded, returns uploaded document metadata"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalApiDocumentMetadataDto'
              example: |-
                {
                  "id": "my-file-id",
                  "name": "my-file-name.pdf",
                  "type": "application/pdf",
                  "checksum": "039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81",
                  "size": 3,
                }
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "415":
          description: Unsupported Media Type
          content:
            application/json: {}
        "422":
          description: Unprocessable Entity
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /internal-api/documents/{rootProcessInstanceId}:
    post:
      tags:
      - digital-document-service-internal-api
      summary: Upload document
      description: |-
        ### Endpoint purpose:
         This endpoint downloads document from remote URL passed in request body and using root process instance ID to save document. It returns the uploaded document's metadata.
        ### Validation:
         The file size should not exceed the system limit; otherwise, a _413 Payload Too Large_ status code is returned. Media type validation accepts the following formats: PDF, PNG, JPG/JPEG, CSV, ASICs, P7S. If a different format is used, a _422 Unprocessable Entity_ status code is returned.
      operationId: upload_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteDocumentDto'
            example: |-
              {
                "remoteFileLocation": "https://somefilelocation.com",
                "filename": "my-file-name.png",
              }
        required: true
      responses:
        "200":
          description: Returns uploaded document metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RemoteDocumentMetadataDto'
              example: |-
                {
                  "id": "my-file-id",
                  "name": "my-file-name.png",
                  "type": "image/png",
                  "checksum": "039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81",
                  "size": 3,
                }
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "415":
          description: Unsupported Media Type
          content:
            application/json: {}
        "422":
          description: Unprocessable Entity. Can happen when remote file size more
            than allowed.
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /documents/{rootProcessInstanceId}/{taskId}/{fieldName}:
    post:
      tags:
      - digital-document-service-api
      summary: Upload document in business process
      description: |-
        ### Endpoint purpose:
         This endpoint allows to upload a document as part of a specified process instance and task. It accepts a multi-part file and associated parameters, such as the task ID, form field name, and an optional file name. The uploaded document's metadata is returned upon successful storage.
        ### Authorization:
         This endpoint requires valid user authentication. To access this endpoint, the request must include a valid access token in the _X-Access-Token_ header, otherwise, the API will return a _401 Unauthorized_ status code. Also if _rootProcessInstanceId_ not in task, which retrieved by _taskId_, or task is suspended, or assignee of task is not the same as provided in _X-Access-Token_ then _403_ status code returned.
        ### Validation:
         This endpoint requires a valid _fieldName_. If the provided field name is not found in the form related to the user task retrieved by _taskId_, a _422_ status code is returned. The file size should not exceed the system limit; otherwise, a _413 Payload Too Large_ status code is returned. For batch file uploads, the total file size should not exceed the expected limit. Media type validation accepts the following formats: PDF, PNG, JPG/JPEG, CSV, ASICs, P7S. If a different format is used, a _422 Unprocessable Entity_ status code is returned.
      operationId: upload_2
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      - name: fieldName
        in: path
        required: true
        schema:
          type: string
      - name: filename
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data: {}
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: "Document uploaded, returns uploaded document metadata"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDto'
              example: |-
                {
                  "id": "my-file-id",
                  "url": "https://my-file-url",
                  "name": "my-file-name.pdf",
                  "type": "application/pdf",
                  "checksum": "039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81",
                  "size": 3,
                }
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden. Validation of rootProcessInstanceId or taskId not
            passed.
          content:
            application/json: {}
        "413":
          description: Payload Too Large. Uploaded document size more than allowed.
          content:
            application/json: {}
        "415":
          description: Unsupported Media Type
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /documents/{rootProcessInstanceId}/{taskId}/search:
    post:
      tags:
      - digital-document-service-api
      summary: Search documents metadata
      description: |-
        ### Endpoint purpose:
         This endpoint allows to search for document metadata associated with a specified process instance and task. Document IDs and field names are provided in the request body, and a list of matching document metadata is returned. Server returns every metadata that found and missing files are ignored.
        ### Authorization:
         This endpoint requires valid user authentication. To access this endpoint, the request must include a valid access token in the _X-Access-Token_ header, otherwise, the API will return a _401 Unauthorized_ status code. Also if _rootProcessInstanceId_ not in task, which retrieved by _taskId_, or task is suspended, or assignee of task is not the same as provided in _X-Access-Token_ then _403_ status code returned. This endpoint requires a valid _fieldName_. If the provided field name is not found in the form related to the user task retrieved by _taskId_, a _403_ status code is returned.
      operationId: searchMetadata
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: x-forwarded-host
        in: header
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteDocumentDto'
            example:
            - id: file-id-1
              fieldName: form-field-name-1
            - id: file-id-2
              fieldName: form-field-name-2
        required: true
      responses:
        "200":
          description: Returns list of document metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentMetadataDto'
              example:
              - id: file-id-1
                url: https://my-file-url
                name: my-file-name.pdf
                type: application/pdf
                checksum: 039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81
                size: 3
              - id: file-id-2
                url: https://my-file-url2
                name: my-file-name2.pdf
                type: application/pdf
                checksum: 039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81
                size: 5
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden. Validation of rootProcessInstanceId or taskId not
            passed.
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /internal-api/documents/{rootProcessInstanceId}/{id}:
    get:
      tags:
      - digital-document-service-internal-api
      summary: Download document by id
      description: |-
        ### Endpoint purpose:
         This endpoint allows to download a document associated with a specified process instance and document ID. The document is returned as a downloadable resource.
      operationId: download
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns uploaded document metadata
          content:
            application/octet-stream: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "404":
          description: Not Found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /internal-api/documents/{rootProcessInstanceId}/{id}/metadata:
    get:
      tags:
      - digital-document-service-internal-api
      summary: Get document metadata by id
      description: |-
        ### Endpoint purpose
         This endpoint allows users to retrieve document metadata based on a specific document ID associated with a given root process instance. Document metadata includes information such as the document's name, content type, size, and other relevant details.
      operationId: getMetadata
      parameters:
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns uploaded document metadata
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalApiDocumentMetadataDto'
              example: |-
                {
                  "id": "my-file-id",
                  "name": "my-file-name.png",
                  "type": "image/png",
                  "checksum": "039058c6f2c0cb492c533b0a4d14ef77cc0f78abccced5287d84a1a2011cfb81",
                  "size": 3,
                }
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /documents/{rootProcessInstanceId}/{taskId}/{fieldName}/{id}:
    get:
      tags:
      - digital-document-service-api
      summary: Download document
      description: |-
        ### Endpoint purpose:
         This endpoint allows users to download a document associated with a specified process instance, task, field, and document ID. The document is returned as a downloadable resource.
        ### Authorization:
         This endpoint requires valid user authentication. To access this endpoint, the request must include a valid access token in the _X-Access-Token_ header, otherwise, the API will return a _401 Unauthorized_ status code. Also if _rootProcessInstanceId_ not in task, which retrieved by _taskId_, or task is suspended, or assignee of task is not the same as provided in _X-Access-Token_ then _403_ status code returned. This endpoint requires a valid _fieldName_. If the provided field name is not found in the form related to the user task retrieved by _taskId_, a _403_ status code is returned.
      operationId: download_1
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      - name: fieldName
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Document is returned
          content:
            application/octet-stream: {}
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden. Validation of rootProcessInstanceId or taskId not
            passed.
          content:
            application/json: {}
        "404":
          description: Document not found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /documents/{rootProcessInstanceId}:
    delete:
      tags:
      - digital-document-service-api
      summary: Delete all documents by process instance ID
      description: |-
        ### Endpoint purpose:
         This endpoint is intended for internal system use only and should be restricted to the internal network. It allows the deletion of all documents associated with the specified business process, typically for cleaning temporary data.
      operationId: delete
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Documents deleted successfully.
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
  /documents/{rootProcessInstanceId}/{taskId}/{fieldName}/{fileId}:
    delete:
      tags:
      - digital-document-service-api
      summary: Delete document by id
      description: |-
        ### Endpoint purpose:
         This endpoint allows the deletion of a specific document associated with the specified process instance ID, task ID, field name, and file ID.
        ### Authorization:
         This endpoint requires valid user authentication. To access this endpoint, the request must include a valid access token in the _X-Access-Token_ header, otherwise, the API will return a _401 Unauthorized_ status code. Also if _rootProcessInstanceId_ not in task, which retrieved by _taskId_, or task is suspended, or assignee of task is not the same as provided in _X-Access-Token_ then _403_ status code returned. This endpoint requires a valid _fieldName_. If the provided field name is not found in the form related to the user task retrieved by _taskId_, a _403_ status code is returned.
      operationId: deleteByFileId
      parameters:
      - name: X-Access-Token
        in: header
        description: Token used for endpoint security
        required: true
        schema:
          type: string
      - name: rootProcessInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        required: true
        schema:
          type: string
      - name: fieldName
        in: path
        required: true
        schema:
          type: string
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Document deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json: {}
        "403":
          description: Forbidden. Validation of rootProcessInstanceId or taskId not
            passed.
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json: {}
components:
  schemas:
    InternalApiDocumentMetadataDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        checksum:
          type: string
        size:
          type: integer
          format: int64
    RemoteDocumentDto:
      type: object
      properties:
        remoteFileLocation:
          type: string
          format: url
        filename:
          type: string
    RemoteDocumentMetadataDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        checksum:
          type: string
        size:
          type: integer
          format: int64
    DocumentMetadataDto:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        name:
          type: string
        type:
          type: string
        checksum:
          type: string
        size:
          type: integer
          format: int64
